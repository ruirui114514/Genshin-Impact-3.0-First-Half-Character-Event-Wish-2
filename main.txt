	.file	"main.cpp"
	.text
.Ltext0:
	.cfi_sections	.debug_frame
	.section .rdata,"dr"
_ZStL19piecewise_construct:
	.space 1
	.section	.text$_ZStanSt13_Ios_FmtflagsS_,"x"
	.linkonce discard
	.globl	_ZStanSt13_Ios_FmtflagsS_
	.def	_ZStanSt13_Ios_FmtflagsS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStanSt13_Ios_FmtflagsS_
_ZStanSt13_Ios_FmtflagsS_:
.LFB1117:
	.file 1 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/ios_base.h"
	.loc 1 76 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	.seh_endprologue
	movl	%ecx, 16(%rbp)
	movl	%edx, 24(%rbp)
	.loc 1 76 0
	movl	16(%rbp), %edx
	movl	24(%rbp), %eax
	andl	%edx, %eax
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1117:
	.seh_endproc
	.section	.text$_ZStorSt13_Ios_FmtflagsS_,"x"
	.linkonce discard
	.globl	_ZStorSt13_Ios_FmtflagsS_
	.def	_ZStorSt13_Ios_FmtflagsS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStorSt13_Ios_FmtflagsS_
_ZStorSt13_Ios_FmtflagsS_:
.LFB1118:
	.loc 1 80 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	.seh_endprologue
	movl	%ecx, 16(%rbp)
	movl	%edx, 24(%rbp)
	.loc 1 80 0
	movl	16(%rbp), %edx
	movl	24(%rbp), %eax
	orl	%edx, %eax
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1118:
	.seh_endproc
	.section	.text$_ZStcoSt13_Ios_Fmtflags,"x"
	.linkonce discard
	.globl	_ZStcoSt13_Ios_Fmtflags
	.def	_ZStcoSt13_Ios_Fmtflags;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStcoSt13_Ios_Fmtflags
_ZStcoSt13_Ios_Fmtflags:
.LFB1120:
	.loc 1 88 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	.seh_endprologue
	movl	%ecx, 16(%rbp)
	.loc 1 88 0
	movl	16(%rbp), %eax
	notl	%eax
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1120:
	.seh_endproc
	.section	.text$_ZStoRRSt13_Ios_FmtflagsS_,"x"
	.linkonce discard
	.globl	_ZStoRRSt13_Ios_FmtflagsS_
	.def	_ZStoRRSt13_Ios_FmtflagsS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStoRRSt13_Ios_FmtflagsS_
_ZStoRRSt13_Ios_FmtflagsS_:
.LFB1121:
	.loc 1 92 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	%edx, 24(%rbp)
	.loc 1 92 0
	movq	16(%rbp), %rax
	movl	(%rax), %eax
	movl	24(%rbp), %edx
	movl	%eax, %ecx
	call	_ZStorSt13_Ios_FmtflagsS_
	movl	%eax, %edx
	movq	16(%rbp), %rax
	movl	%edx, (%rax)
	movq	16(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1121:
	.seh_endproc
	.section	.text$_ZStaNRSt13_Ios_FmtflagsS_,"x"
	.linkonce discard
	.globl	_ZStaNRSt13_Ios_FmtflagsS_
	.def	_ZStaNRSt13_Ios_FmtflagsS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStaNRSt13_Ios_FmtflagsS_
_ZStaNRSt13_Ios_FmtflagsS_:
.LFB1122:
	.loc 1 96 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	%edx, 24(%rbp)
	.loc 1 96 0
	movq	16(%rbp), %rax
	movl	(%rax), %eax
	movl	24(%rbp), %edx
	movl	%eax, %ecx
	call	_ZStanSt13_Ios_FmtflagsS_
	movl	%eax, %edx
	movq	16(%rbp), %rax
	movl	%edx, (%rax)
	movq	16(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1122:
	.seh_endproc
	.section	.text$_ZStorSt13_Ios_OpenmodeS_,"x"
	.linkonce discard
	.globl	_ZStorSt13_Ios_OpenmodeS_
	.def	_ZStorSt13_Ios_OpenmodeS_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZStorSt13_Ios_OpenmodeS_
_ZStorSt13_Ios_OpenmodeS_:
.LFB1125:
	.loc 1 120 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	.seh_endprologue
	movl	%ecx, 16(%rbp)
	movl	%edx, 24(%rbp)
	.loc 1 120 0
	movl	16(%rbp), %edx
	movl	24(%rbp), %eax
	orl	%edx, %eax
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1125:
	.seh_endproc
	.section	.text$_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_,"x"
	.linkonce discard
	.align 2
	.globl	_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_
	.def	_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_
_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_:
.LFB1149:
	.loc 1 595 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movl	%edx, 24(%rbp)
	movl	%r8d, 32(%rbp)
.LBB2:
	.loc 1 597 0
	movq	16(%rbp), %rax
	movl	24(%rax), %eax
	movl	%eax, -4(%rbp)
	.loc 1 598 0
	movl	32(%rbp), %eax
	movl	%eax, %ecx
	call	_ZStcoSt13_Ios_Fmtflags
	movl	%eax, %edx
	movq	16(%rbp), %rax
	addq	$24, %rax
	movq	%rax, %rcx
	call	_ZStaNRSt13_Ios_FmtflagsS_
	.loc 1 599 0
	movl	32(%rbp), %edx
	movl	24(%rbp), %eax
	movl	%eax, %ecx
	call	_ZStanSt13_Ios_FmtflagsS_
	movl	%eax, %edx
	movq	16(%rbp), %rax
	addq	$24, %rax
	movq	%rax, %rcx
	call	_ZStoRRSt13_Ios_FmtflagsS_
	.loc 1 600 0
	movl	-4(%rbp), %eax
.LBE2:
	.loc 1 601 0
	addq	$48, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1149:
	.seh_endproc
	.section	.text$_ZSt5fixedRSt8ios_base,"x"
	.linkonce discard
	.globl	_ZSt5fixedRSt8ios_base
	.def	_ZSt5fixedRSt8ios_base;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt5fixedRSt8ios_base
_ZSt5fixedRSt8ios_base:
.LFB1179:
	.loc 1 959 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	.loc 1 960 0
	movl	$260, %r8d
	movl	$4, %edx
	movq	16(%rbp), %rcx
	call	_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_
	.loc 1 961 0
	movq	16(%rbp), %rax
	.loc 1 962 0
	addq	$32, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1179:
	.seh_endproc
	.section .rdata,"dr"
_ZStL13allocator_arg:
	.space 1
_ZStL6ignore:
	.space 1
	.section	.text$_ZSt12setprecisioni,"x"
	.linkonce discard
	.globl	_ZSt12setprecisioni
	.def	_ZSt12setprecisioni;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt12setprecisioni
_ZSt12setprecisioni:
.LFB5815:
	.file 2 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iomanip"
	.loc 2 196 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	.seh_endprologue
	movl	%ecx, 16(%rbp)
	.loc 2 196 0
	movl	16(%rbp), %eax
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5815:
	.seh_endproc
.lcomm _ZStL8__ioinit,1,1
	.section .rdata,"dr"
_ZStL10defer_lock:
	.space 1
_ZStL11try_to_lock:
	.space 1
_ZStL10adopt_lock:
	.space 1
	.globl	a
	.bss
	.align 8
a:
	.space 8
	.globl	wa
	.align 8
wa:
	.space 8
	.globl	san
	.align 8
san:
	.space 8
	.globl	ben
	.align 8
ben:
	.space 8
	.globl	file
	.align 8
file:
	.space 8
	.globl	ch
	.align 8
ch:
	.space 8
	.globl	showj
	.align 8
showj:
	.space 8
	.globl	showt
	.align 8
showt:
	.space 8
	.globl	type
	.align 8
type:
	.space 8
	.text
	.globl	_Z8setcolorii
	.def	_Z8setcolorii;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z8setcolorii
_Z8setcolorii:
.LFB9834:
	.file 3 "H:/\263\314\320\362/\324\255\311\3613.0\311\317\260\353\275\307\311\253\273\356\266\257\306\355\324\270-2/main.cpp"
	.loc 3 14 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.seh_pushreg	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	subq	$56, %rsp
	.seh_stackalloc	56
	.cfi_def_cfa_offset 80
	leaq	128(%rsp), %rbp
	.seh_setframe	%rbp, 128
	.cfi_def_cfa 6, -48
	.seh_endprologue
	movl	%ecx, -48(%rbp)
	movl	%edx, -40(%rbp)
.LBB3:
	.loc 3 15 0
	movl	-40(%rbp), %eax
	sall	$4, %eax
	movzbl	%al, %eax
	movl	-48(%rbp), %edx
	andl	$15, %edx
	addl	%edx, %eax
	movw	%ax, -82(%rbp)
	.loc 3 16 0
	movzwl	-82(%rbp), %ebx
	movl	$-11, %ecx
	movq	__imp_GetStdHandle(%rip), %rax
	call	*%rax
	movl	%ebx, %edx
	movq	%rax, %rcx
	movq	__imp_SetConsoleTextAttribute(%rip), %rax
	call	*%rax
	nop
.LBE3:
	.loc 3 17 0
	addq	$56, %rsp
	popq	%rbx
	.cfi_restore 3
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, -40
	ret
	.cfi_endproc
.LFE9834:
	.seh_endproc
	.globl	_Z2qudd
	.def	_Z2qudd;	.scl	2;	.type	32;	.endef
	.seh_proc	_Z2qudd
_Z2qudd:
.LFB9835:
	.loc 3 19 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movsd	%xmm0, 16(%rbp)
	movsd	%xmm1, 24(%rbp)
.LBB4:
	.loc 3 20 0
	movl	$1, -4(%rbp)
	.loc 3 21 0
	movq	24(%rbp), %rax
	movq	%rax, -40(%rbp)
	cvttsd2si	-40(%rbp), %eax
	movl	%eax, -8(%rbp)
	.loc 3 22 0
	jmp	.L21
.L22:
	.loc 3 23 0
	movl	-4(%rbp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	movl	%eax, -4(%rbp)
	.loc 3 24 0
	movl	-8(%rbp), %ecx
	movl	$1717986919, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$2, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -8(%rbp)
.L21:
	.loc 3 22 0
	cmpl	$0, -8(%rbp)
	jne	.L22
	.loc 3 26 0
	pxor	%xmm0, %xmm0
	cvtsi2sd	-4(%rbp), %xmm0
	movsd	24(%rbp), %xmm1
	divsd	%xmm0, %xmm1
	movapd	%xmm1, %xmm0
	addsd	16(%rbp), %xmm0
	movq	%xmm0, %rax
	movq	%rax, -16(%rbp)
	.loc 3 27 0
	movsd	-16(%rbp), %xmm0
	movsd	.LC0(%rip), %xmm1
	divsd	%xmm1, %xmm0
	cvttsd2si	%xmm0, %eax
	movl	%eax, -20(%rbp)
	.loc 3 28 0
	movl	-20(%rbp), %eax
	imull	$100, %eax, %eax
	pxor	%xmm0, %xmm0
	cvtsi2sd	%eax, %xmm0
	movsd	-16(%rbp), %xmm1
	subsd	%xmm0, %xmm1
	movapd	%xmm1, %xmm0
.LBE4:
	.loc 3 29 0
	addq	$48, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9835:
	.seh_endproc
	.def	__main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
	.align 8
.LC1:
	.ascii "title \324\255\311\361"
	.ascii "3.0\311\317\260\353\275\307\311\253\273\356\266\257\306\355\324\270-2\0"
.LC2:
	.ascii "114514\0"
.LC3:
	.ascii "-help\0"
.LC4:
	.ascii "README.md\0"
.LC5:
	.ascii "\263\314\320\362\327\367\325\337:bilibili\270\316\310\361\12\0"
	.align 8
.LC6:
	.ascii "\261\276\263\314\320\362\321\317\270\361\260\264\325\325\271\331\267\275\315\370\325\276\265\304\324\255\311\361\306\355\324\270\270\305\302\312\271\253\312\276\261\340\320\264\241\243\12\0"
	.align 8
.LC7:
	.ascii "\261\276\263\314\320\362\265\304\306\355\324\270\266\257\273\255\300\264\327\324bilibili \304\321\315\374\265\304\320\375\302\311official,\312\256\267\326\270\320\320\273!\12\12\0"
	.align 8
.LC8:
	.ascii "\310\347\271\373\262\273\314\370\271\375\266\257\273\255,\307\353\260\321\304\254\310\317\262\245\267\305\306\367\311\350\316\252Widows\327\324\264\370\265\304\"\265\347\323\260\272\315\265\347\312\323\"\241\243\12\0"
	.align 8
.LC9:
	.ascii "\263\351\277\250\274\307\302\274.txt\312\307\263\351\277\250\274\307\302\274,\273\266\323\255\264\362\277\252\262\351\277\264!\12\0"
	.align 8
.LC10:
	.ascii "\306\253\272\303\311\350\326\303\265\304\320\320\315\306\274\366"
	.ascii "114,\301\320\315\306\274\366"
	.ascii "25\12\12\0"
.LC11:
	.ascii "2022 \260\346\310\250\313\371\323\320 \265\301\260\346\261\330\276\277!\12\0"
.LC12:
	.ascii "del README.md\0"
.LC13:
	.ascii "pause\0"
.LC14:
	.ascii "-update\0"
.LC15:
	.ascii "update.bat\0"
	.align 8
.LC16:
	.ascii "del main.exe\12del 1b.mp4\12del 1p.mp4\12del 1g.mp4\12del 10p.mp4\12del 10g.mp4\12powershell curl -o 7z.exe https://github.com/ruirui114514/Genshin-Impact-3.0-First-Half-Character-Event-Wish-2/releases/download/v1.0/7z.exe\12powershell curl -o data.zip https://github.com/ruirui114514/Genshin-Impact-3.0-First-Half-Character-Event-Wish-2/releases/download/v1.0/data.zip\12set path=%~dp0\12"
	.ascii "7z.exe x %path%data.zip -o%path%\12del /f data.zip\0"
.LC17:
	.ascii "\307\353\264\362\277\252update.bat\322\324\270\374\320\302\241\243\12\0"
.LC19:
	.ascii "@echo off\0"
.LC20:
	.ascii "setting.txt\0"
.LC21:
	.ascii "wait:\0"
.LC22:
	.ascii "cols:\0"
.LC23:
	.ascii "lines:\0"
.LC24:
	.ascii "mode con cols=\0"
.LC25:
	.ascii " lines=\0"
.LC26:
	.ascii "data\0"
.LC27:
	.ascii "\320\264\317\302\304\343\265\304\303\373\327\326:\0"
.LC28:
	.ascii "-\0"
.LC30:
	.ascii "\304\343\272\303\0"
.LC31:
	.ascii ",\304\343\322\321\263\351\0"
.LC32:
	.ascii "\263\351\241\243\0"
.LC33:
	.ascii "\273\250\267\321\0"
.LC34:
	.ascii "\324\255\312\257\241\243\0"
.LC35:
	.ascii "\317\340\265\261\323\332\0"
.LC36:
	.ascii "\324\252,\273\362\0"
.LC37:
	.ascii "\270\366"
	.ascii "648\241\243\0"
.LC38:
	.ascii "\263\366\301\313\0"
.LC39:
	.ascii "\270\366\261\276\306\332\316\345\320\307\241\243\0"
.LC40:
	.ascii "\322\321\315\341\0"
.LC41:
	.ascii "\264\316\241\243\0"
	.align 8
.LC42:
	.ascii "1.\265\245\263\351  2.\312\256\301\254  3.\306\253\272\303\311\350\326\303  4.\311\276\263\375\300\372\312\267\262\242\315\313\263\366  5.\261\243\264\346\300\372\312\267\262\242\315\313\263\366\0"
.LC43:
	.ascii "\273\326\270\264\304\254\310\317?(y/n)\12\0"
.LC44:
	.ascii "wait: 0\12cols: 114\12lines: 25\0"
.LC45:
	.ascii "mode con cols=114 lines=25\0"
.LC46:
	.ascii "\263\351\277\250\266\257\273\255\262\245\267\305\312\261\274\344(ms):\0"
.LC47:
	.ascii "\316\336\320\247!\326\330\312\344:\0"
.LC48:
	.ascii "wait: \0"
.LC49:
	.ascii "\264\260\277\332\264\363\320\241(\301\320):\0"
.LC50:
	.ascii "lines: \0"
.LC51:
	.ascii "\264\260\277\332\264\363\320\241(\320\320):\0"
.LC52:
	.ascii "cols: \0"
.LC53:
	.ascii "cls\0"
.LC54:
	.ascii "del data\0"
.LC55:
	.ascii "del \263\351\277\250\274\307\302\274.txt\0"
.LC56:
	.ascii "\263\351\277\250\274\307\302\274.txt\0"
.LC57:
	.ascii " \0"
.LC58:
	.ascii " ( \0"
.LC59:
	.ascii " \320\307)\0"
.LC65:
	.ascii "1g.mp4\0"
.LC66:
	.ascii "10g.mp4\0"
.LC67:
	.ascii "1p.mp4\0"
.LC68:
	.ascii "10p.mp4\0"
.LC69:
	.ascii "1b.mp4\0"
.LC70:
	.ascii "start \0"
.LC71:
	.ascii "taskkill /f /im Video.UI.exe\0"
.LC72:
	.ascii "(3) \0"
.LC73:
	.ascii "(4) \0"
.LC74:
	.ascii "(5) \0"
	.text
	.globl	main
	.def	main;	.scl	2;	.type	32;	.endef
	.seh_proc	main
main:
.LFB9836:
	.loc 3 31 0
	.cfi_startproc
	.cfi_personality 0x9b,.LDFCM0
	.cfi_lsda 0x1c,.LLSDA9836
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%r14
	.seh_pushreg	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.seh_pushreg	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.seh_pushreg	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rdi
	.seh_pushreg	%rdi
	.cfi_def_cfa_offset 48
	.cfi_offset 5, -48
	pushq	%rsi
	.seh_pushreg	%rsi
	.cfi_def_cfa_offset 56
	.cfi_offset 4, -56
	pushq	%rbx
	.seh_pushreg	%rbx
	.cfi_def_cfa_offset 64
	.cfi_offset 3, -64
	subq	$2800, %rsp
	.seh_stackalloc	2800
	.cfi_def_cfa_offset 2864
	leaq	128(%rsp), %rbp
	.seh_setframe	%rbp, 128
	.cfi_def_cfa 6, 2736
	movaps	%xmm6, 2656(%rbp)
	.seh_savexmm	%xmm6, 2784
	.cfi_offset 23, -80
	.seh_endprologue
	movl	%ecx, 2736(%rbp)
	movq	%rdx, 2744(%rbp)
	.loc 3 31 0
	call	__main
.LBB5:
	.loc 3 32 0
	leaq	.LC1(%rip), %rcx
.LEHB0:
	call	system
.LEHE0:
	.loc 3 33 0
	leaq	2583(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	2583(%rbp), %rdx
	leaq	2560(%rbp), %rax
	movq	%rdx, %r8
	leaq	.LC2(%rip), %rdx
	movq	%rax, %rcx
.LEHB1:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE1:
	.loc 3 33 0 is_stmt 0 discriminator 1
	leaq	2583(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	.loc 3 34 0 is_stmt 1 discriminator 1
	cmpl	$2, 2736(%rbp)
	jne	.L25
	.loc 3 35 0
	movq	2744(%rbp), %rax
	addq	$8, %rax
	movq	(%rax), %rdx
	leaq	2560(%rbp), %rax
	movq	%rax, %rcx
.LEHB2:
	call	_ZNSsaSEPKc
.L25:
.LBB6:
	.loc 3 37 0
	leaq	2560(%rbp), %rax
	leaq	.LC3(%rip), %rdx
	movq	%rax, %rcx
	call	_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_
	testb	%al, %al
	je	.L26
.LBB7:
	.loc 3 38 0
	movq	a(%rip), %rax
	testq	%rax, %rax
	je	.L27
	.loc 3 38 0 is_stmt 0 discriminator 1
	movq	a(%rip), %rax
	movq	a(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L29:
	.loc 3 38 0 discriminator 5
	movq	a(%rip), %rax
	cmpq	%rax, %rbx
	je	.L28
	.loc 3 38 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L29
.L28:
	.loc 3 38 0 discriminator 3
	movq	a(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L27:
	.loc 3 39 0 is_stmt 1
	movq	wa(%rip), %rax
	testq	%rax, %rax
	je	.L30
	.loc 3 39 0 is_stmt 0 discriminator 1
	movq	wa(%rip), %rax
	movq	wa(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L32:
	.loc 3 39 0 discriminator 5
	movq	wa(%rip), %rax
	cmpq	%rax, %rbx
	je	.L31
	.loc 3 39 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L32
.L31:
	.loc 3 39 0 discriminator 3
	movq	wa(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L30:
	.loc 3 40 0 is_stmt 1
	movq	san(%rip), %rax
	testq	%rax, %rax
	je	.L33
	.loc 3 40 0 is_stmt 0 discriminator 1
	movq	san(%rip), %rax
	movq	san(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L35:
	.loc 3 40 0 discriminator 5
	movq	san(%rip), %rax
	cmpq	%rax, %rbx
	je	.L34
	.loc 3 40 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L35
.L34:
	.loc 3 40 0 discriminator 3
	movq	san(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L33:
	.loc 3 41 0 is_stmt 1
	movq	ch(%rip), %rax
	testq	%rax, %rax
	je	.L36
	.loc 3 41 0 is_stmt 0 discriminator 1
	movq	ch(%rip), %rax
	movq	ch(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L38:
	.loc 3 41 0 discriminator 5
	movq	ch(%rip), %rax
	cmpq	%rax, %rbx
	je	.L37
	.loc 3 41 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L38
.L37:
	.loc 3 41 0 discriminator 3
	movq	ch(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L36:
	.loc 3 42 0 is_stmt 1
	movq	type(%rip), %rax
	testq	%rax, %rax
	je	.L39
	.loc 3 42 0 is_stmt 0 discriminator 1
	movq	type(%rip), %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L39:
	.loc 3 43 0 is_stmt 1
	movl	$32, %edx
	movl	$16, %ecx
	call	_ZStorSt13_Ios_OpenmodeS_
	movl	%eax, %edx
	leaq	1312(%rbp), %rax
	movl	%edx, %r8d
	leaq	.LC4(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode
.LEHE2:
	.loc 3 44 0
	leaq	1312(%rbp), %rax
	leaq	.LC5(%rip), %rdx
	movq	%rax, %rcx
.LEHB3:
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 45 0
	leaq	1312(%rbp), %rax
	leaq	.LC6(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 46 0
	leaq	1312(%rbp), %rax
	leaq	.LC7(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 47 0
	leaq	1312(%rbp), %rax
	leaq	.LC8(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 48 0
	leaq	1312(%rbp), %rax
	leaq	.LC9(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 49 0
	leaq	1312(%rbp), %rax
	leaq	.LC10(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 50 0
	leaq	1312(%rbp), %rax
	leaq	.LC11(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 51 0
	leaq	1312(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv
	.loc 3 52 0
	leaq	.LC4(%rip), %rcx
	call	system
	.loc 3 53 0
	leaq	.LC12(%rip), %rcx
	call	system
	.loc 3 54 0
	leaq	.LC13(%rip), %rcx
	call	system
.LEHE3:
	.loc 3 55 0
	movl	$255, %ebx
	leaq	1312(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
	jmp	.L40
.L26:
.LBE7:
.LBE6:
.LBB9:
	.loc 3 57 0
	leaq	2560(%rbp), %rax
	leaq	.LC14(%rip), %rdx
	movq	%rax, %rcx
.LEHB4:
	call	_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_
	testb	%al, %al
	je	.L41
.LBB10:
	.loc 3 58 0
	movl	$32, %edx
	movl	$16, %ecx
	call	_ZStorSt13_Ios_OpenmodeS_
	movl	%eax, %edx
	leaq	1312(%rbp), %rax
	movl	%edx, %r8d
	leaq	.LC15(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode
.LEHE4:
	.loc 3 59 0
	leaq	1312(%rbp), %rax
	leaq	.LC16(%rip), %rdx
	movq	%rax, %rcx
.LEHB5:
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 60 0
	leaq	1312(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv
	.loc 3 61 0
	leaq	.LC17(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 62 0
	leaq	.LC13(%rip), %rcx
	call	system
.LEHE5:
	.loc 3 63 0
	movl	$127, %ebx
	leaq	1312(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
	jmp	.L40
.L41:
.LBE10:
.LBE9:
	.loc 3 65 0
	movl	$8, %edx
	movl	$16, %ecx
	call	_ZStorSt13_Ios_OpenmodeS_
	movl	%eax, %edx
	movq	%rbp, %rax
	movq	%rax, %rcx
.LEHB6:
	call	_ZNSt18basic_stringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode
.LEHE6:
	.loc 3 67 0
	leaq	832(%rbp), %rax
	movq	%rax, %rcx
.LEHB7:
	call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev
.LEHE7:
	.loc 3 68 0
	movl	$0, %edx
	movl	$15, %ecx
.LEHB8:
	call	_Z8setcolorii
	.loc 3 69 0
	movl	$0, %ecx
	call	time
	movl	%eax, %ecx
	call	srand
	.loc 3 70 0
	call	rand
	movl	%eax, %edx
	movl	%edx, %eax
	sarl	$31, %eax
	shrl	$31, %eax
	addl	%eax, %edx
	andl	$1, %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 2620(%rbp)
	call	rand
	movl	%eax, %ecx
	movl	$1431655766, %edx
	movl	%ecx, %eax
	imull	%edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 2616(%rbp)
	movl	2616(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, 2616(%rbp)
	call	rand
	movl	%eax, %edx
	movl	%edx, %eax
	sarl	$31, %eax
	shrl	$28, %eax
	addl	%eax, %edx
	andl	$15, %edx
	subl	%eax, %edx
	movl	%edx, %eax
	addl	$22, %eax
	movl	%eax, 2612(%rbp)
	movl	$0, 2556(%rbp)
	movl	$0, 2552(%rbp)
	movl	$0, 2548(%rbp)
	movl	$0, 2544(%rbp)
	call	rand
	movl	%eax, %ecx
	movl	$1717986919, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	%edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 2608(%rbp)
	movl	2608(%rbp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, 2608(%rbp)
	movl	$0, 2540(%rbp)
	movl	$0, 2536(%rbp)
	call	rand
	movl	%eax, %edx
	movl	%edx, %eax
	sarl	$31, %eax
	shrl	$31, %eax
	addl	%eax, %edx
	andl	$1, %edx
	subl	%eax, %edx
	movl	%edx, %eax
	addl	$1, %eax
	movl	%eax, 2652(%rbp)
	call	rand
	movl	%eax, %ecx
	movl	$1321528399, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$2, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 2604(%rbp)
	movl	2604(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, 2604(%rbp)
	movl	$0, 2528(%rbp)
	call	rand
	movl	%eax, %ecx
	movl	$1374389535, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$5, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	imull	$100, %eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	addl	$1, %eax
	movl	%eax, 2600(%rbp)
	movl	$0, 2524(%rbp)
	.loc 3 71 0
	movb	$0, 2515(%rbp)
	movb	$0, 2514(%rbp)
	movb	$0, 2513(%rbp)
	.loc 3 73 0
	movl	$0, %eax
	movq	%rax, 2504(%rbp)
	movl	$0, %eax
	movq	%rax, 2488(%rbp)
	movl	$0, %eax
	movq	%rax, 2480(%rbp)
	call	rand
	pxor	%xmm2, %xmm2
	cvtsi2sd	%eax, %xmm2
	movq	%xmm2, %rax
	movq	%rax, 2592(%rbp)
	.loc 3 74 0
	leaq	2464(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSsC1Ev
.LEHE8:
	.loc 3 75 0
	leaq	.LC19(%rip), %rcx
.LEHB9:
	call	system
	.loc 3 76 0
	leaq	832(%rbp), %rax
	movl	$8, %r8d
	leaq	.LC20(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
	.loc 3 77 0
	jmp	.L42
.L45:
	.loc 3 78 0
	leaq	2464(%rbp), %rax
	leaq	.LC21(%rip), %rdx
	movq	%rax, %rcx
	call	_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_
	testb	%al, %al
	je	.L43
	.loc 3 78 0 is_stmt 0 discriminator 2
	leaq	2524(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSirsERi
.L43:
	.loc 3 79 0 is_stmt 1
	leaq	2464(%rbp), %rax
	leaq	.LC22(%rip), %rdx
	movq	%rax, %rcx
	call	_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_
	testb	%al, %al
	je	.L44
	.loc 3 79 0 is_stmt 0 discriminator 2
	leaq	2520(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSirsERi
.L44:
	.loc 3 80 0 is_stmt 1
	leaq	2464(%rbp), %rax
	leaq	.LC23(%rip), %rdx
	movq	%rax, %rcx
	call	_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_
	testb	%al, %al
	je	.L42
	.loc 3 80 0 is_stmt 0 discriminator 2
	leaq	2516(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSirsERi
.L42:
	.loc 3 77 0 is_stmt 1
	leaq	2464(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rax, %rcx
	call	_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_E
	movq	(%rax), %rdx
	subq	$24, %rdx
	movq	(%rdx), %rdx
	addq	%rdx, %rax
	movq	%rax, %rcx
	call	_ZNKSt9basic_iosIcSt11char_traitsIcEEcvPvEv
	.loc 3 77 0 is_stmt 0 discriminator 1
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L45
	.loc 3 82 0 is_stmt 1
	leaq	832(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv
	.loc 3 83 0
	movq	%rbp, %rax
	addq	$104, %rax
	movl	$0, %edx
	movq	%rax, %rcx
	call	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
	.loc 3 84 0
	movl	2516(%rbp), %ebx
	movl	2520(%rbp), %esi
	movq	%rbp, %rax
	addq	$16, %rax
	leaq	.LC24(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	movl	%esi, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 84 0 is_stmt 0 discriminator 1
	leaq	.LC25(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 84 0 discriminator 2
	movl	%ebx, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 85 0 is_stmt 1
	leaq	-80(%rbp), %rdx
	movq	%rbp, %rax
	movl	$70, %r8d
	movq	%rax, %rcx
	call	_ZNSi7getlineEPcx
	.loc 3 86 0
	leaq	-80(%rbp), %rax
	movq	%rax, %rcx
	call	system
	.loc 3 87 0
	leaq	832(%rbp), %rax
	movl	$4, %r8d
	leaq	.LC26(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
	.loc 3 88 0
	leaq	832(%rbp), %rax
	addq	$208, %rax
	movq	%rax, %rcx
	call	_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv
	testb	%al, %al
	je	.L46
	.loc 3 89 0
	leaq	.LC27(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 90 0
	leaq	1312(%rbp), %rax
	movl	$1145, %r8d
	movq	%rax, %rdx
	movq	.refptr._ZSt3cin(%rip), %rcx
	call	_ZNSi7getlineEPcx
	jmp	.L47
.L46:
	.loc 3 92 0
	movl	$1145, %ecx
	leaq	1312(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 93 0
	movl	$4, %ecx
	leaq	2556(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 94 0
	movl	$4, %ecx
	leaq	2552(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 95 0
	movl	$1, %ecx
	leaq	2514(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 96 0
	movl	$1, %ecx
	leaq	2512(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 97 0
	movl	$4, %ecx
	leaq	2548(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 98 0
	movl	$4, %ecx
	leaq	2544(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 99 0
	movl	$4, %ecx
	leaq	2540(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 100 0
	movl	$4, %ecx
	leaq	2536(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 101 0
	movl	$1, %ecx
	leaq	2515(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 102 0
	movl	$8, %ecx
	leaq	2504(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 103 0
	movl	$4, %ecx
	leaq	2532(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 104 0
	movl	$4, %ecx
	leaq	2528(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 105 0
	movl	$8, %ecx
	leaq	2496(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 106 0
	movl	$1, %ecx
	leaq	2513(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 107 0
	movl	$8, %ecx
	leaq	2488(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
	.loc 3 108 0
	movl	$8, %ecx
	leaq	2480(%rbp), %rdx
	leaq	832(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSi4readEPcx
.L47:
	.loc 3 110 0
	leaq	832(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv
	.loc 3 111 0
	movl	2548(%rbp), %eax
	addl	$1, %eax
	movl	%eax, 2588(%rbp)
	.loc 3 112 0
	movl	2544(%rbp), %eax
	movl	%eax, 2584(%rbp)
.L148:
.LBB12:
.LBB13:
	.loc 3 114 0
	movl	$1, 2648(%rbp)
	jmp	.L48
.L49:
	.loc 3 115 0
	leaq	.LC28(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 114 0 discriminator 2
	addl	$1, 2648(%rbp)
.L48:
	.loc 3 114 0 is_stmt 0 discriminator 1
	cmpl	$40, 2648(%rbp)
	jle	.L49
.LBE13:
	.loc 3 117 0 is_stmt 1
	movl	2544(%rbp), %eax
	imull	$180, %eax, %edx
	movl	2548(%rbp), %eax
	addl	%edx, %eax
	sall	$4, %eax
	pxor	%xmm3, %xmm3
	cvtsi2sd	%eax, %xmm3
	movq	%xmm3, %rax
	movq	%rax, 2496(%rbp)
	.loc 3 118 0
	movl	2552(%rbp), %ebx
	movl	2528(%rbp), %esi
	movsd	2496(%rbp), %xmm0
	movsd	.LC29(%rip), %xmm1
	movapd	%xmm0, %xmm6
	divsd	%xmm1, %xmm6
	movl	$2, %ecx
	call	_ZSt12setprecisioni
	movl	%eax, %r13d
	movq	2496(%rbp), %rdi
	movl	2544(%rbp), %eax
	imull	$180, %eax, %edx
	movl	2548(%rbp), %eax
	addl	%eax, %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$5, %eax
	movl	%eax, %r14d
	movl	2544(%rbp), %eax
	imull	$180, %eax, %edx
	movl	2548(%rbp), %eax
	leal	(%rdx,%rax), %r12d
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZNSolsEPFRSoS_E
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 118 0 is_stmt 0 discriminator 1
	leaq	.LC30(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 2
	movq	%rax, %rcx
	leaq	1312(%rbp), %rax
	movq	%rax, %rdx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 3
	leaq	.LC31(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 4
	movl	%r12d, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 118 0 discriminator 5
	leaq	.LC32(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 6
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 118 0 discriminator 7
	leaq	.LC33(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 8
	movl	%r14d, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 118 0 discriminator 9
	leaq	.LC34(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 10
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 118 0 discriminator 11
	leaq	.LC35(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 12
	movq	%rdi, -88(%rbp)
	movsd	-88(%rbp), %xmm1
	movq	%rax, %rcx
	call	_ZNSolsEd
	.loc 3 118 0 discriminator 13
	leaq	.LC36(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 14
	leaq	_ZSt5fixedRSt8ios_base(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSt8ios_baseS0_E
	.loc 3 118 0 discriminator 15
	movl	%r13d, %edx
	movq	%rax, %rcx
	call	_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St13_Setprecision
	.loc 3 118 0 discriminator 16
	movapd	%xmm6, %xmm1
	movq	%rax, %rcx
	call	_ZNSolsEd
	.loc 3 118 0 discriminator 17
	leaq	.LC37(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 18
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 118 0 discriminator 19
	leaq	.LC38(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 20
	movl	%esi, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 118 0 discriminator 21
	leaq	.LC39(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 22
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 118 0 discriminator 23
	leaq	.LC40(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 24
	movl	%ebx, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 118 0 discriminator 25
	leaq	.LC41(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 118 0 discriminator 26
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 118 0 discriminator 27
	leaq	.LC42(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 119 0 is_stmt 1
	call	getch
	movb	%al, 2512(%rbp)
	.loc 3 120 0
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 121 0
	movzbl	2512(%rbp), %eax
	subl	$48, %eax
	movb	%al, 2512(%rbp)
	.loc 3 122 0
	movzbl	2512(%rbp), %eax
	cmpb	$1, %al
	jne	.L50
	.loc 3 123 0
	movl	$1, 2532(%rbp)
	.loc 3 124 0
	movl	$8, %ecx
	call	_Znay
	movq	%rax, showt(%rip)
	.loc 3 125 0
	movl	$24, %ecx
	call	_Znay
.LEHE9:
	.loc 3 125 0 is_stmt 0 discriminator 1
	movq	%rax, %rsi
	movq	$2, (%rsi)
	leaq	8(%rsi), %rbx
	movl	$1, %edi
	movq	%rbx, %r12
	jmp	.L51
.L52:
	.loc 3 125 0 discriminator 5
	movq	%r12, %rcx
.LEHB10:
	call	_ZNSsC1Ev
.LEHE10:
	.loc 3 125 0 discriminator 3
	addq	$8, %r12
	subq	$1, %rdi
.L51:
	.loc 3 125 0 discriminator 4
	cmpq	$-1, %rdi
	jne	.L52
	.loc 3 125 0 discriminator 6
	leaq	8(%rsi), %rax
	movq	%rax, showj(%rip)
.L50:
	.loc 3 127 0 is_stmt 1
	movzbl	2512(%rbp), %eax
	cmpb	$2, %al
	jne	.L53
	.loc 3 128 0
	movl	$10, 2532(%rbp)
	.loc 3 129 0
	movl	$44, %ecx
.LEHB11:
	call	_Znay
	movq	%rax, showt(%rip)
	.loc 3 130 0
	movl	$96, %ecx
	call	_Znay
.LEHE11:
	.loc 3 130 0 is_stmt 0 discriminator 1
	movq	%rax, %rsi
	movq	$11, (%rsi)
	leaq	8(%rsi), %rbx
	movl	$10, %edi
	movq	%rbx, %r12
	jmp	.L54
.L55:
	.loc 3 130 0 discriminator 5
	movq	%r12, %rcx
.LEHB12:
	call	_ZNSsC1Ev
.LEHE12:
	.loc 3 130 0 discriminator 3
	addq	$8, %r12
	subq	$1, %rdi
.L54:
	.loc 3 130 0 discriminator 4
	cmpq	$-1, %rdi
	jne	.L55
	.loc 3 130 0 discriminator 6
	leaq	8(%rsi), %rax
	movq	%rax, showj(%rip)
.L53:
.LBB14:
	.loc 3 132 0 is_stmt 1
	movzbl	2512(%rbp), %eax
	cmpb	$3, %al
	jne	.L56
.LBB15:
	.loc 3 133 0
	leaq	368(%rbp), %rax
	movl	$4, %r8d
	leaq	.LC20(%rip), %rdx
	movq	%rax, %rcx
.LEHB13:
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode
.LEHE13:
	.loc 3 134 0
	leaq	.LC43(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
.LEHB14:
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 135 0
	call	getch
	movb	%al, 2512(%rbp)
	.loc 3 136 0
	movzbl	2512(%rbp), %eax
	cmpb	$121, %al
	jne	.L57
	.loc 3 137 0
	leaq	368(%rbp), %rax
	leaq	.LC44(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 138 0
	leaq	368(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv
	.loc 3 139 0
	movl	$0, 2524(%rbp)
	.loc 3 140 0
	leaq	.LC13(%rip), %rcx
	call	system
	.loc 3 141 0
	leaq	.LC45(%rip), %rcx
	call	system
	.loc 3 142 0
	jmp	.L58
.L57:
	.loc 3 144 0
	leaq	.LC46(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 145 0
	leaq	2524(%rbp), %rax
	movq	%rax, %rdx
	movq	.refptr._ZSt3cin(%rip), %rcx
	call	_ZNSirsERi
	.loc 3 146 0
	jmp	.L59
.L61:
	.loc 3 147 0
	leaq	.LC47(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 148 0
	movl	$1, 2524(%rbp)
	.loc 3 149 0
	leaq	2524(%rbp), %rax
	movq	%rax, %rdx
	movq	.refptr._ZSt3cin(%rip), %rcx
	call	_ZNSirsERi
.L59:
	.loc 3 146 0
	movl	2524(%rbp), %eax
	testl	%eax, %eax
	je	.L60
	.loc 3 146 0 is_stmt 0 discriminator 1
	movl	2524(%rbp), %eax
	cmpl	$999, %eax
	jle	.L61
	.loc 3 146 0 discriminator 2
	movl	2524(%rbp), %eax
	cmpl	$6400, %eax
	jg	.L61
.L60:
	.loc 3 151 0 is_stmt 1
	movl	2524(%rbp), %ebx
	leaq	368(%rbp), %rax
	leaq	.LC48(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	movl	%ebx, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 151 0 is_stmt 0 discriminator 1
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 152 0 is_stmt 1
	leaq	.LC49(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 153 0
	leaq	2516(%rbp), %rax
	movq	%rax, %rdx
	movq	.refptr._ZSt3cin(%rip), %rcx
	call	_ZNSirsERi
	.loc 3 154 0
	movl	2516(%rbp), %ebx
	leaq	368(%rbp), %rax
	leaq	.LC50(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	movl	%ebx, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 154 0 is_stmt 0 discriminator 1
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 155 0 is_stmt 1
	leaq	.LC51(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 156 0
	leaq	2520(%rbp), %rax
	movq	%rax, %rdx
	movq	.refptr._ZSt3cin(%rip), %rcx
	call	_ZNSirsERi
	.loc 3 157 0
	movl	2520(%rbp), %ebx
	leaq	368(%rbp), %rax
	leaq	.LC52(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	movl	%ebx, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 158 0
	leaq	368(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv
	.loc 3 159 0
	leaq	.LC13(%rip), %rcx
	call	system
	.loc 3 160 0
	movq	%rbp, %rax
	addq	$104, %rax
	movl	$0, %edx
	movq	%rax, %rcx
	call	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
	.loc 3 161 0
	movl	2516(%rbp), %ebx
	movl	2520(%rbp), %esi
	movq	%rbp, %rax
	addq	$16, %rax
	leaq	.LC24(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	movl	%esi, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 161 0 is_stmt 0 discriminator 1
	leaq	.LC25(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 161 0 discriminator 2
	movl	%ebx, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 162 0 is_stmt 1
	leaq	-80(%rbp), %rdx
	movq	%rbp, %rax
	movl	$70, %r8d
	movq	%rax, %rcx
	call	_ZNSi7getlineEPcx
	.loc 3 163 0
	leaq	-80(%rbp), %rax
	movq	%rax, %rcx
	call	system
	.loc 3 164 0
	leaq	.LC53(%rip), %rcx
	call	system
.LEHE14:
	.loc 3 165 0
	nop
.L58:
	leaq	368(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
	jmp	.L148
.L56:
.LBE15:
.LBE14:
	.loc 3 167 0
	movzbl	2512(%rbp), %eax
	cmpb	$4, %al
	jne	.L63
	.loc 3 168 0
	leaq	832(%rbp), %rax
	movl	$8, %r8d
	leaq	.LC26(%rip), %rdx
	movq	%rax, %rcx
.LEHB15:
	call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
	.loc 3 169 0
	leaq	832(%rbp), %rax
	addq	$208, %rax
	movq	%rax, %rcx
	call	_ZNKSt9basic_iosIcSt11char_traitsIcEEcvPvEv
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	je	.L64
	.loc 3 170 0
	leaq	832(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv
	.loc 3 171 0
	leaq	.LC54(%rip), %rcx
	call	system
	.loc 3 172 0
	leaq	.LC55(%rip), %rcx
	call	system
.L64:
	.loc 3 174 0
	leaq	832(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv
	.loc 3 175 0
	movq	ch(%rip), %rax
	testq	%rax, %rax
	je	.L65
	.loc 3 175 0 is_stmt 0 discriminator 1
	movq	ch(%rip), %rax
	movq	ch(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L67:
	.loc 3 175 0 discriminator 5
	movq	ch(%rip), %rax
	cmpq	%rax, %rbx
	je	.L66
	.loc 3 175 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L67
.L66:
	.loc 3 175 0 discriminator 3
	movq	ch(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L65:
	.loc 3 176 0 is_stmt 1
	movq	type(%rip), %rax
	testq	%rax, %rax
	je	.L68
	.loc 3 176 0 is_stmt 0 discriminator 1
	movq	type(%rip), %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L68:
	.loc 3 177 0 is_stmt 1
	movq	a(%rip), %rax
	testq	%rax, %rax
	je	.L69
	.loc 3 177 0 is_stmt 0 discriminator 1
	movq	a(%rip), %rax
	movq	a(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L71:
	.loc 3 177 0 discriminator 5
	movq	a(%rip), %rax
	cmpq	%rax, %rbx
	je	.L70
	.loc 3 177 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L71
.L70:
	.loc 3 177 0 discriminator 3
	movq	a(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L69:
	.loc 3 178 0 is_stmt 1
	movq	san(%rip), %rax
	testq	%rax, %rax
	je	.L72
	.loc 3 178 0 is_stmt 0 discriminator 1
	movq	san(%rip), %rax
	movq	san(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L74:
	.loc 3 178 0 discriminator 5
	movq	san(%rip), %rax
	cmpq	%rax, %rbx
	je	.L73
	.loc 3 178 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L74
.L73:
	.loc 3 178 0 discriminator 3
	movq	san(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L72:
	.loc 3 179 0 is_stmt 1
	movq	wa(%rip), %rax
	testq	%rax, %rax
	je	.L75
	.loc 3 179 0 is_stmt 0 discriminator 1
	movq	wa(%rip), %rax
	movq	wa(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L77:
	.loc 3 179 0 discriminator 5
	movq	wa(%rip), %rax
	cmpq	%rax, %rbx
	je	.L76
	.loc 3 179 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L77
.L76:
	.loc 3 179 0 discriminator 3
	movq	wa(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L75:
	.loc 3 180 0 is_stmt 1
	leaq	.LC13(%rip), %rcx
	call	system
	.loc 3 181 0
	movl	$0, %ebx
	jmp	.L78
.L63:
.LBB17:
	.loc 3 183 0
	movzbl	2512(%rbp), %eax
	cmpb	$5, %al
	jne	.L79
.LBB18:
	.loc 3 184 0
	leaq	368(%rbp), %rax
	movl	$4, %r8d
	leaq	.LC26(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode
.LEHE15:
	.loc 3 185 0
	movl	$1145, %ecx
	leaq	1312(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
.LEHB16:
	call	_ZNSo5writeEPKcx
	.loc 3 186 0
	movl	$4, %ecx
	leaq	2556(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 187 0
	movl	$4, %ecx
	leaq	2552(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 188 0
	movl	$1, %ecx
	leaq	2514(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 189 0
	movl	$1, %ecx
	leaq	2512(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 190 0
	movl	$4, %ecx
	leaq	2548(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 191 0
	movl	$4, %ecx
	leaq	2544(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 192 0
	movl	$4, %ecx
	leaq	2540(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 193 0
	movl	$4, %ecx
	leaq	2536(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 194 0
	movl	$1, %ecx
	leaq	2515(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 195 0
	movl	$8, %ecx
	leaq	2504(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 196 0
	movl	$4, %ecx
	leaq	2532(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 197 0
	movl	$4, %ecx
	leaq	2528(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 198 0
	movl	$8, %ecx
	leaq	2496(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 199 0
	movl	$1, %ecx
	leaq	2513(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 200 0
	movl	$8, %ecx
	leaq	2488(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 201 0
	movl	$8, %ecx
	leaq	2480(%rbp), %rdx
	leaq	368(%rbp), %rax
	movq	%rcx, %r8
	movq	%rax, %rcx
	call	_ZNSo5writeEPKcx
	.loc 3 202 0
	leaq	368(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv
	.loc 3 203 0
	leaq	368(%rbp), %rax
	movl	$1, %r8d
	leaq	.LC56(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
.LBB19:
	.loc 3 204 0
	movl	2584(%rbp), %eax
	imull	$180, %eax, %edx
	movl	2588(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, 2644(%rbp)
	jmp	.L80
.L83:
	.loc 3 205 0
	cmpl	$0, 2644(%rbp)
	jne	.L81
	.loc 3 206 0
	jmp	.L82
.L81:
	.loc 3 208 0
	movq	type(%rip), %rax
	movl	2644(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	(%rax), %ebx
	movq	ch(%rip), %rax
	movl	2644(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rsi
	movl	2644(%rbp), %edx
	leaq	368(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSolsEi
	leaq	.LC57(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 208 0 is_stmt 0 discriminator 1
	movq	%rsi, %rdx
	movq	%rax, %rcx
	call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E
	.loc 3 208 0 discriminator 2
	leaq	.LC58(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 208 0 discriminator 3
	movl	%ebx, %edx
	movq	%rax, %rcx
	call	_ZNSolsEi
	.loc 3 208 0 discriminator 4
	leaq	.LC59(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 208 0 discriminator 5
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 208 0 discriminator 6
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSoS_E
.L82:
	.loc 3 204 0 is_stmt 1 discriminator 2
	addl	$1, 2644(%rbp)
.L80:
	.loc 3 204 0 is_stmt 0 discriminator 1
	movl	2544(%rbp), %eax
	imull	$180, %eax, %edx
	movl	2548(%rbp), %eax
	addl	%edx, %eax
	cmpl	2644(%rbp), %eax
	jge	.L83
.LBE19:
	.loc 3 210 0 is_stmt 1
	movq	ch(%rip), %rax
	testq	%rax, %rax
	je	.L84
	.loc 3 210 0 is_stmt 0 discriminator 1
	movq	ch(%rip), %rax
	movq	ch(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L86:
	.loc 3 210 0 discriminator 5
	movq	ch(%rip), %rax
	cmpq	%rax, %rbx
	je	.L85
	.loc 3 210 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L86
.L85:
	.loc 3 210 0 discriminator 3
	movq	ch(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L84:
	.loc 3 211 0 is_stmt 1
	movq	type(%rip), %rax
	testq	%rax, %rax
	je	.L87
	.loc 3 211 0 is_stmt 0 discriminator 1
	movq	type(%rip), %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L87:
	.loc 3 212 0 is_stmt 1
	movq	a(%rip), %rax
	testq	%rax, %rax
	je	.L88
	.loc 3 212 0 is_stmt 0 discriminator 1
	movq	a(%rip), %rax
	movq	a(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L90:
	.loc 3 212 0 discriminator 5
	movq	a(%rip), %rax
	cmpq	%rax, %rbx
	je	.L89
	.loc 3 212 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L90
.L89:
	.loc 3 212 0 discriminator 3
	movq	a(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L88:
	.loc 3 213 0 is_stmt 1
	movq	san(%rip), %rax
	testq	%rax, %rax
	je	.L91
	.loc 3 213 0 is_stmt 0 discriminator 1
	movq	san(%rip), %rax
	movq	san(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L93:
	.loc 3 213 0 discriminator 5
	movq	san(%rip), %rax
	cmpq	%rax, %rbx
	je	.L92
	.loc 3 213 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L93
.L92:
	.loc 3 213 0 discriminator 3
	movq	san(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L91:
	.loc 3 214 0 is_stmt 1
	movq	wa(%rip), %rax
	testq	%rax, %rax
	je	.L94
	.loc 3 214 0 is_stmt 0 discriminator 1
	movq	wa(%rip), %rax
	movq	wa(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L96:
	.loc 3 214 0 discriminator 5
	movq	wa(%rip), %rax
	cmpq	%rax, %rbx
	je	.L95
	.loc 3 214 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L96
.L95:
	.loc 3 214 0 discriminator 3
	movq	wa(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L94:
	.loc 3 215 0 is_stmt 1
	leaq	.LC13(%rip), %rcx
	call	system
.LEHE16:
	.loc 3 216 0
	movl	$0, %ebx
	leaq	368(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
	jmp	.L78
.L79:
.LBE18:
.LBE17:
	.loc 3 218 0
	movzbl	2512(%rbp), %eax
	cmpb	$5, %al
	jg	.L97
	.loc 3 218 0 is_stmt 0 discriminator 1
	movzbl	2512(%rbp), %eax
	testb	%al, %al
	jg	.L98
.L97:
	.loc 3 219 0 is_stmt 1
	leaq	.LC53(%rip), %rcx
.LEHB17:
	call	system
	.loc 3 220 0
	jmp	.L62
.L98:
.LBB21:
	.loc 3 222 0
	movl	$1, 2640(%rbp)
	jmp	.L99
.L125:
	.loc 3 223 0
	call	rand
	movl	%eax, %edx
	movl	%edx, %eax
	sarl	$31, %eax
	shrl	$31, %eax
	addl	%eax, %edx
	andl	$1, %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 2620(%rbp)
	.loc 3 224 0
	call	rand
	movl	%eax, %ecx
	movl	$1321528399, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$2, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 2604(%rbp)
	movl	2604(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, 2604(%rbp)
	.loc 3 225 0
	call	rand
	movl	%eax, %ecx
	movl	$1717986919, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	%edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 2608(%rbp)
	movl	2608(%rbp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, 2608(%rbp)
	.loc 3 226 0
	call	rand
	movl	%eax, %ecx
	movl	$1431655766, %edx
	movl	%ecx, %eax
	imull	%edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 2616(%rbp)
	movl	2616(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, 2616(%rbp)
	.loc 3 227 0
	call	rand
	movl	%eax, %ecx
	movl	$2021161081, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$4, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	addl	%eax, %eax
	movl	%eax, %edx
	sall	$4, %edx
	addl	%edx, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	addl	$4, %eax
	movl	%eax, 2612(%rbp)
	.loc 3 228 0
	call	rand
	movl	%eax, %ecx
	movslq	%ecx, %rax
	imulq	$-2147450879, %rax, %rax
	shrq	$32, %rax
	addl	%ecx, %eax
	sarl	$15, %eax
	movl	%eax, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, %edx
	sall	$16, %edx
	subl	%eax, %edx
	movl	%ecx, %eax
	subl	%edx, %eax
	addl	$1, %eax
	pxor	%xmm6, %xmm6
	cvtsi2sd	%eax, %xmm6
	call	rand
	movl	%eax, %ecx
	movslq	%ecx, %rax
	imulq	$-2147450879, %rax, %rax
	shrq	$32, %rax
	addl	%ecx, %eax
	sarl	$15, %eax
	movl	%eax, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, %edx
	sall	$16, %edx
	subl	%eax, %edx
	movl	%ecx, %eax
	subl	%edx, %eax
	addl	$1, %eax
	pxor	%xmm0, %xmm0
	cvtsi2sd	%eax, %xmm0
	movapd	%xmm6, %xmm1
	call	_Z2qudd
	movq	%xmm0, %rax
	movq	%rax, 2592(%rbp)
	.loc 3 229 0
	call	rand
	movl	%eax, %ecx
	movslq	%ecx, %rax
	imulq	$-2147450879, %rax, %rax
	shrq	$32, %rax
	addl	%ecx, %eax
	sarl	$15, %eax
	movl	%eax, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, %edx
	sall	$16, %edx
	subl	%eax, %edx
	movl	%ecx, %eax
	subl	%edx, %eax
	addl	$1, %eax
	pxor	%xmm6, %xmm6
	cvtsi2sd	%eax, %xmm6
	call	rand
	movl	%eax, %ecx
	movslq	%ecx, %rax
	imulq	$-2147450879, %rax, %rax
	shrq	$32, %rax
	addl	%ecx, %eax
	sarl	$15, %eax
	movl	%eax, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, %edx
	sall	$16, %edx
	subl	%eax, %edx
	movl	%ecx, %eax
	subl	%edx, %eax
	addl	$1, %eax
	pxor	%xmm0, %xmm0
	cvtsi2sd	%eax, %xmm0
	movapd	%xmm6, %xmm1
	call	_Z2qudd
	cvttsd2si	%xmm0, %eax
	movl	%eax, 2600(%rbp)
	.loc 3 230 0
	movl	2548(%rbp), %eax
	addl	$1, %eax
	movl	%eax, 2548(%rbp)
	.loc 3 231 0
	movl	2548(%rbp), %eax
	cmpl	$179, %eax
	jle	.L100
	.loc 3 232 0
	movl	$0, 2548(%rbp)
	.loc 3 233 0
	movl	$0, 2540(%rbp)
	.loc 3 234 0
	movb	$0, 2514(%rbp)
	.loc 3 235 0
	movl	2544(%rbp), %eax
	addl	$1, %eax
	movl	%eax, 2544(%rbp)
	.loc 3 236 0
	movb	$0, 2515(%rbp)
	.loc 3 237 0
	movabsq	$4636737291354636288, %rax
	movq	%rax, 2504(%rbp)
	.loc 3 238 0
	movb	$0, 2513(%rbp)
	.loc 3 239 0
	movabsq	$4636737291354636288, %rax
	movq	%rax, 2488(%rbp)
	.loc 3 240 0
	movl	$0, 2556(%rbp)
	.loc 3 241 0
	movabsq	$4636737291354636288, %rax
	movq	%rax, 2480(%rbp)
.L100:
	.loc 3 243 0
	movzbl	2513(%rbp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L101
	.loc 3 243 0 is_stmt 0 discriminator 1
	movzbl	2514(%rbp), %eax
	testb	%al, %al
	je	.L101
	.loc 3 243 0 discriminator 2
	movl	2548(%rbp), %eax
	cmpl	$142, %eax
	jle	.L101
	.loc 3 243 0 discriminator 3
	movl	2548(%rbp), %eax
	cmpl	$180, %eax
	jg	.L101
	.loc 3 244 0 is_stmt 1
	movb	$1, 2513(%rbp)
.L101:
	.loc 3 246 0
	movzbl	2515(%rbp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L102
	.loc 3 246 0 is_stmt 0 discriminator 1
	movl	2540(%rbp), %eax
	cmpl	$73, %eax
	jle	.L102
	.loc 3 246 0 discriminator 2
	movzbl	2513(%rbp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L102
	.loc 3 247 0 is_stmt 1
	movb	$1, 2515(%rbp)
.L102:
	.loc 3 249 0
	movzbl	2515(%rbp), %eax
	testb	%al, %al
	je	.L103
	.loc 3 250 0
	movl	2540(%rbp), %eax
	subl	$73, %eax
	pxor	%xmm0, %xmm0
	cvtsi2sd	%eax, %xmm0
	movsd	.LC60(%rip), %xmm1
	mulsd	%xmm1, %xmm0
	movsd	.LC61(%rip), %xmm1
	subsd	%xmm1, %xmm0
	movq	%xmm0, %rax
	movq	%rax, 2504(%rbp)
	.loc 3 251 0
	movsd	2480(%rbp), %xmm0
	movsd	.LC62(%rip), %xmm1
	subsd	%xmm1, %xmm0
	movq	%xmm0, %rax
	movq	%rax, 2480(%rbp)
.L103:
	.loc 3 253 0
	movzbl	2513(%rbp), %eax
	testb	%al, %al
	je	.L104
	.loc 3 254 0
	movl	2540(%rbp), %eax
	subl	$73, %eax
	pxor	%xmm0, %xmm0
	cvtsi2sd	%eax, %xmm0
	movsd	.LC60(%rip), %xmm1
	mulsd	%xmm1, %xmm0
	movsd	.LC61(%rip), %xmm1
	subsd	%xmm1, %xmm0
	movq	%xmm0, %rax
	movq	%rax, 2488(%rbp)
	.loc 3 255 0
	movsd	2480(%rbp), %xmm0
	movsd	.LC62(%rip), %xmm1
	subsd	%xmm1, %xmm0
	movq	%xmm0, %rax
	movq	%rax, 2480(%rbp)
.L104:
	.loc 3 257 0
	movl	2556(%rbp), %eax
	cmpl	$7, %eax
	jg	.L105
	.loc 3 258 0
	movabsq	$4617428107952285286, %rax
	movq	%rax, 2480(%rbp)
.L105:
	.loc 3 260 0
	movl	2556(%rbp), %eax
	cmpl	$8, %eax
	jne	.L106
	.loc 3 261 0
	movabsq	$4633092190406233293, %rax
	movq	%rax, 2480(%rbp)
.L106:
	.loc 3 263 0
	movl	2556(%rbp), %eax
	cmpl	$9, %eax
	jne	.L107
	.loc 3 264 0
	movabsq	$4636737291354636288, %rax
	movq	%rax, 2480(%rbp)
.L107:
	.loc 3 266 0
	movsd	.LC61(%rip), %xmm0
	ucomisd	2592(%rbp), %xmm0
	jb	.L108
	.loc 3 266 0 is_stmt 0 discriminator 1
	movzbl	2515(%rbp), %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L110
.L108:
	.loc 3 266 0 discriminator 3
	movsd	2504(%rbp), %xmm0
	ucomisd	2592(%rbp), %xmm0
	jb	.L111
	.loc 3 266 0 discriminator 4
	movzbl	2515(%rbp), %eax
	testb	%al, %al
	jne	.L110
.L111:
	.loc 3 266 0 discriminator 6
	movl	2540(%rbp), %eax
	cmpl	$89, %eax
	jne	.L113
.L110:
	.loc 3 267 0 is_stmt 1
	movq	type(%rip), %rax
	movl	2544(%rbp), %edx
	imull	$180, %edx, %ecx
	movl	2548(%rbp), %edx
	addl	%ecx, %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	$5, (%rax)
	.loc 3 268 0
	cmpl	$0, 2620(%rbp)
	jne	.L114
	.loc 3 269 0
	movq	ch(%rip), %rax
	movl	2544(%rbp), %edx
	imull	$180, %edx, %ecx
	movl	2548(%rbp), %edx
	addl	%ecx, %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	leaq	ben(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSsaSERKSs
	.loc 3 270 0
	movl	2528(%rbp), %eax
	addl	$1, %eax
	movl	%eax, 2528(%rbp)
	jmp	.L115
.L114:
	.loc 3 272 0
	movq	wa(%rip), %rax
	movl	2608(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rax, %rdx
	movq	ch(%rip), %rax
	movl	2544(%rbp), %ecx
	imull	$180, %ecx, %r8d
	movl	2548(%rbp), %ecx
	addl	%r8d, %ecx
	movslq	%ecx, %rcx
	salq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, %rcx
	call	_ZNSsaSERKSs
	.loc 3 273 0
	movl	2544(%rbp), %eax
	imull	$180, %eax, %edx
	movl	2548(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, 2536(%rbp)
	.loc 3 274 0
	movl	2552(%rbp), %eax
	addl	$1, %eax
	movl	%eax, 2552(%rbp)
	.loc 3 275 0
	movb	$1, 2514(%rbp)
.L115:
	.loc 3 277 0
	movb	$0, 2515(%rbp)
	.loc 3 278 0
	movb	$0, 2513(%rbp)
	.loc 3 279 0
	movl	$0, 2540(%rbp)
	.loc 3 280 0
	jmp	.L116
.L113:
	.loc 3 282 0
	movsd	2488(%rbp), %xmm0
	ucomisd	2592(%rbp), %xmm0
	jb	.L117
	.loc 3 282 0 is_stmt 0 discriminator 1
	movzbl	2513(%rbp), %eax
	testb	%al, %al
	jne	.L119
.L117:
	.loc 3 282 0 discriminator 3
	movl	2540(%rbp), %eax
	cmpl	$89, %eax
	jne	.L120
	.loc 3 282 0 discriminator 4
	movzbl	2513(%rbp), %eax
	testb	%al, %al
	je	.L120
.L119:
	.loc 3 283 0 is_stmt 1
	movq	type(%rip), %rax
	movl	2544(%rbp), %edx
	imull	$180, %edx, %ecx
	movl	2548(%rbp), %edx
	addl	%ecx, %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	$5, (%rax)
	.loc 3 284 0
	movq	ch(%rip), %rax
	movl	2544(%rbp), %edx
	imull	$180, %edx, %ecx
	movl	2548(%rbp), %edx
	addl	%ecx, %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	leaq	ben(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSsaSERKSs
	.loc 3 285 0
	movb	$0, 2514(%rbp)
	.loc 3 286 0
	movl	2528(%rbp), %eax
	addl	$1, %eax
	movl	%eax, 2528(%rbp)
	.loc 3 287 0
	movb	$0, 2515(%rbp)
	.loc 3 288 0
	movb	$0, 2513(%rbp)
	.loc 3 289 0
	movl	$0, 2540(%rbp)
	.loc 3 290 0
	jmp	.L116
.L120:
	.loc 3 292 0
	movl	2540(%rbp), %eax
	addl	$1, %eax
	movl	%eax, 2540(%rbp)
	.loc 3 293 0
	pxor	%xmm0, %xmm0
	cvtsi2sd	2600(%rbp), %xmm0
	movsd	2480(%rbp), %xmm1
	ucomisd	%xmm0, %xmm1
	jb	.L180
	.loc 3 294 0
	movq	type(%rip), %rax
	movl	2544(%rbp), %edx
	imull	$180, %edx, %ecx
	movl	2548(%rbp), %edx
	addl	%ecx, %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	$4, (%rax)
	.loc 3 295 0
	cmpl	$75, 2652(%rbp)
	jg	.L123
	.loc 3 296 0
	movq	a(%rip), %rax
	movl	2616(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rax, %rdx
	movq	ch(%rip), %rax
	movl	2544(%rbp), %ecx
	imull	$180, %ecx, %r8d
	movl	2548(%rbp), %ecx
	addl	%r8d, %ecx
	movslq	%ecx, %rcx
	salq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, %rcx
	call	_ZNSsaSERKSs
	.loc 3 297 0
	call	rand
	movl	%eax, %ecx
	movl	$680390859, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$4, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 2652(%rbp)
	movl	2652(%rbp), %eax
	imull	$101, %eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, 2652(%rbp)
	jmp	.L124
.L123:
	.loc 3 299 0
	movq	a(%rip), %rax
	movl	2612(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rax, %rdx
	movq	ch(%rip), %rax
	movl	2544(%rbp), %ecx
	imull	$180, %ecx, %r8d
	movl	2548(%rbp), %ecx
	addl	%r8d, %ecx
	movslq	%ecx, %rcx
	salq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, %rcx
	call	_ZNSsaSERKSs
	.loc 3 300 0
	movl	$1, 2652(%rbp)
.L124:
	.loc 3 302 0
	movl	$0, 2556(%rbp)
	.loc 3 303 0
	jmp	.L116
.L180:
	.loc 3 305 0
	movq	type(%rip), %rax
	movl	2544(%rbp), %edx
	imull	$180, %edx, %ecx
	movl	2548(%rbp), %edx
	addl	%ecx, %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	$3, (%rax)
	.loc 3 306 0
	movq	san(%rip), %rax
	movl	2604(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rax, %rdx
	movq	ch(%rip), %rax
	movl	2544(%rbp), %ecx
	imull	$180, %ecx, %r8d
	movl	2548(%rbp), %ecx
	addl	%r8d, %ecx
	movslq	%ecx, %rcx
	salq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, %rcx
	call	_ZNSsaSERKSs
	.loc 3 307 0
	call	rand
	movl	%eax, %ecx
	movl	$1321528399, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$2, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 2604(%rbp)
	movl	2604(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, 2604(%rbp)
	.loc 3 308 0
	movl	2556(%rbp), %eax
	addl	$1, %eax
	movl	%eax, 2556(%rbp)
.L116:
	.loc 3 222 0 discriminator 2
	addl	$1, 2640(%rbp)
.L99:
	.loc 3 222 0 is_stmt 0 discriminator 1
	movl	2532(%rbp), %eax
	cmpl	%eax, 2640(%rbp)
	jle	.L125
.LBE21:
.LBB22:
	.loc 3 310 0 is_stmt 1
	movl	$1, 2636(%rbp)
	jmp	.L126
.L127:
	.loc 3 311 0
	movq	ch(%rip), %rax
	movl	2544(%rbp), %edx
	imull	$180, %edx, %ecx
	movl	2548(%rbp), %edx
	addl	%edx, %ecx
	movl	2636(%rbp), %edx
	addl	%edx, %ecx
	movl	2532(%rbp), %edx
	subl	%edx, %ecx
	movl	%ecx, %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rax, %rdx
	movq	showj(%rip), %rax
	movl	2636(%rbp), %ecx
	movslq	%ecx, %rcx
	salq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, %rcx
	call	_ZNSsaSERKSs
	.loc 3 312 0 discriminator 2
	movq	showt(%rip), %rax
	movl	2636(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rax, %rdx
	movq	type(%rip), %rax
	movl	2544(%rbp), %ecx
	imull	$180, %ecx, %r8d
	movl	2548(%rbp), %ecx
	addl	%ecx, %r8d
	movl	2636(%rbp), %ecx
	addl	%ecx, %r8d
	movl	2532(%rbp), %ecx
	subl	%ecx, %r8d
	movl	%r8d, %ecx
	movslq	%ecx, %rcx
	salq	$2, %rcx
	addq	%rcx, %rax
	movl	(%rax), %eax
	movl	%eax, (%rdx)
	.loc 3 310 0 discriminator 2
	addl	$1, 2636(%rbp)
.L126:
	.loc 3 310 0 is_stmt 0 discriminator 1
	movl	2532(%rbp), %eax
	cmpl	%eax, 2636(%rbp)
	jle	.L127
.LBE22:
.LBB23:
	.loc 3 314 0 is_stmt 1
	movl	$1, 2632(%rbp)
	jmp	.L128
.L132:
.LBB24:
.LBB25:
	.loc 3 315 0
	movl	2532(%rbp), %eax
	movl	%eax, 2628(%rbp)
	jmp	.L129
.L131:
	.loc 3 316 0
	movq	showt(%rip), %rax
	movl	2628(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	(%rax), %edx
	movq	showt(%rip), %rax
	movl	2628(%rbp), %ecx
	movslq	%ecx, %rcx
	salq	$2, %rcx
	subq	$4, %rcx
	addq	%rcx, %rax
	movl	(%rax), %eax
	cmpl	%eax, %edx
	jle	.L130
	.loc 3 317 0
	movq	showt(%rip), %rax
	movl	2628(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	subq	$4, %rdx
	addq	%rax, %rdx
	movq	showt(%rip), %rax
	movl	2628(%rbp), %ecx
	movslq	%ecx, %rcx
	salq	$2, %rcx
	addq	%rcx, %rax
	movq	%rax, %rcx
	call	_ZSt4swapIiEvRT_S1_
	.loc 3 318 0
	movq	showj(%rip), %rax
	movl	2628(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	subq	$8, %rdx
	addq	%rax, %rdx
	movq	showj(%rip), %rax
	movl	2628(%rbp), %ecx
	movslq	%ecx, %rcx
	salq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, %rcx
	call	_ZSt4swapIcSt11char_traitsIcESaIcEEvRSbIT_T0_T1_ES7_
.L130:
	.loc 3 315 0 discriminator 2
	subl	$1, 2628(%rbp)
.L129:
	.loc 3 315 0 is_stmt 0 discriminator 1
	movl	2628(%rbp), %eax
	cmpl	2632(%rbp), %eax
	jg	.L131
.LBE25:
.LBE24:
	.loc 3 314 0 is_stmt 1 discriminator 2
	addl	$1, 2632(%rbp)
.L128:
	.loc 3 314 0 is_stmt 0 discriminator 1
	movl	2532(%rbp), %eax
	cmpl	%eax, 2632(%rbp)
	jl	.L132
.LBE23:
	.loc 3 322 0 is_stmt 1
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 323 0
	movq	showt(%rip), %rax
	addq	$4, %rax
	movl	(%rax), %eax
	cmpl	$5, %eax
	jne	.L133
	.loc 3 323 0 is_stmt 0 discriminator 1
	movl	2532(%rbp), %eax
	cmpl	$1, %eax
	jne	.L133
	.loc 3 324 0 is_stmt 1
	leaq	.LC65(%rip), %rdx
	leaq	file(%rip), %rcx
	call	_ZNSsaSEPKc
	jmp	.L134
.L133:
	.loc 3 325 0
	movq	showt(%rip), %rax
	addq	$4, %rax
	movl	(%rax), %eax
	cmpl	$5, %eax
	jne	.L135
	.loc 3 325 0 is_stmt 0 discriminator 1
	movl	2532(%rbp), %eax
	cmpl	$10, %eax
	jne	.L135
	.loc 3 326 0 is_stmt 1
	leaq	.LC66(%rip), %rdx
	leaq	file(%rip), %rcx
	call	_ZNSsaSEPKc
	jmp	.L134
.L135:
	.loc 3 327 0
	movq	showt(%rip), %rax
	addq	$4, %rax
	movl	(%rax), %eax
	cmpl	$4, %eax
	jne	.L136
	.loc 3 327 0 is_stmt 0 discriminator 1
	movl	2532(%rbp), %eax
	cmpl	$1, %eax
	jne	.L136
	.loc 3 328 0 is_stmt 1
	leaq	.LC67(%rip), %rdx
	leaq	file(%rip), %rcx
	call	_ZNSsaSEPKc
	jmp	.L134
.L136:
	.loc 3 329 0
	movq	showt(%rip), %rax
	addq	$4, %rax
	movl	(%rax), %eax
	cmpl	$4, %eax
	jne	.L137
	.loc 3 329 0 is_stmt 0 discriminator 1
	movl	2532(%rbp), %eax
	cmpl	$10, %eax
	jne	.L137
	.loc 3 330 0 is_stmt 1
	leaq	.LC68(%rip), %rdx
	leaq	file(%rip), %rcx
	call	_ZNSsaSEPKc
	jmp	.L134
.L137:
	.loc 3 332 0
	leaq	.LC69(%rip), %rdx
	leaq	file(%rip), %rcx
	call	_ZNSsaSEPKc
.L134:
	.loc 3 334 0
	movl	2524(%rbp), %eax
	cmpl	$499, %eax
	jle	.L138
	.loc 3 335 0
	movq	%rbp, %rax
	addq	$104, %rax
	movl	$0, %edx
	movq	%rax, %rcx
	call	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
	.loc 3 336 0
	movq	%rbp, %rax
	addq	$16, %rax
	leaq	.LC70(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.loc 3 337 0
	movq	%rbp, %rax
	addq	$16, %rax
	leaq	file(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E
	.loc 3 338 0
	leaq	-80(%rbp), %rdx
	movq	%rbp, %rax
	movl	$70, %r8d
	movq	%rax, %rcx
	call	_ZNSi7getlineEPcx
	.loc 3 339 0
	leaq	-80(%rbp), %rax
	movq	%rax, %rcx
	call	system
	.loc 3 340 0
	movl	2524(%rbp), %eax
	movl	%eax, %ecx
	movq	__imp_Sleep(%rip), %rax
	call	*%rax
	.loc 3 341 0
	leaq	.LC71(%rip), %rcx
	call	system
	.loc 3 342 0
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZNSolsEPFRSoS_E
.L138:
.LBB26:
	.loc 3 344 0
	movl	$1, 2624(%rbp)
	jmp	.L139
.L143:
	.loc 3 345 0
	movq	showt(%rip), %rax
	movl	2624(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	cmpl	$3, %eax
	jne	.L140
	.loc 3 346 0
	movl	$0, %edx
	movl	$11, %ecx
	call	_Z8setcolorii
	.loc 3 347 0
	movq	showj(%rip), %rax
	movl	2624(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movq	%rax, %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E
	leaq	.LC72(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.L140:
	.loc 3 349 0
	movq	showt(%rip), %rax
	movl	2624(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	cmpl	$4, %eax
	jne	.L141
	.loc 3 350 0
	movl	$0, %edx
	movl	$13, %ecx
	call	_Z8setcolorii
	.loc 3 351 0
	movq	showj(%rip), %rax
	movl	2624(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movq	%rax, %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E
	leaq	.LC73(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.L141:
	.loc 3 353 0
	movq	showt(%rip), %rax
	movl	2624(%rbp), %edx
	movslq	%edx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	cmpl	$5, %eax
	jne	.L142
	.loc 3 354 0
	movl	$0, %edx
	movl	$6, %ecx
	call	_Z8setcolorii
	.loc 3 355 0
	movq	showj(%rip), %rax
	movl	2624(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movq	%rax, %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E
	leaq	.LC74(%rip), %rdx
	movq	%rax, %rcx
	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.L142:
	.loc 3 357 0
	movl	$0, %edx
	movl	$15, %ecx
	call	_Z8setcolorii
	.loc 3 344 0 discriminator 2
	addl	$1, 2624(%rbp)
.L139:
	.loc 3 344 0 is_stmt 0 discriminator 1
	movl	2532(%rbp), %eax
	cmpl	%eax, 2624(%rbp)
	jle	.L143
.LBE26:
	.loc 3 359 0 is_stmt 1
	movq	showt(%rip), %rax
	testq	%rax, %rax
	je	.L144
	.loc 3 359 0 is_stmt 0 discriminator 1
	movq	showt(%rip), %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L144:
	.loc 3 360 0 is_stmt 1
	movq	showj(%rip), %rax
	testq	%rax, %rax
	je	.L145
	.loc 3 360 0 is_stmt 0 discriminator 1
	movq	showj(%rip), %rax
	movq	showj(%rip), %rdx
	subq	$8, %rdx
	movq	(%rdx), %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
.L147:
	.loc 3 360 0 discriminator 5
	movq	showj(%rip), %rax
	cmpq	%rax, %rbx
	je	.L146
	.loc 3 360 0 discriminator 4
	subq	$8, %rbx
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L147
.L146:
	.loc 3 360 0 discriminator 3
	movq	showj(%rip), %rax
	subq	$8, %rax
	movq	%rax, %rcx
	call	_ZdaPv
.L145:
	.loc 3 361 0 is_stmt 1
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	.refptr._ZSt4cout(%rip), %rcx
	call	_ZNSolsEPFRSoS_E
	movq	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%rip), %rdx
	movq	%rax, %rcx
	call	_ZNSolsEPFRSoS_E
	.loc 3 362 0
	leaq	.LC13(%rip), %rcx
	call	system
	.loc 3 363 0
	leaq	.LC53(%rip), %rcx
	call	system
.LEHE17:
.L62:
.LBE12:
	jmp	.L148
.L78:
	.loc 3 74 0
	leaq	2464(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSsD1Ev
	.loc 3 67 0
	leaq	832(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev
	.loc 3 65 0
	movq	%rbp, %rax
	movq	%rax, %rcx
	call	_ZNSt18basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
.L40:
	.loc 3 364 0
	leaq	2560(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSsD1Ev
	movl	%ebx, %eax
	jmp	.L181
.L165:
	movq	%rax, %rbx
	leaq	2583(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	movq	%rbx, %rax
	movq	%rax, %rcx
.LEHB18:
	call	_Unwind_Resume
.L167:
	movq	%rax, %rbx
.LBB29:
.LBB8:
	.loc 3 55 0
	leaq	1312(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
	jmp	.L152
.L168:
	movq	%rax, %rbx
.LBE8:
.LBE29:
.LBB30:
.LBB11:
	.loc 3 63 0
	leaq	1312(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
	jmp	.L152
.L172:
	movq	%rax, %r12
.LBE11:
.LBE30:
.LBB31:
	testq	%rbx, %rbx
	je	.L155
	.loc 3 125 0 discriminator 3
	movl	$1, %eax
	subq	%rdi, %rax
	salq	$3, %rax
	leaq	(%rbx,%rax), %rdi
.L156:
	cmpq	%rbx, %rdi
	je	.L155
	subq	$8, %rdi
	.loc 3 125 0 is_stmt 0 discriminator 7
	movq	%rdi, %rcx
	call	_ZNSsD1Ev
	jmp	.L156
.L155:
	movq	%r12, %rbx
	.loc 3 125 0 discriminator 8
	movq	%rsi, %rcx
	call	_ZdaPv
	jmp	.L157
.L173:
	movq	%rax, %r12
	testq	%rbx, %rbx
	je	.L159
	.loc 3 130 0 is_stmt 1 discriminator 9
	movl	$10, %eax
	subq	%rdi, %rax
	salq	$3, %rax
	leaq	(%rbx,%rax), %rdi
.L160:
	cmpq	%rbx, %rdi
	je	.L159
	subq	$8, %rdi
	.loc 3 130 0 is_stmt 0 discriminator 13
	movq	%rdi, %rcx
	call	_ZNSsD1Ev
	jmp	.L160
.L159:
	movq	%r12, %rbx
	.loc 3 130 0 discriminator 14
	movq	%rsi, %rcx
	call	_ZdaPv
	jmp	.L157
.L174:
	movq	%rax, %rbx
.LBB27:
.LBB16:
	.loc 3 165 0 is_stmt 1
	leaq	368(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
	jmp	.L157
.L175:
	movq	%rax, %rbx
.LBE16:
.LBE27:
.LBB28:
.LBB20:
	.loc 3 216 0
	leaq	368(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
	jmp	.L157
.L171:
	movq	%rax, %rbx
.L157:
.LBE20:
.LBE28:
.LBE31:
	.loc 3 74 0
	leaq	2464(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSsD1Ev
	jmp	.L163
.L170:
	movq	%rax, %rbx
.L163:
	.loc 3 67 0
	leaq	832(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev
	jmp	.L164
.L169:
	movq	%rax, %rbx
.L164:
	.loc 3 65 0
	movq	%rbp, %rax
	movq	%rax, %rcx
	call	_ZNSt18basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
	jmp	.L152
.L166:
	movq	%rax, %rbx
.L152:
	.loc 3 364 0
	leaq	2560(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSsD1Ev
	movq	%rbx, %rax
	movq	%rax, %rcx
	call	_Unwind_Resume
.LEHE18:
.L181:
.LBE5:
	.loc 3 365 0
	movaps	2656(%rbp), %xmm6
	addq	$2800, %rsp
	.cfi_restore 23
	popq	%rbx
	.cfi_restore 3
	popq	%rsi
	.cfi_restore 4
	popq	%rdi
	.cfi_restore 5
	popq	%r12
	.cfi_restore 12
	popq	%r13
	.cfi_restore 13
	popq	%r14
	.cfi_restore 14
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, -2744
	ret
	.cfi_endproc
.LFE9836:
	.def	__gxx_personality_seh0;	.scl	2;	.type	32;	.endef
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA9836:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE9836-.LLSDACSB9836
.LLSDACSB9836:
	.uleb128 .LEHB0-.LFB9836
	.uleb128 .LEHE0-.LEHB0
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB1-.LFB9836
	.uleb128 .LEHE1-.LEHB1
	.uleb128 .L165-.LFB9836
	.uleb128 0
	.uleb128 .LEHB2-.LFB9836
	.uleb128 .LEHE2-.LEHB2
	.uleb128 .L166-.LFB9836
	.uleb128 0
	.uleb128 .LEHB3-.LFB9836
	.uleb128 .LEHE3-.LEHB3
	.uleb128 .L167-.LFB9836
	.uleb128 0
	.uleb128 .LEHB4-.LFB9836
	.uleb128 .LEHE4-.LEHB4
	.uleb128 .L166-.LFB9836
	.uleb128 0
	.uleb128 .LEHB5-.LFB9836
	.uleb128 .LEHE5-.LEHB5
	.uleb128 .L168-.LFB9836
	.uleb128 0
	.uleb128 .LEHB6-.LFB9836
	.uleb128 .LEHE6-.LEHB6
	.uleb128 .L166-.LFB9836
	.uleb128 0
	.uleb128 .LEHB7-.LFB9836
	.uleb128 .LEHE7-.LEHB7
	.uleb128 .L169-.LFB9836
	.uleb128 0
	.uleb128 .LEHB8-.LFB9836
	.uleb128 .LEHE8-.LEHB8
	.uleb128 .L170-.LFB9836
	.uleb128 0
	.uleb128 .LEHB9-.LFB9836
	.uleb128 .LEHE9-.LEHB9
	.uleb128 .L171-.LFB9836
	.uleb128 0
	.uleb128 .LEHB10-.LFB9836
	.uleb128 .LEHE10-.LEHB10
	.uleb128 .L172-.LFB9836
	.uleb128 0
	.uleb128 .LEHB11-.LFB9836
	.uleb128 .LEHE11-.LEHB11
	.uleb128 .L171-.LFB9836
	.uleb128 0
	.uleb128 .LEHB12-.LFB9836
	.uleb128 .LEHE12-.LEHB12
	.uleb128 .L173-.LFB9836
	.uleb128 0
	.uleb128 .LEHB13-.LFB9836
	.uleb128 .LEHE13-.LEHB13
	.uleb128 .L171-.LFB9836
	.uleb128 0
	.uleb128 .LEHB14-.LFB9836
	.uleb128 .LEHE14-.LEHB14
	.uleb128 .L174-.LFB9836
	.uleb128 0
	.uleb128 .LEHB15-.LFB9836
	.uleb128 .LEHE15-.LEHB15
	.uleb128 .L171-.LFB9836
	.uleb128 0
	.uleb128 .LEHB16-.LFB9836
	.uleb128 .LEHE16-.LEHB16
	.uleb128 .L175-.LFB9836
	.uleb128 0
	.uleb128 .LEHB17-.LFB9836
	.uleb128 .LEHE17-.LEHB17
	.uleb128 .L171-.LFB9836
	.uleb128 0
	.uleb128 .LEHB18-.LFB9836
	.uleb128 .LEHE18-.LEHB18
	.uleb128 0
	.uleb128 0
.LLSDACSE9836:
	.text
	.seh_endproc
	.section	.text$_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_,"x"
	.linkonce discard
	.globl	_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_
	.def	_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_
_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_:
.LFB10190:
	.file 4 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/basic_string.h"
	.loc 4 2538 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	.loc 4 2540 0
	movq	24(%rbp), %rax
	movq	%rax, %rdx
	movq	16(%rbp), %rcx
	call	_ZNKSs7compareEPKc
	testl	%eax, %eax
	sete	%al
	addq	$32, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10190:
	.seh_endproc
	.section	.text$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_,"x"
	.linkonce discard
	.globl	_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_
	.def	_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_
_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_:
.LFB10232:
	.file 5 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/move.h"
	.loc 5 101 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	.loc 5 102 0
	movq	16(%rbp), %rax
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10232:
	.seh_endproc
	.section	.text$_ZSt4swapIiEvRT_S1_,"x"
	.linkonce discard
	.globl	_ZSt4swapIiEvRT_S1_
	.def	_ZSt4swapIiEvRT_S1_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4swapIiEvRT_S1_
_ZSt4swapIiEvRT_S1_:
.LFB10231:
	.loc 5 166 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	.seh_stackalloc	48
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
.LBB32:
	.loc 5 175 0
	movq	16(%rbp), %rcx
	call	_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_
	movl	(%rax), %eax
	movl	%eax, -4(%rbp)
	.loc 5 176 0
	movq	24(%rbp), %rax
	movq	%rax, %rcx
	call	_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_
	movl	(%rax), %edx
	movq	16(%rbp), %rax
	movl	%edx, (%rax)
	.loc 5 177 0
	leaq	-4(%rbp), %rax
	movq	%rax, %rcx
	call	_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_
	movl	(%rax), %edx
	movq	24(%rbp), %rax
	movl	%edx, (%rax)
.LBE32:
	.loc 5 178 0
	addq	$48, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10231:
	.seh_endproc
	.section	.text$_ZSt4swapIcSt11char_traitsIcESaIcEEvRSbIT_T0_T1_ES7_,"x"
	.linkonce discard
	.globl	_ZSt4swapIcSt11char_traitsIcESaIcEEvRSbIT_T0_T1_ES7_
	.def	_ZSt4swapIcSt11char_traitsIcESaIcEEvRSbIT_T0_T1_ES7_;	.scl	2;	.type	32;	.endef
	.seh_proc	_ZSt4swapIcSt11char_traitsIcESaIcEEvRSbIT_T0_T1_ES7_
_ZSt4swapIcSt11char_traitsIcESaIcEEvRSbIT_T0_T1_ES7_:
.LFB10233:
	.loc 4 2736 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	movq	%rcx, 16(%rbp)
	movq	%rdx, 24(%rbp)
	.loc 4 2738 0
	movq	24(%rbp), %rax
	movq	%rax, %rdx
	movq	16(%rbp), %rcx
	call	_ZNSs4swapERSs
	nop
	addq	$32, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10233:
	.seh_endproc
	.text
	.def	__tcf_0;	.scl	3;	.type	32;	.endef
	.seh_proc	__tcf_0
__tcf_0:
.LFB10852:
	.file 6 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream"
	.loc 6 74 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	.loc 6 74 0
	leaq	_ZStL8__ioinit(%rip), %rcx
	call	_ZNSt8ios_base4InitD1Ev
	nop
	addq	$32, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10852:
	.seh_endproc
	.def	__tcf_1;	.scl	3;	.type	32;	.endef
	.seh_proc	__tcf_1
__tcf_1:
.LFB10853:
	.loc 3 8 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	.loc 3 8 0
	leaq	ben(%rip), %rcx
	call	_ZNSsD1Ev
	nop
	addq	$32, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10853:
	.seh_endproc
	.def	__tcf_2;	.scl	3;	.type	32;	.endef
	.seh_proc	__tcf_2
__tcf_2:
.LFB10854:
	.loc 3 9 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	.loc 3 9 0
	leaq	file(%rip), %rcx
	call	_ZNSsD1Ev
	nop
	addq	$32, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10854:
	.seh_endproc
	.section .rdata,"dr"
.LC75:
	.ascii "\277\302\300\263\0"
.LC76:
	.ascii "\265\317\260\302\304\310\0"
.LC77:
	.ascii "\267\306\320\273\266\373\0"
.LC78:
	.ascii "\302\271\322\260\324\272\306\275\262\330\0"
.LC79:
	.ascii "\324\306\335\300\0"
.LC80:
	.ascii "\276\303\341\252\310\314\0"
.LC81:
	.ascii "\276\305\314\365\364\304\302\336\0"
.LC82:
	.ascii "\316\345\300\311\0"
.LC83:
	.ascii "\324\347\350\326\0"
.LC84:
	.ascii "\260\340\304\341\314\330\0"
.LC85:
	.ascii "\321\314\347\263\0"
.LC86:
	.ascii "\302\336\311\257\300\362\321\307\0"
.LC87:
	.ascii "\311\260\314\307\0"
.LC88:
	.ascii "\315\320\302\355\0"
.LC89:
	.ascii "\326\330\324\306\0"
.LC90:
	.ascii "\305\265\260\254\266\373\0"
.LC91:
	.ascii "\304\375\271\342\0"
.LC92:
	.ascii "\320\301\354\315\0"
.LC93:
	.ascii "\320\320\307\357\0"
.LC94:
	.ascii "\261\261\266\267\0"
.LC95:
	.ascii "\317\343\301\342\0"
.LC96:
	.ascii "\300\327\324\363\0"
.LC97:
	.ascii "\260\305\260\305\300\255\0"
.LC98:
	.ascii "\271\255\262\330\0"
.LC99:
	.ascii "\274\300\300\361\271\255\0"
.LC100:
	.ascii "\276\370\317\322\0"
.LC101:
	.ascii "\316\367\267\347\301\324\271\255\0"
.LC102:
	.ascii "\325\321\320\304\0"
.LC103:
	.ascii "\274\300\300\361\262\320\325\302\0"
.LC104:
	.ascii "\301\367\300\313\300\326\325\302\0"
.LC105:
	.ascii "\316\367\267\347\303\330\265\344\0"
.LC106:
	.ascii "\316\367\267\347\263\244\307\271\0"
.LC107:
	.ascii "\274\300\300\361\264\363\275\243\0"
.LC108:
	.ascii "\326\323\275\243\0"
.LC109:
	.ascii "\316\367\267\347\264\363\275\243\0"
.LC110:
	.ascii "\317\273\300\357\301\372\322\367\0"
.LC111:
	.ascii "\274\300\300\361\275\243\0"
.LC112:
	.ascii "\265\321\275\243\0"
.LC113:
	.ascii "\316\367\267\347\275\243\0"
.LC114:
	.ascii "\277\314\307\347\0"
.LC115:
	.ascii "\304\252\304\310\0"
.LC116:
	.ascii "\306\337\306\337\0"
.LC117:
	.ascii "\265\317\302\254\277\313\0"
.LC118:
	.ascii "\307\331\0"
.LC119:
	.ascii "\265\257\271\255\0"
.LC120:
	.ascii "\311\361\311\344\312\326\326\256\312\304\0"
.LC121:
	.ascii "\321\273\323\360\271\255\0"
.LC122:
	.ascii "\364\344\323\361\267\250\307\362\0"
.LC123:
	.ascii "\314\326\301\372\323\242\275\334\314\267\0"
.LC124:
	.ascii "\304\247\265\274\320\367\302\333\0"
.LC125:
	.ascii "\272\332\323\247\307\271\0"
.LC126:
	.ascii "\322\324\300\355\267\376\310\313\0"
.LC127:
	.ascii "\343\345\324\241\301\372\321\252\265\304\275\243\0"
.LC128:
	.ascii "\314\372\323\260\300\253\275\243\0"
.LC129:
	.ascii "\267\311\314\354\323\371\275\243\0"
.LC130:
	.ascii "\300\350\303\367\311\361\275\243\0"
.LC131:
	.ascii "\300\344\310\320\0"
.LC132:
	.ascii "\326\323\300\353\0"
	.text
	.def	_Z41__static_initialization_and_destruction_0ii;	.scl	3;	.type	32;	.endef
	.seh_proc	_Z41__static_initialization_and_destruction_0ii
_Z41__static_initialization_and_destruction_0ii:
.LFB10851:
	.loc 3 365 0
	.cfi_startproc
	.cfi_personality 0x9b,.LDFCM0
	.cfi_lsda 0x1c,.LLSDA10851
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%r12
	.seh_pushreg	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rdi
	.seh_pushreg	%rdi
	.cfi_def_cfa_offset 32
	.cfi_offset 5, -32
	pushq	%rsi
	.seh_pushreg	%rsi
	.cfi_def_cfa_offset 40
	.cfi_offset 4, -40
	pushq	%rbx
	.seh_pushreg	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$96, %rsp
	.seh_stackalloc	96
	.seh_endprologue
	movl	%ecx, 48(%rbp)
	movl	%edx, 56(%rbp)
	.loc 3 365 0
	cmpl	$1, 48(%rbp)
	jne	.L327
	.loc 3 365 0 is_stmt 0 discriminator 1
	cmpl	$65535, 56(%rbp)
	jne	.L327
	.loc 6 74 0 is_stmt 1
	leaq	_ZStL8__ioinit(%rip), %rcx
.LEHB19:
	call	_ZNSt8ios_base4InitC1Ev
	leaq	__tcf_0(%rip), %rcx
	call	atexit
	.loc 3 5 0
	movl	$328, %ecx
	call	_Znay
.LEHE19:
	movq	%rax, %r12
	movq	$40, (%r12)
	leaq	8(%r12), %rdi
	movl	$39, %ebx
	leaq	-58(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-58(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC75(%rip), %rdx
	movq	%rdi, %rcx
.LEHB20:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE20:
	.loc 3 5 0 is_stmt 0 discriminator 2
	leaq	-58(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	leaq	8(%rdi), %rsi
	subq	$1, %rbx
	leaq	-57(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-57(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC76(%rip), %rdx
	movq	%rsi, %rcx
.LEHB21:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE21:
	.loc 3 5 0 discriminator 4
	leaq	-57(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-56(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-56(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC77(%rip), %rdx
	movq	%rsi, %rcx
.LEHB22:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE22:
	.loc 3 5 0 discriminator 6
	leaq	-56(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-55(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-55(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC78(%rip), %rdx
	movq	%rsi, %rcx
.LEHB23:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE23:
	.loc 3 5 0 discriminator 8
	leaq	-55(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-54(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-54(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC79(%rip), %rdx
	movq	%rsi, %rcx
.LEHB24:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE24:
	.loc 3 5 0 discriminator 10
	leaq	-54(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-53(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-53(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC80(%rip), %rdx
	movq	%rsi, %rcx
.LEHB25:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE25:
	.loc 3 5 0 discriminator 12
	leaq	-53(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-52(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-52(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC81(%rip), %rdx
	movq	%rsi, %rcx
.LEHB26:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE26:
	.loc 3 5 0 discriminator 14
	leaq	-52(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-51(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-51(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC82(%rip), %rdx
	movq	%rsi, %rcx
.LEHB27:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE27:
	.loc 3 5 0 discriminator 16
	leaq	-51(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-50(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-50(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC83(%rip), %rdx
	movq	%rsi, %rcx
.LEHB28:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE28:
	.loc 3 5 0 discriminator 18
	leaq	-50(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-49(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-49(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC84(%rip), %rdx
	movq	%rsi, %rcx
.LEHB29:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE29:
	.loc 3 5 0 discriminator 20
	leaq	-49(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-48(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-48(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC85(%rip), %rdx
	movq	%rsi, %rcx
.LEHB30:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE30:
	.loc 3 5 0 discriminator 22
	leaq	-48(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-47(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-47(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC86(%rip), %rdx
	movq	%rsi, %rcx
.LEHB31:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE31:
	.loc 3 5 0 discriminator 24
	leaq	-47(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-46(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-46(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC87(%rip), %rdx
	movq	%rsi, %rcx
.LEHB32:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE32:
	.loc 3 5 0 discriminator 26
	leaq	-46(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-45(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-45(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC88(%rip), %rdx
	movq	%rsi, %rcx
.LEHB33:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE33:
	.loc 3 5 0 discriminator 28
	leaq	-45(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-44(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-44(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC89(%rip), %rdx
	movq	%rsi, %rcx
.LEHB34:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE34:
	.loc 3 5 0 discriminator 30
	leaq	-44(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-43(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-43(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC90(%rip), %rdx
	movq	%rsi, %rcx
.LEHB35:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE35:
	.loc 3 5 0 discriminator 32
	leaq	-43(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-42(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-42(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC91(%rip), %rdx
	movq	%rsi, %rcx
.LEHB36:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE36:
	.loc 3 5 0 discriminator 34
	leaq	-42(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-41(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-41(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC92(%rip), %rdx
	movq	%rsi, %rcx
.LEHB37:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE37:
	.loc 3 5 0 discriminator 36
	leaq	-41(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-40(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-40(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC93(%rip), %rdx
	movq	%rsi, %rcx
.LEHB38:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE38:
	.loc 3 5 0 discriminator 38
	leaq	-40(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-39(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-39(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC94(%rip), %rdx
	movq	%rsi, %rcx
.LEHB39:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE39:
	.loc 3 5 0 discriminator 40
	leaq	-39(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-38(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-38(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC95(%rip), %rdx
	movq	%rsi, %rcx
.LEHB40:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE40:
	.loc 3 5 0 discriminator 42
	leaq	-38(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-37(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-37(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC96(%rip), %rdx
	movq	%rsi, %rcx
.LEHB41:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE41:
	.loc 3 5 0 discriminator 44
	leaq	-37(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-36(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-36(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC97(%rip), %rdx
	movq	%rsi, %rcx
.LEHB42:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE42:
	.loc 3 5 0 discriminator 46
	leaq	-36(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-35(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-35(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC98(%rip), %rdx
	movq	%rsi, %rcx
.LEHB43:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE43:
	.loc 3 5 0 discriminator 48
	leaq	-35(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-34(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-34(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC99(%rip), %rdx
	movq	%rsi, %rcx
.LEHB44:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE44:
	.loc 3 5 0 discriminator 50
	leaq	-34(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-33(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-33(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC100(%rip), %rdx
	movq	%rsi, %rcx
.LEHB45:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE45:
	.loc 3 5 0 discriminator 52
	leaq	-33(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-32(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-32(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC101(%rip), %rdx
	movq	%rsi, %rcx
.LEHB46:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE46:
	.loc 3 5 0 discriminator 54
	leaq	-32(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-31(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-31(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC102(%rip), %rdx
	movq	%rsi, %rcx
.LEHB47:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE47:
	.loc 3 5 0 discriminator 56
	leaq	-31(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-30(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-30(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC103(%rip), %rdx
	movq	%rsi, %rcx
.LEHB48:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE48:
	.loc 3 5 0 discriminator 58
	leaq	-30(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-29(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-29(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC104(%rip), %rdx
	movq	%rsi, %rcx
.LEHB49:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE49:
	.loc 3 5 0 discriminator 60
	leaq	-29(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-28(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-28(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC105(%rip), %rdx
	movq	%rsi, %rcx
.LEHB50:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE50:
	.loc 3 5 0 discriminator 62
	leaq	-28(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-27(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-27(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC106(%rip), %rdx
	movq	%rsi, %rcx
.LEHB51:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE51:
	.loc 3 5 0 discriminator 64
	leaq	-27(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-26(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-26(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC107(%rip), %rdx
	movq	%rsi, %rcx
.LEHB52:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE52:
	.loc 3 5 0 discriminator 66
	leaq	-26(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-25(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-25(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC108(%rip), %rdx
	movq	%rsi, %rcx
.LEHB53:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE53:
	.loc 3 5 0 discriminator 68
	leaq	-25(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-24(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-24(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC109(%rip), %rdx
	movq	%rsi, %rcx
.LEHB54:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE54:
	.loc 3 5 0 discriminator 70
	leaq	-24(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-23(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-23(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC110(%rip), %rdx
	movq	%rsi, %rcx
.LEHB55:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE55:
	.loc 3 5 0 discriminator 72
	leaq	-23(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-22(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-22(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC111(%rip), %rdx
	movq	%rsi, %rcx
.LEHB56:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE56:
	.loc 3 5 0 discriminator 74
	leaq	-22(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-21(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-21(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC112(%rip), %rdx
	movq	%rsi, %rcx
.LEHB57:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE57:
	.loc 3 5 0 discriminator 76
	leaq	-21(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-20(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-20(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC113(%rip), %rdx
	movq	%rsi, %rcx
.LEHB58:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE58:
	.loc 3 5 0 discriminator 78
	leaq	-20(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	leaq	8(%rsi), %rax
	subq	$1, %rbx
	movq	%rax, %rcx
.LEHB59:
	call	_ZNSsC1Ev
.LEHE59:
	.loc 3 5 0 discriminator 79
	leaq	8(%r12), %rax
	movq	%rax, a(%rip)
	.loc 3 6 0 is_stmt 1 discriminator 79
	movl	$56, %ecx
.LEHB60:
	call	_Znay
.LEHE60:
	movq	%rax, %rdi
	movq	$6, (%rdi)
	leaq	8(%rdi), %rsi
	movl	$5, %ebx
	leaq	-19(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-19(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC114(%rip), %rdx
	movq	%rsi, %rcx
.LEHB61:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE61:
	.loc 3 6 0 is_stmt 0 discriminator 2
	leaq	-19(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	leaq	8(%rsi), %r12
	subq	$1, %rbx
	leaq	-18(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-18(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC115(%rip), %rdx
	movq	%r12, %rcx
.LEHB62:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE62:
	.loc 3 6 0 discriminator 4
	leaq	-18(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %r12
	subq	$1, %rbx
	leaq	-17(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-17(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC116(%rip), %rdx
	movq	%r12, %rcx
.LEHB63:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE63:
	.loc 3 6 0 discriminator 6
	leaq	-17(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %r12
	subq	$1, %rbx
	leaq	-16(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-16(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC117(%rip), %rdx
	movq	%r12, %rcx
.LEHB64:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE64:
	.loc 3 6 0 discriminator 8
	leaq	-16(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %r12
	subq	$1, %rbx
	leaq	-15(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-15(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC118(%rip), %rdx
	movq	%r12, %rcx
.LEHB65:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE65:
	.loc 3 6 0 discriminator 10
	leaq	-15(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	leaq	8(%r12), %rax
	subq	$1, %rbx
	movq	%rax, %rcx
.LEHB66:
	call	_ZNSsC1Ev
.LEHE66:
	.loc 3 6 0 discriminator 11
	leaq	8(%rdi), %rax
	movq	%rax, wa(%rip)
	.loc 3 7 0 is_stmt 1 discriminator 11
	movl	$120, %ecx
.LEHB67:
	call	_Znay
.LEHE67:
	movq	%rax, %r12
	movq	$14, (%r12)
	leaq	8(%r12), %rdi
	movl	$13, %ebx
	leaq	-14(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-14(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC119(%rip), %rdx
	movq	%rdi, %rcx
.LEHB68:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE68:
	.loc 3 7 0 is_stmt 0 discriminator 2
	leaq	-14(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	leaq	8(%rdi), %rsi
	subq	$1, %rbx
	leaq	-13(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-13(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC120(%rip), %rdx
	movq	%rsi, %rcx
.LEHB69:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE69:
	.loc 3 7 0 discriminator 4
	leaq	-13(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-12(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-12(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC121(%rip), %rdx
	movq	%rsi, %rcx
.LEHB70:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE70:
	.loc 3 7 0 discriminator 6
	leaq	-12(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-11(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-11(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC122(%rip), %rdx
	movq	%rsi, %rcx
.LEHB71:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE71:
	.loc 3 7 0 discriminator 8
	leaq	-11(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-10(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-10(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC123(%rip), %rdx
	movq	%rsi, %rcx
.LEHB72:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE72:
	.loc 3 7 0 discriminator 10
	leaq	-10(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-9(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-9(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC124(%rip), %rdx
	movq	%rsi, %rcx
.LEHB73:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE73:
	.loc 3 7 0 discriminator 12
	leaq	-9(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-8(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC125(%rip), %rdx
	movq	%rsi, %rcx
.LEHB74:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE74:
	.loc 3 7 0 discriminator 14
	leaq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-7(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-7(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC126(%rip), %rdx
	movq	%rsi, %rcx
.LEHB75:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE75:
	.loc 3 7 0 discriminator 16
	leaq	-7(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-6(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-6(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC127(%rip), %rdx
	movq	%rsi, %rcx
.LEHB76:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE76:
	.loc 3 7 0 discriminator 18
	leaq	-6(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-5(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-5(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC128(%rip), %rdx
	movq	%rsi, %rcx
.LEHB77:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE77:
	.loc 3 7 0 discriminator 20
	leaq	-5(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-4(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-4(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC129(%rip), %rdx
	movq	%rsi, %rcx
.LEHB78:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE78:
	.loc 3 7 0 discriminator 22
	leaq	-4(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-3(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-3(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC130(%rip), %rdx
	movq	%rsi, %rcx
.LEHB79:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE79:
	.loc 3 7 0 discriminator 24
	leaq	-3(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	addq	$8, %rsi
	subq	$1, %rbx
	leaq	-2(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-2(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC131(%rip), %rdx
	movq	%rsi, %rcx
.LEHB80:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE80:
	.loc 3 7 0 discriminator 26
	leaq	-2(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	leaq	8(%rsi), %rax
	subq	$1, %rbx
	movq	%rax, %rcx
.LEHB81:
	call	_ZNSsC1Ev
.LEHE81:
	.loc 3 7 0 discriminator 27
	leaq	8(%r12), %rax
	movq	%rax, san(%rip)
	.loc 3 8 0 is_stmt 1 discriminator 27
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcEC1Ev
	leaq	-1(%rbp), %rax
	movq	%rax, %r8
	leaq	.LC132(%rip), %rdx
	leaq	ben(%rip), %rcx
.LEHB82:
	call	_ZNSsC1EPKcRKSaIcE
.LEHE82:
	.loc 3 8 0 is_stmt 0 discriminator 2
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	leaq	__tcf_1(%rip), %rcx
	call	atexit
	.loc 3 9 0 is_stmt 1 discriminator 2
	leaq	file(%rip), %rcx
.LEHB83:
	call	_ZNSsC1Ev
	leaq	__tcf_2(%rip), %rcx
	call	atexit
	.loc 3 10 0 discriminator 2
	movl	$91616, %ecx
	call	_Znay
.LEHE83:
	movq	%rax, %rsi
	movq	$11451, (%rsi)
	leaq	8(%rsi), %rbx
	movl	$11450, %edi
	movq	%rbx, %r12
	jmp	.L193
.L194:
	.loc 3 10 0 is_stmt 0 discriminator 4
	movq	%r12, %rcx
.LEHB84:
	call	_ZNSsC1Ev
.LEHE84:
	.loc 3 10 0 discriminator 2
	addq	$8, %r12
	subq	$1, %rdi
.L193:
	.loc 3 10 0 discriminator 3
	cmpq	$-1, %rdi
	jne	.L194
	.loc 3 10 0
	leaq	8(%rsi), %rax
	movq	%rax, ch(%rip)
	.loc 3 13 0 is_stmt 1
	movl	$45804, %ecx
.LEHB85:
	call	_Znay
	movq	%rax, type(%rip)
	jmp	.L327
.L265:
	movq	%rax, %rsi
	.loc 3 5 0
	leaq	-58(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L267:
	movq	%rax, %rsi
	leaq	-57(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L268:
	movq	%rax, %rsi
	leaq	-56(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L269:
	movq	%rax, %rsi
	leaq	-55(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L270:
	movq	%rax, %rsi
	leaq	-54(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L271:
	movq	%rax, %rsi
	leaq	-53(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L272:
	movq	%rax, %rsi
	leaq	-52(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L273:
	movq	%rax, %rsi
	leaq	-51(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L274:
	movq	%rax, %rsi
	leaq	-50(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L275:
	movq	%rax, %rsi
	leaq	-49(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L276:
	movq	%rax, %rsi
	leaq	-48(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L277:
	movq	%rax, %rsi
	leaq	-47(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L278:
	movq	%rax, %rsi
	leaq	-46(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L279:
	movq	%rax, %rsi
	leaq	-45(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L280:
	movq	%rax, %rsi
	leaq	-44(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L281:
	movq	%rax, %rsi
	leaq	-43(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L282:
	movq	%rax, %rsi
	leaq	-42(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L283:
	movq	%rax, %rsi
	leaq	-41(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L284:
	movq	%rax, %rsi
	leaq	-40(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L285:
	movq	%rax, %rsi
	leaq	-39(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L286:
	movq	%rax, %rsi
	leaq	-38(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L287:
	movq	%rax, %rsi
	leaq	-37(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L288:
	movq	%rax, %rsi
	leaq	-36(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L289:
	movq	%rax, %rsi
	leaq	-35(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L290:
	movq	%rax, %rsi
	leaq	-34(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L291:
	movq	%rax, %rsi
	leaq	-33(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L292:
	movq	%rax, %rsi
	leaq	-32(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L293:
	movq	%rax, %rsi
	leaq	-31(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L294:
	movq	%rax, %rsi
	leaq	-30(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L295:
	movq	%rax, %rsi
	leaq	-29(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L296:
	movq	%rax, %rsi
	leaq	-28(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L297:
	movq	%rax, %rsi
	leaq	-27(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L298:
	movq	%rax, %rsi
	leaq	-26(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L299:
	movq	%rax, %rsi
	leaq	-25(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L300:
	movq	%rax, %rsi
	leaq	-24(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L301:
	movq	%rax, %rsi
	leaq	-23(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L302:
	movq	%rax, %rsi
	leaq	-22(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L303:
	movq	%rax, %rsi
	leaq	-21(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L304:
	movq	%rax, %rsi
	leaq	-20(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L196
.L266:
	movq	%rax, %rsi
.L196:
	testq	%rdi, %rdi
	je	.L235
	.loc 3 5 0 is_stmt 0 discriminator 1
	movl	$39, %eax
	subq	%rbx, %rax
	salq	$3, %rax
	leaq	(%rdi,%rax), %rbx
.L236:
	cmpq	%rdi, %rbx
	je	.L235
	subq	$8, %rbx
	.loc 3 5 0 discriminator 5
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L236
.L235:
	movq	%rsi, %rbx
	.loc 3 5 0 discriminator 6
	movq	%r12, %rcx
	call	_ZdaPv
	movq	%rbx, %rax
	movq	%rax, %rcx
	call	_Unwind_Resume
.L305:
	movq	%rax, %r12
	.loc 3 6 0 is_stmt 1
	leaq	-19(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L238
.L307:
	movq	%rax, %r12
	leaq	-18(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L238
.L308:
	movq	%rax, %r12
	leaq	-17(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L238
.L309:
	movq	%rax, %r12
	leaq	-16(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L238
.L310:
	movq	%rax, %r12
	leaq	-15(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L238
.L306:
	movq	%rax, %r12
.L238:
	testq	%rsi, %rsi
	je	.L243
	.loc 3 6 0 is_stmt 0 discriminator 7
	movl	$5, %eax
	subq	%rbx, %rax
	salq	$3, %rax
	leaq	(%rsi,%rax), %rbx
.L244:
	cmpq	%rsi, %rbx
	je	.L243
	subq	$8, %rbx
	.loc 3 6 0 discriminator 11
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L244
.L243:
	movq	%r12, %rbx
	.loc 3 6 0 discriminator 12
	movq	%rdi, %rcx
	call	_ZdaPv
	movq	%rbx, %rax
	movq	%rax, %rcx
	call	_Unwind_Resume
.L311:
	movq	%rax, %rsi
	.loc 3 7 0 is_stmt 1
	leaq	-14(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L313:
	movq	%rax, %rsi
	leaq	-13(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L314:
	movq	%rax, %rsi
	leaq	-12(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L315:
	movq	%rax, %rsi
	leaq	-11(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L316:
	movq	%rax, %rsi
	leaq	-10(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L317:
	movq	%rax, %rsi
	leaq	-9(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L318:
	movq	%rax, %rsi
	leaq	-8(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L319:
	movq	%rax, %rsi
	leaq	-7(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L320:
	movq	%rax, %rsi
	leaq	-6(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L321:
	movq	%rax, %rsi
	leaq	-5(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L322:
	movq	%rax, %rsi
	leaq	-4(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L323:
	movq	%rax, %rsi
	leaq	-3(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L324:
	movq	%rax, %rsi
	leaq	-2(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	jmp	.L246
.L312:
	movq	%rax, %rsi
.L246:
	testq	%rdi, %rdi
	je	.L259
	.loc 3 7 0 is_stmt 0 discriminator 13
	movl	$13, %eax
	subq	%rbx, %rax
	salq	$3, %rax
	leaq	(%rdi,%rax), %rbx
.L260:
	cmpq	%rdi, %rbx
	je	.L259
	subq	$8, %rbx
	.loc 3 7 0 discriminator 17
	movq	%rbx, %rcx
	call	_ZNSsD1Ev
	jmp	.L260
.L259:
	movq	%rsi, %rbx
	.loc 3 7 0 discriminator 18
	movq	%r12, %rcx
	call	_ZdaPv
	movq	%rbx, %rax
	movq	%rax, %rcx
	call	_Unwind_Resume
.L325:
	movq	%rax, %rbx
	.loc 3 8 0 is_stmt 1
	leaq	-1(%rbp), %rax
	movq	%rax, %rcx
	call	_ZNSaIcED1Ev
	movq	%rbx, %rax
	movq	%rax, %rcx
	call	_Unwind_Resume
.L326:
	movq	%rax, %r12
	testq	%rbx, %rbx
	je	.L263
	.loc 3 10 0 discriminator 19
	movl	$11450, %eax
	subq	%rdi, %rax
	salq	$3, %rax
	leaq	(%rbx,%rax), %rdi
.L264:
	cmpq	%rbx, %rdi
	je	.L263
	subq	$8, %rdi
	.loc 3 10 0 is_stmt 0 discriminator 23
	movq	%rdi, %rcx
	call	_ZNSsD1Ev
	jmp	.L264
.L263:
	movq	%r12, %rbx
	.loc 3 10 0 discriminator 24
	movq	%rsi, %rcx
	call	_ZdaPv
	movq	%rbx, %rax
	movq	%rax, %rcx
	call	_Unwind_Resume
	nop
.LEHE85:
.L327:
	.loc 3 365 0 is_stmt 1
	addq	$96, %rsp
	popq	%rbx
	.cfi_restore 3
	popq	%rsi
	.cfi_restore 4
	popq	%rdi
	.cfi_restore 5
	popq	%r12
	.cfi_restore 12
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 40
	ret
	.cfi_endproc
.LFE10851:
	.seh_handler	__gxx_personality_seh0, @unwind, @except
	.seh_handlerdata
.LLSDA10851:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE10851-.LLSDACSB10851
.LLSDACSB10851:
	.uleb128 .LEHB19-.LFB10851
	.uleb128 .LEHE19-.LEHB19
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB20-.LFB10851
	.uleb128 .LEHE20-.LEHB20
	.uleb128 .L265-.LFB10851
	.uleb128 0
	.uleb128 .LEHB21-.LFB10851
	.uleb128 .LEHE21-.LEHB21
	.uleb128 .L267-.LFB10851
	.uleb128 0
	.uleb128 .LEHB22-.LFB10851
	.uleb128 .LEHE22-.LEHB22
	.uleb128 .L268-.LFB10851
	.uleb128 0
	.uleb128 .LEHB23-.LFB10851
	.uleb128 .LEHE23-.LEHB23
	.uleb128 .L269-.LFB10851
	.uleb128 0
	.uleb128 .LEHB24-.LFB10851
	.uleb128 .LEHE24-.LEHB24
	.uleb128 .L270-.LFB10851
	.uleb128 0
	.uleb128 .LEHB25-.LFB10851
	.uleb128 .LEHE25-.LEHB25
	.uleb128 .L271-.LFB10851
	.uleb128 0
	.uleb128 .LEHB26-.LFB10851
	.uleb128 .LEHE26-.LEHB26
	.uleb128 .L272-.LFB10851
	.uleb128 0
	.uleb128 .LEHB27-.LFB10851
	.uleb128 .LEHE27-.LEHB27
	.uleb128 .L273-.LFB10851
	.uleb128 0
	.uleb128 .LEHB28-.LFB10851
	.uleb128 .LEHE28-.LEHB28
	.uleb128 .L274-.LFB10851
	.uleb128 0
	.uleb128 .LEHB29-.LFB10851
	.uleb128 .LEHE29-.LEHB29
	.uleb128 .L275-.LFB10851
	.uleb128 0
	.uleb128 .LEHB30-.LFB10851
	.uleb128 .LEHE30-.LEHB30
	.uleb128 .L276-.LFB10851
	.uleb128 0
	.uleb128 .LEHB31-.LFB10851
	.uleb128 .LEHE31-.LEHB31
	.uleb128 .L277-.LFB10851
	.uleb128 0
	.uleb128 .LEHB32-.LFB10851
	.uleb128 .LEHE32-.LEHB32
	.uleb128 .L278-.LFB10851
	.uleb128 0
	.uleb128 .LEHB33-.LFB10851
	.uleb128 .LEHE33-.LEHB33
	.uleb128 .L279-.LFB10851
	.uleb128 0
	.uleb128 .LEHB34-.LFB10851
	.uleb128 .LEHE34-.LEHB34
	.uleb128 .L280-.LFB10851
	.uleb128 0
	.uleb128 .LEHB35-.LFB10851
	.uleb128 .LEHE35-.LEHB35
	.uleb128 .L281-.LFB10851
	.uleb128 0
	.uleb128 .LEHB36-.LFB10851
	.uleb128 .LEHE36-.LEHB36
	.uleb128 .L282-.LFB10851
	.uleb128 0
	.uleb128 .LEHB37-.LFB10851
	.uleb128 .LEHE37-.LEHB37
	.uleb128 .L283-.LFB10851
	.uleb128 0
	.uleb128 .LEHB38-.LFB10851
	.uleb128 .LEHE38-.LEHB38
	.uleb128 .L284-.LFB10851
	.uleb128 0
	.uleb128 .LEHB39-.LFB10851
	.uleb128 .LEHE39-.LEHB39
	.uleb128 .L285-.LFB10851
	.uleb128 0
	.uleb128 .LEHB40-.LFB10851
	.uleb128 .LEHE40-.LEHB40
	.uleb128 .L286-.LFB10851
	.uleb128 0
	.uleb128 .LEHB41-.LFB10851
	.uleb128 .LEHE41-.LEHB41
	.uleb128 .L287-.LFB10851
	.uleb128 0
	.uleb128 .LEHB42-.LFB10851
	.uleb128 .LEHE42-.LEHB42
	.uleb128 .L288-.LFB10851
	.uleb128 0
	.uleb128 .LEHB43-.LFB10851
	.uleb128 .LEHE43-.LEHB43
	.uleb128 .L289-.LFB10851
	.uleb128 0
	.uleb128 .LEHB44-.LFB10851
	.uleb128 .LEHE44-.LEHB44
	.uleb128 .L290-.LFB10851
	.uleb128 0
	.uleb128 .LEHB45-.LFB10851
	.uleb128 .LEHE45-.LEHB45
	.uleb128 .L291-.LFB10851
	.uleb128 0
	.uleb128 .LEHB46-.LFB10851
	.uleb128 .LEHE46-.LEHB46
	.uleb128 .L292-.LFB10851
	.uleb128 0
	.uleb128 .LEHB47-.LFB10851
	.uleb128 .LEHE47-.LEHB47
	.uleb128 .L293-.LFB10851
	.uleb128 0
	.uleb128 .LEHB48-.LFB10851
	.uleb128 .LEHE48-.LEHB48
	.uleb128 .L294-.LFB10851
	.uleb128 0
	.uleb128 .LEHB49-.LFB10851
	.uleb128 .LEHE49-.LEHB49
	.uleb128 .L295-.LFB10851
	.uleb128 0
	.uleb128 .LEHB50-.LFB10851
	.uleb128 .LEHE50-.LEHB50
	.uleb128 .L296-.LFB10851
	.uleb128 0
	.uleb128 .LEHB51-.LFB10851
	.uleb128 .LEHE51-.LEHB51
	.uleb128 .L297-.LFB10851
	.uleb128 0
	.uleb128 .LEHB52-.LFB10851
	.uleb128 .LEHE52-.LEHB52
	.uleb128 .L298-.LFB10851
	.uleb128 0
	.uleb128 .LEHB53-.LFB10851
	.uleb128 .LEHE53-.LEHB53
	.uleb128 .L299-.LFB10851
	.uleb128 0
	.uleb128 .LEHB54-.LFB10851
	.uleb128 .LEHE54-.LEHB54
	.uleb128 .L300-.LFB10851
	.uleb128 0
	.uleb128 .LEHB55-.LFB10851
	.uleb128 .LEHE55-.LEHB55
	.uleb128 .L301-.LFB10851
	.uleb128 0
	.uleb128 .LEHB56-.LFB10851
	.uleb128 .LEHE56-.LEHB56
	.uleb128 .L302-.LFB10851
	.uleb128 0
	.uleb128 .LEHB57-.LFB10851
	.uleb128 .LEHE57-.LEHB57
	.uleb128 .L303-.LFB10851
	.uleb128 0
	.uleb128 .LEHB58-.LFB10851
	.uleb128 .LEHE58-.LEHB58
	.uleb128 .L304-.LFB10851
	.uleb128 0
	.uleb128 .LEHB59-.LFB10851
	.uleb128 .LEHE59-.LEHB59
	.uleb128 .L266-.LFB10851
	.uleb128 0
	.uleb128 .LEHB60-.LFB10851
	.uleb128 .LEHE60-.LEHB60
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB61-.LFB10851
	.uleb128 .LEHE61-.LEHB61
	.uleb128 .L305-.LFB10851
	.uleb128 0
	.uleb128 .LEHB62-.LFB10851
	.uleb128 .LEHE62-.LEHB62
	.uleb128 .L307-.LFB10851
	.uleb128 0
	.uleb128 .LEHB63-.LFB10851
	.uleb128 .LEHE63-.LEHB63
	.uleb128 .L308-.LFB10851
	.uleb128 0
	.uleb128 .LEHB64-.LFB10851
	.uleb128 .LEHE64-.LEHB64
	.uleb128 .L309-.LFB10851
	.uleb128 0
	.uleb128 .LEHB65-.LFB10851
	.uleb128 .LEHE65-.LEHB65
	.uleb128 .L310-.LFB10851
	.uleb128 0
	.uleb128 .LEHB66-.LFB10851
	.uleb128 .LEHE66-.LEHB66
	.uleb128 .L306-.LFB10851
	.uleb128 0
	.uleb128 .LEHB67-.LFB10851
	.uleb128 .LEHE67-.LEHB67
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB68-.LFB10851
	.uleb128 .LEHE68-.LEHB68
	.uleb128 .L311-.LFB10851
	.uleb128 0
	.uleb128 .LEHB69-.LFB10851
	.uleb128 .LEHE69-.LEHB69
	.uleb128 .L313-.LFB10851
	.uleb128 0
	.uleb128 .LEHB70-.LFB10851
	.uleb128 .LEHE70-.LEHB70
	.uleb128 .L314-.LFB10851
	.uleb128 0
	.uleb128 .LEHB71-.LFB10851
	.uleb128 .LEHE71-.LEHB71
	.uleb128 .L315-.LFB10851
	.uleb128 0
	.uleb128 .LEHB72-.LFB10851
	.uleb128 .LEHE72-.LEHB72
	.uleb128 .L316-.LFB10851
	.uleb128 0
	.uleb128 .LEHB73-.LFB10851
	.uleb128 .LEHE73-.LEHB73
	.uleb128 .L317-.LFB10851
	.uleb128 0
	.uleb128 .LEHB74-.LFB10851
	.uleb128 .LEHE74-.LEHB74
	.uleb128 .L318-.LFB10851
	.uleb128 0
	.uleb128 .LEHB75-.LFB10851
	.uleb128 .LEHE75-.LEHB75
	.uleb128 .L319-.LFB10851
	.uleb128 0
	.uleb128 .LEHB76-.LFB10851
	.uleb128 .LEHE76-.LEHB76
	.uleb128 .L320-.LFB10851
	.uleb128 0
	.uleb128 .LEHB77-.LFB10851
	.uleb128 .LEHE77-.LEHB77
	.uleb128 .L321-.LFB10851
	.uleb128 0
	.uleb128 .LEHB78-.LFB10851
	.uleb128 .LEHE78-.LEHB78
	.uleb128 .L322-.LFB10851
	.uleb128 0
	.uleb128 .LEHB79-.LFB10851
	.uleb128 .LEHE79-.LEHB79
	.uleb128 .L323-.LFB10851
	.uleb128 0
	.uleb128 .LEHB80-.LFB10851
	.uleb128 .LEHE80-.LEHB80
	.uleb128 .L324-.LFB10851
	.uleb128 0
	.uleb128 .LEHB81-.LFB10851
	.uleb128 .LEHE81-.LEHB81
	.uleb128 .L312-.LFB10851
	.uleb128 0
	.uleb128 .LEHB82-.LFB10851
	.uleb128 .LEHE82-.LEHB82
	.uleb128 .L325-.LFB10851
	.uleb128 0
	.uleb128 .LEHB83-.LFB10851
	.uleb128 .LEHE83-.LEHB83
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB84-.LFB10851
	.uleb128 .LEHE84-.LEHB84
	.uleb128 .L326-.LFB10851
	.uleb128 0
	.uleb128 .LEHB85-.LFB10851
	.uleb128 .LEHE85-.LEHB85
	.uleb128 0
	.uleb128 0
.LLSDACSE10851:
	.text
	.seh_endproc
	.section .rdata,"dr"
	.align 4
_ZN9__gnu_cxxL21__default_lock_policyE:
	.long	2
	.align 4
_ZNSt15regex_constantsL13error_collateE:
	.space 4
	.align 4
_ZNSt15regex_constantsL11error_ctypeE:
	.long	1
	.align 4
_ZNSt15regex_constantsL12error_escapeE:
	.long	2
	.align 4
_ZNSt15regex_constantsL13error_backrefE:
	.long	3
	.align 4
_ZNSt15regex_constantsL11error_brackE:
	.long	4
	.align 4
_ZNSt15regex_constantsL11error_parenE:
	.long	5
	.align 4
_ZNSt15regex_constantsL11error_braceE:
	.long	6
	.align 4
_ZNSt15regex_constantsL14error_badbraceE:
	.long	7
	.align 4
_ZNSt15regex_constantsL11error_rangeE:
	.long	8
	.align 4
_ZNSt15regex_constantsL11error_spaceE:
	.long	9
	.align 4
_ZNSt15regex_constantsL15error_badrepeatE:
	.long	10
	.align 4
_ZNSt15regex_constantsL16error_complexityE:
	.long	11
	.align 4
_ZNSt15regex_constantsL11error_stackE:
	.long	12
	.align 4
_ZNSt8__detailL19_S_invalid_state_idE:
	.long	-1
	.text
	.def	_GLOBAL__sub_I_a;	.scl	3;	.type	32;	.endef
	.seh_proc	_GLOBAL__sub_I_a
_GLOBAL__sub_I_a:
.LFB10885:
	.loc 3 365 0
	.cfi_startproc
	pushq	%rbp
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	.seh_stackalloc	32
	.seh_endprologue
	.loc 3 365 0
	movl	$65535, %edx
	movl	$1, %ecx
	call	_Z41__static_initialization_and_destruction_0ii
	nop
	addq	$32, %rsp
	popq	%rbp
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10885:
	.seh_endproc
	.section	.ctors,"w"
	.align 8
	.quad	_GLOBAL__sub_I_a
	.section .rdata,"dr"
	.align 8
.LC0:
	.long	0
	.long	1079574528
	.align 8
.LC29:
	.long	0
	.long	1082408960
	.align 8
.LC60:
	.long	0
	.long	1075314688
	.align 8
.LC61:
	.long	858993459
	.long	1071854387
	.align 8
.LC62:
	.long	0
	.long	1078034432
	.text
.Letext0:
	.file 7 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/vadefs.h"
	.file 8 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/_mingw.h"
	.file 9 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/locale.h"
	.file 10 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdlib.h"
	.file 11 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h"
	.file 12 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/clocale"
	.file 13 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cmath"
	.file 14 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/csetjmp"
	.file 15 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/csignal"
	.file 16 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cstdarg"
	.file 17 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cstddef"
	.file 18 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cstdio"
	.file 19 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cstdlib"
	.file 20 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cstring"
	.file 21 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ctime"
	.file 22 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cwchar"
	.file 23 "<built-in>"
	.file 24 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/exception_ptr.h"
	.file 25 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/c++config.h"
	.file 26 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/type_traits"
	.file 27 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/char_traits.h"
	.file 28 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cstdint"
	.file 29 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_pair.h"
	.file 30 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/new"
	.file 31 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/allocator.h"
	.file 32 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/basic_string.tcc"
	.file 33 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/initializer_list"
	.file 34 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stringfwd.h"
	.file 35 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cwctype"
	.file 36 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/fenv.h"
	.file 37 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cfenv"
	.file 38 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cinttypes"
	.file 39 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/random.h"
	.file 40 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex_automaton.h"
	.file 41 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/uses_allocator.h"
	.file 42 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple"
	.file 43 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_iterator_base_types.h"
	.file 44 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/shared_ptr_base.h"
	.file 45 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/atomic_base.h"
	.file 46 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/chrono"
	.file 47 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/debug/debug.h"
	.file 48 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ratio"
	.file 49 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/mutex"
	.file 50 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/condition_variable"
	.file 51 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex_constants.h"
	.file 52 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex_error.h"
	.file 53 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iosfwd"
	.file 54 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/cpp_type_traits.h"
	.file 55 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/predefined_ops.h"
	.file 56 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h"
	.file 57 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/numeric_traits.h"
	.file 58 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_iterator.h"
	.file 59 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/concurrence.h"
	.file 60 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/math.h"
	.file 61 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/setjmp.h"
	.file 62 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/signal.h"
	.file 63 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stddef.h"
	.file 64 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/string.h"
	.file 65 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/time.h"
	.file 66 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/wchar.h"
	.file 67 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/swprintf.inl"
	.file 68 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdint.h"
	.file 69 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/pthread.h"
	.file 70 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/atomic_word.h"
	.file 71 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/wctype.h"
	.file 72 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/ctype.h"
	.file 73 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/fenv.h"
	.file 74 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/inttypes.h"
	.file 75 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/minwindef.h"
	.file 76 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/future"
	.section	.debug_info,"dr"
.Ldebug_info0:
	.long	0x9c72
	.word	0x4
	.secrel32	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.ascii "GNU C++ 4.9.2 -mtune=generic -march=x86-64 -g3 -g3 -std=c++11\0"
	.byte	0x4
	.ascii "H:\\\263\314\320\362\\\324\255\311\361"
	.ascii "3.0\311\317\260\353\275\307\311\253\273\356\266\257\306\355\324\270-2\\main.cpp\0"
	.ascii "C:\\Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\0"
	.secrel32	.Ldebug_ranges0+0xc0
	.quad	0
	.secrel32	.Ldebug_line0
	.secrel32	.Ldebug_macro0
	.uleb128 0x2
	.ascii "__gnuc_va_list\0"
	.byte	0x7
	.byte	0x16
	.long	0xcb
	.uleb128 0x3
	.byte	0x8
	.ascii "__builtin_va_list\0"
	.long	0xe3
	.uleb128 0x4
	.byte	0x1
	.byte	0x6
	.ascii "char\0"
	.uleb128 0x2
	.ascii "va_list\0"
	.byte	0x7
	.byte	0x1d
	.long	0xb5
	.uleb128 0x5
	.ascii "size_t\0"
	.byte	0x8
	.word	0x179
	.long	0x109
	.uleb128 0x4
	.byte	0x8
	.byte	0x7
	.ascii "long long unsigned int\0"
	.uleb128 0x4
	.byte	0x8
	.byte	0x5
	.ascii "long long int\0"
	.uleb128 0x5
	.ascii "intptr_t\0"
	.byte	0x8
	.word	0x18f
	.long	0x123
	.uleb128 0x5
	.ascii "uintptr_t\0"
	.byte	0x8
	.word	0x19c
	.long	0x109
	.uleb128 0x5
	.ascii "wint_t\0"
	.byte	0x8
	.word	0x1bb
	.long	0x166
	.uleb128 0x4
	.byte	0x2
	.byte	0x7
	.ascii "short unsigned int\0"
	.uleb128 0x5
	.ascii "wctype_t\0"
	.byte	0x8
	.word	0x1bc
	.long	0x166
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.ascii "int\0"
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.ascii "long int\0"
	.uleb128 0x5
	.ascii "__time64_t\0"
	.byte	0x8
	.word	0x1d9
	.long	0x123
	.uleb128 0x5
	.ascii "time_t\0"
	.byte	0x8
	.word	0x1e1
	.long	0x1a0
	.uleb128 0x6
	.byte	0x8
	.long	0xe3
	.uleb128 0x6
	.byte	0x8
	.long	0x1ce
	.uleb128 0x4
	.byte	0x2
	.byte	0x7
	.ascii "wchar_t\0"
	.uleb128 0x6
	.byte	0x8
	.long	0x18d
	.uleb128 0x4
	.byte	0x4
	.byte	0x7
	.ascii "unsigned int\0"
	.uleb128 0x4
	.byte	0x8
	.byte	0x7
	.ascii "sizetype\0"
	.uleb128 0x4
	.byte	0x4
	.byte	0x7
	.ascii "long unsigned int\0"
	.uleb128 0x7
	.ascii "lconv\0"
	.byte	0x58
	.byte	0x9
	.byte	0x2d
	.long	0x3af
	.uleb128 0x8
	.ascii "decimal_point\0"
	.byte	0x9
	.byte	0x2e
	.long	0x1c2
	.byte	0
	.uleb128 0x8
	.ascii "thousands_sep\0"
	.byte	0x9
	.byte	0x2f
	.long	0x1c2
	.byte	0x8
	.uleb128 0x8
	.ascii "grouping\0"
	.byte	0x9
	.byte	0x30
	.long	0x1c2
	.byte	0x10
	.uleb128 0x8
	.ascii "int_curr_symbol\0"
	.byte	0x9
	.byte	0x31
	.long	0x1c2
	.byte	0x18
	.uleb128 0x8
	.ascii "currency_symbol\0"
	.byte	0x9
	.byte	0x32
	.long	0x1c2
	.byte	0x20
	.uleb128 0x8
	.ascii "mon_decimal_point\0"
	.byte	0x9
	.byte	0x33
	.long	0x1c2
	.byte	0x28
	.uleb128 0x8
	.ascii "mon_thousands_sep\0"
	.byte	0x9
	.byte	0x34
	.long	0x1c2
	.byte	0x30
	.uleb128 0x8
	.ascii "mon_grouping\0"
	.byte	0x9
	.byte	0x35
	.long	0x1c2
	.byte	0x38
	.uleb128 0x8
	.ascii "positive_sign\0"
	.byte	0x9
	.byte	0x36
	.long	0x1c2
	.byte	0x40
	.uleb128 0x8
	.ascii "negative_sign\0"
	.byte	0x9
	.byte	0x37
	.long	0x1c2
	.byte	0x48
	.uleb128 0x8
	.ascii "int_frac_digits\0"
	.byte	0x9
	.byte	0x38
	.long	0xe3
	.byte	0x50
	.uleb128 0x8
	.ascii "frac_digits\0"
	.byte	0x9
	.byte	0x39
	.long	0xe3
	.byte	0x51
	.uleb128 0x8
	.ascii "p_cs_precedes\0"
	.byte	0x9
	.byte	0x3a
	.long	0xe3
	.byte	0x52
	.uleb128 0x8
	.ascii "p_sep_by_space\0"
	.byte	0x9
	.byte	0x3b
	.long	0xe3
	.byte	0x53
	.uleb128 0x8
	.ascii "n_cs_precedes\0"
	.byte	0x9
	.byte	0x3c
	.long	0xe3
	.byte	0x54
	.uleb128 0x8
	.ascii "n_sep_by_space\0"
	.byte	0x9
	.byte	0x3d
	.long	0xe3
	.byte	0x55
	.uleb128 0x8
	.ascii "p_sign_posn\0"
	.byte	0x9
	.byte	0x3e
	.long	0xe3
	.byte	0x56
	.uleb128 0x8
	.ascii "n_sign_posn\0"
	.byte	0x9
	.byte	0x3f
	.long	0xe3
	.byte	0x57
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x210
	.uleb128 0x4
	.byte	0x1
	.byte	0x8
	.ascii "unsigned char\0"
	.uleb128 0x7
	.ascii "_div_t\0"
	.byte	0x8
	.byte	0xa
	.byte	0x32
	.long	0x3ef
	.uleb128 0x8
	.ascii "quot\0"
	.byte	0xa
	.byte	0x33
	.long	0x18d
	.byte	0
	.uleb128 0x8
	.ascii "rem\0"
	.byte	0xa
	.byte	0x34
	.long	0x18d
	.byte	0x4
	.byte	0
	.uleb128 0x2
	.ascii "div_t\0"
	.byte	0xa
	.byte	0x35
	.long	0x3c6
	.uleb128 0x7
	.ascii "_ldiv_t\0"
	.byte	0x8
	.byte	0xa
	.byte	0x37
	.long	0x426
	.uleb128 0x8
	.ascii "quot\0"
	.byte	0xa
	.byte	0x38
	.long	0x194
	.byte	0
	.uleb128 0x8
	.ascii "rem\0"
	.byte	0xa
	.byte	0x39
	.long	0x194
	.byte	0x4
	.byte	0
	.uleb128 0x2
	.ascii "ldiv_t\0"
	.byte	0xa
	.byte	0x3a
	.long	0x3fc
	.uleb128 0x4
	.byte	0x8
	.byte	0x4
	.ascii "double\0"
	.uleb128 0x4
	.byte	0x4
	.byte	0x4
	.ascii "float\0"
	.uleb128 0x4
	.byte	0x10
	.byte	0x4
	.ascii "long double\0"
	.uleb128 0x6
	.byte	0x8
	.long	0x45c
	.uleb128 0x9
	.uleb128 0x6
	.byte	0x8
	.long	0x463
	.uleb128 0xa
	.long	0x1ce
	.uleb128 0xb
	.byte	0x10
	.byte	0xa
	.word	0x272
	.ascii "7lldiv_t\0"
	.long	0x496
	.uleb128 0xc
	.ascii "quot\0"
	.byte	0xa
	.word	0x272
	.long	0x123
	.byte	0
	.uleb128 0xc
	.ascii "rem\0"
	.byte	0xa
	.word	0x272
	.long	0x123
	.byte	0x8
	.byte	0
	.uleb128 0x5
	.ascii "lldiv_t\0"
	.byte	0xa
	.word	0x272
	.long	0x468
	.uleb128 0x7
	.ascii "_iobuf\0"
	.byte	0x30
	.byte	0xb
	.byte	0x1a
	.long	0x52d
	.uleb128 0x8
	.ascii "_ptr\0"
	.byte	0xb
	.byte	0x1b
	.long	0x1c2
	.byte	0
	.uleb128 0x8
	.ascii "_cnt\0"
	.byte	0xb
	.byte	0x1c
	.long	0x18d
	.byte	0x8
	.uleb128 0x8
	.ascii "_base\0"
	.byte	0xb
	.byte	0x1d
	.long	0x1c2
	.byte	0x10
	.uleb128 0x8
	.ascii "_flag\0"
	.byte	0xb
	.byte	0x1e
	.long	0x18d
	.byte	0x18
	.uleb128 0x8
	.ascii "_file\0"
	.byte	0xb
	.byte	0x1f
	.long	0x18d
	.byte	0x1c
	.uleb128 0x8
	.ascii "_charbuf\0"
	.byte	0xb
	.byte	0x20
	.long	0x18d
	.byte	0x20
	.uleb128 0x8
	.ascii "_bufsiz\0"
	.byte	0xb
	.byte	0x21
	.long	0x18d
	.byte	0x24
	.uleb128 0x8
	.ascii "_tmpfname\0"
	.byte	0xb
	.byte	0x22
	.long	0x1c2
	.byte	0x28
	.byte	0
	.uleb128 0x2
	.ascii "FILE\0"
	.byte	0xb
	.byte	0x24
	.long	0x4a6
	.uleb128 0x2
	.ascii "fpos_t\0"
	.byte	0xb
	.byte	0x67
	.long	0x123
	.uleb128 0xd
	.ascii "std\0"
	.byte	0x17
	.byte	0
	.long	0x5edb
	.uleb128 0xe
	.byte	0xc
	.byte	0x35
	.long	0x210
	.uleb128 0xe
	.byte	0xc
	.byte	0x36
	.long	0x5edb
	.uleb128 0xe
	.byte	0xc
	.byte	0x37
	.long	0x5f06
	.uleb128 0xf
	.byte	0xd
	.word	0x40e
	.long	0x6e9f
	.uleb128 0xf
	.byte	0xd
	.word	0x40f
	.long	0x6e8f
	.uleb128 0xe
	.byte	0xe
	.byte	0x39
	.long	0x6f0d
	.uleb128 0xe
	.byte	0xe
	.byte	0x3a
	.long	0x6f2c
	.uleb128 0xe
	.byte	0xf
	.byte	0x34
	.long	0x6f4c
	.uleb128 0xe
	.byte	0xf
	.byte	0x35
	.long	0x6f85
	.uleb128 0xe
	.byte	0xf
	.byte	0x36
	.long	0x6fa2
	.uleb128 0xe
	.byte	0x10
	.byte	0x36
	.long	0xeb
	.uleb128 0xe
	.byte	0x11
	.byte	0x33
	.long	0x7001
	.uleb128 0xe
	.byte	0x12
	.byte	0x62
	.long	0x52d
	.uleb128 0xe
	.byte	0x12
	.byte	0x63
	.long	0x539
	.uleb128 0xe
	.byte	0x12
	.byte	0x65
	.long	0x7015
	.uleb128 0xe
	.byte	0x12
	.byte	0x66
	.long	0x7032
	.uleb128 0xe
	.byte	0x12
	.byte	0x67
	.long	0x704b
	.uleb128 0xe
	.byte	0x12
	.byte	0x68
	.long	0x7062
	.uleb128 0xe
	.byte	0x12
	.byte	0x69
	.long	0x707b
	.uleb128 0xe
	.byte	0x12
	.byte	0x6a
	.long	0x7094
	.uleb128 0xe
	.byte	0x12
	.byte	0x6b
	.long	0x70ac
	.uleb128 0xe
	.byte	0x12
	.byte	0x6c
	.long	0x70d1
	.uleb128 0xe
	.byte	0x12
	.byte	0x6d
	.long	0x70f3
	.uleb128 0xe
	.byte	0x12
	.byte	0x6e
	.long	0x7110
	.uleb128 0xe
	.byte	0x12
	.byte	0x71
	.long	0x7147
	.uleb128 0xe
	.byte	0x12
	.byte	0x72
	.long	0x7170
	.uleb128 0xe
	.byte	0x12
	.byte	0x73
	.long	0x7194
	.uleb128 0xe
	.byte	0x12
	.byte	0x74
	.long	0x71c8
	.uleb128 0xe
	.byte	0x12
	.byte	0x75
	.long	0x71ea
	.uleb128 0xe
	.byte	0x12
	.byte	0x76
	.long	0x7214
	.uleb128 0xe
	.byte	0x12
	.byte	0x78
	.long	0x722c
	.uleb128 0xe
	.byte	0x12
	.byte	0x79
	.long	0x7243
	.uleb128 0xe
	.byte	0x12
	.byte	0x7c
	.long	0x7253
	.uleb128 0xe
	.byte	0x12
	.byte	0x7e
	.long	0x726a
	.uleb128 0xe
	.byte	0x12
	.byte	0x7f
	.long	0x727f
	.uleb128 0xe
	.byte	0x12
	.byte	0x83
	.long	0x72a7
	.uleb128 0xe
	.byte	0x12
	.byte	0x84
	.long	0x72c0
	.uleb128 0xe
	.byte	0x12
	.byte	0x85
	.long	0x72de
	.uleb128 0xe
	.byte	0x12
	.byte	0x86
	.long	0x72f3
	.uleb128 0xe
	.byte	0x12
	.byte	0x87
	.long	0x7318
	.uleb128 0xe
	.byte	0x12
	.byte	0x88
	.long	0x7332
	.uleb128 0xe
	.byte	0x12
	.byte	0x89
	.long	0x735b
	.uleb128 0xe
	.byte	0x12
	.byte	0x8a
	.long	0x738c
	.uleb128 0xe
	.byte	0x12
	.byte	0x8b
	.long	0x73bb
	.uleb128 0xe
	.byte	0x12
	.byte	0x8d
	.long	0x73cb
	.uleb128 0xe
	.byte	0x12
	.byte	0x8f
	.long	0x73e4
	.uleb128 0xe
	.byte	0x12
	.byte	0x90
	.long	0x7402
	.uleb128 0xe
	.byte	0x12
	.byte	0x91
	.long	0x7440
	.uleb128 0xe
	.byte	0x12
	.byte	0x92
	.long	0x746f
	.uleb128 0xe
	.byte	0x12
	.byte	0xb9
	.long	0x74a7
	.uleb128 0xe
	.byte	0x12
	.byte	0xba
	.long	0x74e0
	.uleb128 0xe
	.byte	0x12
	.byte	0xbb
	.long	0x751c
	.uleb128 0xe
	.byte	0x12
	.byte	0xbc
	.long	0x7549
	.uleb128 0xe
	.byte	0x12
	.byte	0xbd
	.long	0x7589
	.uleb128 0xe
	.byte	0x13
	.byte	0x76
	.long	0x3ef
	.uleb128 0xe
	.byte	0x13
	.byte	0x77
	.long	0x426
	.uleb128 0xe
	.byte	0x13
	.byte	0x7b
	.long	0x75c0
	.uleb128 0xe
	.byte	0x13
	.byte	0x81
	.long	0x75d9
	.uleb128 0xe
	.byte	0x13
	.byte	0x82
	.long	0x75f0
	.uleb128 0xe
	.byte	0x13
	.byte	0x83
	.long	0x7607
	.uleb128 0xe
	.byte	0x13
	.byte	0x84
	.long	0x761e
	.uleb128 0xe
	.byte	0x13
	.byte	0x86
	.long	0x766d
	.uleb128 0xe
	.byte	0x13
	.byte	0x89
	.long	0x7688
	.uleb128 0xe
	.byte	0x13
	.byte	0x8b
	.long	0x76a1
	.uleb128 0xe
	.byte	0x13
	.byte	0x8e
	.long	0x76bd
	.uleb128 0xe
	.byte	0x13
	.byte	0x8f
	.long	0x76da
	.uleb128 0xe
	.byte	0x13
	.byte	0x90
	.long	0x76ff
	.uleb128 0xe
	.byte	0x13
	.byte	0x92
	.long	0x7722
	.uleb128 0xe
	.byte	0x13
	.byte	0x98
	.long	0x7745
	.uleb128 0xe
	.byte	0x13
	.byte	0x9a
	.long	0x7752
	.uleb128 0xe
	.byte	0x13
	.byte	0x9b
	.long	0x7766
	.uleb128 0xe
	.byte	0x13
	.byte	0x9c
	.long	0x778a
	.uleb128 0xe
	.byte	0x13
	.byte	0x9d
	.long	0x77ad
	.uleb128 0xe
	.byte	0x13
	.byte	0x9e
	.long	0x77d1
	.uleb128 0xe
	.byte	0x13
	.byte	0xa0
	.long	0x77ea
	.uleb128 0xe
	.byte	0x13
	.byte	0xa1
	.long	0x780f
	.uleb128 0xe
	.byte	0x13
	.byte	0xf1
	.long	0x496
	.uleb128 0xe
	.byte	0x13
	.byte	0xf6
	.long	0x5f7d
	.uleb128 0xe
	.byte	0x13
	.byte	0xf7
	.long	0x782d
	.uleb128 0xe
	.byte	0x13
	.byte	0xf9
	.long	0x784a
	.uleb128 0xe
	.byte	0x13
	.byte	0xfa
	.long	0x78ab
	.uleb128 0xe
	.byte	0x13
	.byte	0xfb
	.long	0x7862
	.uleb128 0xe
	.byte	0x13
	.byte	0xfc
	.long	0x7886
	.uleb128 0xe
	.byte	0x13
	.byte	0xfd
	.long	0x78c9
	.uleb128 0xe
	.byte	0x14
	.byte	0x52
	.long	0x78e8
	.uleb128 0xe
	.byte	0x14
	.byte	0x55
	.long	0x7906
	.uleb128 0xe
	.byte	0x14
	.byte	0x5b
	.long	0x7920
	.uleb128 0xe
	.byte	0x14
	.byte	0x5c
	.long	0x793d
	.uleb128 0xe
	.byte	0x15
	.byte	0x3c
	.long	0x7960
	.uleb128 0xe
	.byte	0x15
	.byte	0x3d
	.long	0x1b3
	.uleb128 0xe
	.byte	0x15
	.byte	0x3e
	.long	0x796f
	.uleb128 0xe
	.byte	0x15
	.byte	0x40
	.long	0x7a09
	.uleb128 0xe
	.byte	0x15
	.byte	0x41
	.long	0x7a16
	.uleb128 0xe
	.byte	0x15
	.byte	0x42
	.long	0x7a35
	.uleb128 0xe
	.byte	0x15
	.byte	0x43
	.long	0x7a53
	.uleb128 0xe
	.byte	0x15
	.byte	0x44
	.long	0x7a6f
	.uleb128 0xe
	.byte	0x15
	.byte	0x45
	.long	0x7a93
	.uleb128 0xe
	.byte	0x15
	.byte	0x46
	.long	0x7ab5
	.uleb128 0xe
	.byte	0x15
	.byte	0x47
	.long	0x7acd
	.uleb128 0xe
	.byte	0x15
	.byte	0x48
	.long	0x7ae8
	.uleb128 0xe
	.byte	0x16
	.byte	0x40
	.long	0x7b11
	.uleb128 0xe
	.byte	0x16
	.byte	0x8b
	.long	0x157
	.uleb128 0xe
	.byte	0x16
	.byte	0x8d
	.long	0x7b23
	.uleb128 0xe
	.byte	0x16
	.byte	0x8e
	.long	0x7b3b
	.uleb128 0xe
	.byte	0x16
	.byte	0x8f
	.long	0x7b54
	.uleb128 0xe
	.byte	0x16
	.byte	0x90
	.long	0x7b77
	.uleb128 0xe
	.byte	0x16
	.byte	0x91
	.long	0x7b95
	.uleb128 0xe
	.byte	0x16
	.byte	0x92
	.long	0x7bb3
	.uleb128 0xe
	.byte	0x16
	.byte	0x93
	.long	0x7bd0
	.uleb128 0xe
	.byte	0x16
	.byte	0x94
	.long	0x7bf1
	.uleb128 0xe
	.byte	0x16
	.byte	0x95
	.long	0x7c11
	.uleb128 0xe
	.byte	0x16
	.byte	0x96
	.long	0x7c29
	.uleb128 0xe
	.byte	0x16
	.byte	0x97
	.long	0x7c3a
	.uleb128 0xe
	.byte	0x16
	.byte	0x98
	.long	0x7c63
	.uleb128 0xe
	.byte	0x16
	.byte	0x99
	.long	0x7c8c
	.uleb128 0xe
	.byte	0x16
	.byte	0x9a
	.long	0x7cb1
	.uleb128 0xe
	.byte	0x16
	.byte	0x9b
	.long	0x7ce2
	.uleb128 0xe
	.byte	0x16
	.byte	0x9c
	.long	0x7cff
	.uleb128 0xe
	.byte	0x16
	.byte	0x9e
	.long	0x7d1a
	.uleb128 0xe
	.byte	0x16
	.byte	0xa0
	.long	0x7d3a
	.uleb128 0xe
	.byte	0x16
	.byte	0xa1
	.long	0x7d5a
	.uleb128 0xe
	.byte	0x16
	.byte	0xa2
	.long	0x7d79
	.uleb128 0xe
	.byte	0x16
	.byte	0xa4
	.long	0x7d9f
	.uleb128 0xe
	.byte	0x16
	.byte	0xa7
	.long	0x7dc4
	.uleb128 0xe
	.byte	0x16
	.byte	0xaa
	.long	0x7de9
	.uleb128 0xe
	.byte	0x16
	.byte	0xac
	.long	0x7e0e
	.uleb128 0xe
	.byte	0x16
	.byte	0xae
	.long	0x7e2e
	.uleb128 0xe
	.byte	0x16
	.byte	0xb0
	.long	0x7e4d
	.uleb128 0xe
	.byte	0x16
	.byte	0xb1
	.long	0x7e71
	.uleb128 0xe
	.byte	0x16
	.byte	0xb2
	.long	0x7e8e
	.uleb128 0xe
	.byte	0x16
	.byte	0xb3
	.long	0x7eab
	.uleb128 0xe
	.byte	0x16
	.byte	0xb4
	.long	0x7ec9
	.uleb128 0xe
	.byte	0x16
	.byte	0xb5
	.long	0x7ee6
	.uleb128 0xe
	.byte	0x16
	.byte	0xb6
	.long	0x7f04
	.uleb128 0xe
	.byte	0x16
	.byte	0xb7
	.long	0x7f2d
	.uleb128 0xe
	.byte	0x16
	.byte	0xb8
	.long	0x7f45
	.uleb128 0xe
	.byte	0x16
	.byte	0xb9
	.long	0x7f68
	.uleb128 0xe
	.byte	0x16
	.byte	0xba
	.long	0x7f8b
	.uleb128 0xe
	.byte	0x16
	.byte	0xbb
	.long	0x7fae
	.uleb128 0xe
	.byte	0x16
	.byte	0xbc
	.long	0x7fdf
	.uleb128 0xe
	.byte	0x16
	.byte	0xbd
	.long	0x7ffc
	.uleb128 0xe
	.byte	0x16
	.byte	0xbf
	.long	0x8020
	.uleb128 0xe
	.byte	0x16
	.byte	0xc1
	.long	0x803e
	.uleb128 0xe
	.byte	0x16
	.byte	0xc2
	.long	0x805b
	.uleb128 0xe
	.byte	0x16
	.byte	0xc3
	.long	0x807e
	.uleb128 0xe
	.byte	0x16
	.byte	0xc4
	.long	0x80a2
	.uleb128 0xe
	.byte	0x16
	.byte	0xc5
	.long	0x80c5
	.uleb128 0xe
	.byte	0x16
	.byte	0xc6
	.long	0x80dd
	.uleb128 0xe
	.byte	0x16
	.byte	0xc7
	.long	0x8101
	.uleb128 0xe
	.byte	0x16
	.byte	0xc8
	.long	0x8125
	.uleb128 0xe
	.byte	0x16
	.byte	0xc9
	.long	0x814a
	.uleb128 0xe
	.byte	0x16
	.byte	0xca
	.long	0x816e
	.uleb128 0xe
	.byte	0x16
	.byte	0xcb
	.long	0x8189
	.uleb128 0xe
	.byte	0x16
	.byte	0xcc
	.long	0x81a3
	.uleb128 0xe
	.byte	0x16
	.byte	0xcd
	.long	0x81c0
	.uleb128 0xe
	.byte	0x16
	.byte	0xce
	.long	0x81de
	.uleb128 0xe
	.byte	0x16
	.byte	0xcf
	.long	0x81fc
	.uleb128 0xe
	.byte	0x16
	.byte	0xd0
	.long	0x8219
	.uleb128 0xf
	.byte	0x16
	.word	0x108
	.long	0x823d
	.uleb128 0xf
	.byte	0x16
	.word	0x109
	.long	0x825c
	.uleb128 0xf
	.byte	0x16
	.word	0x10a
	.long	0x8280
	.uleb128 0xf
	.byte	0x16
	.word	0x118
	.long	0x8020
	.uleb128 0xf
	.byte	0x16
	.word	0x11b
	.long	0x7d9f
	.uleb128 0xf
	.byte	0x16
	.word	0x11e
	.long	0x7de9
	.uleb128 0xf
	.byte	0x16
	.word	0x121
	.long	0x7e2e
	.uleb128 0xf
	.byte	0x16
	.word	0x125
	.long	0x823d
	.uleb128 0xf
	.byte	0x16
	.word	0x126
	.long	0x825c
	.uleb128 0xf
	.byte	0x16
	.word	0x127
	.long	0x8280
	.uleb128 0xd
	.ascii "__exception_ptr\0"
	.byte	0x18
	.byte	0x36
	.long	0xd67
	.uleb128 0x10
	.secrel32	.LASF0
	.byte	0x8
	.byte	0x18
	.byte	0x4b
	.long	0xd61
	.uleb128 0x8
	.ascii "_M_exception_object\0"
	.byte	0x18
	.byte	0x4d
	.long	0x716e
	.byte	0
	.uleb128 0x11
	.secrel32	.LASF0
	.byte	0x18
	.byte	0x4f
	.long	0xa44
	.long	0xa4f
	.uleb128 0x12
	.long	0x82a5
	.uleb128 0x13
	.long	0x716e
	.byte	0
	.uleb128 0x14
	.ascii "_M_addref\0"
	.byte	0x18
	.byte	0x51
	.ascii "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv\0"
	.long	0xa96
	.long	0xa9c
	.uleb128 0x12
	.long	0x82a5
	.byte	0
	.uleb128 0x14
	.ascii "_M_release\0"
	.byte	0x18
	.byte	0x52
	.ascii "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv\0"
	.long	0xae6
	.long	0xaec
	.uleb128 0x12
	.long	0x82a5
	.byte	0
	.uleb128 0x15
	.ascii "_M_get\0"
	.byte	0x18
	.byte	0x54
	.ascii "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv\0"
	.long	0x716e
	.long	0xb32
	.long	0xb38
	.uleb128 0x12
	.long	0x82ab
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF0
	.byte	0x18
	.byte	0x5a
	.byte	0x1
	.long	0xb48
	.long	0xb4e
	.uleb128 0x12
	.long	0x82a5
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF0
	.byte	0x18
	.byte	0x5c
	.byte	0x1
	.long	0xb5e
	.long	0xb69
	.uleb128 0x12
	.long	0x82a5
	.uleb128 0x13
	.long	0x82b1
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF0
	.byte	0x18
	.byte	0x5f
	.byte	0x1
	.long	0xb79
	.long	0xb84
	.uleb128 0x12
	.long	0x82a5
	.uleb128 0x13
	.long	0xd6e
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF0
	.byte	0x18
	.byte	0x63
	.byte	0x1
	.long	0xb94
	.long	0xb9f
	.uleb128 0x12
	.long	0x82a5
	.uleb128 0x13
	.long	0x82ca
	.byte	0
	.uleb128 0x17
	.secrel32	.LASF1
	.byte	0x18
	.byte	0x70
	.ascii "_ZNSt15__exception_ptr13exception_ptraSERKS0_\0"
	.long	0x82d0
	.byte	0x1
	.long	0xbe1
	.long	0xbec
	.uleb128 0x12
	.long	0x82a5
	.uleb128 0x13
	.long	0x82b1
	.byte	0
	.uleb128 0x17
	.secrel32	.LASF1
	.byte	0x18
	.byte	0x74
	.ascii "_ZNSt15__exception_ptr13exception_ptraSEOS0_\0"
	.long	0x82d0
	.byte	0x1
	.long	0xc2d
	.long	0xc38
	.uleb128 0x12
	.long	0x82a5
	.uleb128 0x13
	.long	0x82ca
	.byte	0
	.uleb128 0x18
	.ascii "~exception_ptr\0"
	.byte	0x18
	.byte	0x7b
	.byte	0x1
	.long	0xc53
	.long	0xc5e
	.uleb128 0x12
	.long	0x82a5
	.uleb128 0x12
	.long	0x18d
	.byte	0
	.uleb128 0x19
	.ascii "swap\0"
	.byte	0x18
	.byte	0x7e
	.ascii "_ZNSt15__exception_ptr13exception_ptr4swapERS0_\0"
	.byte	0x1
	.long	0xc9f
	.long	0xcaa
	.uleb128 0x12
	.long	0x82a5
	.uleb128 0x13
	.long	0x82d0
	.byte	0
	.uleb128 0x1a
	.ascii "operator bool\0"
	.byte	0x18
	.byte	0x8a
	.ascii "_ZNKSt15__exception_ptr13exception_ptrcvbEv\0"
	.long	0x82d6
	.byte	0x1
	.long	0xcf4
	.long	0xcfa
	.uleb128 0x12
	.long	0x82ab
	.byte	0
	.uleb128 0x1b
	.ascii "__cxa_exception_type\0"
	.byte	0x18
	.byte	0x93
	.ascii "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv\0"
	.long	0x82de
	.byte	0x1
	.long	0xd5a
	.uleb128 0x12
	.long	0x82ab
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0xa0d
	.byte	0
	.uleb128 0xe
	.byte	0x18
	.byte	0x3a
	.long	0xa0d
	.uleb128 0x2
	.ascii "nullptr_t\0"
	.byte	0x19
	.byte	0xc0
	.long	0x82b7
	.uleb128 0x1c
	.ascii "type_info\0"
	.uleb128 0xa
	.long	0xd7f
	.uleb128 0x7
	.ascii "integral_constant<bool, false>\0"
	.byte	0x1
	.byte	0x1a
	.byte	0x45
	.long	0xe54
	.uleb128 0x1d
	.secrel32	.LASF3
	.byte	0x1a
	.byte	0x47
	.long	0x82e4
	.uleb128 0x1e
	.secrel32	.LASF2
	.byte	0x1a
	.byte	0x48
	.long	0x82d6
	.uleb128 0x15
	.ascii "operator std::integral_constant<bool, false>::value_type\0"
	.byte	0x1a
	.byte	0x4a
	.ascii "_ZNKSt17integral_constantIbLb0EEcvbEv\0"
	.long	0xdc1
	.long	0xe3a
	.long	0xe40
	.uleb128 0x12
	.long	0x82e9
	.byte	0
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0x82d6
	.uleb128 0x20
	.ascii "__v\0"
	.long	0x82d6
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0xd8f
	.uleb128 0x7
	.ascii "integral_constant<bool, true>\0"
	.byte	0x1
	.byte	0x1a
	.byte	0x45
	.long	0xf1c
	.uleb128 0x1d
	.secrel32	.LASF3
	.byte	0x1a
	.byte	0x47
	.long	0x82e4
	.uleb128 0x1e
	.secrel32	.LASF2
	.byte	0x1a
	.byte	0x48
	.long	0x82d6
	.uleb128 0x15
	.ascii "operator std::integral_constant<bool, true>::value_type\0"
	.byte	0x1a
	.byte	0x4a
	.ascii "_ZNKSt17integral_constantIbLb1EEcvbEv\0"
	.long	0xe8a
	.long	0xf02
	.long	0xf08
	.uleb128 0x12
	.long	0x82ef
	.byte	0
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0x82d6
	.uleb128 0x20
	.ascii "__v\0"
	.long	0x82d6
	.byte	0x1
	.byte	0
	.uleb128 0xa
	.long	0xe59
	.uleb128 0x7
	.ascii "integral_constant<long long unsigned int, 0ull>\0"
	.byte	0x1
	.byte	0x1a
	.byte	0x45
	.long	0x1008
	.uleb128 0x1d
	.secrel32	.LASF3
	.byte	0x1a
	.byte	0x47
	.long	0x82f5
	.uleb128 0x1e
	.secrel32	.LASF2
	.byte	0x1a
	.byte	0x48
	.long	0x109
	.uleb128 0x15
	.ascii "operator std::integral_constant<long long unsigned int, 0ull>::value_type\0"
	.byte	0x1a
	.byte	0x4a
	.ascii "_ZNKSt17integral_constantIyLy0EEcvyEv\0"
	.long	0xf64
	.long	0xfee
	.long	0xff4
	.uleb128 0x12
	.long	0x82fa
	.byte	0
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0x109
	.uleb128 0x20
	.ascii "__v\0"
	.long	0x109
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0xf21
	.uleb128 0x21
	.ascii "piecewise_construct_t\0"
	.byte	0x1
	.byte	0x1d
	.byte	0x4c
	.uleb128 0x22
	.ascii "__debug\0"
	.byte	0x2f
	.byte	0x30
	.uleb128 0x7
	.ascii "char_traits<char>\0"
	.byte	0x1
	.byte	0x1b
	.byte	0xe9
	.long	0x13e9
	.uleb128 0x2
	.ascii "char_type\0"
	.byte	0x1b
	.byte	0xeb
	.long	0xe3
	.uleb128 0x2
	.ascii "int_type\0"
	.byte	0x1b
	.byte	0xec
	.long	0x18d
	.uleb128 0x23
	.secrel32	.LASF5
	.byte	0x1b
	.byte	0xf2
	.ascii "_ZNSt11char_traitsIcE6assignERcRKc\0"
	.long	0x10a6
	.uleb128 0x13
	.long	0x831b
	.uleb128 0x13
	.long	0x8321
	.byte	0
	.uleb128 0xa
	.long	0x104c
	.uleb128 0x24
	.ascii "eq\0"
	.byte	0x1b
	.byte	0xf6
	.ascii "_ZNSt11char_traitsIcE2eqERKcS2_\0"
	.long	0x82d6
	.long	0x10e4
	.uleb128 0x13
	.long	0x8321
	.uleb128 0x13
	.long	0x8321
	.byte	0
	.uleb128 0x24
	.ascii "lt\0"
	.byte	0x1b
	.byte	0xfa
	.ascii "_ZNSt11char_traitsIcE2ltERKcS2_\0"
	.long	0x82d6
	.long	0x111d
	.uleb128 0x13
	.long	0x8321
	.uleb128 0x13
	.long	0x8321
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF4
	.byte	0x1b
	.word	0x102
	.ascii "_ZNSt11char_traitsIcE7compareEPKcS2_y\0"
	.long	0x18d
	.long	0x1163
	.uleb128 0x13
	.long	0x8327
	.uleb128 0x13
	.long	0x8327
	.uleb128 0x13
	.long	0x13e9
	.byte	0
	.uleb128 0x26
	.ascii "length\0"
	.byte	0x1b
	.word	0x106
	.ascii "_ZNSt11char_traitsIcE6lengthEPKc\0"
	.long	0x13e9
	.long	0x119d
	.uleb128 0x13
	.long	0x8327
	.byte	0
	.uleb128 0x26
	.ascii "find\0"
	.byte	0x1b
	.word	0x10a
	.ascii "_ZNSt11char_traitsIcE4findEPKcyRS1_\0"
	.long	0x8327
	.long	0x11e2
	.uleb128 0x13
	.long	0x8327
	.uleb128 0x13
	.long	0x13e9
	.uleb128 0x13
	.long	0x8321
	.byte	0
	.uleb128 0x26
	.ascii "move\0"
	.byte	0x1b
	.word	0x10e
	.ascii "_ZNSt11char_traitsIcE4moveEPcPKcy\0"
	.long	0x832d
	.long	0x1225
	.uleb128 0x13
	.long	0x832d
	.uleb128 0x13
	.long	0x8327
	.uleb128 0x13
	.long	0x13e9
	.byte	0
	.uleb128 0x26
	.ascii "copy\0"
	.byte	0x1b
	.word	0x112
	.ascii "_ZNSt11char_traitsIcE4copyEPcPKcy\0"
	.long	0x832d
	.long	0x1268
	.uleb128 0x13
	.long	0x832d
	.uleb128 0x13
	.long	0x8327
	.uleb128 0x13
	.long	0x13e9
	.byte	0
	.uleb128 0x25
	.secrel32	.LASF5
	.byte	0x1b
	.word	0x116
	.ascii "_ZNSt11char_traitsIcE6assignEPcyc\0"
	.long	0x832d
	.long	0x12aa
	.uleb128 0x13
	.long	0x832d
	.uleb128 0x13
	.long	0x13e9
	.uleb128 0x13
	.long	0x104c
	.byte	0
	.uleb128 0x26
	.ascii "to_char_type\0"
	.byte	0x1b
	.word	0x11a
	.ascii "_ZNSt11char_traitsIcE12to_char_typeERKi\0"
	.long	0x104c
	.long	0x12f1
	.uleb128 0x13
	.long	0x8333
	.byte	0
	.uleb128 0xa
	.long	0x105d
	.uleb128 0x26
	.ascii "to_int_type\0"
	.byte	0x1b
	.word	0x120
	.ascii "_ZNSt11char_traitsIcE11to_int_typeERKc\0"
	.long	0x105d
	.long	0x133b
	.uleb128 0x13
	.long	0x8321
	.byte	0
	.uleb128 0x26
	.ascii "eq_int_type\0"
	.byte	0x1b
	.word	0x124
	.ascii "_ZNSt11char_traitsIcE11eq_int_typeERKiS2_\0"
	.long	0x82d6
	.long	0x1388
	.uleb128 0x13
	.long	0x8333
	.uleb128 0x13
	.long	0x8333
	.byte	0
	.uleb128 0x27
	.ascii "eof\0"
	.byte	0x1b
	.word	0x128
	.ascii "_ZNSt11char_traitsIcE3eofEv\0"
	.long	0x105d
	.uleb128 0x28
	.ascii "not_eof\0"
	.byte	0x1b
	.word	0x12c
	.ascii "_ZNSt11char_traitsIcE7not_eofERKi\0"
	.long	0x105d
	.uleb128 0x13
	.long	0x8333
	.byte	0
	.byte	0
	.uleb128 0x2
	.ascii "size_t\0"
	.byte	0x19
	.byte	0xbc
	.long	0x109
	.uleb128 0xe
	.byte	0x1c
	.byte	0x30
	.long	0x8339
	.uleb128 0xe
	.byte	0x1c
	.byte	0x31
	.long	0x8356
	.uleb128 0xe
	.byte	0x1c
	.byte	0x32
	.long	0x8375
	.uleb128 0xe
	.byte	0x1c
	.byte	0x33
	.long	0x8394
	.uleb128 0xe
	.byte	0x1c
	.byte	0x35
	.long	0x845d
	.uleb128 0xe
	.byte	0x1c
	.byte	0x36
	.long	0x8484
	.uleb128 0xe
	.byte	0x1c
	.byte	0x37
	.long	0x84ad
	.uleb128 0xe
	.byte	0x1c
	.byte	0x38
	.long	0x84d6
	.uleb128 0xe
	.byte	0x1c
	.byte	0x3a
	.long	0x83b3
	.uleb128 0xe
	.byte	0x1c
	.byte	0x3b
	.long	0x83dc
	.uleb128 0xe
	.byte	0x1c
	.byte	0x3c
	.long	0x8407
	.uleb128 0xe
	.byte	0x1c
	.byte	0x3d
	.long	0x8432
	.uleb128 0xe
	.byte	0x1c
	.byte	0x3f
	.long	0x84ff
	.uleb128 0xe
	.byte	0x1c
	.byte	0x40
	.long	0x134
	.uleb128 0xe
	.byte	0x1c
	.byte	0x42
	.long	0x8347
	.uleb128 0xe
	.byte	0x1c
	.byte	0x43
	.long	0x8365
	.uleb128 0xe
	.byte	0x1c
	.byte	0x44
	.long	0x8384
	.uleb128 0xe
	.byte	0x1c
	.byte	0x45
	.long	0x83a3
	.uleb128 0xe
	.byte	0x1c
	.byte	0x47
	.long	0x8470
	.uleb128 0xe
	.byte	0x1c
	.byte	0x48
	.long	0x8498
	.uleb128 0xe
	.byte	0x1c
	.byte	0x49
	.long	0x84c1
	.uleb128 0xe
	.byte	0x1c
	.byte	0x4a
	.long	0x84ea
	.uleb128 0xe
	.byte	0x1c
	.byte	0x4c
	.long	0x83c7
	.uleb128 0xe
	.byte	0x1c
	.byte	0x4d
	.long	0x83f1
	.uleb128 0xe
	.byte	0x1c
	.byte	0x4e
	.long	0x841c
	.uleb128 0xe
	.byte	0x1c
	.byte	0x4f
	.long	0x8447
	.uleb128 0xe
	.byte	0x1c
	.byte	0x51
	.long	0x850f
	.uleb128 0xe
	.byte	0x1c
	.byte	0x52
	.long	0x145
	.uleb128 0x21
	.ascii "nothrow_t\0"
	.byte	0x1
	.byte	0x1e
	.byte	0x63
	.uleb128 0x2
	.ascii "ptrdiff_t\0"
	.byte	0x19
	.byte	0xbd
	.long	0x123
	.uleb128 0x29
	.ascii "allocator<char>\0"
	.byte	0x1
	.byte	0x1f
	.byte	0x5c
	.long	0x156d
	.uleb128 0x2a
	.long	0x5fda
	.byte	0
	.byte	0x1
	.uleb128 0x2b
	.secrel32	.LASF6
	.byte	0x1f
	.byte	0x5f
	.long	0x13e9
	.byte	0x1
	.uleb128 0x2b
	.secrel32	.LASF7
	.byte	0x1f
	.byte	0x63
	.long	0x8564
	.byte	0x1
	.uleb128 0x2b
	.secrel32	.LASF8
	.byte	0x1f
	.byte	0x64
	.long	0x856a
	.byte	0x1
	.uleb128 0x16
	.secrel32	.LASF9
	.byte	0x1f
	.byte	0x71
	.byte	0x1
	.long	0x152d
	.long	0x1533
	.uleb128 0x12
	.long	0x8582
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF9
	.byte	0x1f
	.byte	0x73
	.byte	0x1
	.long	0x1543
	.long	0x154e
	.uleb128 0x12
	.long	0x8582
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x2c
	.ascii "~allocator\0"
	.byte	0x1f
	.byte	0x79
	.byte	0x1
	.long	0x1561
	.uleb128 0x12
	.long	0x8582
	.uleb128 0x12
	.long	0x18d
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x14da
	.uleb128 0x29
	.ascii "basic_string<char, std::char_traits<char>, std::allocator<char> >\0"
	.byte	0x8
	.byte	0x4
	.byte	0x70
	.long	0x3d15
	.uleb128 0x2d
	.secrel32	.LASF10
	.byte	0x8
	.byte	0x4
	.word	0x110
	.long	0x15fa
	.uleb128 0x2e
	.long	0x14da
	.byte	0
	.uleb128 0xc
	.ascii "_M_p\0"
	.byte	0x4
	.word	0x115
	.long	0x1c2
	.byte	0
	.uleb128 0x2f
	.secrel32	.LASF10
	.byte	0x4
	.word	0x112
	.long	0x15e9
	.uleb128 0x12
	.long	0x8593
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF6
	.byte	0x4
	.byte	0x79
	.long	0x14f9
	.byte	0x1
	.uleb128 0x30
	.ascii "npos\0"
	.byte	0x4
	.word	0x11d
	.long	0x1614
	.byte	0x1
	.uleb128 0xa
	.long	0x15fa
	.uleb128 0xc
	.ascii "_M_dataplus\0"
	.byte	0x4
	.word	0x121
	.long	0x15bc
	.byte	0
	.uleb128 0x31
	.ascii "allocator_type\0"
	.byte	0x4
	.byte	0x78
	.long	0x14da
	.byte	0x1
	.uleb128 0x2b
	.secrel32	.LASF7
	.byte	0x4
	.byte	0x7b
	.long	0x1505
	.byte	0x1
	.uleb128 0x2b
	.secrel32	.LASF8
	.byte	0x4
	.byte	0x7c
	.long	0x1511
	.byte	0x1
	.uleb128 0x2b
	.secrel32	.LASF11
	.byte	0x4
	.byte	0x7f
	.long	0x6291
	.byte	0x1
	.uleb128 0x2b
	.secrel32	.LASF12
	.byte	0x4
	.byte	0x81
	.long	0x66ec
	.byte	0x1
	.uleb128 0x31
	.ascii "const_reverse_iterator\0"
	.byte	0x4
	.byte	0x82
	.long	0x3d15
	.byte	0x1
	.uleb128 0x31
	.ascii "reverse_iterator\0"
	.byte	0x4
	.byte	0x83
	.long	0x3d9c
	.byte	0x1
	.uleb128 0x7
	.ascii "_Rep_base\0"
	.byte	0x18
	.byte	0x4
	.byte	0x94
	.long	0x16fa
	.uleb128 0x8
	.ascii "_M_length\0"
	.byte	0x4
	.byte	0x96
	.long	0x15fa
	.byte	0
	.uleb128 0x8
	.ascii "_M_capacity\0"
	.byte	0x4
	.byte	0x97
	.long	0x15fa
	.byte	0x8
	.uleb128 0x8
	.ascii "_M_refcount\0"
	.byte	0x4
	.byte	0x98
	.long	0x8550
	.byte	0x10
	.byte	0
	.uleb128 0x7
	.ascii "_Rep\0"
	.byte	0x18
	.byte	0x4
	.byte	0x9b
	.long	0x1a86
	.uleb128 0x2e
	.long	0x16ad
	.byte	0
	.uleb128 0x32
	.ascii "_S_max_size\0"
	.byte	0x20
	.byte	0x32
	.long	0x1614
	.uleb128 0x32
	.ascii "_S_terminal\0"
	.byte	0x20
	.byte	0x37
	.long	0x5f01
	.uleb128 0x32
	.ascii "_S_empty_rep_storage\0"
	.byte	0x20
	.byte	0x42
	.long	0x85cf
	.uleb128 0x33
	.secrel32	.LASF13
	.byte	0x4
	.byte	0xb5
	.ascii "_ZNSs4_Rep12_S_empty_repEv\0"
	.long	0x85ab
	.uleb128 0x15
	.ascii "_M_is_leaked\0"
	.byte	0x4
	.byte	0xbf
	.ascii "_ZNKSs4_Rep12_M_is_leakedEv\0"
	.long	0x82d6
	.long	0x17ad
	.long	0x17b3
	.uleb128 0x12
	.long	0x85da
	.byte	0
	.uleb128 0x15
	.ascii "_M_is_shared\0"
	.byte	0x4
	.byte	0xc3
	.ascii "_ZNKSs4_Rep12_M_is_sharedEv\0"
	.long	0x82d6
	.long	0x17eb
	.long	0x17f1
	.uleb128 0x12
	.long	0x85da
	.byte	0
	.uleb128 0x14
	.ascii "_M_set_leaked\0"
	.byte	0x4
	.byte	0xc7
	.ascii "_ZNSs4_Rep13_M_set_leakedEv\0"
	.long	0x1826
	.long	0x182c
	.uleb128 0x12
	.long	0x85a5
	.byte	0
	.uleb128 0x14
	.ascii "_M_set_sharable\0"
	.byte	0x4
	.byte	0xcb
	.ascii "_ZNSs4_Rep15_M_set_sharableEv\0"
	.long	0x1865
	.long	0x186b
	.uleb128 0x12
	.long	0x85a5
	.byte	0
	.uleb128 0x14
	.ascii "_M_set_length_and_sharable\0"
	.byte	0x4
	.byte	0xcf
	.ascii "_ZNSs4_Rep26_M_set_length_and_sharableEy\0"
	.long	0x18ba
	.long	0x18c5
	.uleb128 0x12
	.long	0x85a5
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x15
	.ascii "_M_refdata\0"
	.byte	0x4
	.byte	0xde
	.ascii "_ZNSs4_Rep10_M_refdataEv\0"
	.long	0x1c2
	.long	0x18f8
	.long	0x18fe
	.uleb128 0x12
	.long	0x85a5
	.byte	0
	.uleb128 0x15
	.ascii "_M_grab\0"
	.byte	0x4
	.byte	0xe2
	.ascii "_ZNSs4_Rep7_M_grabERKSaIcES2_\0"
	.long	0x1c2
	.long	0x1933
	.long	0x1943
	.uleb128 0x12
	.long	0x85a5
	.uleb128 0x13
	.long	0x8588
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x26
	.ascii "_S_create\0"
	.byte	0x20
	.word	0x221
	.ascii "_ZNSs4_Rep9_S_createEyyRKSaIcE\0"
	.long	0x85a5
	.long	0x1988
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x14
	.ascii "_M_dispose\0"
	.byte	0x4
	.byte	0xed
	.ascii "_ZNSs4_Rep10_M_disposeERKSaIcE\0"
	.long	0x19bd
	.long	0x19c8
	.uleb128 0x12
	.long	0x85a5
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x34
	.ascii "_M_destroy\0"
	.byte	0x20
	.word	0x1bc
	.ascii "_ZNSs4_Rep10_M_destroyERKSaIcE\0"
	.long	0x19fe
	.long	0x1a09
	.uleb128 0x12
	.long	0x85a5
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x35
	.ascii "_M_refcopy\0"
	.byte	0x4
	.word	0x102
	.ascii "_ZNSs4_Rep10_M_refcopyEv\0"
	.long	0x1c2
	.long	0x1a3d
	.long	0x1a43
	.uleb128 0x12
	.long	0x85a5
	.byte	0
	.uleb128 0x36
	.ascii "_M_clone\0"
	.byte	0x20
	.word	0x26f
	.ascii "_ZNSs4_Rep8_M_cloneERKSaIcEy\0"
	.long	0x1c2
	.long	0x1a75
	.uleb128 0x12
	.long	0x85a5
	.uleb128 0x13
	.long	0x8588
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.byte	0
	.uleb128 0x35
	.ascii "_M_data\0"
	.byte	0x4
	.word	0x124
	.ascii "_ZNKSs7_M_dataEv\0"
	.long	0x1c2
	.long	0x1aaf
	.long	0x1ab5
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x35
	.ascii "_M_data\0"
	.byte	0x4
	.word	0x128
	.ascii "_ZNSs7_M_dataEPc\0"
	.long	0x1c2
	.long	0x1ade
	.long	0x1ae9
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x1c2
	.byte	0
	.uleb128 0x35
	.ascii "_M_rep\0"
	.byte	0x4
	.word	0x12c
	.ascii "_ZNKSs6_M_repEv\0"
	.long	0x85a5
	.long	0x1b10
	.long	0x1b16
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x35
	.ascii "_M_ibegin\0"
	.byte	0x4
	.word	0x132
	.ascii "_ZNKSs9_M_ibeginEv\0"
	.long	0x165d
	.long	0x1b43
	.long	0x1b49
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x35
	.ascii "_M_iend\0"
	.byte	0x4
	.word	0x136
	.ascii "_ZNKSs7_M_iendEv\0"
	.long	0x165d
	.long	0x1b72
	.long	0x1b78
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x34
	.ascii "_M_leak\0"
	.byte	0x4
	.word	0x13a
	.ascii "_ZNSs7_M_leakEv\0"
	.long	0x1b9c
	.long	0x1ba2
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x35
	.ascii "_M_check\0"
	.byte	0x4
	.word	0x141
	.ascii "_ZNKSs8_M_checkEyPKc\0"
	.long	0x15fa
	.long	0x1bd0
	.long	0x1be0
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x34
	.ascii "_M_check_length\0"
	.byte	0x4
	.word	0x14b
	.ascii "_ZNKSs15_M_check_lengthEyyPKc\0"
	.long	0x1c1a
	.long	0x1c2f
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x35
	.ascii "_M_limit\0"
	.byte	0x4
	.word	0x153
	.ascii "_ZNKSs8_M_limitEyy\0"
	.long	0x15fa
	.long	0x1c5b
	.long	0x1c6b
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x35
	.ascii "_M_disjunct\0"
	.byte	0x4
	.word	0x15b
	.ascii "_ZNKSs11_M_disjunctEPKc\0"
	.long	0x82d6
	.long	0x1c9f
	.long	0x1caa
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x37
	.ascii "_M_copy\0"
	.byte	0x4
	.word	0x164
	.ascii "_ZNSs7_M_copyEPcPKcy\0"
	.long	0x1cdf
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x37
	.ascii "_M_move\0"
	.byte	0x4
	.word	0x16d
	.ascii "_ZNSs7_M_moveEPcPKcy\0"
	.long	0x1d14
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x37
	.ascii "_M_assign\0"
	.byte	0x4
	.word	0x176
	.ascii "_ZNSs9_M_assignEPcyc\0"
	.long	0x1d4b
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF14
	.byte	0x4
	.word	0x18a
	.ascii "_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_\0"
	.long	0x1da7
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF14
	.byte	0x4
	.word	0x18e
	.ascii "_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_\0"
	.long	0x1e04
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x1669
	.uleb128 0x13
	.long	0x1669
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF14
	.byte	0x4
	.word	0x193
	.ascii "_ZNSs13_S_copy_charsEPcS_S_\0"
	.long	0x1e3c
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x1c2
	.byte	0
	.uleb128 0x38
	.secrel32	.LASF14
	.byte	0x4
	.word	0x197
	.ascii "_ZNSs13_S_copy_charsEPcPKcS1_\0"
	.long	0x1e76
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x26
	.ascii "_S_compare\0"
	.byte	0x4
	.word	0x19c
	.ascii "_ZNSs10_S_compareEyy\0"
	.long	0x18d
	.long	0x1ead
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x34
	.ascii "_M_mutate\0"
	.byte	0x4
	.word	0x1a9
	.ascii "_ZNSs9_M_mutateEyyy\0"
	.long	0x1ed7
	.long	0x1eec
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x34
	.ascii "_M_leak_hard\0"
	.byte	0x4
	.word	0x1ac
	.ascii "_ZNSs12_M_leak_hardEv\0"
	.long	0x1f1b
	.long	0x1f21
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x39
	.secrel32	.LASF13
	.byte	0x4
	.word	0x1af
	.ascii "_ZNSs12_S_empty_repEv\0"
	.long	0x85ab
	.uleb128 0x3a
	.secrel32	.LASF15
	.byte	0x4
	.word	0x1ba
	.byte	0x1
	.long	0x1f54
	.long	0x1f5a
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF15
	.byte	0x4
	.word	0x1c5
	.byte	0x1
	.long	0x1f6b
	.long	0x1f76
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF15
	.byte	0x4
	.word	0x1cc
	.byte	0x1
	.long	0x1f87
	.long	0x1f92
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b1
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF15
	.byte	0x4
	.word	0x1d3
	.byte	0x1
	.long	0x1fa3
	.long	0x1fb8
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF15
	.byte	0x4
	.word	0x1dc
	.byte	0x1
	.long	0x1fc9
	.long	0x1fe3
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF15
	.byte	0x4
	.word	0x1e8
	.byte	0x1
	.long	0x1ff4
	.long	0x2009
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF15
	.byte	0x4
	.word	0x1ef
	.byte	0x1
	.long	0x201a
	.long	0x202a
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF15
	.byte	0x4
	.word	0x1f6
	.byte	0x1
	.long	0x203b
	.long	0x2050
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF15
	.byte	0x4
	.word	0x200
	.byte	0x1
	.long	0x2061
	.long	0x206c
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b7
	.byte	0
	.uleb128 0x3a
	.secrel32	.LASF15
	.byte	0x4
	.word	0x212
	.byte	0x1
	.long	0x207d
	.long	0x208d
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x3e22
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x3c
	.ascii "~basic_string\0"
	.byte	0x4
	.word	0x222
	.byte	0x1
	.long	0x20a8
	.long	0x20b3
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x12
	.long	0x18d
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF1
	.byte	0x4
	.word	0x22a
	.ascii "_ZNSsaSERKSs\0"
	.long	0x85bd
	.byte	0x1
	.long	0x20d5
	.long	0x20e0
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b1
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF1
	.byte	0x4
	.word	0x232
	.ascii "_ZNSsaSEPKc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2101
	.long	0x210c
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF1
	.byte	0x4
	.word	0x23d
	.ascii "_ZNSsaSEc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x212b
	.long	0x2136
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF1
	.byte	0x4
	.word	0x24d
	.ascii "_ZNSsaSEOSs\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2157
	.long	0x2162
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b7
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF1
	.byte	0x4
	.word	0x259
	.ascii "_ZNSsaSESt16initializer_listIcE\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2197
	.long	0x21a2
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x3e22
	.byte	0
	.uleb128 0x3e
	.ascii "begin\0"
	.byte	0x4
	.word	0x266
	.ascii "_ZNSs5beginEv\0"
	.long	0x165d
	.byte	0x1
	.long	0x21c7
	.long	0x21cd
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x3e
	.ascii "begin\0"
	.byte	0x4
	.word	0x271
	.ascii "_ZNKSs5beginEv\0"
	.long	0x1669
	.byte	0x1
	.long	0x21f3
	.long	0x21f9
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "end\0"
	.byte	0x4
	.word	0x279
	.ascii "_ZNSs3endEv\0"
	.long	0x165d
	.byte	0x1
	.long	0x221a
	.long	0x2220
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x3e
	.ascii "end\0"
	.byte	0x4
	.word	0x284
	.ascii "_ZNKSs3endEv\0"
	.long	0x1669
	.byte	0x1
	.long	0x2242
	.long	0x2248
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "rbegin\0"
	.byte	0x4
	.word	0x28d
	.ascii "_ZNSs6rbeginEv\0"
	.long	0x1694
	.byte	0x1
	.long	0x226f
	.long	0x2275
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x3e
	.ascii "rbegin\0"
	.byte	0x4
	.word	0x296
	.ascii "_ZNKSs6rbeginEv\0"
	.long	0x1675
	.byte	0x1
	.long	0x229d
	.long	0x22a3
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "rend\0"
	.byte	0x4
	.word	0x29f
	.ascii "_ZNSs4rendEv\0"
	.long	0x1694
	.byte	0x1
	.long	0x22c6
	.long	0x22cc
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x3e
	.ascii "rend\0"
	.byte	0x4
	.word	0x2a8
	.ascii "_ZNKSs4rendEv\0"
	.long	0x1675
	.byte	0x1
	.long	0x22f0
	.long	0x22f6
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "cbegin\0"
	.byte	0x4
	.word	0x2b1
	.ascii "_ZNKSs6cbeginEv\0"
	.long	0x1669
	.byte	0x1
	.long	0x231e
	.long	0x2324
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "cend\0"
	.byte	0x4
	.word	0x2b9
	.ascii "_ZNKSs4cendEv\0"
	.long	0x1669
	.byte	0x1
	.long	0x2348
	.long	0x234e
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "crbegin\0"
	.byte	0x4
	.word	0x2c2
	.ascii "_ZNKSs7crbeginEv\0"
	.long	0x1675
	.byte	0x1
	.long	0x2378
	.long	0x237e
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "crend\0"
	.byte	0x4
	.word	0x2cb
	.ascii "_ZNKSs5crendEv\0"
	.long	0x1675
	.byte	0x1
	.long	0x23a4
	.long	0x23aa
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "size\0"
	.byte	0x4
	.word	0x2d4
	.ascii "_ZNKSs4sizeEv\0"
	.long	0x15fa
	.byte	0x1
	.long	0x23ce
	.long	0x23d4
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "length\0"
	.byte	0x4
	.word	0x2da
	.ascii "_ZNKSs6lengthEv\0"
	.long	0x15fa
	.byte	0x1
	.long	0x23fc
	.long	0x2402
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF16
	.byte	0x4
	.word	0x2df
	.ascii "_ZNKSs8max_sizeEv\0"
	.long	0x15fa
	.byte	0x1
	.long	0x2429
	.long	0x242f
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3f
	.ascii "resize\0"
	.byte	0x4
	.word	0x2ed
	.ascii "_ZNSs6resizeEyc\0"
	.byte	0x1
	.long	0x2453
	.long	0x2463
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x3f
	.ascii "resize\0"
	.byte	0x4
	.word	0x2fa
	.ascii "_ZNSs6resizeEy\0"
	.byte	0x1
	.long	0x2486
	.long	0x2491
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3f
	.ascii "shrink_to_fit\0"
	.byte	0x4
	.word	0x300
	.ascii "_ZNSs13shrink_to_fitEv\0"
	.byte	0x1
	.long	0x24c3
	.long	0x24c9
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x3e
	.ascii "capacity\0"
	.byte	0x4
	.word	0x311
	.ascii "_ZNKSs8capacityEv\0"
	.long	0x15fa
	.byte	0x1
	.long	0x24f5
	.long	0x24fb
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3f
	.ascii "reserve\0"
	.byte	0x4
	.word	0x326
	.ascii "_ZNSs7reserveEy\0"
	.byte	0x1
	.long	0x2520
	.long	0x252b
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3f
	.ascii "clear\0"
	.byte	0x4
	.word	0x32d
	.ascii "_ZNSs5clearEv\0"
	.byte	0x1
	.long	0x254c
	.long	0x2552
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x3e
	.ascii "empty\0"
	.byte	0x4
	.word	0x335
	.ascii "_ZNKSs5emptyEv\0"
	.long	0x82d6
	.byte	0x1
	.long	0x2578
	.long	0x257e
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF17
	.byte	0x4
	.word	0x344
	.ascii "_ZNKSsixEy\0"
	.long	0x1651
	.byte	0x1
	.long	0x259e
	.long	0x25a9
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF17
	.byte	0x4
	.word	0x355
	.ascii "_ZNSsixEy\0"
	.long	0x1645
	.byte	0x1
	.long	0x25c8
	.long	0x25d3
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3e
	.ascii "at\0"
	.byte	0x4
	.word	0x36b
	.ascii "_ZNKSs2atEy\0"
	.long	0x1651
	.byte	0x1
	.long	0x25f3
	.long	0x25fe
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3e
	.ascii "at\0"
	.byte	0x4
	.word	0x381
	.ascii "_ZNSs2atEy\0"
	.long	0x1645
	.byte	0x1
	.long	0x261d
	.long	0x2628
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3e
	.ascii "front\0"
	.byte	0x4
	.word	0x392
	.ascii "_ZNSs5frontEv\0"
	.long	0x1645
	.byte	0x1
	.long	0x264d
	.long	0x2653
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x3e
	.ascii "front\0"
	.byte	0x4
	.word	0x39a
	.ascii "_ZNKSs5frontEv\0"
	.long	0x1651
	.byte	0x1
	.long	0x2679
	.long	0x267f
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "back\0"
	.byte	0x4
	.word	0x3a2
	.ascii "_ZNSs4backEv\0"
	.long	0x1645
	.byte	0x1
	.long	0x26a2
	.long	0x26a8
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x3e
	.ascii "back\0"
	.byte	0x4
	.word	0x3aa
	.ascii "_ZNKSs4backEv\0"
	.long	0x1651
	.byte	0x1
	.long	0x26cc
	.long	0x26d2
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF18
	.byte	0x4
	.word	0x3b5
	.ascii "_ZNSspLERKSs\0"
	.long	0x85bd
	.byte	0x1
	.long	0x26f4
	.long	0x26ff
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b1
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF18
	.byte	0x4
	.word	0x3be
	.ascii "_ZNSspLEPKc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2720
	.long	0x272b
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF18
	.byte	0x4
	.word	0x3c7
	.ascii "_ZNSspLEc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x274a
	.long	0x2755
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF18
	.byte	0x4
	.word	0x3d4
	.ascii "_ZNSspLESt16initializer_listIcE\0"
	.long	0x85bd
	.byte	0x1
	.long	0x278a
	.long	0x2795
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x3e22
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF19
	.byte	0x4
	.word	0x3de
	.ascii "_ZNSs6appendERKSs\0"
	.long	0x85bd
	.byte	0x1
	.long	0x27bc
	.long	0x27c7
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b1
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF19
	.byte	0x4
	.word	0x3ee
	.ascii "_ZNSs6appendERKSsyy\0"
	.long	0x85bd
	.byte	0x1
	.long	0x27f0
	.long	0x2805
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF19
	.byte	0x4
	.word	0x3f7
	.ascii "_ZNSs6appendEPKcy\0"
	.long	0x85bd
	.byte	0x1
	.long	0x282c
	.long	0x283c
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF19
	.byte	0x4
	.word	0x3ff
	.ascii "_ZNSs6appendEPKc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2862
	.long	0x286d
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF19
	.byte	0x4
	.word	0x40e
	.ascii "_ZNSs6appendEyc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2892
	.long	0x28a2
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF19
	.byte	0x4
	.word	0x417
	.ascii "_ZNSs6appendESt16initializer_listIcE\0"
	.long	0x85bd
	.byte	0x1
	.long	0x28dc
	.long	0x28e7
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x3e22
	.byte	0
	.uleb128 0x3f
	.ascii "push_back\0"
	.byte	0x4
	.word	0x42d
	.ascii "_ZNSs9push_backEc\0"
	.byte	0x1
	.long	0x2910
	.long	0x291b
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF5
	.byte	0x4
	.word	0x43c
	.ascii "_ZNSs6assignERKSs\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2942
	.long	0x294d
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b1
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF5
	.byte	0x4
	.word	0x449
	.ascii "_ZNSs6assignEOSs\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2973
	.long	0x297e
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b7
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF5
	.byte	0x4
	.word	0x45e
	.ascii "_ZNSs6assignERKSsyy\0"
	.long	0x85bd
	.byte	0x1
	.long	0x29a7
	.long	0x29bc
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF5
	.byte	0x4
	.word	0x46e
	.ascii "_ZNSs6assignEPKcy\0"
	.long	0x85bd
	.byte	0x1
	.long	0x29e3
	.long	0x29f3
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF5
	.byte	0x4
	.word	0x47a
	.ascii "_ZNSs6assignEPKc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2a19
	.long	0x2a24
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF5
	.byte	0x4
	.word	0x48a
	.ascii "_ZNSs6assignEyc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2a49
	.long	0x2a59
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF5
	.byte	0x4
	.word	0x4a1
	.ascii "_ZNSs6assignESt16initializer_listIcE\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2a93
	.long	0x2a9e
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x3e22
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF20
	.byte	0x4
	.word	0x4b3
	.ascii "_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEyc\0"
	.byte	0x1
	.long	0x2ae4
	.long	0x2af9
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x40
	.secrel32	.LASF20
	.byte	0x4
	.word	0x4cf
	.ascii "_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE\0"
	.byte	0x1
	.long	0x2b54
	.long	0x2b64
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x3e22
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF20
	.byte	0x4
	.word	0x4e3
	.ascii "_ZNSs6insertEyRKSs\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2b8c
	.long	0x2b9c
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x85b1
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF20
	.byte	0x4
	.word	0x4f9
	.ascii "_ZNSs6insertEyRKSsyy\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2bc6
	.long	0x2be0
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF20
	.byte	0x4
	.word	0x510
	.ascii "_ZNSs6insertEyPKcy\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2c08
	.long	0x2c1d
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF20
	.byte	0x4
	.word	0x522
	.ascii "_ZNSs6insertEyPKc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2c44
	.long	0x2c54
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF20
	.byte	0x4
	.word	0x539
	.ascii "_ZNSs6insertEyyc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2c7a
	.long	0x2c8f
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF20
	.byte	0x4
	.word	0x54b
	.ascii "_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc\0"
	.long	0x165d
	.byte	0x1
	.long	0x2cd8
	.long	0x2ce8
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x3e
	.ascii "erase\0"
	.byte	0x4
	.word	0x564
	.ascii "_ZNSs5eraseEyy\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2d0e
	.long	0x2d1e
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3e
	.ascii "erase\0"
	.byte	0x4
	.word	0x574
	.ascii "_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE\0"
	.long	0x165d
	.byte	0x1
	.long	0x2d67
	.long	0x2d72
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.byte	0
	.uleb128 0x3e
	.ascii "erase\0"
	.byte	0x4
	.word	0x588
	.ascii "_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_\0"
	.long	0x165d
	.byte	0x1
	.long	0x2dbe
	.long	0x2dce
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.byte	0
	.uleb128 0x3f
	.ascii "pop_back\0"
	.byte	0x4
	.word	0x591
	.ascii "_ZNSs8pop_backEv\0"
	.byte	0x1
	.long	0x2df5
	.long	0x2dfb
	.uleb128 0x12
	.long	0x859f
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x5a7
	.ascii "_ZNSs7replaceEyyRKSs\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2e25
	.long	0x2e3a
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x85b1
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x5bd
	.ascii "_ZNSs7replaceEyyRKSsyy\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2e66
	.long	0x2e85
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x5d6
	.ascii "_ZNSs7replaceEyyPKcy\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2eaf
	.long	0x2ec9
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x5ea
	.ascii "_ZNSs7replaceEyyPKc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2ef2
	.long	0x2f07
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x602
	.ascii "_ZNSs7replaceEyyyc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2f2f
	.long	0x2f49
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x614
	.ascii "_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2f99
	.long	0x2fae
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x85b1
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x627
	.ascii "_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcy\0"
	.long	0x85bd
	.byte	0x1
	.long	0x2ffe
	.long	0x3018
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x63c
	.ascii "_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x3067
	.long	0x307c
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x651
	.ascii "_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_yc\0"
	.long	0x85bd
	.byte	0x1
	.long	0x30ca
	.long	0x30e4
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x676
	.ascii "_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_\0"
	.long	0x85bd
	.byte	0x1
	.long	0x3136
	.long	0x3150
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x1c2
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x680
	.ascii "_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_\0"
	.long	0x85bd
	.byte	0x1
	.long	0x31a2
	.long	0x31bc
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x68b
	.ascii "_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_\0"
	.long	0x85bd
	.byte	0x1
	.long	0x320e
	.long	0x3228
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x695
	.ascii "_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_\0"
	.long	0x85bd
	.byte	0x1
	.long	0x3283
	.long	0x329d
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x1669
	.uleb128 0x13
	.long	0x1669
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF21
	.byte	0x4
	.word	0x6ae
	.ascii "_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE\0"
	.long	0x85bd
	.byte	0x1
	.long	0x3300
	.long	0x3315
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x165d
	.uleb128 0x13
	.long	0x3e22
	.byte	0
	.uleb128 0x35
	.ascii "_M_replace_aux\0"
	.byte	0x4
	.word	0x6c0
	.ascii "_ZNSs14_M_replace_auxEyyyc\0"
	.long	0x85bd
	.long	0x334f
	.long	0x3369
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.byte	0
	.uleb128 0x35
	.ascii "_M_replace_safe\0"
	.byte	0x4
	.word	0x6c4
	.ascii "_ZNSs15_M_replace_safeEyyPKcy\0"
	.long	0x85bd
	.long	0x33a7
	.long	0x33c1
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x26
	.ascii "_S_construct_aux_2\0"
	.byte	0x4
	.word	0x6dc
	.ascii "_ZNSs18_S_construct_aux_2EycRKSaIcE\0"
	.long	0x1c2
	.long	0x3414
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x26
	.ascii "_S_construct\0"
	.byte	0x4
	.word	0x6f5
	.ascii "_ZNSs12_S_constructEycRKSaIcE\0"
	.long	0x1c2
	.long	0x345b
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0xe3
	.uleb128 0x13
	.long	0x8588
	.byte	0
	.uleb128 0x3e
	.ascii "copy\0"
	.byte	0x4
	.word	0x706
	.ascii "_ZNKSs4copyEPcyy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3482
	.long	0x3497
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3f
	.ascii "swap\0"
	.byte	0x4
	.word	0x711
	.ascii "_ZNSs4swapERSs\0"
	.byte	0x1
	.long	0x34b8
	.long	0x34c3
	.uleb128 0x12
	.long	0x859f
	.uleb128 0x13
	.long	0x85bd
	.byte	0
	.uleb128 0x3e
	.ascii "c_str\0"
	.byte	0x4
	.word	0x71b
	.ascii "_ZNKSs5c_strEv\0"
	.long	0x5efb
	.byte	0x1
	.long	0x34e9
	.long	0x34ef
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "data\0"
	.byte	0x4
	.word	0x725
	.ascii "_ZNKSs4dataEv\0"
	.long	0x5efb
	.byte	0x1
	.long	0x3513
	.long	0x3519
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "get_allocator\0"
	.byte	0x4
	.word	0x72c
	.ascii "_ZNKSs13get_allocatorEv\0"
	.long	0x162e
	.byte	0x1
	.long	0x3550
	.long	0x3556
	.uleb128 0x12
	.long	0x8599
	.byte	0
	.uleb128 0x3e
	.ascii "find\0"
	.byte	0x4
	.word	0x73c
	.ascii "_ZNKSs4findEPKcyy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x357e
	.long	0x3593
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3e
	.ascii "find\0"
	.byte	0x4
	.word	0x749
	.ascii "_ZNKSs4findERKSsy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x35bb
	.long	0x35cb
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3e
	.ascii "find\0"
	.byte	0x4
	.word	0x758
	.ascii "_ZNKSs4findEPKcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x35f2
	.long	0x3602
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3e
	.ascii "find\0"
	.byte	0x4
	.word	0x769
	.ascii "_ZNKSs4findEcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3627
	.long	0x3637
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0xe3
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF22
	.byte	0x4
	.word	0x776
	.ascii "_ZNKSs5rfindERKSsy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x365f
	.long	0x366f
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF22
	.byte	0x4
	.word	0x787
	.ascii "_ZNKSs5rfindEPKcyy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3697
	.long	0x36ac
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF22
	.byte	0x4
	.word	0x794
	.ascii "_ZNKSs5rfindEPKcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x36d3
	.long	0x36e3
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF22
	.byte	0x4
	.word	0x7a5
	.ascii "_ZNKSs5rfindEcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3708
	.long	0x3718
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0xe3
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF23
	.byte	0x4
	.word	0x7b3
	.ascii "_ZNKSs13find_first_ofERKSsy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3749
	.long	0x3759
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF23
	.byte	0x4
	.word	0x7c4
	.ascii "_ZNKSs13find_first_ofEPKcyy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x378a
	.long	0x379f
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF23
	.byte	0x4
	.word	0x7d1
	.ascii "_ZNKSs13find_first_ofEPKcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x37cf
	.long	0x37df
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF23
	.byte	0x4
	.word	0x7e4
	.ascii "_ZNKSs13find_first_ofEcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x380d
	.long	0x381d
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0xe3
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF24
	.byte	0x4
	.word	0x7f3
	.ascii "_ZNKSs12find_last_ofERKSsy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x384d
	.long	0x385d
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF24
	.byte	0x4
	.word	0x804
	.ascii "_ZNKSs12find_last_ofEPKcyy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x388d
	.long	0x38a2
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF24
	.byte	0x4
	.word	0x811
	.ascii "_ZNKSs12find_last_ofEPKcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x38d1
	.long	0x38e1
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF24
	.byte	0x4
	.word	0x824
	.ascii "_ZNKSs12find_last_ofEcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x390e
	.long	0x391e
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0xe3
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF25
	.byte	0x4
	.word	0x832
	.ascii "_ZNKSs17find_first_not_ofERKSsy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3953
	.long	0x3963
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF25
	.byte	0x4
	.word	0x843
	.ascii "_ZNKSs17find_first_not_ofEPKcyy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3998
	.long	0x39ad
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF25
	.byte	0x4
	.word	0x851
	.ascii "_ZNKSs17find_first_not_ofEPKcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x39e1
	.long	0x39f1
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF25
	.byte	0x4
	.word	0x862
	.ascii "_ZNKSs17find_first_not_ofEcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3a23
	.long	0x3a33
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0xe3
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF26
	.byte	0x4
	.word	0x871
	.ascii "_ZNKSs16find_last_not_ofERKSsy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3a67
	.long	0x3a77
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF26
	.byte	0x4
	.word	0x882
	.ascii "_ZNKSs16find_last_not_ofEPKcyy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3aab
	.long	0x3ac0
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF26
	.byte	0x4
	.word	0x890
	.ascii "_ZNKSs16find_last_not_ofEPKcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3af3
	.long	0x3b03
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF26
	.byte	0x4
	.word	0x8a1
	.ascii "_ZNKSs16find_last_not_ofEcy\0"
	.long	0x15fa
	.byte	0x1
	.long	0x3b34
	.long	0x3b44
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0xe3
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3e
	.ascii "substr\0"
	.byte	0x4
	.word	0x8b1
	.ascii "_ZNKSs6substrEyy\0"
	.long	0x1572
	.byte	0x1
	.long	0x3b6d
	.long	0x3b7d
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF4
	.byte	0x4
	.word	0x8c4
	.ascii "_ZNKSs7compareERKSs\0"
	.long	0x18d
	.byte	0x1
	.long	0x3ba6
	.long	0x3bb1
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x85b1
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF4
	.byte	0x4
	.word	0x8e4
	.ascii "_ZNKSs7compareEyyRKSs\0"
	.long	0x18d
	.byte	0x1
	.long	0x3bdc
	.long	0x3bf1
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x85b1
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF4
	.byte	0x4
	.word	0x8fe
	.ascii "_ZNKSs7compareEyyRKSsyy\0"
	.long	0x18d
	.byte	0x1
	.long	0x3c1e
	.long	0x3c3d
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF4
	.byte	0x4
	.word	0x910
	.ascii "_ZNKSs7compareEPKc\0"
	.long	0x18d
	.byte	0x1
	.long	0x3c65
	.long	0x3c70
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF4
	.byte	0x4
	.word	0x928
	.ascii "_ZNKSs7compareEyyPKc\0"
	.long	0x18d
	.byte	0x1
	.long	0x3c9a
	.long	0x3caf
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF4
	.byte	0x4
	.word	0x943
	.ascii "_ZNKSs7compareEyyPKcy\0"
	.long	0x18d
	.byte	0x1
	.long	0x3cda
	.long	0x3cf4
	.uleb128 0x12
	.long	0x8599
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x15fa
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x15fa
	.byte	0
	.uleb128 0xa
	.long	0x16fa
	.uleb128 0x41
	.secrel32	.LASF27
	.long	0xe3
	.uleb128 0x42
	.secrel32	.LASF28
	.long	0x1032
	.uleb128 0x42
	.secrel32	.LASF29
	.long	0x14da
	.byte	0
	.uleb128 0x1c
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >\0"
	.uleb128 0x1c
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >\0"
	.uleb128 0xa
	.long	0x1572
	.uleb128 0x29
	.ascii "initializer_list<char>\0"
	.byte	0x10
	.byte	0x21
	.byte	0x2f
	.long	0x3f7d
	.uleb128 0x2b
	.secrel32	.LASF11
	.byte	0x21
	.byte	0x36
	.long	0x5efb
	.byte	0x1
	.uleb128 0x8
	.ascii "_M_array\0"
	.byte	0x21
	.byte	0x3a
	.long	0x3e41
	.byte	0
	.uleb128 0x2b
	.secrel32	.LASF6
	.byte	0x21
	.byte	0x35
	.long	0x13e9
	.byte	0x1
	.uleb128 0x8
	.ascii "_M_len\0"
	.byte	0x21
	.byte	0x3b
	.long	0x3e5e
	.byte	0x8
	.uleb128 0x2b
	.secrel32	.LASF12
	.byte	0x21
	.byte	0x37
	.long	0x5efb
	.byte	0x1
	.uleb128 0x43
	.secrel32	.LASF30
	.byte	0x21
	.byte	0x3e
	.long	0x3e94
	.long	0x3ea4
	.uleb128 0x12
	.long	0x85c3
	.uleb128 0x13
	.long	0x3e79
	.uleb128 0x13
	.long	0x3e5e
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF30
	.byte	0x21
	.byte	0x42
	.byte	0x1
	.long	0x3eb4
	.long	0x3eba
	.uleb128 0x12
	.long	0x85c3
	.byte	0
	.uleb128 0x44
	.ascii "size\0"
	.byte	0x21
	.byte	0x47
	.ascii "_ZNKSt16initializer_listIcE4sizeEv\0"
	.long	0x3e5e
	.byte	0x1
	.long	0x3ef2
	.long	0x3ef8
	.uleb128 0x12
	.long	0x85c9
	.byte	0
	.uleb128 0x44
	.ascii "begin\0"
	.byte	0x21
	.byte	0x4b
	.ascii "_ZNKSt16initializer_listIcE5beginEv\0"
	.long	0x3e79
	.byte	0x1
	.long	0x3f32
	.long	0x3f38
	.uleb128 0x12
	.long	0x85c9
	.byte	0
	.uleb128 0x44
	.ascii "end\0"
	.byte	0x21
	.byte	0x4f
	.ascii "_ZNKSt16initializer_listIcE3endEv\0"
	.long	0x3e79
	.byte	0x1
	.long	0x3f6e
	.long	0x3f74
	.uleb128 0x12
	.long	0x85c9
	.byte	0
	.uleb128 0x1f
	.ascii "_E\0"
	.long	0xe3
	.byte	0
	.uleb128 0xa
	.long	0x3e22
	.uleb128 0x2
	.ascii "string\0"
	.byte	0x22
	.byte	0x3e
	.long	0x1572
	.uleb128 0x45
	.ascii "_Ios_Fmtflags\0"
	.byte	0x4
	.byte	0x1
	.byte	0x33
	.long	0x40b7
	.uleb128 0x46
	.ascii "_S_boolalpha\0"
	.sleb128 1
	.uleb128 0x46
	.ascii "_S_dec\0"
	.sleb128 2
	.uleb128 0x46
	.ascii "_S_fixed\0"
	.sleb128 4
	.uleb128 0x46
	.ascii "_S_hex\0"
	.sleb128 8
	.uleb128 0x46
	.ascii "_S_internal\0"
	.sleb128 16
	.uleb128 0x46
	.ascii "_S_left\0"
	.sleb128 32
	.uleb128 0x46
	.ascii "_S_oct\0"
	.sleb128 64
	.uleb128 0x46
	.ascii "_S_right\0"
	.sleb128 128
	.uleb128 0x46
	.ascii "_S_scientific\0"
	.sleb128 256
	.uleb128 0x46
	.ascii "_S_showbase\0"
	.sleb128 512
	.uleb128 0x46
	.ascii "_S_showpoint\0"
	.sleb128 1024
	.uleb128 0x46
	.ascii "_S_showpos\0"
	.sleb128 2048
	.uleb128 0x46
	.ascii "_S_skipws\0"
	.sleb128 4096
	.uleb128 0x46
	.ascii "_S_unitbuf\0"
	.sleb128 8192
	.uleb128 0x46
	.ascii "_S_uppercase\0"
	.sleb128 16384
	.uleb128 0x46
	.ascii "_S_adjustfield\0"
	.sleb128 176
	.uleb128 0x46
	.ascii "_S_basefield\0"
	.sleb128 74
	.uleb128 0x46
	.ascii "_S_floatfield\0"
	.sleb128 260
	.uleb128 0x46
	.ascii "_S_ios_fmtflags_end\0"
	.sleb128 65536
	.byte	0
	.uleb128 0x45
	.ascii "_Ios_Openmode\0"
	.byte	0x4
	.byte	0x1
	.byte	0x67
	.long	0x411d
	.uleb128 0x46
	.ascii "_S_app\0"
	.sleb128 1
	.uleb128 0x46
	.ascii "_S_ate\0"
	.sleb128 2
	.uleb128 0x46
	.ascii "_S_bin\0"
	.sleb128 4
	.uleb128 0x46
	.ascii "_S_in\0"
	.sleb128 8
	.uleb128 0x46
	.ascii "_S_out\0"
	.sleb128 16
	.uleb128 0x46
	.ascii "_S_trunc\0"
	.sleb128 32
	.uleb128 0x46
	.ascii "_S_ios_openmode_end\0"
	.sleb128 65536
	.byte	0
	.uleb128 0x45
	.ascii "_Ios_Iostate\0"
	.byte	0x4
	.byte	0x1
	.byte	0x8f
	.long	0x417c
	.uleb128 0x46
	.ascii "_S_goodbit\0"
	.sleb128 0
	.uleb128 0x46
	.ascii "_S_badbit\0"
	.sleb128 1
	.uleb128 0x46
	.ascii "_S_eofbit\0"
	.sleb128 2
	.uleb128 0x46
	.ascii "_S_failbit\0"
	.sleb128 4
	.uleb128 0x46
	.ascii "_S_ios_iostate_end\0"
	.sleb128 65536
	.byte	0
	.uleb128 0x45
	.ascii "_Ios_Seekdir\0"
	.byte	0x4
	.byte	0x1
	.byte	0xb5
	.long	0x41c4
	.uleb128 0x46
	.ascii "_S_beg\0"
	.sleb128 0
	.uleb128 0x46
	.ascii "_S_cur\0"
	.sleb128 1
	.uleb128 0x46
	.ascii "_S_end\0"
	.sleb128 2
	.uleb128 0x46
	.ascii "_S_ios_seekdir_end\0"
	.sleb128 65536
	.byte	0
	.uleb128 0x47
	.ascii "ios_base\0"
	.long	0x4502
	.uleb128 0x48
	.ascii "Init\0"
	.byte	0x1
	.byte	0x1
	.word	0x215
	.byte	0x1
	.long	0x4245
	.uleb128 0x49
	.ascii "_S_refcount\0"
	.byte	0x1
	.word	0x21d
	.long	0x8550
	.uleb128 0x49
	.ascii "_S_synced_with_stdio\0"
	.byte	0x1
	.word	0x21e
	.long	0x82d6
	.uleb128 0x3c
	.ascii "Init\0"
	.byte	0x1
	.word	0x219
	.byte	0x1
	.long	0x4224
	.long	0x422a
	.uleb128 0x12
	.long	0x85f0
	.byte	0
	.uleb128 0x4a
	.ascii "~Init\0"
	.byte	0x1
	.word	0x21a
	.byte	0x1
	.long	0x4239
	.uleb128 0x12
	.long	0x85f0
	.uleb128 0x12
	.long	0x18d
	.byte	0
	.byte	0
	.uleb128 0x4b
	.ascii "openmode\0"
	.byte	0x1
	.word	0x169
	.long	0x40b7
	.byte	0x1
	.uleb128 0x4b
	.ascii "seekdir\0"
	.byte	0x1
	.word	0x189
	.long	0x417c
	.byte	0x1
	.uleb128 0x31
	.ascii "fmtflags\0"
	.byte	0x1
	.byte	0xff
	.long	0x3f90
	.byte	0x1
	.uleb128 0x3e
	.ascii "setf\0"
	.byte	0x1
	.word	0x253
	.ascii "_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_\0"
	.long	0x4268
	.byte	0x1
	.long	0x42b8
	.long	0x42c8
	.uleb128 0x12
	.long	0x8c31
	.uleb128 0x13
	.long	0x4268
	.uleb128 0x13
	.long	0x4268
	.byte	0
	.uleb128 0x4c
	.ascii "boolalpha\0"
	.byte	0x1
	.word	0x102
	.long	0x42dc
	.byte	0x1
	.byte	0x1
	.uleb128 0xa
	.long	0x4268
	.uleb128 0x4c
	.ascii "dec\0"
	.byte	0x1
	.word	0x105
	.long	0x42dc
	.byte	0x1
	.byte	0x2
	.uleb128 0x4c
	.ascii "fixed\0"
	.byte	0x1
	.word	0x108
	.long	0x42dc
	.byte	0x1
	.byte	0x4
	.uleb128 0x4c
	.ascii "hex\0"
	.byte	0x1
	.word	0x10b
	.long	0x42dc
	.byte	0x1
	.byte	0x8
	.uleb128 0x4c
	.ascii "internal\0"
	.byte	0x1
	.word	0x110
	.long	0x42dc
	.byte	0x1
	.byte	0x10
	.uleb128 0x4c
	.ascii "left\0"
	.byte	0x1
	.word	0x114
	.long	0x42dc
	.byte	0x1
	.byte	0x20
	.uleb128 0x4c
	.ascii "oct\0"
	.byte	0x1
	.word	0x117
	.long	0x42dc
	.byte	0x1
	.byte	0x40
	.uleb128 0x4c
	.ascii "right\0"
	.byte	0x1
	.word	0x11b
	.long	0x42dc
	.byte	0x1
	.byte	0x80
	.uleb128 0x4d
	.ascii "scientific\0"
	.byte	0x1
	.word	0x11e
	.long	0x42dc
	.byte	0x1
	.word	0x100
	.uleb128 0x4d
	.ascii "showbase\0"
	.byte	0x1
	.word	0x122
	.long	0x42dc
	.byte	0x1
	.word	0x200
	.uleb128 0x4d
	.ascii "showpoint\0"
	.byte	0x1
	.word	0x126
	.long	0x42dc
	.byte	0x1
	.word	0x400
	.uleb128 0x4d
	.ascii "showpos\0"
	.byte	0x1
	.word	0x129
	.long	0x42dc
	.byte	0x1
	.word	0x800
	.uleb128 0x4d
	.ascii "skipws\0"
	.byte	0x1
	.word	0x12c
	.long	0x42dc
	.byte	0x1
	.word	0x1000
	.uleb128 0x4d
	.ascii "unitbuf\0"
	.byte	0x1
	.word	0x12f
	.long	0x42dc
	.byte	0x1
	.word	0x2000
	.uleb128 0x4d
	.ascii "uppercase\0"
	.byte	0x1
	.word	0x133
	.long	0x42dc
	.byte	0x1
	.word	0x4000
	.uleb128 0x4c
	.ascii "adjustfield\0"
	.byte	0x1
	.word	0x136
	.long	0x42dc
	.byte	0x1
	.byte	0xb0
	.uleb128 0x4c
	.ascii "basefield\0"
	.byte	0x1
	.word	0x139
	.long	0x42dc
	.byte	0x1
	.byte	0x4a
	.uleb128 0x4d
	.ascii "floatfield\0"
	.byte	0x1
	.word	0x13c
	.long	0x42dc
	.byte	0x1
	.word	0x104
	.uleb128 0x4b
	.ascii "iostate\0"
	.byte	0x1
	.word	0x14a
	.long	0x411d
	.byte	0x1
	.uleb128 0x4c
	.ascii "badbit\0"
	.byte	0x1
	.word	0x14e
	.long	0x443b
	.byte	0x1
	.byte	0x1
	.uleb128 0xa
	.long	0x4419
	.uleb128 0x4c
	.ascii "eofbit\0"
	.byte	0x1
	.word	0x151
	.long	0x443b
	.byte	0x1
	.byte	0x2
	.uleb128 0x4c
	.ascii "failbit\0"
	.byte	0x1
	.word	0x156
	.long	0x443b
	.byte	0x1
	.byte	0x4
	.uleb128 0x4c
	.ascii "goodbit\0"
	.byte	0x1
	.word	0x159
	.long	0x443b
	.byte	0x1
	.byte	0
	.uleb128 0x4c
	.ascii "app\0"
	.byte	0x1
	.word	0x16c
	.long	0x4483
	.byte	0x1
	.byte	0x1
	.uleb128 0xa
	.long	0x4245
	.uleb128 0x4c
	.ascii "ate\0"
	.byte	0x1
	.word	0x16f
	.long	0x4483
	.byte	0x1
	.byte	0x2
	.uleb128 0x4c
	.ascii "binary\0"
	.byte	0x1
	.word	0x174
	.long	0x4483
	.byte	0x1
	.byte	0x4
	.uleb128 0x4c
	.ascii "in\0"
	.byte	0x1
	.word	0x177
	.long	0x4483
	.byte	0x1
	.byte	0x8
	.uleb128 0x4c
	.ascii "out\0"
	.byte	0x1
	.word	0x17a
	.long	0x4483
	.byte	0x1
	.byte	0x10
	.uleb128 0x4c
	.ascii "trunc\0"
	.byte	0x1
	.word	0x17d
	.long	0x4483
	.byte	0x1
	.byte	0x20
	.uleb128 0x4c
	.ascii "beg\0"
	.byte	0x1
	.word	0x18c
	.long	0x44e0
	.byte	0x1
	.byte	0
	.uleb128 0xa
	.long	0x4257
	.uleb128 0x4c
	.ascii "cur\0"
	.byte	0x1
	.word	0x18f
	.long	0x44e0
	.byte	0x1
	.byte	0x1
	.uleb128 0x4c
	.ascii "end\0"
	.byte	0x1
	.word	0x192
	.long	0x44e0
	.byte	0x1
	.byte	0x2
	.byte	0
	.uleb128 0xe
	.byte	0x23
	.byte	0x52
	.long	0x85f6
	.uleb128 0xe
	.byte	0x23
	.byte	0x53
	.long	0x17c
	.uleb128 0xe
	.byte	0x23
	.byte	0x54
	.long	0x157
	.uleb128 0xe
	.byte	0x23
	.byte	0x5c
	.long	0x8607
	.uleb128 0xe
	.byte	0x23
	.byte	0x65
	.long	0x8626
	.uleb128 0xe
	.byte	0x23
	.byte	0x68
	.long	0x8646
	.uleb128 0xe
	.byte	0x23
	.byte	0x69
	.long	0x865f
	.uleb128 0x47
	.ascii "basic_ostream<char, std::char_traits<char> >\0"
	.long	0x4578
	.uleb128 0x41
	.secrel32	.LASF27
	.long	0xe3
	.uleb128 0x42
	.secrel32	.LASF28
	.long	0x1032
	.byte	0
	.uleb128 0x47
	.ascii "basic_istream<char, std::char_traits<char> >\0"
	.long	0x45bd
	.uleb128 0x41
	.secrel32	.LASF27
	.long	0xe3
	.uleb128 0x42
	.secrel32	.LASF28
	.long	0x1032
	.byte	0
	.uleb128 0xe
	.byte	0x24
	.byte	0x3a
	.long	0x87de
	.uleb128 0xe
	.byte	0x24
	.byte	0x3b
	.long	0x86bb
	.uleb128 0xe
	.byte	0x24
	.byte	0x3e
	.long	0x87ec
	.uleb128 0xe
	.byte	0x24
	.byte	0x3f
	.long	0x880b
	.uleb128 0xe
	.byte	0x24
	.byte	0x40
	.long	0x8837
	.uleb128 0xe
	.byte	0x24
	.byte	0x41
	.long	0x8856
	.uleb128 0xe
	.byte	0x24
	.byte	0x42
	.long	0x8887
	.uleb128 0xe
	.byte	0x24
	.byte	0x44
	.long	0x88a5
	.uleb128 0xe
	.byte	0x24
	.byte	0x45
	.long	0x88b7
	.uleb128 0xe
	.byte	0x24
	.byte	0x47
	.long	0x88d3
	.uleb128 0xe
	.byte	0x24
	.byte	0x48
	.long	0x88f3
	.uleb128 0xe
	.byte	0x24
	.byte	0x49
	.long	0x8911
	.uleb128 0xe
	.byte	0x24
	.byte	0x4a
	.long	0x8936
	.uleb128 0xe
	.byte	0x25
	.byte	0x3d
	.long	0x87de
	.uleb128 0xe
	.byte	0x25
	.byte	0x3e
	.long	0x86bb
	.uleb128 0xe
	.byte	0x25
	.byte	0x41
	.long	0x87ec
	.uleb128 0xe
	.byte	0x25
	.byte	0x42
	.long	0x880b
	.uleb128 0xe
	.byte	0x25
	.byte	0x43
	.long	0x8837
	.uleb128 0xe
	.byte	0x25
	.byte	0x44
	.long	0x8856
	.uleb128 0xe
	.byte	0x25
	.byte	0x45
	.long	0x8887
	.uleb128 0xe
	.byte	0x25
	.byte	0x47
	.long	0x88a5
	.uleb128 0xe
	.byte	0x25
	.byte	0x48
	.long	0x88b7
	.uleb128 0xe
	.byte	0x25
	.byte	0x4a
	.long	0x88d3
	.uleb128 0xe
	.byte	0x25
	.byte	0x4b
	.long	0x88f3
	.uleb128 0xe
	.byte	0x25
	.byte	0x4c
	.long	0x8911
	.uleb128 0xe
	.byte	0x25
	.byte	0x4d
	.long	0x8936
	.uleb128 0xe
	.byte	0x26
	.byte	0x3a
	.long	0x8980
	.uleb128 0xe
	.byte	0x26
	.byte	0x3e
	.long	0x8991
	.uleb128 0xe
	.byte	0x26
	.byte	0x44
	.long	0x89b0
	.uleb128 0xe
	.byte	0x26
	.byte	0x45
	.long	0x89d6
	.uleb128 0xe
	.byte	0x26
	.byte	0x48
	.long	0x89fc
	.uleb128 0xe
	.byte	0x26
	.byte	0x49
	.long	0x8a22
	.uleb128 0x7
	.ascii "integral_constant<long long unsigned int, 2ull>\0"
	.byte	0x1
	.byte	0x1a
	.byte	0x45
	.long	0x4784
	.uleb128 0x1d
	.secrel32	.LASF3
	.byte	0x1a
	.byte	0x47
	.long	0x82f5
	.uleb128 0x1e
	.secrel32	.LASF2
	.byte	0x1a
	.byte	0x48
	.long	0x109
	.uleb128 0x15
	.ascii "operator std::integral_constant<long long unsigned int, 2ull>::value_type\0"
	.byte	0x1a
	.byte	0x4a
	.ascii "_ZNKSt17integral_constantIyLy2EEcvyEv\0"
	.long	0x46e0
	.long	0x476a
	.long	0x4770
	.uleb128 0x12
	.long	0x8a48
	.byte	0
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0x109
	.uleb128 0x20
	.ascii "__v\0"
	.long	0x109
	.byte	0x2
	.byte	0
	.uleb128 0xa
	.long	0x469d
	.uleb128 0xd
	.ascii "__detail\0"
	.byte	0x27
	.byte	0x42
	.long	0x47cc
	.uleb128 0x2
	.ascii "_StateIdT\0"
	.byte	0x28
	.byte	0x2b
	.long	0x194
	.uleb128 0x4e
	.ascii "_S_invalid_state_id\0"
	.byte	0x28
	.byte	0x2c
	.long	0x47c6
	.sleb128 -1
	.uleb128 0xa
	.long	0x4799
	.byte	0
	.uleb128 0x4f
	.ascii "mersenne_twister_engine<unsigned int, 32ull, 624ull, 397ull, 31ull, 2567483615u, 11ull, 4294967295u, 7ull, 2636928640u, 15ull, 4022730752u, 18ull, 1812433253u>\0"
	.word	0x9c8
	.byte	0x27
	.word	0x1c3
	.long	0x4ebd
	.uleb128 0x30
	.ascii "word_size\0"
	.byte	0x27
	.word	0x1e5
	.long	0x4ebd
	.byte	0x1
	.uleb128 0x4d
	.ascii "state_size\0"
	.byte	0x27
	.word	0x1e6
	.long	0x4ebd
	.byte	0x1
	.word	0x270
	.uleb128 0x30
	.ascii "shift_size\0"
	.byte	0x27
	.word	0x1e7
	.long	0x4ebd
	.byte	0x1
	.uleb128 0x30
	.ascii "mask_bits\0"
	.byte	0x27
	.word	0x1e8
	.long	0x4ebd
	.byte	0x1
	.uleb128 0x4b
	.ascii "result_type\0"
	.byte	0x27
	.word	0x1e2
	.long	0x1df
	.byte	0x1
	.uleb128 0x30
	.ascii "xor_mask\0"
	.byte	0x27
	.word	0x1e9
	.long	0x48ed
	.byte	0x1
	.uleb128 0xa
	.long	0x48c6
	.uleb128 0x30
	.ascii "tempering_u\0"
	.byte	0x27
	.word	0x1ea
	.long	0x4ebd
	.byte	0x1
	.uleb128 0x30
	.ascii "tempering_d\0"
	.byte	0x27
	.word	0x1eb
	.long	0x48ed
	.byte	0x1
	.uleb128 0x30
	.ascii "tempering_s\0"
	.byte	0x27
	.word	0x1ec
	.long	0x4ebd
	.byte	0x1
	.uleb128 0x30
	.ascii "tempering_b\0"
	.byte	0x27
	.word	0x1ed
	.long	0x48ed
	.byte	0x1
	.uleb128 0x30
	.ascii "tempering_t\0"
	.byte	0x27
	.word	0x1ee
	.long	0x4ebd
	.byte	0x1
	.uleb128 0x30
	.ascii "tempering_c\0"
	.byte	0x27
	.word	0x1ef
	.long	0x48ed
	.byte	0x1
	.uleb128 0x30
	.ascii "tempering_l\0"
	.byte	0x27
	.word	0x1f0
	.long	0x4ebd
	.byte	0x1
	.uleb128 0x30
	.ascii "initialization_multiplier\0"
	.byte	0x27
	.word	0x1f1
	.long	0x48ed
	.byte	0x1
	.uleb128 0x30
	.ascii "default_seed\0"
	.byte	0x27
	.word	0x1f2
	.long	0x48ed
	.byte	0x1
	.uleb128 0xc
	.ascii "_M_x\0"
	.byte	0x27
	.word	0x26d
	.long	0x8a4e
	.byte	0
	.uleb128 0x50
	.ascii "_M_p\0"
	.byte	0x27
	.word	0x26e
	.long	0x13e9
	.word	0x9c0
	.uleb128 0x51
	.ascii "mersenne_twister_engine\0"
	.byte	0x27
	.word	0x1f6
	.byte	0x1
	.long	0x4a00
	.long	0x4a0b
	.uleb128 0x12
	.long	0x8a5f
	.uleb128 0x13
	.long	0x48c6
	.byte	0
	.uleb128 0x3f
	.ascii "seed\0"
	.byte	0x27
	.word	0x207
	.ascii "_ZNSt23mersenne_twister_engineIjLy32ELy624ELy397ELy31ELj2567483615ELy11ELj4294967295ELy7ELj2636928640ELy15ELj4022730752ELy18ELj1812433253EE4seedEj\0"
	.byte	0x1
	.long	0x4ab0
	.long	0x4abb
	.uleb128 0x12
	.long	0x8a5f
	.uleb128 0x13
	.long	0x48c6
	.byte	0
	.uleb128 0x52
	.ascii "min\0"
	.byte	0x27
	.word	0x211
	.ascii "_ZNSt23mersenne_twister_engineIjLy32ELy624ELy397ELy31ELj2567483615ELy11ELj4294967295ELy7ELj2636928640ELy15ELj4022730752ELy18ELj1812433253EE3minEv\0"
	.long	0x48c6
	.byte	0x1
	.uleb128 0x52
	.ascii "max\0"
	.byte	0x27
	.word	0x218
	.ascii "_ZNSt23mersenne_twister_engineIjLy32ELy624ELy397ELy31ELj2567483615ELy11ELj4294967295ELy7ELj2636928640ELy15ELj4022730752ELy18ELj1812433253EE3maxEv\0"
	.long	0x48c6
	.byte	0x1
	.uleb128 0x3f
	.ascii "discard\0"
	.byte	0x27
	.word	0x21f
	.ascii "_ZNSt23mersenne_twister_engineIjLy32ELy624ELy397ELy31ELj2567483615ELy11ELj4294967295ELy7ELj2636928640ELy15ELj4022730752ELy18ELj1812433253EE7discardEy\0"
	.byte	0x1
	.long	0x4ca4
	.long	0x4caf
	.uleb128 0x12
	.long	0x8a5f
	.uleb128 0x13
	.long	0x109
	.byte	0
	.uleb128 0x3e
	.ascii "operator()\0"
	.byte	0x27
	.word	0x222
	.ascii "_ZNSt23mersenne_twister_engineIjLy32ELy624ELy397ELy31ELj2567483615ELy11ELj4294967295ELy7ELj2636928640ELy15ELj4022730752ELy18ELj1812433253EEclEv\0"
	.long	0x48c6
	.byte	0x1
	.long	0x4d5b
	.long	0x4d61
	.uleb128 0x12
	.long	0x8a5f
	.byte	0
	.uleb128 0x34
	.ascii "_M_gen_rand\0"
	.byte	0x27
	.word	0x26b
	.ascii "_ZNSt23mersenne_twister_engineIjLy32ELy624ELy397ELy31ELj2567483615ELy11ELj4294967295ELy7ELj2636928640ELy15ELj4022730752ELy18ELj1812433253EE11_M_gen_randEv\0"
	.long	0x4e14
	.long	0x4e1a
	.uleb128 0x12
	.long	0x8a5f
	.byte	0
	.uleb128 0x1f
	.ascii "_UIntType\0"
	.long	0x1df
	.uleb128 0x20
	.ascii "__w\0"
	.long	0x109
	.byte	0x20
	.uleb128 0x53
	.ascii "__n\0"
	.long	0x109
	.word	0x270
	.uleb128 0x53
	.ascii "__m\0"
	.long	0x109
	.word	0x18d
	.uleb128 0x20
	.ascii "__r\0"
	.long	0x109
	.byte	0x1f
	.uleb128 0x54
	.ascii "__a\0"
	.long	0x1df
	.sleb128 -1727483681
	.uleb128 0x20
	.ascii "__u\0"
	.long	0x109
	.byte	0xb
	.uleb128 0x54
	.ascii "__d\0"
	.long	0x1df
	.sleb128 -1
	.uleb128 0x20
	.ascii "__s\0"
	.long	0x109
	.byte	0x7
	.uleb128 0x54
	.ascii "__b\0"
	.long	0x1df
	.sleb128 -1658038656
	.uleb128 0x20
	.ascii "__t\0"
	.long	0x109
	.byte	0xf
	.uleb128 0x54
	.ascii "__c\0"
	.long	0x1df
	.sleb128 -272236544
	.uleb128 0x20
	.ascii "__l\0"
	.long	0x109
	.byte	0x12
	.uleb128 0x55
	.ascii "__f\0"
	.long	0x1df
	.long	0x6c078965
	.byte	0
	.uleb128 0xa
	.long	0x13e9
	.uleb128 0x21
	.ascii "allocator_arg_t\0"
	.byte	0x1
	.byte	0x29
	.byte	0x27
	.uleb128 0x56
	.ascii "_Swallow_assign\0"
	.byte	0x1
	.byte	0x2a
	.word	0x42c
	.uleb128 0x7
	.ascii "iterator_traits<char*>\0"
	.byte	0x1
	.byte	0x2b
	.byte	0xaf
	.long	0x4f35
	.uleb128 0x1e
	.secrel32	.LASF31
	.byte	0x2b
	.byte	0xb3
	.long	0x14c9
	.uleb128 0x1e
	.secrel32	.LASF32
	.byte	0x2b
	.byte	0xb4
	.long	0x1c2
	.uleb128 0x1e
	.secrel32	.LASF7
	.byte	0x2b
	.byte	0xb5
	.long	0x8564
	.uleb128 0x41
	.secrel32	.LASF33
	.long	0x1c2
	.byte	0
	.uleb128 0x7
	.ascii "_Setprecision\0"
	.byte	0x4
	.byte	0x2
	.byte	0xb9
	.long	0x4f59
	.uleb128 0x8
	.ascii "_M_n\0"
	.byte	0x2
	.byte	0xb9
	.long	0x18d
	.byte	0
	.byte	0
	.uleb128 0xe
	.byte	0x2c
	.byte	0x50
	.long	0x6e11
	.uleb128 0xe
	.byte	0x2c
	.byte	0x51
	.long	0x6e4a
	.uleb128 0xe
	.byte	0x2c
	.byte	0x52
	.long	0x6e11
	.uleb128 0xe
	.byte	0x2c
	.byte	0x53
	.long	0x6e11
	.uleb128 0xe
	.byte	0x2c
	.byte	0x54
	.long	0x6e11
	.uleb128 0x45
	.ascii "memory_order\0"
	.byte	0x4
	.byte	0x2d
	.byte	0x38
	.long	0x501c
	.uleb128 0x46
	.ascii "memory_order_relaxed\0"
	.sleb128 0
	.uleb128 0x46
	.ascii "memory_order_consume\0"
	.sleb128 1
	.uleb128 0x46
	.ascii "memory_order_acquire\0"
	.sleb128 2
	.uleb128 0x46
	.ascii "memory_order_release\0"
	.sleb128 3
	.uleb128 0x46
	.ascii "memory_order_acq_rel\0"
	.sleb128 4
	.uleb128 0x46
	.ascii "memory_order_seq_cst\0"
	.sleb128 5
	.byte	0
	.uleb128 0xd
	.ascii "chrono\0"
	.byte	0x2e
	.byte	0x3c
	.long	0x503b
	.uleb128 0x57
	.ascii "_V2\0"
	.byte	0x2e
	.word	0x2c5
	.uleb128 0x58
	.byte	0x2e
	.word	0x2c5
	.long	0x502a
	.byte	0
	.uleb128 0x7
	.ascii "integral_constant<long long int, 1ll>\0"
	.byte	0x1
	.byte	0x1a
	.byte	0x45
	.long	0x510e
	.uleb128 0x1d
	.secrel32	.LASF3
	.byte	0x1a
	.byte	0x47
	.long	0x867c
	.uleb128 0x1e
	.secrel32	.LASF2
	.byte	0x1a
	.byte	0x48
	.long	0x123
	.uleb128 0x15
	.ascii "operator std::integral_constant<long long int, 1ll>::value_type\0"
	.byte	0x1a
	.byte	0x4a
	.ascii "_ZNKSt17integral_constantIxLx1EEcvxEv\0"
	.long	0x5074
	.long	0x50f4
	.long	0x50fa
	.uleb128 0x12
	.long	0x8a82
	.byte	0
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0x123
	.uleb128 0x20
	.ascii "__v\0"
	.long	0x123
	.byte	0x1
	.byte	0
	.uleb128 0xa
	.long	0x503b
	.uleb128 0x7
	.ascii "integral_constant<long long int, 1000000000ll>\0"
	.byte	0x1
	.byte	0x1a
	.byte	0x45
	.long	0x5204
	.uleb128 0x1d
	.secrel32	.LASF3
	.byte	0x1a
	.byte	0x47
	.long	0x867c
	.uleb128 0x1e
	.secrel32	.LASF2
	.byte	0x1a
	.byte	0x48
	.long	0x123
	.uleb128 0x15
	.ascii "operator std::integral_constant<long long int, 1000000000ll>::value_type\0"
	.byte	0x1a
	.byte	0x4a
	.ascii "_ZNKSt17integral_constantIxLx1000000000EEcvxEv\0"
	.long	0x5155
	.long	0x51e7
	.long	0x51ed
	.uleb128 0x12
	.long	0x8a88
	.byte	0
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0x123
	.uleb128 0x55
	.ascii "__v\0"
	.long	0x123
	.long	0x3b9aca00
	.byte	0
	.uleb128 0xa
	.long	0x5113
	.uleb128 0x59
	.ascii "ratio<1ll, 1000000000ll>\0"
	.byte	0x1
	.byte	0x30
	.word	0x107
	.long	0x5262
	.uleb128 0x5a
	.ascii "num\0"
	.byte	0x30
	.word	0x10e
	.long	0x8a8e
	.byte	0x1
	.uleb128 0x5b
	.ascii "den\0"
	.byte	0x30
	.word	0x111
	.long	0x8a8e
	.long	0x3b9aca00
	.uleb128 0x20
	.ascii "_Num\0"
	.long	0x123
	.byte	0x1
	.uleb128 0x55
	.ascii "_Den\0"
	.long	0x123
	.long	0x3b9aca00
	.byte	0
	.uleb128 0x59
	.ascii "ratio<1000000000ll, 1ll>\0"
	.byte	0x1
	.byte	0x30
	.word	0x107
	.long	0x52bb
	.uleb128 0x5b
	.ascii "num\0"
	.byte	0x30
	.word	0x10e
	.long	0x8a8e
	.long	0x3b9aca00
	.uleb128 0x5a
	.ascii "den\0"
	.byte	0x30
	.word	0x111
	.long	0x8a8e
	.byte	0x1
	.uleb128 0x55
	.ascii "_Num\0"
	.long	0x123
	.long	0x3b9aca00
	.uleb128 0x20
	.ascii "_Den\0"
	.long	0x123
	.byte	0x1
	.byte	0
	.uleb128 0x59
	.ascii "ratio<1ll, 1ll>\0"
	.byte	0x1
	.byte	0x30
	.word	0x107
	.long	0x5305
	.uleb128 0x5a
	.ascii "num\0"
	.byte	0x30
	.word	0x10e
	.long	0x8a8e
	.byte	0x1
	.uleb128 0x5a
	.ascii "den\0"
	.byte	0x30
	.word	0x111
	.long	0x8a8e
	.byte	0x1
	.uleb128 0x20
	.ascii "_Num\0"
	.long	0x123
	.byte	0x1
	.uleb128 0x5c
	.ascii "_Den\0"
	.long	0x123
	.byte	0x1
	.byte	0
	.uleb128 0x56
	.ascii "defer_lock_t\0"
	.byte	0x1
	.byte	0x31
	.word	0x162
	.uleb128 0x56
	.ascii "try_to_lock_t\0"
	.byte	0x1
	.byte	0x31
	.word	0x165
	.uleb128 0x56
	.ascii "adopt_lock_t\0"
	.byte	0x1
	.byte	0x31
	.word	0x169
	.uleb128 0x22
	.ascii "_V2\0"
	.byte	0x32
	.byte	0xad
	.uleb128 0x5d
	.byte	0x32
	.byte	0xad
	.long	0x533c
	.uleb128 0x5e
	.ascii "future_errc\0"
	.byte	0x4
	.byte	0x4c
	.byte	0x40
	.long	0x53b2
	.uleb128 0x46
	.ascii "future_already_retrieved\0"
	.sleb128 1
	.uleb128 0x46
	.ascii "promise_already_satisfied\0"
	.sleb128 2
	.uleb128 0x46
	.ascii "no_state\0"
	.sleb128 3
	.uleb128 0x46
	.ascii "broken_promise\0"
	.sleb128 4
	.byte	0
	.uleb128 0xd
	.ascii "regex_constants\0"
	.byte	0x33
	.byte	0x2f
	.long	0x5745
	.uleb128 0x45
	.ascii "__syntax_option\0"
	.byte	0x4
	.byte	0x33
	.byte	0x36
	.long	0x546c
	.uleb128 0x46
	.ascii "_S_icase\0"
	.sleb128 0
	.uleb128 0x46
	.ascii "_S_nosubs\0"
	.sleb128 1
	.uleb128 0x46
	.ascii "_S_optimize\0"
	.sleb128 2
	.uleb128 0x46
	.ascii "_S_collate\0"
	.sleb128 3
	.uleb128 0x46
	.ascii "_S_ECMAScript\0"
	.sleb128 4
	.uleb128 0x46
	.ascii "_S_basic\0"
	.sleb128 5
	.uleb128 0x46
	.ascii "_S_extended\0"
	.sleb128 6
	.uleb128 0x46
	.ascii "_S_awk\0"
	.sleb128 7
	.uleb128 0x46
	.ascii "_S_grep\0"
	.sleb128 8
	.uleb128 0x46
	.ascii "_S_egrep\0"
	.sleb128 9
	.uleb128 0x46
	.ascii "_S_syntax_last\0"
	.sleb128 10
	.byte	0
	.uleb128 0x45
	.ascii "__match_flag\0"
	.byte	0x4
	.byte	0x33
	.byte	0xd5
	.long	0x5528
	.uleb128 0x46
	.ascii "_S_not_bol\0"
	.sleb128 0
	.uleb128 0x46
	.ascii "_S_not_eol\0"
	.sleb128 1
	.uleb128 0x46
	.ascii "_S_not_bow\0"
	.sleb128 2
	.uleb128 0x46
	.ascii "_S_not_eow\0"
	.sleb128 3
	.uleb128 0x46
	.ascii "_S_any\0"
	.sleb128 4
	.uleb128 0x46
	.ascii "_S_not_null\0"
	.sleb128 5
	.uleb128 0x46
	.ascii "_S_continuous\0"
	.sleb128 6
	.uleb128 0x46
	.ascii "_S_prev_avail\0"
	.sleb128 7
	.uleb128 0x46
	.ascii "_S_sed\0"
	.sleb128 8
	.uleb128 0x46
	.ascii "_S_no_copy\0"
	.sleb128 9
	.uleb128 0x46
	.ascii "_S_first_only\0"
	.sleb128 10
	.uleb128 0x46
	.ascii "_S_match_flag_last\0"
	.sleb128 11
	.byte	0
	.uleb128 0x45
	.ascii "error_type\0"
	.byte	0x4
	.byte	0x34
	.byte	0x31
	.long	0x562a
	.uleb128 0x46
	.ascii "_S_error_collate\0"
	.sleb128 0
	.uleb128 0x46
	.ascii "_S_error_ctype\0"
	.sleb128 1
	.uleb128 0x46
	.ascii "_S_error_escape\0"
	.sleb128 2
	.uleb128 0x46
	.ascii "_S_error_backref\0"
	.sleb128 3
	.uleb128 0x46
	.ascii "_S_error_brack\0"
	.sleb128 4
	.uleb128 0x46
	.ascii "_S_error_paren\0"
	.sleb128 5
	.uleb128 0x46
	.ascii "_S_error_brace\0"
	.sleb128 6
	.uleb128 0x46
	.ascii "_S_error_badbrace\0"
	.sleb128 7
	.uleb128 0x46
	.ascii "_S_error_range\0"
	.sleb128 8
	.uleb128 0x46
	.ascii "_S_error_space\0"
	.sleb128 9
	.uleb128 0x46
	.ascii "_S_error_badrepeat\0"
	.sleb128 10
	.uleb128 0x46
	.ascii "_S_error_complexity\0"
	.sleb128 11
	.uleb128 0x46
	.ascii "_S_error_stack\0"
	.sleb128 12
	.byte	0
	.uleb128 0x5f
	.ascii "error_collate\0"
	.byte	0x34
	.byte	0x43
	.long	0x5640
	.byte	0
	.uleb128 0xa
	.long	0x5528
	.uleb128 0x5f
	.ascii "error_ctype\0"
	.byte	0x34
	.byte	0x46
	.long	0x5640
	.byte	0x1
	.uleb128 0x5f
	.ascii "error_escape\0"
	.byte	0x34
	.byte	0x4c
	.long	0x5640
	.byte	0x2
	.uleb128 0x5f
	.ascii "error_backref\0"
	.byte	0x34
	.byte	0x4f
	.long	0x5640
	.byte	0x3
	.uleb128 0x5f
	.ascii "error_brack\0"
	.byte	0x34
	.byte	0x52
	.long	0x5640
	.byte	0x4
	.uleb128 0x5f
	.ascii "error_paren\0"
	.byte	0x34
	.byte	0x55
	.long	0x5640
	.byte	0x5
	.uleb128 0x5f
	.ascii "error_brace\0"
	.byte	0x34
	.byte	0x58
	.long	0x5640
	.byte	0x6
	.uleb128 0x5f
	.ascii "error_badbrace\0"
	.byte	0x34
	.byte	0x5b
	.long	0x5640
	.byte	0x7
	.uleb128 0x5f
	.ascii "error_range\0"
	.byte	0x34
	.byte	0x61
	.long	0x5640
	.byte	0x8
	.uleb128 0x5f
	.ascii "error_space\0"
	.byte	0x34
	.byte	0x67
	.long	0x5640
	.byte	0x9
	.uleb128 0x5f
	.ascii "error_badrepeat\0"
	.byte	0x34
	.byte	0x6c
	.long	0x5640
	.byte	0xa
	.uleb128 0x5f
	.ascii "error_complexity\0"
	.byte	0x34
	.byte	0x72
	.long	0x5640
	.byte	0xb
	.uleb128 0x5f
	.ascii "error_stack\0"
	.byte	0x34
	.byte	0x78
	.long	0x5640
	.byte	0xc
	.byte	0
	.uleb128 0x7
	.ascii "iterator_traits<char const*>\0"
	.byte	0x1
	.byte	0x2b
	.byte	0xba
	.long	0x5795
	.uleb128 0x1e
	.secrel32	.LASF31
	.byte	0x2b
	.byte	0xbe
	.long	0x14c9
	.uleb128 0x1e
	.secrel32	.LASF32
	.byte	0x2b
	.byte	0xbf
	.long	0x5efb
	.uleb128 0x1e
	.secrel32	.LASF7
	.byte	0x2b
	.byte	0xc0
	.long	0x856a
	.uleb128 0x41
	.secrel32	.LASF33
	.long	0x5efb
	.byte	0
	.uleb128 0x59
	.ascii "remove_reference<int&>\0"
	.byte	0x1
	.byte	0x1a
	.word	0x5e0
	.long	0x57c3
	.uleb128 0x5
	.ascii "type\0"
	.byte	0x1a
	.word	0x5e1
	.long	0x18d
	.byte	0
	.uleb128 0x7
	.ascii "integral_constant<long long unsigned int, 8ull>\0"
	.byte	0x1
	.byte	0x1a
	.byte	0x45
	.long	0x58aa
	.uleb128 0x1d
	.secrel32	.LASF3
	.byte	0x1a
	.byte	0x47
	.long	0x82f5
	.uleb128 0x1e
	.secrel32	.LASF2
	.byte	0x1a
	.byte	0x48
	.long	0x109
	.uleb128 0x15
	.ascii "operator std::integral_constant<long long unsigned int, 8ull>::value_type\0"
	.byte	0x1a
	.byte	0x4a
	.ascii "_ZNKSt17integral_constantIyLy8EEcvyEv\0"
	.long	0x5806
	.long	0x5890
	.long	0x5896
	.uleb128 0x12
	.long	0x8ad1
	.byte	0
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0x109
	.uleb128 0x20
	.ascii "__v\0"
	.long	0x109
	.byte	0x8
	.byte	0
	.uleb128 0xa
	.long	0x57c3
	.uleb128 0x1c
	.ascii "exception\0"
	.uleb128 0x24
	.ascii "operator&\0"
	.byte	0x1
	.byte	0x4b
	.ascii "_ZStanSt13_Ios_FmtflagsS_\0"
	.long	0x3f90
	.long	0x58f4
	.uleb128 0x13
	.long	0x3f90
	.uleb128 0x13
	.long	0x3f90
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF34
	.byte	0x1
	.byte	0x4f
	.ascii "_ZStorSt13_Ios_FmtflagsS_\0"
	.long	0x3f90
	.long	0x5928
	.uleb128 0x13
	.long	0x3f90
	.uleb128 0x13
	.long	0x3f90
	.byte	0
	.uleb128 0x24
	.ascii "operator~\0"
	.byte	0x1
	.byte	0x57
	.ascii "_ZStcoSt13_Ios_Fmtflags\0"
	.long	0x3f90
	.long	0x595b
	.uleb128 0x13
	.long	0x3f90
	.byte	0
	.uleb128 0x24
	.ascii "operator|=\0"
	.byte	0x1
	.byte	0x5b
	.ascii "_ZStoRRSt13_Ios_FmtflagsS_\0"
	.long	0x8b71
	.long	0x5997
	.uleb128 0x13
	.long	0x8b77
	.uleb128 0x13
	.long	0x3f90
	.byte	0
	.uleb128 0xa
	.long	0x3f90
	.uleb128 0x24
	.ascii "operator&=\0"
	.byte	0x1
	.byte	0x5f
	.ascii "_ZStaNRSt13_Ios_FmtflagsS_\0"
	.long	0x8b71
	.long	0x59d8
	.uleb128 0x13
	.long	0x8b77
	.uleb128 0x13
	.long	0x3f90
	.byte	0
	.uleb128 0x60
	.secrel32	.LASF34
	.byte	0x1
	.byte	0x77
	.ascii "_ZStorSt13_Ios_OpenmodeS_\0"
	.long	0x40b7
	.long	0x5a0c
	.uleb128 0x13
	.long	0x40b7
	.uleb128 0x13
	.long	0x40b7
	.byte	0
	.uleb128 0x26
	.ascii "fixed\0"
	.byte	0x1
	.word	0x3be
	.ascii "_ZSt5fixedRSt8ios_base\0"
	.long	0x85ea
	.long	0x5a3b
	.uleb128 0x13
	.long	0x85ea
	.byte	0
	.uleb128 0x24
	.ascii "setprecision\0"
	.byte	0x2
	.byte	0xc3
	.ascii "_ZSt12setprecisioni\0"
	.long	0x4f35
	.long	0x5a6d
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x2
	.ascii "stringstream\0"
	.byte	0x35
	.byte	0x97
	.long	0x5a81
	.uleb128 0x47
	.ascii "basic_stringstream<char, std::char_traits<char>, std::allocator<char> >\0"
	.long	0x5aea
	.uleb128 0x41
	.secrel32	.LASF27
	.long	0xe3
	.uleb128 0x42
	.secrel32	.LASF28
	.long	0x1032
	.uleb128 0x42
	.secrel32	.LASF29
	.long	0x14da
	.byte	0
	.uleb128 0x2
	.ascii "ifstream\0"
	.byte	0x35
	.byte	0x9d
	.long	0x5afa
	.uleb128 0x47
	.ascii "basic_ifstream<char, std::char_traits<char> >\0"
	.long	0x5b40
	.uleb128 0x41
	.secrel32	.LASF27
	.long	0xe3
	.uleb128 0x42
	.secrel32	.LASF28
	.long	0x1032
	.byte	0
	.uleb128 0x2
	.ascii "ofstream\0"
	.byte	0x35
	.byte	0xa0
	.long	0x5b50
	.uleb128 0x47
	.ascii "basic_ofstream<char, std::char_traits<char> >\0"
	.long	0x5b96
	.uleb128 0x41
	.secrel32	.LASF27
	.long	0xe3
	.uleb128 0x42
	.secrel32	.LASF28
	.long	0x1032
	.byte	0
	.uleb128 0x26
	.ascii "operator==<char, std::char_traits<char>, std::allocator<char> >\0"
	.byte	0x4
	.word	0x9ea
	.ascii "_ZSteqIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_EPKS3_\0"
	.long	0x82d6
	.long	0x5c3d
	.uleb128 0x41
	.secrel32	.LASF27
	.long	0xe3
	.uleb128 0x41
	.secrel32	.LASF28
	.long	0x1032
	.uleb128 0x41
	.secrel32	.LASF29
	.long	0x14da
	.uleb128 0x13
	.long	0x85b1
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x24
	.ascii "move<int&>\0"
	.byte	0x5
	.byte	0x65
	.ascii "_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_\0"
	.long	0x92a7
	.long	0x5c94
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0x8aab
	.uleb128 0x13
	.long	0x8aab
	.byte	0
	.uleb128 0x61
	.ascii "swap<int>\0"
	.byte	0x5
	.byte	0xa6
	.ascii "_ZSt4swapIiEvRT_S1_\0"
	.long	0x5ccd
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0x18d
	.uleb128 0x13
	.long	0x8aab
	.uleb128 0x13
	.long	0x8aab
	.byte	0
	.uleb128 0x37
	.ascii "swap<char, std::char_traits<char>, std::allocator<char> >\0"
	.byte	0x4
	.word	0xab0
	.ascii "_ZSt4swapIcSt11char_traitsIcESaIcEEvRSbIT_T0_T1_ES7_\0"
	.long	0x5d6a
	.uleb128 0x41
	.secrel32	.LASF27
	.long	0xe3
	.uleb128 0x41
	.secrel32	.LASF28
	.long	0x1032
	.uleb128 0x41
	.secrel32	.LASF29
	.long	0x14da
	.uleb128 0x13
	.long	0x85bd
	.uleb128 0x13
	.long	0x85bd
	.byte	0
	.uleb128 0x62
	.ascii "piecewise_construct\0"
	.byte	0x1d
	.byte	0x4f
	.long	0x5d87
	.byte	0x1
	.byte	0
	.uleb128 0xa
	.long	0x100d
	.uleb128 0x63
	.ascii "nothrow\0"
	.byte	0x1e
	.byte	0x65
	.ascii "_ZSt7nothrow\0"
	.long	0x5da8
	.uleb128 0xa
	.long	0x14bb
	.uleb128 0x62
	.ascii "allocator_arg\0"
	.byte	0x29
	.byte	0x29
	.long	0x5dc4
	.byte	0x1
	.byte	0
	.uleb128 0xa
	.long	0x4ec2
	.uleb128 0x64
	.ascii "ignore\0"
	.byte	0x2a
	.word	0x434
	.long	0x5dda
	.byte	0x1
	.byte	0
	.uleb128 0xa
	.long	0x4ed6
	.uleb128 0x2
	.ascii "istream\0"
	.byte	0x35
	.byte	0x85
	.long	0x4578
	.uleb128 0x63
	.ascii "cin\0"
	.byte	0x6
	.byte	0x3c
	.ascii "_ZSt3cin\0"
	.long	0x5ddf
	.uleb128 0x2
	.ascii "ostream\0"
	.byte	0x35
	.byte	0x88
	.long	0x4533
	.uleb128 0x63
	.ascii "cout\0"
	.byte	0x6
	.byte	0x3d
	.ascii "_ZSt4cout\0"
	.long	0x5e02
	.uleb128 0x65
	.ascii "__ioinit\0"
	.byte	0x6
	.byte	0x4a
	.long	0x41d2
	.uleb128 0x64
	.ascii "defer_lock\0"
	.byte	0x31
	.word	0x16b
	.long	0x5e4c
	.byte	0x1
	.byte	0
	.uleb128 0xa
	.long	0x5305
	.uleb128 0x64
	.ascii "try_to_lock\0"
	.byte	0x31
	.word	0x16c
	.long	0x5e67
	.byte	0x1
	.byte	0
	.uleb128 0xa
	.long	0x5317
	.uleb128 0x64
	.ascii "adopt_lock\0"
	.byte	0x31
	.word	0x16d
	.long	0x5e81
	.byte	0x1
	.byte	0
	.uleb128 0xa
	.long	0x532a
	.uleb128 0x66
	.ascii "__once_callable\0"
	.byte	0x31
	.word	0x2c3
	.ascii "_ZSt15__once_callable\0"
	.long	0x716e
	.uleb128 0x66
	.ascii "__once_call\0"
	.byte	0x31
	.word	0x2c4
	.ascii "_ZSt11__once_call\0"
	.long	0x456
	.byte	0
	.uleb128 0x67
	.ascii "setlocale\0"
	.byte	0x9
	.byte	0x50
	.long	0x1c2
	.long	0x5efb
	.uleb128 0x13
	.long	0x18d
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x5f01
	.uleb128 0xa
	.long	0xe3
	.uleb128 0x68
	.ascii "localeconv\0"
	.byte	0x9
	.byte	0x51
	.long	0x3af
	.uleb128 0xd
	.ascii "__gnu_cxx\0"
	.byte	0x36
	.byte	0x45
	.long	0x6e73
	.uleb128 0xe
	.byte	0x12
	.byte	0xaf
	.long	0x74a7
	.uleb128 0xe
	.byte	0x12
	.byte	0xb0
	.long	0x74e0
	.uleb128 0xe
	.byte	0x12
	.byte	0xb1
	.long	0x751c
	.uleb128 0xe
	.byte	0x12
	.byte	0xb2
	.long	0x7549
	.uleb128 0xe
	.byte	0x12
	.byte	0xb3
	.long	0x7589
	.uleb128 0xe
	.byte	0x13
	.byte	0xc9
	.long	0x496
	.uleb128 0xe
	.byte	0x13
	.byte	0xd9
	.long	0x782d
	.uleb128 0xe
	.byte	0x13
	.byte	0xe4
	.long	0x784a
	.uleb128 0xe
	.byte	0x13
	.byte	0xe5
	.long	0x7862
	.uleb128 0xe
	.byte	0x13
	.byte	0xe6
	.long	0x7886
	.uleb128 0xe
	.byte	0x13
	.byte	0xe8
	.long	0x78ab
	.uleb128 0xe
	.byte	0x13
	.byte	0xe9
	.long	0x78c9
	.uleb128 0x24
	.ascii "div\0"
	.byte	0x13
	.byte	0xd6
	.ascii "_ZN9__gnu_cxx3divExx\0"
	.long	0x496
	.long	0x5fac
	.uleb128 0x13
	.long	0x123
	.uleb128 0x13
	.long	0x123
	.byte	0
	.uleb128 0xe
	.byte	0x16
	.byte	0xf8
	.long	0x823d
	.uleb128 0xf
	.byte	0x16
	.word	0x101
	.long	0x825c
	.uleb128 0xf
	.byte	0x16
	.word	0x102
	.long	0x8280
	.uleb128 0x22
	.ascii "__ops\0"
	.byte	0x37
	.byte	0x24
	.uleb128 0xe
	.byte	0x38
	.byte	0x2c
	.long	0x13e9
	.uleb128 0xe
	.byte	0x38
	.byte	0x2d
	.long	0x14c9
	.uleb128 0x29
	.ascii "new_allocator<char>\0"
	.byte	0x1
	.byte	0x38
	.byte	0x3a
	.long	0x6230
	.uleb128 0x2b
	.secrel32	.LASF6
	.byte	0x38
	.byte	0x3d
	.long	0x13e9
	.byte	0x1
	.uleb128 0x2b
	.secrel32	.LASF32
	.byte	0x38
	.byte	0x3f
	.long	0x1c2
	.byte	0x1
	.uleb128 0x31
	.ascii "const_pointer\0"
	.byte	0x38
	.byte	0x40
	.long	0x5efb
	.byte	0x1
	.uleb128 0x2b
	.secrel32	.LASF7
	.byte	0x38
	.byte	0x41
	.long	0x8564
	.byte	0x1
	.uleb128 0x2b
	.secrel32	.LASF8
	.byte	0x38
	.byte	0x42
	.long	0x856a
	.byte	0x1
	.uleb128 0x16
	.secrel32	.LASF35
	.byte	0x38
	.byte	0x4f
	.byte	0x1
	.long	0x604c
	.long	0x6052
	.uleb128 0x12
	.long	0x8570
	.byte	0
	.uleb128 0x16
	.secrel32	.LASF35
	.byte	0x38
	.byte	0x51
	.byte	0x1
	.long	0x6062
	.long	0x606d
	.uleb128 0x12
	.long	0x8570
	.uleb128 0x13
	.long	0x8576
	.byte	0
	.uleb128 0x18
	.ascii "~new_allocator\0"
	.byte	0x38
	.byte	0x56
	.byte	0x1
	.long	0x6088
	.long	0x6093
	.uleb128 0x12
	.long	0x8570
	.uleb128 0x12
	.long	0x18d
	.byte	0
	.uleb128 0x44
	.ascii "address\0"
	.byte	0x38
	.byte	0x59
	.ascii "_ZNK9__gnu_cxx13new_allocatorIcE7addressERc\0"
	.long	0x6002
	.byte	0x1
	.long	0x60d7
	.long	0x60e2
	.uleb128 0x12
	.long	0x857c
	.uleb128 0x13
	.long	0x6024
	.byte	0
	.uleb128 0x44
	.ascii "address\0"
	.byte	0x38
	.byte	0x5d
	.ascii "_ZNK9__gnu_cxx13new_allocatorIcE7addressERKc\0"
	.long	0x600e
	.byte	0x1
	.long	0x6127
	.long	0x6132
	.uleb128 0x12
	.long	0x857c
	.uleb128 0x13
	.long	0x6030
	.byte	0
	.uleb128 0x44
	.ascii "allocate\0"
	.byte	0x38
	.byte	0x63
	.ascii "_ZN9__gnu_cxx13new_allocatorIcE8allocateEyPKv\0"
	.long	0x6002
	.byte	0x1
	.long	0x6179
	.long	0x6189
	.uleb128 0x12
	.long	0x8570
	.uleb128 0x13
	.long	0x5ff6
	.uleb128 0x13
	.long	0x764c
	.byte	0
	.uleb128 0x19
	.ascii "deallocate\0"
	.byte	0x38
	.byte	0x6d
	.ascii "_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcy\0"
	.byte	0x1
	.long	0x61d0
	.long	0x61e0
	.uleb128 0x12
	.long	0x8570
	.uleb128 0x13
	.long	0x6002
	.uleb128 0x13
	.long	0x5ff6
	.byte	0
	.uleb128 0x17
	.secrel32	.LASF16
	.byte	0x38
	.byte	0x71
	.ascii "_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv\0"
	.long	0x5ff6
	.byte	0x1
	.long	0x6220
	.long	0x6226
	.uleb128 0x12
	.long	0x857c
	.byte	0
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0xe3
	.byte	0
	.uleb128 0xa
	.long	0x5fda
	.uleb128 0x7
	.ascii "__numeric_traits_integer<int>\0"
	.byte	0x1
	.byte	0x39
	.byte	0x37
	.long	0x6291
	.uleb128 0x1d
	.secrel32	.LASF36
	.byte	0x39
	.byte	0x3a
	.long	0x858e
	.uleb128 0x1d
	.secrel32	.LASF37
	.byte	0x39
	.byte	0x3b
	.long	0x858e
	.uleb128 0x1d
	.secrel32	.LASF38
	.byte	0x39
	.byte	0x3f
	.long	0x82e4
	.uleb128 0x1d
	.secrel32	.LASF39
	.byte	0x39
	.byte	0x40
	.long	0x858e
	.uleb128 0x41
	.secrel32	.LASF40
	.long	0x18d
	.byte	0
	.uleb128 0x69
	.ascii "__normal_iterator<char*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >\0"
	.byte	0x8
	.byte	0x3a
	.word	0x2c5
	.long	0x66ec
	.uleb128 0x6a
	.secrel32	.LASF41
	.byte	0x3a
	.word	0x2c8
	.long	0x1c2
	.byte	0
	.byte	0x2
	.uleb128 0x6b
	.secrel32	.LASF31
	.byte	0x3a
	.word	0x2d0
	.long	0x4f0a
	.byte	0x1
	.uleb128 0x6b
	.secrel32	.LASF7
	.byte	0x3a
	.word	0x2d1
	.long	0x4f20
	.byte	0x1
	.uleb128 0x6b
	.secrel32	.LASF32
	.byte	0x3a
	.word	0x2d2
	.long	0x4f15
	.byte	0x1
	.uleb128 0x3a
	.secrel32	.LASF42
	.byte	0x3a
	.word	0x2d4
	.byte	0x1
	.long	0x6342
	.long	0x6348
	.uleb128 0x12
	.long	0x8a65
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF42
	.byte	0x3a
	.word	0x2d8
	.byte	0x1
	.long	0x6359
	.long	0x6364
	.uleb128 0x12
	.long	0x8a65
	.uleb128 0x13
	.long	0x8a6b
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF43
	.byte	0x3a
	.word	0x2e5
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcSsEdeEv\0"
	.long	0x6317
	.byte	0x1
	.long	0x63a5
	.long	0x63ab
	.uleb128 0x12
	.long	0x8a76
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF44
	.byte	0x3a
	.word	0x2e9
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcSsEptEv\0"
	.long	0x6324
	.byte	0x1
	.long	0x63ec
	.long	0x63f2
	.uleb128 0x12
	.long	0x8a76
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF45
	.byte	0x3a
	.word	0x2ed
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEv\0"
	.long	0x8a7c
	.byte	0x1
	.long	0x6432
	.long	0x6438
	.uleb128 0x12
	.long	0x8a65
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF45
	.byte	0x3a
	.word	0x2f4
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEi\0"
	.long	0x6291
	.byte	0x1
	.long	0x6478
	.long	0x6483
	.uleb128 0x12
	.long	0x8a65
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF46
	.byte	0x3a
	.word	0x2f9
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEv\0"
	.long	0x8a7c
	.byte	0x1
	.long	0x64c3
	.long	0x64c9
	.uleb128 0x12
	.long	0x8a65
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF46
	.byte	0x3a
	.word	0x300
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEi\0"
	.long	0x6291
	.byte	0x1
	.long	0x6509
	.long	0x6514
	.uleb128 0x12
	.long	0x8a65
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF17
	.byte	0x3a
	.word	0x305
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcSsEixEx\0"
	.long	0x6317
	.byte	0x1
	.long	0x6555
	.long	0x6560
	.uleb128 0x12
	.long	0x8a76
	.uleb128 0x13
	.long	0x630a
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF18
	.byte	0x3a
	.word	0x309
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcSsEpLEx\0"
	.long	0x8a7c
	.byte	0x1
	.long	0x65a0
	.long	0x65ab
	.uleb128 0x12
	.long	0x8a65
	.uleb128 0x13
	.long	0x630a
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF47
	.byte	0x3a
	.word	0x30d
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcSsEplEx\0"
	.long	0x6291
	.byte	0x1
	.long	0x65ec
	.long	0x65f7
	.uleb128 0x12
	.long	0x8a76
	.uleb128 0x13
	.long	0x630a
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF48
	.byte	0x3a
	.word	0x311
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcSsEmIEx\0"
	.long	0x8a7c
	.byte	0x1
	.long	0x6637
	.long	0x6642
	.uleb128 0x12
	.long	0x8a65
	.uleb128 0x13
	.long	0x630a
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF49
	.byte	0x3a
	.word	0x315
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcSsEmiEx\0"
	.long	0x6291
	.byte	0x1
	.long	0x6683
	.long	0x668e
	.uleb128 0x12
	.long	0x8a76
	.uleb128 0x13
	.long	0x630a
	.byte	0
	.uleb128 0x3e
	.ascii "base\0"
	.byte	0x3a
	.word	0x319
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcSsE4baseEv\0"
	.long	0x8a6b
	.byte	0x1
	.long	0x66d3
	.long	0x66d9
	.uleb128 0x12
	.long	0x8a76
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF33
	.long	0x1c2
	.uleb128 0x41
	.secrel32	.LASF50
	.long	0x1572
	.byte	0
	.uleb128 0x69
	.ascii "__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >\0"
	.byte	0x8
	.byte	0x3a
	.word	0x2c5
	.long	0x6b59
	.uleb128 0x6a
	.secrel32	.LASF41
	.byte	0x3a
	.word	0x2c8
	.long	0x5efb
	.byte	0
	.byte	0x2
	.uleb128 0x6b
	.secrel32	.LASF31
	.byte	0x3a
	.word	0x2d0
	.long	0x576a
	.byte	0x1
	.uleb128 0x6b
	.secrel32	.LASF7
	.byte	0x3a
	.word	0x2d1
	.long	0x5780
	.byte	0x1
	.uleb128 0x6b
	.secrel32	.LASF32
	.byte	0x3a
	.word	0x2d2
	.long	0x5775
	.byte	0x1
	.uleb128 0x3a
	.secrel32	.LASF42
	.byte	0x3a
	.word	0x2d4
	.byte	0x1
	.long	0x67a3
	.long	0x67a9
	.uleb128 0x12
	.long	0x8a93
	.byte	0
	.uleb128 0x3b
	.secrel32	.LASF42
	.byte	0x3a
	.word	0x2d8
	.byte	0x1
	.long	0x67ba
	.long	0x67c5
	.uleb128 0x12
	.long	0x8a93
	.uleb128 0x13
	.long	0x8a99
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF43
	.byte	0x3a
	.word	0x2e5
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv\0"
	.long	0x6778
	.byte	0x1
	.long	0x6807
	.long	0x680d
	.uleb128 0x12
	.long	0x8a9f
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF44
	.byte	0x3a
	.word	0x2e9
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEptEv\0"
	.long	0x6785
	.byte	0x1
	.long	0x684f
	.long	0x6855
	.uleb128 0x12
	.long	0x8a9f
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF45
	.byte	0x3a
	.word	0x2ed
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEv\0"
	.long	0x8aa5
	.byte	0x1
	.long	0x6896
	.long	0x689c
	.uleb128 0x12
	.long	0x8a93
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF45
	.byte	0x3a
	.word	0x2f4
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEi\0"
	.long	0x66ec
	.byte	0x1
	.long	0x68dd
	.long	0x68e8
	.uleb128 0x12
	.long	0x8a93
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF46
	.byte	0x3a
	.word	0x2f9
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEv\0"
	.long	0x8aa5
	.byte	0x1
	.long	0x6929
	.long	0x692f
	.uleb128 0x12
	.long	0x8a93
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF46
	.byte	0x3a
	.word	0x300
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEi\0"
	.long	0x66ec
	.byte	0x1
	.long	0x6970
	.long	0x697b
	.uleb128 0x12
	.long	0x8a93
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF17
	.byte	0x3a
	.word	0x305
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEixEx\0"
	.long	0x6778
	.byte	0x1
	.long	0x69bd
	.long	0x69c8
	.uleb128 0x12
	.long	0x8a9f
	.uleb128 0x13
	.long	0x676b
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF18
	.byte	0x3a
	.word	0x309
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcSsEpLEx\0"
	.long	0x8aa5
	.byte	0x1
	.long	0x6a09
	.long	0x6a14
	.uleb128 0x12
	.long	0x8a93
	.uleb128 0x13
	.long	0x676b
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF47
	.byte	0x3a
	.word	0x30d
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEplEx\0"
	.long	0x66ec
	.byte	0x1
	.long	0x6a56
	.long	0x6a61
	.uleb128 0x12
	.long	0x8a9f
	.uleb128 0x13
	.long	0x676b
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF48
	.byte	0x3a
	.word	0x311
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmIEx\0"
	.long	0x8aa5
	.byte	0x1
	.long	0x6aa2
	.long	0x6aad
	.uleb128 0x12
	.long	0x8a93
	.uleb128 0x13
	.long	0x676b
	.byte	0
	.uleb128 0x3d
	.secrel32	.LASF49
	.byte	0x3a
	.word	0x315
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEmiEx\0"
	.long	0x66ec
	.byte	0x1
	.long	0x6aef
	.long	0x6afa
	.uleb128 0x12
	.long	0x8a9f
	.uleb128 0x13
	.long	0x676b
	.byte	0
	.uleb128 0x3e
	.ascii "base\0"
	.byte	0x3a
	.word	0x319
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcSsE4baseEv\0"
	.long	0x8a99
	.byte	0x1
	.long	0x6b40
	.long	0x6b46
	.uleb128 0x12
	.long	0x8a9f
	.byte	0
	.uleb128 0x41
	.secrel32	.LASF33
	.long	0x5efb
	.uleb128 0x41
	.secrel32	.LASF50
	.long	0x1572
	.byte	0
	.uleb128 0x7
	.ascii "__numeric_traits_floating<float>\0"
	.byte	0x1
	.byte	0x39
	.byte	0x64
	.long	0x6bb8
	.uleb128 0x1d
	.secrel32	.LASF51
	.byte	0x39
	.byte	0x67
	.long	0x858e
	.uleb128 0x1d
	.secrel32	.LASF38
	.byte	0x39
	.byte	0x6a
	.long	0x82e4
	.uleb128 0x1d
	.secrel32	.LASF52
	.byte	0x39
	.byte	0x6b
	.long	0x858e
	.uleb128 0x1d
	.secrel32	.LASF53
	.byte	0x39
	.byte	0x6c
	.long	0x858e
	.uleb128 0x41
	.secrel32	.LASF40
	.long	0x43e
	.byte	0
	.uleb128 0x7
	.ascii "__numeric_traits_floating<double>\0"
	.byte	0x1
	.byte	0x39
	.byte	0x64
	.long	0x6c18
	.uleb128 0x1d
	.secrel32	.LASF51
	.byte	0x39
	.byte	0x67
	.long	0x858e
	.uleb128 0x1d
	.secrel32	.LASF38
	.byte	0x39
	.byte	0x6a
	.long	0x82e4
	.uleb128 0x1d
	.secrel32	.LASF52
	.byte	0x39
	.byte	0x6b
	.long	0x858e
	.uleb128 0x1d
	.secrel32	.LASF53
	.byte	0x39
	.byte	0x6c
	.long	0x858e
	.uleb128 0x41
	.secrel32	.LASF40
	.long	0x434
	.byte	0
	.uleb128 0x7
	.ascii "__numeric_traits_floating<long double>\0"
	.byte	0x1
	.byte	0x39
	.byte	0x64
	.long	0x6c7d
	.uleb128 0x1d
	.secrel32	.LASF51
	.byte	0x39
	.byte	0x67
	.long	0x858e
	.uleb128 0x1d
	.secrel32	.LASF38
	.byte	0x39
	.byte	0x6a
	.long	0x82e4
	.uleb128 0x1d
	.secrel32	.LASF52
	.byte	0x39
	.byte	0x6b
	.long	0x858e
	.uleb128 0x1d
	.secrel32	.LASF53
	.byte	0x39
	.byte	0x6c
	.long	0x858e
	.uleb128 0x41
	.secrel32	.LASF40
	.long	0x447
	.byte	0
	.uleb128 0x7
	.ascii "__numeric_traits_integer<long unsigned int>\0"
	.byte	0x1
	.byte	0x39
	.byte	0x37
	.long	0x6ce7
	.uleb128 0x1d
	.secrel32	.LASF36
	.byte	0x39
	.byte	0x3a
	.long	0x85e5
	.uleb128 0x1d
	.secrel32	.LASF37
	.byte	0x39
	.byte	0x3b
	.long	0x85e5
	.uleb128 0x1d
	.secrel32	.LASF38
	.byte	0x39
	.byte	0x3f
	.long	0x82e4
	.uleb128 0x1d
	.secrel32	.LASF39
	.byte	0x39
	.byte	0x40
	.long	0x858e
	.uleb128 0x41
	.secrel32	.LASF40
	.long	0x1fb
	.byte	0
	.uleb128 0x7
	.ascii "__numeric_traits_integer<char>\0"
	.byte	0x1
	.byte	0x39
	.byte	0x37
	.long	0x6d44
	.uleb128 0x1d
	.secrel32	.LASF36
	.byte	0x39
	.byte	0x3a
	.long	0x5f01
	.uleb128 0x1d
	.secrel32	.LASF37
	.byte	0x39
	.byte	0x3b
	.long	0x5f01
	.uleb128 0x1d
	.secrel32	.LASF38
	.byte	0x39
	.byte	0x3f
	.long	0x82e4
	.uleb128 0x1d
	.secrel32	.LASF39
	.byte	0x39
	.byte	0x40
	.long	0x858e
	.uleb128 0x41
	.secrel32	.LASF40
	.long	0xe3
	.byte	0
	.uleb128 0x7
	.ascii "__numeric_traits_integer<short int>\0"
	.byte	0x1
	.byte	0x39
	.byte	0x37
	.long	0x6da6
	.uleb128 0x1d
	.secrel32	.LASF36
	.byte	0x39
	.byte	0x3a
	.long	0x8677
	.uleb128 0x1d
	.secrel32	.LASF37
	.byte	0x39
	.byte	0x3b
	.long	0x8677
	.uleb128 0x1d
	.secrel32	.LASF38
	.byte	0x39
	.byte	0x3f
	.long	0x82e4
	.uleb128 0x1d
	.secrel32	.LASF39
	.byte	0x39
	.byte	0x40
	.long	0x858e
	.uleb128 0x41
	.secrel32	.LASF40
	.long	0x6e82
	.byte	0
	.uleb128 0x7
	.ascii "__numeric_traits_integer<long long int>\0"
	.byte	0x1
	.byte	0x39
	.byte	0x37
	.long	0x6e0c
	.uleb128 0x1d
	.secrel32	.LASF36
	.byte	0x39
	.byte	0x3a
	.long	0x867c
	.uleb128 0x1d
	.secrel32	.LASF37
	.byte	0x39
	.byte	0x3b
	.long	0x867c
	.uleb128 0x1d
	.secrel32	.LASF38
	.byte	0x39
	.byte	0x3f
	.long	0x82e4
	.uleb128 0x1d
	.secrel32	.LASF39
	.byte	0x39
	.byte	0x40
	.long	0x858e
	.uleb128 0x41
	.secrel32	.LASF40
	.long	0x123
	.byte	0
	.uleb128 0xa
	.long	0x6291
	.uleb128 0x45
	.ascii "_Lock_policy\0"
	.byte	0x4
	.byte	0x3b
	.byte	0x31
	.long	0x6e4a
	.uleb128 0x46
	.ascii "_S_single\0"
	.sleb128 0
	.uleb128 0x46
	.ascii "_S_mutex\0"
	.sleb128 1
	.uleb128 0x46
	.ascii "_S_atomic\0"
	.sleb128 2
	.byte	0
	.uleb128 0x5f
	.ascii "__default_lock_policy\0"
	.byte	0x3b
	.byte	0x35
	.long	0x6e68
	.byte	0x2
	.uleb128 0xa
	.long	0x6e11
	.uleb128 0xa
	.long	0x66ec
	.byte	0
	.uleb128 0x4
	.byte	0x1
	.byte	0x6
	.ascii "signed char\0"
	.uleb128 0x4
	.byte	0x2
	.byte	0x5
	.ascii "short int\0"
	.uleb128 0x5
	.ascii "float_t\0"
	.byte	0x3c
	.word	0x143
	.long	0x43e
	.uleb128 0x5
	.ascii "double_t\0"
	.byte	0x3c
	.word	0x144
	.long	0x434
	.uleb128 0x7
	.ascii "_SETJMP_FLOAT128\0"
	.byte	0x10
	.byte	0x3d
	.byte	0x70
	.long	0x6ed7
	.uleb128 0x8
	.ascii "Part\0"
	.byte	0x3d
	.byte	0x71
	.long	0x6ed7
	.byte	0
	.byte	0
	.uleb128 0x6c
	.long	0x109
	.long	0x6ee7
	.uleb128 0x6d
	.long	0x1ef
	.byte	0x1
	.byte	0
	.uleb128 0x2
	.ascii "SETJMP_FLOAT128\0"
	.byte	0x3d
	.byte	0x72
	.long	0x6eb0
	.uleb128 0x2
	.ascii "_JBTYPE\0"
	.byte	0x3d
	.byte	0x75
	.long	0x6ee7
	.uleb128 0x2
	.ascii "jmp_buf\0"
	.byte	0x3d
	.byte	0x93
	.long	0x6f1c
	.uleb128 0x6c
	.long	0x6eb0
	.long	0x6f2c
	.uleb128 0x6d
	.long	0x1ef
	.byte	0xf
	.byte	0
	.uleb128 0x6e
	.ascii "longjmp\0"
	.byte	0x3d
	.byte	0xc1
	.long	0x6f46
	.uleb128 0x13
	.long	0x6f46
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x6efe
	.uleb128 0x2
	.ascii "sig_atomic_t\0"
	.byte	0x3e
	.byte	0x12
	.long	0x18d
	.uleb128 0x2
	.ascii "__p_sig_fn_t\0"
	.byte	0x3e
	.byte	0x30
	.long	0x6f74
	.uleb128 0x6
	.byte	0x8
	.long	0x6f7a
	.uleb128 0x6f
	.long	0x6f85
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x67
	.ascii "signal\0"
	.byte	0x3e
	.byte	0x3c
	.long	0x6f60
	.long	0x6fa2
	.uleb128 0x13
	.long	0x18d
	.uleb128 0x13
	.long	0x6f60
	.byte	0
	.uleb128 0x67
	.ascii "raise\0"
	.byte	0x3e
	.byte	0x3d
	.long	0x18d
	.long	0x6fb9
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0xb
	.byte	0x20
	.byte	0x3f
	.word	0x1a7
	.ascii "11max_align_t\0"
	.long	0x7001
	.uleb128 0xc
	.ascii "__max_align_ll\0"
	.byte	0x3f
	.word	0x1a8
	.long	0x123
	.byte	0
	.uleb128 0xc
	.ascii "__max_align_ld\0"
	.byte	0x3f
	.word	0x1a9
	.long	0x447
	.byte	0x10
	.byte	0
	.uleb128 0x5
	.ascii "max_align_t\0"
	.byte	0x3f
	.word	0x1aa
	.long	0x6fb9
	.uleb128 0x70
	.ascii "clearerr\0"
	.byte	0xb
	.word	0x1ab
	.long	0x702c
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x52d
	.uleb128 0x71
	.ascii "fclose\0"
	.byte	0xb
	.word	0x1ac
	.long	0x18d
	.long	0x704b
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "feof\0"
	.byte	0xb
	.word	0x1b3
	.long	0x18d
	.long	0x7062
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "ferror\0"
	.byte	0xb
	.word	0x1b4
	.long	0x18d
	.long	0x707b
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "fflush\0"
	.byte	0xb
	.word	0x1b5
	.long	0x18d
	.long	0x7094
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "fgetc\0"
	.byte	0xb
	.word	0x1b6
	.long	0x18d
	.long	0x70ac
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "fgetpos\0"
	.byte	0xb
	.word	0x1b8
	.long	0x18d
	.long	0x70cb
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x70cb
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x539
	.uleb128 0x71
	.ascii "fgets\0"
	.byte	0xb
	.word	0x1ba
	.long	0x1c2
	.long	0x70f3
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x18d
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "fopen\0"
	.byte	0xb
	.word	0x1c1
	.long	0x702c
	.long	0x7110
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x26
	.ascii "fprintf\0"
	.byte	0xb
	.word	0x11d
	.ascii "_Z7fprintfP6_iobufPKcz\0"
	.long	0x18d
	.long	0x7147
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x72
	.byte	0
	.uleb128 0x71
	.ascii "fread\0"
	.byte	0xb
	.word	0x1c6
	.long	0xfa
	.long	0x716e
	.uleb128 0x13
	.long	0x716e
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x73
	.byte	0x8
	.uleb128 0x71
	.ascii "freopen\0"
	.byte	0xb
	.word	0x1c7
	.long	0x702c
	.long	0x7194
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x24
	.ascii "fscanf\0"
	.byte	0xb
	.byte	0xf9
	.ascii "_Z6fscanfP6_iobufPKcz\0"
	.long	0x18d
	.long	0x71c8
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x72
	.byte	0
	.uleb128 0x71
	.ascii "fseek\0"
	.byte	0xb
	.word	0x1ca
	.long	0x18d
	.long	0x71ea
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x194
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "fsetpos\0"
	.byte	0xb
	.word	0x1c8
	.long	0x18d
	.long	0x7209
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x7209
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x720f
	.uleb128 0xa
	.long	0x539
	.uleb128 0x71
	.ascii "ftell\0"
	.byte	0xb
	.word	0x1d8
	.long	0x194
	.long	0x722c
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "getc\0"
	.byte	0xb
	.word	0x1e7
	.long	0x18d
	.long	0x7243
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x74
	.ascii "getchar\0"
	.byte	0xb
	.word	0x1e8
	.long	0x18d
	.uleb128 0x71
	.ascii "gets\0"
	.byte	0xb
	.word	0x1ea
	.long	0x1c2
	.long	0x726a
	.uleb128 0x13
	.long	0x1c2
	.byte	0
	.uleb128 0x70
	.ascii "perror\0"
	.byte	0xa
	.word	0x222
	.long	0x727f
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x26
	.ascii "printf\0"
	.byte	0xb
	.word	0x128
	.ascii "_Z6printfPKcz\0"
	.long	0x18d
	.long	0x72a7
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x72
	.byte	0
	.uleb128 0x71
	.ascii "remove\0"
	.byte	0xb
	.word	0x1fc
	.long	0x18d
	.long	0x72c0
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x71
	.ascii "rename\0"
	.byte	0xb
	.word	0x1fd
	.long	0x18d
	.long	0x72de
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x70
	.ascii "rewind\0"
	.byte	0xb
	.word	0x203
	.long	0x72f3
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x24
	.ascii "scanf\0"
	.byte	0xb
	.byte	0xee
	.ascii "_Z5scanfPKcz\0"
	.long	0x18d
	.long	0x7318
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x72
	.byte	0
	.uleb128 0x70
	.ascii "setbuf\0"
	.byte	0xb
	.word	0x205
	.long	0x7332
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x1c2
	.byte	0
	.uleb128 0x71
	.ascii "setvbuf\0"
	.byte	0xb
	.word	0x209
	.long	0x18d
	.long	0x735b
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x18d
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x26
	.ascii "sprintf\0"
	.byte	0xb
	.word	0x133
	.ascii "_Z7sprintfPcPKcz\0"
	.long	0x18d
	.long	0x738c
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x72
	.byte	0
	.uleb128 0x24
	.ascii "sscanf\0"
	.byte	0xb
	.byte	0xe3
	.ascii "_Z6sscanfPKcS0_z\0"
	.long	0x18d
	.long	0x73bb
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x72
	.byte	0
	.uleb128 0x74
	.ascii "tmpfile\0"
	.byte	0xb
	.word	0x20c
	.long	0x702c
	.uleb128 0x71
	.ascii "tmpnam\0"
	.byte	0xb
	.word	0x20d
	.long	0x1c2
	.long	0x73e4
	.uleb128 0x13
	.long	0x1c2
	.byte	0
	.uleb128 0x71
	.ascii "ungetc\0"
	.byte	0xb
	.word	0x20e
	.long	0x18d
	.long	0x7402
	.uleb128 0x13
	.long	0x18d
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x26
	.ascii "vfprintf\0"
	.byte	0xb
	.word	0x13e
	.ascii "_Z8vfprintfP6_iobufPKcPc\0"
	.long	0x18d
	.long	0x7440
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x26
	.ascii "vprintf\0"
	.byte	0xb
	.word	0x145
	.ascii "_Z7vprintfPKcPc\0"
	.long	0x18d
	.long	0x746f
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x26
	.ascii "vsprintf\0"
	.byte	0xb
	.word	0x14c
	.ascii "_Z8vsprintfPcPKcS_\0"
	.long	0x18d
	.long	0x74a7
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x26
	.ascii "snprintf\0"
	.byte	0xb
	.word	0x153
	.ascii "_Z8snprintfPcyPKcz\0"
	.long	0x18d
	.long	0x74e0
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x72
	.byte	0
	.uleb128 0x26
	.ascii "vfscanf\0"
	.byte	0xb
	.word	0x113
	.ascii "_Z7vfscanfP6_iobufPKcPc\0"
	.long	0x18d
	.long	0x751c
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x26
	.ascii "vscanf\0"
	.byte	0xb
	.word	0x10c
	.ascii "_Z6vscanfPKcPc\0"
	.long	0x18d
	.long	0x7549
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x26
	.ascii "vsnprintf\0"
	.byte	0xb
	.word	0x15e
	.ascii "_Z9vsnprintfPcyPKcS_\0"
	.long	0x18d
	.long	0x7589
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x26
	.ascii "vsscanf\0"
	.byte	0xb
	.word	0x105
	.ascii "_Z7vsscanfPKcS0_Pc\0"
	.long	0x18d
	.long	0x75c0
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x71
	.ascii "atexit\0"
	.byte	0xa
	.word	0x154
	.long	0x18d
	.long	0x75d9
	.uleb128 0x13
	.long	0x456
	.byte	0
	.uleb128 0x71
	.ascii "atof\0"
	.byte	0xa
	.word	0x157
	.long	0x434
	.long	0x75f0
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x71
	.ascii "atoi\0"
	.byte	0xa
	.word	0x15a
	.long	0x18d
	.long	0x7607
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x71
	.ascii "atol\0"
	.byte	0xa
	.word	0x15c
	.long	0x194
	.long	0x761e
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x71
	.ascii "bsearch\0"
	.byte	0xa
	.word	0x160
	.long	0x716e
	.long	0x764c
	.uleb128 0x13
	.long	0x764c
	.uleb128 0x13
	.long	0x764c
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0x7653
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x7652
	.uleb128 0x75
	.uleb128 0x6
	.byte	0x8
	.long	0x7659
	.uleb128 0x76
	.long	0x18d
	.long	0x766d
	.uleb128 0x13
	.long	0x764c
	.uleb128 0x13
	.long	0x764c
	.byte	0
	.uleb128 0x71
	.ascii "div\0"
	.byte	0xa
	.word	0x166
	.long	0x3ef
	.long	0x7688
	.uleb128 0x13
	.long	0x18d
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "getenv\0"
	.byte	0xa
	.word	0x167
	.long	0x1c2
	.long	0x76a1
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x71
	.ascii "ldiv\0"
	.byte	0xa
	.word	0x171
	.long	0x426
	.long	0x76bd
	.uleb128 0x13
	.long	0x194
	.uleb128 0x13
	.long	0x194
	.byte	0
	.uleb128 0x71
	.ascii "mblen\0"
	.byte	0xa
	.word	0x173
	.long	0x18d
	.long	0x76da
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x71
	.ascii "mbstowcs\0"
	.byte	0xa
	.word	0x17b
	.long	0xfa
	.long	0x76ff
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x71
	.ascii "mbtowc\0"
	.byte	0xa
	.word	0x179
	.long	0x18d
	.long	0x7722
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x70
	.ascii "qsort\0"
	.byte	0xa
	.word	0x161
	.long	0x7745
	.uleb128 0x13
	.long	0x716e
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0x7653
	.byte	0
	.uleb128 0x74
	.ascii "rand\0"
	.byte	0xa
	.word	0x17d
	.long	0x18d
	.uleb128 0x70
	.ascii "srand\0"
	.byte	0xa
	.word	0x17f
	.long	0x7766
	.uleb128 0x13
	.long	0x1df
	.byte	0
	.uleb128 0x71
	.ascii "strtod\0"
	.byte	0xa
	.word	0x194
	.long	0x434
	.long	0x7784
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x7784
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1c2
	.uleb128 0x71
	.ascii "strtol\0"
	.byte	0xa
	.word	0x1a5
	.long	0x194
	.long	0x77ad
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x7784
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "strtoul\0"
	.byte	0xa
	.word	0x1a7
	.long	0x1fb
	.long	0x77d1
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x7784
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "system\0"
	.byte	0xa
	.word	0x1ab
	.long	0x18d
	.long	0x77ea
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x71
	.ascii "wcstombs\0"
	.byte	0xa
	.word	0x1b0
	.long	0xfa
	.long	0x780f
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x71
	.ascii "wctomb\0"
	.byte	0xa
	.word	0x1ae
	.long	0x18d
	.long	0x782d
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x1ce
	.byte	0
	.uleb128 0x71
	.ascii "lldiv\0"
	.byte	0xa
	.word	0x274
	.long	0x496
	.long	0x784a
	.uleb128 0x13
	.long	0x123
	.uleb128 0x13
	.long	0x123
	.byte	0
	.uleb128 0x71
	.ascii "atoll\0"
	.byte	0xa
	.word	0x27f
	.long	0x123
	.long	0x7862
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x71
	.ascii "strtoll\0"
	.byte	0xa
	.word	0x27b
	.long	0x123
	.long	0x7886
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x7784
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "strtoull\0"
	.byte	0xa
	.word	0x27c
	.long	0x109
	.long	0x78ab
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x7784
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "strtof\0"
	.byte	0xa
	.word	0x195
	.long	0x43e
	.long	0x78c9
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x7784
	.byte	0
	.uleb128 0x71
	.ascii "strtold\0"
	.byte	0xa
	.word	0x197
	.long	0x447
	.long	0x78e8
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x7784
	.byte	0
	.uleb128 0x67
	.ascii "strcoll\0"
	.byte	0x40
	.byte	0x3e
	.long	0x18d
	.long	0x7906
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x67
	.ascii "strerror\0"
	.byte	0x40
	.byte	0x48
	.long	0x1c2
	.long	0x7920
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x67
	.ascii "strtok\0"
	.byte	0x40
	.byte	0x57
	.long	0x1c2
	.long	0x793d
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x67
	.ascii "strxfrm\0"
	.byte	0x40
	.byte	0x5e
	.long	0xfa
	.long	0x7960
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x2
	.ascii "clock_t\0"
	.byte	0x41
	.byte	0x33
	.long	0x194
	.uleb128 0x7
	.ascii "tm\0"
	.byte	0x24
	.byte	0x41
	.byte	0x58
	.long	0x7a09
	.uleb128 0x8
	.ascii "tm_sec\0"
	.byte	0x41
	.byte	0x59
	.long	0x18d
	.byte	0
	.uleb128 0x8
	.ascii "tm_min\0"
	.byte	0x41
	.byte	0x5a
	.long	0x18d
	.byte	0x4
	.uleb128 0x8
	.ascii "tm_hour\0"
	.byte	0x41
	.byte	0x5b
	.long	0x18d
	.byte	0x8
	.uleb128 0x8
	.ascii "tm_mday\0"
	.byte	0x41
	.byte	0x5c
	.long	0x18d
	.byte	0xc
	.uleb128 0x8
	.ascii "tm_mon\0"
	.byte	0x41
	.byte	0x5d
	.long	0x18d
	.byte	0x10
	.uleb128 0x8
	.ascii "tm_year\0"
	.byte	0x41
	.byte	0x5e
	.long	0x18d
	.byte	0x14
	.uleb128 0x8
	.ascii "tm_wday\0"
	.byte	0x41
	.byte	0x5f
	.long	0x18d
	.byte	0x18
	.uleb128 0x8
	.ascii "tm_yday\0"
	.byte	0x41
	.byte	0x60
	.long	0x18d
	.byte	0x1c
	.uleb128 0x8
	.ascii "tm_isdst\0"
	.byte	0x41
	.byte	0x61
	.long	0x18d
	.byte	0x20
	.byte	0
	.uleb128 0x68
	.ascii "clock\0"
	.byte	0x41
	.byte	0x72
	.long	0x7960
	.uleb128 0x67
	.ascii "difftime\0"
	.byte	0x41
	.byte	0xa7
	.long	0x434
	.long	0x7a35
	.uleb128 0x13
	.long	0x1b3
	.uleb128 0x13
	.long	0x1b3
	.byte	0
	.uleb128 0x67
	.ascii "mktime\0"
	.byte	0x41
	.byte	0xdc
	.long	0x1b3
	.long	0x7a4d
	.uleb128 0x13
	.long	0x7a4d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x796f
	.uleb128 0x67
	.ascii "time\0"
	.byte	0x41
	.byte	0xde
	.long	0x1b3
	.long	0x7a69
	.uleb128 0x13
	.long	0x7a69
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1b3
	.uleb128 0x67
	.ascii "asctime\0"
	.byte	0x41
	.byte	0x70
	.long	0x1c2
	.long	0x7a88
	.uleb128 0x13
	.long	0x7a88
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x7a8e
	.uleb128 0xa
	.long	0x796f
	.uleb128 0x67
	.ascii "ctime\0"
	.byte	0x41
	.byte	0xa8
	.long	0x1c2
	.long	0x7aaa
	.uleb128 0x13
	.long	0x7aaa
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x7ab0
	.uleb128 0xa
	.long	0x1b3
	.uleb128 0x67
	.ascii "gmtime\0"
	.byte	0x41
	.byte	0xa9
	.long	0x7a4d
	.long	0x7acd
	.uleb128 0x13
	.long	0x7aaa
	.byte	0
	.uleb128 0x67
	.ascii "localtime\0"
	.byte	0x41
	.byte	0xaa
	.long	0x7a4d
	.long	0x7ae8
	.uleb128 0x13
	.long	0x7aaa
	.byte	0
	.uleb128 0x67
	.ascii "strftime\0"
	.byte	0x41
	.byte	0x76
	.long	0xfa
	.long	0x7b11
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x7a88
	.byte	0
	.uleb128 0x5
	.ascii "mbstate_t\0"
	.byte	0x42
	.word	0x3a4
	.long	0x18d
	.uleb128 0x71
	.ascii "btowc\0"
	.byte	0x42
	.word	0x3a7
	.long	0x157
	.long	0x7b3b
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "fgetwc\0"
	.byte	0xb
	.word	0x303
	.long	0x157
	.long	0x7b54
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "fgetws\0"
	.byte	0xb
	.word	0x30c
	.long	0x1c8
	.long	0x7b77
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x18d
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "fputwc\0"
	.byte	0xb
	.word	0x305
	.long	0x157
	.long	0x7b95
	.uleb128 0x13
	.long	0x1ce
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "fputws\0"
	.byte	0xb
	.word	0x30d
	.long	0x18d
	.long	0x7bb3
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "fwide\0"
	.byte	0x42
	.word	0x3b6
	.long	0x18d
	.long	0x7bd0
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "fwprintf\0"
	.byte	0xb
	.word	0x29d
	.long	0x18d
	.long	0x7bf1
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x72
	.byte	0
	.uleb128 0x71
	.ascii "fwscanf\0"
	.byte	0xb
	.word	0x279
	.long	0x18d
	.long	0x7c11
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x72
	.byte	0
	.uleb128 0x71
	.ascii "getwc\0"
	.byte	0xb
	.word	0x307
	.long	0x157
	.long	0x7c29
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x74
	.ascii "getwchar\0"
	.byte	0xb
	.word	0x308
	.long	0x157
	.uleb128 0x71
	.ascii "mbrlen\0"
	.byte	0x42
	.word	0x3a8
	.long	0xfa
	.long	0x7c5d
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0x7c5d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x7b11
	.uleb128 0x71
	.ascii "mbrtowc\0"
	.byte	0x42
	.word	0x3a9
	.long	0xfa
	.long	0x7c8c
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0x7c5d
	.byte	0
	.uleb128 0x71
	.ascii "mbsinit\0"
	.byte	0x42
	.word	0x3b7
	.long	0x18d
	.long	0x7ca6
	.uleb128 0x13
	.long	0x7ca6
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x7cac
	.uleb128 0xa
	.long	0x7b11
	.uleb128 0x71
	.ascii "mbsrtowcs\0"
	.byte	0x42
	.word	0x3aa
	.long	0xfa
	.long	0x7cdc
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x7cdc
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0x7c5d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x5efb
	.uleb128 0x71
	.ascii "putwc\0"
	.byte	0xb
	.word	0x309
	.long	0x157
	.long	0x7cff
	.uleb128 0x13
	.long	0x1ce
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "putwchar\0"
	.byte	0xb
	.word	0x30a
	.long	0x157
	.long	0x7d1a
	.uleb128 0x13
	.long	0x1ce
	.byte	0
	.uleb128 0x77
	.ascii "swprintf\0"
	.byte	0x43
	.byte	0x3a
	.long	0x18d
	.long	0x7d3a
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x72
	.byte	0
	.uleb128 0x71
	.ascii "swscanf\0"
	.byte	0xb
	.word	0x263
	.long	0x18d
	.long	0x7d5a
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x72
	.byte	0
	.uleb128 0x71
	.ascii "ungetwc\0"
	.byte	0xb
	.word	0x30b
	.long	0x157
	.long	0x7d79
	.uleb128 0x13
	.long	0x157
	.uleb128 0x13
	.long	0x702c
	.byte	0
	.uleb128 0x71
	.ascii "vfwprintf\0"
	.byte	0xb
	.word	0x2b3
	.long	0x18d
	.long	0x7d9f
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x71
	.ascii "vfwscanf\0"
	.byte	0xb
	.word	0x293
	.long	0x18d
	.long	0x7dc4
	.uleb128 0x13
	.long	0x702c
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x77
	.ascii "vswprintf\0"
	.byte	0x43
	.byte	0x2f
	.long	0x18d
	.long	0x7de9
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x71
	.ascii "vswscanf\0"
	.byte	0xb
	.word	0x285
	.long	0x18d
	.long	0x7e0e
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x71
	.ascii "vwprintf\0"
	.byte	0xb
	.word	0x2ba
	.long	0x18d
	.long	0x7e2e
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x71
	.ascii "vwscanf\0"
	.byte	0xb
	.word	0x28c
	.long	0x18d
	.long	0x7e4d
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xcb
	.byte	0
	.uleb128 0x71
	.ascii "wcrtomb\0"
	.byte	0x42
	.word	0x3ab
	.long	0xfa
	.long	0x7e71
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x1ce
	.uleb128 0x13
	.long	0x7c5d
	.byte	0
	.uleb128 0x67
	.ascii "wcscat\0"
	.byte	0x40
	.byte	0x7a
	.long	0x1c8
	.long	0x7e8e
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x45d
	.byte	0
	.uleb128 0x67
	.ascii "wcscmp\0"
	.byte	0x40
	.byte	0x7c
	.long	0x18d
	.long	0x7eab
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x45d
	.byte	0
	.uleb128 0x67
	.ascii "wcscoll\0"
	.byte	0x40
	.byte	0x99
	.long	0x18d
	.long	0x7ec9
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x45d
	.byte	0
	.uleb128 0x67
	.ascii "wcscpy\0"
	.byte	0x40
	.byte	0x7d
	.long	0x1c8
	.long	0x7ee6
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x45d
	.byte	0
	.uleb128 0x67
	.ascii "wcscspn\0"
	.byte	0x40
	.byte	0x7e
	.long	0xfa
	.long	0x7f04
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x45d
	.byte	0
	.uleb128 0x67
	.ascii "wcsftime\0"
	.byte	0x41
	.byte	0x91
	.long	0xfa
	.long	0x7f2d
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x7a88
	.byte	0
	.uleb128 0x67
	.ascii "wcslen\0"
	.byte	0x40
	.byte	0x7f
	.long	0xfa
	.long	0x7f45
	.uleb128 0x13
	.long	0x45d
	.byte	0
	.uleb128 0x67
	.ascii "wcsncat\0"
	.byte	0x40
	.byte	0x81
	.long	0x1c8
	.long	0x7f68
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x67
	.ascii "wcsncmp\0"
	.byte	0x40
	.byte	0x82
	.long	0x18d
	.long	0x7f8b
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x67
	.ascii "wcsncpy\0"
	.byte	0x40
	.byte	0x83
	.long	0x1c8
	.long	0x7fae
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x71
	.ascii "wcsrtombs\0"
	.byte	0x42
	.word	0x3ac
	.long	0xfa
	.long	0x7fd9
	.uleb128 0x13
	.long	0x1c2
	.uleb128 0x13
	.long	0x7fd9
	.uleb128 0x13
	.long	0xfa
	.uleb128 0x13
	.long	0x7c5d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x45d
	.uleb128 0x67
	.ascii "wcsspn\0"
	.byte	0x40
	.byte	0x87
	.long	0xfa
	.long	0x7ffc
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x45d
	.byte	0
	.uleb128 0x71
	.ascii "wcstod\0"
	.byte	0xa
	.word	0x1e2
	.long	0x434
	.long	0x801a
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x801a
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x1c8
	.uleb128 0x71
	.ascii "wcstof\0"
	.byte	0xa
	.word	0x1e3
	.long	0x43e
	.long	0x803e
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x801a
	.byte	0
	.uleb128 0x67
	.ascii "wcstok\0"
	.byte	0x40
	.byte	0x89
	.long	0x1c8
	.long	0x805b
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x45d
	.byte	0
	.uleb128 0x71
	.ascii "wcstol\0"
	.byte	0xa
	.word	0x1e9
	.long	0x194
	.long	0x807e
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x801a
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "wcstoul\0"
	.byte	0xa
	.word	0x1eb
	.long	0x1fb
	.long	0x80a2
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x801a
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x67
	.ascii "wcsxfrm\0"
	.byte	0x40
	.byte	0x97
	.long	0xfa
	.long	0x80c5
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x71
	.ascii "wctob\0"
	.byte	0x42
	.word	0x3ad
	.long	0x18d
	.long	0x80dd
	.uleb128 0x13
	.long	0x157
	.byte	0
	.uleb128 0x71
	.ascii "wmemcmp\0"
	.byte	0x42
	.word	0x3b2
	.long	0x18d
	.long	0x8101
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x71
	.ascii "wmemcpy\0"
	.byte	0x42
	.word	0x3b3
	.long	0x1c8
	.long	0x8125
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x71
	.ascii "wmemmove\0"
	.byte	0x42
	.word	0x3b5
	.long	0x1c8
	.long	0x814a
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x71
	.ascii "wmemset\0"
	.byte	0x42
	.word	0x3b0
	.long	0x1c8
	.long	0x816e
	.uleb128 0x13
	.long	0x1c8
	.uleb128 0x13
	.long	0x1ce
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x71
	.ascii "wprintf\0"
	.byte	0xb
	.word	0x2a8
	.long	0x18d
	.long	0x8189
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x72
	.byte	0
	.uleb128 0x71
	.ascii "wscanf\0"
	.byte	0xb
	.word	0x26e
	.long	0x18d
	.long	0x81a3
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x72
	.byte	0
	.uleb128 0x67
	.ascii "wcschr\0"
	.byte	0x40
	.byte	0x7b
	.long	0x1c8
	.long	0x81c0
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x1ce
	.byte	0
	.uleb128 0x67
	.ascii "wcspbrk\0"
	.byte	0x40
	.byte	0x85
	.long	0x1c8
	.long	0x81de
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x45d
	.byte	0
	.uleb128 0x67
	.ascii "wcsrchr\0"
	.byte	0x40
	.byte	0x86
	.long	0x1c8
	.long	0x81fc
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x1ce
	.byte	0
	.uleb128 0x67
	.ascii "wcsstr\0"
	.byte	0x40
	.byte	0x88
	.long	0x1c8
	.long	0x8219
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x45d
	.byte	0
	.uleb128 0x71
	.ascii "wmemchr\0"
	.byte	0x42
	.word	0x3b1
	.long	0x1c8
	.long	0x823d
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x1ce
	.uleb128 0x13
	.long	0xfa
	.byte	0
	.uleb128 0x71
	.ascii "wcstold\0"
	.byte	0xa
	.word	0x1e6
	.long	0x447
	.long	0x825c
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x801a
	.byte	0
	.uleb128 0x71
	.ascii "wcstoll\0"
	.byte	0x42
	.word	0x3b8
	.long	0x123
	.long	0x8280
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x801a
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "wcstoull\0"
	.byte	0x42
	.word	0x3b9
	.long	0x109
	.long	0x82a5
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x801a
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xa0d
	.uleb128 0x6
	.byte	0x8
	.long	0xd61
	.uleb128 0x78
	.byte	0x8
	.long	0xd61
	.uleb128 0x79
	.ascii "decltype(nullptr)\0"
	.uleb128 0x7a
	.byte	0x8
	.long	0xa0d
	.uleb128 0x78
	.byte	0x8
	.long	0xa0d
	.uleb128 0x4
	.byte	0x1
	.byte	0x2
	.ascii "bool\0"
	.uleb128 0x6
	.byte	0x8
	.long	0xd8a
	.uleb128 0xa
	.long	0x82d6
	.uleb128 0x6
	.byte	0x8
	.long	0xe54
	.uleb128 0x6
	.byte	0x8
	.long	0xf1c
	.uleb128 0xa
	.long	0x109
	.uleb128 0x6
	.byte	0x8
	.long	0x1008
	.uleb128 0xd
	.ascii "__gnu_debug\0"
	.byte	0x2f
	.byte	0x37
	.long	0x831b
	.uleb128 0x5d
	.byte	0x2f
	.byte	0x38
	.long	0x1027
	.byte	0
	.uleb128 0x78
	.byte	0x8
	.long	0x104c
	.uleb128 0x78
	.byte	0x8
	.long	0x10a6
	.uleb128 0x6
	.byte	0x8
	.long	0x10a6
	.uleb128 0x6
	.byte	0x8
	.long	0x104c
	.uleb128 0x78
	.byte	0x8
	.long	0x12f1
	.uleb128 0x2
	.ascii "int8_t\0"
	.byte	0x44
	.byte	0x23
	.long	0x6e73
	.uleb128 0x2
	.ascii "uint8_t\0"
	.byte	0x44
	.byte	0x24
	.long	0x3b5
	.uleb128 0x2
	.ascii "int16_t\0"
	.byte	0x44
	.byte	0x25
	.long	0x6e82
	.uleb128 0x2
	.ascii "uint16_t\0"
	.byte	0x44
	.byte	0x26
	.long	0x166
	.uleb128 0x2
	.ascii "int32_t\0"
	.byte	0x44
	.byte	0x27
	.long	0x18d
	.uleb128 0x2
	.ascii "uint32_t\0"
	.byte	0x44
	.byte	0x28
	.long	0x1df
	.uleb128 0x2
	.ascii "int64_t\0"
	.byte	0x44
	.byte	0x29
	.long	0x123
	.uleb128 0x2
	.ascii "uint64_t\0"
	.byte	0x44
	.byte	0x2a
	.long	0x109
	.uleb128 0x2
	.ascii "int_least8_t\0"
	.byte	0x44
	.byte	0x2d
	.long	0x6e73
	.uleb128 0x2
	.ascii "uint_least8_t\0"
	.byte	0x44
	.byte	0x2e
	.long	0x3b5
	.uleb128 0x2
	.ascii "int_least16_t\0"
	.byte	0x44
	.byte	0x2f
	.long	0x6e82
	.uleb128 0x2
	.ascii "uint_least16_t\0"
	.byte	0x44
	.byte	0x30
	.long	0x166
	.uleb128 0x2
	.ascii "int_least32_t\0"
	.byte	0x44
	.byte	0x31
	.long	0x18d
	.uleb128 0x2
	.ascii "uint_least32_t\0"
	.byte	0x44
	.byte	0x32
	.long	0x1df
	.uleb128 0x2
	.ascii "int_least64_t\0"
	.byte	0x44
	.byte	0x33
	.long	0x123
	.uleb128 0x2
	.ascii "uint_least64_t\0"
	.byte	0x44
	.byte	0x34
	.long	0x109
	.uleb128 0x2
	.ascii "int_fast8_t\0"
	.byte	0x44
	.byte	0x3a
	.long	0x6e73
	.uleb128 0x2
	.ascii "uint_fast8_t\0"
	.byte	0x44
	.byte	0x3b
	.long	0x3b5
	.uleb128 0x2
	.ascii "int_fast16_t\0"
	.byte	0x44
	.byte	0x3c
	.long	0x6e82
	.uleb128 0x2
	.ascii "uint_fast16_t\0"
	.byte	0x44
	.byte	0x3d
	.long	0x166
	.uleb128 0x2
	.ascii "int_fast32_t\0"
	.byte	0x44
	.byte	0x3e
	.long	0x18d
	.uleb128 0x2
	.ascii "uint_fast32_t\0"
	.byte	0x44
	.byte	0x3f
	.long	0x1df
	.uleb128 0x2
	.ascii "int_fast64_t\0"
	.byte	0x44
	.byte	0x40
	.long	0x123
	.uleb128 0x2
	.ascii "uint_fast64_t\0"
	.byte	0x44
	.byte	0x41
	.long	0x109
	.uleb128 0x2
	.ascii "intmax_t\0"
	.byte	0x44
	.byte	0x44
	.long	0x123
	.uleb128 0x2
	.ascii "uintmax_t\0"
	.byte	0x44
	.byte	0x45
	.long	0x109
	.uleb128 0x4
	.byte	0x2
	.byte	0x10
	.ascii "char16_t\0"
	.uleb128 0x4
	.byte	0x4
	.byte	0x10
	.ascii "char32_t\0"
	.uleb128 0x5
	.ascii "pthread_mutex_t\0"
	.byte	0x45
	.word	0x10d
	.long	0x716e
	.uleb128 0x2
	.ascii "_Atomic_word\0"
	.byte	0x46
	.byte	0x20
	.long	0x18d
	.uleb128 0x78
	.byte	0x8
	.long	0xe3
	.uleb128 0x78
	.byte	0x8
	.long	0x5f01
	.uleb128 0x6
	.byte	0x8
	.long	0x5fda
	.uleb128 0x78
	.byte	0x8
	.long	0x6230
	.uleb128 0x6
	.byte	0x8
	.long	0x6230
	.uleb128 0x6
	.byte	0x8
	.long	0x14da
	.uleb128 0x78
	.byte	0x8
	.long	0x156d
	.uleb128 0xa
	.long	0x18d
	.uleb128 0x6
	.byte	0x8
	.long	0x15bc
	.uleb128 0x6
	.byte	0x8
	.long	0x3e1d
	.uleb128 0x6
	.byte	0x8
	.long	0x1572
	.uleb128 0x6
	.byte	0x8
	.long	0x16fa
	.uleb128 0x78
	.byte	0x8
	.long	0x16fa
	.uleb128 0x78
	.byte	0x8
	.long	0x3e1d
	.uleb128 0x7a
	.byte	0x8
	.long	0x1572
	.uleb128 0x78
	.byte	0x8
	.long	0x1572
	.uleb128 0x6
	.byte	0x8
	.long	0x3e22
	.uleb128 0x6
	.byte	0x8
	.long	0x3f7d
	.uleb128 0x6c
	.long	0x109
	.long	0x85da
	.uleb128 0x7b
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x3cf4
	.uleb128 0xa
	.long	0x5efb
	.uleb128 0xa
	.long	0x1fb
	.uleb128 0x78
	.byte	0x8
	.long	0x41c4
	.uleb128 0x6
	.byte	0x8
	.long	0x41d2
	.uleb128 0x2
	.ascii "wctrans_t\0"
	.byte	0x47
	.byte	0xa6
	.long	0x1ce
	.uleb128 0x67
	.ascii "iswctype\0"
	.byte	0x48
	.byte	0xac
	.long	0x18d
	.long	0x8626
	.uleb128 0x13
	.long	0x157
	.uleb128 0x13
	.long	0x17c
	.byte	0
	.uleb128 0x67
	.ascii "towctrans\0"
	.byte	0x47
	.byte	0xa7
	.long	0x157
	.long	0x8646
	.uleb128 0x13
	.long	0x157
	.uleb128 0x13
	.long	0x85f6
	.byte	0
	.uleb128 0x67
	.ascii "wctrans\0"
	.byte	0x47
	.byte	0xa8
	.long	0x85f6
	.long	0x865f
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0x67
	.ascii "wctype\0"
	.byte	0x47
	.byte	0xa9
	.long	0x17c
	.long	0x8677
	.uleb128 0x13
	.long	0x5efb
	.byte	0
	.uleb128 0xa
	.long	0x6e82
	.uleb128 0xa
	.long	0x123
	.uleb128 0x4
	.byte	0x8
	.byte	0x3
	.ascii "complex float\0"
	.uleb128 0x4
	.byte	0x10
	.byte	0x3
	.ascii "complex double\0"
	.uleb128 0x4
	.byte	0x20
	.byte	0x3
	.ascii "complex long double\0"
	.uleb128 0x2
	.ascii "fexcept_t\0"
	.byte	0x49
	.byte	0x2d
	.long	0x166
	.uleb128 0x7c
	.byte	0x20
	.byte	0x49
	.byte	0x34
	.ascii "6fenv_t\0"
	.long	0x87de
	.uleb128 0x8
	.ascii "__control_word\0"
	.byte	0x49
	.byte	0x35
	.long	0x166
	.byte	0
	.uleb128 0x8
	.ascii "__unused0\0"
	.byte	0x49
	.byte	0x36
	.long	0x166
	.byte	0x2
	.uleb128 0x8
	.ascii "__status_word\0"
	.byte	0x49
	.byte	0x37
	.long	0x166
	.byte	0x4
	.uleb128 0x8
	.ascii "__unused1\0"
	.byte	0x49
	.byte	0x38
	.long	0x166
	.byte	0x6
	.uleb128 0x8
	.ascii "__tag_word\0"
	.byte	0x49
	.byte	0x39
	.long	0x166
	.byte	0x8
	.uleb128 0x8
	.ascii "__unused2\0"
	.byte	0x49
	.byte	0x3a
	.long	0x166
	.byte	0xa
	.uleb128 0x8
	.ascii "__ip_offset\0"
	.byte	0x49
	.byte	0x3b
	.long	0x1df
	.byte	0xc
	.uleb128 0x8
	.ascii "__ip_selector\0"
	.byte	0x49
	.byte	0x3c
	.long	0x166
	.byte	0x10
	.uleb128 0x8
	.ascii "__opcode\0"
	.byte	0x49
	.byte	0x3d
	.long	0x166
	.byte	0x12
	.uleb128 0x8
	.ascii "__data_offset\0"
	.byte	0x49
	.byte	0x3e
	.long	0x1df
	.byte	0x14
	.uleb128 0x8
	.ascii "__data_selector\0"
	.byte	0x49
	.byte	0x3f
	.long	0x166
	.byte	0x18
	.uleb128 0x8
	.ascii "__unused3\0"
	.byte	0x49
	.byte	0x40
	.long	0x166
	.byte	0x1a
	.uleb128 0x8
	.ascii "__mxcsr\0"
	.byte	0x49
	.byte	0x41
	.long	0x1df
	.byte	0x1c
	.byte	0
	.uleb128 0x2
	.ascii "fenv_t\0"
	.byte	0x49
	.byte	0x42
	.long	0x86cc
	.uleb128 0x67
	.ascii "feclearexcept\0"
	.byte	0x49
	.byte	0x59
	.long	0x18d
	.long	0x880b
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x67
	.ascii "fegetexceptflag\0"
	.byte	0x49
	.byte	0x5a
	.long	0x18d
	.long	0x8831
	.uleb128 0x13
	.long	0x8831
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x86bb
	.uleb128 0x67
	.ascii "feraiseexcept\0"
	.byte	0x49
	.byte	0x5b
	.long	0x18d
	.long	0x8856
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x67
	.ascii "fesetexceptflag\0"
	.byte	0x49
	.byte	0x5c
	.long	0x18d
	.long	0x887c
	.uleb128 0x13
	.long	0x887c
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x8882
	.uleb128 0xa
	.long	0x86bb
	.uleb128 0x67
	.ascii "fetestexcept\0"
	.byte	0x49
	.byte	0x5d
	.long	0x18d
	.long	0x88a5
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x68
	.ascii "fegetround\0"
	.byte	0x49
	.byte	0x61
	.long	0x18d
	.uleb128 0x67
	.ascii "fesetround\0"
	.byte	0x49
	.byte	0x62
	.long	0x18d
	.long	0x88d3
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x67
	.ascii "fegetenv\0"
	.byte	0x49
	.byte	0x66
	.long	0x18d
	.long	0x88ed
	.uleb128 0x13
	.long	0x88ed
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x87de
	.uleb128 0x67
	.ascii "feholdexcept\0"
	.byte	0x49
	.byte	0x69
	.long	0x18d
	.long	0x8911
	.uleb128 0x13
	.long	0x88ed
	.byte	0
	.uleb128 0x67
	.ascii "fesetenv\0"
	.byte	0x49
	.byte	0x67
	.long	0x18d
	.long	0x892b
	.uleb128 0x13
	.long	0x892b
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x8931
	.uleb128 0xa
	.long	0x87de
	.uleb128 0x67
	.ascii "feupdateenv\0"
	.byte	0x49
	.byte	0x68
	.long	0x18d
	.long	0x8953
	.uleb128 0x13
	.long	0x892b
	.byte	0
	.uleb128 0x7c
	.byte	0x10
	.byte	0x4a
	.byte	0x14
	.ascii "9imaxdiv_t\0"
	.long	0x8980
	.uleb128 0x8
	.ascii "quot\0"
	.byte	0x4a
	.byte	0x15
	.long	0x84ff
	.byte	0
	.uleb128 0x8
	.ascii "rem\0"
	.byte	0x4a
	.byte	0x16
	.long	0x84ff
	.byte	0x8
	.byte	0
	.uleb128 0x2
	.ascii "imaxdiv_t\0"
	.byte	0x4a
	.byte	0x17
	.long	0x8953
	.uleb128 0x71
	.ascii "imaxdiv\0"
	.byte	0x4a
	.word	0x11c
	.long	0x8980
	.long	0x89b0
	.uleb128 0x13
	.long	0x84ff
	.uleb128 0x13
	.long	0x84ff
	.byte	0
	.uleb128 0x71
	.ascii "strtoimax\0"
	.byte	0x4a
	.word	0x120
	.long	0x84ff
	.long	0x89d6
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x7784
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "strtoumax\0"
	.byte	0x4a
	.word	0x122
	.long	0x850f
	.long	0x89fc
	.uleb128 0x13
	.long	0x5efb
	.uleb128 0x13
	.long	0x7784
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "wcstoimax\0"
	.byte	0x4a
	.word	0x125
	.long	0x84ff
	.long	0x8a22
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x801a
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x71
	.ascii "wcstoumax\0"
	.byte	0x4a
	.word	0x127
	.long	0x850f
	.long	0x8a48
	.uleb128 0x13
	.long	0x45d
	.uleb128 0x13
	.long	0x801a
	.uleb128 0x13
	.long	0x18d
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x4784
	.uleb128 0x6c
	.long	0x1df
	.long	0x8a5f
	.uleb128 0x7d
	.long	0x1ef
	.word	0x26f
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x47cc
	.uleb128 0x6
	.byte	0x8
	.long	0x6291
	.uleb128 0x78
	.byte	0x8
	.long	0x8a71
	.uleb128 0xa
	.long	0x1c2
	.uleb128 0x6
	.byte	0x8
	.long	0x6e0c
	.uleb128 0x78
	.byte	0x8
	.long	0x6291
	.uleb128 0x6
	.byte	0x8
	.long	0x510e
	.uleb128 0x6
	.byte	0x8
	.long	0x5204
	.uleb128 0xa
	.long	0x84ff
	.uleb128 0x6
	.byte	0x8
	.long	0x66ec
	.uleb128 0x78
	.byte	0x8
	.long	0x85e0
	.uleb128 0x6
	.byte	0x8
	.long	0x6e6d
	.uleb128 0x78
	.byte	0x8
	.long	0x66ec
	.uleb128 0x78
	.byte	0x8
	.long	0x18d
	.uleb128 0x2
	.ascii "WORD\0"
	.byte	0x4b
	.byte	0x7b
	.long	0x166
	.uleb128 0x2
	.ascii "DWORD\0"
	.byte	0x4b
	.byte	0x7c
	.long	0x1fb
	.uleb128 0x5d
	.byte	0x3
	.byte	0x4
	.long	0x547
	.uleb128 0x6
	.byte	0x8
	.long	0x58aa
	.uleb128 0x7e
	.long	0x58ba
	.quad	.LFB1117
	.quad	.LFE1117-.LFB1117
	.uleb128 0x1
	.byte	0x9c
	.long	0x8b0f
	.uleb128 0x7f
	.ascii "__a\0"
	.byte	0x1
	.byte	0x4b
	.long	0x3f90
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7f
	.ascii "__b\0"
	.byte	0x1
	.byte	0x4b
	.long	0x3f90
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7e
	.long	0x58f4
	.quad	.LFB1118
	.quad	.LFE1118-.LFB1118
	.uleb128 0x1
	.byte	0x9c
	.long	0x8b47
	.uleb128 0x7f
	.ascii "__a\0"
	.byte	0x1
	.byte	0x4f
	.long	0x3f90
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7f
	.ascii "__b\0"
	.byte	0x1
	.byte	0x4f
	.long	0x3f90
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x7e
	.long	0x5928
	.quad	.LFB1120
	.quad	.LFE1120-.LFB1120
	.uleb128 0x1
	.byte	0x9c
	.long	0x8b71
	.uleb128 0x7f
	.ascii "__a\0"
	.byte	0x1
	.byte	0x57
	.long	0x3f90
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x78
	.byte	0x8
	.long	0x5997
	.uleb128 0x78
	.byte	0x8
	.long	0x3f90
	.uleb128 0x80
	.long	0x595b
	.quad	.LFB1121
	.quad	.LFE1121-.LFB1121
	.uleb128 0x1
	.byte	0x9c
	.long	0x8bb6
	.uleb128 0x7f
	.ascii "__a\0"
	.byte	0x1
	.byte	0x5b
	.long	0x8bb6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7f
	.ascii "__b\0"
	.byte	0x1
	.byte	0x5b
	.long	0x3f90
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xa
	.long	0x8b77
	.uleb128 0x80
	.long	0x599c
	.quad	.LFB1122
	.quad	.LFE1122-.LFB1122
	.uleb128 0x1
	.byte	0x9c
	.long	0x8bf4
	.uleb128 0x7f
	.ascii "__a\0"
	.byte	0x1
	.byte	0x5f
	.long	0x8bf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7f
	.ascii "__b\0"
	.byte	0x1
	.byte	0x5f
	.long	0x3f90
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xa
	.long	0x8b77
	.uleb128 0x7e
	.long	0x59d8
	.quad	.LFB1125
	.quad	.LFE1125-.LFB1125
	.uleb128 0x1
	.byte	0x9c
	.long	0x8c31
	.uleb128 0x7f
	.ascii "__a\0"
	.byte	0x1
	.byte	0x77
	.long	0x40b7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7f
	.ascii "__b\0"
	.byte	0x1
	.byte	0x77
	.long	0x40b7
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x41c4
	.uleb128 0x81
	.long	0x4279
	.quad	.LFB1149
	.quad	.LFE1149-.LFB1149
	.uleb128 0x1
	.byte	0x9c
	.long	0x8c57
	.long	0x8cb2
	.uleb128 0x82
	.ascii "this\0"
	.long	0x8cb2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x83
	.ascii "__fmtfl\0"
	.byte	0x1
	.word	0x253
	.long	0x4268
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x83
	.ascii "__mask\0"
	.byte	0x1
	.word	0x253
	.long	0x4268
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x84
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.uleb128 0x85
	.ascii "__old\0"
	.byte	0x1
	.word	0x255
	.long	0x4268
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x8c31
	.uleb128 0x80
	.long	0x5a0c
	.quad	.LFB1179
	.quad	.LFE1179-.LFB1179
	.uleb128 0x1
	.byte	0x9c
	.long	0x8ce7
	.uleb128 0x83
	.ascii "__base\0"
	.byte	0x1
	.word	0x3be
	.long	0x8ce7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xa
	.long	0x85ea
	.uleb128 0x7e
	.long	0x5a3b
	.quad	.LFB5815
	.quad	.LFE5815-.LFB5815
	.uleb128 0x1
	.byte	0x9c
	.long	0x8d16
	.uleb128 0x7f
	.ascii "__n\0"
	.byte	0x2
	.byte	0xc3
	.long	0x18d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x86
	.ascii "setcolor\0"
	.byte	0x3
	.byte	0xe
	.ascii "_Z8setcolorii\0"
	.quad	.LFB9834
	.quad	.LFE9834-.LFB9834
	.uleb128 0x1
	.byte	0x9c
	.long	0x8d8d
	.uleb128 0x7f
	.ascii "ForgC\0"
	.byte	0x3
	.byte	0xe
	.long	0x18d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7f
	.ascii "BackC\0"
	.byte	0x3
	.byte	0xe
	.long	0x18d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x84
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.uleb128 0x87
	.ascii "wColor\0"
	.byte	0x3
	.byte	0xf
	.long	0x8ab1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -34
	.byte	0
	.byte	0
	.uleb128 0x88
	.ascii "qu\0"
	.byte	0x3
	.byte	0x13
	.ascii "_Z2qudd\0"
	.long	0x434
	.quad	.LFB9835
	.quad	.LFE9835-.LFB9835
	.uleb128 0x1
	.byte	0x9c
	.long	0x8e18
	.uleb128 0x7f
	.ascii "x\0"
	.byte	0x3
	.byte	0x13
	.long	0x434
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7f
	.ascii "y\0"
	.byte	0x3
	.byte	0x13
	.long	0x434
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x84
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.uleb128 0x87
	.ascii "wei\0"
	.byte	0x3
	.byte	0x14
	.long	0x18d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x87
	.ascii "t\0"
	.byte	0x3
	.byte	0x15
	.long	0x18d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x87
	.ascii "a\0"
	.byte	0x3
	.byte	0x1a
	.long	0x434
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x87
	.ascii "b\0"
	.byte	0x3
	.byte	0x1b
	.long	0x18d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x89
	.ascii "main\0"
	.byte	0x3
	.byte	0x1f
	.long	0x18d
	.quad	.LFB9836
	.quad	.LFE9836-.LFB9836
	.uleb128 0x1
	.byte	0x9c
	.long	0x9225
	.uleb128 0x7f
	.ascii "argc\0"
	.byte	0x3
	.byte	0x1f
	.long	0x18d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7f
	.ascii "argv\0"
	.byte	0x3
	.byte	0x1f
	.long	0x7784
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x84
	.quad	.LBB5
	.quad	.LBE5-.LBB5
	.uleb128 0x87
	.ascii "canshu\0"
	.byte	0x3
	.byte	0x21
	.long	0x3f82
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x87
	.ascii "com\0"
	.byte	0x3
	.byte	0x41
	.long	0x5a6d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -2736
	.uleb128 0x87
	.ascii "command\0"
	.byte	0x3
	.byte	0x42
	.long	0x9225
	.uleb128 0x3
	.byte	0x91
	.sleb128 -2816
	.uleb128 0x87
	.ascii "fin\0"
	.byte	0x3
	.byte	0x43
	.long	0x5aea
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1904
	.uleb128 0x87
	.ascii "wai\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x87
	.ascii "z\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x87
	.ascii "zw\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x87
	.ascii "wz\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x87
	.ascii "wc\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x87
	.ascii "chou\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x87
	.ascii "l\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x87
	.ascii "gw\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x87
	.ascii "weijin\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x87
	.ascii "gaoji\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x87
	.ascii "ziwai\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x87
	.ascii "s\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x87
	.ascii "f\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0x87
	.ascii "bf\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x87
	.ascii "zigai\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x8a
	.ascii "c\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x87
	.ascii "sec\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x87
	.ascii "cols\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x87
	.ascii "lines\0"
	.byte	0x3
	.byte	0x46
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -220
	.uleb128 0x87
	.ascii "xbd\0"
	.byte	0x3
	.byte	0x47
	.long	0x82d6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -221
	.uleb128 0x87
	.ascii "w\0"
	.byte	0x3
	.byte	0x47
	.long	0x82d6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -222
	.uleb128 0x87
	.ascii "dbd\0"
	.byte	0x3
	.byte	0x47
	.long	0x82d6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -223
	.uleb128 0x87
	.ascii "x\0"
	.byte	0x3
	.byte	0x48
	.long	0xe3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x87
	.ascii "name\0"
	.byte	0x3
	.byte	0x48
	.long	0x9235
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1424
	.uleb128 0x87
	.ascii "xbdg\0"
	.byte	0x3
	.byte	0x49
	.long	0x434
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x87
	.ascii "sb\0"
	.byte	0x3
	.byte	0x49
	.long	0x434
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x87
	.ascii "dbdg\0"
	.byte	0x3
	.byte	0x49
	.long	0x434
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.uleb128 0x87
	.ascii "zgf\0"
	.byte	0x3
	.byte	0x49
	.long	0x434
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x87
	.ascii "gai\0"
	.byte	0x3
	.byte	0x49
	.long	0x434
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x87
	.ascii "temp\0"
	.byte	0x3
	.byte	0x4a
	.long	0x3f82
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.uleb128 0x87
	.ascii "kaishichou\0"
	.byte	0x3
	.byte	0x6f
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x87
	.ascii "kaishilun\0"
	.byte	0x3
	.byte	0x70
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x8b
	.secrel32	.Ldebug_ranges0+0
	.long	0x90d4
	.uleb128 0x87
	.ascii "fout\0"
	.byte	0x3
	.byte	0x2b
	.long	0x5b40
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1424
	.byte	0
	.uleb128 0x8b
	.secrel32	.Ldebug_ranges0+0x30
	.long	0x90f0
	.uleb128 0x87
	.ascii "fout\0"
	.byte	0x3
	.byte	0x3a
	.long	0x5b40
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1424
	.byte	0
	.uleb128 0x8c
	.quad	.LBB13
	.quad	.LBE13-.LBB13
	.long	0x9115
	.uleb128 0x87
	.ascii "i\0"
	.byte	0x3
	.byte	0x72
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x8b
	.secrel32	.Ldebug_ranges0+0x60
	.long	0x9131
	.uleb128 0x87
	.ascii "pian\0"
	.byte	0x3
	.byte	0x85
	.long	0x5b40
	.uleb128 0x3
	.byte	0x91
	.sleb128 -2368
	.byte	0
	.uleb128 0x8b
	.secrel32	.Ldebug_ranges0+0x90
	.long	0x916e
	.uleb128 0x87
	.ascii "fout\0"
	.byte	0x3
	.byte	0xb8
	.long	0x5b40
	.uleb128 0x3
	.byte	0x91
	.sleb128 -2368
	.uleb128 0x84
	.quad	.LBB19
	.quad	.LBE19-.LBB19
	.uleb128 0x87
	.ascii "i\0"
	.byte	0x3
	.byte	0xcc
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.byte	0
	.uleb128 0x8c
	.quad	.LBB21
	.quad	.LBE21-.LBB21
	.long	0x9193
	.uleb128 0x87
	.ascii "i\0"
	.byte	0x3
	.byte	0xde
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0x8c
	.quad	.LBB22
	.quad	.LBE22-.LBB22
	.long	0x91b9
	.uleb128 0x85
	.ascii "i\0"
	.byte	0x3
	.word	0x136
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.byte	0
	.uleb128 0x8c
	.quad	.LBB23
	.quad	.LBE23-.LBB23
	.long	0x9201
	.uleb128 0x85
	.ascii "i\0"
	.byte	0x3
	.word	0x13a
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x84
	.quad	.LBB25
	.quad	.LBE25-.LBB25
	.uleb128 0x85
	.ascii "j\0"
	.byte	0x3
	.word	0x13b
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.byte	0
	.byte	0
	.uleb128 0x84
	.quad	.LBB26
	.quad	.LBE26-.LBB26
	.uleb128 0x85
	.ascii "i\0"
	.byte	0x3
	.word	0x158
	.long	0x18d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6c
	.long	0xe3
	.long	0x9235
	.uleb128 0x6d
	.long	0x1ef
	.byte	0x45
	.byte	0
	.uleb128 0x6c
	.long	0xe3
	.long	0x9246
	.uleb128 0x7d
	.long	0x1ef
	.word	0x478
	.byte	0
	.uleb128 0x80
	.long	0x5b96
	.quad	.LFB10190
	.quad	.LFE10190-.LFB10190
	.uleb128 0x1
	.byte	0x9c
	.long	0x92a2
	.uleb128 0x41
	.secrel32	.LASF27
	.long	0xe3
	.uleb128 0x41
	.secrel32	.LASF28
	.long	0x1032
	.uleb128 0x41
	.secrel32	.LASF29
	.long	0x14da
	.uleb128 0x83
	.ascii "__lhs\0"
	.byte	0x4
	.word	0x9ea
	.long	0x92a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x83
	.ascii "__rhs\0"
	.byte	0x4
	.word	0x9eb
	.long	0x5efb
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xa
	.long	0x85b1
	.uleb128 0x7a
	.byte	0x8
	.long	0x57b5
	.uleb128 0x7e
	.long	0x5c3d
	.quad	.LFB10232
	.quad	.LFE10232-.LFB10232
	.uleb128 0x1
	.byte	0x9c
	.long	0x92e0
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0x8aab
	.uleb128 0x7f
	.ascii "__t\0"
	.byte	0x5
	.byte	0x65
	.long	0x92e0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xa
	.long	0x8aab
	.uleb128 0x80
	.long	0x5c94
	.quad	.LFB10231
	.quad	.LFE10231-.LFB10231
	.uleb128 0x1
	.byte	0x9c
	.long	0x934b
	.uleb128 0x1f
	.ascii "_Tp\0"
	.long	0x18d
	.uleb128 0x7f
	.ascii "__a\0"
	.byte	0x5
	.byte	0xa6
	.long	0x934b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7f
	.ascii "__b\0"
	.byte	0x5
	.byte	0xa6
	.long	0x9350
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x84
	.quad	.LBB32
	.quad	.LBE32-.LBB32
	.uleb128 0x87
	.ascii "__tmp\0"
	.byte	0x5
	.byte	0xaf
	.long	0x18d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0xa
	.long	0x8aab
	.uleb128 0xa
	.long	0x8aab
	.uleb128 0x80
	.long	0x5ccd
	.quad	.LFB10233
	.quad	.LFE10233-.LFB10233
	.uleb128 0x1
	.byte	0x9c
	.long	0x93b1
	.uleb128 0x41
	.secrel32	.LASF27
	.long	0xe3
	.uleb128 0x41
	.secrel32	.LASF28
	.long	0x1032
	.uleb128 0x41
	.secrel32	.LASF29
	.long	0x14da
	.uleb128 0x83
	.ascii "__lhs\0"
	.byte	0x4
	.word	0xab0
	.long	0x93b1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x83
	.ascii "__rhs\0"
	.byte	0x4
	.word	0xab1
	.long	0x93b6
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xa
	.long	0x85bd
	.uleb128 0xa
	.long	0x85bd
	.uleb128 0x8d
	.ascii "__tcf_0\0"
	.quad	.LFB10852
	.quad	.LFE10852-.LFB10852
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x8d
	.ascii "__tcf_1\0"
	.quad	.LFB10853
	.quad	.LFE10853-.LFB10853
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x8d
	.ascii "__tcf_2\0"
	.quad	.LFB10854
	.quad	.LFE10854-.LFB10854
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x8e
	.ascii "__static_initialization_and_destruction_0\0"
	.quad	.LFB10851
	.quad	.LFE10851-.LFB10851
	.uleb128 0x1
	.byte	0x9c
	.long	0x9484
	.uleb128 0x83
	.ascii "__initialize_p\0"
	.byte	0x3
	.word	0x16d
	.long	0x18d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x83
	.ascii "__priority\0"
	.byte	0x3
	.word	0x16d
	.long	0x18d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x8d
	.ascii "_GLOBAL__sub_I_a\0"
	.quad	.LFB10885
	.quad	.LFE10885-.LFB10885
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x8f
	.ascii "a\0"
	.byte	0x3
	.byte	0x5
	.long	0x94bd
	.uleb128 0x9
	.byte	0x3
	.quad	a
	.uleb128 0x6
	.byte	0x8
	.long	0x3f82
	.uleb128 0x8f
	.ascii "wa\0"
	.byte	0x3
	.byte	0x6
	.long	0x94bd
	.uleb128 0x9
	.byte	0x3
	.quad	wa
	.uleb128 0x8f
	.ascii "san\0"
	.byte	0x3
	.byte	0x7
	.long	0x94bd
	.uleb128 0x9
	.byte	0x3
	.quad	san
	.uleb128 0x8f
	.ascii "ben\0"
	.byte	0x3
	.byte	0x8
	.long	0x3f82
	.uleb128 0x9
	.byte	0x3
	.quad	ben
	.uleb128 0x8f
	.ascii "file\0"
	.byte	0x3
	.byte	0x9
	.long	0x3f82
	.uleb128 0x9
	.byte	0x3
	.quad	file
	.uleb128 0x8f
	.ascii "ch\0"
	.byte	0x3
	.byte	0xa
	.long	0x94bd
	.uleb128 0x9
	.byte	0x3
	.quad	ch
	.uleb128 0x8f
	.ascii "showj\0"
	.byte	0x3
	.byte	0xb
	.long	0x94bd
	.uleb128 0x9
	.byte	0x3
	.quad	showj
	.uleb128 0x8f
	.ascii "showt\0"
	.byte	0x3
	.byte	0xc
	.long	0x1d9
	.uleb128 0x9
	.byte	0x3
	.quad	showt
	.uleb128 0x8f
	.ascii "type\0"
	.byte	0x3
	.byte	0xd
	.long	0x1d9
	.uleb128 0x9
	.byte	0x3
	.quad	type
	.uleb128 0x90
	.long	0x6e4a
	.uleb128 0x9
	.byte	0x3
	.quad	_ZN9__gnu_cxxL21__default_lock_policyE
	.uleb128 0x90
	.long	0x5d6a
	.uleb128 0x9
	.byte	0x3
	.quad	_ZStL19piecewise_construct
	.uleb128 0x90
	.long	0x5dad
	.uleb128 0x9
	.byte	0x3
	.quad	_ZStL13allocator_arg
	.uleb128 0x90
	.long	0x5dc9
	.uleb128 0x9
	.byte	0x3
	.quad	_ZStL6ignore
	.uleb128 0x90
	.long	0x5e27
	.uleb128 0x9
	.byte	0x3
	.quad	_ZStL8__ioinit
	.uleb128 0x90
	.long	0x5e37
	.uleb128 0x9
	.byte	0x3
	.quad	_ZStL10defer_lock
	.uleb128 0x90
	.long	0x5e51
	.uleb128 0x9
	.byte	0x3
	.quad	_ZStL11try_to_lock
	.uleb128 0x90
	.long	0x5e6c
	.uleb128 0x9
	.byte	0x3
	.quad	_ZStL10adopt_lock
	.uleb128 0x90
	.long	0x562a
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL13error_collateE
	.uleb128 0x90
	.long	0x5645
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL11error_ctypeE
	.uleb128 0x90
	.long	0x5659
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL12error_escapeE
	.uleb128 0x90
	.long	0x566e
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL13error_backrefE
	.uleb128 0x90
	.long	0x5684
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL11error_brackE
	.uleb128 0x90
	.long	0x5698
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL11error_parenE
	.uleb128 0x90
	.long	0x56ac
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL11error_braceE
	.uleb128 0x90
	.long	0x56c0
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL14error_badbraceE
	.uleb128 0x90
	.long	0x56d7
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL11error_rangeE
	.uleb128 0x90
	.long	0x56eb
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL11error_spaceE
	.uleb128 0x90
	.long	0x56ff
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL15error_badrepeatE
	.uleb128 0x90
	.long	0x5717
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL16error_complexityE
	.uleb128 0x90
	.long	0x5730
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt15regex_constantsL11error_stackE
	.uleb128 0x90
	.long	0x47aa
	.uleb128 0x9
	.byte	0x3
	.quad	_ZNSt8__detailL19_S_invalid_state_idE
	.uleb128 0x91
	.long	0xdb6
	.ascii "_ZNSt17integral_constantIbLb0EE5valueE\0"
	.byte	0
	.uleb128 0x91
	.long	0xe7f
	.ascii "_ZNSt17integral_constantIbLb1EE5valueE\0"
	.byte	0x1
	.uleb128 0x91
	.long	0xf59
	.ascii "_ZNSt17integral_constantIyLy0EE5valueE\0"
	.byte	0
	.uleb128 0x92
	.long	0x625b
	.ascii "_ZN9__gnu_cxx24__numeric_traits_integerIiE5__minE\0"
	.sleb128 -2147483648
	.uleb128 0x93
	.long	0x6266
	.ascii "_ZN9__gnu_cxx24__numeric_traits_integerIiE5__maxE\0"
	.long	0x7fffffff
	.uleb128 0x91
	.long	0x6ba3
	.ascii "_ZN9__gnu_cxx25__numeric_traits_floatingIfE16__max_exponent10E\0"
	.byte	0x26
	.uleb128 0x94
	.long	0x6c03
	.ascii "_ZN9__gnu_cxx25__numeric_traits_floatingIdE16__max_exponent10E\0"
	.word	0x134
	.uleb128 0x94
	.long	0x6c68
	.ascii "_ZN9__gnu_cxx25__numeric_traits_floatingIeE16__max_exponent10E\0"
	.word	0x1344
	.uleb128 0x91
	.long	0x6cd2
	.ascii "_ZN9__gnu_cxx24__numeric_traits_integerImE8__digitsE\0"
	.byte	0x20
	.uleb128 0x91
	.long	0x6d19
	.ascii "_ZN9__gnu_cxx24__numeric_traits_integerIcE5__maxE\0"
	.byte	0x7f
	.uleb128 0x92
	.long	0x6d70
	.ascii "_ZN9__gnu_cxx24__numeric_traits_integerIsE5__minE\0"
	.sleb128 -32768
	.uleb128 0x94
	.long	0x6d7b
	.ascii "_ZN9__gnu_cxx24__numeric_traits_integerIsE5__maxE\0"
	.word	0x7fff
	.uleb128 0x92
	.long	0x6dd6
	.ascii "_ZN9__gnu_cxx24__numeric_traits_integerIxE5__minE\0"
	.sleb128 -9223372036854775808
	.uleb128 0x95
	.long	0x6de1
	.ascii "_ZN9__gnu_cxx24__numeric_traits_integerIxE5__maxE\0"
	.quad	0x7fffffffffffffff
	.uleb128 0x91
	.long	0x46d5
	.ascii "_ZNSt17integral_constantIyLy2EE5valueE\0"
	.byte	0x2
	.uleb128 0x94
	.long	0x4889
	.ascii "_ZNSt23mersenne_twister_engineIjLy32ELy624ELy397ELy31ELj2567483615ELy11ELj4294967295ELy7ELj2636928640ELy15ELj4022730752ELy18ELj1812433253EE10state_sizeE\0"
	.word	0x270
	.uleb128 0x91
	.long	0x522b
	.ascii "_ZNSt5ratioILx1ELx1000000000EE3numE\0"
	.byte	0x1
	.uleb128 0x93
	.long	0x5238
	.ascii "_ZNSt5ratioILx1ELx1000000000EE3denE\0"
	.long	0x3b9aca00
	.uleb128 0x91
	.long	0x5069
	.ascii "_ZNSt17integral_constantIxLx1EE5valueE\0"
	.byte	0x1
	.uleb128 0x93
	.long	0x514a
	.ascii "_ZNSt17integral_constantIxLx1000000000EE5valueE\0"
	.long	0x3b9aca00
	.uleb128 0x93
	.long	0x5284
	.ascii "_ZNSt5ratioILx1000000000ELx1EE3numE\0"
	.long	0x3b9aca00
	.uleb128 0x91
	.long	0x5294
	.ascii "_ZNSt5ratioILx1000000000ELx1EE3denE\0"
	.byte	0x1
	.uleb128 0x91
	.long	0x52d4
	.ascii "_ZNSt5ratioILx1ELx1EE3numE\0"
	.byte	0x1
	.uleb128 0x91
	.long	0x52e1
	.ascii "_ZNSt5ratioILx1ELx1EE3denE\0"
	.byte	0x1
	.uleb128 0x91
	.long	0x57fb
	.ascii "_ZNSt17integral_constantIyLy8EE5valueE\0"
	.byte	0x8
	.byte	0
	.section	.debug_abbrev,"dr"
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1b
	.uleb128 0x8
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.uleb128 0x2119
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x15
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x8
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x8
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x2
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x1c
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0x1c
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x32
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x33
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x34
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x35
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x36
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x37
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x38
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x39
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x3a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x40
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x41
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x42
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1e
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x43
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x44
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x45
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x46
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x47
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x48
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x49
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x4a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4b
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x4c
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x4d
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x4e
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x4f
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x50
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x51
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x52
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x53
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x54
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x55
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x56
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x57
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x58
	.uleb128 0x3a
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x59
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5a
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x5b
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x5c
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1e
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x5d
	.uleb128 0x3a
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5e
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6d
	.uleb128 0x19
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5f
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x60
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x61
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x62
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x63
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x64
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x65
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x66
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x67
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x68
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x69
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6a
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6b
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6c
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6d
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6f
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x70
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x71
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x72
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x73
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x74
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x75
	.uleb128 0x26
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x76
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x77
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x78
	.uleb128 0x10
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x79
	.uleb128 0x3b
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x7a
	.uleb128 0x42
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7b
	.uleb128 0x21
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x7c
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7d
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x7e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7f
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x80
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x81
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x82
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x83
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x84
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x85
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x86
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x87
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x88
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x89
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8a
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8b
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8c
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8d
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x8e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8f
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x90
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x91
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x92
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x93
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x94
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x95
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0x7
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"dr"
	.long	0xfc
	.word	0x2
	.secrel32	.Ldebug_info0
	.byte	0x8
	.byte	0
	.word	0
	.word	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	.LFB1117
	.quad	.LFE1117-.LFB1117
	.quad	.LFB1118
	.quad	.LFE1118-.LFB1118
	.quad	.LFB1120
	.quad	.LFE1120-.LFB1120
	.quad	.LFB1121
	.quad	.LFE1121-.LFB1121
	.quad	.LFB1122
	.quad	.LFE1122-.LFB1122
	.quad	.LFB1125
	.quad	.LFE1125-.LFB1125
	.quad	.LFB1149
	.quad	.LFE1149-.LFB1149
	.quad	.LFB1179
	.quad	.LFE1179-.LFB1179
	.quad	.LFB5815
	.quad	.LFE5815-.LFB5815
	.quad	.LFB10190
	.quad	.LFE10190-.LFB10190
	.quad	.LFB10232
	.quad	.LFE10232-.LFB10232
	.quad	.LFB10231
	.quad	.LFE10231-.LFB10231
	.quad	.LFB10233
	.quad	.LFE10233-.LFB10233
	.quad	0
	.quad	0
	.section	.debug_ranges,"dr"
.Ldebug_ranges0:
	.quad	.LBB7
	.quad	.LBE7
	.quad	.LBB8
	.quad	.LBE8
	.quad	0
	.quad	0
	.quad	.LBB10
	.quad	.LBE10
	.quad	.LBB11
	.quad	.LBE11
	.quad	0
	.quad	0
	.quad	.LBB15
	.quad	.LBE15
	.quad	.LBB16
	.quad	.LBE16
	.quad	0
	.quad	0
	.quad	.LBB18
	.quad	.LBE18
	.quad	.LBB20
	.quad	.LBE20
	.quad	0
	.quad	0
	.quad	.Ltext0
	.quad	.Letext0
	.quad	.LFB1117
	.quad	.LFE1117
	.quad	.LFB1118
	.quad	.LFE1118
	.quad	.LFB1120
	.quad	.LFE1120
	.quad	.LFB1121
	.quad	.LFE1121
	.quad	.LFB1122
	.quad	.LFE1122
	.quad	.LFB1125
	.quad	.LFE1125
	.quad	.LFB1149
	.quad	.LFE1149
	.quad	.LFB1179
	.quad	.LFE1179
	.quad	.LFB5815
	.quad	.LFE5815
	.quad	.LFB10190
	.quad	.LFE10190
	.quad	.LFB10232
	.quad	.LFE10232
	.quad	.LFB10231
	.quad	.LFE10231
	.quad	.LFB10233
	.quad	.LFE10233
	.quad	0
	.quad	0
	.section	.debug_macro,"dr"
.Ldebug_macro0:
	.word	0x4
	.byte	0x2
	.secrel32	.Ldebug_line0
	.byte	0x1
	.uleb128 0
	.ascii "__STDC__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cplusplus 201103L\0"
	.byte	0x1
	.uleb128 0
	.ascii "__STDC_HOSTED__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GNUC__ 4\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GNUC_MINOR__ 9\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GNUC_PATCHLEVEL__ 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__VERSION__ \"4.9.2\"\0"
	.byte	0x1
	.uleb128 0
	.ascii "__ATOMIC_RELAXED 0\0"
	.byte	0x1
	.uleb128 0
	.ascii "__ATOMIC_SEQ_CST 5\0"
	.byte	0x1
	.uleb128 0
	.ascii "__ATOMIC_ACQUIRE 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__ATOMIC_RELEASE 3\0"
	.byte	0x1
	.uleb128 0
	.ascii "__ATOMIC_ACQ_REL 4\0"
	.byte	0x1
	.uleb128 0
	.ascii "__ATOMIC_CONSUME 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__pic__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__PIC__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FINITE_MATH_ONLY__ 0\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_INT__ 4\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_LONG__ 4\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_LONG_LONG__ 8\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_SHORT__ 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_FLOAT__ 4\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_DOUBLE__ 8\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_LONG_DOUBLE__ 16\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_SIZE_T__ 8\0"
	.byte	0x1
	.uleb128 0
	.ascii "__CHAR_BIT__ 8\0"
	.byte	0x1
	.uleb128 0
	.ascii "__BIGGEST_ALIGNMENT__ 16\0"
	.byte	0x1
	.uleb128 0
	.ascii "__ORDER_LITTLE_ENDIAN__ 1234\0"
	.byte	0x1
	.uleb128 0
	.ascii "__ORDER_BIG_ENDIAN__ 4321\0"
	.byte	0x1
	.uleb128 0
	.ascii "__ORDER_PDP_ENDIAN__ 3412\0"
	.byte	0x1
	.uleb128 0
	.ascii "__BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_POINTER__ 8\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GNUG__ 4\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZE_TYPE__ long long unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__PTRDIFF_TYPE__ long long int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WCHAR_TYPE__ short unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WINT_TYPE__ short unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INTMAX_TYPE__ long long int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINTMAX_TYPE__ long long unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__CHAR16_TYPE__ short unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__CHAR32_TYPE__ unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIG_ATOMIC_TYPE__ int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT8_TYPE__ signed char\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT16_TYPE__ short int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT32_TYPE__ int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT64_TYPE__ long long int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT8_TYPE__ unsigned char\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT16_TYPE__ short unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT32_TYPE__ unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT64_TYPE__ long long unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_LEAST8_TYPE__ signed char\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_LEAST16_TYPE__ short int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_LEAST32_TYPE__ int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_LEAST64_TYPE__ long long int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_LEAST8_TYPE__ unsigned char\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_LEAST16_TYPE__ short unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_LEAST32_TYPE__ unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_LEAST64_TYPE__ long long unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_FAST8_TYPE__ signed char\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_FAST16_TYPE__ short int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_FAST32_TYPE__ int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_FAST64_TYPE__ long long int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_FAST8_TYPE__ unsigned char\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_FAST16_TYPE__ short unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_FAST32_TYPE__ unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_FAST64_TYPE__ long long unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INTPTR_TYPE__ long long int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINTPTR_TYPE__ long long unsigned int\0"
	.byte	0x1
	.uleb128 0
	.ascii "__has_include(STR) __has_include__(STR)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__has_include_next(STR) __has_include_next__(STR)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GXX_WEAK__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEPRECATED 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GXX_RTTI 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GXX_EXPERIMENTAL_CXX0X__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_binary_literals 201304\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_unicode_characters 200704\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_raw_strings 200710\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_unicode_literals 200710\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_user_defined_literals 200809\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_lambdas 200907\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_constexpr 200704\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_static_assert 200410\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_decltype 200707\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_attributes 200809\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_rvalue_reference 200610\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_variadic_templates 200704\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cpp_alias_templates 200704\0"
	.byte	0x1
	.uleb128 0
	.ascii "__EXCEPTIONS 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GXX_ABI_VERSION 1002\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SCHAR_MAX__ 127\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SHRT_MAX__ 32767\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_MAX__ 2147483647\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LONG_MAX__ 2147483647L\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LONG_LONG_MAX__ 9223372036854775807LL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WCHAR_MAX__ 65535\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WCHAR_MIN__ 0\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WINT_MAX__ 65535\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WINT_MIN__ 0\0"
	.byte	0x1
	.uleb128 0
	.ascii "__PTRDIFF_MAX__ 9223372036854775807LL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZE_MAX__ 18446744073709551615ULL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INTMAX_MAX__ 9223372036854775807LL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INTMAX_C(c) c ## LL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINTMAX_MAX__ 18446744073709551615ULL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINTMAX_C(c) c ## ULL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIG_ATOMIC_MAX__ 2147483647\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT8_MAX__ 127\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT16_MAX__ 32767\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT32_MAX__ 2147483647\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT64_MAX__ 9223372036854775807LL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT8_MAX__ 255\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT16_MAX__ 65535\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT32_MAX__ 4294967295U\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT64_MAX__ 18446744073709551615ULL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_LEAST8_MAX__ 127\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT8_C(c) c\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_LEAST16_MAX__ 32767\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT16_C(c) c\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_LEAST32_MAX__ 2147483647\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT32_C(c) c\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_LEAST64_MAX__ 9223372036854775807LL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT64_C(c) c ## LL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_LEAST8_MAX__ 255\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT8_C(c) c\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_LEAST16_MAX__ 65535\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT16_C(c) c\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_LEAST32_MAX__ 4294967295U\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT32_C(c) c ## U\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_LEAST64_MAX__ 18446744073709551615ULL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT64_C(c) c ## ULL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_FAST8_MAX__ 127\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_FAST16_MAX__ 32767\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_FAST32_MAX__ 2147483647\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INT_FAST64_MAX__ 9223372036854775807LL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_FAST8_MAX__ 255\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_FAST16_MAX__ 65535\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_FAST32_MAX__ 4294967295U\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINT_FAST64_MAX__ 18446744073709551615ULL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__INTPTR_MAX__ 9223372036854775807LL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__UINTPTR_MAX__ 18446744073709551615ULL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_IEC_559 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_IEC_559_COMPLEX 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_EVAL_METHOD__ 0\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC_EVAL_METHOD__ 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_RADIX__ 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_MANT_DIG__ 24\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_DIG__ 6\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_MIN_EXP__ (-125)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_MIN_10_EXP__ (-37)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_MAX_EXP__ 128\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_MAX_10_EXP__ 38\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_DECIMAL_DIG__ 9\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_MAX__ 3.40282346638528859812e+38F\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_MIN__ 1.17549435082228750797e-38F\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_EPSILON__ 1.19209289550781250000e-7F\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_DENORM_MIN__ 1.40129846432481707092e-45F\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_HAS_DENORM__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_HAS_INFINITY__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FLT_HAS_QUIET_NAN__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_MANT_DIG__ 53\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_DIG__ 15\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_MIN_EXP__ (-1021)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_MIN_10_EXP__ (-307)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_MAX_EXP__ 1024\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_MAX_10_EXP__ 308\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_DECIMAL_DIG__ 17\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_MAX__ double(1.79769313486231570815e+308L)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_MIN__ double(2.22507385850720138309e-308L)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_EPSILON__ double(2.22044604925031308085e-16L)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_DENORM_MIN__ double(4.94065645841246544177e-324L)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_HAS_DENORM__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_HAS_INFINITY__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DBL_HAS_QUIET_NAN__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_MANT_DIG__ 64\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_DIG__ 18\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_MIN_EXP__ (-16381)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_MIN_10_EXP__ (-4931)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_MAX_EXP__ 16384\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_MAX_10_EXP__ 4932\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DECIMAL_DIG__ 21\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_MAX__ 1.18973149535723176502e+4932L\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_MIN__ 3.36210314311209350626e-4932L\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_EPSILON__ 1.08420217248550443401e-19L\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_DENORM_MIN__ 3.64519953188247460253e-4951L\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_HAS_DENORM__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_HAS_INFINITY__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__LDBL_HAS_QUIET_NAN__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC32_MANT_DIG__ 7\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC32_MIN_EXP__ (-94)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC32_MAX_EXP__ 97\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC32_MIN__ 1E-95DF\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC32_MAX__ 9.999999E96DF\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC32_EPSILON__ 1E-6DF\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC32_SUBNORMAL_MIN__ 0.000001E-95DF\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC64_MANT_DIG__ 16\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC64_MIN_EXP__ (-382)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC64_MAX_EXP__ 385\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC64_MIN__ 1E-383DD\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC64_MAX__ 9.999999999999999E384DD\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC64_EPSILON__ 1E-15DD\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC128_MANT_DIG__ 34\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC128_MIN_EXP__ (-6142)\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC128_MAX_EXP__ 6145\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC128_MIN__ 1E-6143DL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC128_MAX__ 9.999999999999999999999999999999999E6144DL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC128_EPSILON__ 1E-33DL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL\0"
	.byte	0x1
	.uleb128 0
	.ascii "__REGISTER_PREFIX__ \0"
	.byte	0x1
	.uleb128 0
	.ascii "__USER_LABEL_PREFIX__ \0"
	.byte	0x1
	.uleb128 0
	.ascii "__GNUC_STDC_INLINE__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__NO_INLINE__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__STRICT_ANSI__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WCHAR_UNSIGNED__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_ATOMIC_BOOL_LOCK_FREE 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_ATOMIC_CHAR_LOCK_FREE 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_ATOMIC_SHORT_LOCK_FREE 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_ATOMIC_INT_LOCK_FREE 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_ATOMIC_LONG_LOCK_FREE 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_ATOMIC_LLONG_LOCK_FREE 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_ATOMIC_POINTER_LOCK_FREE 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GCC_HAVE_DWARF2_CFI_ASM 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__PRAGMA_REDEFINE_EXTNAME 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_INT128__ 16\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_WCHAR_T__ 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_WINT_T__ 2\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SIZEOF_PTRDIFF_T__ 8\0"
	.byte	0x1
	.uleb128 0
	.ascii "__amd64 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__amd64__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__x86_64 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__x86_64__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__ATOMIC_HLE_ACQUIRE 65536\0"
	.byte	0x1
	.uleb128 0
	.ascii "__ATOMIC_HLE_RELEASE 131072\0"
	.byte	0x1
	.uleb128 0
	.ascii "__k8 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__k8__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__MMX__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SSE__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SSE2__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__FXSR__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SSE_MATH__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SSE2_MATH__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__SEH__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__stdcall __attribute__((__stdcall__))\0"
	.byte	0x1
	.uleb128 0
	.ascii "__fastcall __attribute__((__fastcall__))\0"
	.byte	0x1
	.uleb128 0
	.ascii "__thiscall __attribute__((__thiscall__))\0"
	.byte	0x1
	.uleb128 0
	.ascii "__cdecl __attribute__((__cdecl__))\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GXX_MERGED_TYPEINFO_NAMES 0\0"
	.byte	0x1
	.uleb128 0
	.ascii "__GXX_TYPEINFO_EQUALITY_INLINE 0\0"
	.byte	0x1
	.uleb128 0
	.ascii "__MSVCRT__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__MINGW32__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "_WIN32 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WIN32 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WIN32__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WINNT 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WINNT__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "_INTEGRAL_MAX_BITS 64\0"
	.byte	0x1
	.uleb128 0
	.ascii "__MINGW64__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WIN64 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__WIN64__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "_WIN64 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "__declspec(x) __attribute__((x))\0"
	.byte	0x1
	.uleb128 0
	.ascii "__DECIMAL_BID_FORMAT__ 1\0"
	.byte	0x1
	.uleb128 0
	.ascii "_REENTRANT 1\0"
	.byte	0x3
	.uleb128 0
	.uleb128 0x3
	.file 77 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/stdc++.h"
	.byte	0x3
	.uleb128 0x1
	.uleb128 0x4d
	.file 78 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cassert"
	.byte	0x3
	.uleb128 0x21
	.uleb128 0x4e
	.file 79 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/assert.h"
	.byte	0x3
	.uleb128 0x2b
	.uleb128 0x4f
	.byte	0x2
	.uleb128 0xa
	.ascii "assert\0"
	.byte	0x1
	.uleb128 0xd
	.ascii "__ASSERT_H_ \0"
	.file 80 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/crtdefs.h"
	.byte	0x3
	.uleb128 0xf
	.uleb128 0x50
	.byte	0x1
	.uleb128 0x8
	.ascii "_INC_CRTDEFS \0"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x8
	.byte	0x1
	.uleb128 0x8
	.ascii "_INC__MINGW_H \0"
	.file 81 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/_mingw_mac.h"
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x51
	.byte	0x1
	.uleb128 0x8
	.ascii "_INC_CRTDEFS_MACRO \0"
	.byte	0x1
	.uleb128 0xa
	.ascii "__STRINGIFY(x) #x\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "__MINGW64_STRINGIFY(x) __STRINGIFY(x)\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "__MINGW64_VERSION_MAJOR 3\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "__MINGW64_VERSION_MINOR 4\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "__MINGW64_VERSION_RC 0\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "__MINGW64_VERSION_STR __MINGW64_STRINGIFY(__MINGW64_VERSION_MAJOR) \".\" __MINGW64_STRINGIFY(__MINGW64_VERSION_MINOR)\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "__MINGW64_VERSION_STATE \"stable\"\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "__MINGW32_MAJOR_VERSION 3\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "__MINGW32_MINOR_VERSION 11\0"
	.byte	0x2
	.uleb128 0x2f
	.ascii "_\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "_ 1\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "__MINGW_USE_UNDERSCORE_PREFIX 0\0"
	.byte	0x2
	.uleb128 0x36
	.ascii "_\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "__MINGW_IMP_SYMBOL(sym) __imp_ ##sym\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "__MINGW_IMP_LSYMBOL(sym) __imp_ ##sym\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "__MINGW_USYMBOL(sym) sym\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "__MINGW_LSYMBOL(sym) _ ##sym\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "_M_AMD64 100\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "_M_X64 100\0"
	.byte	0x2
	.uleb128 0x8a
	.ascii "__MINGW_EXTENSION\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "__MINGW_EXTENSION __extension__\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "__C89_NAMELESS __MINGW_EXTENSION\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "__C89_NAMELESSSTRUCTNAME \0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "__C89_NAMELESSSTRUCTNAME1 \0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "__C89_NAMELESSSTRUCTNAME2 \0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "__C89_NAMELESSSTRUCTNAME3 \0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "__C89_NAMELESSSTRUCTNAME4 \0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "__C89_NAMELESSSTRUCTNAME5 \0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "__C89_NAMELESSUNIONNAME \0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "__C89_NAMELESSUNIONNAME1 \0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "__C89_NAMELESSUNIONNAME2 \0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "__C89_NAMELESSUNIONNAME3 \0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "__C89_NAMELESSUNIONNAME4 \0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "__C89_NAMELESSUNIONNAME5 \0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "__C89_NAMELESSUNIONNAME6 \0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "__C89_NAMELESSUNIONNAME7 \0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "__C89_NAMELESSUNIONNAME8 \0"
	.byte	0x1
	.uleb128 0xab
	.ascii "__GNU_EXTENSION __MINGW_EXTENSION\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "__MINGW_HAVE_ANSI_C99_PRINTF 1\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "__MINGW_HAVE_WIDE_C99_PRINTF 1\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "__MINGW_HAVE_ANSI_C99_SCANF 1\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "__MINGW_HAVE_WIDE_C99_SCANF 1\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "__MINGW_POISON_NAME(__IFACE) __IFACE ##_layout_has_not_been_verified_and_its_declaration_is_most_likely_incorrect\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "__MSABI_LONG(x) x ## l\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "__MINGW_GCC_VERSION (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__)\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "__MINGW_GNUC_PREREQ(major,minor) (__GNUC__ > (major) || (__GNUC__ == (major) && __GNUC_MINOR__ >= (minor)))\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "__MINGW_MSC_PREREQ(major,minor) 0\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "__MINGW_ATTRIB_DEPRECATED_STR(X) \0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "__MINGW_SEC_WARN_STR \"This function or variable may be unsafe, use _CRT_SECURE_NO_WARNINGS to disable deprecation\"\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "__MINGW_MSVC2005_DEPREC_STR \"This POSIX function is deprecated beginning in Visual C++ 2005, use _CRT_NONSTDC_NO_DEPRECATE to disable deprecation\"\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "__MINGW_ATTRIB_DEPRECATED_MSVC2005 __MINGW_ATTRIB_DEPRECATED_STR(__MINGW_MSVC2005_DEPREC_STR)\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "__MINGW_ATTRIB_DEPRECATED_SEC_WARN __MINGW_ATTRIB_DEPRECATED_STR(__MINGW_SEC_WARN_STR)\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "__MINGW_MS_PRINTF(__format,__args) __attribute__((__format__(ms_printf, __format,__args)))\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "__MINGW_MS_SCANF(__format,__args) __attribute__((__format__(ms_scanf, __format,__args)))\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "__MINGW_GNU_PRINTF(__format,__args) __attribute__((__format__(gnu_printf,__format,__args)))\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "__MINGW_GNU_SCANF(__format,__args) __attribute__((__format__(gnu_scanf, __format,__args)))\0"
	.byte	0x2
	.uleb128 0x107
	.ascii "__mingw_ovr\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "__mingw_ovr inline __cdecl\0"
	.byte	0x4
	.file 82 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/_mingw_secapi.h"
	.byte	0x3
	.uleb128 0xd
	.uleb128 0x52
	.byte	0x1
	.uleb128 0x8
	.ascii "_INC_MINGW_SECAPI \0"
	.byte	0x2
	.uleb128 0x1d
	.ascii "_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES\0"
	.byte	0x2
	.uleb128 0x1e
	.ascii "_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY\0"
	.byte	0x2
	.uleb128 0x1f
	.ascii "_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES\0"
	.byte	0x2
	.uleb128 0x20
	.ascii "_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT\0"
	.byte	0x2
	.uleb128 0x21
	.ascii "_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES 0\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY 0\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES 0\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT 0\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY 0\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "__MINGW_CRT_NAME_CONCAT1(sym) ::sym\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "__MINGW_CRT_NAME_CONCAT2(sym) ::sym ##_s\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "__MINGW_CRT_NAME_INSECURE(sym) ::__insecure__ ##sym\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "__MINGW_CRT_NAME_INSECURE_DEF(sym) __insecure__ ##sym\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "__CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_0_2_(__ret,__func,__type1,__attrib1,__arg1,__type2,__attrib2,__arg2,__type3,__attrib3,__arg3) _CRTIMP __ret __cdecl __func(__type1 * __attrib1 __arg1, __type2 __attrib2 __arg2, __type3 __attrib3 __arg3);\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "__CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY_0_3_(__ret,__func,__type1,__attrib1,__arg1,__type2,__attrib2,__arg2,__type3,__attrib3,__arg3,__type4,__attrib4,__arg4) _CRTIMP __ret __cdecl __func(__type1 * __attrib1 __arg1, __type2 __attrib2 __arg2, __type3 __attrib3 __arg3, __type4 __attrib4 __arg4);\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "__CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_0_2_(__ret,__func,__type1,__attrib1,__arg1,__type2,__attrib2,__arg2) _CRTIMP __ret __cdecl __func(__type1 * __attrib1 __arg1, __type2 __attrib2 __arg2) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "__CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT_0_3_(__ret,__func,__type1,__attrib1,__arg1,__type2,__attrib2,__arg2,__type3,__attrib3,__arg3) _CRTIMP __ret __cdecl __func(__type1 * __attrib1 __arg1, __type2 __attrib2 __arg2, __type3 __attrib3 __arg3) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "__CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT_1_4_(__ret,__imp_attrib,__func,__real_func,__type1,__attrib1,__arg1,__type2,__attrib2,__arg2,__type3,__attrib3,__arg3,__type4,__attrib4,__arg4) __imp_attrib __ret __cdecl __func(__type1 * __attrib1 __arg1, __type2 __attrib2 __arg2, __type3 __attrib3 __arg3, __type4 __attrib4 __arg4) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "__CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY_0_3_(__ret,__func,__type1,__attrib1,__arg1,__type2,__attrib2,__arg2,__type3,__attrib3,__arg3) _CRTIMP __ret __cdecl __func(__type1 * __attrib1 __arg1, __type2 __attrib2 __arg2, __type3 __attrib3 __arg3) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x1a
	.ascii "__LONG32 long\0"
	.byte	0x2
	.uleb128 0x22
	.ascii "__stdcall\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "__stdcall \0"
	.byte	0x1
	.uleb128 0x35
	.ascii "__MINGW_IMPORT extern __attribute__ ((__dllimport__))\0"
	.byte	0x2
	.uleb128 0x38
	.ascii "__USE_CRTIMP\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "__USE_CRTIMP 1\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "_CRTIMP __attribute__ ((__dllimport__))\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "__DECLSPEC_SUPPORTED \0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "USE___UUIDOF 0\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "_inline __inline\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "__CRT_INLINE inline\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "__MINGW_INTRIN_INLINE extern __inline__ __attribute__((__always_inline__,__gnu_inline__))\0"
	.byte	0x2
	.uleb128 0x69
	.ascii "__CRT__NO_INLINE\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "__CRT__NO_INLINE 1\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "__UNUSED_PARAM(x) \0"
	.byte	0x1
	.uleb128 0x86
	.ascii "__restrict_arr \0"
	.byte	0x1
	.uleb128 0x91
	.ascii "__MINGW_ATTRIB_NORETURN __attribute__ ((__noreturn__))\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "__MINGW_ATTRIB_CONST __attribute__ ((__const__))\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "__MINGW_ATTRIB_MALLOC __attribute__ ((__malloc__))\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "__MINGW_ATTRIB_PURE __attribute__ ((__pure__))\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "__MINGW_ATTRIB_NONNULL(arg) __attribute__ ((__nonnull__ (arg)))\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "__MINGW_ATTRIB_UNUSED __attribute__ ((__unused__))\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "__MINGW_ATTRIB_USED __attribute__ ((__used__))\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "__MINGW_ATTRIB_DEPRECATED __attribute__ ((__deprecated__))\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "__MINGW_NOTHROW __attribute__ ((__nothrow__))\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "__MINGW_ATTRIB_NO_OPTIMIZE __attribute__((__optimize__ (\"0\")))\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "__MINGW_PRAGMA_PARAM(x) _Pragma (#x)\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "__MINGW_BROKEN_INTERFACE(x) __MINGW_PRAGMA_PARAM(message (\"Interface \" _CRT_STRINGIZE(x) \" has unverified layout.\"))\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "__MSVCRT_VERSION__ 0x0700\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "WINVER 0x0502\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "_WIN32_WINNT 0x502\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "_INT128_DEFINED \0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "__int8 char\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "__int16 short\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "__int32 int\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "__int64 long long\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "__ptr32 \0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "__ptr64 \0"
	.byte	0x1
	.uleb128 0xff
	.ascii "__unaligned \0"
	.byte	0x1
	.uleb128 0x102
	.ascii "__w64 \0"
	.byte	0x1
	.uleb128 0x105
	.ascii "__forceinline inline __attribute__((__always_inline__))\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "__nothrow __declspec(nothrow)\0"
	.byte	0x2
	.uleb128 0x117
	.ascii "_CRT_PACKING\0"
	.byte	0x1
	.uleb128 0x118
	.ascii "_CRT_PACKING 8\0"
	.byte	0x3
	.uleb128 0x11a
	.uleb128 0x7
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_VADEFS \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x8
	.byte	0x1
	.uleb128 0x2a6
	.ascii "MINGW_SDK_INIT \0"
	.file 83 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sdks/_mingw_directx.h"
	.byte	0x3
	.uleb128 0x2ae
	.uleb128 0x53
	.byte	0x1
	.uleb128 0x3
	.ascii "__MINGW_HAS_DXSDK 1\0"
	.byte	0x1
	.uleb128 0x6
	.ascii "MINGW_HAS_DDRAW_H 1\0"
	.byte	0x1
	.uleb128 0x7
	.ascii "MINGW_DDRAW_VERSION 7\0"
	.byte	0x4
	.file 84 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sdks/_mingw_ddk.h"
	.byte	0x3
	.uleb128 0x2af
	.uleb128 0x54
	.byte	0x1
	.uleb128 0x2
	.ascii "MINGW_DDK_H \0"
	.byte	0x1
	.uleb128 0x4
	.ascii "MINGW_HAS_DDK_H 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x15
	.ascii "__GNUC_VA_LIST \0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "_VA_LIST_DEFINED \0"
	.byte	0x1
	.uleb128 0x26
	.ascii "_ADDRESSOF(v) (&reinterpret_cast<const char &>(v))\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "_crt_va_start(v,l) __builtin_va_start(v,l)\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "_crt_va_arg(v,l) __builtin_va_arg(v,l)\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "_crt_va_end(v) __builtin_va_end(v)\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "_crt_va_copy(d,s) __builtin_va_copy(d,s)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x121
	.ascii "__CRT_STRINGIZE(_Value) #_Value\0"
	.byte	0x1
	.uleb128 0x122
	.ascii "_CRT_STRINGIZE(_Value) __CRT_STRINGIZE(_Value)\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "__CRT_WIDE(_String) L ## _String\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "_CRT_WIDE(_String) __CRT_WIDE(_String)\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "_W64 \0"
	.byte	0x1
	.uleb128 0x132
	.ascii "_CRTIMP_NOIA64 _CRTIMP\0"
	.byte	0x1
	.uleb128 0x137
	.ascii "_CRTIMP2 _CRTIMP\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "_CRTIMP_ALTERNATIVE _CRTIMP\0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "_CRT_ALTERNATIVE_IMPORTED \0"
	.byte	0x1
	.uleb128 0x140
	.ascii "_MRTIMP2 _CRTIMP\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "_DLL \0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "_MT \0"
	.byte	0x1
	.uleb128 0x151
	.ascii "_MCRTIMP _CRTIMP\0"
	.byte	0x1
	.uleb128 0x155
	.ascii "_CRTIMP_PURE _CRTIMP\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "_PGLOBAL \0"
	.byte	0x1
	.uleb128 0x15d
	.ascii "_AGLOBAL \0"
	.byte	0x1
	.uleb128 0x160
	.ascii "_SECURECRT_FILL_BUFFER_PATTERN 0xFD\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "_CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated)\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "_CRT_INSECURE_DEPRECATE_MEMORY(_Replacement) \0"
	.byte	0x1
	.uleb128 0x168
	.ascii "_CRT_INSECURE_DEPRECATE_GLOBALS(_Replacement) \0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "_CRT_MANAGED_HEAP_DEPRECATE \0"
	.byte	0x1
	.uleb128 0x170
	.ascii "_CRT_OBSOLETE(_NewItem) \0"
	.byte	0x1
	.uleb128 0x176
	.ascii "_SIZE_T_DEFINED \0"
	.byte	0x2
	.uleb128 0x177
	.ascii "size_t\0"
	.byte	0x1
	.uleb128 0x180
	.ascii "_SSIZE_T_DEFINED \0"
	.byte	0x2
	.uleb128 0x181
	.ascii "ssize_t\0"
	.byte	0x1
	.uleb128 0x18a
	.ascii "_INTPTR_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "__intptr_t_defined \0"
	.byte	0x2
	.uleb128 0x18d
	.ascii "intptr_t\0"
	.byte	0x1
	.uleb128 0x197
	.ascii "_UINTPTR_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x199
	.ascii "__uintptr_t_defined \0"
	.byte	0x2
	.uleb128 0x19a
	.ascii "uintptr_t\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "_PTRDIFF_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "_PTRDIFF_T_ \0"
	.byte	0x2
	.uleb128 0x1a7
	.ascii "ptrdiff_t\0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "_WCHAR_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x1b8
	.ascii "_WCTYPE_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x1ba
	.ascii "_WINT_T \0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "_ERRCODE_DEFINED \0"
	.byte	0x1
	.uleb128 0x1d3
	.ascii "_TIME32_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x1d8
	.ascii "_TIME64_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x1dd
	.ascii "_TIME_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x1e6
	.ascii "_CONST_RETURN \0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "UNALIGNED __unaligned\0"
	.byte	0x1
	.uleb128 0x1f5
	.ascii "_CRT_ALIGN(x) __attribute__ ((__aligned__ (x)))\0"
	.byte	0x1
	.uleb128 0x1fc
	.ascii "__CRTDECL __cdecl\0"
	.byte	0x1
	.uleb128 0x1ff
	.ascii "_ARGMAX 100\0"
	.byte	0x1
	.uleb128 0x202
	.ascii "_TRUNCATE ((size_t)-1)\0"
	.byte	0x1
	.uleb128 0x206
	.ascii "_CRT_UNUSED(x) (void)x\0"
	.byte	0x1
	.uleb128 0x20c
	.ascii "_NATIVE_NULLPTR_SUPPORTED \0"
	.byte	0x2
	.uleb128 0x22a
	.ascii "_CRT_glob\0"
	.byte	0x1
	.uleb128 0x22b
	.ascii "_CRT_glob _dowildcard\0"
	.byte	0x1
	.uleb128 0x23b
	.ascii "__ANONYMOUS_DEFINED \0"
	.byte	0x1
	.uleb128 0x23c
	.ascii "_ANONYMOUS_UNION __MINGW_EXTENSION\0"
	.byte	0x1
	.uleb128 0x23d
	.ascii "_ANONYMOUS_STRUCT __MINGW_EXTENSION\0"
	.byte	0x1
	.uleb128 0x23f
	.ascii "_UNION_NAME(x) \0"
	.byte	0x1
	.uleb128 0x240
	.ascii "_STRUCT_NAME(x) \0"
	.byte	0x1
	.uleb128 0x254
	.ascii "DUMMYUNIONNAME \0"
	.byte	0x1
	.uleb128 0x255
	.ascii "DUMMYUNIONNAME1 \0"
	.byte	0x1
	.uleb128 0x256
	.ascii "DUMMYUNIONNAME2 \0"
	.byte	0x1
	.uleb128 0x257
	.ascii "DUMMYUNIONNAME3 \0"
	.byte	0x1
	.uleb128 0x258
	.ascii "DUMMYUNIONNAME4 \0"
	.byte	0x1
	.uleb128 0x259
	.ascii "DUMMYUNIONNAME5 \0"
	.byte	0x1
	.uleb128 0x25a
	.ascii "DUMMYUNIONNAME6 \0"
	.byte	0x1
	.uleb128 0x25b
	.ascii "DUMMYUNIONNAME7 \0"
	.byte	0x1
	.uleb128 0x25c
	.ascii "DUMMYUNIONNAME8 \0"
	.byte	0x1
	.uleb128 0x25d
	.ascii "DUMMYUNIONNAME9 \0"
	.byte	0x1
	.uleb128 0x26a
	.ascii "DUMMYSTRUCTNAME \0"
	.byte	0x1
	.uleb128 0x26b
	.ascii "DUMMYSTRUCTNAME1 \0"
	.byte	0x1
	.uleb128 0x26c
	.ascii "DUMMYSTRUCTNAME2 \0"
	.byte	0x1
	.uleb128 0x26d
	.ascii "DUMMYSTRUCTNAME3 \0"
	.byte	0x1
	.uleb128 0x26e
	.ascii "DUMMYSTRUCTNAME4 \0"
	.byte	0x1
	.uleb128 0x26f
	.ascii "DUMMYSTRUCTNAME5 \0"
	.byte	0x1
	.uleb128 0x277
	.ascii "__CRT_UUID_DECL(type,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) extern \"C++\" { template<> inline const GUID &__mingw_uuidof<type>() { static const IID __uuid_inst = {l,w1,w2, {b1,b2,b3,b4,b5,b6,b7,b8}}; return __uuid_inst; } template<> inline const GUID &__mingw_uuidof<type*>() { return __mingw_uuidof<type>(); } }\0"
	.byte	0x1
	.uleb128 0x282
	.ascii "__uuidof(type) __mingw_uuidof<__typeof(type)>()\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x12
	.ascii "_CRTNOALIAS \0"
	.byte	0x1
	.uleb128 0x16
	.ascii "_CRTRESTRICT \0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "_RSIZE_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_0(__ret,__func,__dsttype,__dst) \0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1(__ret,__func,__dsttype,__dst,__type1,__arg1) \0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2(__ret,__func,__dsttype,__dst,__type1,__arg1,__type2,__arg2) \0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(__ret,__func,__dsttype,__dst,__type1,__arg1,__type2,__arg2,__type3,__arg3) \0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_4(__ret,__func,__dsttype,__dst,__type1,__arg1,__type2,__arg2,__type3,__arg3,__type4,__arg4) \0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_1_1(__ret,__func,__type0,__arg0,__dsttype,__dst,__type1,__arg1) \0"
	.byte	0x1
	.uleb128 0x90
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_1_2(__ret,__func,__type0,__arg0,__dsttype,__dst,__type1,__arg1,__type2,__arg2) \0"
	.byte	0x1
	.uleb128 0x91
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_1_3(__ret,__func,__type0,__arg0,__dsttype,__dst,__type1,__arg1,__type2,__arg2,__type3,__arg3) \0"
	.byte	0x1
	.uleb128 0x92
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_2_0(__ret,__func,__type1,__arg1,__type2,__arg2,__dsttype,__dst) \0"
	.byte	0x1
	.uleb128 0x93
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(__ret,__func,__vfunc,__dsttype,__dst,__type1,__arg1) \0"
	.byte	0x1
	.uleb128 0x94
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(__ret,__func,__vfunc,__dsttype,__dst,__type1,__arg1,__type2,__arg2) \0"
	.byte	0x1
	.uleb128 0x95
	.ascii "__DEFINE_CPP_OVERLOAD_SECURE_FUNC_SPLITPATH(__ret,__func,__dsttype,__src) \0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "_TAGLC_ID_DEFINED \0"
	.byte	0x1
	.uleb128 0xae
	.ascii "_THREADLOCALEINFO \0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "__crt_typefix(ctype) \0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x11
	.uleb128 0xa
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_STDLIB \0"
	.file 85 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include-fixed/limits.h"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x55
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GCC_LIMITS_H_ \0"
	.file 86 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include-fixed/syslimits.h"
	.byte	0x3
	.uleb128 0x22
	.uleb128 0x56
	.byte	0x1
	.uleb128 0x6
	.ascii "_GCC_NEXT_LIMITS_H \0"
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x55
	.file 87 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/limits.h"
	.byte	0x3
	.uleb128 0xa8
	.uleb128 0x57
	.byte	0x1
	.uleb128 0x9
	.ascii "_INC_LIMITS \0"
	.byte	0x1
	.uleb128 0x14
	.ascii "PATH_MAX 260\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "CHAR_BIT 8\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "SCHAR_MIN (-128)\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "SCHAR_MAX 127\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "UCHAR_MAX 0xff\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "CHAR_MIN SCHAR_MIN\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "CHAR_MAX SCHAR_MAX\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "MB_LEN_MAX 5\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "SHRT_MIN (-32768)\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "SHRT_MAX 32767\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "USHRT_MAX 0xffffU\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "INT_MIN (-2147483647 - 1)\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "INT_MAX 2147483647\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "UINT_MAX 0xffffffffU\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "LONG_MIN (-2147483647L - 1)\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "LONG_MAX 2147483647L\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "ULONG_MAX 0xffffffffUL\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "LLONG_MAX 9223372036854775807ll\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "LLONG_MIN (-9223372036854775807ll - 1)\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "ULLONG_MAX 0xffffffffffffffffull\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "_I8_MIN (-127 - 1)\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "_I8_MAX 127\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "_UI8_MAX 0xffu\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "_I16_MIN (-32767 - 1)\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "_I16_MAX 32767\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "_UI16_MAX 0xffffu\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "_I32_MIN (-2147483647 - 1)\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "_I32_MAX 2147483647\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "_UI32_MAX 0xffffffffu\0"
	.byte	0x2
	.uleb128 0x39
	.ascii "LONG_LONG_MAX\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "LONG_LONG_MAX 9223372036854775807ll\0"
	.byte	0x2
	.uleb128 0x3b
	.ascii "LONG_LONG_MIN\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "LONG_LONG_MIN (-LONG_LONG_MAX-1)\0"
	.byte	0x2
	.uleb128 0x3d
	.ascii "ULONG_LONG_MAX\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "ULONG_LONG_MAX (2ull * LONG_LONG_MAX + 1ull)\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "_I64_MIN (-9223372036854775807ll - 1)\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "_I64_MAX 9223372036854775807ll\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "_UI64_MAX 0xffffffffffffffffull\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "SIZE_MAX _UI64_MAX\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "SSIZE_MAX _I64_MAX\0"
	.byte	0x4
	.byte	0x4
	.byte	0x2
	.uleb128 0x8
	.ascii "_GCC_NEXT_LIMITS_H\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x3c
	.ascii "_LIMITS_H___ \0"
	.byte	0x2
	.uleb128 0x3f
	.ascii "CHAR_BIT\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "CHAR_BIT __CHAR_BIT__\0"
	.byte	0x2
	.uleb128 0x48
	.ascii "SCHAR_MIN\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "SCHAR_MIN (-SCHAR_MAX - 1)\0"
	.byte	0x2
	.uleb128 0x4a
	.ascii "SCHAR_MAX\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "SCHAR_MAX __SCHAR_MAX__\0"
	.byte	0x2
	.uleb128 0x4e
	.ascii "UCHAR_MAX\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "UCHAR_MAX (SCHAR_MAX * 2 + 1)\0"
	.byte	0x2
	.uleb128 0x60
	.ascii "CHAR_MIN\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "CHAR_MIN SCHAR_MIN\0"
	.byte	0x2
	.uleb128 0x62
	.ascii "CHAR_MAX\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "CHAR_MAX SCHAR_MAX\0"
	.byte	0x2
	.uleb128 0x67
	.ascii "SHRT_MIN\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "SHRT_MIN (-SHRT_MAX - 1)\0"
	.byte	0x2
	.uleb128 0x69
	.ascii "SHRT_MAX\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "SHRT_MAX __SHRT_MAX__\0"
	.byte	0x2
	.uleb128 0x6d
	.ascii "USHRT_MAX\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "USHRT_MAX (SHRT_MAX * 2 + 1)\0"
	.byte	0x2
	.uleb128 0x75
	.ascii "INT_MIN\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "INT_MIN (-INT_MAX - 1)\0"
	.byte	0x2
	.uleb128 0x77
	.ascii "INT_MAX\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "INT_MAX __INT_MAX__\0"
	.byte	0x2
	.uleb128 0x7b
	.ascii "UINT_MAX\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "UINT_MAX (INT_MAX * 2U + 1U)\0"
	.byte	0x2
	.uleb128 0x80
	.ascii "LONG_MIN\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "LONG_MIN (-LONG_MAX - 1L)\0"
	.byte	0x2
	.uleb128 0x82
	.ascii "LONG_MAX\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "LONG_MAX __LONG_MAX__\0"
	.byte	0x2
	.uleb128 0x86
	.ascii "ULONG_MAX\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "ULONG_MAX (LONG_MAX * 2UL + 1UL)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x1b
	.ascii "NULL 0LL\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "EXIT_SUCCESS 0\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "EXIT_FAILURE 1\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "_ONEXIT_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "onexit_t _onexit_t\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "_DIV_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "_CRT_DOUBLE_DEC \0"
	.byte	0x1
	.uleb128 0x46
	.ascii "_PTR_LD(x) ((unsigned char *)(&(x)->ld))\0"
	.byte	0x2
	.uleb128 0x51
	.ascii "long\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "RAND_MAX 0x7fff\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "MB_CUR_MAX ___mb_cur_max_func()\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "__mb_cur_max (* __MINGW_IMP_SYMBOL(__mb_cur_max))\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "___mb_cur_max_func() (__mb_cur_max)\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "__max(a,b) (((a) > (b)) ? (a) : (b))\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "__min(a,b) (((a) < (b)) ? (a) : (b))\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "_MAX_PATH 260\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "_MAX_DRIVE 3\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "_MAX_DIR 256\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "_MAX_FNAME 256\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "_MAX_EXT 256\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "_OUT_TO_DEFAULT 0\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "_OUT_TO_STDERR 1\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "_OUT_TO_MSGBOX 2\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "_REPORT_ERRMODE 3\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "_WRITE_ABORT_MSG 0x1\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "_CALL_REPORTFAULT 0x2\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "_MAX_ENV 32767\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "_CRT_ERRNO_DEFINED \0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "errno (*_errno())\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "_doserrno (*__doserrno())\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "__argc (* __MINGW_IMP_SYMBOL(__argc))\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "__argv (* __MINGW_IMP_SYMBOL(__argv))\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "__wargv (* __MINGW_IMP_SYMBOL(__wargv))\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "_environ (* __MINGW_IMP_SYMBOL(_environ))\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "_wenviron (* __MINGW_IMP_SYMBOL(_wenviron))\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "_pgmptr (* __MINGW_IMP_SYMBOL(_pgmptr))\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "_wpgmptr (* __MINGW_IMP_SYMBOL(_wpgmptr))\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "_fmode (* __MINGW_IMP_SYMBOL(_fmode))\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "_osplatform (* __MINGW_IMP_SYMBOL(_osplatform))\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "_osver (* __MINGW_IMP_SYMBOL(_osver))\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "_winver (* __MINGW_IMP_SYMBOL(_winver))\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "_winmajor (* __MINGW_IMP_SYMBOL(_winmajor))\0"
	.byte	0x1
	.uleb128 0x11c
	.ascii "_winminor (* __MINGW_IMP_SYMBOL(_winminor))\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "_countof(_Array) sizeof(*__countof_helper(_Array))\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "_CRT_TERMINATE_DEFINED \0"
	.byte	0x2
	.uleb128 0x13f
	.ascii "abort\0"
	.byte	0x1
	.uleb128 0x148
	.ascii "_CRT_ABS_DEFINED \0"
	.byte	0x1
	.uleb128 0x156
	.ascii "_CRT_ATOF_DEFINED \0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "_CRT_ALGO_DEFINED \0"
	.byte	0x1
	.uleb128 0x19c
	.ascii "strtod __strtod\0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "_CRT_SYSTEM_DEFINED \0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "_CRT_ALLOCATION_DEFINED \0"
	.byte	0x2
	.uleb128 0x1be
	.ascii "_aligned_free\0"
	.byte	0x2
	.uleb128 0x1bf
	.ascii "_aligned_malloc\0"
	.byte	0x1
	.uleb128 0x1cd
	.ascii "_WSTDLIB_DEFINED \0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "_CRT_WSYSTEM_DEFINED \0"
	.byte	0x1
	.uleb128 0x204
	.ascii "_CVTBUFSIZE (309+40)\0"
	.byte	0x2
	.uleb128 0x211
	.ascii "_lrotr\0"
	.byte	0x2
	.uleb128 0x212
	.ascii "_lrotl\0"
	.byte	0x1
	.uleb128 0x221
	.ascii "_CRT_PERROR_DEFINED \0"
	.byte	0x2
	.uleb128 0x227
	.ascii "_rotl64\0"
	.byte	0x2
	.uleb128 0x228
	.ascii "_rotr64\0"
	.byte	0x2
	.uleb128 0x22f
	.ascii "_rotr\0"
	.byte	0x2
	.uleb128 0x230
	.ascii "_rotl\0"
	.byte	0x1
	.uleb128 0x23b
	.ascii "_WSTDLIBP_DEFINED \0"
	.byte	0x1
	.uleb128 0x23f
	.ascii "_CRT_WPERROR_DEFINED \0"
	.byte	0x1
	.uleb128 0x25c
	.ascii "sys_errlist _sys_errlist\0"
	.byte	0x1
	.uleb128 0x25d
	.ascii "sys_nerr _sys_nerr\0"
	.byte	0x1
	.uleb128 0x25e
	.ascii "environ _environ\0"
	.byte	0x1
	.uleb128 0x267
	.ascii "_CRT_SWAB_DEFINED \0"
	.file 88 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sec_api/stdlib_s.h"
	.byte	0x3
	.uleb128 0x29b
	.uleb128 0x58
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_STDLIB_S \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0xa
	.byte	0x4
	.byte	0x4
	.file 89 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/malloc.h"
	.byte	0x3
	.uleb128 0x29c
	.uleb128 0x59
	.byte	0x1
	.uleb128 0x7
	.ascii "_MALLOC_H_ \0"
	.byte	0x1
	.uleb128 0x12
	.ascii "_HEAP_MAXREQ 0xFFFFFFFFFFFFFFE0\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "_STATIC_ASSERT(expr) extern void __static_assert_t(int [(expr)?1:-1])\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "_HEAPEMPTY (-1)\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "_HEAPOK (-2)\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "_HEAPBADBEGIN (-3)\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "_HEAPBADNODE (-4)\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "_HEAPEND (-5)\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "_HEAPBADPTR (-6)\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "_FREEENTRY 0\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "_USEDENTRY 1\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "_HEAPINFO_DEFINED \0"
	.byte	0x1
	.uleb128 0x39
	.ascii "__DO_ALIGN_DEFINES \0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "_MM_MALLOC_H_INCLUDED \0"
	.byte	0x2
	.uleb128 0x43
	.ascii "_aligned_free\0"
	.byte	0x2
	.uleb128 0x44
	.ascii "_aligned_malloc\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "_mm_free(a) _aligned_free(a)\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "_mm_malloc(a,b) _aligned_malloc(a,b)\0"
	.byte	0x2
	.uleb128 0x5f
	.ascii "__DO_ALIGN_DEFINES\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "_MAX_WAIT_MALLOC_CRT 60000\0"
	.byte	0x2
	.uleb128 0x74
	.ascii "_alloca\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "_alloca(x) __builtin_alloca((x))\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "_ALLOCA_S_THRESHOLD 1024\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "_ALLOCA_S_STACK_MARKER 0xCCCC\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "_ALLOCA_S_HEAP_MARKER 0xDDDD\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "_ALLOCA_S_MARKER_SIZE 16\0"
	.byte	0x2
	.uleb128 0x99
	.ascii "_malloca\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "_malloca(size) ((((size) + _ALLOCA_S_MARKER_SIZE) <= _ALLOCA_S_THRESHOLD) ? _MarkAllocaS(_alloca((size) + _ALLOCA_S_MARKER_SIZE),_ALLOCA_S_STACK_MARKER) : _MarkAllocaS(malloc((size) + _ALLOCA_S_MARKER_SIZE),_ALLOCA_S_HEAP_MARKER))\0"
	.byte	0x2
	.uleb128 0x9e
	.ascii "_FREEA_INLINE\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "_FREEA_INLINE \0"
	.byte	0x2
	.uleb128 0xa2
	.ascii "_freea\0"
	.byte	0x2
	.uleb128 0xb5
	.ascii "alloca\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "alloca(x) __builtin_alloca((x))\0"
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x49
	.ascii "assert(_Expression) (void) ((!!(_Expression)) || (_assert(#_Expression,__FILE__,__LINE__),0))\0"
	.byte	0x4
	.byte	0x4
	.file 90 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cctype"
	.byte	0x3
	.uleb128 0x23
	.uleb128 0x5a
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x19
	.byte	0x1
	.uleb128 0x1f
	.ascii "_GLIBCXX_CXX_CONFIG_H 1\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__GLIBCXX__ 20141030\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "_GLIBCXX_PURE __attribute__ ((__pure__))\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "_GLIBCXX_CONST __attribute__ ((__const__))\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "_GLIBCXX_NORETURN __attribute__ ((__noreturn__))\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "_GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY 0\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "_GLIBCXX_VISIBILITY(V) _GLIBCXX_PSEUDO_VISIBILITY(V)\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "_GLIBCXX_USE_DEPRECATED 1\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "_GLIBCXX_DEPRECATED __attribute__ ((__deprecated__))\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "_GLIBCXX_ABI_TAG_CXX11 __attribute ((__abi_tag__ (\"cxx11\")))\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "_GLIBCXX_CONSTEXPR constexpr\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "_GLIBCXX_USE_CONSTEXPR constexpr\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "_GLIBCXX_NOEXCEPT noexcept\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "_GLIBCXX_USE_NOEXCEPT noexcept\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "_GLIBCXX_THROW(_EXC) \0"
	.byte	0x1
	.uleb128 0x78
	.ascii "_GLIBCXX_NOTHROW _GLIBCXX_USE_NOEXCEPT\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "_GLIBCXX_THROW_OR_ABORT(_EXC) (throw (_EXC))\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "_GLIBCXX_EXTERN_TEMPLATE 1\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "_GLIBCXX_INLINE_VERSION 0\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "_GLIBCXX_BEGIN_NAMESPACE_VERSION \0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "_GLIBCXX_END_NAMESPACE_VERSION \0"
	.byte	0x1
	.uleb128 0x141
	.ascii "_GLIBCXX_STD_A std\0"
	.byte	0x1
	.uleb128 0x145
	.ascii "_GLIBCXX_STD_C std\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "_GLIBCXX_BEGIN_NAMESPACE_ALGO \0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "_GLIBCXX_END_NAMESPACE_ALGO \0"
	.byte	0x1
	.uleb128 0x151
	.ascii "_GLIBCXX_BEGIN_NAMESPACE_CONTAINER \0"
	.byte	0x1
	.uleb128 0x155
	.ascii "_GLIBCXX_END_NAMESPACE_CONTAINER \0"
	.byte	0x2
	.uleb128 0x15a
	.ascii "_GLIBCXX_LONG_DOUBLE_COMPAT\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "_GLIBCXX_NAMESPACE_LDBL \0"
	.byte	0x1
	.uleb128 0x167
	.ascii "_GLIBCXX_BEGIN_NAMESPACE_LDBL \0"
	.byte	0x1
	.uleb128 0x168
	.ascii "_GLIBCXX_END_NAMESPACE_LDBL \0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "__glibcxx_assert(_Condition) \0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "_GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A) \0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "_GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A) \0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "_GLIBCXX_BEGIN_EXTERN_C extern \"C\" {\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "_GLIBCXX_END_EXTERN_C }\0"
	.file 91 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/os_defines.h"
	.byte	0x3
	.uleb128 0x1ae
	.uleb128 0x5b
	.byte	0x1
	.uleb128 0x1f
	.ascii "_GLIBCXX_OS_DEFINES \0"
	.byte	0x1
	.uleb128 0x27
	.ascii "__GTHREAD_HIDE_WIN32API 1\0"
	.byte	0x2
	.uleb128 0x2c
	.ascii "NOMINMAX\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "NOMINMAX 1\0"
	.byte	0x2
	.uleb128 0x32
	.ascii "__USE_MINGW_ANSI_STDIO\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "__USE_MINGW_ANSI_STDIO 1\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_PSEUDO_VISIBILITY_default \0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "_GLIBCXX_PSEUDO_VISIBILITY_hidden \0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "_GLIBCXX_PSEUDO_VISIBILITY(V) _GLIBCXX_PSEUDO_VISIBILITY_ ## V\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "_GLIBCXX_HAVE_DOS_BASED_FILESYSTEM 1\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "_GLIBCXX_NO_IOCTL 1\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "_GLIBCXX_LLP64 1\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "_GTHREAD_USE_MUTEX_INIT_FUNC 1\0"
	.byte	0x4
	.file 92 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/cpu_defines.h"
	.byte	0x3
	.uleb128 0x1b1
	.uleb128 0x5c
	.byte	0x1
	.uleb128 0x1f
	.ascii "_GLIBCXX_CPU_DEFINES 1\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x1bd
	.ascii "_GLIBCXX_WEAK_DEFINITION \0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "_GLIBCXX_FAST_MATH 0\0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "__N(msgid) (msgid)\0"
	.byte	0x2
	.uleb128 0x1d2
	.ascii "min\0"
	.byte	0x2
	.uleb128 0x1d3
	.ascii "max\0"
	.byte	0x1
	.uleb128 0x1da
	.ascii "_GLIBCXX_HAVE_ACOSF 1\0"
	.byte	0x1
	.uleb128 0x1dd
	.ascii "_GLIBCXX_HAVE_ACOSL 1\0"
	.byte	0x1
	.uleb128 0x1e0
	.ascii "_GLIBCXX_HAVE_ASINF 1\0"
	.byte	0x1
	.uleb128 0x1e3
	.ascii "_GLIBCXX_HAVE_ASINL 1\0"
	.byte	0x1
	.uleb128 0x1e9
	.ascii "_GLIBCXX_HAVE_ATAN2F 1\0"
	.byte	0x1
	.uleb128 0x1ec
	.ascii "_GLIBCXX_HAVE_ATAN2L 1\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "_GLIBCXX_HAVE_ATANF 1\0"
	.byte	0x1
	.uleb128 0x1f2
	.ascii "_GLIBCXX_HAVE_ATANL 1\0"
	.byte	0x1
	.uleb128 0x1fb
	.ascii "_GLIBCXX_HAVE_CEILF 1\0"
	.byte	0x1
	.uleb128 0x1fe
	.ascii "_GLIBCXX_HAVE_CEILL 1\0"
	.byte	0x1
	.uleb128 0x201
	.ascii "_GLIBCXX_HAVE_COMPLEX_H 1\0"
	.byte	0x1
	.uleb128 0x204
	.ascii "_GLIBCXX_HAVE_COSF 1\0"
	.byte	0x1
	.uleb128 0x207
	.ascii "_GLIBCXX_HAVE_COSHF 1\0"
	.byte	0x1
	.uleb128 0x20a
	.ascii "_GLIBCXX_HAVE_COSHL 1\0"
	.byte	0x1
	.uleb128 0x20d
	.ascii "_GLIBCXX_HAVE_COSL 1\0"
	.byte	0x1
	.uleb128 0x216
	.ascii "_GLIBCXX_HAVE_ECANCELED 1\0"
	.byte	0x1
	.uleb128 0x219
	.ascii "_GLIBCXX_HAVE_ECHILD 1\0"
	.byte	0x1
	.uleb128 0x228
	.ascii "_GLIBCXX_HAVE_ENOSPC 1\0"
	.byte	0x1
	.uleb128 0x234
	.ascii "_GLIBCXX_HAVE_ENOTSUP 1\0"
	.byte	0x1
	.uleb128 0x237
	.ascii "_GLIBCXX_HAVE_EOVERFLOW 1\0"
	.byte	0x1
	.uleb128 0x23a
	.ascii "_GLIBCXX_HAVE_EOWNERDEAD 1\0"
	.byte	0x1
	.uleb128 0x23d
	.ascii "_GLIBCXX_HAVE_EPERM 1\0"
	.byte	0x1
	.uleb128 0x240
	.ascii "_GLIBCXX_HAVE_EPROTO 1\0"
	.byte	0x1
	.uleb128 0x246
	.ascii "_GLIBCXX_HAVE_ETIMEDOUT 1\0"
	.byte	0x1
	.uleb128 0x24c
	.ascii "_GLIBCXX_HAVE_EWOULDBLOCK 1\0"
	.byte	0x1
	.uleb128 0x252
	.ascii "_GLIBCXX_HAVE_EXPF 1\0"
	.byte	0x1
	.uleb128 0x255
	.ascii "_GLIBCXX_HAVE_EXPL 1\0"
	.byte	0x1
	.uleb128 0x258
	.ascii "_GLIBCXX_HAVE_FABSF 1\0"
	.byte	0x1
	.uleb128 0x25b
	.ascii "_GLIBCXX_HAVE_FABSL 1\0"
	.byte	0x1
	.uleb128 0x25e
	.ascii "_GLIBCXX_HAVE_FENV_H 1\0"
	.byte	0x1
	.uleb128 0x261
	.ascii "_GLIBCXX_HAVE_FINITE 1\0"
	.byte	0x1
	.uleb128 0x26a
	.ascii "_GLIBCXX_HAVE_FLOAT_H 1\0"
	.byte	0x1
	.uleb128 0x26d
	.ascii "_GLIBCXX_HAVE_FLOORF 1\0"
	.byte	0x1
	.uleb128 0x270
	.ascii "_GLIBCXX_HAVE_FLOORL 1\0"
	.byte	0x1
	.uleb128 0x273
	.ascii "_GLIBCXX_HAVE_FMODF 1\0"
	.byte	0x1
	.uleb128 0x276
	.ascii "_GLIBCXX_HAVE_FMODL 1\0"
	.byte	0x1
	.uleb128 0x279
	.ascii "_GLIBCXX_HAVE_FPCLASS 1\0"
	.byte	0x1
	.uleb128 0x27f
	.ascii "_GLIBCXX_HAVE_FREXPF 1\0"
	.byte	0x1
	.uleb128 0x282
	.ascii "_GLIBCXX_HAVE_FREXPL 1\0"
	.byte	0x1
	.uleb128 0x285
	.ascii "_GLIBCXX_HAVE_GETIPINFO 1\0"
	.byte	0x1
	.uleb128 0x288
	.ascii "_GLIBCXX_HAVE_GETS 1\0"
	.byte	0x1
	.uleb128 0x28b
	.ascii "_GLIBCXX_HAVE_HYPOT 1\0"
	.byte	0x1
	.uleb128 0x28e
	.ascii "_GLIBCXX_HAVE_HYPOTF 1\0"
	.byte	0x1
	.uleb128 0x291
	.ascii "_GLIBCXX_HAVE_HYPOTL 1\0"
	.byte	0x1
	.uleb128 0x294
	.ascii "_GLIBCXX_HAVE_ICONV 1\0"
	.byte	0x1
	.uleb128 0x297
	.ascii "_GLIBCXX_HAVE_IEEEFP_H 1\0"
	.byte	0x1
	.uleb128 0x29a
	.ascii "_GLIBCXX_HAVE_INT64_T 1\0"
	.byte	0x1
	.uleb128 0x2a0
	.ascii "_GLIBCXX_HAVE_INT64_T_LONG_LONG 1\0"
	.byte	0x1
	.uleb128 0x2a3
	.ascii "_GLIBCXX_HAVE_INTTYPES_H 1\0"
	.byte	0x1
	.uleb128 0x2af
	.ascii "_GLIBCXX_HAVE_ISNAN 1\0"
	.byte	0x1
	.uleb128 0x2b8
	.ascii "_GLIBCXX_HAVE_ISWBLANK 1\0"
	.byte	0x1
	.uleb128 0x2be
	.ascii "_GLIBCXX_HAVE_LDEXPF 1\0"
	.byte	0x1
	.uleb128 0x2c1
	.ascii "_GLIBCXX_HAVE_LDEXPL 1\0"
	.byte	0x1
	.uleb128 0x2d9
	.ascii "_GLIBCXX_HAVE_LOCALE_H 1\0"
	.byte	0x1
	.uleb128 0x2dc
	.ascii "_GLIBCXX_HAVE_LOG10F 1\0"
	.byte	0x1
	.uleb128 0x2df
	.ascii "_GLIBCXX_HAVE_LOG10L 1\0"
	.byte	0x1
	.uleb128 0x2e2
	.ascii "_GLIBCXX_HAVE_LOGF 1\0"
	.byte	0x1
	.uleb128 0x2e5
	.ascii "_GLIBCXX_HAVE_LOGL 1\0"
	.byte	0x1
	.uleb128 0x2ee
	.ascii "_GLIBCXX_HAVE_MBSTATE_T 1\0"
	.byte	0x1
	.uleb128 0x2f1
	.ascii "_GLIBCXX_HAVE_MEMORY_H 1\0"
	.byte	0x1
	.uleb128 0x2f4
	.ascii "_GLIBCXX_HAVE_MODF 1\0"
	.byte	0x1
	.uleb128 0x2f7
	.ascii "_GLIBCXX_HAVE_MODFF 1\0"
	.byte	0x1
	.uleb128 0x2fa
	.ascii "_GLIBCXX_HAVE_MODFL 1\0"
	.byte	0x1
	.uleb128 0x303
	.ascii "_GLIBCXX_HAVE_POWF 1\0"
	.byte	0x1
	.uleb128 0x306
	.ascii "_GLIBCXX_HAVE_POWL 1\0"
	.byte	0x1
	.uleb128 0x312
	.ascii "_GLIBCXX_HAVE_SINCOS 1\0"
	.byte	0x1
	.uleb128 0x315
	.ascii "_GLIBCXX_HAVE_SINCOSF 1\0"
	.byte	0x1
	.uleb128 0x318
	.ascii "_GLIBCXX_HAVE_SINCOSL 1\0"
	.byte	0x1
	.uleb128 0x31b
	.ascii "_GLIBCXX_HAVE_SINF 1\0"
	.byte	0x1
	.uleb128 0x31e
	.ascii "_GLIBCXX_HAVE_SINHF 1\0"
	.byte	0x1
	.uleb128 0x321
	.ascii "_GLIBCXX_HAVE_SINHL 1\0"
	.byte	0x1
	.uleb128 0x324
	.ascii "_GLIBCXX_HAVE_SINL 1\0"
	.byte	0x1
	.uleb128 0x32a
	.ascii "_GLIBCXX_HAVE_SQRTF 1\0"
	.byte	0x1
	.uleb128 0x32d
	.ascii "_GLIBCXX_HAVE_SQRTL 1\0"
	.byte	0x1
	.uleb128 0x330
	.ascii "_GLIBCXX_HAVE_STDALIGN_H 1\0"
	.byte	0x1
	.uleb128 0x333
	.ascii "_GLIBCXX_HAVE_STDBOOL_H 1\0"
	.byte	0x1
	.uleb128 0x336
	.ascii "_GLIBCXX_HAVE_STDINT_H 1\0"
	.byte	0x1
	.uleb128 0x339
	.ascii "_GLIBCXX_HAVE_STDLIB_H 1\0"
	.byte	0x1
	.uleb128 0x342
	.ascii "_GLIBCXX_HAVE_STRINGS_H 1\0"
	.byte	0x1
	.uleb128 0x345
	.ascii "_GLIBCXX_HAVE_STRING_H 1\0"
	.byte	0x1
	.uleb128 0x348
	.ascii "_GLIBCXX_HAVE_STRTOF 1\0"
	.byte	0x1
	.uleb128 0x34b
	.ascii "_GLIBCXX_HAVE_STRTOLD 1\0"
	.byte	0x1
	.uleb128 0x352
	.ascii "_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT 1\0"
	.byte	0x1
	.uleb128 0x364
	.ascii "_GLIBCXX_HAVE_SYS_PARAM_H 1\0"
	.byte	0x1
	.uleb128 0x370
	.ascii "_GLIBCXX_HAVE_SYS_STAT_H 1\0"
	.byte	0x1
	.uleb128 0x376
	.ascii "_GLIBCXX_HAVE_SYS_TIME_H 1\0"
	.byte	0x1
	.uleb128 0x379
	.ascii "_GLIBCXX_HAVE_SYS_TYPES_H 1\0"
	.byte	0x1
	.uleb128 0x382
	.ascii "_GLIBCXX_HAVE_S_ISREG 1\0"
	.byte	0x1
	.uleb128 0x385
	.ascii "_GLIBCXX_HAVE_TANF 1\0"
	.byte	0x1
	.uleb128 0x388
	.ascii "_GLIBCXX_HAVE_TANHF 1\0"
	.byte	0x1
	.uleb128 0x38b
	.ascii "_GLIBCXX_HAVE_TANHL 1\0"
	.byte	0x1
	.uleb128 0x38e
	.ascii "_GLIBCXX_HAVE_TANL 1\0"
	.byte	0x1
	.uleb128 0x391
	.ascii "_GLIBCXX_HAVE_TGMATH_H 1\0"
	.byte	0x1
	.uleb128 0x394
	.ascii "_GLIBCXX_HAVE_TLS 1\0"
	.byte	0x1
	.uleb128 0x397
	.ascii "_GLIBCXX_HAVE_UNISTD_H 1\0"
	.byte	0x1
	.uleb128 0x39d
	.ascii "_GLIBCXX_HAVE_VFWSCANF 1\0"
	.byte	0x1
	.uleb128 0x3a0
	.ascii "_GLIBCXX_HAVE_VSWSCANF 1\0"
	.byte	0x1
	.uleb128 0x3a3
	.ascii "_GLIBCXX_HAVE_VWSCANF 1\0"
	.byte	0x1
	.uleb128 0x3a6
	.ascii "_GLIBCXX_HAVE_WCHAR_H 1\0"
	.byte	0x1
	.uleb128 0x3a9
	.ascii "_GLIBCXX_HAVE_WCSTOF 1\0"
	.byte	0x1
	.uleb128 0x3ac
	.ascii "_GLIBCXX_HAVE_WCTYPE_H 1\0"
	.byte	0x1
	.uleb128 0x3ee
	.ascii "_GLIBCXX_HAVE__FINITEF 1\0"
	.byte	0x1
	.uleb128 0x41e
	.ascii "_GLIBCXX_HAVE__ISNANF 1\0"
	.byte	0x1
	.uleb128 0x472
	.ascii "_GLIBCXX_ICONV_CONST \0"
	.byte	0x1
	.uleb128 0x476
	.ascii "LT_OBJDIR \".libs/\"\0"
	.byte	0x1
	.uleb128 0x47c
	.ascii "_GLIBCXX_PACKAGE_BUGREPORT \"\"\0"
	.byte	0x1
	.uleb128 0x47f
	.ascii "_GLIBCXX_PACKAGE_NAME \"package-unused\"\0"
	.byte	0x1
	.uleb128 0x482
	.ascii "_GLIBCXX_PACKAGE_STRING \"package-unused version-unused\"\0"
	.byte	0x1
	.uleb128 0x485
	.ascii "_GLIBCXX_PACKAGE_TARNAME \"libstdc++\"\0"
	.byte	0x1
	.uleb128 0x488
	.ascii "_GLIBCXX_PACKAGE_URL \"\"\0"
	.byte	0x1
	.uleb128 0x48b
	.ascii "_GLIBCXX_PACKAGE__GLIBCXX_VERSION \"version-unused\"\0"
	.byte	0x1
	.uleb128 0x49d
	.ascii "STDC_HEADERS 1\0"
	.byte	0x1
	.uleb128 0x4a3
	.ascii "_GLIBCXX_ATOMIC_BUILTINS 1\0"
	.byte	0x1
	.uleb128 0x4aa
	.ascii "_GLIBCXX_FULLY_DYNAMIC_STRING 1\0"
	.byte	0x1
	.uleb128 0x4ad
	.ascii "_GLIBCXX_HAS_GTHREADS 1\0"
	.byte	0x1
	.uleb128 0x4b0
	.ascii "_GLIBCXX_HOSTED 1\0"
	.byte	0x1
	.uleb128 0x4c1
	.ascii "_GLIBCXX_STDIO_EOF -1\0"
	.byte	0x1
	.uleb128 0x4c4
	.ascii "_GLIBCXX_STDIO_SEEK_CUR 1\0"
	.byte	0x1
	.uleb128 0x4c7
	.ascii "_GLIBCXX_STDIO_SEEK_END 2\0"
	.byte	0x1
	.uleb128 0x4ca
	.ascii "_GLIBCXX_SYMVER 1\0"
	.byte	0x1
	.uleb128 0x4d0
	.ascii "_GLIBCXX_SYMVER_GNU 1\0"
	.byte	0x1
	.uleb128 0x4da
	.ascii "_GLIBCXX_USE_C99 1\0"
	.byte	0x1
	.uleb128 0x4df
	.ascii "_GLIBCXX_USE_C99_COMPLEX 1\0"
	.byte	0x1
	.uleb128 0x4e4
	.ascii "_GLIBCXX_USE_C99_COMPLEX_TR1 1\0"
	.byte	0x1
	.uleb128 0x4e8
	.ascii "_GLIBCXX_USE_C99_CTYPE_TR1 1\0"
	.byte	0x1
	.uleb128 0x4ec
	.ascii "_GLIBCXX_USE_C99_FENV_TR1 1\0"
	.byte	0x1
	.uleb128 0x4f0
	.ascii "_GLIBCXX_USE_C99_INTTYPES_TR1 1\0"
	.byte	0x1
	.uleb128 0x4f4
	.ascii "_GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 1\0"
	.byte	0x1
	.uleb128 0x4f8
	.ascii "_GLIBCXX_USE_C99_MATH 1\0"
	.byte	0x1
	.uleb128 0x4fc
	.ascii "_GLIBCXX_USE_C99_MATH_TR1 1\0"
	.byte	0x1
	.uleb128 0x500
	.ascii "_GLIBCXX_USE_C99_STDINT_TR1 1\0"
	.byte	0x1
	.uleb128 0x507
	.ascii "_GLIBCXX_USE_CLOCK_MONOTONIC 1\0"
	.byte	0x1
	.uleb128 0x50a
	.ascii "_GLIBCXX_USE_CLOCK_REALTIME 1\0"
	.byte	0x1
	.uleb128 0x50e
	.ascii "_GLIBCXX_USE_DECIMAL_FLOAT 1\0"
	.byte	0x1
	.uleb128 0x511
	.ascii "_GLIBCXX_USE_FLOAT128 1\0"
	.byte	0x1
	.uleb128 0x514
	.ascii "_GLIBCXX_USE_GETTIMEOFDAY 1\0"
	.byte	0x1
	.uleb128 0x51a
	.ascii "_GLIBCXX_USE_INT128 1\0"
	.byte	0x1
	.uleb128 0x51d
	.ascii "_GLIBCXX_USE_LFS 1\0"
	.byte	0x1
	.uleb128 0x520
	.ascii "_GLIBCXX_USE_LONG_LONG 1\0"
	.byte	0x1
	.uleb128 0x523
	.ascii "_GLIBCXX_USE_NANOSLEEP 1\0"
	.byte	0x1
	.uleb128 0x529
	.ascii "_GLIBCXX_USE_PTHREADS_NUM_PROCESSORS_NP 1\0"
	.byte	0x1
	.uleb128 0x530
	.ascii "_GLIBCXX_USE_SCHED_YIELD 1\0"
	.byte	0x1
	.uleb128 0x53c
	.ascii "_GLIBCXX_USE_TMPNAM 1\0"
	.byte	0x1
	.uleb128 0x53f
	.ascii "_GLIBCXX_USE_WCHAR_T 1\0"
	.byte	0x1
	.uleb128 0x542
	.ascii "_GLIBCXX_VERBOSE 1\0"
	.byte	0x1
	.uleb128 0x545
	.ascii "_GLIBCXX_X86_RDRAND 1\0"
	.byte	0x1
	.uleb128 0x548
	.ascii "_GTHREAD_USE_MUTEX_TIMEDLOCK 1\0"
	.byte	0x1
	.uleb128 0x5aa
	.ascii "_GLIBCXX_HAVE_FINITEF 1\0"
	.byte	0x1
	.uleb128 0x5ab
	.ascii "finitef _finitef\0"
	.byte	0x1
	.uleb128 0x5fa
	.ascii "_GLIBCXX_HAVE_ISNANF 1\0"
	.byte	0x1
	.uleb128 0x5fb
	.ascii "isnanf _isnanf\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x48
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_CTYPE \0"
	.byte	0x1
	.uleb128 0x10
	.ascii "WEOF (wint_t)(0xFFFF)\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "_CRT_CTYPEDATA_DEFINED \0"
	.byte	0x1
	.uleb128 0x18
	.ascii "__PCTYPE_FUNC __pctype_func()\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "__pctype_func() (* __MINGW_IMP_SYMBOL(_pctype))\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "_pctype (* __MINGW_IMP_SYMBOL(_pctype))\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "_CRT_WCTYPEDATA_DEFINED \0"
	.byte	0x1
	.uleb128 0x34
	.ascii "_wctype (* __MINGW_IMP_SYMBOL(_wctype))\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "__pwctype_func() (* __MINGW_IMP_SYMBOL(_pwctype))\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "_pwctype (* __MINGW_IMP_SYMBOL(_pwctype))\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "_UPPER 0x1\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "_LOWER 0x2\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "_DIGIT 0x4\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "_SPACE 0x8\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "_PUNCT 0x10\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "_CONTROL 0x20\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "_BLANK 0x40\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "_HEX 0x80\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "_LEADBYTE 0x8000\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "_ALPHA (0x0100|_UPPER|_LOWER)\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "_CTYPE_DEFINED \0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "_WCTYPE_DEFINED \0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "__chvalidchk(a,b) (__PCTYPE_FUNC[(a)] & (b))\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "_chvalidchk_l(_Char,_Flag,_Locale) (!_Locale ? __chvalidchk(_Char,_Flag) : ((_locale_t)_Locale)->locinfo->pctype[_Char] & (_Flag))\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "_ischartype_l(_Char,_Flag,_Locale) (((_Locale)!=NULL && (((_locale_t)(_Locale))->locinfo->mb_cur_max) > 1) ? _isctype_l(_Char,(_Flag),_Locale) : _chvalidchk_l(_Char,_Flag,_Locale))\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "_isalpha_l(_Char,_Locale) _ischartype_l(_Char,_ALPHA,_Locale)\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "_isupper_l(_Char,_Locale) _ischartype_l(_Char,_UPPER,_Locale)\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "_islower_l(_Char,_Locale) _ischartype_l(_Char,_LOWER,_Locale)\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "_isdigit_l(_Char,_Locale) _ischartype_l(_Char,_DIGIT,_Locale)\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "_isxdigit_l(_Char,_Locale) _ischartype_l(_Char,_HEX,_Locale)\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "_isspace_l(_Char,_Locale) _ischartype_l(_Char,_SPACE,_Locale)\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "_ispunct_l(_Char,_Locale) _ischartype_l(_Char,_PUNCT,_Locale)\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "_isalnum_l(_Char,_Locale) _ischartype_l(_Char,_ALPHA|_DIGIT,_Locale)\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "_isprint_l(_Char,_Locale) _ischartype_l(_Char,_BLANK|_PUNCT|_ALPHA|_DIGIT,_Locale)\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "_isgraph_l(_Char,_Locale) _ischartype_l(_Char,_PUNCT|_ALPHA|_DIGIT,_Locale)\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "_iscntrl_l(_Char,_Locale) _ischartype_l(_Char,_CONTROL,_Locale)\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "_tolower(_Char) ((_Char)-'A'+'a')\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "_toupper(_Char) ((_Char)-'a'+'A')\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "__isascii(_Char) ((unsigned)(_Char) < 0x80)\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "__toascii(_Char) ((_Char) & 0x7f)\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "_WCTYPE_INLINE_DEFINED \0"
	.byte	0x2
	.uleb128 0xdf
	.ascii "_CRT_WCTYPE_NOINLINE\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "__iscsymf(_c) (isalpha(_c) || ((_c)=='_'))\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "__iscsym(_c) (isalnum(_c) || ((_c)=='_'))\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "__iswcsymf(_c) (iswalpha(_c) || ((_c)=='_'))\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "__iswcsym(_c) (iswalnum(_c) || ((_c)=='_'))\0"
	.byte	0x1
	.uleb128 0xff
	.ascii "_iscsymf_l(_c,_p) (_isalpha_l(_c,_p) || ((_c)=='_'))\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "_iscsym_l(_c,_p) (_isalnum_l(_c,_p) || ((_c)=='_'))\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "_iswcsymf_l(_c,_p) (_iswalpha_l(_c,_p) || ((_c)=='_'))\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "_iswcsym_l(_c,_p) (_iswalnum_l(_c,_p) || ((_c)=='_'))\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "isascii __isascii\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "toascii __toascii\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "iscsymf __iscsymf\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "iscsym __iscsym\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x2d
	.ascii "_GLIBCXX_CCTYPE 1\0"
	.byte	0x2
	.uleb128 0x30
	.ascii "isalnum\0"
	.byte	0x2
	.uleb128 0x31
	.ascii "isalpha\0"
	.byte	0x2
	.uleb128 0x32
	.ascii "iscntrl\0"
	.byte	0x2
	.uleb128 0x33
	.ascii "isdigit\0"
	.byte	0x2
	.uleb128 0x34
	.ascii "isgraph\0"
	.byte	0x2
	.uleb128 0x35
	.ascii "islower\0"
	.byte	0x2
	.uleb128 0x36
	.ascii "isprint\0"
	.byte	0x2
	.uleb128 0x37
	.ascii "ispunct\0"
	.byte	0x2
	.uleb128 0x38
	.ascii "isspace\0"
	.byte	0x2
	.uleb128 0x39
	.ascii "isupper\0"
	.byte	0x2
	.uleb128 0x3a
	.ascii "isxdigit\0"
	.byte	0x2
	.uleb128 0x3b
	.ascii "tolower\0"
	.byte	0x2
	.uleb128 0x3c
	.ascii "toupper\0"
	.byte	0x2
	.uleb128 0x53
	.ascii "isblank\0"
	.byte	0x4
	.file 93 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cerrno"
	.byte	0x3
	.uleb128 0x24
	.uleb128 0x5d
	.file 94 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/errno.h"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x5e
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_ERRNO \0"
	.byte	0x1
	.uleb128 0x18
	.ascii "EPERM 1\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "ENOENT 2\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "ENOFILE ENOENT\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "ESRCH 3\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "EINTR 4\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "EIO 5\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "ENXIO 6\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "E2BIG 7\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "ENOEXEC 8\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "EBADF 9\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "ECHILD 10\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "EAGAIN 11\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "ENOMEM 12\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "EACCES 13\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "EFAULT 14\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "EBUSY 16\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "EEXIST 17\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "EXDEV 18\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "ENODEV 19\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "ENOTDIR 20\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "EISDIR 21\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "ENFILE 23\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "EMFILE 24\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "ENOTTY 25\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "EFBIG 27\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "ENOSPC 28\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "ESPIPE 29\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "EROFS 30\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "EMLINK 31\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "EPIPE 32\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "EDOM 33\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "EDEADLK 36\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "ENAMETOOLONG 38\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "ENOLCK 39\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "ENOSYS 40\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "ENOTEMPTY 41\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "_SECURECRT_ERRCODE_VALUES_DEFINED \0"
	.byte	0x1
	.uleb128 0x40
	.ascii "EINVAL 22\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "ERANGE 34\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "EILSEQ 42\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "STRUNCATE 80\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "EDEADLOCK EDEADLK\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "ENOTSUP 129\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "EAFNOSUPPORT 102\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "EADDRINUSE 100\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "EADDRNOTAVAIL 101\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "EISCONN 113\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "ENOBUFS 119\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "ECONNABORTED 106\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "EALREADY 103\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "ECONNREFUSED 107\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "ECONNRESET 108\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "EDESTADDRREQ 109\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "EHOSTUNREACH 110\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "EMSGSIZE 115\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "ENETDOWN 116\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "ENETRESET 117\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "ENETUNREACH 118\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "ENOPROTOOPT 123\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "ENOTSOCK 128\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "ENOTCONN 126\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "ECANCELED 105\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "EINPROGRESS 112\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "EOPNOTSUPP 130\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "EWOULDBLOCK 140\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "EOWNERDEAD 133\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "EPROTO 134\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "EPROTONOSUPPORT 135\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "ETIMEDOUT 138\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "ELOOP 114\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "EPROTOTYPE 136\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "EOVERFLOW 132\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x2c
	.ascii "_GLIBCXX_CERRNO 1\0"
	.byte	0x4
	.file 95 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cfloat"
	.byte	0x3
	.uleb128 0x25
	.uleb128 0x5f
	.file 96 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/float.h"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x60
	.byte	0x1
	.uleb128 0x1d
	.ascii "_FLOAT_H___ \0"
	.byte	0x2
	.uleb128 0x20
	.ascii "FLT_RADIX\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "FLT_RADIX __FLT_RADIX__\0"
	.byte	0x2
	.uleb128 0x24
	.ascii "FLT_MANT_DIG\0"
	.byte	0x2
	.uleb128 0x25
	.ascii "DBL_MANT_DIG\0"
	.byte	0x2
	.uleb128 0x26
	.ascii "LDBL_MANT_DIG\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "FLT_MANT_DIG __FLT_MANT_DIG__\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "DBL_MANT_DIG __DBL_MANT_DIG__\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "LDBL_MANT_DIG __LDBL_MANT_DIG__\0"
	.byte	0x2
	.uleb128 0x32
	.ascii "FLT_DIG\0"
	.byte	0x2
	.uleb128 0x33
	.ascii "DBL_DIG\0"
	.byte	0x2
	.uleb128 0x34
	.ascii "LDBL_DIG\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "FLT_DIG __FLT_DIG__\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "DBL_DIG __DBL_DIG__\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "LDBL_DIG __LDBL_DIG__\0"
	.byte	0x2
	.uleb128 0x3a
	.ascii "FLT_MIN_EXP\0"
	.byte	0x2
	.uleb128 0x3b
	.ascii "DBL_MIN_EXP\0"
	.byte	0x2
	.uleb128 0x3c
	.ascii "LDBL_MIN_EXP\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "FLT_MIN_EXP __FLT_MIN_EXP__\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "DBL_MIN_EXP __DBL_MIN_EXP__\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "LDBL_MIN_EXP __LDBL_MIN_EXP__\0"
	.byte	0x2
	.uleb128 0x46
	.ascii "FLT_MIN_10_EXP\0"
	.byte	0x2
	.uleb128 0x47
	.ascii "DBL_MIN_10_EXP\0"
	.byte	0x2
	.uleb128 0x48
	.ascii "LDBL_MIN_10_EXP\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "FLT_MIN_10_EXP __FLT_MIN_10_EXP__\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "DBL_MIN_10_EXP __DBL_MIN_10_EXP__\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "LDBL_MIN_10_EXP __LDBL_MIN_10_EXP__\0"
	.byte	0x2
	.uleb128 0x4e
	.ascii "FLT_MAX_EXP\0"
	.byte	0x2
	.uleb128 0x4f
	.ascii "DBL_MAX_EXP\0"
	.byte	0x2
	.uleb128 0x50
	.ascii "LDBL_MAX_EXP\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "FLT_MAX_EXP __FLT_MAX_EXP__\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "DBL_MAX_EXP __DBL_MAX_EXP__\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "LDBL_MAX_EXP __LDBL_MAX_EXP__\0"
	.byte	0x2
	.uleb128 0x5a
	.ascii "FLT_MAX_10_EXP\0"
	.byte	0x2
	.uleb128 0x5b
	.ascii "DBL_MAX_10_EXP\0"
	.byte	0x2
	.uleb128 0x5c
	.ascii "LDBL_MAX_10_EXP\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "FLT_MAX_10_EXP __FLT_MAX_10_EXP__\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "DBL_MAX_10_EXP __DBL_MAX_10_EXP__\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "LDBL_MAX_10_EXP __LDBL_MAX_10_EXP__\0"
	.byte	0x2
	.uleb128 0x65
	.ascii "FLT_MAX\0"
	.byte	0x2
	.uleb128 0x66
	.ascii "DBL_MAX\0"
	.byte	0x2
	.uleb128 0x67
	.ascii "LDBL_MAX\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "FLT_MAX __FLT_MAX__\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "DBL_MAX __DBL_MAX__\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "LDBL_MAX __LDBL_MAX__\0"
	.byte	0x2
	.uleb128 0x6e
	.ascii "FLT_EPSILON\0"
	.byte	0x2
	.uleb128 0x6f
	.ascii "DBL_EPSILON\0"
	.byte	0x2
	.uleb128 0x70
	.ascii "LDBL_EPSILON\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "FLT_EPSILON __FLT_EPSILON__\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "DBL_EPSILON __DBL_EPSILON__\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "LDBL_EPSILON __LDBL_EPSILON__\0"
	.byte	0x2
	.uleb128 0x76
	.ascii "FLT_MIN\0"
	.byte	0x2
	.uleb128 0x77
	.ascii "DBL_MIN\0"
	.byte	0x2
	.uleb128 0x78
	.ascii "LDBL_MIN\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "FLT_MIN __FLT_MIN__\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "DBL_MIN __DBL_MIN__\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "LDBL_MIN __LDBL_MIN__\0"
	.byte	0x2
	.uleb128 0x7f
	.ascii "FLT_ROUNDS\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "FLT_ROUNDS 1\0"
	.file 97 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/float.h"
	.byte	0x3
	.uleb128 0x116
	.uleb128 0x61
	.byte	0x1
	.uleb128 0x77
	.ascii "_MINGW_FLOAT_H_ \0"
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x2c
	.ascii "_GLIBCXX_CFLOAT 1\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "DECIMAL_DIG __DECIMAL_DIG__\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "FLT_EVAL_METHOD __FLT_EVAL_METHOD__\0"
	.byte	0x4
	.file 98 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ciso646"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0x62
	.byte	0x4
	.file 99 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/climits"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x63
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x55
	.byte	0x4
	.byte	0x1
	.uleb128 0x2c
	.ascii "_GLIBCXX_CLIMITS 1\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x28
	.uleb128 0xc
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x9
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_LOCALE \0"
	.byte	0x3
	.uleb128 0xc
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_STDIO \0"
	.file 100 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/_mingw_print_push.h"
	.byte	0x3
	.uleb128 0xb
	.uleb128 0x64
	.byte	0x4
	.byte	0x1
	.uleb128 0x13
	.ascii "BUFSIZ 512\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "_NFILE _NSTREAM_\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "_NSTREAM_ 512\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "_IOB_ENTRIES 20\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "EOF (-1)\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "_FILE_DEFINED \0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "_P_tmpdir \"\\\\\"\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "_wP_tmpdir L\"\\\\\"\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "L_tmpnam (sizeof(_P_tmpdir) + 12)\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "SEEK_CUR 1\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "SEEK_END 2\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "SEEK_SET 0\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "STDIN_FILENO 0\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "STDOUT_FILENO 1\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "STDERR_FILENO 2\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "FILENAME_MAX 260\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "FOPEN_MAX 20\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "_SYS_OPEN 20\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "TMP_MAX 32767\0"
	.file 101 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/_mingw_off_t.h"
	.byte	0x3
	.uleb128 0x50
	.uleb128 0x65
	.byte	0x1
	.uleb128 0x2
	.ascii "_OFF_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x4
	.ascii "_OFF_T_ \0"
	.byte	0x1
	.uleb128 0xc
	.ascii "_OFF64_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "_FILE_OFFSET_BITS_SET_OFFT \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x55
	.ascii "_iob __iob_func()\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "_FPOS_T_DEFINED \0"
	.byte	0x2
	.uleb128 0x64
	.ascii "_FPOSOFF\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "_FPOSOFF(fp) ((long)(fp))\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "_STDSTREAM_DEFINED \0"
	.byte	0x1
	.uleb128 0x73
	.ascii "stdin (&__iob_func()[0])\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "stdout (&__iob_func()[1])\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "stderr (&__iob_func()[2])\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "_IOREAD 0x0001\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "_IOWRT 0x0002\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "_IOFBF 0x0000\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "_IOLBF 0x0040\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "_IONBF 0x0004\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "_IOMYBUF 0x0008\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "_IOEOF 0x0010\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "_IOERR 0x0020\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "_IOSTRG 0x0040\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "_IORW 0x0080\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "_TWO_DIGIT_EXPONENT 0x1\0"
	.byte	0x2
	.uleb128 0xc2
	.ascii "__MINGW_PRINTF_FORMAT\0"
	.byte	0x2
	.uleb128 0xc3
	.ascii "__MINGW_SCANF_FORMAT\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "__MINGW_PRINTF_FORMAT gnu_printf\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "__MINGW_SCANF_FORMAT gnu_scanf\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "__builtin_vsnprintf __mingw_vsnprintf\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "__builtin_vsprintf __mingw_vsprintf\0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "_FILE_OFFSET_BITS_SET_FSEEKO \0"
	.byte	0x1
	.uleb128 0x1de
	.ascii "_FILE_OFFSET_BITS_SET_FTELLO \0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "popen _popen\0"
	.byte	0x1
	.uleb128 0x1f4
	.ascii "pclose _pclose\0"
	.byte	0x1
	.uleb128 0x1fb
	.ascii "_CRT_DIRECTORY_DEFINED \0"
	.byte	0x1
	.uleb128 0x23c
	.ascii "_WSTDIO_DEFINED \0"
	.byte	0x3
	.uleb128 0x338
	.uleb128 0x43
	.byte	0x1
	.uleb128 0x8
	.ascii "_INC_SWPRINTF_INL \0"
	.byte	0x2
	.uleb128 0xc
	.ascii "__mingw_ovr\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "__mingw_ovr static __attribute__ ((__unused__)) __inline__ __cdecl\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x34f
	.ascii "wpopen _wpopen\0"
	.byte	0x2
	.uleb128 0x358
	.ascii "_CRT_GETPUTWCHAR_NOINLINE\0"
	.byte	0x1
	.uleb128 0x35b
	.ascii "getwchar() fgetwc(stdin)\0"
	.byte	0x1
	.uleb128 0x35c
	.ascii "putwchar(_c) fputwc((_c),stdout)\0"
	.byte	0x1
	.uleb128 0x362
	.ascii "getwc(_stm) fgetwc(_stm)\0"
	.byte	0x1
	.uleb128 0x363
	.ascii "putwc(_c,_stm) fputwc(_c,_stm)\0"
	.byte	0x1
	.uleb128 0x364
	.ascii "_putwc_nolock(_c,_stm) _fputwc_nolock(_c,_stm)\0"
	.byte	0x1
	.uleb128 0x365
	.ascii "_getwc_nolock(_c) _fgetwc_nolock(_c)\0"
	.byte	0x1
	.uleb128 0x368
	.ascii "_STDIO_DEFINED \0"
	.byte	0x1
	.uleb128 0x36b
	.ascii "_fgetc_nolock(_stream) (--(_stream)->_cnt >= 0 ? 0xff & *(_stream)->_ptr++ : _filbuf(_stream))\0"
	.byte	0x1
	.uleb128 0x36c
	.ascii "_fputc_nolock(_c,_stream) (--(_stream)->_cnt >= 0 ? 0xff & (*(_stream)->_ptr++ = (char)(_c)) : _flsbuf((_c),(_stream)))\0"
	.byte	0x1
	.uleb128 0x36d
	.ascii "_getc_nolock(_stream) _fgetc_nolock(_stream)\0"
	.byte	0x1
	.uleb128 0x36e
	.ascii "_putc_nolock(_c,_stream) _fputc_nolock(_c,_stream)\0"
	.byte	0x1
	.uleb128 0x36f
	.ascii "_getchar_nolock() _getc_nolock(stdin)\0"
	.byte	0x1
	.uleb128 0x370
	.ascii "_putchar_nolock(_c) _putc_nolock((_c),stdout)\0"
	.byte	0x1
	.uleb128 0x371
	.ascii "_getwchar_nolock() _getwc_nolock(stdin)\0"
	.byte	0x1
	.uleb128 0x372
	.ascii "_putwchar_nolock(_c) _putwc_nolock((_c),stdout)\0"
	.byte	0x1
	.uleb128 0x381
	.ascii "P_tmpdir _P_tmpdir\0"
	.byte	0x1
	.uleb128 0x382
	.ascii "SYS_OPEN _SYS_OPEN\0"
	.byte	0x1
	.uleb128 0x391
	.ascii "__MINGW_MBWC_CONVERT_DEFINED \0"
	.file 102 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sec_api/stdio_s.h"
	.byte	0x3
	.uleb128 0x3bf
	.uleb128 0x66
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_STDIO_S \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0xb
	.byte	0x4
	.byte	0x4
	.file 103 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/_mingw_print_pop.h"
	.byte	0x3
	.uleb128 0x3c1
	.uleb128 0x67
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x21
	.ascii "LC_ALL 0\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "LC_COLLATE 1\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "LC_CTYPE 2\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "LC_MONETARY 3\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "LC_NUMERIC 4\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "LC_TIME 5\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "LC_MIN LC_ALL\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "LC_MAX LC_TIME\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "_LCONV_DEFINED \0"
	.byte	0x1
	.uleb128 0x44
	.ascii "_CONFIG_LOCALE_SWT \0"
	.byte	0x1
	.uleb128 0x46
	.ascii "_ENABLE_PER_THREAD_LOCALE 0x1\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "_DISABLE_PER_THREAD_LOCALE 0x2\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "_ENABLE_PER_THREAD_LOCALE_GLOBAL 0x10\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "_DISABLE_PER_THREAD_LOCALE_GLOBAL 0x20\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "_ENABLE_PER_THREAD_LOCALE_NEW 0x100\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "_DISABLE_PER_THREAD_LOCALE_NEW 0x200\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "_WLOCALE_DEFINED \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x2d
	.ascii "_GLIBCXX_CLOCALE 1\0"
	.byte	0x2
	.uleb128 0x30
	.ascii "setlocale\0"
	.byte	0x2
	.uleb128 0x31
	.ascii "localeconv\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x29
	.uleb128 0xd
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x36
	.byte	0x1
	.uleb128 0x21
	.ascii "_CPP_TYPE_TRAITS_H 1\0"
	.byte	0x4
	.file 104 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/type_traits.h"
	.byte	0x3
	.uleb128 0x2b
	.uleb128 0x68
	.byte	0x1
	.uleb128 0x1e
	.ascii "_EXT_TYPE_TRAITS 1\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x2c
	.uleb128 0x3c
	.byte	0x1
	.uleb128 0x7
	.ascii "_MATH_H_ \0"
	.byte	0x1
	.uleb128 0x13
	.ascii "_DOMAIN 1\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "_SING 2\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "_OVERFLOW 3\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "_UNDERFLOW 4\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "_TLOSS 5\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "_PLOSS 6\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "__MINGW_SOFTMATH \0"
	.byte	0x1
	.uleb128 0x70
	.ascii "_HUGE (* __MINGW_IMP_SYMBOL(_HUGE))\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "HUGE_VAL __builtin_huge_val()\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "_EXCEPTION_DEFINED \0"
	.byte	0x1
	.uleb128 0x87
	.ascii "__setusermatherr __mingw_setusermatherr\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "EDOM 33\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "ERANGE 34\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "HUGE_VALF __builtin_huge_valf()\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "HUGE_VALL __builtin_huge_vall()\0"
	.byte	0x1
	.uleb128 0x133
	.ascii "INFINITY __builtin_inf()\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "NAN __builtin_nan(\"\")\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "FP_NAN 0x0100\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "FP_NORMAL 0x0400\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "FP_INFINITE (FP_NAN | FP_NORMAL)\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "FP_ZERO 0x4000\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "FP_SUBNORMAL (FP_NORMAL | FP_ZERO)\0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "fpclassify(x) (sizeof (x) == sizeof (float) ? __fpclassifyf (x) : sizeof (x) == sizeof (double) ? __fpclassify (x) : __fpclassifyl (x))\0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "isfinite(x) ((fpclassify(x) & FP_NAN) == 0)\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "isinf(x) (fpclassify(x) == FP_INFINITE)\0"
	.byte	0x1
	.uleb128 0x1e0
	.ascii "isnan(x) (sizeof (x) == sizeof (float) ? __isnanf (x) : sizeof (x) == sizeof (double) ? __isnan (x) : __isnanl (x))\0"
	.byte	0x1
	.uleb128 0x1e5
	.ascii "isnormal(x) (fpclassify(x) == FP_NORMAL)\0"
	.byte	0x1
	.uleb128 0x20c
	.ascii "signbit(x) (sizeof (x) == sizeof (float) ? __signbitf (x) : sizeof (x) == sizeof (double) ? __signbit (x) : __signbitl (x))\0"
	.byte	0x1
	.uleb128 0x263
	.ascii "FP_ILOGB0 ((int)0x80000000)\0"
	.byte	0x1
	.uleb128 0x264
	.ascii "FP_ILOGBNAN ((int)0x80000000)\0"
	.byte	0x1
	.uleb128 0x3dd
	.ascii "isgreater(x,y) __builtin_isgreater(x, y)\0"
	.byte	0x1
	.uleb128 0x3de
	.ascii "isgreaterequal(x,y) __builtin_isgreaterequal(x, y)\0"
	.byte	0x1
	.uleb128 0x3df
	.ascii "isless(x,y) __builtin_isless(x, y)\0"
	.byte	0x1
	.uleb128 0x3e0
	.ascii "islessequal(x,y) __builtin_islessequal(x, y)\0"
	.byte	0x1
	.uleb128 0x3e1
	.ascii "islessgreater(x,y) __builtin_islessgreater(x, y)\0"
	.byte	0x1
	.uleb128 0x3e2
	.ascii "isunordered(x,y) __builtin_isunordered(x, y)\0"
	.byte	0x1
	.uleb128 0x40f
	.ascii "_hypotl hypotl\0"
	.byte	0x1
	.uleb128 0x412
	.ascii "matherr _matherr\0"
	.byte	0x1
	.uleb128 0x413
	.ascii "HUGE _HUGE\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x2f
	.ascii "_GLIBCXX_CMATH 1\0"
	.byte	0x2
	.uleb128 0x32
	.ascii "abs\0"
	.byte	0x2
	.uleb128 0x33
	.ascii "div\0"
	.byte	0x2
	.uleb128 0x34
	.ascii "acos\0"
	.byte	0x2
	.uleb128 0x35
	.ascii "asin\0"
	.byte	0x2
	.uleb128 0x36
	.ascii "atan\0"
	.byte	0x2
	.uleb128 0x37
	.ascii "atan2\0"
	.byte	0x2
	.uleb128 0x38
	.ascii "ceil\0"
	.byte	0x2
	.uleb128 0x39
	.ascii "cos\0"
	.byte	0x2
	.uleb128 0x3a
	.ascii "cosh\0"
	.byte	0x2
	.uleb128 0x3b
	.ascii "exp\0"
	.byte	0x2
	.uleb128 0x3c
	.ascii "fabs\0"
	.byte	0x2
	.uleb128 0x3d
	.ascii "floor\0"
	.byte	0x2
	.uleb128 0x3e
	.ascii "fmod\0"
	.byte	0x2
	.uleb128 0x3f
	.ascii "frexp\0"
	.byte	0x2
	.uleb128 0x40
	.ascii "ldexp\0"
	.byte	0x2
	.uleb128 0x41
	.ascii "log\0"
	.byte	0x2
	.uleb128 0x42
	.ascii "log10\0"
	.byte	0x2
	.uleb128 0x43
	.ascii "modf\0"
	.byte	0x2
	.uleb128 0x44
	.ascii "pow\0"
	.byte	0x2
	.uleb128 0x45
	.ascii "sin\0"
	.byte	0x2
	.uleb128 0x46
	.ascii "sinh\0"
	.byte	0x2
	.uleb128 0x47
	.ascii "sqrt\0"
	.byte	0x2
	.uleb128 0x48
	.ascii "tan\0"
	.byte	0x2
	.uleb128 0x49
	.ascii "tanh\0"
	.byte	0x2
	.uleb128 0x21e
	.ascii "fpclassify\0"
	.byte	0x2
	.uleb128 0x21f
	.ascii "isfinite\0"
	.byte	0x2
	.uleb128 0x220
	.ascii "isinf\0"
	.byte	0x2
	.uleb128 0x221
	.ascii "isnan\0"
	.byte	0x2
	.uleb128 0x222
	.ascii "isnormal\0"
	.byte	0x2
	.uleb128 0x223
	.ascii "signbit\0"
	.byte	0x2
	.uleb128 0x224
	.ascii "isgreater\0"
	.byte	0x2
	.uleb128 0x225
	.ascii "isgreaterequal\0"
	.byte	0x2
	.uleb128 0x226
	.ascii "isless\0"
	.byte	0x2
	.uleb128 0x227
	.ascii "islessequal\0"
	.byte	0x2
	.uleb128 0x228
	.ascii "islessgreater\0"
	.byte	0x2
	.uleb128 0x229
	.ascii "isunordered\0"
	.byte	0x2
	.uleb128 0x39f
	.ascii "acosh\0"
	.byte	0x2
	.uleb128 0x3a0
	.ascii "acoshf\0"
	.byte	0x2
	.uleb128 0x3a1
	.ascii "acoshl\0"
	.byte	0x2
	.uleb128 0x3a2
	.ascii "asinh\0"
	.byte	0x2
	.uleb128 0x3a3
	.ascii "asinhf\0"
	.byte	0x2
	.uleb128 0x3a4
	.ascii "asinhl\0"
	.byte	0x2
	.uleb128 0x3a5
	.ascii "atanh\0"
	.byte	0x2
	.uleb128 0x3a6
	.ascii "atanhf\0"
	.byte	0x2
	.uleb128 0x3a7
	.ascii "atanhl\0"
	.byte	0x2
	.uleb128 0x3a8
	.ascii "cbrt\0"
	.byte	0x2
	.uleb128 0x3a9
	.ascii "cbrtf\0"
	.byte	0x2
	.uleb128 0x3aa
	.ascii "cbrtl\0"
	.byte	0x2
	.uleb128 0x3ab
	.ascii "copysign\0"
	.byte	0x2
	.uleb128 0x3ac
	.ascii "copysignf\0"
	.byte	0x2
	.uleb128 0x3ad
	.ascii "copysignl\0"
	.byte	0x2
	.uleb128 0x3ae
	.ascii "erf\0"
	.byte	0x2
	.uleb128 0x3af
	.ascii "erff\0"
	.byte	0x2
	.uleb128 0x3b0
	.ascii "erfl\0"
	.byte	0x2
	.uleb128 0x3b1
	.ascii "erfc\0"
	.byte	0x2
	.uleb128 0x3b2
	.ascii "erfcf\0"
	.byte	0x2
	.uleb128 0x3b3
	.ascii "erfcl\0"
	.byte	0x2
	.uleb128 0x3b4
	.ascii "exp2\0"
	.byte	0x2
	.uleb128 0x3b5
	.ascii "exp2f\0"
	.byte	0x2
	.uleb128 0x3b6
	.ascii "exp2l\0"
	.byte	0x2
	.uleb128 0x3b7
	.ascii "expm1\0"
	.byte	0x2
	.uleb128 0x3b8
	.ascii "expm1f\0"
	.byte	0x2
	.uleb128 0x3b9
	.ascii "expm1l\0"
	.byte	0x2
	.uleb128 0x3ba
	.ascii "fdim\0"
	.byte	0x2
	.uleb128 0x3bb
	.ascii "fdimf\0"
	.byte	0x2
	.uleb128 0x3bc
	.ascii "fdiml\0"
	.byte	0x2
	.uleb128 0x3bd
	.ascii "fma\0"
	.byte	0x2
	.uleb128 0x3be
	.ascii "fmaf\0"
	.byte	0x2
	.uleb128 0x3bf
	.ascii "fmal\0"
	.byte	0x2
	.uleb128 0x3c0
	.ascii "fmax\0"
	.byte	0x2
	.uleb128 0x3c1
	.ascii "fmaxf\0"
	.byte	0x2
	.uleb128 0x3c2
	.ascii "fmaxl\0"
	.byte	0x2
	.uleb128 0x3c3
	.ascii "fmin\0"
	.byte	0x2
	.uleb128 0x3c4
	.ascii "fminf\0"
	.byte	0x2
	.uleb128 0x3c5
	.ascii "fminl\0"
	.byte	0x2
	.uleb128 0x3c6
	.ascii "hypot\0"
	.byte	0x2
	.uleb128 0x3c7
	.ascii "hypotf\0"
	.byte	0x2
	.uleb128 0x3c8
	.ascii "hypotl\0"
	.byte	0x2
	.uleb128 0x3c9
	.ascii "ilogb\0"
	.byte	0x2
	.uleb128 0x3ca
	.ascii "ilogbf\0"
	.byte	0x2
	.uleb128 0x3cb
	.ascii "ilogbl\0"
	.byte	0x2
	.uleb128 0x3cc
	.ascii "lgamma\0"
	.byte	0x2
	.uleb128 0x3cd
	.ascii "lgammaf\0"
	.byte	0x2
	.uleb128 0x3ce
	.ascii "lgammal\0"
	.byte	0x2
	.uleb128 0x3cf
	.ascii "llrint\0"
	.byte	0x2
	.uleb128 0x3d0
	.ascii "llrintf\0"
	.byte	0x2
	.uleb128 0x3d1
	.ascii "llrintl\0"
	.byte	0x2
	.uleb128 0x3d2
	.ascii "llround\0"
	.byte	0x2
	.uleb128 0x3d3
	.ascii "llroundf\0"
	.byte	0x2
	.uleb128 0x3d4
	.ascii "llroundl\0"
	.byte	0x2
	.uleb128 0x3d5
	.ascii "log1p\0"
	.byte	0x2
	.uleb128 0x3d6
	.ascii "log1pf\0"
	.byte	0x2
	.uleb128 0x3d7
	.ascii "log1pl\0"
	.byte	0x2
	.uleb128 0x3d8
	.ascii "log2\0"
	.byte	0x2
	.uleb128 0x3d9
	.ascii "log2f\0"
	.byte	0x2
	.uleb128 0x3da
	.ascii "log2l\0"
	.byte	0x2
	.uleb128 0x3db
	.ascii "logb\0"
	.byte	0x2
	.uleb128 0x3dc
	.ascii "logbf\0"
	.byte	0x2
	.uleb128 0x3dd
	.ascii "logbl\0"
	.byte	0x2
	.uleb128 0x3de
	.ascii "lrint\0"
	.byte	0x2
	.uleb128 0x3df
	.ascii "lrintf\0"
	.byte	0x2
	.uleb128 0x3e0
	.ascii "lrintl\0"
	.byte	0x2
	.uleb128 0x3e1
	.ascii "lround\0"
	.byte	0x2
	.uleb128 0x3e2
	.ascii "lroundf\0"
	.byte	0x2
	.uleb128 0x3e3
	.ascii "lroundl\0"
	.byte	0x2
	.uleb128 0x3e4
	.ascii "nan\0"
	.byte	0x2
	.uleb128 0x3e5
	.ascii "nanf\0"
	.byte	0x2
	.uleb128 0x3e6
	.ascii "nanl\0"
	.byte	0x2
	.uleb128 0x3e7
	.ascii "nearbyint\0"
	.byte	0x2
	.uleb128 0x3e8
	.ascii "nearbyintf\0"
	.byte	0x2
	.uleb128 0x3e9
	.ascii "nearbyintl\0"
	.byte	0x2
	.uleb128 0x3ea
	.ascii "nextafter\0"
	.byte	0x2
	.uleb128 0x3eb
	.ascii "nextafterf\0"
	.byte	0x2
	.uleb128 0x3ec
	.ascii "nextafterl\0"
	.byte	0x2
	.uleb128 0x3ed
	.ascii "nexttoward\0"
	.byte	0x2
	.uleb128 0x3ee
	.ascii "nexttowardf\0"
	.byte	0x2
	.uleb128 0x3ef
	.ascii "nexttowardl\0"
	.byte	0x2
	.uleb128 0x3f0
	.ascii "remainder\0"
	.byte	0x2
	.uleb128 0x3f1
	.ascii "remainderf\0"
	.byte	0x2
	.uleb128 0x3f2
	.ascii "remainderl\0"
	.byte	0x2
	.uleb128 0x3f3
	.ascii "remquo\0"
	.byte	0x2
	.uleb128 0x3f4
	.ascii "remquof\0"
	.byte	0x2
	.uleb128 0x3f5
	.ascii "remquol\0"
	.byte	0x2
	.uleb128 0x3f6
	.ascii "rint\0"
	.byte	0x2
	.uleb128 0x3f7
	.ascii "rintf\0"
	.byte	0x2
	.uleb128 0x3f8
	.ascii "rintl\0"
	.byte	0x2
	.uleb128 0x3f9
	.ascii "round\0"
	.byte	0x2
	.uleb128 0x3fa
	.ascii "roundf\0"
	.byte	0x2
	.uleb128 0x3fb
	.ascii "roundl\0"
	.byte	0x2
	.uleb128 0x3fc
	.ascii "scalbln\0"
	.byte	0x2
	.uleb128 0x3fd
	.ascii "scalblnf\0"
	.byte	0x2
	.uleb128 0x3fe
	.ascii "scalblnl\0"
	.byte	0x2
	.uleb128 0x3ff
	.ascii "scalbn\0"
	.byte	0x2
	.uleb128 0x400
	.ascii "scalbnf\0"
	.byte	0x2
	.uleb128 0x401
	.ascii "scalbnl\0"
	.byte	0x2
	.uleb128 0x402
	.ascii "tgamma\0"
	.byte	0x2
	.uleb128 0x403
	.ascii "tgammaf\0"
	.byte	0x2
	.uleb128 0x404
	.ascii "tgammal\0"
	.byte	0x2
	.uleb128 0x405
	.ascii "trunc\0"
	.byte	0x2
	.uleb128 0x406
	.ascii "truncf\0"
	.byte	0x2
	.uleb128 0x407
	.ascii "truncl\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0xe
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x3d
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_SETJMP \0"
	.byte	0x1
	.uleb128 0x74
	.ascii "_JBLEN 16\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "_JMP_BUF_DEFINED \0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "setjmp(BUF) _setjmp((BUF), __builtin_frame_address (0))\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x2d
	.ascii "_GLIBCXX_CSETJMP 1\0"
	.byte	0x2
	.uleb128 0x30
	.ascii "longjmp\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x2b
	.uleb128 0xf
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x3e
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_SIGNAL \0"
	.file 105 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/pthread_signal.h"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x69
	.byte	0x1
	.uleb128 0x18
	.ascii "WIN_PTHREADS_SIGNAL_H \0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "pthread_sigmask(H,S1,S2) 0\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x11
	.ascii "_SIG_ATOMIC_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "NSIG 23\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "SIGINT 2\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "SIGILL 4\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "SIGABRT_COMPAT 6\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "SIGFPE 8\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "SIGSEGV 11\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "SIGTERM 15\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "SIGBREAK 21\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "SIGABRT 22\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "SIGABRT2 22\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "SIG_DFL (__p_sig_fn_t)0\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "SIG_IGN (__p_sig_fn_t)1\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "SIG_GET (__p_sig_fn_t)2\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "SIG_SGE (__p_sig_fn_t)3\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "SIG_ACK (__p_sig_fn_t)4\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "SIG_ERR (__p_sig_fn_t)-1\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "_pxcptinfoptrs (*__pxcptinfoptrs())\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x2d
	.ascii "_GLIBCXX_CSIGNAL 1\0"
	.byte	0x2
	.uleb128 0x30
	.ascii "raise\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x2c
	.uleb128 0x10
	.file 106 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/stdarg.h"
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x6a
	.file 107 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdarg.h"
	.byte	0x3
	.uleb128 0x1
	.uleb128 0x6b
	.byte	0x1
	.uleb128 0x24
	.ascii "_STDARG_H \0"
	.byte	0x1
	.uleb128 0x25
	.ascii "_ANSI_STDARG_H_ \0"
	.byte	0x2
	.uleb128 0x27
	.ascii "__need___va_list\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "va_start(v,l) __builtin_va_start(v,l)\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "va_end(v) __builtin_va_end(v)\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "va_arg(v,l) __builtin_va_arg(v,l)\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "va_copy(d,s) __builtin_va_copy(d,s)\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "__va_copy(d,s) __builtin_va_copy(d,s)\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "_VA_LIST_ \0"
	.byte	0x1
	.uleb128 0x74
	.ascii "_VA_LIST \0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "_VA_LIST_T_H \0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "__va_list__ \0"
	.file 108 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/_mingw_stdarg.h"
	.byte	0x3
	.uleb128 0x8c
	.uleb128 0x6c
	.byte	0x1
	.uleb128 0x8
	.ascii "_INC_STDARG \0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x2d
	.ascii "_GLIBCXX_CSTDARG 1\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x2d
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x28
	.ascii "_GLIBCXX_CSTDDEF 1\0"
	.file 109 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/stddef.h"
	.byte	0x3
	.uleb128 0x2d
	.uleb128 0x6d
	.byte	0x3
	.uleb128 0x1
	.uleb128 0x3f
	.byte	0x1
	.uleb128 0xa
	.ascii "_INC_STDDEF \0"
	.byte	0x1
	.uleb128 0x19
	.ascii "_threadid (__threadid())\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "_STDDEF_H \0"
	.byte	0x1
	.uleb128 0x32
	.ascii "_STDDEF_H_ \0"
	.byte	0x1
	.uleb128 0x34
	.ascii "_ANSI_STDDEF_H \0"
	.byte	0x1
	.uleb128 0x36
	.ascii "__STDDEF_H__ \0"
	.byte	0x2
	.uleb128 0xa3
	.ascii "__need_ptrdiff_t\0"
	.byte	0x2
	.uleb128 0xf0
	.ascii "__need_size_t\0"
	.byte	0x2
	.uleb128 0x151
	.ascii "__need_wchar_t\0"
	.byte	0x2
	.uleb128 0x18a
	.ascii "NULL\0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "NULL __null\0"
	.byte	0x2
	.uleb128 0x199
	.ascii "__need_NULL\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "_GCC_MAX_ALIGN_T \0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x2e
	.uleb128 0x12
	.byte	0x1
	.uleb128 0x2d
	.ascii "_GLIBCXX_CSTDIO 1\0"
	.byte	0x2
	.uleb128 0x34
	.ascii "clearerr\0"
	.byte	0x2
	.uleb128 0x35
	.ascii "fclose\0"
	.byte	0x2
	.uleb128 0x36
	.ascii "feof\0"
	.byte	0x2
	.uleb128 0x37
	.ascii "ferror\0"
	.byte	0x2
	.uleb128 0x38
	.ascii "fflush\0"
	.byte	0x2
	.uleb128 0x39
	.ascii "fgetc\0"
	.byte	0x2
	.uleb128 0x3a
	.ascii "fgetpos\0"
	.byte	0x2
	.uleb128 0x3b
	.ascii "fgets\0"
	.byte	0x2
	.uleb128 0x3c
	.ascii "fopen\0"
	.byte	0x2
	.uleb128 0x3d
	.ascii "fprintf\0"
	.byte	0x2
	.uleb128 0x3e
	.ascii "fputc\0"
	.byte	0x2
	.uleb128 0x3f
	.ascii "fputs\0"
	.byte	0x2
	.uleb128 0x40
	.ascii "fread\0"
	.byte	0x2
	.uleb128 0x41
	.ascii "freopen\0"
	.byte	0x2
	.uleb128 0x42
	.ascii "fscanf\0"
	.byte	0x2
	.uleb128 0x43
	.ascii "fseek\0"
	.byte	0x2
	.uleb128 0x44
	.ascii "fsetpos\0"
	.byte	0x2
	.uleb128 0x45
	.ascii "ftell\0"
	.byte	0x2
	.uleb128 0x46
	.ascii "fwrite\0"
	.byte	0x2
	.uleb128 0x47
	.ascii "getc\0"
	.byte	0x2
	.uleb128 0x48
	.ascii "getchar\0"
	.byte	0x2
	.uleb128 0x4a
	.ascii "gets\0"
	.byte	0x2
	.uleb128 0x4c
	.ascii "perror\0"
	.byte	0x2
	.uleb128 0x4d
	.ascii "printf\0"
	.byte	0x2
	.uleb128 0x4e
	.ascii "putc\0"
	.byte	0x2
	.uleb128 0x4f
	.ascii "putchar\0"
	.byte	0x2
	.uleb128 0x50
	.ascii "puts\0"
	.byte	0x2
	.uleb128 0x51
	.ascii "remove\0"
	.byte	0x2
	.uleb128 0x52
	.ascii "rename\0"
	.byte	0x2
	.uleb128 0x53
	.ascii "rewind\0"
	.byte	0x2
	.uleb128 0x54
	.ascii "scanf\0"
	.byte	0x2
	.uleb128 0x55
	.ascii "setbuf\0"
	.byte	0x2
	.uleb128 0x56
	.ascii "setvbuf\0"
	.byte	0x2
	.uleb128 0x57
	.ascii "sprintf\0"
	.byte	0x2
	.uleb128 0x58
	.ascii "sscanf\0"
	.byte	0x2
	.uleb128 0x59
	.ascii "tmpfile\0"
	.byte	0x2
	.uleb128 0x5a
	.ascii "tmpnam\0"
	.byte	0x2
	.uleb128 0x5b
	.ascii "ungetc\0"
	.byte	0x2
	.uleb128 0x5c
	.ascii "vfprintf\0"
	.byte	0x2
	.uleb128 0x5d
	.ascii "vprintf\0"
	.byte	0x2
	.uleb128 0x5e
	.ascii "vsprintf\0"
	.byte	0x2
	.uleb128 0x97
	.ascii "snprintf\0"
	.byte	0x2
	.uleb128 0x98
	.ascii "vfscanf\0"
	.byte	0x2
	.uleb128 0x99
	.ascii "vscanf\0"
	.byte	0x2
	.uleb128 0x9a
	.ascii "vsnprintf\0"
	.byte	0x2
	.uleb128 0x9b
	.ascii "vsscanf\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x2f
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x2c
	.ascii "_GLIBCXX_CSTDLIB 1\0"
	.byte	0x2
	.uleb128 0x4b
	.ascii "abort\0"
	.byte	0x2
	.uleb128 0x4c
	.ascii "abs\0"
	.byte	0x2
	.uleb128 0x4d
	.ascii "atexit\0"
	.byte	0x2
	.uleb128 0x53
	.ascii "atof\0"
	.byte	0x2
	.uleb128 0x54
	.ascii "atoi\0"
	.byte	0x2
	.uleb128 0x55
	.ascii "atol\0"
	.byte	0x2
	.uleb128 0x56
	.ascii "bsearch\0"
	.byte	0x2
	.uleb128 0x57
	.ascii "calloc\0"
	.byte	0x2
	.uleb128 0x58
	.ascii "div\0"
	.byte	0x2
	.uleb128 0x59
	.ascii "exit\0"
	.byte	0x2
	.uleb128 0x5a
	.ascii "free\0"
	.byte	0x2
	.uleb128 0x5b
	.ascii "getenv\0"
	.byte	0x2
	.uleb128 0x5c
	.ascii "labs\0"
	.byte	0x2
	.uleb128 0x5d
	.ascii "ldiv\0"
	.byte	0x2
	.uleb128 0x5e
	.ascii "malloc\0"
	.byte	0x2
	.uleb128 0x5f
	.ascii "mblen\0"
	.byte	0x2
	.uleb128 0x60
	.ascii "mbstowcs\0"
	.byte	0x2
	.uleb128 0x61
	.ascii "mbtowc\0"
	.byte	0x2
	.uleb128 0x62
	.ascii "qsort\0"
	.byte	0x2
	.uleb128 0x68
	.ascii "rand\0"
	.byte	0x2
	.uleb128 0x69
	.ascii "realloc\0"
	.byte	0x2
	.uleb128 0x6a
	.ascii "srand\0"
	.byte	0x2
	.uleb128 0x6b
	.ascii "strtod\0"
	.byte	0x2
	.uleb128 0x6c
	.ascii "strtol\0"
	.byte	0x2
	.uleb128 0x6d
	.ascii "strtoul\0"
	.byte	0x2
	.uleb128 0x6e
	.ascii "system\0"
	.byte	0x2
	.uleb128 0x6f
	.ascii "wcstombs\0"
	.byte	0x2
	.uleb128 0x70
	.ascii "wctomb\0"
	.byte	0x2
	.uleb128 0xbb
	.ascii "_Exit\0"
	.byte	0x2
	.uleb128 0xbc
	.ascii "llabs\0"
	.byte	0x2
	.uleb128 0xbd
	.ascii "lldiv\0"
	.byte	0x2
	.uleb128 0xbe
	.ascii "atoll\0"
	.byte	0x2
	.uleb128 0xbf
	.ascii "strtoll\0"
	.byte	0x2
	.uleb128 0xc0
	.ascii "strtoull\0"
	.byte	0x2
	.uleb128 0xc1
	.ascii "strtof\0"
	.byte	0x2
	.uleb128 0xc2
	.ascii "strtold\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x30
	.uleb128 0x14
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x40
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_STRING \0"
	.byte	0x1
	.uleb128 0x10
	.ascii "_NLSCMP_DEFINED \0"
	.byte	0x1
	.uleb128 0x11
	.ascii "_NLSCMPERROR 2147483647\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "_WConst_return _CONST_RETURN\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "_CRT_MEMORY_DEFINED \0"
	.byte	0x2
	.uleb128 0x59
	.ascii "strtok_r\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "strncasecmp _strnicmp\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "strcasecmp _stricmp\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "_WSTRING_DEFINED \0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "wcswcs wcsstr\0"
	.file 110 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sec_api/string_s.h"
	.byte	0x3
	.uleb128 0xb4
	.uleb128 0x6e
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_STRING_S \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x40
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x2d
	.ascii "_GLIBCXX_CSTRING 1\0"
	.byte	0x2
	.uleb128 0x30
	.ascii "memchr\0"
	.byte	0x2
	.uleb128 0x31
	.ascii "memcmp\0"
	.byte	0x2
	.uleb128 0x32
	.ascii "memcpy\0"
	.byte	0x2
	.uleb128 0x33
	.ascii "memmove\0"
	.byte	0x2
	.uleb128 0x34
	.ascii "memset\0"
	.byte	0x2
	.uleb128 0x35
	.ascii "strcat\0"
	.byte	0x2
	.uleb128 0x36
	.ascii "strchr\0"
	.byte	0x2
	.uleb128 0x37
	.ascii "strcmp\0"
	.byte	0x2
	.uleb128 0x38
	.ascii "strcoll\0"
	.byte	0x2
	.uleb128 0x39
	.ascii "strcpy\0"
	.byte	0x2
	.uleb128 0x3a
	.ascii "strcspn\0"
	.byte	0x2
	.uleb128 0x3b
	.ascii "strerror\0"
	.byte	0x2
	.uleb128 0x3c
	.ascii "strlen\0"
	.byte	0x2
	.uleb128 0x3d
	.ascii "strncat\0"
	.byte	0x2
	.uleb128 0x3e
	.ascii "strncmp\0"
	.byte	0x2
	.uleb128 0x3f
	.ascii "strncpy\0"
	.byte	0x2
	.uleb128 0x40
	.ascii "strpbrk\0"
	.byte	0x2
	.uleb128 0x41
	.ascii "strrchr\0"
	.byte	0x2
	.uleb128 0x42
	.ascii "strspn\0"
	.byte	0x2
	.uleb128 0x43
	.ascii "strstr\0"
	.byte	0x2
	.uleb128 0x44
	.ascii "strtok\0"
	.byte	0x2
	.uleb128 0x45
	.ascii "strxfrm\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x31
	.uleb128 0x15
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x41
	.byte	0x1
	.uleb128 0x7
	.ascii "_TIME_H_ \0"
	.byte	0x1
	.uleb128 0x32
	.ascii "_CLOCK_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x57
	.ascii "_TM_DEFINED \0"
	.byte	0x1
	.uleb128 0x65
	.ascii "CLOCKS_PER_SEC 1000\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "_INC_WTIME_INL \0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "_WTIME_DEFINED \0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "CLK_TCK CLOCKS_PER_SEC\0"
	.file 111 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/_timeval.h"
	.byte	0x3
	.uleb128 0x100
	.uleb128 0x6f
	.byte	0x1
	.uleb128 0x8
	.ascii "_TIMEVAL_DEFINED \0"
	.byte	0x1
	.uleb128 0x10
	.ascii "timerisset(tvp) ((tvp)->tv_sec || (tvp)->tv_usec)\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "timercmp(tvp,uvp,cmp) ((tvp)->tv_sec cmp (uvp)->tv_sec || ((tvp)->tv_sec == (uvp)->tv_sec && (tvp)->tv_usec cmp (uvp)->tv_usec))\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "timerclear(tvp) (tvp)->tv_sec = (tvp)->tv_usec = 0\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x103
	.ascii "_TIMEZONE_DEFINED \0"
	.file 112 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sec_api/time_s.h"
	.byte	0x3
	.uleb128 0x112
	.uleb128 0x70
	.byte	0x1
	.uleb128 0x7
	.ascii "_TIME_H__S \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x41
	.byte	0x4
	.byte	0x4
	.file 113 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sys/timeb.h"
	.byte	0x3
	.uleb128 0x115
	.uleb128 0x71
	.byte	0x1
	.uleb128 0x7
	.ascii "_TIMEB_H_ \0"
	.byte	0x1
	.uleb128 0x33
	.ascii "_TIMEB_DEFINED \0"
	.byte	0x1
	.uleb128 0x51
	.ascii "_timeb __timeb64\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "_TIMESPEC_DEFINED \0"
	.file 114 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sec_api/sys/timeb_s.h"
	.byte	0x3
	.uleb128 0x7c
	.uleb128 0x72
	.byte	0x1
	.uleb128 0x8
	.ascii "_TIMEB_H_S \0"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x71
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 115 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/pthread_time.h"
	.byte	0x3
	.uleb128 0x11d
	.uleb128 0x73
	.byte	0x1
	.uleb128 0x1a
	.ascii "WIN_PTHREADS_TIME_H \0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "_POSIX_TIMERS 200809L\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "_POSIX_MONOTONIC_CLOCK 200809L\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "_POSIX_CPUTIME 200809L\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "_POSIX_THREAD_CPUTIME 200809L\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "__clockid_t_defined 1\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "TIMER_ABSTIME 1\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "CLOCK_REALTIME 0\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "CLOCK_MONOTONIC 1\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "CLOCK_PROCESS_CPUTIME_ID 2\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "CLOCK_THREAD_CPUTIME_ID 3\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "WINPTHREAD_API \0"
	.byte	0x2
	.uleb128 0x5b
	.ascii "WINPTHREAD_API\0"
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x2d
	.ascii "_GLIBCXX_CTIME 1\0"
	.byte	0x2
	.uleb128 0x30
	.ascii "clock\0"
	.byte	0x2
	.uleb128 0x31
	.ascii "difftime\0"
	.byte	0x2
	.uleb128 0x32
	.ascii "mktime\0"
	.byte	0x2
	.uleb128 0x33
	.ascii "time\0"
	.byte	0x2
	.uleb128 0x34
	.ascii "asctime\0"
	.byte	0x2
	.uleb128 0x35
	.ascii "ctime\0"
	.byte	0x2
	.uleb128 0x36
	.ascii "gmtime\0"
	.byte	0x2
	.uleb128 0x37
	.ascii "localtime\0"
	.byte	0x2
	.uleb128 0x38
	.ascii "strftime\0"
	.byte	0x4
	.file 116 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ccomplex"
	.byte	0x3
	.uleb128 0x34
	.uleb128 0x74
	.byte	0x1
	.uleb128 0x20
	.ascii "_GLIBCXX_CCOMPLEX 1\0"
	.file 117 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/complex"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0x75
	.byte	0x1
	.uleb128 0x25
	.ascii "_GLIBCXX_COMPLEX 1\0"
	.byte	0x3
	.uleb128 0x2c
	.uleb128 0xd
	.byte	0x4
	.file 118 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/sstream"
	.byte	0x3
	.uleb128 0x2d
	.uleb128 0x76
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBCXX_SSTREAM 1\0"
	.file 119 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/istream"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0x77
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBCXX_ISTREAM 1\0"
	.file 120 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ios"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0x78
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBCXX_IOS 1\0"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0x35
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBCXX_IOSFWD 1\0"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x22
	.byte	0x1
	.uleb128 0x23
	.ascii "_STRINGFWD_H 1\0"
	.file 121 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/memoryfwd.h"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x79
	.byte	0x1
	.uleb128 0x2c
	.ascii "_MEMORYFWD_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 122 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/postypes.h"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x7a
	.byte	0x1
	.uleb128 0x24
	.ascii "_GLIBCXX_POSTYPES_H 1\0"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x16
	.byte	0x3
	.uleb128 0x2c
	.uleb128 0x42
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_WCHAR \0"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x64
	.byte	0x4
	.byte	0x1
	.uleb128 0xd
	.ascii "__USE_MINGW_STRTOX 1\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "WCHAR_MIN 0U\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "WCHAR_MAX 0xffffU\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "_FSIZE_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "_wfinddata_t _wfinddata64i32_t\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "_wfinddatai64_t _wfinddata64_t\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "_wfindfirst _wfindfirst64i32\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "_wfindnext _wfindnext64i32\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "_wfindfirsti64 _wfindfirst64\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "_wfindnexti64 _wfindnext64\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "_WFINDDATA_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x96
	.ascii "_WConst_return _CONST_RETURN\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "_UPPER 0x1\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "_LOWER 0x2\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "_DIGIT 0x4\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "_SPACE 0x8\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "_PUNCT 0x10\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "_CONTROL 0x20\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "_BLANK 0x40\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "_HEX 0x80\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "_LEADBYTE 0x8000\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "_ALPHA (0x0100|_UPPER|_LOWER)\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "_WDIRECT_DEFINED \0"
	.byte	0x1
	.uleb128 0x115
	.ascii "_WIO_DEFINED \0"
	.byte	0x1
	.uleb128 0x130
	.ascii "_WPROCESS_DEFINED \0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "_INO_T_DEFINED \0"
	.byte	0x1
	.uleb128 0x174
	.ascii "_DEV_T_DEFINED \0"
	.file 123 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/_mingw_stat64.h"
	.byte	0x3
	.uleb128 0x17c
	.uleb128 0x7b
	.byte	0x1
	.uleb128 0xb
	.ascii "_fstat _fstat64i32\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "_fstati64 _fstat64\0"
	.byte	0x1
	.uleb128 0xd
	.ascii "_stat _stat64i32\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "_stati64 _stat64\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "_wstat _wstat64i32\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "_wstati64 _wstat64\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "__stat64 _stat64\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "stat64 _stat64\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "fstat64 _fstat64\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "_STAT_DEFINED \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x17f
	.ascii "_WSTAT_DEFINED \0"
	.byte	0x1
	.uleb128 0x189
	.ascii "_WCONIO_DEFINED \0"
	.file 124 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sec_api/wchar_s.h"
	.byte	0x3
	.uleb128 0x410
	.uleb128 0x7c
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_WCHAR_S \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x42
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x412
	.uleb128 0x67
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x30
	.ascii "_GLIBCXX_CWCHAR 1\0"
	.byte	0x2
	.uleb128 0x44
	.ascii "btowc\0"
	.byte	0x2
	.uleb128 0x45
	.ascii "fgetwc\0"
	.byte	0x2
	.uleb128 0x46
	.ascii "fgetws\0"
	.byte	0x2
	.uleb128 0x47
	.ascii "fputwc\0"
	.byte	0x2
	.uleb128 0x48
	.ascii "fputws\0"
	.byte	0x2
	.uleb128 0x49
	.ascii "fwide\0"
	.byte	0x2
	.uleb128 0x4a
	.ascii "fwprintf\0"
	.byte	0x2
	.uleb128 0x4b
	.ascii "fwscanf\0"
	.byte	0x2
	.uleb128 0x4c
	.ascii "getwc\0"
	.byte	0x2
	.uleb128 0x4d
	.ascii "getwchar\0"
	.byte	0x2
	.uleb128 0x4e
	.ascii "mbrlen\0"
	.byte	0x2
	.uleb128 0x4f
	.ascii "mbrtowc\0"
	.byte	0x2
	.uleb128 0x50
	.ascii "mbsinit\0"
	.byte	0x2
	.uleb128 0x51
	.ascii "mbsrtowcs\0"
	.byte	0x2
	.uleb128 0x52
	.ascii "putwc\0"
	.byte	0x2
	.uleb128 0x53
	.ascii "putwchar\0"
	.byte	0x2
	.uleb128 0x54
	.ascii "swprintf\0"
	.byte	0x2
	.uleb128 0x55
	.ascii "swscanf\0"
	.byte	0x2
	.uleb128 0x56
	.ascii "ungetwc\0"
	.byte	0x2
	.uleb128 0x57
	.ascii "vfwprintf\0"
	.byte	0x2
	.uleb128 0x59
	.ascii "vfwscanf\0"
	.byte	0x2
	.uleb128 0x5b
	.ascii "vswprintf\0"
	.byte	0x2
	.uleb128 0x5d
	.ascii "vswscanf\0"
	.byte	0x2
	.uleb128 0x5f
	.ascii "vwprintf\0"
	.byte	0x2
	.uleb128 0x61
	.ascii "vwscanf\0"
	.byte	0x2
	.uleb128 0x63
	.ascii "wcrtomb\0"
	.byte	0x2
	.uleb128 0x64
	.ascii "wcscat\0"
	.byte	0x2
	.uleb128 0x65
	.ascii "wcschr\0"
	.byte	0x2
	.uleb128 0x66
	.ascii "wcscmp\0"
	.byte	0x2
	.uleb128 0x67
	.ascii "wcscoll\0"
	.byte	0x2
	.uleb128 0x68
	.ascii "wcscpy\0"
	.byte	0x2
	.uleb128 0x69
	.ascii "wcscspn\0"
	.byte	0x2
	.uleb128 0x6a
	.ascii "wcsftime\0"
	.byte	0x2
	.uleb128 0x6b
	.ascii "wcslen\0"
	.byte	0x2
	.uleb128 0x6c
	.ascii "wcsncat\0"
	.byte	0x2
	.uleb128 0x6d
	.ascii "wcsncmp\0"
	.byte	0x2
	.uleb128 0x6e
	.ascii "wcsncpy\0"
	.byte	0x2
	.uleb128 0x6f
	.ascii "wcspbrk\0"
	.byte	0x2
	.uleb128 0x70
	.ascii "wcsrchr\0"
	.byte	0x2
	.uleb128 0x71
	.ascii "wcsrtombs\0"
	.byte	0x2
	.uleb128 0x72
	.ascii "wcsspn\0"
	.byte	0x2
	.uleb128 0x73
	.ascii "wcsstr\0"
	.byte	0x2
	.uleb128 0x74
	.ascii "wcstod\0"
	.byte	0x2
	.uleb128 0x76
	.ascii "wcstof\0"
	.byte	0x2
	.uleb128 0x78
	.ascii "wcstok\0"
	.byte	0x2
	.uleb128 0x79
	.ascii "wcstol\0"
	.byte	0x2
	.uleb128 0x7a
	.ascii "wcstoul\0"
	.byte	0x2
	.uleb128 0x7b
	.ascii "wcsxfrm\0"
	.byte	0x2
	.uleb128 0x7c
	.ascii "wctob\0"
	.byte	0x2
	.uleb128 0x7d
	.ascii "wmemchr\0"
	.byte	0x2
	.uleb128 0x7e
	.ascii "wmemcmp\0"
	.byte	0x2
	.uleb128 0x7f
	.ascii "wmemcpy\0"
	.byte	0x2
	.uleb128 0x80
	.ascii "wmemmove\0"
	.byte	0x2
	.uleb128 0x81
	.ascii "wmemset\0"
	.byte	0x2
	.uleb128 0x82
	.ascii "wprintf\0"
	.byte	0x2
	.uleb128 0x83
	.ascii "wscanf\0"
	.byte	0x2
	.uleb128 0xed
	.ascii "wcstold\0"
	.byte	0x2
	.uleb128 0xee
	.ascii "wcstoll\0"
	.byte	0x2
	.uleb128 0xef
	.ascii "wcstoull\0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 125 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/exception"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x7d
	.byte	0x1
	.uleb128 0x1f
	.ascii "__EXCEPTION__ \0"
	.file 126 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/atomic_lockfree_defines.h"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0x7e
	.byte	0x1
	.uleb128 0x1f
	.ascii "_GLIBCXX_ATOMIC_LOCK_FREE_H 1\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "ATOMIC_BOOL_LOCK_FREE __GCC_ATOMIC_BOOL_LOCK_FREE\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "ATOMIC_CHAR_LOCK_FREE __GCC_ATOMIC_CHAR_LOCK_FREE\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "ATOMIC_WCHAR_T_LOCK_FREE __GCC_ATOMIC_WCHAR_T_LOCK_FREE\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "ATOMIC_CHAR16_T_LOCK_FREE __GCC_ATOMIC_CHAR16_T_LOCK_FREE\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "ATOMIC_CHAR32_T_LOCK_FREE __GCC_ATOMIC_CHAR32_T_LOCK_FREE\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "ATOMIC_SHORT_LOCK_FREE __GCC_ATOMIC_SHORT_LOCK_FREE\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "ATOMIC_INT_LOCK_FREE __GCC_ATOMIC_INT_LOCK_FREE\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "ATOMIC_LONG_LOCK_FREE __GCC_ATOMIC_LONG_LOCK_FREE\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "ATOMIC_LLONG_LOCK_FREE __GCC_ATOMIC_LLONG_LOCK_FREE\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "ATOMIC_POINTER_LOCK_FREE __GCC_ATOMIC_POINTER_LOCK_FREE\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0xa2
	.uleb128 0x18
	.byte	0x1
	.uleb128 0x20
	.ascii "_EXCEPTION_PTR_H \0"
	.file 127 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/exception_defines.h"
	.byte	0x3
	.uleb128 0x25
	.uleb128 0x7f
	.byte	0x1
	.uleb128 0x1f
	.ascii "_EXCEPTION_DEFINES_H 1\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "__try try\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "__catch(X) catch(X)\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "__throw_exception_again throw\0"
	.byte	0x4
	.byte	0x4
	.file 128 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/nested_exception.h"
	.byte	0x3
	.uleb128 0xa3
	.uleb128 0x80
	.byte	0x1
	.uleb128 0x1f
	.ascii "_GLIBCXX_NESTED_EXCEPTION_H 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x1b
	.byte	0x1
	.uleb128 0x23
	.ascii "_CHAR_TRAITS_H 1\0"
	.file 129 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_algobase.h"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x81
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_ALGOBASE_H 1\0"
	.file 130 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/functexcept.h"
	.byte	0x3
	.uleb128 0x3c
	.uleb128 0x82
	.byte	0x1
	.uleb128 0x25
	.ascii "_FUNCTEXCEPT_H 1\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x3f
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x1e
	.ascii "_EXT_NUMERIC_TRAITS 1\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "__glibcxx_signed(_Tp) ((_Tp)(-1) < 0)\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "__glibcxx_digits(_Tp) (sizeof(_Tp) * __CHAR_BIT__ - __glibcxx_signed(_Tp))\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "__glibcxx_min(_Tp) (__glibcxx_signed(_Tp) ? (_Tp)1 << __glibcxx_digits(_Tp) : (_Tp)0)\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "__glibcxx_max(_Tp) (__glibcxx_signed(_Tp) ? (((((_Tp)1 << (__glibcxx_digits(_Tp) - 1)) - 1) << 1) + 1) : ~(_Tp)0)\0"
	.byte	0x2
	.uleb128 0x4f
	.ascii "__glibcxx_signed\0"
	.byte	0x2
	.uleb128 0x50
	.ascii "__glibcxx_digits\0"
	.byte	0x2
	.uleb128 0x51
	.ascii "__glibcxx_min\0"
	.byte	0x2
	.uleb128 0x52
	.ascii "__glibcxx_max\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "__glibcxx_floating(_Tp,_Fval,_Dval,_LDval) (std::__are_same<_Tp, float>::__value ? _Fval : std::__are_same<_Tp, double>::__value ? _Dval : _LDval)\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "__glibcxx_max_digits10(_Tp) (2 + __glibcxx_floating(_Tp, __FLT_MANT_DIG__, __DBL_MANT_DIG__, __LDBL_MANT_DIG__) * 643L / 2136)\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "__glibcxx_digits10(_Tp) __glibcxx_floating(_Tp, __FLT_DIG__, __DBL_DIG__, __LDBL_DIG__)\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "__glibcxx_max_exponent10(_Tp) __glibcxx_floating(_Tp, __FLT_MAX_10_EXP__, __DBL_MAX_10_EXP__, __LDBL_MAX_10_EXP__)\0"
	.byte	0x2
	.uleb128 0x85
	.ascii "__glibcxx_floating\0"
	.byte	0x2
	.uleb128 0x86
	.ascii "__glibcxx_max_digits10\0"
	.byte	0x2
	.uleb128 0x87
	.ascii "__glibcxx_digits10\0"
	.byte	0x2
	.uleb128 0x88
	.ascii "__glibcxx_max_exponent10\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x40
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_PAIR_H 1\0"
	.byte	0x3
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x1
	.uleb128 0x1f
	.ascii "_MOVE_H 1\0"
	.file 131 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/concept_check.h"
	.byte	0x3
	.uleb128 0x22
	.uleb128 0x83
	.byte	0x1
	.uleb128 0x1f
	.ascii "_CONCEPT_CHECK_H 1\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "__glibcxx_function_requires(...) \0"
	.byte	0x1
	.uleb128 0x30
	.ascii "__glibcxx_class_requires(_a,_b) \0"
	.byte	0x1
	.uleb128 0x31
	.ascii "__glibcxx_class_requires2(_a,_b,_c) \0"
	.byte	0x1
	.uleb128 0x32
	.ascii "__glibcxx_class_requires3(_a,_b,_c,_d) \0"
	.byte	0x1
	.uleb128 0x33
	.ascii "__glibcxx_class_requires4(_a,_b,_c,_d,_e) \0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x39
	.uleb128 0x1a
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_TYPE_TRAITS 1\0"
	.byte	0x1
	.uleb128 0x1e6
	.ascii "__cpp_lib_is_null_pointer 201309\0"
	.byte	0x1
	.uleb128 0x810
	.ascii "__cpp_lib_result_of_sfinae 201210\0"
	.byte	0x1
	.uleb128 0x8d3
	.ascii "_GLIBCXX_HAS_NESTED_TYPE(_NTYPE) template<typename _Tp> class __has_ ##_NTYPE ##_helper { template<typename _Up> struct _Wrap_type { }; template<typename _Up> static true_type __test(_Wrap_type<typename _Up::_NTYPE>*); template<typename _Up> static false_type __test(...); public: typedef decltype(__test<_Tp>(0)) type; }; template<typename _Tp> struct __has_ ##_NTYPE : public __has_ ##_NTYPE ##_helper <typename remove_cv<_Tp>::type>::type { };\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x8e
	.ascii "_GLIBCXX_MOVE(__val) std::move(__val)\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "_GLIBCXX_FORWARD(_Tp,__val) std::forward<_Tp>(__val)\0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x41
	.uleb128 0x2b
	.byte	0x1
	.uleb128 0x3c
	.ascii "_STL_ITERATOR_BASE_TYPES_H 1\0"
	.byte	0x4
	.file 132 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_iterator_base_funcs.h"
	.byte	0x3
	.uleb128 0x42
	.uleb128 0x84
	.byte	0x1
	.uleb128 0x3c
	.ascii "_STL_ITERATOR_BASE_FUNCS_H 1\0"
	.byte	0x3
	.uleb128 0x41
	.uleb128 0x2f
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_DEBUG_MACRO_SWITCH_H 1\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "_GLIBCXX_DEBUG_ASSERT(_Condition) \0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "_GLIBCXX_DEBUG_PEDASSERT(_Condition) \0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "_GLIBCXX_DEBUG_ONLY(_Statement) ;\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "__glibcxx_requires_cond(_Cond,_Msg) \0"
	.byte	0x1
	.uleb128 0x41
	.ascii "__glibcxx_requires_valid_range(_First,_Last) \0"
	.byte	0x1
	.uleb128 0x42
	.ascii "__glibcxx_requires_non_empty_range(_First,_Last) \0"
	.byte	0x1
	.uleb128 0x43
	.ascii "__glibcxx_requires_sorted(_First,_Last) \0"
	.byte	0x1
	.uleb128 0x44
	.ascii "__glibcxx_requires_sorted_pred(_First,_Last,_Pred) \0"
	.byte	0x1
	.uleb128 0x45
	.ascii "__glibcxx_requires_sorted_set(_First1,_Last1,_First2) \0"
	.byte	0x1
	.uleb128 0x46
	.ascii "__glibcxx_requires_sorted_set_pred(_First1,_Last1,_First2,_Pred) \0"
	.byte	0x1
	.uleb128 0x47
	.ascii "__glibcxx_requires_partitioned_lower(_First,_Last,_Value) \0"
	.byte	0x1
	.uleb128 0x48
	.ascii "__glibcxx_requires_partitioned_upper(_First,_Last,_Value) \0"
	.byte	0x1
	.uleb128 0x49
	.ascii "__glibcxx_requires_partitioned_lower_pred(_First,_Last,_Value,_Pred) \0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "__glibcxx_requires_partitioned_upper_pred(_First,_Last,_Value,_Pred) \0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "__glibcxx_requires_heap(_First,_Last) \0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "__glibcxx_requires_heap_pred(_First,_Last,_Pred) \0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "__glibcxx_requires_nonempty() \0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "__glibcxx_requires_string(_String) \0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "__glibcxx_requires_string_len(_String,_Len) \0"
	.byte	0x1
	.uleb128 0x50
	.ascii "__glibcxx_requires_subscript(_N) \0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x43
	.uleb128 0x3a
	.byte	0x1
	.uleb128 0x3d
	.ascii "_STL_ITERATOR_H 1\0"
	.file 133 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/ptr_traits.h"
	.byte	0x3
	.uleb128 0x42
	.uleb128 0x85
	.byte	0x1
	.uleb128 0x1f
	.ascii "_PTR_TRAITS_H 1\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x485
	.ascii "_GLIBCXX_MAKE_MOVE_ITERATOR(_Iter) std::make_move_iterator(_Iter)\0"
	.byte	0x1
	.uleb128 0x486
	.ascii "_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(_Iter) std::__make_move_if_noexcept_iterator(_Iter)\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x47
	.uleb128 0x37
	.byte	0x1
	.uleb128 0x1f
	.ascii "_GLIBCXX_PREDEFINED_OPS_H 1\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x1f5
	.ascii "_GLIBCXX_MOVE3(_Tp,_Up,_Vp) std::move(_Tp, _Up, _Vp)\0"
	.byte	0x1
	.uleb128 0x2a9
	.ascii "_GLIBCXX_MOVE_BACKWARD3(_Tp,_Up,_Vp) std::move_backward(_Tp, _Up, _Vp)\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x16
	.byte	0x4
	.byte	0x3
	.uleb128 0x17c
	.uleb128 0x1c
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_CSTDINT 1\0"
	.file 134 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/stdint.h"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x86
	.byte	0x2
	.uleb128 0x4
	.ascii "__STDC_LIMIT_MACROS\0"
	.byte	0x1
	.uleb128 0x5
	.ascii "__STDC_LIMIT_MACROS \0"
	.byte	0x2
	.uleb128 0x6
	.ascii "__STDC_CONSTANT_MACROS\0"
	.byte	0x1
	.uleb128 0x7
	.ascii "__STDC_CONSTANT_MACROS \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x44
	.byte	0x1
	.uleb128 0x1a
	.ascii "_STDINT_H \0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "__need_wint_t \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "__need_wchar_t \0"
	.byte	0x3
	.uleb128 0x20
	.uleb128 0x6d
	.byte	0x3
	.uleb128 0x1
	.uleb128 0x3f
	.byte	0x2
	.uleb128 0xa3
	.ascii "__need_ptrdiff_t\0"
	.byte	0x2
	.uleb128 0xf0
	.ascii "__need_size_t\0"
	.byte	0x2
	.uleb128 0x151
	.ascii "__need_wchar_t\0"
	.byte	0x2
	.uleb128 0x161
	.ascii "__need_wint_t\0"
	.byte	0x2
	.uleb128 0x18a
	.ascii "NULL\0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "NULL __null\0"
	.byte	0x2
	.uleb128 0x199
	.ascii "__need_NULL\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)\0"
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x4c
	.ascii "INT8_MIN (-128)\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "INT16_MIN (-32768)\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "INT32_MIN (-2147483647 - 1)\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "INT64_MIN (-9223372036854775807LL - 1)\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "INT8_MAX 127\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "INT16_MAX 32767\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "INT32_MAX 2147483647\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "INT64_MAX 9223372036854775807LL\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "UINT8_MAX 255\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "UINT16_MAX 65535\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "UINT32_MAX 0xffffffffU\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "UINT64_MAX 0xffffffffffffffffULL\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "INT_LEAST8_MIN INT8_MIN\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "INT_LEAST16_MIN INT16_MIN\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "INT_LEAST32_MIN INT32_MIN\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "INT_LEAST64_MIN INT64_MIN\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "INT_LEAST8_MAX INT8_MAX\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "INT_LEAST16_MAX INT16_MAX\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "INT_LEAST32_MAX INT32_MAX\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "INT_LEAST64_MAX INT64_MAX\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "UINT_LEAST8_MAX UINT8_MAX\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "UINT_LEAST16_MAX UINT16_MAX\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "UINT_LEAST32_MAX UINT32_MAX\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "UINT_LEAST64_MAX UINT64_MAX\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "INT_FAST8_MIN INT8_MIN\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "INT_FAST16_MIN INT16_MIN\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "INT_FAST32_MIN INT32_MIN\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "INT_FAST64_MIN INT64_MIN\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "INT_FAST8_MAX INT8_MAX\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "INT_FAST16_MAX INT16_MAX\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "INT_FAST32_MAX INT32_MAX\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "INT_FAST64_MAX INT64_MAX\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "UINT_FAST8_MAX UINT8_MAX\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "UINT_FAST16_MAX UINT16_MAX\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "UINT_FAST32_MAX UINT32_MAX\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "UINT_FAST64_MAX UINT64_MAX\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "INTPTR_MIN INT64_MIN\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "INTPTR_MAX INT64_MAX\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "UINTPTR_MAX UINT64_MAX\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "INTMAX_MIN INT64_MIN\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "INTMAX_MAX INT64_MAX\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "UINTMAX_MAX UINT64_MAX\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "PTRDIFF_MIN INT64_MIN\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "PTRDIFF_MAX INT64_MAX\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "SIG_ATOMIC_MIN INT32_MIN\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "SIG_ATOMIC_MAX INT32_MAX\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "WINT_MIN 0U\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "WINT_MAX 0xffffU\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "INT8_C(val) (INT_LEAST8_MAX-INT_LEAST8_MAX+(val))\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "INT16_C(val) (INT_LEAST16_MAX-INT_LEAST16_MAX+(val))\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "INT32_C(val) (INT_LEAST32_MAX-INT_LEAST32_MAX+(val))\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "INT64_C(val) val ##LL\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "UINT8_C(val) (val)\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "UINT16_C(val) (val)\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "UINT32_C(val) (val ##U)\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "UINT64_C(val) val ##ULL\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "INTMAX_C(val) val ##LL\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "UINTMAX_C(val) val ##ULL\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0xd
	.ascii "_GCC_WRAP_STDINT_H \0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 135 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/localefwd.h"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x87
	.byte	0x1
	.uleb128 0x23
	.ascii "_LOCALE_FWD_H 1\0"
	.file 136 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/c++locale.h"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x88
	.byte	0x1
	.uleb128 0x25
	.ascii "_GLIBCXX_CXX_LOCALE_H 1\0"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0xc
	.byte	0x4
	.byte	0x1
	.uleb128 0x2b
	.ascii "_GLIBCXX_NUM_CATEGORIES 0\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x5a
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x23
	.ascii "_IOS_BASE_H 1\0"
	.file 137 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/atomicity.h"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x89
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_ATOMICITY_H 1\0"
	.file 138 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/gthr.h"
	.byte	0x3
	.uleb128 0x23
	.uleb128 0x8a
	.byte	0x1
	.uleb128 0x1b
	.ascii "_GLIBCXX_GCC_GTHR_H \0"
	.byte	0x2
	.uleb128 0x8c
	.ascii "_GLIBCXX_GTHREAD_USE_WEAK\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "_GLIBCXX_GTHREAD_USE_WEAK 0\0"
	.file 139 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/gthr-default.h"
	.byte	0x3
	.uleb128 0x94
	.uleb128 0x8b
	.byte	0x1
	.uleb128 0x1b
	.ascii "_GLIBCXX_GCC_GTHR_POSIX_H \0"
	.byte	0x1
	.uleb128 0x20
	.ascii "__GTHREADS 1\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "__GTHREADS_CXX0X 1\0"
	.byte	0x3
	.uleb128 0x22
	.uleb128 0x45
	.byte	0x1
	.uleb128 0x3c
	.ascii "WIN_PTHREADS_H \0"
	.byte	0x3
	.uleb128 0x3e
	.uleb128 0x6d
	.byte	0x3
	.uleb128 0x1
	.uleb128 0x3f
	.byte	0x4
	.byte	0x4
	.file 140 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sys/types.h"
	.byte	0x3
	.uleb128 0x40
	.uleb128 0x8c
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_TYPES \0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "_PID_T_ \0"
	.byte	0x2
	.uleb128 0x43
	.ascii "pid_t\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "_MODE_T_ \0"
	.byte	0x1
	.uleb128 0x65
	.ascii "_SIGSET_T_ \0"
	.byte	0x4
	.file 141 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/process.h"
	.byte	0x3
	.uleb128 0x42
	.uleb128 0x8d
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_PROCESS \0"
	.byte	0x1
	.uleb128 0x13
	.ascii "_P_WAIT 0\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "_P_NOWAIT 1\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "_OLD_P_OVERLAY 2\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "_P_NOWAITO 3\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "_P_DETACH 4\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "_P_OVERLAY 2\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "_WAIT_CHILD 0\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "_WAIT_GRANDCHILD 1\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "P_WAIT _P_WAIT\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "P_NOWAIT _P_NOWAIT\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "P_OVERLAY _P_OVERLAY\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "OLD_P_OVERLAY _OLD_P_OVERLAY\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "P_NOWAITO _P_NOWAITO\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "P_DETACH _P_DETACH\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "WAIT_CHILD _WAIT_CHILD\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "WAIT_GRANDCHILD _WAIT_GRANDCHILD\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x43
	.uleb128 0x55
	.byte	0x4
	.file 142 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/pthread_compat.h"
	.byte	0x3
	.uleb128 0x48
	.uleb128 0x8e
	.byte	0x1
	.uleb128 0x3d
	.ascii "WIN_PTHREADS_PTHREAD_COMPAT_H \0"
	.byte	0x1
	.uleb128 0x41
	.ascii "WINPTHREADS_INLINE inline\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "WINPTHREADS_ATTRIBUTE(X) __attribute__(X)\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "WINPTHREADS_SECTION(X) __section__(X)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x4e
	.ascii "__WINPTHREADS_VERSION_MAJOR 0\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "__WINPTHREADS_VERSION_MINOR 5\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "__WINPTHREADS_VERSION_PATCHLEVEL 0\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "__WINPTHREADS_VERSION 0x00050000\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "WINPTHREAD_API \0"
	.byte	0x1
	.uleb128 0x62
	.ascii "RWLS_PER_THREAD 8\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "PTHREAD_CANCEL_DISABLE 0\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "PTHREAD_CANCEL_ENABLE 0x01\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "PTHREAD_CANCEL_DEFERRED 0\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "PTHREAD_CANCEL_ASYNCHRONOUS 0x02\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "PTHREAD_CREATE_JOINABLE 0\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "PTHREAD_CREATE_DETACHED 0x04\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "PTHREAD_EXPLICIT_SCHED 0\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "PTHREAD_INHERIT_SCHED 0x08\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "PTHREAD_SCOPE_PROCESS 0\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "PTHREAD_SCOPE_SYSTEM 0x10\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "PTHREAD_DEFAULT_ATTR (PTHREAD_CANCEL_ENABLE)\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "PTHREAD_CANCELED ((void *) (intptr_t) 0xDEADBEEF)\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "_PTHREAD_NULL_THREAD ((pthread_t) 0)\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "PTHREAD_ONCE_INIT 0\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "PTHREAD_DESTRUCTOR_ITERATIONS 256\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "PTHREAD_KEYS_MAX (1<<20)\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "PTHREAD_MUTEX_NORMAL 0\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "PTHREAD_MUTEX_ERRORCHECK 1\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "PTHREAD_MUTEX_RECURSIVE 2\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "PTHREAD_MUTEX_DEFAULT PTHREAD_MUTEX_NORMAL\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "PTHREAD_MUTEX_SHARED 1\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "PTHREAD_MUTEX_PRIVATE 0\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "PTHREAD_PRIO_NONE 0\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "PTHREAD_PRIO_INHERIT 8\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "PTHREAD_PRIO_PROTECT 16\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "PTHREAD_PRIO_MULT 32\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "PTHREAD_PROCESS_SHARED 1\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "PTHREAD_PROCESS_PRIVATE 0\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "PTHREAD_MUTEX_FAST_NP PTHREAD_MUTEX_NORMAL\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "PTHREAD_MUTEX_TIMED_NP PTHREAD_MUTEX_FAST_NP\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "PTHREAD_MUTEX_ADAPTIVE_NP PTHREAD_MUTEX_FAST_NP\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "PTHREAD_MUTEX_ERRORCHECK_NP PTHREAD_MUTEX_ERRORCHECK\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "PTHREAD_MUTEX_RECURSIVE_NP PTHREAD_MUTEX_RECURSIVE\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "PTHREAD_BARRIER_SERIAL_THREAD 1\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "MAX_READ_LOCKS (INT_MAX - 1)\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "pthread_atfork(F1,F2,F3) 0\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "pthread_mutex_getprioceiling(M,P) ENOTSUP\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "pthread_mutex_setprioceiling(M,P) ENOTSUP\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "pthread_getcpuclockid(T,C) ENOTSUP\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "pthread_attr_getguardsize(A,S) ENOTSUP\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "pthread_attr_setgaurdsize(A,S) ENOTSUP\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "pthread_cleanup_push(F,A) { const _pthread_cleanup _pthread_cup = {(F), (A), *pthread_getclean()}; __sync_synchronize(); *pthread_getclean() = (_pthread_cleanup *) &_pthread_cup; __sync_synchronize()\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "pthread_cleanup_pop(E) (*pthread_getclean() = _pthread_cup.next, (E?_pthread_cup.func((pthread_once_t *)_pthread_cup.arg):0));}\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "SCHED_OTHER 0\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "SCHED_FIFO 1\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "SCHED_RR 2\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "SCHED_MIN SCHED_OTHER\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "SCHED_MAX SCHED_RR\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "PTHREAD_MUTEX_NORMAL 0\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "PTHREAD_MUTEX_ERRORCHECK 1\0"
	.byte	0x1
	.uleb128 0x114
	.ascii "PTHREAD_MUTEX_RECURSIVE 2\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "GENERIC_INITIALIZER ((void *) (size_t) -1)\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "GENERIC_ERRORCHECK_INITIALIZER ((void *) (size_t) -2)\0"
	.byte	0x1
	.uleb128 0x118
	.ascii "GENERIC_RECURSIVE_INITIALIZER ((void *) (size_t) -3)\0"
	.byte	0x1
	.uleb128 0x119
	.ascii "GENERIC_NORMAL_INITIALIZER ((void *) (size_t) -1)\0"
	.byte	0x1
	.uleb128 0x11a
	.ascii "PTHREAD_MUTEX_INITIALIZER (pthread_mutex_t)GENERIC_INITIALIZER\0"
	.byte	0x1
	.uleb128 0x11b
	.ascii "PTHREAD_RECURSIVE_MUTEX_INITIALIZER (pthread_mutex_t)GENERIC_RECURSIVE_INITIALIZER\0"
	.byte	0x1
	.uleb128 0x11c
	.ascii "PTHREAD_ERRORCHECK_MUTEX_INITIALIZER (pthread_mutex_t)GENERIC_ERRORCHECK_INITIALIZER\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "PTHREAD_NORMAL_MUTEX_INITIALIZER (pthread_mutex_t)GENERIC_NORMAL_INITIALIZER\0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "PTHREAD_DEFAULT_MUTEX_INITIALIZER PTHREAD_NORMAL_MUTEX_INITIALIZER\0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "PTHREAD_COND_INITIALIZER (pthread_cond_t)GENERIC_INITIALIZER\0"
	.byte	0x1
	.uleb128 0x120
	.ascii "PTHREAD_RWLOCK_INITIALIZER (pthread_rwlock_t)GENERIC_INITIALIZER\0"
	.byte	0x1
	.uleb128 0x121
	.ascii "PTHREAD_SPINLOCK_INITIALIZER (pthread_spinlock_t)GENERIC_INITIALIZER\0"
	.byte	0x2
	.uleb128 0x1a1
	.ascii "localtime_r\0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "localtime_r(_Time,_Tm) ({ struct tm *___tmp_tm; pthread_testcancel(); ___tmp_tm = localtime((_Time)); if (___tmp_tm) { *(_Tm) = *___tmp_tm; ___tmp_tm = (_Tm); } ___tmp_tm; })\0"
	.byte	0x2
	.uleb128 0x1ab
	.ascii "gmtime_r\0"
	.byte	0x1
	.uleb128 0x1ac
	.ascii "gmtime_r(_Time,_Tm) ({ struct tm *___tmp_tm; pthread_testcancel(); ___tmp_tm = gmtime((_Time)); if (___tmp_tm) { *(_Tm) = *___tmp_tm; ___tmp_tm = (_Tm); } ___tmp_tm; })\0"
	.byte	0x2
	.uleb128 0x1b5
	.ascii "ctime_r\0"
	.byte	0x1
	.uleb128 0x1b6
	.ascii "ctime_r(_Time,_Str) ({ char *___tmp_tm; pthread_testcancel(); ___tmp_tm = ctime((_Time)); if (___tmp_tm) ___tmp_tm = strcpy((_Str),___tmp_tm); ___tmp_tm; })\0"
	.byte	0x2
	.uleb128 0x1be
	.ascii "asctime_r\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "asctime_r(_Tm,_Buf) ({ char *___tmp_tm; pthread_testcancel(); ___tmp_tm = asctime((_Tm)); if (___tmp_tm) ___tmp_tm = strcpy((_Buf),___tmp_tm); ___tmp_tm; })\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "rand_r(__seed) (__seed == __seed ? rand () : rand ())\0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "SIG_BLOCK 0\0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "SIG_UNBLOCK 1\0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "SIG_SETMASK 2\0"
	.file 143 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/pthread_unistd.h"
	.byte	0x3
	.uleb128 0x1d5
	.uleb128 0x8f
	.byte	0x1
	.uleb128 0x18
	.ascii "WIN_PTHREADS_UNISTD_H \0"
	.byte	0x2
	.uleb128 0x50
	.ascii "_POSIX_THREADS\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "_POSIX_THREADS 200112L\0"
	.byte	0x2
	.uleb128 0x64
	.ascii "_POSIX_READER_WRITER_LOCKS\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "_POSIX_READER_WRITER_LOCKS 200112L\0"
	.byte	0x2
	.uleb128 0x72
	.ascii "_POSIX_SPIN_LOCKS\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "_POSIX_SPIN_LOCKS 200112L\0"
	.byte	0x2
	.uleb128 0x81
	.ascii "_POSIX_BARRIERS\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "_POSIX_BARRIERS 200112L\0"
	.byte	0x2
	.uleb128 0x95
	.ascii "_POSIX_THREAD_SAFE_FUNCTIONS\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "_POSIX_THREAD_SAFE_FUNCTIONS 200112L\0"
	.byte	0x2
	.uleb128 0xa4
	.ascii "_POSIX_TIMEOUTS\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "_POSIX_TIMEOUTS 200112L\0"
	.byte	0x2
	.uleb128 0xc0
	.ascii "_POSIX_CLOCK_SELECTION\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "_POSIX_CLOCK_SELECTION 200112\0"
	.byte	0x2
	.uleb128 0xd1
	.ascii "_POSIX_SEMAPHORES\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "_POSIX_SEMAPHORES 200112\0"
	.byte	0x4
	.byte	0x2
	.uleb128 0x1d7
	.ascii "_POSIX_THREAD_DESTRUCTOR_ITERATIONS\0"
	.byte	0x1
	.uleb128 0x1d8
	.ascii "_POSIX_THREAD_DESTRUCTOR_ITERATIONS PTHREAD_DESTRUCTOR_ITERATIONS\0"
	.byte	0x2
	.uleb128 0x1da
	.ascii "_POSIX_THREAD_KEYS_MAX\0"
	.byte	0x1
	.uleb128 0x1db
	.ascii "_POSIX_THREAD_KEYS_MAX PTHREAD_KEYS_MAX\0"
	.byte	0x2
	.uleb128 0x1dd
	.ascii "PTHREAD_THREADS_MAX\0"
	.byte	0x1
	.uleb128 0x1de
	.ascii "PTHREAD_THREADS_MAX 2019\0"
	.byte	0x2
	.uleb128 0x1e0
	.ascii "_POSIX_SEM_NSEMS_MAX\0"
	.byte	0x1
	.uleb128 0x1e1
	.ascii "_POSIX_SEM_NSEMS_MAX 256\0"
	.byte	0x2
	.uleb128 0x1e3
	.ascii "SEM_NSEMS_MAX\0"
	.byte	0x1
	.uleb128 0x1e4
	.ascii "SEM_NSEMS_MAX 1024\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x24
	.ascii "_GTHREAD_USE_MUTEX_INIT_FUNC 1\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "__GTHREAD_HAS_COND 1\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "__GTHREAD_MUTEX_INIT PTHREAD_MUTEX_INITIALIZER\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "__GTHREAD_MUTEX_INIT_FUNCTION __gthread_mutex_init_function\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "__GTHREAD_ONCE_INIT PTHREAD_ONCE_INIT\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "__GTHREAD_RECURSIVE_MUTEX_INIT PTHREAD_RECURSIVE_MUTEX_INITIALIZER\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "__GTHREAD_COND_INIT PTHREAD_COND_INITIALIZER\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "__GTHREAD_TIME_INIT {0,0}\0"
	.byte	0x2
	.uleb128 0x4b
	.ascii "__GTHREAD_MUTEX_INIT\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "__gthrw2(name,name2,type) \0"
	.byte	0x1
	.uleb128 0x61
	.ascii "__gthrw_(name) name\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "__gthrw(name) __gthrw2(__gthrw_ ## name,name,name)\0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x24
	.uleb128 0x46
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_ATOMIC_WORD_H 1\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x6f
	.ascii "_GLIBCXX_READ_MEM_BARRIER __asm __volatile (\"\":::\"memory\")\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "_GLIBCXX_WRITE_MEM_BARRIER __asm __volatile (\"\":::\"memory\")\0"
	.byte	0x4
	.file 144 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/locale_classes.h"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x90
	.byte	0x1
	.uleb128 0x23
	.ascii "_LOCALE_CLASSES_H 1\0"
	.file 145 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/string"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x91
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBCXX_STRING 1\0"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x1f
	.byte	0x1
	.uleb128 0x2c
	.ascii "_ALLOCATOR_H 1\0"
	.file 146 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/c++allocator.h"
	.byte	0x3
	.uleb128 0x2e
	.uleb128 0x92
	.byte	0x1
	.uleb128 0x1f
	.ascii "_GLIBCXX_CXX_ALLOCATOR_H 1\0"
	.byte	0x3
	.uleb128 0x21
	.uleb128 0x38
	.byte	0x1
	.uleb128 0x1e
	.ascii "_NEW_ALLOCATOR_H 1\0"
	.byte	0x3
	.uleb128 0x21
	.uleb128 0x1e
	.byte	0x1
	.uleb128 0x23
	.ascii "_NEW \0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x2
	.uleb128 0x9c
	.ascii "__allocator_base\0"
	.byte	0x4
	.file 147 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/ostream_insert.h"
	.byte	0x3
	.uleb128 0x2c
	.uleb128 0x93
	.byte	0x1
	.uleb128 0x1f
	.ascii "_OSTREAM_INSERT_H 1\0"
	.file 148 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/cxxabi_forced.h"
	.byte	0x3
	.uleb128 0x24
	.uleb128 0x94
	.byte	0x1
	.uleb128 0x20
	.ascii "_CXXABI_FORCED_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 149 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_function.h"
	.byte	0x3
	.uleb128 0x30
	.uleb128 0x95
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_FUNCTION_H 1\0"
	.file 150 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/backward/binders.h"
	.byte	0x3
	.uleb128 0x43c
	.uleb128 0x96
	.byte	0x1
	.uleb128 0x39
	.ascii "_BACKWARD_BINDERS_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 151 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/range_access.h"
	.byte	0x3
	.uleb128 0x33
	.uleb128 0x97
	.byte	0x1
	.uleb128 0x1f
	.ascii "_GLIBCXX_RANGE_ACCESS_H 1\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x34
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x23
	.ascii "_BASIC_STRING_H 1\0"
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x21
	.byte	0x1
	.uleb128 0x1f
	.ascii "_INITIALIZER_LIST \0"
	.byte	0x4
	.file 152 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/string_conversions.h"
	.byte	0x3
	.uleb128 0xb22
	.uleb128 0x98
	.byte	0x1
	.uleb128 0x1e
	.ascii "_STRING_CONVERSIONS_H 1\0"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x13
	.byte	0x4
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x16
	.byte	0x4
	.byte	0x3
	.uleb128 0x2b
	.uleb128 0x12
	.byte	0x4
	.byte	0x3
	.uleb128 0x2c
	.uleb128 0x5d
	.byte	0x4
	.byte	0x4
	.file 153 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/functional_hash.h"
	.byte	0x3
	.uleb128 0xbfc
	.uleb128 0x99
	.byte	0x1
	.uleb128 0x1f
	.ascii "_FUNCTIONAL_HASH_H 1\0"
	.file 154 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/hash_bytes.h"
	.byte	0x3
	.uleb128 0x23
	.uleb128 0x9a
	.byte	0x1
	.uleb128 0x1f
	.ascii "_HASH_BYTES_H 1\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x46
	.ascii "_Cxx_hashtable_define_trivial_hash(_Tp) template<> struct hash<_Tp> : public __hash_base<size_t, _Tp> { size_t operator()(_Tp __val) const noexcept { return static_cast<size_t>(__val); } };\0"
	.byte	0x2
	.uleb128 0x7c
	.ascii "_Cxx_hashtable_define_trivial_hash\0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x35
	.uleb128 0x20
	.byte	0x1
	.uleb128 0x26
	.ascii "_BASIC_STRING_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.file 155 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/locale_classes.tcc"
	.byte	0x3
	.uleb128 0x313
	.uleb128 0x9b
	.byte	0x1
	.uleb128 0x23
	.ascii "_LOCALE_CLASSES_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 156 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/streambuf"
	.byte	0x3
	.uleb128 0x2b
	.uleb128 0x9c
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBXX_STREAMBUF 1\0"
	.file 157 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/streambuf.tcc"
	.byte	0x3
	.uleb128 0x33c
	.uleb128 0x9d
	.byte	0x1
	.uleb128 0x23
	.ascii "_STREAMBUF_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.file 158 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/basic_ios.h"
	.byte	0x3
	.uleb128 0x2c
	.uleb128 0x9e
	.byte	0x1
	.uleb128 0x1f
	.ascii "_BASIC_IOS_H 1\0"
	.file 159 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/locale_facets.h"
	.byte	0x3
	.uleb128 0x25
	.uleb128 0x9f
	.byte	0x1
	.uleb128 0x23
	.ascii "_LOCALE_FACETS_H 1\0"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x23
	.byte	0x3
	.uleb128 0x32
	.uleb128 0x47
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_WCTYPE \0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "_UPPER 0x1\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "_LOWER 0x2\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "_DIGIT 0x4\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "_SPACE 0x8\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "_PUNCT 0x10\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "_CONTROL 0x20\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "_BLANK 0x40\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "_HEX 0x80\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "_LEADBYTE 0x8000\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "_ALPHA (0x0100|_UPPER|_LOWER)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x36
	.ascii "_GLIBCXX_CWCTYPE 1\0"
	.byte	0x2
	.uleb128 0x39
	.ascii "iswalnum\0"
	.byte	0x2
	.uleb128 0x3a
	.ascii "iswalpha\0"
	.byte	0x2
	.uleb128 0x3c
	.ascii "iswblank\0"
	.byte	0x2
	.uleb128 0x3e
	.ascii "iswcntrl\0"
	.byte	0x2
	.uleb128 0x3f
	.ascii "iswctype\0"
	.byte	0x2
	.uleb128 0x40
	.ascii "iswdigit\0"
	.byte	0x2
	.uleb128 0x41
	.ascii "iswgraph\0"
	.byte	0x2
	.uleb128 0x42
	.ascii "iswlower\0"
	.byte	0x2
	.uleb128 0x43
	.ascii "iswprint\0"
	.byte	0x2
	.uleb128 0x44
	.ascii "iswpunct\0"
	.byte	0x2
	.uleb128 0x45
	.ascii "iswspace\0"
	.byte	0x2
	.uleb128 0x46
	.ascii "iswupper\0"
	.byte	0x2
	.uleb128 0x47
	.ascii "iswxdigit\0"
	.byte	0x2
	.uleb128 0x48
	.ascii "towctrans\0"
	.byte	0x2
	.uleb128 0x49
	.ascii "towlower\0"
	.byte	0x2
	.uleb128 0x4a
	.ascii "towupper\0"
	.byte	0x2
	.uleb128 0x4b
	.ascii "wctrans\0"
	.byte	0x2
	.uleb128 0x4c
	.ascii "wctype\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x5a
	.byte	0x4
	.file 160 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/ctype_base.h"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0xa0
	.byte	0x4
	.file 161 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/streambuf_iterator.h"
	.byte	0x3
	.uleb128 0x30
	.uleb128 0xa1
	.byte	0x1
	.uleb128 0x1f
	.ascii "_STREAMBUF_ITERATOR_H 1\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_NUM_FACETS 28\0"
	.file 162 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/ctype_inline.h"
	.byte	0x3
	.uleb128 0x5e7
	.uleb128 0xa2
	.byte	0x4
	.file 163 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/locale_facets.tcc"
	.byte	0x3
	.uleb128 0xa30
	.uleb128 0xa3
	.byte	0x1
	.uleb128 0x1f
	.ascii "_LOCALE_FACETS_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.file 164 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/basic_ios.tcc"
	.byte	0x3
	.uleb128 0x1db
	.uleb128 0xa4
	.byte	0x1
	.uleb128 0x1f
	.ascii "_BASIC_IOS_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 165 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ostream"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0xa5
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBCXX_OSTREAM 1\0"
	.file 166 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/ostream.tcc"
	.byte	0x3
	.uleb128 0x261
	.uleb128 0xa6
	.byte	0x1
	.uleb128 0x23
	.ascii "_OSTREAM_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.file 167 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/istream.tcc"
	.byte	0x3
	.uleb128 0x36f
	.uleb128 0xa7
	.byte	0x1
	.uleb128 0x23
	.ascii "_ISTREAM_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.file 168 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/sstream.tcc"
	.byte	0x3
	.uleb128 0x258
	.uleb128 0xa8
	.byte	0x1
	.uleb128 0x23
	.ascii "_SSTREAM_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x2
	.uleb128 0x30
	.ascii "complex\0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x35
	.uleb128 0x25
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_CFENV 1\0"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x24
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_FENV_H 1\0"
	.byte	0x3
	.uleb128 0x24
	.uleb128 0x49
	.byte	0x1
	.uleb128 0x7
	.ascii "_FENV_H_ \0"
	.byte	0x1
	.uleb128 0xc
	.ascii "FE_INVALID 0x01\0"
	.byte	0x1
	.uleb128 0xd
	.ascii "FE_DENORMAL 0x02\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "FE_DIVBYZERO 0x04\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "FE_OVERFLOW 0x08\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "FE_UNDERFLOW 0x10\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "FE_INEXACT 0x20\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "FE_ALL_EXCEPT (FE_INVALID | FE_DENORMAL | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW | FE_INEXACT)\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "FE_TONEAREST 0x0000\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "FE_DOWNWARD 0x0400\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "FE_UPWARD 0x0800\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "FE_TOWARDZERO 0x0c00\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "__MXCSR_EXCEPT_FLAG_SHIFT 0\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "__MXCSR_EXCEPT_MASK_SHIFT 7\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "__MXCSR_ROUND_FLAG_SHIFT 3\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "FE_PC64_ENV ((const fenv_t *)-1)\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "FE_PC53_ENV ((const fenv_t *)-2)\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "FE_DFL_ENV ((const fenv_t *) 0)\0"
	.byte	0x4
	.byte	0x2
	.uleb128 0x2b
	.ascii "feclearexcept\0"
	.byte	0x2
	.uleb128 0x2c
	.ascii "fegetexceptflag\0"
	.byte	0x2
	.uleb128 0x2d
	.ascii "feraiseexcept\0"
	.byte	0x2
	.uleb128 0x2e
	.ascii "fesetexceptflag\0"
	.byte	0x2
	.uleb128 0x2f
	.ascii "fetestexcept\0"
	.byte	0x2
	.uleb128 0x30
	.ascii "fegetround\0"
	.byte	0x2
	.uleb128 0x31
	.ascii "fesetround\0"
	.byte	0x2
	.uleb128 0x32
	.ascii "fegetenv\0"
	.byte	0x2
	.uleb128 0x33
	.ascii "feholdexcept\0"
	.byte	0x2
	.uleb128 0x34
	.ascii "fesetenv\0"
	.byte	0x2
	.uleb128 0x35
	.ascii "feupdateenv\0"
	.byte	0x4
	.byte	0x2
	.uleb128 0x2e
	.ascii "feclearexcept\0"
	.byte	0x2
	.uleb128 0x2f
	.ascii "fegetexceptflag\0"
	.byte	0x2
	.uleb128 0x30
	.ascii "feraiseexcept\0"
	.byte	0x2
	.uleb128 0x31
	.ascii "fesetexceptflag\0"
	.byte	0x2
	.uleb128 0x32
	.ascii "fetestexcept\0"
	.byte	0x2
	.uleb128 0x33
	.ascii "fegetround\0"
	.byte	0x2
	.uleb128 0x34
	.ascii "fesetround\0"
	.byte	0x2
	.uleb128 0x35
	.ascii "fegetenv\0"
	.byte	0x2
	.uleb128 0x36
	.ascii "feholdexcept\0"
	.byte	0x2
	.uleb128 0x37
	.ascii "fesetenv\0"
	.byte	0x2
	.uleb128 0x38
	.ascii "feupdateenv\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x36
	.uleb128 0x26
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_CINTTYPES 1\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "_UNDEF__STDC_FORMAT_MACROS \0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "__STDC_FORMAT_MACROS \0"
	.byte	0x3
	.uleb128 0x2e
	.uleb128 0x4a
	.byte	0x1
	.uleb128 0x9
	.ascii "_INTTYPES_H_ \0"
	.byte	0x1
	.uleb128 0xd
	.ascii "__need_wchar_t \0"
	.byte	0x3
	.uleb128 0xe
	.uleb128 0x6d
	.byte	0x3
	.uleb128 0x1
	.uleb128 0x3f
	.byte	0x2
	.uleb128 0xa3
	.ascii "__need_ptrdiff_t\0"
	.byte	0x2
	.uleb128 0xf0
	.ascii "__need_size_t\0"
	.byte	0x2
	.uleb128 0x151
	.ascii "__need_wchar_t\0"
	.byte	0x2
	.uleb128 0x18a
	.ascii "NULL\0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "NULL __null\0"
	.byte	0x2
	.uleb128 0x199
	.ascii "__need_NULL\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)\0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x1a
	.uleb128 0x64
	.byte	0x4
	.byte	0x1
	.uleb128 0x27
	.ascii "PRId8 \"d\"\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "PRId16 \"d\"\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "PRId32 \"d\"\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "PRId64 \"I64d\"\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "PRIdLEAST8 \"d\"\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "PRIdLEAST16 \"d\"\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "PRIdLEAST32 \"d\"\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "PRIdLEAST64 \"I64d\"\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "PRIdFAST8 \"d\"\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "PRIdFAST16 \"d\"\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "PRIdFAST32 \"d\"\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "PRIdFAST64 \"I64d\"\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "PRIdMAX \"I64d\"\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "PRIi8 \"i\"\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "PRIi16 \"i\"\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "PRIi32 \"i\"\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "PRIi64 \"I64i\"\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "PRIiLEAST8 \"i\"\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "PRIiLEAST16 \"i\"\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "PRIiLEAST32 \"i\"\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "PRIiLEAST64 \"I64i\"\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "PRIiFAST8 \"i\"\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "PRIiFAST16 \"i\"\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "PRIiFAST32 \"i\"\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "PRIiFAST64 \"I64i\"\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "PRIiMAX \"I64i\"\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "PRIo8 \"o\"\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "PRIo16 \"o\"\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "PRIo32 \"o\"\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "PRIo64 \"I64o\"\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "PRIoLEAST8 \"o\"\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "PRIoLEAST16 \"o\"\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "PRIoLEAST32 \"o\"\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "PRIoLEAST64 \"I64o\"\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "PRIoFAST8 \"o\"\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "PRIoFAST16 \"o\"\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "PRIoFAST32 \"o\"\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "PRIoFAST64 \"I64o\"\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "PRIoMAX \"I64o\"\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "PRIu8 \"u\"\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "PRIu16 \"u\"\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "PRIu32 \"u\"\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "PRIu64 \"I64u\"\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "PRIuLEAST8 \"u\"\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "PRIuLEAST16 \"u\"\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "PRIuLEAST32 \"u\"\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "PRIuLEAST64 \"I64u\"\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "PRIuFAST8 \"u\"\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "PRIuFAST16 \"u\"\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "PRIuFAST32 \"u\"\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "PRIuFAST64 \"I64u\"\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "PRIuMAX \"I64u\"\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "PRIx8 \"x\"\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "PRIx16 \"x\"\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "PRIx32 \"x\"\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "PRIx64 \"I64x\"\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "PRIxLEAST8 \"x\"\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "PRIxLEAST16 \"x\"\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "PRIxLEAST32 \"x\"\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "PRIxLEAST64 \"I64x\"\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "PRIxFAST8 \"x\"\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "PRIxFAST16 \"x\"\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "PRIxFAST32 \"x\"\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "PRIxFAST64 \"I64x\"\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "PRIxMAX \"I64x\"\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "PRIX8 \"X\"\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "PRIX16 \"X\"\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "PRIX32 \"X\"\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "PRIX64 \"I64X\"\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "PRIXLEAST8 \"X\"\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "PRIXLEAST16 \"X\"\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "PRIXLEAST32 \"X\"\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "PRIXLEAST64 \"I64X\"\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "PRIXFAST8 \"X\"\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "PRIXFAST16 \"X\"\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "PRIXFAST32 \"X\"\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "PRIXFAST64 \"I64X\"\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "PRIXMAX \"I64X\"\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "SCNd16 \"hd\"\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "SCNd32 \"d\"\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "SCNd64 \"I64d\"\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "SCNdLEAST16 \"hd\"\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "SCNdLEAST32 \"d\"\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "SCNdLEAST64 \"I64d\"\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "SCNdFAST16 \"hd\"\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "SCNdFAST32 \"d\"\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "SCNdFAST64 \"I64d\"\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "SCNdMAX \"I64d\"\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "SCNi16 \"hi\"\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "SCNi32 \"i\"\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "SCNi64 \"I64i\"\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "SCNiLEAST16 \"hi\"\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "SCNiLEAST32 \"i\"\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "SCNiLEAST64 \"I64i\"\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "SCNiFAST16 \"hi\"\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "SCNiFAST32 \"i\"\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "SCNiFAST64 \"I64i\"\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "SCNiMAX \"I64i\"\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "SCNo16 \"ho\"\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "SCNo32 \"o\"\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "SCNo64 \"I64o\"\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "SCNoLEAST16 \"ho\"\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "SCNoLEAST32 \"o\"\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "SCNoLEAST64 \"I64o\"\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "SCNoFAST16 \"ho\"\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "SCNoFAST32 \"o\"\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "SCNoFAST64 \"I64o\"\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "SCNoMAX \"I64o\"\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "SCNx16 \"hx\"\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "SCNx32 \"x\"\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "SCNx64 \"I64x\"\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "SCNxLEAST16 \"hx\"\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "SCNxLEAST32 \"x\"\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "SCNxLEAST64 \"I64x\"\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "SCNxFAST16 \"hx\"\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "SCNxFAST32 \"x\"\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "SCNxFAST64 \"I64x\"\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "SCNxMAX \"I64x\"\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "SCNu16 \"hu\"\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "SCNu32 \"u\"\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "SCNu64 \"I64u\"\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "SCNuLEAST16 \"hu\"\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "SCNuLEAST32 \"u\"\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "SCNuLEAST64 \"I64u\"\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "SCNuFAST16 \"hu\"\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "SCNuFAST32 \"u\"\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "SCNuFAST64 \"I64u\"\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "SCNuMAX \"I64u\"\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "PRIdPTR \"I64d\"\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "PRIiPTR \"I64i\"\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "PRIoPTR \"I64o\"\0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "PRIuPTR \"I64u\"\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "PRIxPTR \"I64x\"\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "PRIXPTR \"I64X\"\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "SCNdPTR \"I64d\"\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "SCNiPTR \"I64i\"\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "SCNoPTR \"I64o\"\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "SCNxPTR \"I64x\"\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "SCNuPTR \"I64u\"\0"
	.byte	0x3
	.uleb128 0x12b
	.uleb128 0x67
	.byte	0x2
	.uleb128 0xc
	.ascii "PRId64\0"
	.byte	0x2
	.uleb128 0xd
	.ascii "PRIdLEAST64\0"
	.byte	0x2
	.uleb128 0xe
	.ascii "PRIdFAST64\0"
	.byte	0x2
	.uleb128 0xf
	.ascii "PRIdMAX\0"
	.byte	0x2
	.uleb128 0x10
	.ascii "PRIi64\0"
	.byte	0x2
	.uleb128 0x11
	.ascii "PRIiLEAST64\0"
	.byte	0x2
	.uleb128 0x12
	.ascii "PRIiFAST64\0"
	.byte	0x2
	.uleb128 0x13
	.ascii "PRIiMAX\0"
	.byte	0x2
	.uleb128 0x14
	.ascii "PRIo64\0"
	.byte	0x2
	.uleb128 0x15
	.ascii "PRIoLEAST64\0"
	.byte	0x2
	.uleb128 0x16
	.ascii "PRIoFAST64\0"
	.byte	0x2
	.uleb128 0x17
	.ascii "PRIoMAX\0"
	.byte	0x2
	.uleb128 0x18
	.ascii "PRIu64\0"
	.byte	0x2
	.uleb128 0x19
	.ascii "PRIuLEAST64\0"
	.byte	0x2
	.uleb128 0x1a
	.ascii "PRIuFAST64\0"
	.byte	0x2
	.uleb128 0x1b
	.ascii "PRIuMAX\0"
	.byte	0x2
	.uleb128 0x1c
	.ascii "PRIx64\0"
	.byte	0x2
	.uleb128 0x1d
	.ascii "PRIxLEAST64\0"
	.byte	0x2
	.uleb128 0x1e
	.ascii "PRIxFAST64\0"
	.byte	0x2
	.uleb128 0x1f
	.ascii "PRIxMAX\0"
	.byte	0x2
	.uleb128 0x20
	.ascii "PRIX64\0"
	.byte	0x2
	.uleb128 0x21
	.ascii "PRIXLEAST64\0"
	.byte	0x2
	.uleb128 0x22
	.ascii "PRIXFAST64\0"
	.byte	0x2
	.uleb128 0x23
	.ascii "PRIXMAX\0"
	.byte	0x2
	.uleb128 0x25
	.ascii "SCNd64\0"
	.byte	0x2
	.uleb128 0x26
	.ascii "SCNdLEAST64\0"
	.byte	0x2
	.uleb128 0x27
	.ascii "SCNdFAST64\0"
	.byte	0x2
	.uleb128 0x28
	.ascii "SCNdMAX\0"
	.byte	0x2
	.uleb128 0x29
	.ascii "SCNi64\0"
	.byte	0x2
	.uleb128 0x2a
	.ascii "SCNiLEAST64\0"
	.byte	0x2
	.uleb128 0x2b
	.ascii "SCNiFAST64\0"
	.byte	0x2
	.uleb128 0x2c
	.ascii "SCNiMAX\0"
	.byte	0x2
	.uleb128 0x2d
	.ascii "SCNo64\0"
	.byte	0x2
	.uleb128 0x2e
	.ascii "SCNoLEAST64\0"
	.byte	0x2
	.uleb128 0x2f
	.ascii "SCNoFAST64\0"
	.byte	0x2
	.uleb128 0x30
	.ascii "SCNoMAX\0"
	.byte	0x2
	.uleb128 0x31
	.ascii "SCNx64\0"
	.byte	0x2
	.uleb128 0x32
	.ascii "SCNxLEAST64\0"
	.byte	0x2
	.uleb128 0x33
	.ascii "SCNxFAST64\0"
	.byte	0x2
	.uleb128 0x34
	.ascii "SCNxMAX\0"
	.byte	0x2
	.uleb128 0x35
	.ascii "SCNu64\0"
	.byte	0x2
	.uleb128 0x36
	.ascii "SCNuLEAST64\0"
	.byte	0x2
	.uleb128 0x37
	.ascii "SCNuFAST64\0"
	.byte	0x2
	.uleb128 0x38
	.ascii "SCNuMAX\0"
	.byte	0x2
	.uleb128 0x3b
	.ascii "PRIdPTR\0"
	.byte	0x2
	.uleb128 0x3c
	.ascii "PRIiPTR\0"
	.byte	0x2
	.uleb128 0x3d
	.ascii "PRIoPTR\0"
	.byte	0x2
	.uleb128 0x3e
	.ascii "PRIuPTR\0"
	.byte	0x2
	.uleb128 0x3f
	.ascii "PRIxPTR\0"
	.byte	0x2
	.uleb128 0x40
	.ascii "PRIXPTR\0"
	.byte	0x2
	.uleb128 0x42
	.ascii "SCNdPTR\0"
	.byte	0x2
	.uleb128 0x43
	.ascii "SCNiPTR\0"
	.byte	0x2
	.uleb128 0x44
	.ascii "SCNoPTR\0"
	.byte	0x2
	.uleb128 0x45
	.ascii "SCNxPTR\0"
	.byte	0x2
	.uleb128 0x46
	.ascii "SCNuPTR\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "PRId64 \"lld\"\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "PRIdLEAST64 \"lld\"\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "PRIdFAST64 \"lld\"\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "PRIdMAX \"lld\"\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "PRIi64 \"lli\"\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "PRIiLEAST64 \"lli\"\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "PRIiFAST64 \"lli\"\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "PRIiMAX \"lli\"\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "PRIo64 \"llo\"\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "PRIoLEAST64 \"llo\"\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "PRIoFAST64 \"llo\"\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "PRIoMAX \"llo\"\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "PRIu64 \"llu\"\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "PRIuLEAST64 \"llu\"\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "PRIuFAST64 \"llu\"\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "PRIuMAX \"llu\"\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "PRIx64 \"llx\"\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "PRIxLEAST64 \"llx\"\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "PRIxFAST64 \"llx\"\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "PRIxMAX \"llx\"\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "PRIX64 \"llX\"\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "PRIXLEAST64 \"llX\"\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "PRIXFAST64 \"llX\"\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "PRIXMAX \"llX\"\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "SCNd64 \"lld\"\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "SCNdLEAST64 \"lld\"\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "SCNdFAST64 \"lld\"\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "SCNdMAX \"lld\"\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "SCNi64 \"lli\"\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "SCNiLEAST64 \"lli\"\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "SCNiFAST64 \"lli\"\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "SCNiMAX \"lli\"\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "SCNo64 \"llo\"\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "SCNoLEAST64 \"llo\"\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "SCNoFAST64 \"llo\"\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "SCNoMAX \"llo\"\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "SCNx64 \"llx\"\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "SCNxLEAST64 \"llx\"\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "SCNxFAST64 \"llx\"\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "SCNxMAX \"llx\"\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "SCNu64 \"llu\"\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "SCNuLEAST64 \"llu\"\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "SCNuFAST64 \"llu\"\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "SCNuMAX \"llu\"\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "PRIdPTR \"lld\"\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "PRIiPTR \"lli\"\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "PRIoPTR \"llo\"\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "PRIuPTR \"llu\"\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "PRIxPTR \"llx\"\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "PRIXPTR \"llX\"\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "SCNdPTR \"lld\"\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "SCNiPTR \"lli\"\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "SCNoPTR \"llo\"\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "SCNxPTR \"llx\"\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "SCNuPTR \"llu\"\0"
	.byte	0x4
	.byte	0x4
	.byte	0x2
	.uleb128 0x30
	.ascii "__STDC_FORMAT_MACROS\0"
	.byte	0x2
	.uleb128 0x31
	.ascii "_UNDEF__STDC_FORMAT_MACROS\0"
	.byte	0x4
	.file 169 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cstdalign"
	.byte	0x3
	.uleb128 0x37
	.uleb128 0xa9
	.byte	0x1
	.uleb128 0x20
	.ascii "_GLIBCXX_CSTDALIGN 1\0"
	.file 170 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/stdalign.h"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0xaa
	.byte	0x1
	.uleb128 0x1b
	.ascii "_STDALIGN_H \0"
	.byte	0x4
	.byte	0x4
	.file 171 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/cstdbool"
	.byte	0x3
	.uleb128 0x38
	.uleb128 0xab
	.byte	0x1
	.uleb128 0x20
	.ascii "_GLIBCXX_CSTDBOOL 1\0"
	.file 172 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/stdbool.h"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0xac
	.byte	0x1
	.uleb128 0x1d
	.ascii "_STDBOOL_H \0"
	.byte	0x1
	.uleb128 0x28
	.ascii "_Bool bool\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "bool bool\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "false false\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "true true\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "__bool_true_false_are_defined 1\0"
	.byte	0x4
	.byte	0x4
	.file 173 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ctgmath"
	.byte	0x3
	.uleb128 0x3a
	.uleb128 0xad
	.byte	0x1
	.uleb128 0x20
	.ascii "_GLIBCXX_CTGMATH 1\0"
	.byte	0x3
	.uleb128 0x25
	.uleb128 0xd
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x3b
	.uleb128 0x16
	.byte	0x4
	.byte	0x3
	.uleb128 0x3c
	.uleb128 0x23
	.byte	0x4
	.file 174 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/algorithm"
	.byte	0x3
	.uleb128 0x40
	.uleb128 0xae
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_ALGORITHM 1\0"
	.file 175 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/utility"
	.byte	0x3
	.uleb128 0x3c
	.uleb128 0xaf
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_UTILITY 1\0"
	.file 176 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_relops.h"
	.byte	0x3
	.uleb128 0x45
	.uleb128 0xb0
	.byte	0x1
	.uleb128 0x41
	.ascii "_STL_RELOPS_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 177 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_algo.h"
	.byte	0x3
	.uleb128 0x3e
	.uleb128 0xb1
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_ALGO_H 1\0"
	.byte	0x3
	.uleb128 0x3b
	.uleb128 0x13
	.byte	0x4
	.file 178 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/algorithmfwd.h"
	.byte	0x3
	.uleb128 0x3c
	.uleb128 0xb2
	.byte	0x1
	.uleb128 0x1f
	.ascii "_GLIBCXX_ALGORITHMFWD_H 1\0"
	.byte	0x4
	.file 179 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_heap.h"
	.byte	0x3
	.uleb128 0x3d
	.uleb128 0xb3
	.byte	0x1
	.uleb128 0x38
	.ascii "_STL_HEAP_H 1\0"
	.byte	0x4
	.file 180 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tempbuf.h"
	.byte	0x3
	.uleb128 0x3e
	.uleb128 0xb4
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_TEMPBUF_H 1\0"
	.file 181 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_construct.h"
	.byte	0x3
	.uleb128 0x3c
	.uleb128 0xb5
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_CONSTRUCT_H 1\0"
	.file 182 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/alloc_traits.h"
	.byte	0x3
	.uleb128 0x3d
	.uleb128 0xb6
	.byte	0x1
	.uleb128 0x1e
	.ascii "_EXT_ALLOC_TRAITS_H 1\0"
	.file 183 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/alloc_traits.h"
	.byte	0x3
	.uleb128 0x24
	.uleb128 0xb7
	.byte	0x1
	.uleb128 0x1f
	.ascii "_ALLOC_TRAITS_H 1\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "_GLIBCXX_ALLOC_TR_NESTED_TYPE(_NTYPE,_ALT) private: template<typename _Tp> static typename _Tp::_NTYPE _S_ ##_NTYPE ##_helper(_Tp*); static _ALT _S_ ##_NTYPE ##_helper(...); typedef decltype(_S_ ##_NTYPE ##_helper((_Alloc*)0)) __ ##_NTYPE; public:\0"
	.byte	0x2
	.uleb128 0xc2
	.ascii "_GLIBCXX_ALLOC_TR_NESTED_TYPE\0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 184 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/random"
	.byte	0x3
	.uleb128 0x42
	.uleb128 0xb8
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_RANDOM 1\0"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0xd
	.byte	0x4
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x13
	.byte	0x4
	.file 185 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/limits"
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0xb9
	.byte	0x1
	.uleb128 0x26
	.ascii "_GLIBCXX_NUMERIC_LIMITS 1\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "__glibcxx_integral_traps true\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "__glibcxx_float_has_denorm_loss false\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "__glibcxx_float_traps false\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "__glibcxx_float_tinyness_before false\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "__glibcxx_double_has_denorm_loss false\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "__glibcxx_double_traps false\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "__glibcxx_double_tinyness_before false\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "__glibcxx_long_double_has_denorm_loss false\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "__glibcxx_long_double_traps false\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "__glibcxx_long_double_tinyness_before false\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "__glibcxx_signed(T) ((T)(-1) < 0)\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "__glibcxx_min(T) (__glibcxx_signed (T) ? -__glibcxx_max (T) - 1 : (T)0)\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "__glibcxx_max(T) (__glibcxx_signed (T) ? (((((T)1 << (__glibcxx_digits (T) - 1)) - 1) << 1) + 1) : ~(T)0)\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "__glibcxx_digits(T) (sizeof(T) * __CHAR_BIT__ - __glibcxx_signed (T))\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "__glibcxx_digits10(T) (__glibcxx_digits (T) * 643L / 2136)\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "__glibcxx_max_digits10(T) (2 + (T) * 643L / 2136)\0"
	.byte	0x2
	.uleb128 0x656
	.ascii "__glibcxx_float_has_denorm_loss\0"
	.byte	0x2
	.uleb128 0x657
	.ascii "__glibcxx_float_traps\0"
	.byte	0x2
	.uleb128 0x658
	.ascii "__glibcxx_float_tinyness_before\0"
	.byte	0x2
	.uleb128 0x6a1
	.ascii "__glibcxx_double_has_denorm_loss\0"
	.byte	0x2
	.uleb128 0x6a2
	.ascii "__glibcxx_double_traps\0"
	.byte	0x2
	.uleb128 0x6a3
	.ascii "__glibcxx_double_tinyness_before\0"
	.byte	0x2
	.uleb128 0x6ec
	.ascii "__glibcxx_long_double_has_denorm_loss\0"
	.byte	0x2
	.uleb128 0x6ed
	.ascii "__glibcxx_long_double_traps\0"
	.byte	0x2
	.uleb128 0x6ee
	.ascii "__glibcxx_long_double_tinyness_before\0"
	.byte	0x2
	.uleb128 0x6f3
	.ascii "__glibcxx_signed\0"
	.byte	0x2
	.uleb128 0x6f4
	.ascii "__glibcxx_min\0"
	.byte	0x2
	.uleb128 0x6f5
	.ascii "__glibcxx_max\0"
	.byte	0x2
	.uleb128 0x6f6
	.ascii "__glibcxx_digits\0"
	.byte	0x2
	.uleb128 0x6f7
	.ascii "__glibcxx_digits10\0"
	.byte	0x2
	.uleb128 0x6f8
	.ascii "__glibcxx_max_digits10\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x31
	.uleb128 0x27
	.byte	0x1
	.uleb128 0x20
	.ascii "_RANDOM_H 1\0"
	.file 186 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/vector"
	.byte	0x3
	.uleb128 0x22
	.uleb128 0xba
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_VECTOR 1\0"
	.file 187 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h"
	.byte	0x3
	.uleb128 0x3f
	.uleb128 0xbb
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_UNINITIALIZED_H 1\0"
	.byte	0x4
	.file 188 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h"
	.byte	0x3
	.uleb128 0x40
	.uleb128 0xbc
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_VECTOR_H 1\0"
	.byte	0x4
	.file 189 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_bvector.h"
	.byte	0x3
	.uleb128 0x41
	.uleb128 0xbd
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_BVECTOR_H 1\0"
	.byte	0x4
	.file 190 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc"
	.byte	0x3
	.uleb128 0x45
	.uleb128 0xbe
	.byte	0x1
	.uleb128 0x39
	.ascii "_VECTOR_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 191 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/opt_random.h"
	.byte	0x3
	.uleb128 0x32
	.uleb128 0xbf
	.byte	0x1
	.uleb128 0x1f
	.ascii "_BITS_OPT_RANDOM_H 1\0"
	.file 192 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/x86intrin.h"
	.byte	0x3
	.uleb128 0x21
	.uleb128 0xc0
	.byte	0x1
	.uleb128 0x19
	.ascii "_X86INTRIN_H_INCLUDED \0"
	.file 193 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/ia32intrin.h"
	.byte	0x3
	.uleb128 0x1b
	.uleb128 0xc1
	.byte	0x1
	.uleb128 0x37
	.ascii "__DISABLE_SSE4_2__ \0"
	.byte	0x2
	.uleb128 0x51
	.ascii "__DISABLE_SSE4_2__\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "__DISABLE_SSE4_2__ \0"
	.byte	0x2
	.uleb128 0xd5
	.ascii "__DISABLE_SSE4_2__\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "_bswap64(a) __bswapq(a)\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "_popcnt64(a) __popcntq(a)\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "_lrotl(a,b) __rold((a), (b))\0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "_lrotr(a,b) __rord((a), (b))\0"
	.byte	0x1
	.uleb128 0x121
	.ascii "_bit_scan_forward(a) __bsfd(a)\0"
	.byte	0x1
	.uleb128 0x122
	.ascii "_bit_scan_reverse(a) __bsrd(a)\0"
	.byte	0x1
	.uleb128 0x123
	.ascii "_bswap(a) __bswapd(a)\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "_popcnt32(a) __popcntd(a)\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "_rdpmc(a) __rdpmc(a)\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "_rdtsc() __rdtsc()\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "_rdtscp(a) __rdtscp(a)\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "_rotwl(a,b) __rolw((a), (b))\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "_rotwr(a,b) __rorw((a), (b))\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "_rotl(a,b) __rold((a), (b))\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "_rotr(a,b) __rord((a), (b))\0"
	.byte	0x4
	.file 194 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/mmintrin.h"
	.byte	0x3
	.uleb128 0x1d
	.uleb128 0xc2
	.byte	0x1
	.uleb128 0x1c
	.ascii "_MMINTRIN_H_INCLUDED \0"
	.byte	0x4
	.file 195 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/xmmintrin.h"
	.byte	0x3
	.uleb128 0x1f
	.uleb128 0xc3
	.byte	0x1
	.uleb128 0x1c
	.ascii "_XMMINTRIN_H_INCLUDED \0"
	.file 196 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/mm_malloc.h"
	.byte	0x3
	.uleb128 0x22
	.uleb128 0xc4
	.byte	0x4
	.byte	0x1
	.uleb128 0x39
	.ascii "_mm_prefetch(P,I) __builtin_prefetch ((P), ((I & 0x4) >> 2), (I & 0x3))\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "_MM_SHUFFLE(fp3,fp2,fp1,fp0) (((fp3) << 6) | ((fp2) << 4) | ((fp1) << 2) | (fp0))\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "_MM_EXCEPT_MASK 0x003f\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "_MM_EXCEPT_INVALID 0x0001\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "_MM_EXCEPT_DENORM 0x0002\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "_MM_EXCEPT_DIV_ZERO 0x0004\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "_MM_EXCEPT_OVERFLOW 0x0008\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "_MM_EXCEPT_UNDERFLOW 0x0010\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "_MM_EXCEPT_INEXACT 0x0020\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "_MM_MASK_MASK 0x1f80\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "_MM_MASK_INVALID 0x0080\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "_MM_MASK_DENORM 0x0100\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "_MM_MASK_DIV_ZERO 0x0200\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "_MM_MASK_OVERFLOW 0x0400\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "_MM_MASK_UNDERFLOW 0x0800\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "_MM_MASK_INEXACT 0x1000\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "_MM_ROUND_MASK 0x6000\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "_MM_ROUND_NEAREST 0x0000\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "_MM_ROUND_DOWN 0x2000\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "_MM_ROUND_UP 0x4000\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "_MM_ROUND_TOWARD_ZERO 0x6000\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "_MM_FLUSH_ZERO_MASK 0x8000\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "_MM_FLUSH_ZERO_ON 0x8000\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "_MM_FLUSH_ZERO_OFF 0x0000\0"
	.byte	0x1
	.uleb128 0x2ea
	.ascii "_mm_shuffle_ps(A,B,MASK) ((__m128) __builtin_ia32_shufps ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(MASK)))\0"
	.byte	0x1
	.uleb128 0x404
	.ascii "_mm_extract_pi16(A,N) ((int) __builtin_ia32_vec_ext_v4hi ((__v4hi)(__m64)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x407
	.ascii "_m_pextrw(A,N) _mm_extract_pi16(A, N)\0"
	.byte	0x1
	.uleb128 0x419
	.ascii "_mm_insert_pi16(A,D,N) ((__m64) __builtin_ia32_vec_set_v4hi ((__v4hi)(__m64)(A), (int)(D), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x41d
	.ascii "_m_pinsrw(A,D,N) _mm_insert_pi16(A, D, N)\0"
	.byte	0x1
	.uleb128 0x47e
	.ascii "_mm_shuffle_pi16(A,N) ((__m64) __builtin_ia32_pshufw ((__v4hi)(__m64)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x481
	.ascii "_m_pshufw(A,N) _mm_shuffle_pi16 (A, N)\0"
	.byte	0x1
	.uleb128 0x4dc
	.ascii "_MM_TRANSPOSE4_PS(row0,row1,row2,row3) do { __v4sf __r0 = (row0), __r1 = (row1), __r2 = (row2), __r3 = (row3); __v4sf __t0 = __builtin_ia32_unpcklps (__r0, __r1); __v4sf __t1 = __builtin_ia32_unpcklps (__r2, __r3); __v4sf __t2 = __builtin_ia32_unpckhps (__r0, __r1); __v4sf __t3 = __builtin_ia32_unpckhps (__r2, __r3); (row0) = __builtin_ia32_movlhps (__t0, __t1); (row1) = __builtin_ia32_movhlps (__t1, __t0); (row2) = __builtin_ia32_movlhps (__t2, __t3); (row3) = __builtin_ia32_movhlps (__t3, __t2); } while (0)\0"
	.file 197 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/emmintrin.h"
	.byte	0x3
	.uleb128 0x4ea
	.uleb128 0xc5
	.byte	0x1
	.uleb128 0x1c
	.ascii "_EMMINTRIN_H_INCLUDED \0"
	.byte	0x3
	.uleb128 0x1f
	.uleb128 0xc3
	.byte	0x4
	.byte	0x1
	.uleb128 0x34
	.ascii "_MM_SHUFFLE2(fp1,fp0) (((fp1) << 1) | (fp0))\0"
	.byte	0x1
	.uleb128 0x389
	.ascii "_mm_shuffle_pd(A,B,N) ((__m128d)__builtin_ia32_shufpd ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x497
	.ascii "_mm_srli_si128(A,N) ((__m128i)__builtin_ia32_psrldqi128 ((__m128i)(A), (int)(N) * 8))\0"
	.byte	0x1
	.uleb128 0x499
	.ascii "_mm_slli_si128(A,N) ((__m128i)__builtin_ia32_pslldqi128 ((__m128i)(A), (int)(N) * 8))\0"
	.byte	0x1
	.uleb128 0x53a
	.ascii "_mm_extract_epi16(A,N) ((int) (unsigned short) __builtin_ia32_vec_ext_v8hi ((__v8hi)(__m128i)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x53c
	.ascii "_mm_insert_epi16(A,D,N) ((__m128i) __builtin_ia32_vec_set_v8hi ((__v8hi)(__m128i)(A), (int)(D), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x578
	.ascii "_mm_shufflehi_epi16(A,N) ((__m128i)__builtin_ia32_pshufhw ((__v8hi)(__m128i)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x57a
	.ascii "_mm_shufflelo_epi16(A,N) ((__m128i)__builtin_ia32_pshuflw ((__v8hi)(__m128i)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x57c
	.ascii "_mm_shuffle_epi32(A,N) ((__m128i)__builtin_ia32_pshufd ((__v4si)(__m128i)(A), (int)(N)))\0"
	.byte	0x4
	.byte	0x4
	.file 198 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/pmmintrin.h"
	.byte	0x3
	.uleb128 0x23
	.uleb128 0xc6
	.byte	0x1
	.uleb128 0x1c
	.ascii "_PMMINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x24
	.ascii "__DISABLE_SSE3__ \0"
	.byte	0x1
	.uleb128 0x28
	.ascii "_MM_DENORMALS_ZERO_MASK 0x0040\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "_MM_DENORMALS_ZERO_ON 0x0040\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "_MM_DENORMALS_ZERO_OFF 0x0000\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "_MM_SET_DENORMALS_ZERO_MODE(mode) _mm_setcsr ((_mm_getcsr () & ~_MM_DENORMALS_ZERO_MASK) | (mode))\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "_MM_GET_DENORMALS_ZERO_MODE() (_mm_getcsr() & _MM_DENORMALS_ZERO_MASK)\0"
	.byte	0x2
	.uleb128 0x80
	.ascii "__DISABLE_SSE3__\0"
	.byte	0x4
	.file 199 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/tmmintrin.h"
	.byte	0x3
	.uleb128 0x25
	.uleb128 0xc7
	.byte	0x1
	.uleb128 0x1c
	.ascii "_TMMINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x24
	.ascii "__DISABLE_SSSE3__ \0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "_mm_alignr_epi8(X,Y,N) ((__m128i) __builtin_ia32_palignr128 ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)(N) * 8))\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "_mm_alignr_pi8(X,Y,N) ((__m64) __builtin_ia32_palignr ((__v1di)(__m64)(X), (__v1di)(__m64)(Y), (int)(N) * 8))\0"
	.byte	0x2
	.uleb128 0xf5
	.ascii "__DISABLE_SSSE3__\0"
	.byte	0x4
	.file 200 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/ammintrin.h"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0xc8
	.byte	0x1
	.uleb128 0x1c
	.ascii "_AMMINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x24
	.ascii "__DISABLE_SSE4A__ \0"
	.byte	0x1
	.uleb128 0x40
	.ascii "_mm_extracti_si64(X,I,L) ((__m128i) __builtin_ia32_extrqi ((__v2di)(__m128i)(X), (unsigned int)(I), (unsigned int)(L)))\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "_mm_inserti_si64(X,Y,I,L) ((__m128i) __builtin_ia32_insertqi ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (unsigned int)(I), (unsigned int)(L)))\0"
	.byte	0x2
	.uleb128 0x59
	.ascii "__DISABLE_SSE4A__\0"
	.byte	0x4
	.file 201 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/smmintrin.h"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0xc9
	.byte	0x1
	.uleb128 0x1c
	.ascii "_SMMINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x25
	.ascii "__DISABLE_SSE4_1__ \0"
	.byte	0x1
	.uleb128 0x29
	.ascii "_MM_FROUND_TO_NEAREST_INT 0x00\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "_MM_FROUND_TO_NEG_INF 0x01\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "_MM_FROUND_TO_POS_INF 0x02\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "_MM_FROUND_TO_ZERO 0x03\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "_MM_FROUND_CUR_DIRECTION 0x04\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "_MM_FROUND_RAISE_EXC 0x00\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "_MM_FROUND_NO_EXC 0x08\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "_MM_FROUND_NINT (_MM_FROUND_TO_NEAREST_INT | _MM_FROUND_RAISE_EXC)\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "_MM_FROUND_FLOOR (_MM_FROUND_TO_NEG_INF | _MM_FROUND_RAISE_EXC)\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "_MM_FROUND_CEIL (_MM_FROUND_TO_POS_INF | _MM_FROUND_RAISE_EXC)\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "_MM_FROUND_TRUNC (_MM_FROUND_TO_ZERO | _MM_FROUND_RAISE_EXC)\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "_MM_FROUND_RINT (_MM_FROUND_CUR_DIRECTION | _MM_FROUND_RAISE_EXC)\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "_MM_FROUND_NEARBYINT (_MM_FROUND_CUR_DIRECTION | _MM_FROUND_NO_EXC)\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "_mm_test_all_zeros(M,V) _mm_testz_si128 ((M), (V))\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "_mm_test_all_ones(V) _mm_testc_si128 ((V), _mm_cmpeq_epi32 ((V), (V)))\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "_mm_test_mix_ones_zeros(M,V) _mm_testnzc_si128 ((M), (V))\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "_mm_round_pd(V,M) ((__m128d) __builtin_ia32_roundpd ((__v2df)(__m128d)(V), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "_mm_round_sd(D,V,M) ((__m128d) __builtin_ia32_roundsd ((__v2df)(__m128d)(D), (__v2df)(__m128d)(V), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "_mm_round_ps(V,M) ((__m128) __builtin_ia32_roundps ((__v4sf)(__m128)(V), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "_mm_round_ss(D,V,M) ((__m128) __builtin_ia32_roundss ((__v4sf)(__m128)(D), (__v4sf)(__m128)(V), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "_mm_ceil_pd(V) _mm_round_pd ((V), _MM_FROUND_CEIL)\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "_mm_ceil_sd(D,V) _mm_round_sd ((D), (V), _MM_FROUND_CEIL)\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "_mm_floor_pd(V) _mm_round_pd((V), _MM_FROUND_FLOOR)\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "_mm_floor_sd(D,V) _mm_round_sd ((D), (V), _MM_FROUND_FLOOR)\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "_mm_ceil_ps(V) _mm_round_ps ((V), _MM_FROUND_CEIL)\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "_mm_ceil_ss(D,V) _mm_round_ss ((D), (V), _MM_FROUND_CEIL)\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "_mm_floor_ps(V) _mm_round_ps ((V), _MM_FROUND_FLOOR)\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "_mm_floor_ss(D,V) _mm_round_ss ((D), (V), _MM_FROUND_FLOOR)\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "_mm_blend_epi16(X,Y,M) ((__m128i) __builtin_ia32_pblendw128 ((__v8hi)(__m128i)(X), (__v8hi)(__m128i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "_mm_blend_ps(X,Y,M) ((__m128) __builtin_ia32_blendps ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "_mm_blend_pd(X,Y,M) ((__m128d) __builtin_ia32_blendpd ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "_mm_dp_ps(X,Y,M) ((__m128) __builtin_ia32_dpps ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "_mm_dp_pd(X,Y,M) ((__m128d) __builtin_ia32_dppd ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "_mm_insert_ps(D,S,N) ((__m128) __builtin_ia32_insertps128 ((__v4sf)(__m128)(D), (__v4sf)(__m128)(S), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "_MM_MK_INSERTPS_NDX(S,D,M) (((S) << 6) | ((D) << 4) | (M))\0"
	.byte	0x1
	.uleb128 0x175
	.ascii "_mm_extract_ps(X,N) (__extension__ ({ union { int i; float f; } __tmp; __tmp.f = __builtin_ia32_vec_ext_v4sf ((__v4sf)(__m128)(X), (int)(N)); __tmp.i; }))\0"
	.byte	0x1
	.uleb128 0x181
	.ascii "_MM_EXTRACT_FLOAT(D,S,N) { (D) = __builtin_ia32_vec_ext_v4sf ((__v4sf)(S), (N)); }\0"
	.byte	0x1
	.uleb128 0x186
	.ascii "_MM_PICK_OUT_PS(X,N) _mm_insert_ps (_mm_setzero_ps (), (X), _MM_MK_INSERTPS_NDX ((N), 0, 0x0e))\0"
	.byte	0x1
	.uleb128 0x1a5
	.ascii "_mm_insert_epi8(D,S,N) ((__m128i) __builtin_ia32_vec_set_v16qi ((__v16qi)(__m128i)(D), (int)(S), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x1a9
	.ascii "_mm_insert_epi32(D,S,N) ((__m128i) __builtin_ia32_vec_set_v4si ((__v4si)(__m128i)(D), (int)(S), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x1ae
	.ascii "_mm_insert_epi64(D,S,N) ((__m128i) __builtin_ia32_vec_set_v2di ((__v2di)(__m128i)(D), (long long)(S), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "_mm_extract_epi8(X,N) ((int) (unsigned char) __builtin_ia32_vec_ext_v16qi ((__v16qi)(__m128i)(X), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "_mm_extract_epi32(X,N) ((int) __builtin_ia32_vec_ext_v4si ((__v4si)(__m128i)(X), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "_mm_extract_epi64(X,N) ((long long) __builtin_ia32_vec_ext_v2di ((__v2di)(__m128i)(X), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x23f
	.ascii "_mm_mpsadbw_epu8(X,Y,M) ((__m128i) __builtin_ia32_mpsadbw128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x24e
	.ascii "__DISABLE_SSE4_2__ \0"
	.byte	0x1
	.uleb128 0x252
	.ascii "_SIDD_UBYTE_OPS 0x00\0"
	.byte	0x1
	.uleb128 0x253
	.ascii "_SIDD_UWORD_OPS 0x01\0"
	.byte	0x1
	.uleb128 0x254
	.ascii "_SIDD_SBYTE_OPS 0x02\0"
	.byte	0x1
	.uleb128 0x255
	.ascii "_SIDD_SWORD_OPS 0x03\0"
	.byte	0x1
	.uleb128 0x258
	.ascii "_SIDD_CMP_EQUAL_ANY 0x00\0"
	.byte	0x1
	.uleb128 0x259
	.ascii "_SIDD_CMP_RANGES 0x04\0"
	.byte	0x1
	.uleb128 0x25a
	.ascii "_SIDD_CMP_EQUAL_EACH 0x08\0"
	.byte	0x1
	.uleb128 0x25b
	.ascii "_SIDD_CMP_EQUAL_ORDERED 0x0c\0"
	.byte	0x1
	.uleb128 0x25e
	.ascii "_SIDD_POSITIVE_POLARITY 0x00\0"
	.byte	0x1
	.uleb128 0x25f
	.ascii "_SIDD_NEGATIVE_POLARITY 0x10\0"
	.byte	0x1
	.uleb128 0x260
	.ascii "_SIDD_MASKED_POSITIVE_POLARITY 0x20\0"
	.byte	0x1
	.uleb128 0x261
	.ascii "_SIDD_MASKED_NEGATIVE_POLARITY 0x30\0"
	.byte	0x1
	.uleb128 0x264
	.ascii "_SIDD_LEAST_SIGNIFICANT 0x00\0"
	.byte	0x1
	.uleb128 0x265
	.ascii "_SIDD_MOST_SIGNIFICANT 0x40\0"
	.byte	0x1
	.uleb128 0x268
	.ascii "_SIDD_BIT_MASK 0x00\0"
	.byte	0x1
	.uleb128 0x269
	.ascii "_SIDD_UNIT_MASK 0x40\0"
	.byte	0x1
	.uleb128 0x28e
	.ascii "_mm_cmpistrm(X,Y,M) ((__m128i) __builtin_ia32_pcmpistrm128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x291
	.ascii "_mm_cmpistri(X,Y,M) ((int) __builtin_ia32_pcmpistri128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x295
	.ascii "_mm_cmpestrm(X,LX,Y,LY,M) ((__m128i) __builtin_ia32_pcmpestrm128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x299
	.ascii "_mm_cmpestri(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestri128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x2f3
	.ascii "_mm_cmpistra(X,Y,M) ((int) __builtin_ia32_pcmpistria128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x2f6
	.ascii "_mm_cmpistrc(X,Y,M) ((int) __builtin_ia32_pcmpistric128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x2f9
	.ascii "_mm_cmpistro(X,Y,M) ((int) __builtin_ia32_pcmpistrio128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x2fc
	.ascii "_mm_cmpistrs(X,Y,M) ((int) __builtin_ia32_pcmpistris128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x2ff
	.ascii "_mm_cmpistrz(X,Y,M) ((int) __builtin_ia32_pcmpistriz128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x303
	.ascii "_mm_cmpestra(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestria128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x307
	.ascii "_mm_cmpestrc(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestric128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x30b
	.ascii "_mm_cmpestro(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestrio128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x30f
	.ascii "_mm_cmpestrs(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestris128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x313
	.ascii "_mm_cmpestrz(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestriz128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))\0"
	.byte	0x2
	.uleb128 0x322
	.ascii "__DISABLE_SSE4_2__\0"
	.byte	0x2
	.uleb128 0x327
	.ascii "__DISABLE_SSE4_1__\0"
	.file 202 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/popcntintrin.h"
	.byte	0x3
	.uleb128 0x32b
	.uleb128 0xca
	.byte	0x1
	.uleb128 0x19
	.ascii "_POPCNTINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "__DISABLE_POPCNT__ \0"
	.byte	0x2
	.uleb128 0x31
	.ascii "__DISABLE_POPCNT__\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x330
	.ascii "__DISABLE_SSE4_1__ \0"
	.byte	0x1
	.uleb128 0x336
	.ascii "__DISABLE_SSE4_2__ \0"
	.byte	0x2
	.uleb128 0x355
	.ascii "__DISABLE_SSE4_2__\0"
	.byte	0x2
	.uleb128 0x35a
	.ascii "__DISABLE_SSE4_1__\0"
	.byte	0x4
	.file 203 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/wmmintrin.h"
	.byte	0x3
	.uleb128 0x2b
	.uleb128 0xcb
	.byte	0x1
	.uleb128 0x1c
	.ascii "_WMMINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x26
	.ascii "__DISABLE_AES__ \0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "_mm_aeskeygenassist_si128(X,C) ((__m128i) __builtin_ia32_aeskeygenassist128 ((__v2di)(__m128i)(X), (int)(C)))\0"
	.byte	0x2
	.uleb128 0x62
	.ascii "__DISABLE_AES__\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "__DISABLE_PCLMUL__ \0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "_mm_clmulepi64_si128(X,Y,I) ((__m128i) __builtin_ia32_pclmulqdq128 ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)(I)))\0"
	.byte	0x2
	.uleb128 0x80
	.ascii "__DISABLE_PCLMUL__\0"
	.byte	0x4
	.file 204 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/immintrin.h"
	.byte	0x3
	.uleb128 0x2e
	.uleb128 0xcc
	.byte	0x1
	.uleb128 0x19
	.ascii "_IMMINTRIN_H_INCLUDED \0"
	.file 205 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/avxintrin.h"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0xcd
	.byte	0x1
	.uleb128 0x20
	.ascii "_AVXINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x25
	.ascii "__DISABLE_AVX__ \0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "_CMP_EQ_OQ 0x00\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "_CMP_LT_OS 0x01\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "_CMP_LE_OS 0x02\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "_CMP_UNORD_Q 0x03\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "_CMP_NEQ_UQ 0x04\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "_CMP_NLT_US 0x05\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "_CMP_NLE_US 0x06\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "_CMP_ORD_Q 0x07\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "_CMP_EQ_UQ 0x08\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "_CMP_NGE_US 0x09\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "_CMP_NGT_US 0x0a\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "_CMP_FALSE_OQ 0x0b\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "_CMP_NEQ_OQ 0x0c\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "_CMP_GE_OS 0x0d\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "_CMP_GT_OS 0x0e\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "_CMP_TRUE_UQ 0x0f\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "_CMP_EQ_OS 0x10\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "_CMP_LT_OQ 0x11\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "_CMP_LE_OQ 0x12\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "_CMP_UNORD_S 0x13\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "_CMP_NEQ_US 0x14\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "_CMP_NLT_UQ 0x15\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "_CMP_NLE_UQ 0x16\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "_CMP_ORD_S 0x17\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "_CMP_EQ_US 0x18\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "_CMP_NGE_UQ 0x19\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "_CMP_NGT_UQ 0x1a\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "_CMP_FALSE_OS 0x1b\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "_CMP_NEQ_OS 0x1c\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "_CMP_GE_OQ 0x1d\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "_CMP_GT_OQ 0x1e\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "_CMP_TRUE_US 0x1f\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "_mm256_blend_pd(X,Y,M) ((__m256d) __builtin_ia32_blendpd256 ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "_mm256_blend_ps(X,Y,M) ((__m256) __builtin_ia32_blendps256 ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "_mm256_dp_ps(X,Y,M) ((__m256) __builtin_ia32_dpps256 ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x14e
	.ascii "_mm256_shuffle_pd(A,B,N) ((__m256d)__builtin_ia32_shufpd256 ((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "_mm256_shuffle_ps(A,B,N) ((__m256) __builtin_ia32_shufps256 ((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x196
	.ascii "_mm_cmp_pd(X,Y,P) ((__m128d) __builtin_ia32_cmppd ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P)))\0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "_mm_cmp_ps(X,Y,P) ((__m128) __builtin_ia32_cmpps ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P)))\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "_mm256_cmp_pd(X,Y,P) ((__m256d) __builtin_ia32_cmppd256 ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (int)(P)))\0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "_mm256_cmp_ps(X,Y,P) ((__m256) __builtin_ia32_cmpps256 ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(P)))\0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "_mm_cmp_sd(X,Y,P) ((__m128d) __builtin_ia32_cmpsd ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P)))\0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "_mm_cmp_ss(X,Y,P) ((__m128) __builtin_ia32_cmpss ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P)))\0"
	.byte	0x1
	.uleb128 0x210
	.ascii "_mm256_extractf128_pd(X,N) ((__m128d) __builtin_ia32_vextractf128_pd256 ((__v4df)(__m256d)(X), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x214
	.ascii "_mm256_extractf128_ps(X,N) ((__m128) __builtin_ia32_vextractf128_ps256 ((__v8sf)(__m256)(X), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x218
	.ascii "_mm256_extractf128_si256(X,N) ((__m128i) __builtin_ia32_vextractf128_si256 ((__v8si)(__m256i)(X), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x21c
	.ascii "_mm256_extract_epi32(X,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 2); _mm_extract_epi32 (__Y, (N) % 4); }))\0"
	.byte	0x1
	.uleb128 0x223
	.ascii "_mm256_extract_epi16(X,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 3); _mm_extract_epi16 (__Y, (N) % 8); }))\0"
	.byte	0x1
	.uleb128 0x22a
	.ascii "_mm256_extract_epi8(X,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 4); _mm_extract_epi8 (__Y, (N) % 16); }))\0"
	.byte	0x1
	.uleb128 0x232
	.ascii "_mm256_extract_epi64(X,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 1); _mm_extract_epi64 (__Y, (N) % 2); }))\0"
	.byte	0x1
	.uleb128 0x27c
	.ascii "_mm_permute_pd(X,C) ((__m128d) __builtin_ia32_vpermilpd ((__v2df)(__m128d)(X), (int)(C)))\0"
	.byte	0x1
	.uleb128 0x27f
	.ascii "_mm256_permute_pd(X,C) ((__m256d) __builtin_ia32_vpermilpd256 ((__v4df)(__m256d)(X), (int)(C)))\0"
	.byte	0x1
	.uleb128 0x282
	.ascii "_mm_permute_ps(X,C) ((__m128) __builtin_ia32_vpermilps ((__v4sf)(__m128)(X), (int)(C)))\0"
	.byte	0x1
	.uleb128 0x285
	.ascii "_mm256_permute_ps(X,C) ((__m256) __builtin_ia32_vpermilps256 ((__v8sf)(__m256)(X), (int)(C)))\0"
	.byte	0x1
	.uleb128 0x2a2
	.ascii "_mm256_permute2f128_pd(X,Y,C) ((__m256d) __builtin_ia32_vperm2f128_pd256 ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (int)(C)))\0"
	.byte	0x1
	.uleb128 0x2a7
	.ascii "_mm256_permute2f128_ps(X,Y,C) ((__m256) __builtin_ia32_vperm2f128_ps256 ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(C)))\0"
	.byte	0x1
	.uleb128 0x2ac
	.ascii "_mm256_permute2f128_si256(X,Y,C) ((__m256i) __builtin_ia32_vperm2f128_si256 ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(C)))\0"
	.byte	0x1
	.uleb128 0x30b
	.ascii "_mm256_insertf128_pd(X,Y,O) ((__m256d) __builtin_ia32_vinsertf128_pd256 ((__v4df)(__m256d)(X), (__v2df)(__m128d)(Y), (int)(O)))\0"
	.byte	0x1
	.uleb128 0x310
	.ascii "_mm256_insertf128_ps(X,Y,O) ((__m256) __builtin_ia32_vinsertf128_ps256 ((__v8sf)(__m256)(X), (__v4sf)(__m128)(Y), (int)(O)))\0"
	.byte	0x1
	.uleb128 0x315
	.ascii "_mm256_insertf128_si256(X,Y,O) ((__m256i) __builtin_ia32_vinsertf128_si256 ((__v8si)(__m256i)(X), (__v4si)(__m128i)(Y), (int)(O)))\0"
	.byte	0x1
	.uleb128 0x31a
	.ascii "_mm256_insert_epi32(X,D,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 2); __Y = _mm_insert_epi32 (__Y, (D), (N) % 4); _mm256_insertf128_si256 ((X), __Y, (N) >> 2); }))\0"
	.byte	0x1
	.uleb128 0x322
	.ascii "_mm256_insert_epi16(X,D,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 3); __Y = _mm_insert_epi16 (__Y, (D), (N) % 8); _mm256_insertf128_si256 ((X), __Y, (N) >> 3); }))\0"
	.byte	0x1
	.uleb128 0x32a
	.ascii "_mm256_insert_epi8(X,D,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 4); __Y = _mm_insert_epi8 (__Y, (D), (N) % 16); _mm256_insertf128_si256 ((X), __Y, (N) >> 4); }))\0"
	.byte	0x1
	.uleb128 0x333
	.ascii "_mm256_insert_epi64(X,D,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 1); __Y = _mm_insert_epi64 (__Y, (D), (N) % 2); _mm256_insertf128_si256 ((X), __Y, (N) >> 1); }))\0"
	.byte	0x1
	.uleb128 0x408
	.ascii "_mm256_round_pd(V,M) ((__m256d) __builtin_ia32_roundpd256 ((__v4df)(__m256d)(V), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x40b
	.ascii "_mm256_round_ps(V,M) ((__m256) __builtin_ia32_roundps256 ((__v8sf)(__m256)(V), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x40f
	.ascii "_mm256_ceil_pd(V) _mm256_round_pd ((V), _MM_FROUND_CEIL)\0"
	.byte	0x1
	.uleb128 0x410
	.ascii "_mm256_floor_pd(V) _mm256_round_pd ((V), _MM_FROUND_FLOOR)\0"
	.byte	0x1
	.uleb128 0x411
	.ascii "_mm256_ceil_ps(V) _mm256_round_ps ((V), _MM_FROUND_CEIL)\0"
	.byte	0x1
	.uleb128 0x412
	.ascii "_mm256_floor_ps(V) _mm256_round_ps ((V), _MM_FROUND_FLOOR)\0"
	.byte	0x2
	.uleb128 0x5b3
	.ascii "__DISABLE_AVX__\0"
	.byte	0x4
	.file 206 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/avx2intrin.h"
	.byte	0x3
	.uleb128 0x2b
	.uleb128 0xce
	.byte	0x1
	.uleb128 0x1d
	.ascii "_AVX2INTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_AVX2__ \0"
	.byte	0x1
	.uleb128 0x31
	.ascii "_mm256_mpsadbw_epu8(X,Y,M) ((__m256i) __builtin_ia32_mpsadbw256 ((__v32qi)(__m256i)(X), (__v32qi)(__m256i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "_mm256_alignr_epi8(A,B,N) ((__m256i) __builtin_ia32_palignr256 ((__v4di)(__m256i)(A), (__v4di)(__m256i)(B), (int)(N) * 8))\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "_mm256_blend_epi16(X,Y,M) ((__m256i) __builtin_ia32_pblendw256 ((__v16hi)(__m256i)(X), (__v16hi)(__m256i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x26b
	.ascii "_mm256_shuffle_epi32(A,N) ((__m256i)__builtin_ia32_pshufd256 ((__v8si)(__m256i)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x26d
	.ascii "_mm256_shufflehi_epi16(A,N) ((__m256i)__builtin_ia32_pshufhw256 ((__v16hi)(__m256i)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x26f
	.ascii "_mm256_shufflelo_epi16(A,N) ((__m256i)__builtin_ia32_pshuflw256 ((__v16hi)(__m256i)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x290
	.ascii "_mm256_slli_si256(A,N) ((__m256i)__builtin_ia32_pslldqi256 ((__m256i)(A), (int)(N) * 8))\0"
	.byte	0x1
	.uleb128 0x2e2
	.ascii "_mm256_srli_si256(A,N) ((__m256i)__builtin_ia32_psrldqi256 ((__m256i)(A), (int)(N) * 8))\0"
	.byte	0x1
	.uleb128 0x3b4
	.ascii "_mm_blend_epi32(X,Y,M) ((__m128i) __builtin_ia32_pblendd128 ((__v4si)(__m128i)(X), (__v4si)(__m128i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x3c3
	.ascii "_mm256_blend_epi32(X,Y,M) ((__m256i) __builtin_ia32_pblendd256 ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x40f
	.ascii "_mm256_permute4x64_pd(X,M) ((__m256d) __builtin_ia32_permdf256 ((__v4df)(__m256d)(X), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x422
	.ascii "_mm256_permute4x64_epi64(X,M) ((__m256i) __builtin_ia32_permdi256 ((__v4di)(__m256i)(X), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x42f
	.ascii "_mm256_permute2x128_si256(X,Y,M) ((__m256i) __builtin_ia32_permti256 ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x43b
	.ascii "_mm256_extracti128_si256(X,M) ((__m128i) __builtin_ia32_extract128i256 ((__v4di)(__m256i)(X), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x447
	.ascii "_mm256_inserti128_si256(X,Y,M) ((__m256i) __builtin_ia32_insert128i256 ((__v4di)(__m256i)(X), (__v2di)(__m128i)(Y), (int)(M)))\0"
	.byte	0x1
	.uleb128 0x674
	.ascii "_mm_i32gather_pd(BASE,INDEX,SCALE) (__m128d) __builtin_ia32_gathersiv2df ((__v2df) _mm_setzero_pd (), (double const *)BASE, (__v4si)(__m128i)INDEX, (__v2df)_mm_set1_pd( (double)(long long int) -1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x67c
	.ascii "_mm_mask_i32gather_pd(SRC,BASE,INDEX,MASK,SCALE) (__m128d) __builtin_ia32_gathersiv2df ((__v2df)(__m128d)SRC, (double const *)BASE, (__v4si)(__m128i)INDEX, (__v2df)(__m128d)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x683
	.ascii "_mm256_i32gather_pd(BASE,INDEX,SCALE) (__m256d) __builtin_ia32_gathersiv4df ((__v4df) _mm256_setzero_pd (), (double const *)BASE, (__v4si)(__m128i)INDEX, (__v4df)_mm256_set1_pd( (double)(long long int) -1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x68b
	.ascii "_mm256_mask_i32gather_pd(SRC,BASE,INDEX,MASK,SCALE) (__m256d) __builtin_ia32_gathersiv4df ((__v4df)(__m256d)SRC, (double const *)BASE, (__v4si)(__m128i)INDEX, (__v4df)(__m256d)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x692
	.ascii "_mm_i64gather_pd(BASE,INDEX,SCALE) (__m128d) __builtin_ia32_gatherdiv2df ((__v2df) _mm_setzero_pd (), (double const *)BASE, (__v2di)(__m128i)INDEX, (__v2df)_mm_set1_pd( (double)(long long int) -1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x69a
	.ascii "_mm_mask_i64gather_pd(SRC,BASE,INDEX,MASK,SCALE) (__m128d) __builtin_ia32_gatherdiv2df ((__v2df)(__m128d)SRC, (double const *)BASE, (__v2di)(__m128i)INDEX, (__v2df)(__m128d)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6a1
	.ascii "_mm256_i64gather_pd(BASE,INDEX,SCALE) (__m256d) __builtin_ia32_gatherdiv4df ((__v4df) _mm256_setzero_pd (), (double const *)BASE, (__v4di)(__m256i)INDEX, (__v4df)_mm256_set1_pd( (double)(long long int) -1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6a9
	.ascii "_mm256_mask_i64gather_pd(SRC,BASE,INDEX,MASK,SCALE) (__m256d) __builtin_ia32_gatherdiv4df ((__v4df)(__m256d)SRC, (double const *)BASE, (__v4di)(__m256i)INDEX, (__v4df)(__m256d)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6b0
	.ascii "_mm_i32gather_ps(BASE,INDEX,SCALE) (__m128) __builtin_ia32_gathersiv4sf ((__v4sf) _mm_setzero_ps (), (float const *)BASE, (__v4si)(__m128i)INDEX, _mm_set1_ps ((float)(int) -1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6b7
	.ascii "_mm_mask_i32gather_ps(SRC,BASE,INDEX,MASK,SCALE) (__m128) __builtin_ia32_gathersiv4sf ((__v4sf)(__m128d)SRC, (float const *)BASE, (__v4si)(__m128i)INDEX, (__v4sf)(__m128d)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6be
	.ascii "_mm256_i32gather_ps(BASE,INDEX,SCALE) (__m256) __builtin_ia32_gathersiv8sf ((__v8sf) _mm256_setzero_ps (), (float const *)BASE, (__v8si)(__m256i)INDEX, (__v8sf)_mm256_set1_ps ( (float)(int) -1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6c6
	.ascii "_mm256_mask_i32gather_ps(SRC,BASE,INDEX,MASK,SCALE) (__m256) __builtin_ia32_gathersiv8sf ((__v8sf)(__m256)SRC, (float const *)BASE, (__v8si)(__m256i)INDEX, (__v8sf)(__m256d)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6cd
	.ascii "_mm_i64gather_ps(BASE,INDEX,SCALE) (__m128) __builtin_ia32_gatherdiv4sf ((__v4sf) _mm_setzero_pd (), (float const *)BASE, (__v2di)(__m128i)INDEX, (__v4sf)_mm_set1_ps ( (float)(int) -1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6d5
	.ascii "_mm_mask_i64gather_ps(SRC,BASE,INDEX,MASK,SCALE) (__m128) __builtin_ia32_gatherdiv4sf ((__v4sf)(__m128)SRC, (float const *)BASE, (__v2di)(__m128i)INDEX, (__v4sf)(__m128d)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6dc
	.ascii "_mm256_i64gather_ps(BASE,INDEX,SCALE) (__m128) __builtin_ia32_gatherdiv4sf256 ((__v4sf) _mm_setzero_ps (), (float const *)BASE, (__v4di)(__m256i)INDEX, (__v4sf)_mm_set1_ps( (float)(int) -1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6e4
	.ascii "_mm256_mask_i64gather_ps(SRC,BASE,INDEX,MASK,SCALE) (__m128) __builtin_ia32_gatherdiv4sf256 ((__v4sf)(__m128)SRC, (float const *)BASE, (__v4di)(__m256i)INDEX, (__v4sf)(__m128)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6eb
	.ascii "_mm_i32gather_epi64(BASE,INDEX,SCALE) (__m128i) __builtin_ia32_gathersiv2di ((__v2di) _mm_setzero_si128 (), (long long const *)BASE, (__v4si)(__m128i)INDEX, (__v2di)_mm_set1_epi64x (-1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6f2
	.ascii "_mm_mask_i32gather_epi64(SRC,BASE,INDEX,MASK,SCALE) (__m128i) __builtin_ia32_gathersiv2di ((__v2di)(__m128i)SRC, (long long const *)BASE, (__v4si)(__m128i)INDEX, (__v2di)(__m128i)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x6f9
	.ascii "_mm256_i32gather_epi64(BASE,INDEX,SCALE) (__m256i) __builtin_ia32_gathersiv4di ((__v4di) _mm256_setzero_si256 (), (long long const *)BASE, (__v4si)(__m128i)INDEX, (__v4di)_mm256_set1_epi64x (-1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x700
	.ascii "_mm256_mask_i32gather_epi64(SRC,BASE,INDEX,MASK,SCALE) (__m256i) __builtin_ia32_gathersiv4di ((__v4di)(__m256i)SRC, (long long const *)BASE, (__v4si)(__m128i)INDEX, (__v4di)(__m256i)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x707
	.ascii "_mm_i64gather_epi64(BASE,INDEX,SCALE) (__m128i) __builtin_ia32_gatherdiv2di ((__v2di) _mm_setzero_si128 (), (long long const *)BASE, (__v2di)(__m128i)INDEX, (__v2di)_mm_set1_epi64x (-1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x70e
	.ascii "_mm_mask_i64gather_epi64(SRC,BASE,INDEX,MASK,SCALE) (__m128i) __builtin_ia32_gatherdiv2di ((__v2di)(__m128i)SRC, (long long const *)BASE, (__v2di)(__m128i)INDEX, (__v2di)(__m128i)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x715
	.ascii "_mm256_i64gather_epi64(BASE,INDEX,SCALE) (__m256i) __builtin_ia32_gatherdiv4di ((__v4di) _mm256_setzero_si256 (), (long long const *)BASE, (__v4di)(__m256i)INDEX, (__v4di)_mm256_set1_epi64x (-1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x71c
	.ascii "_mm256_mask_i64gather_epi64(SRC,BASE,INDEX,MASK,SCALE) (__m256i) __builtin_ia32_gatherdiv4di ((__v4di)(__m256i)SRC, (long long const *)BASE, (__v4di)(__m256i)INDEX, (__v4di)(__m256i)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x723
	.ascii "_mm_i32gather_epi32(BASE,INDEX,SCALE) (__m128i) __builtin_ia32_gathersiv4si ((__v4si) _mm_setzero_si128 (), (int const *)BASE, (__v4si)(__m128i)INDEX, (__v4si)_mm_set1_epi32 (-1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x72a
	.ascii "_mm_mask_i32gather_epi32(SRC,BASE,INDEX,MASK,SCALE) (__m128i) __builtin_ia32_gathersiv4si ((__v4si)(__m128i)SRC, (int const *)BASE, (__v4si)(__m128i)INDEX, (__v4si)(__m128i)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x731
	.ascii "_mm256_i32gather_epi32(BASE,INDEX,SCALE) (__m256i) __builtin_ia32_gathersiv8si ((__v8si) _mm256_setzero_si256 (), (int const *)BASE, (__v8si)(__m256i)INDEX, (__v8si)_mm256_set1_epi32 (-1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x738
	.ascii "_mm256_mask_i32gather_epi32(SRC,BASE,INDEX,MASK,SCALE) (__m256i) __builtin_ia32_gathersiv8si ((__v8si)(__m256i)SRC, (int const *)BASE, (__v8si)(__m256i)INDEX, (__v8si)(__m256i)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x73f
	.ascii "_mm_i64gather_epi32(BASE,INDEX,SCALE) (__m128i) __builtin_ia32_gatherdiv4si ((__v4si) _mm_setzero_si128 (), (int const *)BASE, (__v2di)(__m128i)INDEX, (__v4si)_mm_set1_epi32 (-1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x746
	.ascii "_mm_mask_i64gather_epi32(SRC,BASE,INDEX,MASK,SCALE) (__m128i) __builtin_ia32_gatherdiv4si ((__v4si)(__m128i)SRC, (int const *)BASE, (__v2di)(__m128i)INDEX, (__v4si)(__m128i)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x74d
	.ascii "_mm256_i64gather_epi32(BASE,INDEX,SCALE) (__m128i) __builtin_ia32_gatherdiv4si256 ((__v4si) _mm_setzero_si128 (), (int const *)BASE, (__v4di)(__m256i)INDEX, (__v4si)_mm_set1_epi32(-1), (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x754
	.ascii "_mm256_mask_i64gather_epi32(SRC,BASE,INDEX,MASK,SCALE) (__m128i) __builtin_ia32_gatherdiv4si256 ((__v4si)(__m128i)SRC, (int const *)BASE, (__v4di)(__m256i)INDEX, (__v4si)(__m128i)MASK, (int)SCALE)\0"
	.byte	0x2
	.uleb128 0x75d
	.ascii "__DISABLE_AVX2__\0"
	.byte	0x4
	.file 207 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/avx512fintrin.h"
	.byte	0x3
	.uleb128 0x2d
	.uleb128 0xcf
	.byte	0x1
	.uleb128 0x1d
	.ascii "_AVX512FINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_AVX512F__ \0"
	.byte	0x1
	.uleb128 0x62
	.ascii "_mm512_setr_epi64(e0,e1,e2,e3,e4,e5,e6,e7) _mm512_set_epi64(e7,e6,e5,e4,e3,e2,e1,e0)\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "_mm512_setr_epi32(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15) _mm512_set_epi32(e15,e14,e13,e12,e11,e10,e9,e8,e7,e6,e5,e4,e3,e2,e1,e0)\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "_mm512_setr_pd(e0,e1,e2,e3,e4,e5,e6,e7) _mm512_set_pd(e7,e6,e5,e4,e3,e2,e1,e0)\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "_mm512_setr_ps(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15) _mm512_set_ps(e15,e14,e13,e12,e11,e10,e9,e8,e7,e6,e5,e4,e3,e2,e1,e0)\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "_mm512_setr4_epi64(e0,e1,e2,e3) _mm512_set4_epi64(e3,e2,e1,e0)\0"
	.byte	0x1
	.uleb128 0xde
	.ascii "_mm512_setr4_epi32(e0,e1,e2,e3) _mm512_set4_epi32(e3,e2,e1,e0)\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "_mm512_setr4_pd(e0,e1,e2,e3) _mm512_set4_pd(e3,e2,e1,e0)\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "_mm512_setr4_ps(e0,e1,e2,e3) _mm512_set4_ps(e3,e2,e1,e0)\0"
	.byte	0x1
	.uleb128 0x3be
	.ascii "_mm512_slli_epi64(X,C) ((__m512i) __builtin_ia32_psllqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_undefined_si512 (), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x3c3
	.ascii "_mm512_mask_slli_epi64(W,U,X,C) ((__m512i) __builtin_ia32_psllqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x3c8
	.ascii "_mm512_maskz_slli_epi64(U,X,C) ((__m512i) __builtin_ia32_psllqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x40d
	.ascii "_mm512_srli_epi64(X,C) ((__m512i) __builtin_ia32_psrlqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_undefined_si512 (), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x412
	.ascii "_mm512_mask_srli_epi64(W,U,X,C) ((__m512i) __builtin_ia32_psrlqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x417
	.ascii "_mm512_maskz_srli_epi64(U,X,C) ((__m512i) __builtin_ia32_psrlqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x45c
	.ascii "_mm512_srai_epi64(X,C) ((__m512i) __builtin_ia32_psraqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_undefined_si512 (), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x461
	.ascii "_mm512_mask_srai_epi64(W,U,X,C) ((__m512i) __builtin_ia32_psraqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x466
	.ascii "_mm512_maskz_srai_epi64(U,X,C) ((__m512i) __builtin_ia32_psraqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x4ab
	.ascii "_mm512_slli_epi32(X,C) ((__m512i) __builtin_ia32_pslldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_undefined_si512 (), (__mmask16)-1))\0"
	.byte	0x1
	.uleb128 0x4b0
	.ascii "_mm512_mask_slli_epi32(W,U,X,C) ((__m512i) __builtin_ia32_pslldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x4b5
	.ascii "_mm512_maskz_slli_epi32(U,X,C) ((__m512i) __builtin_ia32_pslldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x4fa
	.ascii "_mm512_srli_epi32(X,C) ((__m512i) __builtin_ia32_psrldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_undefined_si512 (), (__mmask16)-1))\0"
	.byte	0x1
	.uleb128 0x4ff
	.ascii "_mm512_mask_srli_epi32(W,U,X,C) ((__m512i) __builtin_ia32_psrldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x504
	.ascii "_mm512_maskz_srli_epi32(U,X,C) ((__m512i) __builtin_ia32_psrldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x549
	.ascii "_mm512_srai_epi32(X,C) ((__m512i) __builtin_ia32_psradi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_undefined_si512 (), (__mmask16)-1))\0"
	.byte	0x1
	.uleb128 0x54e
	.ascii "_mm512_mask_srai_epi32(W,U,X,C) ((__m512i) __builtin_ia32_psradi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x553
	.ascii "_mm512_maskz_srai_epi32(U,X,C) ((__m512i) __builtin_ia32_psradi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x59f
	.ascii "_mm_add_round_sd(A,B,C) (__m128d)__builtin_ia32_addsd_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x5a2
	.ascii "_mm_add_round_ss(A,B,C) (__m128)__builtin_ia32_addss_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x5a5
	.ascii "_mm_sub_round_sd(A,B,C) (__m128d)__builtin_ia32_subsd_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x5a8
	.ascii "_mm_sub_round_ss(A,B,C) (__m128)__builtin_ia32_subss_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x5ed
	.ascii "_mm512_ternarylogic_epi64(A,B,C,I) ((__m512i) __builtin_ia32_pternlogq512_mask ((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (__v8di)(__m512i)(C), (int)(I), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x5f0
	.ascii "_mm512_mask_ternarylogic_epi64(A,U,B,C,I) ((__m512i) __builtin_ia32_pternlogq512_mask ((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (__v8di)(__m512i)(C), (int)(I), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x5f3
	.ascii "_mm512_maskz_ternarylogic_epi64(U,A,B,C,I) ((__m512i) __builtin_ia32_pternlogq512_maskz ((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (__v8di)(__m512i)(C), (int)(I), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x5f6
	.ascii "_mm512_ternarylogic_epi32(A,B,C,I) ((__m512i) __builtin_ia32_pternlogd512_mask ((__v16si)(__m512i)(A), (__v16si)(__m512i)(B), (__v16si)(__m512i)(C), (int)(I), (__mmask16)-1))\0"
	.byte	0x1
	.uleb128 0x5fa
	.ascii "_mm512_mask_ternarylogic_epi32(A,U,B,C,I) ((__m512i) __builtin_ia32_pternlogd512_mask ((__v16si)(__m512i)(A), (__v16si)(__m512i)(B), (__v16si)(__m512i)(C), (int)(I), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x5fe
	.ascii "_mm512_maskz_ternarylogic_epi32(U,A,B,C,I) ((__m512i) __builtin_ia32_pternlogd512_maskz ((__v16si)(__m512i)(A), (__v16si)(__m512i)(B), (__v16si)(__m512i)(C), (int)(I), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x6e6
	.ascii "_mm512_sqrt_round_pd(A,C) (__m512d)__builtin_ia32_sqrtpd512_mask(A, (__v8df)_mm512_undefined_pd(), -1, C)\0"
	.byte	0x1
	.uleb128 0x6e9
	.ascii "_mm512_mask_sqrt_round_pd(W,U,A,C) (__m512d)__builtin_ia32_sqrtpd512_mask(A, W, U, C)\0"
	.byte	0x1
	.uleb128 0x6ec
	.ascii "_mm512_maskz_sqrt_round_pd(U,A,C) (__m512d)__builtin_ia32_sqrtpd512_mask(A, (__v8df)_mm512_setzero_pd(), U, C)\0"
	.byte	0x1
	.uleb128 0x6ef
	.ascii "_mm512_sqrt_round_ps(A,C) (__m512)__builtin_ia32_sqrtps512_mask(A, (__v16sf)_mm512_undefined_ps(), -1, C)\0"
	.byte	0x1
	.uleb128 0x6f2
	.ascii "_mm512_mask_sqrt_round_ps(W,U,A,C) (__m512)__builtin_ia32_sqrtps512_mask(A, W, U, C)\0"
	.byte	0x1
	.uleb128 0x6f5
	.ascii "_mm512_maskz_sqrt_round_ps(U,A,C) (__m512)__builtin_ia32_sqrtps512_mask(A, (__v16sf)_mm512_setzero_ps(), U, C)\0"
	.byte	0x1
	.uleb128 0x6f8
	.ascii "_mm_sqrt_round_sd(A,B,C) (__m128d)__builtin_ia32_sqrtsd_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x6fb
	.ascii "_mm_sqrt_round_ss(A,B,C) (__m128)__builtin_ia32_sqrtss_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x8a8
	.ascii "_mm512_add_round_pd(A,B,C) (__m512d)__builtin_ia32_addpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, C)\0"
	.byte	0x1
	.uleb128 0x8ab
	.ascii "_mm512_mask_add_round_pd(W,U,A,B,C) (__m512d)__builtin_ia32_addpd512_mask(A, B, W, U, C)\0"
	.byte	0x1
	.uleb128 0x8ae
	.ascii "_mm512_maskz_add_round_pd(U,A,B,C) (__m512d)__builtin_ia32_addpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, C)\0"
	.byte	0x1
	.uleb128 0x8b1
	.ascii "_mm512_add_round_ps(A,B,C) (__m512)__builtin_ia32_addps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, C)\0"
	.byte	0x1
	.uleb128 0x8b4
	.ascii "_mm512_mask_add_round_ps(W,U,A,B,C) (__m512)__builtin_ia32_addps512_mask(A, B, W, U, C)\0"
	.byte	0x1
	.uleb128 0x8b7
	.ascii "_mm512_maskz_add_round_ps(U,A,B,C) (__m512)__builtin_ia32_addps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)\0"
	.byte	0x1
	.uleb128 0x8ba
	.ascii "_mm512_sub_round_pd(A,B,C) (__m512d)__builtin_ia32_subpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, C)\0"
	.byte	0x1
	.uleb128 0x8bd
	.ascii "_mm512_mask_sub_round_pd(W,U,A,B,C) (__m512d)__builtin_ia32_subpd512_mask(A, B, W, U, C)\0"
	.byte	0x1
	.uleb128 0x8c0
	.ascii "_mm512_maskz_sub_round_pd(U,A,B,C) (__m512d)__builtin_ia32_subpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, C)\0"
	.byte	0x1
	.uleb128 0x8c3
	.ascii "_mm512_sub_round_ps(A,B,C) (__m512)__builtin_ia32_subps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, C)\0"
	.byte	0x1
	.uleb128 0x8c6
	.ascii "_mm512_mask_sub_round_ps(W,U,A,B,C) (__m512)__builtin_ia32_subps512_mask(A, B, W, U, C)\0"
	.byte	0x1
	.uleb128 0x8c9
	.ascii "_mm512_maskz_sub_round_ps(U,A,B,C) (__m512)__builtin_ia32_subps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)\0"
	.byte	0x1
	.uleb128 0x979
	.ascii "_mm512_mul_round_pd(A,B,C) (__m512d)__builtin_ia32_mulpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, C)\0"
	.byte	0x1
	.uleb128 0x97c
	.ascii "_mm512_mask_mul_round_pd(W,U,A,B,C) (__m512d)__builtin_ia32_mulpd512_mask(A, B, W, U, C)\0"
	.byte	0x1
	.uleb128 0x97f
	.ascii "_mm512_maskz_mul_round_pd(U,A,B,C) (__m512d)__builtin_ia32_mulpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, C)\0"
	.byte	0x1
	.uleb128 0x982
	.ascii "_mm512_mul_round_ps(A,B,C) (__m512)__builtin_ia32_mulps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, C)\0"
	.byte	0x1
	.uleb128 0x985
	.ascii "_mm512_mask_mul_round_ps(W,U,A,B,C) (__m512)__builtin_ia32_mulps512_mask(A, B, W, U, C)\0"
	.byte	0x1
	.uleb128 0x988
	.ascii "_mm512_maskz_mul_round_ps(U,A,B,C) (__m512)__builtin_ia32_mulps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)\0"
	.byte	0x1
	.uleb128 0x98b
	.ascii "_mm512_div_round_pd(A,B,C) (__m512d)__builtin_ia32_divpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, C)\0"
	.byte	0x1
	.uleb128 0x98e
	.ascii "_mm512_mask_div_round_pd(W,U,A,B,C) (__m512d)__builtin_ia32_divpd512_mask(A, B, W, U, C)\0"
	.byte	0x1
	.uleb128 0x991
	.ascii "_mm512_maskz_div_round_pd(U,A,B,C) (__m512d)__builtin_ia32_divpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, C)\0"
	.byte	0x1
	.uleb128 0x994
	.ascii "_mm512_div_round_ps(A,B,C) (__m512)__builtin_ia32_divps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, C)\0"
	.byte	0x1
	.uleb128 0x997
	.ascii "_mm512_mask_div_round_ps(W,U,A,B,C) (__m512)__builtin_ia32_divps512_mask(A, B, W, U, C)\0"
	.byte	0x1
	.uleb128 0x99a
	.ascii "_mm512_maskz_div_round_ps(U,A,B,C) (__m512)__builtin_ia32_divps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)\0"
	.byte	0x1
	.uleb128 0x99d
	.ascii "_mm_mul_round_sd(A,B,C) (__m128d)__builtin_ia32_mulsd_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x9a0
	.ascii "_mm_mul_round_ss(A,B,C) (__m128)__builtin_ia32_mulss_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x9a3
	.ascii "_mm_div_round_sd(A,B,C) (__m128d)__builtin_ia32_divsd_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x9a6
	.ascii "_mm_div_round_ss(A,B,C) (__m128)__builtin_ia32_divss_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0xa31
	.ascii "_mm512_max_round_pd(A,B,R) (__m512d)__builtin_ia32_maxpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, R)\0"
	.byte	0x1
	.uleb128 0xa34
	.ascii "_mm512_mask_max_round_pd(W,U,A,B,R) (__m512d)__builtin_ia32_maxpd512_mask(A, B, W, U, R)\0"
	.byte	0x1
	.uleb128 0xa37
	.ascii "_mm512_maskz_max_round_pd(U,A,B,R) (__m512d)__builtin_ia32_maxpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, R)\0"
	.byte	0x1
	.uleb128 0xa3a
	.ascii "_mm512_max_round_ps(A,B,R) (__m512)__builtin_ia32_maxps512_mask(A, B, (__v16sf)_mm512_undefined_pd(), -1, R)\0"
	.byte	0x1
	.uleb128 0xa3d
	.ascii "_mm512_mask_max_round_ps(W,U,A,B,R) (__m512)__builtin_ia32_maxps512_mask(A, B, W, U, R)\0"
	.byte	0x1
	.uleb128 0xa40
	.ascii "_mm512_maskz_max_round_ps(U,A,B,R) (__m512)__builtin_ia32_maxps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, R)\0"
	.byte	0x1
	.uleb128 0xa43
	.ascii "_mm512_min_round_pd(A,B,R) (__m512d)__builtin_ia32_minpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, R)\0"
	.byte	0x1
	.uleb128 0xa46
	.ascii "_mm512_mask_min_round_pd(W,U,A,B,R) (__m512d)__builtin_ia32_minpd512_mask(A, B, W, U, R)\0"
	.byte	0x1
	.uleb128 0xa49
	.ascii "_mm512_maskz_min_round_pd(U,A,B,R) (__m512d)__builtin_ia32_minpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, R)\0"
	.byte	0x1
	.uleb128 0xa4c
	.ascii "_mm512_min_round_ps(A,B,R) (__m512)__builtin_ia32_minps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, R)\0"
	.byte	0x1
	.uleb128 0xa4f
	.ascii "_mm512_mask_min_round_ps(W,U,A,B,R) (__m512)__builtin_ia32_minps512_mask(A, B, W, U, R)\0"
	.byte	0x1
	.uleb128 0xa52
	.ascii "_mm512_maskz_min_round_ps(U,A,B,R) (__m512)__builtin_ia32_minps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, R)\0"
	.byte	0x1
	.uleb128 0xaad
	.ascii "_mm512_scalef_round_pd(A,B,C) (__m512d)__builtin_ia32_scalefpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, C)\0"
	.byte	0x1
	.uleb128 0xab0
	.ascii "_mm512_mask_scalef_round_pd(W,U,A,B,C) (__m512d)__builtin_ia32_scalefpd512_mask(A, B, W, U, C)\0"
	.byte	0x1
	.uleb128 0xab3
	.ascii "_mm512_maskz_scalef_round_pd(U,A,B,C) (__m512d)__builtin_ia32_scalefpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, C)\0"
	.byte	0x1
	.uleb128 0xab6
	.ascii "_mm512_scalef_round_ps(A,B,C) (__m512)__builtin_ia32_scalefps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, C)\0"
	.byte	0x1
	.uleb128 0xab9
	.ascii "_mm512_mask_scalef_round_ps(W,U,A,B,C) (__m512)__builtin_ia32_scalefps512_mask(A, B, W, U, C)\0"
	.byte	0x1
	.uleb128 0xabc
	.ascii "_mm512_maskz_scalef_round_ps(U,A,B,C) (__m512)__builtin_ia32_scalefps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)\0"
	.byte	0x1
	.uleb128 0xabf
	.ascii "_mm_scalef_round_sd(A,B,C) (__m128d)__builtin_ia32_scalefsd_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0xac2
	.ascii "_mm_scalef_round_ss(A,B,C) (__m128)__builtin_ia32_scalefss_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0xccb
	.ascii "_mm512_fmadd_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_mask(A, B, C, -1, R)\0"
	.byte	0x1
	.uleb128 0xcce
	.ascii "_mm512_mask_fmadd_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_mask(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xcd1
	.ascii "_mm512_mask3_fmadd_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfmaddpd512_mask3(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xcd4
	.ascii "_mm512_maskz_fmadd_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_maskz(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xcd7
	.ascii "_mm512_fmadd_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfmaddps512_mask(A, B, C, -1, R)\0"
	.byte	0x1
	.uleb128 0xcda
	.ascii "_mm512_mask_fmadd_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfmaddps512_mask(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xcdd
	.ascii "_mm512_mask3_fmadd_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfmaddps512_mask3(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xce0
	.ascii "_mm512_maskz_fmadd_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfmaddps512_maskz(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xce3
	.ascii "_mm512_fmsub_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_mask(A, B, -(C), -1, R)\0"
	.byte	0x1
	.uleb128 0xce6
	.ascii "_mm512_mask_fmsub_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_mask(A, B, -(C), U, R)\0"
	.byte	0x1
	.uleb128 0xce9
	.ascii "_mm512_mask3_fmsub_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfmsubpd512_mask3(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xcec
	.ascii "_mm512_maskz_fmsub_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_maskz(A, B, -(C), U, R)\0"
	.byte	0x1
	.uleb128 0xcef
	.ascii "_mm512_fmsub_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfmaddps512_mask(A, B, -(C), -1, R)\0"
	.byte	0x1
	.uleb128 0xcf2
	.ascii "_mm512_mask_fmsub_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfmaddps512_mask(A, B, -(C), U, R)\0"
	.byte	0x1
	.uleb128 0xcf5
	.ascii "_mm512_mask3_fmsub_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfmsubps512_mask3(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xcf8
	.ascii "_mm512_maskz_fmsub_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfmaddps512_maskz(A, B, -(C), U, R)\0"
	.byte	0x1
	.uleb128 0xcfb
	.ascii "_mm512_fmaddsub_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfmaddsubpd512_mask(A, B, C, -1, R)\0"
	.byte	0x1
	.uleb128 0xcfe
	.ascii "_mm512_mask_fmaddsub_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_mask(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd01
	.ascii "_mm512_mask3_fmaddsub_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfmaddsubpd512_mask3(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd04
	.ascii "_mm512_maskz_fmaddsub_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfmaddsubpd512_maskz(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd07
	.ascii "_mm512_fmaddsub_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_mask(A, B, C, -1, R)\0"
	.byte	0x1
	.uleb128 0xd0a
	.ascii "_mm512_mask_fmaddsub_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_mask(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd0d
	.ascii "_mm512_mask3_fmaddsub_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfmaddsubps512_mask3(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd10
	.ascii "_mm512_maskz_fmaddsub_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_maskz(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd13
	.ascii "_mm512_fmsubadd_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfmaddsubpd512_mask(A, B, -(C), -1, R)\0"
	.byte	0x1
	.uleb128 0xd16
	.ascii "_mm512_mask_fmsubadd_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfmaddsubpd512_mask(A, B, -(C), U, R)\0"
	.byte	0x1
	.uleb128 0xd19
	.ascii "_mm512_mask3_fmsubadd_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfmsubaddpd512_mask3(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd1c
	.ascii "_mm512_maskz_fmsubadd_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfmaddsubpd512_maskz(A, B, -(C), U, R)\0"
	.byte	0x1
	.uleb128 0xd1f
	.ascii "_mm512_fmsubadd_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_mask(A, B, -(C), -1, R)\0"
	.byte	0x1
	.uleb128 0xd22
	.ascii "_mm512_mask_fmsubadd_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_mask(A, B, -(C), U, R)\0"
	.byte	0x1
	.uleb128 0xd25
	.ascii "_mm512_mask3_fmsubadd_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfmsubaddps512_mask3(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd28
	.ascii "_mm512_maskz_fmsubadd_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_maskz(A, B, -(C), U, R)\0"
	.byte	0x1
	.uleb128 0xd2b
	.ascii "_mm512_fnmadd_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_mask(-(A), B, C, -1, R)\0"
	.byte	0x1
	.uleb128 0xd2e
	.ascii "_mm512_mask_fnmadd_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfnmaddpd512_mask(-(A), B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd31
	.ascii "_mm512_mask3_fnmadd_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfmaddpd512_mask3(-(A), B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd34
	.ascii "_mm512_maskz_fnmadd_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_maskz(-(A), B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd37
	.ascii "_mm512_fnmadd_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfmaddps512_mask(-(A), B, C, -1, R)\0"
	.byte	0x1
	.uleb128 0xd3a
	.ascii "_mm512_mask_fnmadd_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfnmaddps512_mask(-(A), B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd3d
	.ascii "_mm512_mask3_fnmadd_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfmaddps512_mask3(-(A), B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd40
	.ascii "_mm512_maskz_fnmadd_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfmaddps512_maskz(-(A), B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd43
	.ascii "_mm512_fnmsub_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_mask(-(A), B, -(C), -1, R)\0"
	.byte	0x1
	.uleb128 0xd46
	.ascii "_mm512_mask_fnmsub_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfnmsubpd512_mask(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd49
	.ascii "_mm512_mask3_fnmsub_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfnmsubpd512_mask3(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd4c
	.ascii "_mm512_maskz_fnmsub_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_maskz(-(A), B, -(C), U, R)\0"
	.byte	0x1
	.uleb128 0xd4f
	.ascii "_mm512_fnmsub_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfmaddps512_mask(-(A), B, -(C), -1, R)\0"
	.byte	0x1
	.uleb128 0xd52
	.ascii "_mm512_mask_fnmsub_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfnmsubps512_mask(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd55
	.ascii "_mm512_mask3_fnmsub_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfnmsubps512_mask3(A, B, C, U, R)\0"
	.byte	0x1
	.uleb128 0xd58
	.ascii "_mm512_maskz_fnmsub_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfmaddps512_maskz(-(A), B, -(C), U, R)\0"
	.byte	0x1
	.uleb128 0xfcd
	.ascii "_mm512_shuffle_epi32(X,C) ((__m512i) __builtin_ia32_pshufd512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_undefined_si512 (), (__mmask16)-1))\0"
	.byte	0x1
	.uleb128 0xfd2
	.ascii "_mm512_mask_shuffle_epi32(W,U,X,C) ((__m512i) __builtin_ia32_pshufd512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0xfd7
	.ascii "_mm512_maskz_shuffle_epi32(U,X,C) ((__m512i) __builtin_ia32_pshufd512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0xfdc
	.ascii "_mm512_shuffle_i64x2(X,Y,C) ((__m512i) __builtin_ia32_shuf_i64x2_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)(__m512i)_mm512_undefined_si512 (), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0xfe2
	.ascii "_mm512_mask_shuffle_i64x2(W,U,X,Y,C) ((__m512i) __builtin_ia32_shuf_i64x2_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)(__m512i)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0xfe8
	.ascii "_mm512_maskz_shuffle_i64x2(U,X,Y,C) ((__m512i) __builtin_ia32_shuf_i64x2_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0xfee
	.ascii "_mm512_shuffle_i32x4(X,Y,C) ((__m512i) __builtin_ia32_shuf_i32x4_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)(__m512i)_mm512_undefined_si512 (), (__mmask16)-1))\0"
	.byte	0x1
	.uleb128 0xff4
	.ascii "_mm512_mask_shuffle_i32x4(W,U,X,Y,C) ((__m512i) __builtin_ia32_shuf_i32x4_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0xffa
	.ascii "_mm512_maskz_shuffle_i32x4(U,X,Y,C) ((__m512i) __builtin_ia32_shuf_i32x4_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x1000
	.ascii "_mm512_shuffle_f64x2(X,Y,C) ((__m512d) __builtin_ia32_shuf_f64x2_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x1006
	.ascii "_mm512_mask_shuffle_f64x2(W,U,X,Y,C) ((__m512d) __builtin_ia32_shuf_f64x2_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x100c
	.ascii "_mm512_maskz_shuffle_f64x2(U,X,Y,C) ((__m512d) __builtin_ia32_shuf_f64x2_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1012
	.ascii "_mm512_shuffle_f32x4(X,Y,C) ((__m512) __builtin_ia32_shuf_f32x4_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)_mm512_undefined_ps(), (__mmask16)-1))\0"
	.byte	0x1
	.uleb128 0x1018
	.ascii "_mm512_mask_shuffle_f32x4(W,U,X,Y,C) ((__m512) __builtin_ia32_shuf_f32x4_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)(W), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x101e
	.ascii "_mm512_maskz_shuffle_f32x4(U,X,Y,C) ((__m512) __builtin_ia32_shuf_f32x4_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)_mm512_setzero_ps(), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x10e2
	.ascii "_mm512_cvtt_roundpd_epi32(A,B) ((__m256i)__builtin_ia32_cvttpd2dq512_mask(A, (__v8si)_mm256_undefined_si256(), -1, B))\0"
	.byte	0x1
	.uleb128 0x10e5
	.ascii "_mm512_mask_cvtt_roundpd_epi32(W,U,A,B) ((__m256i)__builtin_ia32_cvttpd2dq512_mask(A, (__v8si)(W), U, B))\0"
	.byte	0x1
	.uleb128 0x10e8
	.ascii "_mm512_maskz_cvtt_roundpd_epi32(U,A,B) ((__m256i)__builtin_ia32_cvttpd2dq512_mask(A, (__v8si)_mm256_setzero_si256(), U, B))\0"
	.byte	0x1
	.uleb128 0x10eb
	.ascii "_mm512_cvtt_roundpd_epu32(A,B) ((__m256i)__builtin_ia32_cvttpd2udq512_mask(A, (__v8si)_mm256_undefined_si256(), -1, B))\0"
	.byte	0x1
	.uleb128 0x10ee
	.ascii "_mm512_mask_cvtt_roundpd_epu32(W,U,A,B) ((__m256i)__builtin_ia32_cvttpd2udq512_mask(A, (__v8si)(W), U, B))\0"
	.byte	0x1
	.uleb128 0x10f1
	.ascii "_mm512_maskz_cvtt_roundpd_epu32(U,A,B) ((__m256i)__builtin_ia32_cvttpd2udq512_mask(A, (__v8si)_mm256_setzero_si256(), U, B))\0"
	.byte	0x1
	.uleb128 0x1132
	.ascii "_mm512_cvt_roundpd_epi32(A,B) ((__m256i)__builtin_ia32_cvtpd2dq512_mask(A, (__v8si)_mm256_undefined_si256(), -1, B))\0"
	.byte	0x1
	.uleb128 0x1135
	.ascii "_mm512_mask_cvt_roundpd_epi32(W,U,A,B) ((__m256i)__builtin_ia32_cvtpd2dq512_mask(A, (__v8si)(W), U, B))\0"
	.byte	0x1
	.uleb128 0x1138
	.ascii "_mm512_maskz_cvt_roundpd_epi32(U,A,B) ((__m256i)__builtin_ia32_cvtpd2dq512_mask(A, (__v8si)_mm256_setzero_si256(), U, B))\0"
	.byte	0x1
	.uleb128 0x113b
	.ascii "_mm512_cvt_roundpd_epu32(A,B) ((__m256i)__builtin_ia32_cvtpd2udq512_mask(A, (__v8si)_mm256_undefined_si256(), -1, B))\0"
	.byte	0x1
	.uleb128 0x113e
	.ascii "_mm512_mask_cvt_roundpd_epu32(W,U,A,B) ((__m256i)__builtin_ia32_cvtpd2udq512_mask(A, (__v8si)(W), U, B))\0"
	.byte	0x1
	.uleb128 0x1141
	.ascii "_mm512_maskz_cvt_roundpd_epu32(U,A,B) ((__m256i)__builtin_ia32_cvtpd2udq512_mask(A, (__v8si)_mm256_setzero_si256(), U, B))\0"
	.byte	0x1
	.uleb128 0x1182
	.ascii "_mm512_cvtt_roundps_epi32(A,B) ((__m512i)__builtin_ia32_cvttps2dq512_mask(A, (__v16si)_mm512_undefined_si512 (), -1, B))\0"
	.byte	0x1
	.uleb128 0x1185
	.ascii "_mm512_mask_cvtt_roundps_epi32(W,U,A,B) ((__m512i)__builtin_ia32_cvttps2dq512_mask(A, (__v16si)(W), U, B))\0"
	.byte	0x1
	.uleb128 0x1188
	.ascii "_mm512_maskz_cvtt_roundps_epi32(U,A,B) ((__m512i)__builtin_ia32_cvttps2dq512_mask(A, (__v16si)_mm512_setzero_si512 (), U, B))\0"
	.byte	0x1
	.uleb128 0x118b
	.ascii "_mm512_cvtt_roundps_epu32(A,B) ((__m512i)__builtin_ia32_cvttps2udq512_mask(A, (__v16si)_mm512_undefined_si512 (), -1, B))\0"
	.byte	0x1
	.uleb128 0x118e
	.ascii "_mm512_mask_cvtt_roundps_epu32(W,U,A,B) ((__m512i)__builtin_ia32_cvttps2udq512_mask(A, (__v16si)(W), U, B))\0"
	.byte	0x1
	.uleb128 0x1191
	.ascii "_mm512_maskz_cvtt_roundps_epu32(U,A,B) ((__m512i)__builtin_ia32_cvttps2udq512_mask(A, (__v16si)_mm512_setzero_si512 (), U, B))\0"
	.byte	0x1
	.uleb128 0x11d2
	.ascii "_mm512_cvt_roundps_epi32(A,B) ((__m512i)__builtin_ia32_cvtps2dq512_mask(A, (__v16si)_mm512_undefined_si512 (), -1, B))\0"
	.byte	0x1
	.uleb128 0x11d5
	.ascii "_mm512_mask_cvt_roundps_epi32(W,U,A,B) ((__m512i)__builtin_ia32_cvtps2dq512_mask(A, (__v16si)(W), U, B))\0"
	.byte	0x1
	.uleb128 0x11d8
	.ascii "_mm512_maskz_cvt_roundps_epi32(U,A,B) ((__m512i)__builtin_ia32_cvtps2dq512_mask(A, (__v16si)_mm512_setzero_si512 (), U, B))\0"
	.byte	0x1
	.uleb128 0x11db
	.ascii "_mm512_cvt_roundps_epu32(A,B) ((__m512i)__builtin_ia32_cvtps2udq512_mask(A, (__v16si)_mm512_undefined_si512 (), -1, B))\0"
	.byte	0x1
	.uleb128 0x11de
	.ascii "_mm512_mask_cvt_roundps_epu32(W,U,A,B) ((__m512i)__builtin_ia32_cvtps2udq512_mask(A, (__v16si)(W), U, B))\0"
	.byte	0x1
	.uleb128 0x11e1
	.ascii "_mm512_maskz_cvt_roundps_epu32(U,A,B) ((__m512i)__builtin_ia32_cvtps2udq512_mask(A, (__v16si)_mm512_setzero_si512 (), U, B))\0"
	.byte	0x1
	.uleb128 0x1203
	.ascii "_mm_cvt_roundu64_sd(A,B,C) (__m128d)__builtin_ia32_cvtusi2sd64(A, B, C)\0"
	.byte	0x1
	.uleb128 0x1206
	.ascii "_mm_cvt_roundi64_sd(A,B,C) (__m128d)__builtin_ia32_cvtsi2sd64(A, B, C)\0"
	.byte	0x1
	.uleb128 0x1209
	.ascii "_mm_cvt_roundsi64_sd(A,B,C) (__m128d)__builtin_ia32_cvtsi2sd64(A, B, C)\0"
	.byte	0x1
	.uleb128 0x1225
	.ascii "_mm_cvt_roundu32_ss(A,B,C) (__m128)__builtin_ia32_cvtusi2ss32(A, B, C)\0"
	.byte	0x1
	.uleb128 0x1228
	.ascii "_mm_cvt_roundi32_ss(A,B,C) (__m128)__builtin_ia32_cvtsi2ss32(A, B, C)\0"
	.byte	0x1
	.uleb128 0x122b
	.ascii "_mm_cvt_roundsi32_ss(A,B,C) (__m128)__builtin_ia32_cvtsi2ss32(A, B, C)\0"
	.byte	0x1
	.uleb128 0x1246
	.ascii "_mm_cvt_roundu64_ss(A,B,C) (__m128)__builtin_ia32_cvtusi2ss64(A, B, C)\0"
	.byte	0x1
	.uleb128 0x1249
	.ascii "_mm_cvt_roundi64_ss(A,B,C) (__m128)__builtin_ia32_cvtsi2ss64(A, B, C)\0"
	.byte	0x1
	.uleb128 0x124c
	.ascii "_mm_cvt_roundsi64_ss(A,B,C) (__m128)__builtin_ia32_cvtsi2ss64(A, B, C)\0"
	.byte	0x1
	.uleb128 0x14db
	.ascii "_mm512_cvt_roundepi32_ps(A,B) (__m512)__builtin_ia32_cvtdq2ps512_mask((__v16si)(A), (__v16sf)_mm512_undefined_ps(), -1, B)\0"
	.byte	0x1
	.uleb128 0x14de
	.ascii "_mm512_mask_cvt_roundepi32_ps(W,U,A,B) (__m512)__builtin_ia32_cvtdq2ps512_mask((__v16si)(A), W, U, B)\0"
	.byte	0x1
	.uleb128 0x14e1
	.ascii "_mm512_maskz_cvt_roundepi32_ps(U,A,B) (__m512)__builtin_ia32_cvtdq2ps512_mask((__v16si)(A), (__v16sf)_mm512_setzero_ps(), U, B)\0"
	.byte	0x1
	.uleb128 0x14e4
	.ascii "_mm512_cvt_roundepu32_ps(A,B) (__m512)__builtin_ia32_cvtudq2ps512_mask((__v16si)(A), (__v16sf)_mm512_undefined_ps(), -1, B)\0"
	.byte	0x1
	.uleb128 0x14e7
	.ascii "_mm512_mask_cvt_roundepu32_ps(W,U,A,B) (__m512)__builtin_ia32_cvtudq2ps512_mask((__v16si)(A), W, U, B)\0"
	.byte	0x1
	.uleb128 0x14ea
	.ascii "_mm512_maskz_cvt_roundepu32_ps(U,A,B) (__m512)__builtin_ia32_cvtudq2ps512_mask((__v16si)(A), (__v16sf)_mm512_setzero_ps(), U, B)\0"
	.byte	0x1
	.uleb128 0x1574
	.ascii "_mm512_extractf64x4_pd(X,C) ((__m256d) __builtin_ia32_extractf64x4_mask ((__v8df)(__m512d) (X), (int) (C), (__v4df)(__m256d)_mm256_undefined_pd(), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x157a
	.ascii "_mm512_mask_extractf64x4_pd(W,U,X,C) ((__m256d) __builtin_ia32_extractf64x4_mask ((__v8df)(__m512d) (X), (int) (C), (__v4df)(__m256d)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1580
	.ascii "_mm512_maskz_extractf64x4_pd(U,X,C) ((__m256d) __builtin_ia32_extractf64x4_mask ((__v8df)(__m512d) (X), (int) (C), (__v4df)(__m256d)_mm256_setzero_pd(), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1586
	.ascii "_mm512_extractf32x4_ps(X,C) ((__m128) __builtin_ia32_extractf32x4_mask ((__v16sf)(__m512) (X), (int) (C), (__v4sf)(__m128)_mm_undefined_ps(), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x158c
	.ascii "_mm512_mask_extractf32x4_ps(W,U,X,C) ((__m128) __builtin_ia32_extractf32x4_mask ((__v16sf)(__m512) (X), (int) (C), (__v4sf)(__m128)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1592
	.ascii "_mm512_maskz_extractf32x4_ps(U,X,C) ((__m128) __builtin_ia32_extractf32x4_mask ((__v16sf)(__m512) (X), (int) (C), (__v4sf)(__m128)_mm_setzero_ps(), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1598
	.ascii "_mm512_extracti64x4_epi64(X,C) ((__m256i) __builtin_ia32_extracti64x4_mask ((__v8di)(__m512i) (X), (int) (C), (__v4di)(__m256i)_mm256_undefined_si256 (), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x159e
	.ascii "_mm512_mask_extracti64x4_epi64(W,U,X,C) ((__m256i) __builtin_ia32_extracti64x4_mask ((__v8di)(__m512i) (X), (int) (C), (__v4di)(__m256i)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x15a4
	.ascii "_mm512_maskz_extracti64x4_epi64(U,X,C) ((__m256i) __builtin_ia32_extracti64x4_mask ((__v8di)(__m512i) (X), (int) (C), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x15aa
	.ascii "_mm512_extracti32x4_epi32(X,C) ((__m128i) __builtin_ia32_extracti32x4_mask ((__v16si)(__m512i) (X), (int) (C), (__v4si)(__m128i)_mm_undefined_si128 (), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x15b0
	.ascii "_mm512_mask_extracti32x4_epi32(W,U,X,C) ((__m128i) __builtin_ia32_extracti32x4_mask ((__v16si)(__m512i) (X), (int) (C), (__v4si)(__m128i)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x15b6
	.ascii "_mm512_maskz_extracti32x4_epi32(U,X,C) ((__m128i) __builtin_ia32_extracti32x4_mask ((__v16si)(__m512i) (X), (int) (C), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x161c
	.ascii "_mm512_insertf32x4(X,Y,C) ((__m512) __builtin_ia32_insertf32x4_mask ((__v16sf)(__m512) (X), (__v4sf)(__m128) (Y), (int) (C), (__v16sf)(__m512) (X), (__mmask16)(-1)))\0"
	.byte	0x1
	.uleb128 0x1620
	.ascii "_mm512_inserti32x4(X,Y,C) ((__m512i) __builtin_ia32_inserti32x4_mask ((__v16si)(__m512i) (X), (__v4si)(__m128i) (Y), (int) (C), (__v16si)(__m512i) (X), (__mmask16)(-1)))\0"
	.byte	0x1
	.uleb128 0x1624
	.ascii "_mm512_insertf64x4(X,Y,C) ((__m512d) __builtin_ia32_insertf64x4_mask ((__v8df)(__m512d) (X), (__v4df)(__m256d) (Y), (int) (C), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x162a
	.ascii "_mm512_mask_insertf64x4(W,U,X,Y,C) ((__m512d) __builtin_ia32_insertf64x4_mask ((__v8df)(__m512d) (X), (__v4df)(__m256d) (Y), (int) (C), (__v8df)(__m512d)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1630
	.ascii "_mm512_maskz_insertf64x4(U,X,Y,C) ((__m512d) __builtin_ia32_insertf64x4_mask ((__v8df)(__m512d) (X), (__v4df)(__m256d) (Y), (int) (C), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1636
	.ascii "_mm512_inserti64x4(X,Y,C) ((__m512i) __builtin_ia32_inserti64x4_mask ((__v8di)(__m512i) (X), (__v4di)(__m256i) (Y), (int) (C), (__v8di)(__m512i)_mm512_undefined_si512 (), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x163c
	.ascii "_mm512_mask_inserti64x4(W,U,X,Y,C) ((__m512i) __builtin_ia32_inserti64x4_mask ((__v8di)(__m512i) (X), (__v4di)(__m256i) (Y), (int) (C), (__v8di)(__m512i)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1642
	.ascii "_mm512_maskz_inserti64x4(U,X,Y,C) ((__m512i) __builtin_ia32_inserti64x4_mask ((__v8di)(__m512i) (X), (__v4di)(__m256i) (Y), (int) (C), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1821
	.ascii "_mm512_permute_pd(X,C) ((__m512d) __builtin_ia32_vpermilpd512_mask ((__v8df)(__m512d)(X), (int)(C), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)(-1)))\0"
	.byte	0x1
	.uleb128 0x1826
	.ascii "_mm512_mask_permute_pd(W,U,X,C) ((__m512d) __builtin_ia32_vpermilpd512_mask ((__v8df)(__m512d)(X), (int)(C), (__v8df)(__m512d)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x182b
	.ascii "_mm512_maskz_permute_pd(U,X,C) ((__m512d) __builtin_ia32_vpermilpd512_mask ((__v8df)(__m512d)(X), (int)(C), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1830
	.ascii "_mm512_permute_ps(X,C) ((__m512) __builtin_ia32_vpermilps512_mask ((__v16sf)(__m512)(X), (int)(C), (__v16sf)(__m512)_mm512_undefined_ps(), (__mmask16)(-1)))\0"
	.byte	0x1
	.uleb128 0x1835
	.ascii "_mm512_mask_permute_ps(W,U,X,C) ((__m512) __builtin_ia32_vpermilps512_mask ((__v16sf)(__m512)(X), (int)(C), (__v16sf)(__m512)(W), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x183a
	.ascii "_mm512_maskz_permute_ps(U,X,C) ((__m512) __builtin_ia32_vpermilps512_mask ((__v16sf)(__m512)(X), (int)(C), (__v16sf)(__m512)_mm512_setzero_ps(), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x187c
	.ascii "_mm512_permutex_pd(X,M) ((__m512d) __builtin_ia32_permdf512_mask ((__v8df)(__m512d)(X), (int)(M), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x1881
	.ascii "_mm512_mask_permutex_pd(W,U,X,M) ((__m512d) __builtin_ia32_permdf512_mask ((__v8df)(__m512d)(X), (int)(M), (__v8df)(__m512d)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1885
	.ascii "_mm512_maskz_permutex_pd(U,X,M) ((__m512d) __builtin_ia32_permdf512_mask ((__v8df)(__m512d)(X), (int)(M), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x188a
	.ascii "_mm512_permutex_epi64(X,I) ((__m512i) __builtin_ia32_permdi512_mask ((__v8di)(__m512i)(X), (int)(I), (__v8di)(__m512i) (_mm512_undefined_si512 ()), (__mmask8)(-1)))\0"
	.byte	0x1
	.uleb128 0x1891
	.ascii "_mm512_maskz_permutex_epi64(M,X,I) ((__m512i) __builtin_ia32_permdi512_mask ((__v8di)(__m512i)(X), (int)(I), (__v8di)(__m512i) (_mm512_setzero_si512 ()), (__mmask8)(M)))\0"
	.byte	0x1
	.uleb128 0x1898
	.ascii "_mm512_mask_permutex_epi64(W,M,X,I) ((__m512i) __builtin_ia32_permdi512_mask ((__v8di)(__m512i)(X), (int)(I), (__v8di)(__m512i)(W), (__mmask8)(M)))\0"
	.byte	0x1
	.uleb128 0x19f1
	.ascii "_mm512_shuffle_pd(X,Y,C) ((__m512d)__builtin_ia32_shufpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x19f7
	.ascii "_mm512_mask_shuffle_pd(W,U,X,Y,C) ((__m512d)__builtin_ia32_shufpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x19fd
	.ascii "_mm512_maskz_shuffle_pd(U,X,Y,C) ((__m512d)__builtin_ia32_shufpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1a03
	.ascii "_mm512_shuffle_ps(X,Y,C) ((__m512)__builtin_ia32_shufps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)_mm512_undefined_ps(), (__mmask16)-1))\0"
	.byte	0x1
	.uleb128 0x1a09
	.ascii "_mm512_mask_shuffle_ps(W,U,X,Y,C) ((__m512)__builtin_ia32_shufps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)(W), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x1a0f
	.ascii "_mm512_maskz_shuffle_ps(U,X,Y,C) ((__m512)__builtin_ia32_shufps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)_mm512_setzero_ps(), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x1a15
	.ascii "_mm512_fixupimm_round_pd(X,Y,Z,C,R) ((__m512d)__builtin_ia32_fixupimmpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(-1), (R)))\0"
	.byte	0x1
	.uleb128 0x1a1a
	.ascii "_mm512_mask_fixupimm_round_pd(X,U,Y,Z,C,R) ((__m512d)__builtin_ia32_fixupimmpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x1a1f
	.ascii "_mm512_maskz_fixupimm_round_pd(U,X,Y,Z,C,R) ((__m512d)__builtin_ia32_fixupimmpd512_maskz ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x1a24
	.ascii "_mm512_fixupimm_round_ps(X,Y,Z,C,R) ((__m512)__builtin_ia32_fixupimmps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(-1), (R)))\0"
	.byte	0x1
	.uleb128 0x1a29
	.ascii "_mm512_mask_fixupimm_round_ps(X,U,Y,Z,C,R) ((__m512)__builtin_ia32_fixupimmps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x1a2e
	.ascii "_mm512_maskz_fixupimm_round_ps(U,X,Y,Z,C,R) ((__m512)__builtin_ia32_fixupimmps512_maskz ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x1a33
	.ascii "_mm_fixupimm_round_sd(X,Y,Z,C,R) ((__m128d)__builtin_ia32_fixupimmsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(-1), (R)))\0"
	.byte	0x1
	.uleb128 0x1a38
	.ascii "_mm_mask_fixupimm_round_sd(X,U,Y,Z,C,R) ((__m128d)__builtin_ia32_fixupimmsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x1a3d
	.ascii "_mm_maskz_fixupimm_round_sd(U,X,Y,Z,C,R) ((__m128d)__builtin_ia32_fixupimmsd_maskz ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x1a42
	.ascii "_mm_fixupimm_round_ss(X,Y,Z,C,R) ((__m128)__builtin_ia32_fixupimmss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(-1), (R)))\0"
	.byte	0x1
	.uleb128 0x1a47
	.ascii "_mm_mask_fixupimm_round_ss(X,U,Y,Z,C,R) ((__m128)__builtin_ia32_fixupimmss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x1a4c
	.ascii "_mm_maskz_fixupimm_round_ss(U,X,Y,Z,C,R) ((__m128)__builtin_ia32_fixupimmss_maskz ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x1b98
	.ascii "_mm512_rol_epi32(A,B) ((__m512i)__builtin_ia32_prold512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)_mm512_undefined_si512 (), (__mmask16)(-1)))\0"
	.byte	0x1
	.uleb128 0x1b9d
	.ascii "_mm512_mask_rol_epi32(W,U,A,B) ((__m512i)__builtin_ia32_prold512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)(__m512i)(W), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x1ba2
	.ascii "_mm512_maskz_rol_epi32(U,A,B) ((__m512i)__builtin_ia32_prold512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)_mm512_setzero_si512 (), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x1ba7
	.ascii "_mm512_ror_epi32(A,B) ((__m512i)__builtin_ia32_prord512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)_mm512_undefined_si512 (), (__mmask16)(-1)))\0"
	.byte	0x1
	.uleb128 0x1bac
	.ascii "_mm512_mask_ror_epi32(W,U,A,B) ((__m512i)__builtin_ia32_prord512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)(__m512i)(W), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x1bb1
	.ascii "_mm512_maskz_ror_epi32(U,A,B) ((__m512i)__builtin_ia32_prord512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)_mm512_setzero_si512 (), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x1bb6
	.ascii "_mm512_rol_epi64(A,B) ((__m512i)__builtin_ia32_prolq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)_mm512_undefined_si512 (), (__mmask8)(-1)))\0"
	.byte	0x1
	.uleb128 0x1bbb
	.ascii "_mm512_mask_rol_epi64(W,U,A,B) ((__m512i)__builtin_ia32_prolq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)(__m512i)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1bc0
	.ascii "_mm512_maskz_rol_epi64(U,A,B) ((__m512i)__builtin_ia32_prolq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)_mm512_setzero_si512 (), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1bc6
	.ascii "_mm512_ror_epi64(A,B) ((__m512i)__builtin_ia32_prorq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)_mm512_undefined_si512 (), (__mmask8)(-1)))\0"
	.byte	0x1
	.uleb128 0x1bcb
	.ascii "_mm512_mask_ror_epi64(W,U,A,B) ((__m512i)__builtin_ia32_prorq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)(__m512i)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1bd0
	.ascii "_mm512_maskz_ror_epi64(U,A,B) ((__m512i)__builtin_ia32_prorq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)_mm512_setzero_si512 (), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x1d5c
	.ascii "_mm_cvt_roundss_u64(A,B) ((unsigned long long)__builtin_ia32_vcvtss2usi64(A, B))\0"
	.byte	0x1
	.uleb128 0x1d5f
	.ascii "_mm_cvt_roundss_si64(A,B) ((long long)__builtin_ia32_vcvtss2si64(A, B))\0"
	.byte	0x1
	.uleb128 0x1d62
	.ascii "_mm_cvt_roundss_i64(A,B) ((long long)__builtin_ia32_vcvtss2si64(A, B))\0"
	.byte	0x1
	.uleb128 0x1d65
	.ascii "_mm_cvtt_roundss_u64(A,B) ((unsigned long long)__builtin_ia32_vcvttss2usi64(A, B))\0"
	.byte	0x1
	.uleb128 0x1d68
	.ascii "_mm_cvtt_roundss_i64(A,B) ((long long)__builtin_ia32_vcvttss2si64(A, B))\0"
	.byte	0x1
	.uleb128 0x1d6b
	.ascii "_mm_cvtt_roundss_si64(A,B) ((long long)__builtin_ia32_vcvttss2si64(A, B))\0"
	.byte	0x1
	.uleb128 0x1d9b
	.ascii "_mm_cvt_roundss_u32(A,B) ((unsigned)__builtin_ia32_vcvtss2usi32(A, B))\0"
	.byte	0x1
	.uleb128 0x1d9e
	.ascii "_mm_cvt_roundss_si32(A,B) ((int)__builtin_ia32_vcvtss2si32(A, B))\0"
	.byte	0x1
	.uleb128 0x1da1
	.ascii "_mm_cvt_roundss_i32(A,B) ((int)__builtin_ia32_vcvtss2si32(A, B))\0"
	.byte	0x1
	.uleb128 0x1da4
	.ascii "_mm_cvtt_roundss_u32(A,B) ((unsigned)__builtin_ia32_vcvttss2usi32(A, B))\0"
	.byte	0x1
	.uleb128 0x1da7
	.ascii "_mm_cvtt_roundss_si32(A,B) ((int)__builtin_ia32_vcvttss2si32(A, B))\0"
	.byte	0x1
	.uleb128 0x1daa
	.ascii "_mm_cvtt_roundss_i32(A,B) ((int)__builtin_ia32_vcvttss2si32(A, B))\0"
	.byte	0x1
	.uleb128 0x1dda
	.ascii "_mm_cvt_roundsd_u64(A,B) ((unsigned long long)__builtin_ia32_vcvtsd2usi64(A, B))\0"
	.byte	0x1
	.uleb128 0x1ddd
	.ascii "_mm_cvt_roundsd_si64(A,B) ((long long)__builtin_ia32_vcvtsd2si64(A, B))\0"
	.byte	0x1
	.uleb128 0x1de0
	.ascii "_mm_cvt_roundsd_i64(A,B) ((long long)__builtin_ia32_vcvtsd2si64(A, B))\0"
	.byte	0x1
	.uleb128 0x1de3
	.ascii "_mm_cvtt_roundsd_u64(A,B) ((unsigned long long)__builtin_ia32_vcvttsd2usi64(A, B))\0"
	.byte	0x1
	.uleb128 0x1de6
	.ascii "_mm_cvtt_roundsd_si64(A,B) ((long long)__builtin_ia32_vcvttsd2si64(A, B))\0"
	.byte	0x1
	.uleb128 0x1de9
	.ascii "_mm_cvtt_roundsd_i64(A,B) ((long long)__builtin_ia32_vcvttsd2si64(A, B))\0"
	.byte	0x1
	.uleb128 0x1e19
	.ascii "_mm_cvt_roundsd_u32(A,B) ((unsigned)__builtin_ia32_vcvtsd2usi32(A, B))\0"
	.byte	0x1
	.uleb128 0x1e1c
	.ascii "_mm_cvt_roundsd_si32(A,B) ((int)__builtin_ia32_vcvtsd2si32(A, B))\0"
	.byte	0x1
	.uleb128 0x1e1f
	.ascii "_mm_cvt_roundsd_i32(A,B) ((int)__builtin_ia32_vcvtsd2si32(A, B))\0"
	.byte	0x1
	.uleb128 0x1e22
	.ascii "_mm_cvtt_roundsd_u32(A,B) ((unsigned)__builtin_ia32_vcvttsd2usi32(A, B))\0"
	.byte	0x1
	.uleb128 0x1e25
	.ascii "_mm_cvtt_roundsd_si32(A,B) ((int)__builtin_ia32_vcvttsd2si32(A, B))\0"
	.byte	0x1
	.uleb128 0x1e28
	.ascii "_mm_cvtt_roundsd_i32(A,B) ((int)__builtin_ia32_vcvttsd2si32(A, B))\0"
	.byte	0x1
	.uleb128 0x1f27
	.ascii "_mm512_cvt_roundps_pd(A,B) (__m512d)__builtin_ia32_cvtps2pd512_mask(A, (__v8df)_mm512_undefined_pd(), -1, B)\0"
	.byte	0x1
	.uleb128 0x1f2a
	.ascii "_mm512_mask_cvt_roundps_pd(W,U,A,B) (__m512d)__builtin_ia32_cvtps2pd512_mask(A, (__v8df)(W), U, B)\0"
	.byte	0x1
	.uleb128 0x1f2d
	.ascii "_mm512_maskz_cvt_roundps_pd(U,A,B) (__m512d)__builtin_ia32_cvtps2pd512_mask(A, (__v8df)_mm512_setzero_pd(), U, B)\0"
	.byte	0x1
	.uleb128 0x1f30
	.ascii "_mm512_cvt_roundph_ps(A,B) (__m512)__builtin_ia32_vcvtph2ps512_mask((__v16hi)(A), (__v16sf)_mm512_undefined_ps(), -1, B)\0"
	.byte	0x1
	.uleb128 0x1f33
	.ascii "_mm512_mask_cvt_roundph_ps(W,U,A,B) (__m512)__builtin_ia32_vcvtph2ps512_mask((__v16hi)(A), (__v16sf)(W), U, B)\0"
	.byte	0x1
	.uleb128 0x1f36
	.ascii "_mm512_maskz_cvt_roundph_ps(U,A,B) (__m512)__builtin_ia32_vcvtph2ps512_mask((__v16hi)(A), (__v16sf)_mm512_setzero_ps(), U, B)\0"
	.byte	0x1
	.uleb128 0x1f39
	.ascii "_mm512_cvt_roundps_ph(A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I), (__v16hi)_mm256_undefined_si256 (), -1))\0"
	.byte	0x1
	.uleb128 0x1f3c
	.ascii "_mm512_cvtps_ph(A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I), (__v16hi)_mm256_undefined_si256 (), -1))\0"
	.byte	0x1
	.uleb128 0x1f3f
	.ascii "_mm512_mask_cvt_roundps_ph(U,W,A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I), (__v16hi)(__m256i)(U), (__mmask16) (W)))\0"
	.byte	0x1
	.uleb128 0x1f42
	.ascii "_mm512_mask_cvtps_ph(U,W,A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I), (__v16hi)(__m256i)(U), (__mmask16) (W)))\0"
	.byte	0x1
	.uleb128 0x1f45
	.ascii "_mm512_maskz_cvt_roundps_ph(W,A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I), (__v16hi)_mm256_setzero_si256 (), (__mmask16) (W)))\0"
	.byte	0x1
	.uleb128 0x1f48
	.ascii "_mm512_maskz_cvtps_ph(W,A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I), (__v16hi)_mm256_setzero_si256 (), (__mmask16) (W)))\0"
	.byte	0x1
	.uleb128 0x1f7e
	.ascii "_mm512_cvt_roundpd_ps(A,B) (__m256)__builtin_ia32_cvtpd2ps512_mask(A, (__v8sf)_mm256_undefined_ps(), -1, B)\0"
	.byte	0x1
	.uleb128 0x1f81
	.ascii "_mm512_mask_cvt_roundpd_ps(W,U,A,B) (__m256)__builtin_ia32_cvtpd2ps512_mask(A, (__v8sf)(W), U, B)\0"
	.byte	0x1
	.uleb128 0x1f84
	.ascii "_mm512_maskz_cvt_roundpd_ps(U,A,B) (__m256)__builtin_ia32_cvtpd2ps512_mask(A, (__v8sf)_mm256_setzero_ps(), U, B)\0"
	.byte	0x1
	.uleb128 0x1f87
	.ascii "_mm_cvt_roundsd_ss(A,B,C) (__m128)__builtin_ia32_cvtsd2ss_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x1f8a
	.ascii "_mm_cvt_roundss_sd(A,B,C) (__m128d)__builtin_ia32_cvtss2sd_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x206a
	.ascii "_mm512_getmant_round_pd(X,B,C,R) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)-1, (R)))\0"
	.byte	0x1
	.uleb128 0x2071
	.ascii "_mm512_mask_getmant_round_pd(W,U,X,B,C,R) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)(__m512d)(W), (__mmask8)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x2078
	.ascii "_mm512_maskz_getmant_round_pd(U,X,B,C,R) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x207e
	.ascii "_mm512_getmant_round_ps(X,B,C,R) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)(__m512)_mm512_undefined_ps(), (__mmask16)-1, (R)))\0"
	.byte	0x1
	.uleb128 0x2085
	.ascii "_mm512_mask_getmant_round_ps(W,U,X,B,C,R) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)(__m512)(W), (__mmask16)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x208c
	.ascii "_mm512_maskz_getmant_round_ps(U,X,B,C,R) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)(__m512)_mm512_setzero_ps(), (__mmask16)(U), (R)))\0"
	.byte	0x1
	.uleb128 0x2092
	.ascii "_mm_getmant_round_sd(X,Y,C,D,R) ((__m128d)__builtin_ia32_getmantsd_round ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(((D)<<2) | (C)), (R)))\0"
	.byte	0x1
	.uleb128 0x2098
	.ascii "_mm_getmant_round_ss(X,Y,C,D,R) ((__m128)__builtin_ia32_getmantss_round ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(((D)<<2) | (C)), (R)))\0"
	.byte	0x1
	.uleb128 0x209e
	.ascii "_mm_getexp_round_ss(A,B,R) ((__m128)__builtin_ia32_getexpss128_round((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), R))\0"
	.byte	0x1
	.uleb128 0x20a1
	.ascii "_mm_getexp_round_sd(A,B,R) ((__m128d)__builtin_ia32_getexpsd128_round((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), R))\0"
	.byte	0x1
	.uleb128 0x20a4
	.ascii "_mm512_getexp_round_ps(A,R) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, R))\0"
	.byte	0x1
	.uleb128 0x20a8
	.ascii "_mm512_mask_getexp_round_ps(W,U,A,R) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(W), (__mmask16)(U), R))\0"
	.byte	0x1
	.uleb128 0x20ac
	.ascii "_mm512_maskz_getexp_round_ps(U,A,R) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), R))\0"
	.byte	0x1
	.uleb128 0x20b0
	.ascii "_mm512_getexp_round_pd(A,R) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, R))\0"
	.byte	0x1
	.uleb128 0x20b4
	.ascii "_mm512_mask_getexp_round_pd(W,U,A,R) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(W), (__mmask8)(U), R))\0"
	.byte	0x1
	.uleb128 0x20b8
	.ascii "_mm512_maskz_getexp_round_pd(U,A,R) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)_mm512_setzero_pd(), (__mmask8)(U), R))\0"
	.byte	0x1
	.uleb128 0x2110
	.ascii "_mm512_roundscale_round_ps(A,B,R) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(A), (int)(B), (__v16sf)_mm512_undefined_ps(), (__mmask16)(-1), R))\0"
	.byte	0x1
	.uleb128 0x2113
	.ascii "_mm512_mask_roundscale_round_ps(A,B,C,D,R) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(C), (int)(D), (__v16sf)(__m512)(A), (__mmask16)(B), R))\0"
	.byte	0x1
	.uleb128 0x2118
	.ascii "_mm512_maskz_roundscale_round_ps(A,B,C,R) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(B), (int)(C), (__v16sf)_mm512_setzero_ps(), (__mmask16)(A), R))\0"
	.byte	0x1
	.uleb128 0x211d
	.ascii "_mm512_roundscale_round_pd(A,B,R) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(A), (int)(B), (__v8df)_mm512_undefined_pd(), (__mmask8)(-1), R))\0"
	.byte	0x1
	.uleb128 0x2120
	.ascii "_mm512_mask_roundscale_round_pd(A,B,C,D,R) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(C), (int)(D), (__v8df)(__m512d)(A), (__mmask8)(B), R))\0"
	.byte	0x1
	.uleb128 0x2125
	.ascii "_mm512_maskz_roundscale_round_pd(A,B,C,R) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(B), (int)(C), (__v8df)_mm512_setzero_pd(), (__mmask8)(A), R))\0"
	.byte	0x1
	.uleb128 0x212a
	.ascii "_mm_roundscale_round_ss(A,B,C,R) ((__m128) __builtin_ia32_rndscaless_round ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), R))\0"
	.byte	0x1
	.uleb128 0x212d
	.ascii "_mm_roundscale_round_sd(A,B,C,R) ((__m128d) __builtin_ia32_rndscalesd_round ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), R))\0"
	.byte	0x1
	.uleb128 0x21c7
	.ascii "_mm512_alignr_epi32(X,Y,C) ((__m512i)__builtin_ia32_alignd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)_mm512_undefined_si512 (), (__mmask16)-1))\0"
	.byte	0x1
	.uleb128 0x21cc
	.ascii "_mm512_mask_alignr_epi32(W,U,X,Y,C) ((__m512i)__builtin_ia32_alignd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x21d1
	.ascii "_mm512_maskz_alignr_epi32(U,X,Y,C) ((__m512i)__builtin_ia32_alignd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)_mm512_setzero_si512 (), (__mmask16)(U)))\0"
	.byte	0x1
	.uleb128 0x21d6
	.ascii "_mm512_alignr_epi64(X,Y,C) ((__m512i)__builtin_ia32_alignq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)_mm512_undefined_si512 (), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x21db
	.ascii "_mm512_mask_alignr_epi64(W,U,X,Y,C) ((__m512i)__builtin_ia32_alignq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)(__m512i)(W), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x21df
	.ascii "_mm512_maskz_alignr_epi64(U,X,Y,C) ((__m512i)__builtin_ia32_alignq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)_mm512_setzero_si512 (), (__mmask8)(U)))\0"
	.byte	0x1
	.uleb128 0x22b9
	.ascii "_MM_CMPINT_EQ 0x0\0"
	.byte	0x1
	.uleb128 0x22ba
	.ascii "_MM_CMPINT_LT 0x1\0"
	.byte	0x1
	.uleb128 0x22bb
	.ascii "_MM_CMPINT_LE 0x2\0"
	.byte	0x1
	.uleb128 0x22bc
	.ascii "_MM_CMPINT_UNUSED 0x3\0"
	.byte	0x1
	.uleb128 0x22bd
	.ascii "_MM_CMPINT_NE 0x4\0"
	.byte	0x1
	.uleb128 0x22be
	.ascii "_MM_CMPINT_NLT 0x5\0"
	.byte	0x1
	.uleb128 0x22bf
	.ascii "_MM_CMPINT_GE 0x5\0"
	.byte	0x1
	.uleb128 0x22c0
	.ascii "_MM_CMPINT_NLE 0x6\0"
	.byte	0x1
	.uleb128 0x22c1
	.ascii "_MM_CMPINT_GT 0x6\0"
	.byte	0x1
	.uleb128 0x235e
	.ascii "_mm512_cmp_epi64_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(P), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x2363
	.ascii "_mm512_cmp_epi32_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(P), (__mmask16)-1))\0"
	.byte	0x1
	.uleb128 0x2368
	.ascii "_mm512_cmp_epu64_mask(X,Y,P) ((__mmask8) __builtin_ia32_ucmpq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(P), (__mmask8)-1))\0"
	.byte	0x1
	.uleb128 0x236d
	.ascii "_mm512_cmp_epu32_mask(X,Y,P) ((__mmask8) __builtin_ia32_ucmpd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(P), (__mmask16)-1))\0"
	.byte	0x1
	.uleb128 0x2372
	.ascii "_mm512_cmp_round_pd_mask(X,Y,P,R) ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(P), (__mmask8)-1, R))\0"
	.byte	0x1
	.uleb128 0x2377
	.ascii "_mm512_cmp_round_ps_mask(X,Y,P,R) ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(P), (__mmask16)-1, R))\0"
	.byte	0x1
	.uleb128 0x237c
	.ascii "_mm512_mask_cmp_epi64_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(P), (__mmask8)M))\0"
	.byte	0x1
	.uleb128 0x2381
	.ascii "_mm512_mask_cmp_epi32_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(P), (__mmask16)M))\0"
	.byte	0x1
	.uleb128 0x2386
	.ascii "_mm512_mask_cmp_epu64_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_ucmpq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(P), (__mmask8)M))\0"
	.byte	0x1
	.uleb128 0x238b
	.ascii "_mm512_mask_cmp_epu32_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_ucmpd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(P), (__mmask16)M))\0"
	.byte	0x1
	.uleb128 0x2390
	.ascii "_mm512_mask_cmp_round_pd_mask(M,X,Y,P,R) ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(P), (__mmask8)M, R))\0"
	.byte	0x1
	.uleb128 0x2395
	.ascii "_mm512_mask_cmp_round_ps_mask(M,X,Y,P,R) ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(P), (__mmask16)M, R))\0"
	.byte	0x1
	.uleb128 0x239a
	.ascii "_mm_cmp_round_sd_mask(X,Y,P,R) ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (__mmask8)-1, R))\0"
	.byte	0x1
	.uleb128 0x239f
	.ascii "_mm_mask_cmp_round_sd_mask(M,X,Y,P,R) ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (M), R))\0"
	.byte	0x1
	.uleb128 0x23a4
	.ascii "_mm_cmp_round_ss_mask(X,Y,P,R) ((__mmask8) __builtin_ia32_cmpss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (__mmask8)-1, R))\0"
	.byte	0x1
	.uleb128 0x23a9
	.ascii "_mm_mask_cmp_round_ss_mask(M,X,Y,P,R) ((__mmask8) __builtin_ia32_cmpss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (M), R))\0"
	.byte	0x1
	.uleb128 0x2500
	.ascii "_mm512_i32gather_ps(INDEX,ADDR,SCALE) (__m512) __builtin_ia32_gathersiv16sf ((__v16sf)_mm512_undefined_ps(), (float const *)ADDR, (__v16si)(__m512i)INDEX, (__mmask16)0xFFFF, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2506
	.ascii "_mm512_mask_i32gather_ps(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512) __builtin_ia32_gathersiv16sf ((__v16sf)(__m512)V1OLD, (float const *)ADDR, (__v16si)(__m512i)INDEX, (__mmask16)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x250c
	.ascii "_mm512_i32gather_pd(INDEX,ADDR,SCALE) (__m512d) __builtin_ia32_gathersiv8df ((__v8df)_mm512_undefined_pd(), (double const *)ADDR, (__v8si)(__m256i)INDEX, (__mmask8)0xFF, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2512
	.ascii "_mm512_mask_i32gather_pd(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512d) __builtin_ia32_gathersiv8df ((__v8df)(__m512d)V1OLD, (double const *)ADDR, (__v8si)(__m256i)INDEX, (__mmask8)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2518
	.ascii "_mm512_i64gather_ps(INDEX,ADDR,SCALE) (__m256) __builtin_ia32_gatherdiv16sf ((__v8sf)_mm256_undefined_ps(), (float const *)ADDR, (__v8di)(__m512i)INDEX, (__mmask8)0xFF, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x251e
	.ascii "_mm512_mask_i64gather_ps(V1OLD,MASK,INDEX,ADDR,SCALE) (__m256) __builtin_ia32_gatherdiv16sf ((__v8sf)(__m256)V1OLD, (float const *)ADDR, (__v8di)(__m512i)INDEX, (__mmask8)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2524
	.ascii "_mm512_i64gather_pd(INDEX,ADDR,SCALE) (__m512d) __builtin_ia32_gatherdiv8df ((__v8df)_mm512_undefined_pd(), (double const *)ADDR, (__v8di)(__m512i)INDEX, (__mmask8)0xFF, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x252a
	.ascii "_mm512_mask_i64gather_pd(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512d) __builtin_ia32_gatherdiv8df ((__v8df)(__m512d)V1OLD, (double const *)ADDR, (__v8di)(__m512i)INDEX, (__mmask8)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2530
	.ascii "_mm512_i32gather_epi32(INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gathersiv16si ((__v16si)_mm512_undefined_si512 (), (int const *)ADDR, (__v16si)(__m512i)INDEX, (__mmask16)0xFFFF, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2536
	.ascii "_mm512_mask_i32gather_epi32(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gathersiv16si ((__v16si)(__m512i)V1OLD, (int const *)ADDR, (__v16si)(__m512i)INDEX, (__mmask16)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x253c
	.ascii "_mm512_i32gather_epi64(INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gathersiv8di ((__v8di)_mm512_undefined_si512 (), (long long const *)ADDR, (__v8si)(__m256i)INDEX, (__mmask8)0xFF, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2542
	.ascii "_mm512_mask_i32gather_epi64(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gathersiv8di ((__v8di)(__m512i)V1OLD, (long long const *)ADDR, (__v8si)(__m256i)INDEX, (__mmask8)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2548
	.ascii "_mm512_i64gather_epi32(INDEX,ADDR,SCALE) (__m256i) __builtin_ia32_gatherdiv16si ((__v8si)_mm256_undefined_si256(), (int const *)ADDR, (__v8di)(__m512i)INDEX, (__mmask8)0xFF, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x254e
	.ascii "_mm512_mask_i64gather_epi32(V1OLD,MASK,INDEX,ADDR,SCALE) (__m256i) __builtin_ia32_gatherdiv16si ((__v8si)(__m256i)V1OLD, (int const *)ADDR, (__v8di)(__m512i)INDEX, (__mmask8)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2554
	.ascii "_mm512_i64gather_epi64(INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gatherdiv8di ((__v8di)_mm512_undefined_si512 (), (long long const *)ADDR, (__v8di)(__m512i)INDEX, (__mmask8)0xFF, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x255a
	.ascii "_mm512_mask_i64gather_epi64(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gatherdiv8di ((__v8di)(__m512i)V1OLD, (long long const *)ADDR, (__v8di)(__m512i)INDEX, (__mmask8)MASK, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2560
	.ascii "_mm512_i32scatter_ps(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv16sf ((float *)ADDR, (__mmask16)0xFFFF, (__v16si)(__m512i)INDEX, (__v16sf)(__m512)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2565
	.ascii "_mm512_mask_i32scatter_ps(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv16sf ((float *)ADDR, (__mmask16)MASK, (__v16si)(__m512i)INDEX, (__v16sf)(__m512)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x256a
	.ascii "_mm512_i32scatter_pd(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv8df ((double *)ADDR, (__mmask8)0xFF, (__v8si)(__m256i)INDEX, (__v8df)(__m512d)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x256f
	.ascii "_mm512_mask_i32scatter_pd(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv8df ((double *)ADDR, (__mmask8)MASK, (__v8si)(__m256i)INDEX, (__v8df)(__m512d)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2574
	.ascii "_mm512_i64scatter_ps(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv16sf ((float *)ADDR, (__mmask8)0xFF, (__v8di)(__m512i)INDEX, (__v8sf)(__m256)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2579
	.ascii "_mm512_mask_i64scatter_ps(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv16sf ((float *)ADDR, (__mmask16)MASK, (__v8di)(__m512i)INDEX, (__v8sf)(__m256)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x257e
	.ascii "_mm512_i64scatter_pd(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8df ((double *)ADDR, (__mmask8)0xFF, (__v8di)(__m512i)INDEX, (__v8df)(__m512d)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2583
	.ascii "_mm512_mask_i64scatter_pd(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8df ((double *)ADDR, (__mmask8)MASK, (__v8di)(__m512i)INDEX, (__v8df)(__m512d)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2588
	.ascii "_mm512_i32scatter_epi32(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv16si ((int *)ADDR, (__mmask16)0xFFFF, (__v16si)(__m512i)INDEX, (__v16si)(__m512i)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x258d
	.ascii "_mm512_mask_i32scatter_epi32(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv16si ((int *)ADDR, (__mmask16)MASK, (__v16si)(__m512i)INDEX, (__v16si)(__m512i)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2592
	.ascii "_mm512_i32scatter_epi64(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv8di ((long long *)ADDR, (__mmask8)0xFF, (__v8si)(__m256i)INDEX, (__v8di)(__m512i)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2597
	.ascii "_mm512_mask_i32scatter_epi64(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv8di ((long long *)ADDR, (__mmask8)MASK, (__v8si)(__m256i)INDEX, (__v8di)(__m512i)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x259c
	.ascii "_mm512_i64scatter_epi32(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv16si ((int *)ADDR, (__mmask8)0xFF, (__v8di)(__m512i)INDEX, (__v8si)(__m256i)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x25a1
	.ascii "_mm512_mask_i64scatter_epi32(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv16si ((int *)ADDR, (__mmask8)MASK, (__v8di)(__m512i)INDEX, (__v8si)(__m256i)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x25a6
	.ascii "_mm512_i64scatter_epi64(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8di ((long long *)ADDR, (__mmask8)0xFF, (__v8di)(__m512i)INDEX, (__v8di)(__m512i)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x25ab
	.ascii "_mm512_mask_i64scatter_epi64(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8di ((long long *)ADDR, (__mmask8)MASK, (__v8di)(__m512i)INDEX, (__v8di)(__m512i)V1, (int)SCALE)\0"
	.byte	0x1
	.uleb128 0x2729
	.ascii "_mm512_maskz_insertf32x4(A,X,Y,C) ((__m512) __builtin_ia32_insertf32x4_mask ((__v16sf)(__m512) (X), (__v4sf)(__m128) (Y), (int) (C), (__v16sf)_mm512_setzero_ps(), (__mmask8)(A)))\0"
	.byte	0x1
	.uleb128 0x272e
	.ascii "_mm512_maskz_inserti32x4(A,X,Y,C) ((__m512i) __builtin_ia32_inserti32x4_mask ((__v16si)(__m512i) (X), (__v4si)(__m128i) (Y), (int) (C), (__v16si)_mm512_setzero_si512 (), (__mmask8)(A)))\0"
	.byte	0x1
	.uleb128 0x2733
	.ascii "_mm512_mask_insertf32x4(A,B,X,Y,C) ((__m512) __builtin_ia32_insertf32x4_mask ((__v16sf)(__m512) (X), (__v4sf)(__m128) (Y), (int) (C), (__v16sf)(__m512) (A), (__mmask8)(B)))\0"
	.byte	0x1
	.uleb128 0x2738
	.ascii "_mm512_mask_inserti32x4(A,B,X,Y,C) ((__m512i) __builtin_ia32_inserti32x4_mask ((__v16si)(__m512i) (X), (__v4si)(__m128i) (Y), (int) (C), (__v16si)(__m512i) (A), (__mmask8)(B)))\0"
	.byte	0x1
	.uleb128 0x287c
	.ascii "_mm_max_round_sd(A,B,C) (__m128d)__builtin_ia32_addsd_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x287f
	.ascii "_mm_max_round_ss(A,B,C) (__m128)__builtin_ia32_addss_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x2882
	.ascii "_mm_min_round_sd(A,B,C) (__m128d)__builtin_ia32_subsd_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x2885
	.ascii "_mm_min_round_ss(A,B,C) (__m128)__builtin_ia32_subss_round(A, B, C)\0"
	.byte	0x1
	.uleb128 0x28fe
	.ascii "_mm_fmadd_round_sd(A,B,C,R) (__m128d)__builtin_ia32_vfmaddsd3_round(A, B, C, R)\0"
	.byte	0x1
	.uleb128 0x2901
	.ascii "_mm_fmadd_round_ss(A,B,C,R) (__m128)__builtin_ia32_vfmaddss3_round(A, B, C, R)\0"
	.byte	0x1
	.uleb128 0x2904
	.ascii "_mm_fmsub_round_sd(A,B,C,R) (__m128d)__builtin_ia32_vfmaddsd3_round(A, B, -(C), R)\0"
	.byte	0x1
	.uleb128 0x2907
	.ascii "_mm_fmsub_round_ss(A,B,C,R) (__m128)__builtin_ia32_vfmaddss3_round(A, B, -(C), R)\0"
	.byte	0x1
	.uleb128 0x290a
	.ascii "_mm_fnmadd_round_sd(A,B,C,R) (__m128d)__builtin_ia32_vfmaddsd3_round(A, -(B), C, R)\0"
	.byte	0x1
	.uleb128 0x290d
	.ascii "_mm_fnmadd_round_ss(A,B,C,R) (__m128)__builtin_ia32_vfmaddss3_round(A, -(B), C, R)\0"
	.byte	0x1
	.uleb128 0x2910
	.ascii "_mm_fnmsub_round_sd(A,B,C,R) (__m128d)__builtin_ia32_vfmaddsd3_round(A, -(B), -(C), R)\0"
	.byte	0x1
	.uleb128 0x2913
	.ascii "_mm_fnmsub_round_ss(A,B,C,R) (__m128)__builtin_ia32_vfmaddss3_round(A, -(B), -(C), R)\0"
	.byte	0x1
	.uleb128 0x2926
	.ascii "_mm_comi_round_ss(A,B,C,D) __builtin_ia32_vcomiss(A, B, C, D)\0"
	.byte	0x1
	.uleb128 0x2928
	.ascii "_mm_comi_round_sd(A,B,C,D) __builtin_ia32_vcomisd(A, B, C, D)\0"
	.byte	0x1
	.uleb128 0x2f66
	.ascii "_mm512_fixupimm_pd(X,Y,Z,C) ((__m512d)__builtin_ia32_fixupimmpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(-1), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x2f6b
	.ascii "_mm512_mask_fixupimm_pd(X,U,Y,Z,C) ((__m512d)__builtin_ia32_fixupimmpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x2f70
	.ascii "_mm512_maskz_fixupimm_pd(U,X,Y,Z,C) ((__m512d)__builtin_ia32_fixupimmpd512_maskz ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x2f75
	.ascii "_mm512_fixupimm_ps(X,Y,Z,C) ((__m512)__builtin_ia32_fixupimmps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(-1), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x2f7a
	.ascii "_mm512_mask_fixupimm_ps(X,U,Y,Z,C) ((__m512)__builtin_ia32_fixupimmps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x2f7f
	.ascii "_mm512_maskz_fixupimm_ps(U,X,Y,Z,C) ((__m512)__builtin_ia32_fixupimmps512_maskz ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x2f84
	.ascii "_mm_fixupimm_sd(X,Y,Z,C) ((__m128d)__builtin_ia32_fixupimmsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(-1), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x2f89
	.ascii "_mm_mask_fixupimm_sd(X,U,Y,Z,C) ((__m128d)__builtin_ia32_fixupimmsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x2f8e
	.ascii "_mm_maskz_fixupimm_sd(U,X,Y,Z,C) ((__m128d)__builtin_ia32_fixupimmsd_maskz ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x2f93
	.ascii "_mm_fixupimm_ss(X,Y,Z,C) ((__m128)__builtin_ia32_fixupimmss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(-1), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x2f98
	.ascii "_mm_mask_fixupimm_ss(X,U,Y,Z,C) ((__m128)__builtin_ia32_fixupimmss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x2f9d
	.ascii "_mm_maskz_fixupimm_ss(U,X,Y,Z,C) ((__m128)__builtin_ia32_fixupimmss_maskz ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x311d
	.ascii "_mm512_getmant_pd(X,B,C) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3124
	.ascii "_mm512_mask_getmant_pd(W,U,X,B,C) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)(__m512d)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x312b
	.ascii "_mm512_maskz_getmant_pd(U,X,B,C) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)_mm512_setzero_pd(), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3131
	.ascii "_mm512_getmant_ps(X,B,C) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3138
	.ascii "_mm512_mask_getmant_ps(W,U,X,B,C) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)(__m512)(W), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x313f
	.ascii "_mm512_maskz_getmant_ps(U,X,B,C) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3145
	.ascii "_mm_getmant_sd(X,Y,C,D) ((__m128d)__builtin_ia32_getmantsd_round ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(((D)<<2) | (C)), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x314b
	.ascii "_mm_getmant_ss(X,Y,C,D) ((__m128)__builtin_ia32_getmantss_round ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(((D)<<2) | (C)), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3151
	.ascii "_mm_getexp_ss(A,B) ((__m128)__builtin_ia32_getexpss128_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3155
	.ascii "_mm_getexp_sd(A,B) ((__m128d)__builtin_ia32_getexpsd128_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3159
	.ascii "_mm512_getexp_ps(A) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x315d
	.ascii "_mm512_mask_getexp_ps(W,U,A) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(W), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3161
	.ascii "_mm512_maskz_getexp_ps(U,A) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3165
	.ascii "_mm512_getexp_pd(A) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3169
	.ascii "_mm512_mask_getexp_pd(W,U,A) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x316d
	.ascii "_mm512_maskz_getexp_pd(U,A) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)_mm512_setzero_pd(), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x31ca
	.ascii "_mm512_roundscale_ps(A,B) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(A), (int)(B), (__v16sf)_mm512_undefined_ps(), (__mmask16)(-1), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x31cd
	.ascii "_mm512_mask_roundscale_ps(A,B,C,D) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(C), (int)(D), (__v16sf)(__m512)(A), (__mmask16)(B), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x31d2
	.ascii "_mm512_maskz_roundscale_ps(A,B,C) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(B), (int)(C), (__v16sf)_mm512_setzero_ps(), (__mmask16)(A), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x31d7
	.ascii "_mm512_roundscale_pd(A,B) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(A), (int)(B), (__v8df)_mm512_undefined_pd(), (__mmask8)(-1), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x31da
	.ascii "_mm512_mask_roundscale_pd(A,B,C,D) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(C), (int)(D), (__v8df)(__m512d)(A), (__mmask8)(B), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x31df
	.ascii "_mm512_maskz_roundscale_pd(A,B,C) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(B), (int)(C), (__v8df)_mm512_setzero_pd(), (__mmask8)(A), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x31e4
	.ascii "_mm_roundscale_ss(A,B,C) ((__m128) __builtin_ia32_rndscaless_round ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x31e7
	.ascii "_mm_roundscale_sd(A,B,C) ((__m128d) __builtin_ia32_rndscalesd_round ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x323e
	.ascii "_mm512_cmp_pd_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(P), (__mmask8)-1,_MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3243
	.ascii "_mm512_cmp_ps_mask(X,Y,P) ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(P), (__mmask16)-1,_MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3248
	.ascii "_mm512_mask_cmp_pd_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(P), (__mmask8)M, _MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x324d
	.ascii "_mm512_mask_cmp_ps_mask(M,X,Y,P) ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(P), (__mmask16)M,_MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3252
	.ascii "_mm_cmp_sd_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (__mmask8)-1,_MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3257
	.ascii "_mm_mask_cmp_sd_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), M,_MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x325c
	.ascii "_mm_cmp_ss_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (__mmask8)-1,_MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x1
	.uleb128 0x3261
	.ascii "_mm_mask_cmp_ss_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), M,_MM_FROUND_CUR_DIRECTION))\0"
	.byte	0x2
	.uleb128 0x326f
	.ascii "__DISABLE_AVX512F__\0"
	.byte	0x4
	.file 208 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/avx512erintrin.h"
	.byte	0x3
	.uleb128 0x2f
	.uleb128 0xd0
	.byte	0x1
	.uleb128 0x1d
	.ascii "_AVX512ERINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_AVX512ER__ \0"
	.byte	0x1
	.uleb128 0xff
	.ascii "_mm512_exp2a23_round_pd(A,C) __builtin_ia32_exp2pd_mask(A, (__v8df)_mm512_setzero_pd(), -1, C)\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "_mm512_mask_exp2a23_round_pd(W,U,A,C) __builtin_ia32_exp2pd_mask(A, W, U, C)\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "_mm512_maskz_exp2a23_round_pd(U,A,C) __builtin_ia32_exp2pd_mask(A, (__v8df)_mm512_setzero_pd(), U, C)\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "_mm512_exp2a23_round_ps(A,C) __builtin_ia32_exp2ps_mask(A, (__v16sf)_mm512_setzero_ps(), -1, C)\0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "_mm512_mask_exp2a23_round_ps(W,U,A,C) __builtin_ia32_exp2ps_mask(A, W, U, C)\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "_mm512_maskz_exp2a23_round_ps(U,A,C) __builtin_ia32_exp2ps_mask(A, (__v16sf)_mm512_setzero_ps(), U, C)\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "_mm512_rcp28_round_pd(A,C) __builtin_ia32_rcp28pd_mask(A, (__v8df)_mm512_setzero_pd(), -1, C)\0"
	.byte	0x1
	.uleb128 0x114
	.ascii "_mm512_mask_rcp28_round_pd(W,U,A,C) __builtin_ia32_rcp28pd_mask(A, W, U, C)\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "_mm512_maskz_rcp28_round_pd(U,A,C) __builtin_ia32_rcp28pd_mask(A, (__v8df)_mm512_setzero_pd(), U, C)\0"
	.byte	0x1
	.uleb128 0x11a
	.ascii "_mm512_rcp28_round_ps(A,C) __builtin_ia32_rcp28ps_mask(A, (__v16sf)_mm512_setzero_ps(), -1, C)\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "_mm512_mask_rcp28_round_ps(W,U,A,C) __builtin_ia32_rcp28ps_mask(A, W, U, C)\0"
	.byte	0x1
	.uleb128 0x120
	.ascii "_mm512_maskz_rcp28_round_ps(U,A,C) __builtin_ia32_rcp28ps_mask(A, (__v16sf)_mm512_setzero_ps(), U, C)\0"
	.byte	0x1
	.uleb128 0x123
	.ascii "_mm512_rsqrt28_round_pd(A,C) __builtin_ia32_rsqrt28pd_mask(A, (__v8df)_mm512_setzero_pd(), -1, C)\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "_mm512_mask_rsqrt28_round_pd(W,U,A,C) __builtin_ia32_rsqrt28pd_mask(A, W, U, C)\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "_mm512_maskz_rsqrt28_round_pd(U,A,C) __builtin_ia32_rsqrt28pd_mask(A, (__v8df)_mm512_setzero_pd(), U, C)\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "_mm512_rsqrt28_round_ps(A,C) __builtin_ia32_rsqrt28ps_mask(A, (__v16sf)_mm512_setzero_ps(), -1, C)\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "_mm512_mask_rsqrt28_round_ps(W,U,A,C) __builtin_ia32_rsqrt28ps_mask(A, W, U, C)\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "_mm512_maskz_rsqrt28_round_ps(U,A,C) __builtin_ia32_rsqrt28ps_mask(A, (__v16sf)_mm512_setzero_ps(), U, C)\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "_mm_rcp28_round_sd(A,B,R) __builtin_ia32_rcp28sd_round(A, B, R)\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "_mm_rcp28_round_ss(A,B,R) __builtin_ia32_rcp28ss_round(A, B, R)\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "_mm_rsqrt28_round_sd(A,B,R) __builtin_ia32_rsqrt28sd_round(A, B, R)\0"
	.byte	0x1
	.uleb128 0x13e
	.ascii "_mm_rsqrt28_round_ss(A,B,R) __builtin_ia32_rsqrt28ss_round(A, B, R)\0"
	.byte	0x1
	.uleb128 0x143
	.ascii "_mm512_exp2a23_pd(A) _mm512_exp2a23_round_pd(A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x146
	.ascii "_mm512_mask_exp2a23_pd(W,U,A) _mm512_mask_exp2a23_round_pd(W, U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "_mm512_maskz_exp2a23_pd(U,A) _mm512_maskz_exp2a23_round_pd(U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "_mm512_exp2a23_ps(A) _mm512_exp2a23_round_ps(A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x14f
	.ascii "_mm512_mask_exp2a23_ps(W,U,A) _mm512_mask_exp2a23_round_ps(W, U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "_mm512_maskz_exp2a23_ps(U,A) _mm512_maskz_exp2a23_round_ps(U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x155
	.ascii "_mm512_rcp28_pd(A) _mm512_rcp28_round_pd(A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "_mm512_mask_rcp28_pd(W,U,A) _mm512_mask_rcp28_round_pd(W, U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "_mm512_maskz_rcp28_pd(U,A) _mm512_maskz_rcp28_round_pd(U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "_mm512_rcp28_ps(A) _mm512_rcp28_round_ps(A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "_mm512_mask_rcp28_ps(W,U,A) _mm512_mask_rcp28_round_ps(W, U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "_mm512_maskz_rcp28_ps(U,A) _mm512_maskz_rcp28_round_ps(U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "_mm512_rsqrt28_pd(A) _mm512_rsqrt28_round_pd(A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "_mm512_mask_rsqrt28_pd(W,U,A) _mm512_mask_rsqrt28_round_pd(W, U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "_mm512_maskz_rsqrt28_pd(U,A) _mm512_maskz_rsqrt28_round_pd(U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x170
	.ascii "_mm512_rsqrt28_ps(A) _mm512_rsqrt28_round_ps(A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "_mm512_mask_rsqrt28_ps(W,U,A) _mm512_mask_rsqrt28_round_ps(W, U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "_mm512_maskz_rsqrt28_ps(U,A) _mm512_maskz_rsqrt28_round_ps(U, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "_mm_rcp28_sd(A,B) __builtin_ia32_rcp28sd_round(B, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "_mm_rcp28_ss(A,B) __builtin_ia32_rcp28ss_round(B, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "_mm_rsqrt28_sd(A,B) __builtin_ia32_rsqrt28sd_round(B, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x1
	.uleb128 0x182
	.ascii "_mm_rsqrt28_ss(A,B) __builtin_ia32_rsqrt28ss_round(B, A, _MM_FROUND_CUR_DIRECTION)\0"
	.byte	0x2
	.uleb128 0x186
	.ascii "__DISABLE_AVX512ER__\0"
	.byte	0x4
	.file 209 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/avx512pfintrin.h"
	.byte	0x3
	.uleb128 0x31
	.uleb128 0xd1
	.byte	0x1
	.uleb128 0x1d
	.ascii "_AVX512PFINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_AVX512PF__ \0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "_mm512_mask_prefetch_i32gather_pd(INDEX,MASK,ADDR,SCALE,HINT) __builtin_ia32_gatherpfdpd ((__mmask8)MASK, (__v8si)(__m256i)INDEX, (long long const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "_mm512_mask_prefetch_i32gather_ps(INDEX,MASK,ADDR,SCALE,HINT) __builtin_ia32_gatherpfdps ((__mmask16)MASK, (__v16si)(__m512i)INDEX, (int const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "_mm512_mask_prefetch_i64gather_pd(INDEX,MASK,ADDR,SCALE,HINT) __builtin_ia32_gatherpfqpd ((__mmask8)MASK, (__v8di)(__m512i)INDEX, (long long const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "_mm512_mask_prefetch_i64gather_ps(INDEX,MASK,ADDR,SCALE,HINT) __builtin_ia32_gatherpfqps ((__mmask8)MASK, (__v8di)(__m512i)INDEX, (int const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "_mm512_prefetch_i32scatter_pd(ADDR,INDEX,SCALE,HINT) __builtin_ia32_scatterpfdpd ((__mmask8)0xFF, (__v8si)(__m256i)INDEX, (long long const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "_mm512_prefetch_i32scatter_ps(ADDR,INDEX,SCALE,HINT) __builtin_ia32_scatterpfdps ((__mmask16)0xFFFF, (__v16si)(__m512i)INDEX, (int const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "_mm512_mask_prefetch_i32scatter_pd(ADDR,MASK,INDEX,SCALE,HINT) __builtin_ia32_scatterpfdpd ((__mmask8)MASK, (__v8si)(__m256i)INDEX, (long long const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "_mm512_mask_prefetch_i32scatter_ps(ADDR,MASK,INDEX,SCALE,HINT) __builtin_ia32_scatterpfdps ((__mmask16)MASK, (__v16si)(__m512i)INDEX, (int const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "_mm512_prefetch_i64scatter_pd(ADDR,INDEX,SCALE,HINT) __builtin_ia32_scatterpfqpd ((__mmask8)0xFF, (__v8di)(__m512i)INDEX, (long long const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "_mm512_prefetch_i64scatter_ps(ADDR,INDEX,SCALE,HINT) __builtin_ia32_scatterpfqps ((__mmask8)0xFF, (__v8di)(__m512i)INDEX, (int const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "_mm512_mask_prefetch_i64scatter_pd(ADDR,MASK,INDEX,SCALE,HINT) __builtin_ia32_scatterpfqpd ((__mmask8)MASK, (__v8di)(__m512i)INDEX, (long long const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "_mm512_mask_prefetch_i64scatter_ps(ADDR,MASK,INDEX,SCALE,HINT) __builtin_ia32_scatterpfqps ((__mmask8)MASK, (__v8di)(__m512i)INDEX, (int const *)ADDR, (int)SCALE, (int)HINT)\0"
	.byte	0x2
	.uleb128 0xd0
	.ascii "__DISABLE_AVX512PF__\0"
	.byte	0x4
	.file 210 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/avx512cdintrin.h"
	.byte	0x3
	.uleb128 0x33
	.uleb128 0xd2
	.byte	0x1
	.uleb128 0x1d
	.ascii "_AVX512CDINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_AVX512CD__ \0"
	.byte	0x2
	.uleb128 0xb4
	.ascii "__DISABLE_AVX512CD__\0"
	.byte	0x4
	.file 211 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/shaintrin.h"
	.byte	0x3
	.uleb128 0x35
	.uleb128 0xd3
	.byte	0x1
	.uleb128 0x1d
	.ascii "_SHAINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_SHA__ \0"
	.byte	0x1
	.uleb128 0x42
	.ascii "_mm_sha1rnds4_epu32(A,B,I) ((__m128i) __builtin_ia32_sha1rnds4 ((__v4si)(__m128i)A, (__v4si)(__m128i)B, (int)I))\0"
	.byte	0x2
	.uleb128 0x5e
	.ascii "__DISABLE_SHA__\0"
	.byte	0x4
	.file 212 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/lzcntintrin.h"
	.byte	0x3
	.uleb128 0x37
	.uleb128 0xd4
	.byte	0x1
	.uleb128 0x1e
	.ascii "_LZCNTINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x23
	.ascii "__DISABLE_LZCNT__ \0"
	.byte	0x2
	.uleb128 0x47
	.ascii "__DISABLE_LZCNT__\0"
	.byte	0x4
	.file 213 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/bmiintrin.h"
	.byte	0x3
	.uleb128 0x39
	.uleb128 0xd5
	.byte	0x1
	.uleb128 0x1d
	.ascii "_BMIINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_BMI__ \0"
	.byte	0x2
	.uleb128 0xb4
	.ascii "__DISABLE_BMI__\0"
	.byte	0x4
	.file 214 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/bmi2intrin.h"
	.byte	0x3
	.uleb128 0x3b
	.uleb128 0xd6
	.byte	0x1
	.uleb128 0x1d
	.ascii "_BMI2INTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_BMI2__ \0"
	.byte	0x2
	.uleb128 0x69
	.ascii "__DISABLE_BMI2__\0"
	.byte	0x4
	.file 215 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/fmaintrin.h"
	.byte	0x3
	.uleb128 0x3d
	.uleb128 0xd7
	.byte	0x1
	.uleb128 0x1d
	.ascii "_FMAINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_FMA__ \0"
	.byte	0x2
	.uleb128 0x12a
	.ascii "__DISABLE_FMA__\0"
	.byte	0x4
	.file 216 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/f16cintrin.h"
	.byte	0x3
	.uleb128 0x3f
	.uleb128 0xd8
	.byte	0x1
	.uleb128 0x1d
	.ascii "_F16CINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_F16C__ \0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "_cvtss_sh(__F,__I) (__extension__ ({ __v4sf __A = __extension__ (__v4sf){ __F, 0, 0, 0 }; __v8hi __H = __builtin_ia32_vcvtps2ph (__A, __I); (unsigned short) __builtin_ia32_vec_ext_v8hi (__H, 0); }))\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "_mm_cvtps_ph(A,I) ((__m128i) __builtin_ia32_vcvtps2ph ((__v4sf)(__m128) A, (int) (I)))\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "_mm256_cvtps_ph(A,I) ((__m128i) __builtin_ia32_vcvtps2ph256 ((__v8sf)(__m256) A, (int) (I)))\0"
	.byte	0x2
	.uleb128 0x5e
	.ascii "__DISABLE_F16C__\0"
	.byte	0x4
	.file 217 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/rtmintrin.h"
	.byte	0x3
	.uleb128 0x41
	.uleb128 0xd9
	.byte	0x1
	.uleb128 0x1d
	.ascii "_RTMINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_RTM__ \0"
	.byte	0x1
	.uleb128 0x25
	.ascii "_XBEGIN_STARTED (~0u)\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "_XABORT_EXPLICIT (1 << 0)\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "_XABORT_RETRY (1 << 1)\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "_XABORT_CONFLICT (1 << 2)\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "_XABORT_CAPACITY (1 << 3)\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "_XABORT_DEBUG (1 << 4)\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "_XABORT_NESTED (1 << 5)\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "_XABORT_CODE(x) (((x) >> 24) & 0xFF)\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "_xabort(N) __builtin_ia32_xabort (N)\0"
	.byte	0x2
	.uleb128 0x50
	.ascii "__DISABLE_RTM__\0"
	.byte	0x4
	.file 218 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/xtestintrin.h"
	.byte	0x3
	.uleb128 0x43
	.uleb128 0xda
	.byte	0x1
	.uleb128 0x1d
	.ascii "_XTESTINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_RTM__ \0"
	.byte	0x2
	.uleb128 0x2f
	.ascii "__DISABLE_RTM__\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x48
	.ascii "__DISABLE_RDRND__ \0"
	.byte	0x2
	.uleb128 0x58
	.ascii "__DISABLE_RDRND__\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "__DISABLE_FSGSBASE__ \0"
	.byte	0x2
	.uleb128 0x9b
	.ascii "__DISABLE_FSGSBASE__\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "__DISABLE_RDRND__ \0"
	.byte	0x2
	.uleb128 0xab
	.ascii "__DISABLE_RDRND__\0"
	.byte	0x4
	.file 219 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/mm3dnow.h"
	.byte	0x3
	.uleb128 0x30
	.uleb128 0xdb
	.byte	0x1
	.uleb128 0x1c
	.ascii "_MM3DNOW_H_INCLUDED \0"
	.file 220 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/prfchwintrin.h"
	.byte	0x3
	.uleb128 0x1f
	.uleb128 0xdc
	.byte	0x1
	.uleb128 0x1d
	.ascii "_PRFCHWINTRIN_H_INCLUDED \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x24
	.ascii "__DISABLE_3dNOW__ \0"
	.byte	0x2
	.uleb128 0xd6
	.ascii "__DISABLE_3dNOW__\0"
	.byte	0x4
	.file 221 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/fma4intrin.h"
	.byte	0x3
	.uleb128 0x32
	.uleb128 0xdd
	.byte	0x1
	.uleb128 0x1d
	.ascii "_FMA4INTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x25
	.ascii "__DISABLE_FMA4__ \0"
	.byte	0x2
	.uleb128 0xed
	.ascii "__DISABLE_FMA4__\0"
	.byte	0x4
	.file 222 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/xopintrin.h"
	.byte	0x3
	.uleb128 0x34
	.uleb128 0xde
	.byte	0x1
	.uleb128 0x1d
	.ascii "_XOPMMINTRIN_H_INCLUDED \0"
	.byte	0x3
	.uleb128 0x1f
	.uleb128 0xdd
	.byte	0x4
	.byte	0x1
	.uleb128 0x24
	.ascii "__DISABLE_XOP__ \0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "_mm_roti_epi8(A,N) ((__m128i) __builtin_ia32_vprotbi ((__v16qi)(__m128i)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "_mm_roti_epi16(A,N) ((__m128i) __builtin_ia32_vprotwi ((__v8hi)(__m128i)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "_mm_roti_epi32(A,N) ((__m128i) __builtin_ia32_vprotdi ((__v4si)(__m128i)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "_mm_roti_epi64(A,N) ((__m128i) __builtin_ia32_vprotqi ((__v2di)(__m128i)(A), (int)(N)))\0"
	.byte	0x1
	.uleb128 0x32e
	.ascii "_mm_permute2_pd(X,Y,C,I) ((__m128d) __builtin_ia32_vpermil2pd ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128d)(C), (int)(I)))\0"
	.byte	0x1
	.uleb128 0x334
	.ascii "_mm256_permute2_pd(X,Y,C,I) ((__m256d) __builtin_ia32_vpermil2pd256 ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (__v4di)(__m256d)(C), (int)(I)))\0"
	.byte	0x1
	.uleb128 0x33a
	.ascii "_mm_permute2_ps(X,Y,C,I) ((__m128) __builtin_ia32_vpermil2ps ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128)(C), (int)(I)))\0"
	.byte	0x1
	.uleb128 0x340
	.ascii "_mm256_permute2_ps(X,Y,C,I) ((__m256) __builtin_ia32_vpermil2ps256 ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (__v8si)(__m256)(C), (int)(I)))\0"
	.byte	0x2
	.uleb128 0x348
	.ascii "__DISABLE_XOP__\0"
	.byte	0x4
	.file 223 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/lwpintrin.h"
	.byte	0x3
	.uleb128 0x36
	.uleb128 0xdf
	.byte	0x1
	.uleb128 0x1d
	.ascii "_LWPINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_LWP__ \0"
	.byte	0x1
	.uleb128 0x40
	.ascii "__lwpval32(D2,D1,F) (__builtin_ia32_lwpval32 ((unsigned int) (D2), (unsigned int) (D1), (unsigned int) (F)))\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "__lwpval64(D2,D1,F) (__builtin_ia32_lwpval64 ((unsigned long long) (D2), (unsigned int) (D1), (unsigned int) (F)))\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "__lwpins32(D2,D1,F) (__builtin_ia32_lwpins32 ((unsigned int) (D2), (unsigned int) (D1), (unsigned int) (F)))\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "__lwpins64(D2,D1,F) (__builtin_ia32_lwpins64 ((unsigned long long) (D2), (unsigned int) (D1), (unsigned int) (F)))\0"
	.byte	0x2
	.uleb128 0x65
	.ascii "__DISABLE_LWP__\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x38
	.uleb128 0xd5
	.byte	0x4
	.byte	0x3
	.uleb128 0x3a
	.uleb128 0xd6
	.byte	0x4
	.file 224 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/tbmintrin.h"
	.byte	0x3
	.uleb128 0x3c
	.uleb128 0xe0
	.byte	0x1
	.uleb128 0x1d
	.ascii "_TBMINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_TBM__ \0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "__bextri_u32(X,I) ((unsigned int)__builtin_ia32_bextri_u32 ((unsigned int)(X), (unsigned int)(I)))\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "__bextri_u64(X,I) ((unsigned long long)__builtin_ia32_bextri_u64 ((unsigned long long)(X), (unsigned long long)(I)))\0"
	.byte	0x2
	.uleb128 0xb0
	.ascii "__DISABLE_TBM__\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x3e
	.uleb128 0xd4
	.byte	0x4
	.file 225 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/rdseedintrin.h"
	.byte	0x3
	.uleb128 0x42
	.uleb128 0xe1
	.byte	0x1
	.uleb128 0x1d
	.ascii "_RDSEEDINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_RDSEED__ \0"
	.byte	0x2
	.uleb128 0x3e
	.ascii "__DISABLE_RDSEED__\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x44
	.uleb128 0xdc
	.byte	0x4
	.file 226 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/fxsrintrin.h"
	.byte	0x3
	.uleb128 0x46
	.uleb128 0xe2
	.byte	0x1
	.uleb128 0x1d
	.ascii "_FXSRINTRIN_H_INCLUDED \0"
	.byte	0x4
	.file 227 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/xsaveintrin.h"
	.byte	0x3
	.uleb128 0x48
	.uleb128 0xe3
	.byte	0x1
	.uleb128 0x1d
	.ascii "_XSAVEINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_XSAVE__ \0"
	.byte	0x2
	.uleb128 0x44
	.ascii "__DISABLE_XSAVE__\0"
	.byte	0x4
	.file 228 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/xsaveoptintrin.h"
	.byte	0x3
	.uleb128 0x4a
	.uleb128 0xe4
	.byte	0x1
	.uleb128 0x1d
	.ascii "_XSAVEOPTINTRIN_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__DISABLE_XSAVEOPT__ \0"
	.byte	0x2
	.uleb128 0x36
	.ascii "__DISABLE_XSAVEOPT__\0"
	.byte	0x4
	.file 229 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/adxintrin.h"
	.byte	0x3
	.uleb128 0x4c
	.uleb128 0xe5
	.byte	0x1
	.uleb128 0x1d
	.ascii "_ADXINTRIN_H_INCLUDED \0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 230 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/random.tcc"
	.byte	0x3
	.uleb128 0x33
	.uleb128 0xe6
	.byte	0x1
	.uleb128 0x1f
	.ascii "_RANDOM_TCC 1\0"
	.file 231 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/numeric"
	.byte	0x3
	.uleb128 0x21
	.uleb128 0xe7
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_NUMERIC 1\0"
	.file 232 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_numeric.h"
	.byte	0x3
	.uleb128 0x3e
	.uleb128 0xe8
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_NUMERIC_H 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 233 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bitset"
	.byte	0x3
	.uleb128 0x41
	.uleb128 0xe9
	.byte	0x1
	.uleb128 0x2b
	.ascii "_GLIBCXX_BITSET 1\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "_GLIBCXX_BITSET_BITS_PER_WORD (__CHAR_BIT__ * __SIZEOF_LONG__)\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "_GLIBCXX_BITSET_WORDS(__n) ((__n) / _GLIBCXX_BITSET_BITS_PER_WORD + ((__n) % _GLIBCXX_BITSET_BITS_PER_WORD == 0 ? 0 : 1))\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "_GLIBCXX_BITSET_BITS_PER_ULL (__CHAR_BIT__ * __SIZEOF_LONG_LONG__)\0"
	.byte	0x2
	.uleb128 0x60b
	.ascii "_GLIBCXX_BITSET_WORDS\0"
	.byte	0x2
	.uleb128 0x60c
	.ascii "_GLIBCXX_BITSET_BITS_PER_WORD\0"
	.byte	0x2
	.uleb128 0x60d
	.ascii "_GLIBCXX_BITSET_BITS_PER_ULL\0"
	.byte	0x4
	.file 234 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/deque"
	.byte	0x3
	.uleb128 0x43
	.uleb128 0xea
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_DEQUE 1\0"
	.file 235 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_deque.h"
	.byte	0x3
	.uleb128 0x40
	.uleb128 0xeb
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_DEQUE_H 1\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "_GLIBCXX_DEQUE_BUF_SIZE 512\0"
	.byte	0x2
	.uleb128 0x826
	.ascii "_GLIBCXX_DEQUE_BUF_SIZE\0"
	.byte	0x4
	.file 236 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/deque.tcc"
	.byte	0x3
	.uleb128 0x42
	.uleb128 0xec
	.byte	0x1
	.uleb128 0x39
	.ascii "_DEQUE_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.file 237 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/fstream"
	.byte	0x3
	.uleb128 0x45
	.uleb128 0xed
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBCXX_FSTREAM 1\0"
	.file 238 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/codecvt.h"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0xee
	.byte	0x1
	.uleb128 0x25
	.ascii "_CODECVT_H 1\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x12
	.byte	0x4
	.file 239 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/basic_file.h"
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0xef
	.byte	0x1
	.uleb128 0x23
	.ascii "_GLIBCXX_BASIC_FILE_STDIO_H 1\0"
	.file 240 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/c++io.h"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0xf0
	.byte	0x1
	.uleb128 0x21
	.ascii "_GLIBCXX_CXX_IO_H 1\0"
	.byte	0x3
	.uleb128 0x23
	.uleb128 0x12
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 241 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/fstream.tcc"
	.byte	0x3
	.uleb128 0x3ab
	.uleb128 0xf1
	.byte	0x1
	.uleb128 0x23
	.ascii "_FSTREAM_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.file 242 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/functional"
	.byte	0x3
	.uleb128 0x46
	.uleb128 0xf2
	.byte	0x1
	.uleb128 0x2c
	.ascii "_GLIBCXX_FUNCTIONAL 1\0"
	.file 243 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/typeinfo"
	.byte	0x3
	.uleb128 0x35
	.uleb128 0xf3
	.byte	0x1
	.uleb128 0x1e
	.ascii "_TYPEINFO \0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x37
	.uleb128 0x2a
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_TUPLE 1\0"
	.file 244 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/array"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0xf4
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_ARRAY 1\0"
	.file 245 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/stdexcept"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0xf5
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBCXX_STDEXCEPT 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x29
	.byte	0x1
	.uleb128 0x1a
	.ascii "_USES_ALLOCATOR_H 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x47
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBCXX_IOMANIP 1\0"
	.file 246 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/locale"
	.byte	0x3
	.uleb128 0x2b
	.uleb128 0xf6
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBCXX_LOCALE 1\0"
	.file 247 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/locale_facets_nonio.h"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0xf7
	.byte	0x1
	.uleb128 0x23
	.ascii "_LOCALE_FACETS_NONIO_H 1\0"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x15
	.byte	0x4
	.file 248 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/time_members.h"
	.byte	0x3
	.uleb128 0x15c
	.uleb128 0xf8
	.byte	0x4
	.file 249 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/messages_members.h"
	.byte	0x3
	.uleb128 0x76a
	.uleb128 0xf9
	.byte	0x4
	.file 250 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/locale_facets_nonio.tcc"
	.byte	0x3
	.uleb128 0x76f
	.uleb128 0xfa
	.byte	0x1
	.uleb128 0x1f
	.ascii "_LOCALE_FACETS_NONIO_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x4a
	.uleb128 0x6
	.byte	0x1
	.uleb128 0x22
	.ascii "_GLIBCXX_IOSTREAM 1\0"
	.byte	0x4
	.file 251 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iterator"
	.byte	0x3
	.uleb128 0x4c
	.uleb128 0xfb
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_ITERATOR 1\0"
	.file 252 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stream_iterator.h"
	.byte	0x3
	.uleb128 0x42
	.uleb128 0xfc
	.byte	0x1
	.uleb128 0x1f
	.ascii "_STREAM_ITERATOR_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 253 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/list"
	.byte	0x3
	.uleb128 0x4e
	.uleb128 0xfd
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_LIST 1\0"
	.file 254 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_list.h"
	.byte	0x3
	.uleb128 0x3f
	.uleb128 0xfe
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_LIST_H 1\0"
	.byte	0x4
	.file 255 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/list.tcc"
	.byte	0x3
	.uleb128 0x40
	.uleb128 0xff
	.byte	0x1
	.uleb128 0x39
	.ascii "_LIST_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.file 256 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/map"
	.byte	0x3
	.uleb128 0x50
	.uleb128 0x100
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_MAP 1\0"
	.file 257 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h"
	.byte	0x3
	.uleb128 0x3c
	.uleb128 0x101
	.byte	0x1
	.uleb128 0x3b
	.ascii "_STL_TREE_H 1\0"
	.file 258 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/aligned_buffer.h"
	.byte	0x3
	.uleb128 0x43
	.uleb128 0x102
	.byte	0x1
	.uleb128 0x1e
	.ascii "_ALIGNED_BUFFER_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 259 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h"
	.byte	0x3
	.uleb128 0x3d
	.uleb128 0x103
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_MAP_H 1\0"
	.byte	0x4
	.file 260 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_multimap.h"
	.byte	0x3
	.uleb128 0x3e
	.uleb128 0x104
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_MULTIMAP_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 261 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/memory"
	.byte	0x3
	.uleb128 0x51
	.uleb128 0x105
	.byte	0x1
	.uleb128 0x2c
	.ascii "_GLIBCXX_MEMORY 1\0"
	.file 262 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_raw_storage_iter.h"
	.byte	0x3
	.uleb128 0x43
	.uleb128 0x106
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_RAW_STORAGE_ITERATOR_H 1\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x4a
	.uleb128 0x3b
	.byte	0x1
	.uleb128 0x1e
	.ascii "_CONCURRENCE_H 1\0"
	.byte	0x4
	.file 263 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/unique_ptr.h"
	.byte	0x3
	.uleb128 0x51
	.uleb128 0x107
	.byte	0x1
	.uleb128 0x1f
	.ascii "_UNIQUE_PTR_H 1\0"
	.byte	0x4
	.file 264 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/shared_ptr.h"
	.byte	0x3
	.uleb128 0x52
	.uleb128 0x108
	.byte	0x1
	.uleb128 0x32
	.ascii "_SHARED_PTR_H 1\0"
	.byte	0x3
	.uleb128 0x34
	.uleb128 0x2c
	.byte	0x1
	.uleb128 0x32
	.ascii "_SHARED_PTR_BASE_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 265 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/backward/auto_ptr.h"
	.byte	0x3
	.uleb128 0x54
	.uleb128 0x109
	.byte	0x1
	.uleb128 0x1f
	.ascii "_BACKWARD_AUTO_PTR_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 266 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/queue"
	.byte	0x3
	.uleb128 0x55
	.uleb128 0x10a
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_QUEUE 1\0"
	.file 267 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_queue.h"
	.byte	0x3
	.uleb128 0x40
	.uleb128 0x10b
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_QUEUE_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 268 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/set"
	.byte	0x3
	.uleb128 0x56
	.uleb128 0x10c
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_SET 1\0"
	.file 269 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_set.h"
	.byte	0x3
	.uleb128 0x3d
	.uleb128 0x10d
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_SET_H 1\0"
	.byte	0x4
	.file 270 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_multiset.h"
	.byte	0x3
	.uleb128 0x3e
	.uleb128 0x10e
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_MULTISET_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 271 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/stack"
	.byte	0x3
	.uleb128 0x58
	.uleb128 0x10f
	.byte	0x1
	.uleb128 0x38
	.ascii "_GLIBCXX_STACK 1\0"
	.file 272 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_stack.h"
	.byte	0x3
	.uleb128 0x3d
	.uleb128 0x110
	.byte	0x1
	.uleb128 0x39
	.ascii "_STL_STACK_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 273 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/valarray"
	.byte	0x3
	.uleb128 0x5e
	.uleb128 0x111
	.byte	0x1
	.uleb128 0x20
	.ascii "_GLIBCXX_VALARRAY 1\0"
	.byte	0x3
	.uleb128 0x25
	.uleb128 0xd
	.byte	0x4
	.file 274 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/valarray_array.h"
	.byte	0x3
	.uleb128 0x59
	.uleb128 0x112
	.byte	0x1
	.uleb128 0x21
	.ascii "_VALARRAY_ARRAY_H 1\0"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x13
	.byte	0x4
	.byte	0x1
	.uleb128 0x20f
	.ascii "_DEFINE_ARRAY_FUNCTION(_Op,_Name) template<typename _Tp> inline void _Array_augmented_ ##_Name(_Array<_Tp> __a, size_t __n, const _Tp& __t) { for (_Tp* __p = __a._M_data; __p < __a._M_data + __n; ++__p) *__p _Op ##= __t; } template<typename _Tp> inline void _Array_augmented_ ##_Name(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b) { _Tp* __p = __a._M_data; for (_Tp* __q = __b._M_data; __q < __b._M_data + __n; ++__p, ++__q) *__p _Op ##= *__q; } template<typename _Tp, class _Dom> void _Array_augmented_ ##_Name(_Array<_Tp> __a, const _Expr<_Dom, _Tp>& __e, size_t __n) { _Tp* __p(__a._M_data); for (size_t __i = 0; __i < __n; ++__i, ++__p) *__p _Op ##= __e[__i]; } template<typename _Tp> inline void _Array_augmented_ ##_Name(_Array<_Tp> __a, size_t __n, size_t __s, _Array<_Tp> __b) { _Tp* __q(__b._M_data); for (_Tp* __p = __a._M_data; __p < __a._M_data + __s * __n; __p += __s, ++__q) *__p _Op ##= *__q; } template<typename _Tp> inline void _Array_augmented_ ##_Name(_Array<_Tp> __a, _Array<_Tp> __b, size_t __n, size_t __s) { _Tp* __q(__b._M_data); for (_Tp* __p = __a._M_data; __p < __a._M_data + __n; ++__p, __q += __s) *__p _Op ##= *__q; } template<typename _Tp, class _Dom> void _Array_augmented_ ##_Name(_Array<_Tp> __a, size_t __s, const _Expr<_Dom, _Tp>& __e, size_t __n) { _Tp* __p(__a._M_data); for (size_t __i = 0; __i < __n; ++__i, __p += __s) *__p _Op ##= __e[__i]; } template<typename _Tp> inline void _Array_augmented_ ##_Name(_Array<_Tp> __a, _Array<size_t> __i, _Array<_Tp> __b, size_t __n) { _Tp* __q(__b._M_data); for (size_t* __j = __i._M_data; __j < __i._M_data + __n; ++__j, ++__q) __a._M_data[*__j] _Op ##= *__q; } template<typename _Tp> inline void _Array_augmented_ ##_Name(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b, _Array<size_t> __i) { _Tp* __p(__a._M_data); for (size_t* __j = __i._M_data; __j<__i._M_data + __n; ++__j, ++__p) *__p _Op ##= __b._M_data[*__j]; } template<typename _Tp, class _Dom> void _Array_augmented_ ##_Name(_Array<_Tp> __a, _Array<size_t> __i, const _Expr<_Dom, _Tp>& __e, size_t __n) { size_t* __j(__i._M_data); for (size_t __k = 0; __k<__n; ++__k, ++__j) __a._M_data[*__j] _Op ##= __e[__k]; } template<typename _Tp> void _Array_augmented_ ##_Name(_Array<_Tp> __a, _Array<bool> __m, _Array<_Tp> __b, size_t __n) { bool* __ok(__m._M_data); _Tp* __p(__a._M_data); for (_Tp* __q = __b._M_data; __q < __b._M_data + __n; ++__q, ++__ok, ++__p) { while (! *__ok) { ++__ok; ++__p; } *__p _Op ##= *__q; } } template<typename _Tp> void _Array_augmented_ ##_Name(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b, _Array<bool> __m) { bool* __ok(__m._M_data); _Tp* __q(__b._M_data); for (_Tp* __p = __a._M_data; __p < __a._M_data + __n; ++__p, ++__ok, ++__q) { while (! *__ok) { ++__ok; ++__q; } *__p _Op ##= *__q; } } template<typename _Tp, class _Dom> void _Array_augmented_ ##_Name(_Array<_Tp> __a, _Array<bool> __m, const _Expr<_Dom, _Tp>& __e, size_t __n) { bool* __ok(__m._M_data); _Tp* __p(__a._M_data); for (size_t __i = 0; __i < __n; ++__i, ++__ok, ++__p) { while (! *__ok) { ++__ok; ++__p; } *__p _Op ##= __e[__i]; } }\0"
	.byte	0x2
	.uleb128 0x2ae
	.ascii "_DEFINE_ARRAY_FUNCTION\0"
	.file 275 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/valarray_array.tcc"
	.byte	0x3
	.uleb128 0x2b3
	.uleb128 0x113
	.byte	0x1
	.uleb128 0x21
	.ascii "_VALARRAY_ARRAY_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.file 276 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/valarray_before.h"
	.byte	0x3
	.uleb128 0x5a
	.uleb128 0x114
	.byte	0x1
	.uleb128 0x21
	.ascii "_VALARRAY_BEFORE_H 1\0"
	.file 277 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/slice_array.h"
	.byte	0x3
	.uleb128 0x25
	.uleb128 0x115
	.byte	0x1
	.uleb128 0x21
	.ascii "_SLICE_ARRAY_H 1\0"
	.byte	0x2
	.uleb128 0xee
	.ascii "_DEFINE_VALARRAY_OPERATOR\0"
	.byte	0x1
	.uleb128 0xef
	.ascii "_DEFINE_VALARRAY_OPERATOR(_Op,_Name) template<typename _Tp> inline void slice_array<_Tp>::operator _Op ##=(const valarray<_Tp>& __v) const { _Array_augmented_ ##_Name(_M_array, _M_sz, _M_stride, _Array<_Tp>(__v)); } template<typename _Tp> template<class _Dom> inline void slice_array<_Tp>::operator _Op ##=(const _Expr<_Dom,_Tp>& __e) const { _Array_augmented_ ##_Name(_M_array, _M_stride, __e, _M_sz); }\0"
	.byte	0x2
	.uleb128 0x10b
	.ascii "_DEFINE_VALARRAY_OPERATOR\0"
	.byte	0x4
	.byte	0x4
	.file 278 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/valarray_after.h"
	.byte	0x3
	.uleb128 0x24b
	.uleb128 0x116
	.byte	0x1
	.uleb128 0x21
	.ascii "_VALARRAY_AFTER_H 1\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "_DEFINE_EXPR_UNARY_OPERATOR(_Op,_Name) template<class _Dom, typename _Tp> inline _Expr<_UnClos<_Name, std::_Expr, _Dom>, _Tp> _Expr<_Dom, _Tp>::operator _Op() const { typedef _UnClos<_Name, std::_Expr, _Dom> _Closure; return _Expr<_Closure, _Tp>(_Closure(this->_M_closure)); }\0"
	.byte	0x2
	.uleb128 0x14f
	.ascii "_DEFINE_EXPR_UNARY_OPERATOR\0"
	.byte	0x1
	.uleb128 0x151
	.ascii "_DEFINE_EXPR_BINARY_OPERATOR(_Op,_Name) template<class _Dom1, class _Dom2> inline _Expr<_BinClos<_Name, _Expr, _Expr, _Dom1, _Dom2>, typename __fun<_Name, typename _Dom1::value_type>::result_type> operator _Op(const _Expr<_Dom1, typename _Dom1::value_type>& __v, const _Expr<_Dom2, typename _Dom2::value_type>& __w) { typedef typename _Dom1::value_type _Arg; typedef typename __fun<_Name, _Arg>::result_type _Value; typedef _BinClos<_Name, _Expr, _Expr, _Dom1, _Dom2> _Closure; return _Expr<_Closure, _Value>(_Closure(__v(), __w())); } template<class _Dom> inline _Expr<_BinClos<_Name, _Expr, _Constant, _Dom, typename _Dom::value_type>, typename __fun<_Name, typename _Dom::value_type>::result_type> operator _Op(const _Expr<_Dom, typename _Dom::value_type>& __v, const typename _Dom::value_type& __t) { typedef typename _Dom::value_type _Arg; typedef typename __fun<_Name, _Arg>::result_type _Value; typedef _BinClos<_Name, _Expr, _Constant, _Dom, _Arg> _Closure; return _Expr<_Closure, _Value>(_Closure(__v(), __t)); } template<class _Dom> inline _Expr<_BinClos<_Name, _Constant, _Expr, typename _Dom::value_type, _Dom>, typename __fun<_Name, typename _Dom::value_type>::result_type> operator _Op(const typename _Dom::value_type& __t, const _Expr<_Dom, typename _Dom::value_type>& __v) { typedef typename _Dom::value_type _Arg; typedef typename __fun<_Name, _Arg>::result_type _Value; typedef _BinClos<_Name, _Constant, _Expr, _Arg, _Dom> _Closure; return _Expr<_Closure, _Value>(_Closure(__t, __v())); } template<class _Dom> inline _Expr<_BinClos<_Name, _Expr, _ValArray, _Dom, typename _Dom::value_type>, typename __fun<_Name, typename _Dom::value_type>::result_type> operator _Op(const _Expr<_Dom,typename _Dom::value_type>& __e, const valarray<typename _Dom::value_type>& __v) { typedef typename _Dom::value_type _Arg; typedef typename __fun<_Name, _Arg>::result_type _Value; typedef _BinClos<_Name, _Expr, _ValArray, _Dom, _Arg> _Closure; return _Expr<_Closure, _Value>(_Closure(__e(), __v)); } template<class _Dom> inline _Expr<_BinClos<_Name, _ValArray, _Expr, typename _Dom::value_type, _Dom>, typename __fun<_Name, typename _Dom::value_type>::result_type> operator _Op(const valarray<typename _Dom::value_type>& __v, const _Expr<_Dom, typename _Dom::value_type>& __e) { typedef typename _Dom::value_type _Tp; typedef typename __fun<_Name, _Tp>::result_type _Value; typedef _BinClos<_Name, _ValArray, _Expr, _Tp, _Dom> _Closure; return _Expr<_Closure, _Value>(_Closure(__v, __e ())); }\0"
	.byte	0x2
	.uleb128 0x1a5
	.ascii "_DEFINE_EXPR_BINARY_OPERATOR\0"
	.byte	0x1
	.uleb128 0x1a7
	.ascii "_DEFINE_EXPR_UNARY_FUNCTION(_Name,_UName) template<class _Dom> inline _Expr<_UnClos<_UName, _Expr, _Dom>, typename _Dom::value_type> _Name(const _Expr<_Dom, typename _Dom::value_type>& __e) { typedef typename _Dom::value_type _Tp; typedef _UnClos<_UName, _Expr, _Dom> _Closure; return _Expr<_Closure, _Tp>(_Closure(__e())); } template<typename _Tp> inline _Expr<_UnClos<_UName, _ValArray, _Tp>, _Tp> _Name(const valarray<_Tp>& __v) { typedef _UnClos<_UName, _ValArray, _Tp> _Closure; return _Expr<_Closure, _Tp>(_Closure(__v)); }\0"
	.byte	0x2
	.uleb128 0x1c9
	.ascii "_DEFINE_EXPR_UNARY_FUNCTION\0"
	.byte	0x1
	.uleb128 0x1cb
	.ascii "_DEFINE_EXPR_BINARY_FUNCTION(_Fun,_UFun) template<class _Dom1, class _Dom2> inline _Expr<_BinClos<_UFun, _Expr, _Expr, _Dom1, _Dom2>, typename _Dom1::value_type> _Fun(const _Expr<_Dom1, typename _Dom1::value_type>& __e1, const _Expr<_Dom2, typename _Dom2::value_type>& __e2) { typedef typename _Dom1::value_type _Tp; typedef _BinClos<_UFun, _Expr, _Expr, _Dom1, _Dom2> _Closure; return _Expr<_Closure, _Tp>(_Closure(__e1(), __e2())); } template<class _Dom> inline _Expr<_BinClos<_UFun, _Expr, _ValArray, _Dom, typename _Dom::value_type>, typename _Dom::value_type> _Fun(const _Expr<_Dom, typename _Dom::value_type>& __e, const valarray<typename _Dom::value_type>& __v) { typedef typename _Dom::value_type _Tp; typedef _BinClos<_UFun, _Expr, _ValArray, _Dom, _Tp> _Closure; return _Expr<_Closure, _Tp>(_Closure(__e(), __v)); } template<class _Dom> inline _Expr<_BinClos<_UFun, _ValArray, _Expr, typename _Dom::value_type, _Dom>, typename _Dom::value_type> _Fun(const valarray<typename _Dom::valarray>& __v, const _Expr<_Dom, typename _Dom::value_type>& __e) { typedef typename _Dom::value_type _Tp; typedef _BinClos<_UFun, _ValArray, _Expr, _Tp, _Dom> _Closure; return _Expr<_Closure, _Tp>(_Closure(__v, __e())); } template<class _Dom> inline _Expr<_BinClos<_UFun, _Expr, _Constant, _Dom, typename _Dom::value_type>, typename _Dom::value_type> _Fun(const _Expr<_Dom, typename _Dom::value_type>& __e, const typename _Dom::value_type& __t) { typedef typename _Dom::value_type _Tp; typedef _BinClos<_UFun, _Expr, _Constant, _Dom, _Tp> _Closure; return _Expr<_Closure, _Tp>(_Closure(__e(), __t)); } template<class _Dom> inline _Expr<_BinClos<_UFun, _Constant, _Expr, typename _Dom::value_type, _Dom>, typename _Dom::value_type> _Fun(const typename _Dom::value_type& __t, const _Expr<_Dom, typename _Dom::value_type>& __e) { typedef typename _Dom::value_type _Tp; typedef _BinClos<_UFun, _Constant, _Expr, _Tp, _Dom> _Closure; return _Expr<_Closure, _Tp>(_Closure(__t, __e())); } template<typename _Tp> inline _Expr<_BinClos<_UFun, _ValArray, _ValArray, _Tp, _Tp>, _Tp> _Fun(const valarray<_Tp>& __v, const valarray<_Tp>& __w) { typedef _BinClos<_UFun, _ValArray, _ValArray, _Tp, _Tp> _Closure; return _Expr<_Closure, _Tp>(_Closure(__v, __w)); } template<typename _Tp> inline _Expr<_BinClos<_UFun, _ValArray, _Constant, _Tp, _Tp>, _Tp> _Fun(const valarray<_Tp>& __v, const _Tp& __t) { typedef _BinClos<_UFun, _ValArray, _Constant, _Tp, _Tp> _Closure; return _Expr<_Closure, _Tp>(_Closure(__v, __t)); } template<typename _Tp> inline _Expr<_BinClos<_UFun, _Constant, _ValArray, _Tp, _Tp>, _Tp> _Fun(const _Tp& __t, const valarray<_Tp>& __v) { typedef _BinClos<_UFun, _Constant, _ValArray, _Tp, _Tp> _Closure; return _Expr<_Closure, _Tp>(_Closure(__t, __v)); }\0"
	.byte	0x2
	.uleb128 0x222
	.ascii "_DEFINE_EXPR_BINARY_FUNCTION\0"
	.byte	0x4
	.file 279 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/gslice.h"
	.byte	0x3
	.uleb128 0x24d
	.uleb128 0x117
	.byte	0x1
	.uleb128 0x21
	.ascii "_GSLICE_H 1\0"
	.byte	0x4
	.file 280 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/gslice_array.h"
	.byte	0x3
	.uleb128 0x24e
	.uleb128 0x118
	.byte	0x1
	.uleb128 0x21
	.ascii "_GSLICE_ARRAY_H 1\0"
	.byte	0x2
	.uleb128 0xb5
	.ascii "_DEFINE_VALARRAY_OPERATOR\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "_DEFINE_VALARRAY_OPERATOR(_Op,_Name) template<typename _Tp> inline void gslice_array<_Tp>::operator _Op ##=(const valarray<_Tp>& __v) const { _Array_augmented_ ##_Name(_M_array, _Array<size_t>(_M_index), _Array<_Tp>(__v), __v.size()); } template<typename _Tp> template<class _Dom> inline void gslice_array<_Tp>::operator _Op ##= (const _Expr<_Dom, _Tp>& __e) const { _Array_augmented_ ##_Name(_M_array, _Array<size_t>(_M_index), __e, _M_index.size()); }\0"
	.byte	0x2
	.uleb128 0xd3
	.ascii "_DEFINE_VALARRAY_OPERATOR\0"
	.byte	0x4
	.file 281 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/mask_array.h"
	.byte	0x3
	.uleb128 0x24f
	.uleb128 0x119
	.byte	0x1
	.uleb128 0x21
	.ascii "_MASK_ARRAY_H 1\0"
	.byte	0x2
	.uleb128 0xac
	.ascii "_DEFINE_VALARRAY_OPERATOR\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "_DEFINE_VALARRAY_OPERATOR(_Op,_Name) template<typename _Tp> inline void mask_array<_Tp>::operator _Op ##=(const valarray<_Tp>& __v) const { _Array_augmented_ ##_Name(_M_array, _M_mask, _Array<_Tp>(__v), __v.size()); } template<typename _Tp> template<class _Dom> inline void mask_array<_Tp>::operator _Op ##=(const _Expr<_Dom, _Tp>& __e) const { _Array_augmented_ ##_Name(_M_array, _M_mask, __e, __e.size()); }\0"
	.byte	0x2
	.uleb128 0xc9
	.ascii "_DEFINE_VALARRAY_OPERATOR\0"
	.byte	0x4
	.file 282 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/indirect_array.h"
	.byte	0x3
	.uleb128 0x250
	.uleb128 0x11a
	.byte	0x1
	.uleb128 0x21
	.ascii "_INDIRECT_ARRAY_H 1\0"
	.byte	0x2
	.uleb128 0xb1
	.ascii "_DEFINE_VALARRAY_OPERATOR\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "_DEFINE_VALARRAY_OPERATOR(_Op,_Name) template<typename _Tp> inline void indirect_array<_Tp>::operator _Op ##=(const valarray<_Tp>& __v) const { _Array_augmented_ ##_Name(_M_array, _M_index, _Array<_Tp>(__v), _M_sz); } template<typename _Tp> template<class _Dom> inline void indirect_array<_Tp>::operator _Op ##=(const _Expr<_Dom,_Tp>& __e) const { _Array_augmented_ ##_Name(_M_array, _M_index, __e, _M_sz); }\0"
	.byte	0x2
	.uleb128 0xcd
	.ascii "_DEFINE_VALARRAY_OPERATOR\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x427
	.ascii "_DEFINE_VALARRAY_UNARY_OPERATOR(_Op,_Name) template<typename _Tp> inline typename valarray<_Tp>::template _UnaryOp<_Name>::_Rt valarray<_Tp>::operator _Op() const { typedef _UnClos<_Name, _ValArray, _Tp> _Closure; typedef typename __fun<_Name, _Tp>::result_type _Rt; return _Expr<_Closure, _Rt>(_Closure(*this)); }\0"
	.byte	0x2
	.uleb128 0x436
	.ascii "_DEFINE_VALARRAY_UNARY_OPERATOR\0"
	.byte	0x1
	.uleb128 0x438
	.ascii "_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(_Op,_Name) template<class _Tp> inline valarray<_Tp>& valarray<_Tp>::operator _Op ##=(const _Tp &__t) { _Array_augmented_ ##_Name(_Array<_Tp>(_M_data), _M_size, __t); return *this; } template<class _Tp> inline valarray<_Tp>& valarray<_Tp>::operator _Op ##=(const valarray<_Tp> &__v) { _GLIBCXX_DEBUG_ASSERT(_M_size == __v._M_size); _Array_augmented_ ##_Name(_Array<_Tp>(_M_data), _M_size, _Array<_Tp>(__v._M_data)); return *this; }\0"
	.byte	0x2
	.uleb128 0x456
	.ascii "_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT\0"
	.byte	0x1
	.uleb128 0x458
	.ascii "_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(_Op,_Name) template<class _Tp> template<class _Dom> inline valarray<_Tp>& valarray<_Tp>::operator _Op ##=(const _Expr<_Dom, _Tp>& __e) { _Array_augmented_ ##_Name(_Array<_Tp>(_M_data), __e, _M_size); return *this; }\0"
	.byte	0x2
	.uleb128 0x46c
	.ascii "_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT\0"
	.byte	0x1
	.uleb128 0x46f
	.ascii "_DEFINE_BINARY_OPERATOR(_Op,_Name) template<typename _Tp> inline _Expr<_BinClos<_Name, _ValArray, _ValArray, _Tp, _Tp>, typename __fun<_Name, _Tp>::result_type> operator _Op(const valarray<_Tp>& __v, const valarray<_Tp>& __w) { _GLIBCXX_DEBUG_ASSERT(__v.size() == __w.size()); typedef _BinClos<_Name, _ValArray, _ValArray, _Tp, _Tp> _Closure; typedef typename __fun<_Name, _Tp>::result_type _Rt; return _Expr<_Closure, _Rt>(_Closure(__v, __w)); } template<typename _Tp> inline _Expr<_BinClos<_Name, _ValArray,_Constant, _Tp, _Tp>, typename __fun<_Name, _Tp>::result_type> operator _Op(const valarray<_Tp>& __v, const _Tp& __t) { typedef _BinClos<_Name, _ValArray, _Constant, _Tp, _Tp> _Closure; typedef typename __fun<_Name, _Tp>::result_type _Rt; return _Expr<_Closure, _Rt>(_Closure(__v, __t)); } template<typename _Tp> inline _Expr<_BinClos<_Name, _Constant, _ValArray, _Tp, _Tp>, typename __fun<_Name, _Tp>::result_type> operator _Op(const _Tp& __t, const valarray<_Tp>& __v) { typedef _BinClos<_Name, _Constant, _ValArray, _Tp, _Tp> _Closure; typedef typename __fun<_Name, _Tp>::result_type _Rt; return _Expr<_Closure, _Rt>(_Closure(__t, __v)); }\0"
	.byte	0x2
	.uleb128 0x4a2
	.ascii "_DEFINE_BINARY_OPERATOR\0"
	.byte	0x4
	.file 283 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/atomic"
	.byte	0x3
	.uleb128 0x63
	.uleb128 0x11b
	.byte	0x1
	.uleb128 0x21
	.ascii "_GLIBCXX_ATOMIC 1\0"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x2d
	.byte	0x1
	.uleb128 0x1f
	.ascii "_GLIBCXX_ATOMIC_BASE_H 1\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "_GLIBCXX_ALWAYS_INLINE inline __attribute__((always_inline))\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "ATOMIC_VAR_INIT(_VI) { _VI }\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "ATOMIC_FLAG_INIT { 0 }\0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x64
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_CHRONO 1\0"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0x30
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_RATIO 1\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x15
	.byte	0x4
	.file 284 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/parse_numbers.h"
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x11c
	.byte	0x1
	.uleb128 0x1f
	.ascii "_PARSE_NUMBERS_H 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x65
	.uleb128 0x32
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_CONDITION_VARIABLE 1\0"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x31
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_MUTEX 1\0"
	.file 285 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/system_error"
	.byte	0x3
	.uleb128 0x2b
	.uleb128 0x11d
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_SYSTEM_ERROR 1\0"
	.file 286 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/x86_64-w64-mingw32/bits/error_constants.h"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x11e
	.byte	0x1
	.uleb128 0x1f
	.ascii "_GLIBCXX_ERROR_CONSTANTS \0"
	.byte	0x3
	.uleb128 0x22
	.uleb128 0x5d
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 287 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/forward_list"
	.byte	0x3
	.uleb128 0x66
	.uleb128 0x11f
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_FORWARD_LIST 1\0"
	.file 288 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/forward_list.h"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0x120
	.byte	0x1
	.uleb128 0x1f
	.ascii "_FORWARD_LIST_H 1\0"
	.byte	0x4
	.file 289 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/forward_list.tcc"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x121
	.byte	0x1
	.uleb128 0x1f
	.ascii "_FORWARD_LIST_TCC 1\0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x67
	.uleb128 0x4c
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_FUTURE 1\0"
	.file 290 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/thread"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x122
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_THREAD 1\0"
	.byte	0x4
	.byte	0x4
	.file 291 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/regex"
	.byte	0x3
	.uleb128 0x6c
	.uleb128 0x123
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_REGEX 1\0"
	.byte	0x3
	.uleb128 0x35
	.uleb128 0x14
	.byte	0x4
	.byte	0x3
	.uleb128 0x37
	.uleb128 0x33
	.byte	0x4
	.byte	0x3
	.uleb128 0x38
	.uleb128 0x34
	.byte	0x4
	.byte	0x3
	.uleb128 0x39
	.uleb128 0x28
	.file 292 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex_automaton.tcc"
	.byte	0x3
	.uleb128 0x136
	.uleb128 0x124
	.byte	0x4
	.byte	0x4
	.file 293 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex.h"
	.byte	0x3
	.uleb128 0x3a
	.uleb128 0x125
	.file 294 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex.tcc"
	.byte	0x3
	.uleb128 0xab1
	.uleb128 0x126
	.byte	0x1
	.uleb128 0x23
	.ascii "_GLIBCXX_REGEX_DFS_QUANTIFIERS_LIMIT 1\0"
	.byte	0x4
	.byte	0x4
	.file 295 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex_scanner.h"
	.byte	0x3
	.uleb128 0x3b
	.uleb128 0x127
	.file 296 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex_scanner.tcc"
	.byte	0x3
	.uleb128 0x107
	.uleb128 0x128
	.byte	0x4
	.byte	0x4
	.file 297 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex_compiler.h"
	.byte	0x3
	.uleb128 0x3c
	.uleb128 0x129
	.file 298 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex_compiler.tcc"
	.byte	0x3
	.uleb128 0x1c9
	.uleb128 0x12a
	.byte	0x1
	.uleb128 0x11c
	.ascii "__INSERT_REGEX_MATCHER(__func,args...) do if (!(_M_flags & regex_constants::icase)) if (!(_M_flags & regex_constants::collate)) __func<false, false>(args); else __func<false, true>(args); else if (!(_M_flags & regex_constants::collate)) __func<true, false>(args); else __func<true, true>(args); while (false)\0"
	.byte	0x2
	.uleb128 0x161
	.ascii "__INSERT_REGEX_MATCHER\0"
	.byte	0x4
	.byte	0x4
	.file 299 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex_executor.h"
	.byte	0x3
	.uleb128 0x3d
	.uleb128 0x12b
	.file 300 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/regex_executor.tcc"
	.byte	0x3
	.uleb128 0xa7
	.uleb128 0x12c
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 301 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/scoped_allocator"
	.byte	0x3
	.uleb128 0x6d
	.uleb128 0x12d
	.byte	0x1
	.uleb128 0x1e
	.ascii "_SCOPED_ALLOCATOR 1\0"
	.byte	0x4
	.file 302 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/typeindex"
	.byte	0x3
	.uleb128 0x71
	.uleb128 0x12e
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_TYPEINDEX 1\0"
	.byte	0x4
	.file 303 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/unordered_map"
	.byte	0x3
	.uleb128 0x73
	.uleb128 0x12f
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_UNORDERED_MAP 1\0"
	.file 304 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/hashtable.h"
	.byte	0x3
	.uleb128 0x2f
	.uleb128 0x130
	.byte	0x1
	.uleb128 0x1f
	.ascii "_HASHTABLE_H 1\0"
	.file 305 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/hashtable_policy.h"
	.byte	0x3
	.uleb128 0x23
	.uleb128 0x131
	.byte	0x1
	.uleb128 0x20
	.ascii "_HASHTABLE_POLICY_H 1\0"
	.byte	0x4
	.byte	0x4
	.file 306 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/unordered_map.h"
	.byte	0x3
	.uleb128 0x30
	.uleb128 0x132
	.byte	0x1
	.uleb128 0x1f
	.ascii "_UNORDERED_MAP_H \0"
	.byte	0x4
	.byte	0x4
	.file 307 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/unordered_set"
	.byte	0x3
	.uleb128 0x74
	.uleb128 0x133
	.byte	0x1
	.uleb128 0x1e
	.ascii "_GLIBCXX_UNORDERED_SET 1\0"
	.file 308 "C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/unordered_set.h"
	.byte	0x3
	.uleb128 0x30
	.uleb128 0x134
	.byte	0x1
	.uleb128 0x1f
	.ascii "_UNORDERED_SET_H \0"
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 309 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/windows.h"
	.byte	0x3
	.uleb128 0x2
	.uleb128 0x135
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINDOWS_ \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x8
	.byte	0x4
	.file 310 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sdkddkver.h"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x136
	.byte	0x1
	.uleb128 0xb
	.ascii "_INC_SDKDDKVER \0"
	.byte	0x1
	.uleb128 0xe
	.ascii "_WIN32_WINNT_NT4 0x0400\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "_WIN32_WINNT_WIN2K 0x0500\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "_WIN32_WINNT_WINXP 0x0501\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "_WIN32_WINNT_WS03 0x0502\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "_WIN32_WINNT_WIN6 0x0600\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "_WIN32_WINNT_VISTA 0x0600\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "_WIN32_WINNT_WS08 0x0600\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "_WIN32_WINNT_LONGHORN 0x0600\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "_WIN32_WINNT_WIN7 0x0601\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "_WIN32_WINNT_WIN8 0x0602\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "_WIN32_IE_IE20 0x0200\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "_WIN32_IE_IE30 0x0300\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "_WIN32_IE_IE302 0x0302\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "_WIN32_IE_IE40 0x0400\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "_WIN32_IE_IE401 0x0401\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "_WIN32_IE_IE50 0x0500\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "_WIN32_IE_IE501 0x0501\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "_WIN32_IE_IE55 0x0550\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "_WIN32_IE_IE60 0x0600\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "_WIN32_IE_IE60SP1 0x0601\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "_WIN32_IE_IE60SP2 0x0603\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "_WIN32_IE_IE70 0x0700\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "_WIN32_IE_IE80 0x0800\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "_WIN32_IE_NT4 _WIN32_IE_IE20\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "_WIN32_IE_NT4SP1 _WIN32_IE_IE20\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "_WIN32_IE_NT4SP2 _WIN32_IE_IE20\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "_WIN32_IE_NT4SP3 _WIN32_IE_IE302\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "_WIN32_IE_NT4SP4 _WIN32_IE_IE401\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "_WIN32_IE_NT4SP5 _WIN32_IE_IE401\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "_WIN32_IE_NT4SP6 _WIN32_IE_IE50\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "_WIN32_IE_WIN98 _WIN32_IE_IE401\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "_WIN32_IE_WIN98SE _WIN32_IE_IE50\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "_WIN32_IE_WINME _WIN32_IE_IE55\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "_WIN32_IE_WIN2K _WIN32_IE_IE501\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "_WIN32_IE_WIN2KSP1 _WIN32_IE_IE501\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "_WIN32_IE_WIN2KSP2 _WIN32_IE_IE501\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "_WIN32_IE_WIN2KSP3 _WIN32_IE_IE501\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "_WIN32_IE_WIN2KSP4 _WIN32_IE_IE501\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "_WIN32_IE_XP _WIN32_IE_IE60\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "_WIN32_IE_XPSP1 _WIN32_IE_IE60SP1\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "_WIN32_IE_XPSP2 _WIN32_IE_IE60SP2\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "_WIN32_IE_WS03 0x0602\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "_WIN32_IE_WS03SP1 _WIN32_IE_IE60SP2\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "_WIN32_IE_WIN6 _WIN32_IE_IE70\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "_WIN32_IE_LONGHORN _WIN32_IE_IE70\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "_WIN32_IE_WIN7 _WIN32_IE_IE80\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "NTDDI_WIN2K 0x05000000\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "NTDDI_WIN2KSP1 0x05000100\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "NTDDI_WIN2KSP2 0x05000200\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "NTDDI_WIN2KSP3 0x05000300\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "NTDDI_WIN2KSP4 0x05000400\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "NTDDI_WINXP 0x05010000\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "NTDDI_WINXPSP1 0x05010100\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "NTDDI_WINXPSP2 0x05010200\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "NTDDI_WINXPSP3 0x05010300\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "NTDDI_WINXPSP4 0x05010400\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "NTDDI_WS03 0x05020000\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "NTDDI_WS03SP1 0x05020100\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "NTDDI_WS03SP2 0x05020200\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "NTDDI_WS03SP3 0x05020300\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "NTDDI_WS03SP4 0x05020400\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "NTDDI_WIN6 0x06000000\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "NTDDI_WIN6SP1 0x06000100\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "NTDDI_WIN6SP2 0x06000200\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "NTDDI_WIN6SP3 0x06000300\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "NTDDI_WIN6SP4 0x06000400\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "NTDDI_VISTA NTDDI_WIN6\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "NTDDI_VISTASP1 NTDDI_WIN6SP1\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "NTDDI_VISTASP2 NTDDI_WIN6SP2\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "NTDDI_VISTASP3 NTDDI_WIN6SP3\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "NTDDI_VISTASP4 NTDDI_WIN6SP4\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "NTDDI_LONGHORN NTDDI_VISTA\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "NTDDI_WS08 NTDDI_WIN6SP1\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "NTDDI_WS08SP2 NTDDI_WIN6SP2\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "NTDDI_WS08SP3 NTDDI_WIN6SP3\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "NTDDI_WS08SP4 NTDDI_WIN6SP4\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "NTDDI_WIN7 0x06010000\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "NTDDI_WIN8 0x06020000\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "OSVERSION_MASK 0xFFFF0000\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "SPVERSION_MASK 0x0000FF00\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "SUBVERSION_MASK 0x000000FF\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "OSVER(Version) ((Version) & OSVERSION_MASK)\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "SPVER(Version) (((Version) & SPVERSION_MASK) >> 8)\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "SUBVER(Version) (((Version) & SUBVERSION_MASK))\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "NTDDI_VERSION_FROM_WIN32_WINNT2(Version) Version ##0000\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "NTDDI_VERSION_FROM_WIN32_WINNT(Version) NTDDI_VERSION_FROM_WIN32_WINNT2(Version)\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "NTDDI_VERSION NTDDI_VERSION_FROM_WIN32_WINNT(_WIN32_WINNT)\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "_WIN32_IE 0x0602\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x17
	.ascii "_INC_WINDOWS \0"
	.byte	0x1
	.uleb128 0x35
	.ascii "_AMD64_ \0"
	.file 311 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/excpt.h"
	.byte	0x3
	.uleb128 0x41
	.uleb128 0x137
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_EXCPT \0"
	.byte	0x1
	.uleb128 0x14
	.ascii "EXCEPTION_DISPOSITION int\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "ExceptionContinueExecution 0\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "ExceptionContinueSearch 1\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "ExceptionNestedException 2\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "ExceptionCollidedUnwind 3\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "ExceptionExecuteHandler 4\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "GetExceptionCode _exception_code\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "exception_code _exception_code\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "GetExceptionInformation (struct _EXCEPTION_POINTERS *)_exception_info\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "exception_info (struct _EXCEPTION_POINTERS *)_exception_info\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "AbnormalTermination _abnormal_termination\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "abnormal_termination _abnormal_termination\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "EXCEPTION_EXECUTE_HANDLER 1\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "EXCEPTION_CONTINUE_SEARCH 0\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "EXCEPTION_CONTINUE_EXECUTION -1\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "__try1(pHandler) __asm__ __volatile__ (\"\\t.l_startw:\\n\" \"\\t.seh_handler __C_specific_handler, @except\\n\" \"\\t.seh_handlerdata\\n\" \"\\t.long 1\\n\" \"\\t.rva .l_startw, .l_endw, \" __MINGW64_STRINGIFY(__MINGW_USYMBOL(pHandler)) \" ,.l_endw\\n\" \"\\t.text\" );\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "__except1 asm (\"\\tnop\\n\" \"\\t.l_endw: nop\\n\");\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x42
	.uleb128 0x6a
	.byte	0x3
	.uleb128 0x1
	.uleb128 0x6b
	.byte	0x4
	.byte	0x4
	.file 312 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/windef.h"
	.byte	0x3
	.uleb128 0x45
	.uleb128 0x138
	.byte	0x1
	.uleb128 0x6
	.ascii "_WINDEF_ \0"
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x4b
	.byte	0x1
	.uleb128 0x2
	.ascii "_MINWINDEF_ \0"
	.byte	0x3
	.uleb128 0x4
	.uleb128 0x8
	.byte	0x4
	.file 313 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winapifamily.h"
	.byte	0x3
	.uleb128 0x5
	.uleb128 0x139
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_WINAPIFAMILY \0"
	.byte	0x1
	.uleb128 0x9
	.ascii "WINAPI_PARTITION_DESKTOP 0x1\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "WINAPI_PARTITION_APP 0x2\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "WINAPI_FAMILY_APP WINAPI_PARTITION_APP\0"
	.byte	0x1
	.uleb128 0xd
	.ascii "WINAPI_FAMILY_DESKTOP_APP (WINAPI_PARTITION_DESKTOP | WINAPI_PARTITION_APP)\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "WINAPI_FAMILY WINAPI_FAMILY_DESKTOP_APP\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "WINAPI_FAMILY_PARTITION(v) ((WINAPI_FAMILY & v) == v)\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "WINAPI_FAMILY_ONE_PARTITION(vset,v) ((WINAPI_FAMILY & vset) == v)\0"
	.byte	0x4
	.file 314 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/specstrings.h"
	.byte	0x3
	.uleb128 0x6
	.uleb128 0x13a
	.byte	0x1
	.uleb128 0x6
	.ascii "__specstrings \0"
	.file 315 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sal.h"
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x13b
	.byte	0x1
	.uleb128 0x8
	.ascii "SAL_HXX \0"
	.byte	0x1
	.uleb128 0xb
	.ascii "__inner_checkReturn __attribute__((warn_unused_result))\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "__checkReturn __inner_checkReturn\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "_In_ \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "_In_opt_ \0"
	.byte	0x1
	.uleb128 0x16
	.ascii "_Out_ \0"
	.byte	0x1
	.uleb128 0x18
	.ascii "_Struct_size_bytes_(size) \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x15
	.ascii "SAL__deref_in \0"
	.byte	0x1
	.uleb128 0x16
	.ascii "SAL__deref_in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x17
	.ascii "SAL__deref_in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x19
	.ascii "SAL__deref_in_opt \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "SAL__deref_in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "SAL__deref_in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "SAL__deref_opt_in \0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "SAL__deref_opt_in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "SAL__deref_opt_in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x21
	.ascii "SAL__deref_opt_in_opt \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "SAL__deref_opt_in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x23
	.ascii "SAL__deref_opt_in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x25
	.ascii "SAL__out_awcount(expr,size) \0"
	.byte	0x1
	.uleb128 0x26
	.ascii "SAL__in_awcount(expr,size) \0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "SAL__null \0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "SAL__notnull \0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "SAL__maybenull \0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "SAL__readonly \0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "SAL__notreadonly \0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "SAL__maybereadonly \0"
	.byte	0x1
	.uleb128 0x30
	.ascii "SAL__valid \0"
	.byte	0x1
	.uleb128 0x31
	.ascii "SAL__notvalid \0"
	.byte	0x1
	.uleb128 0x32
	.ascii "SAL__maybevalid \0"
	.byte	0x1
	.uleb128 0x33
	.ascii "SAL__readableTo(extent) \0"
	.byte	0x1
	.uleb128 0x34
	.ascii "SAL__elem_readableTo(size) \0"
	.byte	0x1
	.uleb128 0x35
	.ascii "SAL__byte_readableTo(size) \0"
	.byte	0x1
	.uleb128 0x36
	.ascii "SAL__writableTo(size) \0"
	.byte	0x1
	.uleb128 0x37
	.ascii "SAL__elem_writableTo(size) \0"
	.byte	0x1
	.uleb128 0x38
	.ascii "SAL__byte_writableTo(size) \0"
	.byte	0x1
	.uleb128 0x39
	.ascii "SAL__deref \0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "SAL__pre \0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "SAL__post \0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "SAL__precond(expr) \0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "SAL__postcond(expr) \0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "SAL__exceptthat \0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "SAL__execeptthat \0"
	.byte	0x1
	.uleb128 0x40
	.ascii "SAL__inner_success(expr) \0"
	.byte	0x1
	.uleb128 0x41
	.ascii "SAL__inner_checkReturn \0"
	.byte	0x1
	.uleb128 0x42
	.ascii "SAL__inner_typefix(ctype) \0"
	.byte	0x1
	.uleb128 0x43
	.ascii "SAL__inner_override \0"
	.byte	0x1
	.uleb128 0x44
	.ascii "SAL__inner_callback \0"
	.byte	0x1
	.uleb128 0x45
	.ascii "SAL__inner_blocksOn(resource) \0"
	.byte	0x1
	.uleb128 0x46
	.ascii "SAL__inner_fallthrough_dec \0"
	.byte	0x1
	.uleb128 0x47
	.ascii "SAL__inner_fallthrough \0"
	.byte	0x1
	.uleb128 0x48
	.ascii "__refparam \0"
	.byte	0x1
	.uleb128 0x49
	.ascii "SAL__inner_control_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "SAL__inner_data_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "SAL__ecount(size) \0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "SAL__bcount(size) \0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "SAL__in \0"
	.byte	0x1
	.uleb128 0x50
	.ascii "SAL__in_opt \0"
	.byte	0x1
	.uleb128 0x51
	.ascii "SAL__in_nz \0"
	.byte	0x1
	.uleb128 0x52
	.ascii "SAL__in_nz_opt \0"
	.byte	0x1
	.uleb128 0x53
	.ascii "SAL__in_z \0"
	.byte	0x1
	.uleb128 0x54
	.ascii "SAL__in_z_opt \0"
	.byte	0x1
	.uleb128 0x55
	.ascii "SAL__in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x56
	.ascii "SAL__in_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x57
	.ascii "SAL__in_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x58
	.ascii "SAL__in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x59
	.ascii "SAL__in_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "SAL__in_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "SAL__in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "SAL__in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "SAL__in_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "SAL__in_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "SAL__in_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x60
	.ascii "SAL__in_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x62
	.ascii "SAL__out \0"
	.byte	0x1
	.uleb128 0x63
	.ascii "SAL__out_ecount(size) \0"
	.byte	0x1
	.uleb128 0x64
	.ascii "SAL__out_z \0"
	.byte	0x1
	.uleb128 0x65
	.ascii "SAL__out_nz \0"
	.byte	0x1
	.uleb128 0x66
	.ascii "SAL__out_nz_opt \0"
	.byte	0x1
	.uleb128 0x67
	.ascii "SAL__out_z_opt \0"
	.byte	0x1
	.uleb128 0x68
	.ascii "SAL__out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x69
	.ascii "SAL__out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "SAL__out_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "SAL__out_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "SAL__out_ecount_part_z(size,length) \0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "SAL__out_ecount_full_z(size) \0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "SAL__out_bcount(size) \0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "SAL__out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x70
	.ascii "SAL__out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0x71
	.ascii "SAL__out_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x72
	.ascii "SAL__out_bcount_part_z(size,length) \0"
	.byte	0x1
	.uleb128 0x73
	.ascii "SAL__out_bcount_full_z(size) \0"
	.byte	0x1
	.uleb128 0x74
	.ascii "SAL__out_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x76
	.ascii "SAL__inout \0"
	.byte	0x1
	.uleb128 0x77
	.ascii "SAL__inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0x78
	.ascii "SAL__inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0x79
	.ascii "SAL__inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "SAL__inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "SAL__inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "SAL__inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "SAL__inout_z \0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "SAL__inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "SAL__inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x80
	.ascii "SAL__inout_nz \0"
	.byte	0x1
	.uleb128 0x81
	.ascii "SAL__inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x82
	.ascii "SAL__inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x83
	.ascii "SAL__ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x84
	.ascii "SAL__bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x85
	.ascii "SAL__out_opt \0"
	.byte	0x1
	.uleb128 0x86
	.ascii "SAL__out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x87
	.ascii "SAL__out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x88
	.ascii "SAL__out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x89
	.ascii "SAL__out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "SAL__out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "SAL__out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "SAL__out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "SAL__out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "SAL__out_ecount_part_z_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "SAL__out_bcount_part_z_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x90
	.ascii "SAL__out_ecount_full_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x91
	.ascii "SAL__out_bcount_full_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x92
	.ascii "SAL__out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x93
	.ascii "SAL__out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x94
	.ascii "SAL__inout_opt \0"
	.byte	0x1
	.uleb128 0x95
	.ascii "SAL__inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x96
	.ascii "SAL__inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x97
	.ascii "SAL__inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x98
	.ascii "SAL__inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x99
	.ascii "SAL__inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "SAL__inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "SAL__inout_z_opt \0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "SAL__inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "SAL__inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "SAL__inout_nz_opt \0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "SAL__inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "SAL__inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "SAL__deref_ecount(size) \0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "SAL__deref_bcount(size) \0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "SAL__deref_out \0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "SAL__deref_out_ecount(size) \0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "SAL__deref_out_bcount(size) \0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "SAL__deref_out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "SAL__deref_out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "SAL__deref_out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "SAL__deref_out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "SAL__deref_out_z \0"
	.byte	0x1
	.uleb128 0xab
	.ascii "SAL__deref_out_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xac
	.ascii "SAL__deref_out_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xad
	.ascii "SAL__deref_out_nz \0"
	.byte	0x1
	.uleb128 0xae
	.ascii "SAL__deref_out_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "SAL__deref_out_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "SAL__deref_inout \0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "SAL__deref_inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "SAL__deref_inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "SAL__deref_inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "SAL__deref_inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "SAL__deref_inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "SAL__deref_inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "SAL__deref_inout_z \0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "SAL__deref_inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "SAL__deref_inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xba
	.ascii "SAL__deref_inout_nz \0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "SAL__deref_inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "SAL__deref_inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "SAL__deref_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "SAL__deref_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "SAL__deref_out_opt \0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "SAL__deref_out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "SAL__deref_out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "SAL__deref_out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "SAL__deref_out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "SAL__deref_out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "SAL__deref_out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "SAL__deref_out_z_opt \0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "SAL__deref_out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "SAL__deref_out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "SAL__deref_out_nz_opt \0"
	.byte	0x1
	.uleb128 0xca
	.ascii "SAL__deref_out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "SAL__deref_out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "SAL__deref_inout_opt \0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "SAL__deref_inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xce
	.ascii "SAL__deref_inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "SAL__deref_inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "SAL__deref_inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "SAL__deref_inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "SAL__deref_inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "SAL__deref_inout_z_opt \0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "SAL__deref_inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "SAL__deref_inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "SAL__deref_inout_nz_opt \0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "SAL__deref_inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "SAL__deref_inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "SAL__deref_opt_ecount(size) \0"
	.byte	0x1
	.uleb128 0xda
	.ascii "SAL__deref_opt_bcount(size) \0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "SAL__deref_opt_out \0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "SAL__deref_opt_out_z \0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "SAL__deref_opt_out_ecount(size) \0"
	.byte	0x1
	.uleb128 0xde
	.ascii "SAL__deref_opt_out_bcount(size) \0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "SAL__deref_opt_out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "SAL__deref_opt_out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "SAL__deref_opt_out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "SAL__deref_opt_out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "SAL__deref_opt_inout \0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "SAL__deref_opt_inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "SAL__deref_opt_inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "SAL__deref_opt_inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "SAL__deref_opt_inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "SAL__deref_opt_inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "SAL__deref_opt_inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xea
	.ascii "SAL__deref_opt_inout_z \0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "SAL__deref_opt_inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xec
	.ascii "SAL__deref_opt_inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xed
	.ascii "SAL__deref_opt_inout_nz \0"
	.byte	0x1
	.uleb128 0xee
	.ascii "SAL__deref_opt_inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xef
	.ascii "SAL__deref_opt_inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "SAL__deref_opt_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "SAL__deref_opt_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "SAL__deref_opt_out_opt \0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "SAL__deref_opt_out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "SAL__deref_opt_out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "SAL__deref_opt_out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "SAL__deref_opt_out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "SAL__deref_opt_out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "SAL__deref_opt_out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "SAL__deref_opt_out_z_opt \0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "SAL__deref_opt_out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "SAL__deref_opt_out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "SAL__deref_opt_out_nz_opt \0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "SAL__deref_opt_out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "SAL__deref_opt_out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xff
	.ascii "SAL__deref_opt_inout_opt \0"
	.byte	0x1
	.uleb128 0x100
	.ascii "SAL__deref_opt_inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x101
	.ascii "SAL__deref_opt_inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x102
	.ascii "SAL__deref_opt_inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x103
	.ascii "SAL__deref_opt_inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x104
	.ascii "SAL__deref_opt_inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x105
	.ascii "SAL__deref_opt_inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x106
	.ascii "SAL__deref_opt_inout_z_opt \0"
	.byte	0x1
	.uleb128 0x107
	.ascii "SAL__deref_opt_inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x108
	.ascii "SAL__deref_opt_inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x109
	.ascii "SAL__deref_opt_inout_nz_opt \0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "SAL__deref_opt_inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "SAL__deref_opt_inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "SAL__success(expr) \0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "SAL__nullterminated \0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "SAL__nullnullterminated \0"
	.byte	0x1
	.uleb128 0x110
	.ascii "SAL__reserved \0"
	.byte	0x1
	.uleb128 0x111
	.ascii "SAL__checkReturn \0"
	.byte	0x1
	.uleb128 0x112
	.ascii "SAL__typefix(ctype) \0"
	.byte	0x1
	.uleb128 0x113
	.ascii "SAL__override \0"
	.byte	0x1
	.uleb128 0x114
	.ascii "SAL__callback \0"
	.byte	0x1
	.uleb128 0x115
	.ascii "SAL__format_string \0"
	.byte	0x1
	.uleb128 0x116
	.ascii "SAL__blocksOn(resource) \0"
	.byte	0x1
	.uleb128 0x117
	.ascii "SAL__control_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x118
	.ascii "SAL__data_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x11b
	.ascii "__fallthrough \0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "__analysis_assume(expr) \0"
	.byte	0x1
	.uleb128 0x123
	.ascii "__CLR_OR_THIS_CALL \0"
	.byte	0x1
	.uleb128 0x127
	.ascii "__CLRCALL_OR_CDECL __cdecl\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "__STDC_WANT_SECURE_LIB__ 0\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "_CRT_SECURE_NO_DEPRECATE \0"
	.byte	0x1
	.uleb128 0x142
	.ascii "DECLSPEC_ADDRSAFE \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0xb
	.ascii "STRICT 1\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "WIN32 \0"
	.byte	0x1
	.uleb128 0x17
	.ascii "BASETYPES \0"
	.byte	0x1
	.uleb128 0x21
	.ascii "MAX_PATH 260\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "FALSE 0\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "TRUE 1\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "IN \0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "OUT \0"
	.byte	0x1
	.uleb128 0x41
	.ascii "OPTIONAL \0"
	.byte	0x2
	.uleb128 0x45
	.ascii "far\0"
	.byte	0x2
	.uleb128 0x46
	.ascii "near\0"
	.byte	0x2
	.uleb128 0x47
	.ascii "pascal\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "far \0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "near \0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "pascal __stdcall\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "cdecl \0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "CDECL \0"
	.byte	0x1
	.uleb128 0x53
	.ascii "CALLBACK __stdcall\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "WINAPI __stdcall\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "WINAPIV __cdecl\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "APIENTRY WINAPI\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "APIPRIVATE __stdcall\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "PASCAL __stdcall\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "WINAPI_INLINE WINAPI\0"
	.byte	0x2
	.uleb128 0x63
	.ascii "FAR\0"
	.byte	0x2
	.uleb128 0x64
	.ascii "NEAR\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "FAR \0"
	.byte	0x1
	.uleb128 0x66
	.ascii "NEAR \0"
	.byte	0x1
	.uleb128 0x69
	.ascii "CONST const\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "_DEF_WINBOOL_ \0"
	.byte	0x2
	.uleb128 0x70
	.ascii "BOOL\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "BOOL WINBOOL\0"
	.byte	0x2
	.uleb128 0x77
	.ascii "BOOL\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "_LPCVOID_DEFINED \0"
	.file 316 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winnt.h"
	.byte	0x3
	.uleb128 0x92
	.uleb128 0x13c
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINNT_ \0"
	.file 317 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/_mingw_unicode.h"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x13d
	.byte	0x1
	.uleb128 0x13
	.ascii "_INC_CRT_UNICODE_MACROS 2\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "__MINGW_NAME_AW(func) func ##A\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "__MINGW_NAME_AW_EXT(func,ext) func ##A ##ext\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "__MINGW_NAME_UAW(func) func ##_A\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "__MINGW_NAME_UAW_EXT(func,ext) func ##_A_ ##ext\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "__MINGW_STRING_AW(str) str\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "__MINGW_PROCNAMEEXT_AW \"A\"\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "__MINGW_TYPEDEF_AW(type) typedef __MINGW_NAME_AW(type) type;\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "__MINGW_TYPEDEF_UAW(type) typedef __MINGW_NAME_UAW(type) type;\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0xf
	.uleb128 0x8
	.byte	0x4
	.file 318 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/apiset.h"
	.byte	0x3
	.uleb128 0x13
	.uleb128 0x13e
	.byte	0x1
	.uleb128 0x7
	.ascii "_API_SET_H_ \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x8
	.byte	0x4
	.byte	0x1
	.uleb128 0xf
	.ascii "API_SET_PREFIX_NAME_A \"API-\"\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "API_SET_PREFIX_NAME_U L\"API-\"\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "API_SET_EXTENSION_NAME_A \"EXT-\"\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "API_SET_EXTENSION_NAME_U L\"EXT-\"\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "API_SET_SCHEMA_NAME ApiSetSchema\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "API_SET_SECTION_NAME \".apiset\"\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "API_SET_SCHEMA_SUFFIX L\".sys\"\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "API_SET_SCHEMA_VERSION __MSABI_LONG(2U)\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "API_SET_HELPER_NAME ApiSetHelp\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "API_SET_LOAD_SCHEMA_ORDINAL 1\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "API_SET_LOOKUP_ORDINAL 2\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "API_SET_RELEASE_SCHEMA_ORDINAL 3\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "API_SET_STRING_X(s) #s\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "API_SET_STRING(s) API_SET_STRING_X(s)\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "API_SET_STRING_U_Y(s) L ## s\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "API_SET_STRING_U_X(s) API_SET_STRING_U_Y(s)\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "API_SET_STRING_U(s) API_SET_STRING_U_X(API_SET_STRING(s))\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "API_SET_OVERRIDE(X) X ##Implementation\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "API_SET_LEGACY_OVERRIDE_DEF(X) X = API_SET_OVERRIDE(X)\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "API_SET_OVERRIDE_DEF(X) API_SET_LEGACY_OVERRIDE_DEF(X) PRIVATE\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "API_SET_PRIVATE(X) X PRIVATE\0"
	.byte	0x2
	.uleb128 0x2d
	.ascii "API_SET\0"
	.byte	0x2
	.uleb128 0x2e
	.ascii "API_SET_LIBRARY\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "API_SET_LIBRARY(X) LIBRARY X\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "API_SET(X) X\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x15
	.ascii "ANYSIZE_ARRAY 1\0"
	.byte	0x3
	.uleb128 0x17
	.uleb128 0x13a
	.byte	0x1
	.uleb128 0x6
	.ascii "__specstrings \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "SAL__deref_in \0"
	.byte	0x1
	.uleb128 0x16
	.ascii "SAL__deref_in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x17
	.ascii "SAL__deref_in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x19
	.ascii "SAL__deref_in_opt \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "SAL__deref_in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "SAL__deref_in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "SAL__deref_opt_in \0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "SAL__deref_opt_in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "SAL__deref_opt_in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x21
	.ascii "SAL__deref_opt_in_opt \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "SAL__deref_opt_in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x23
	.ascii "SAL__deref_opt_in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x25
	.ascii "SAL__out_awcount(expr,size) \0"
	.byte	0x1
	.uleb128 0x26
	.ascii "SAL__in_awcount(expr,size) \0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "SAL__null \0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "SAL__notnull \0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "SAL__maybenull \0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "SAL__readonly \0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "SAL__notreadonly \0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "SAL__maybereadonly \0"
	.byte	0x1
	.uleb128 0x30
	.ascii "SAL__valid \0"
	.byte	0x1
	.uleb128 0x31
	.ascii "SAL__notvalid \0"
	.byte	0x1
	.uleb128 0x32
	.ascii "SAL__maybevalid \0"
	.byte	0x1
	.uleb128 0x33
	.ascii "SAL__readableTo(extent) \0"
	.byte	0x1
	.uleb128 0x34
	.ascii "SAL__elem_readableTo(size) \0"
	.byte	0x1
	.uleb128 0x35
	.ascii "SAL__byte_readableTo(size) \0"
	.byte	0x1
	.uleb128 0x36
	.ascii "SAL__writableTo(size) \0"
	.byte	0x1
	.uleb128 0x37
	.ascii "SAL__elem_writableTo(size) \0"
	.byte	0x1
	.uleb128 0x38
	.ascii "SAL__byte_writableTo(size) \0"
	.byte	0x1
	.uleb128 0x39
	.ascii "SAL__deref \0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "SAL__pre \0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "SAL__post \0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "SAL__precond(expr) \0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "SAL__postcond(expr) \0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "SAL__exceptthat \0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "SAL__execeptthat \0"
	.byte	0x1
	.uleb128 0x40
	.ascii "SAL__inner_success(expr) \0"
	.byte	0x1
	.uleb128 0x41
	.ascii "SAL__inner_checkReturn \0"
	.byte	0x1
	.uleb128 0x42
	.ascii "SAL__inner_typefix(ctype) \0"
	.byte	0x1
	.uleb128 0x43
	.ascii "SAL__inner_override \0"
	.byte	0x1
	.uleb128 0x44
	.ascii "SAL__inner_callback \0"
	.byte	0x1
	.uleb128 0x45
	.ascii "SAL__inner_blocksOn(resource) \0"
	.byte	0x1
	.uleb128 0x46
	.ascii "SAL__inner_fallthrough_dec \0"
	.byte	0x1
	.uleb128 0x47
	.ascii "SAL__inner_fallthrough \0"
	.byte	0x1
	.uleb128 0x48
	.ascii "__refparam \0"
	.byte	0x1
	.uleb128 0x49
	.ascii "SAL__inner_control_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "SAL__inner_data_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "SAL__ecount(size) \0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "SAL__bcount(size) \0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "SAL__in \0"
	.byte	0x1
	.uleb128 0x50
	.ascii "SAL__in_opt \0"
	.byte	0x1
	.uleb128 0x51
	.ascii "SAL__in_nz \0"
	.byte	0x1
	.uleb128 0x52
	.ascii "SAL__in_nz_opt \0"
	.byte	0x1
	.uleb128 0x53
	.ascii "SAL__in_z \0"
	.byte	0x1
	.uleb128 0x54
	.ascii "SAL__in_z_opt \0"
	.byte	0x1
	.uleb128 0x55
	.ascii "SAL__in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x56
	.ascii "SAL__in_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x57
	.ascii "SAL__in_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x58
	.ascii "SAL__in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x59
	.ascii "SAL__in_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "SAL__in_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "SAL__in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "SAL__in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "SAL__in_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "SAL__in_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "SAL__in_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x60
	.ascii "SAL__in_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x62
	.ascii "SAL__out \0"
	.byte	0x1
	.uleb128 0x63
	.ascii "SAL__out_ecount(size) \0"
	.byte	0x1
	.uleb128 0x64
	.ascii "SAL__out_z \0"
	.byte	0x1
	.uleb128 0x65
	.ascii "SAL__out_nz \0"
	.byte	0x1
	.uleb128 0x66
	.ascii "SAL__out_nz_opt \0"
	.byte	0x1
	.uleb128 0x67
	.ascii "SAL__out_z_opt \0"
	.byte	0x1
	.uleb128 0x68
	.ascii "SAL__out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x69
	.ascii "SAL__out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "SAL__out_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "SAL__out_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "SAL__out_ecount_part_z(size,length) \0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "SAL__out_ecount_full_z(size) \0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "SAL__out_bcount(size) \0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "SAL__out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x70
	.ascii "SAL__out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0x71
	.ascii "SAL__out_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x72
	.ascii "SAL__out_bcount_part_z(size,length) \0"
	.byte	0x1
	.uleb128 0x73
	.ascii "SAL__out_bcount_full_z(size) \0"
	.byte	0x1
	.uleb128 0x74
	.ascii "SAL__out_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x76
	.ascii "SAL__inout \0"
	.byte	0x1
	.uleb128 0x77
	.ascii "SAL__inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0x78
	.ascii "SAL__inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0x79
	.ascii "SAL__inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "SAL__inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "SAL__inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "SAL__inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "SAL__inout_z \0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "SAL__inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "SAL__inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x80
	.ascii "SAL__inout_nz \0"
	.byte	0x1
	.uleb128 0x81
	.ascii "SAL__inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x82
	.ascii "SAL__inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x83
	.ascii "SAL__ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x84
	.ascii "SAL__bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x85
	.ascii "SAL__out_opt \0"
	.byte	0x1
	.uleb128 0x86
	.ascii "SAL__out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x87
	.ascii "SAL__out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x88
	.ascii "SAL__out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x89
	.ascii "SAL__out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "SAL__out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "SAL__out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "SAL__out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "SAL__out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "SAL__out_ecount_part_z_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "SAL__out_bcount_part_z_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x90
	.ascii "SAL__out_ecount_full_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x91
	.ascii "SAL__out_bcount_full_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x92
	.ascii "SAL__out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x93
	.ascii "SAL__out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x94
	.ascii "SAL__inout_opt \0"
	.byte	0x1
	.uleb128 0x95
	.ascii "SAL__inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x96
	.ascii "SAL__inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x97
	.ascii "SAL__inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x98
	.ascii "SAL__inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x99
	.ascii "SAL__inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "SAL__inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "SAL__inout_z_opt \0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "SAL__inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "SAL__inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "SAL__inout_nz_opt \0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "SAL__inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "SAL__inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "SAL__deref_ecount(size) \0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "SAL__deref_bcount(size) \0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "SAL__deref_out \0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "SAL__deref_out_ecount(size) \0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "SAL__deref_out_bcount(size) \0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "SAL__deref_out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "SAL__deref_out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "SAL__deref_out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "SAL__deref_out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "SAL__deref_out_z \0"
	.byte	0x1
	.uleb128 0xab
	.ascii "SAL__deref_out_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xac
	.ascii "SAL__deref_out_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xad
	.ascii "SAL__deref_out_nz \0"
	.byte	0x1
	.uleb128 0xae
	.ascii "SAL__deref_out_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "SAL__deref_out_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "SAL__deref_inout \0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "SAL__deref_inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "SAL__deref_inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "SAL__deref_inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "SAL__deref_inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "SAL__deref_inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "SAL__deref_inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "SAL__deref_inout_z \0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "SAL__deref_inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "SAL__deref_inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xba
	.ascii "SAL__deref_inout_nz \0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "SAL__deref_inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "SAL__deref_inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "SAL__deref_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "SAL__deref_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "SAL__deref_out_opt \0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "SAL__deref_out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "SAL__deref_out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "SAL__deref_out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "SAL__deref_out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "SAL__deref_out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "SAL__deref_out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "SAL__deref_out_z_opt \0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "SAL__deref_out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "SAL__deref_out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "SAL__deref_out_nz_opt \0"
	.byte	0x1
	.uleb128 0xca
	.ascii "SAL__deref_out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "SAL__deref_out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "SAL__deref_inout_opt \0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "SAL__deref_inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xce
	.ascii "SAL__deref_inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "SAL__deref_inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "SAL__deref_inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "SAL__deref_inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "SAL__deref_inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "SAL__deref_inout_z_opt \0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "SAL__deref_inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "SAL__deref_inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "SAL__deref_inout_nz_opt \0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "SAL__deref_inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "SAL__deref_inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "SAL__deref_opt_ecount(size) \0"
	.byte	0x1
	.uleb128 0xda
	.ascii "SAL__deref_opt_bcount(size) \0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "SAL__deref_opt_out \0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "SAL__deref_opt_out_z \0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "SAL__deref_opt_out_ecount(size) \0"
	.byte	0x1
	.uleb128 0xde
	.ascii "SAL__deref_opt_out_bcount(size) \0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "SAL__deref_opt_out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "SAL__deref_opt_out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "SAL__deref_opt_out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "SAL__deref_opt_out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "SAL__deref_opt_inout \0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "SAL__deref_opt_inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "SAL__deref_opt_inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "SAL__deref_opt_inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "SAL__deref_opt_inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "SAL__deref_opt_inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "SAL__deref_opt_inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xea
	.ascii "SAL__deref_opt_inout_z \0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "SAL__deref_opt_inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xec
	.ascii "SAL__deref_opt_inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xed
	.ascii "SAL__deref_opt_inout_nz \0"
	.byte	0x1
	.uleb128 0xee
	.ascii "SAL__deref_opt_inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xef
	.ascii "SAL__deref_opt_inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "SAL__deref_opt_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "SAL__deref_opt_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "SAL__deref_opt_out_opt \0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "SAL__deref_opt_out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "SAL__deref_opt_out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "SAL__deref_opt_out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "SAL__deref_opt_out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "SAL__deref_opt_out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "SAL__deref_opt_out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "SAL__deref_opt_out_z_opt \0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "SAL__deref_opt_out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "SAL__deref_opt_out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "SAL__deref_opt_out_nz_opt \0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "SAL__deref_opt_out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "SAL__deref_opt_out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xff
	.ascii "SAL__deref_opt_inout_opt \0"
	.byte	0x1
	.uleb128 0x100
	.ascii "SAL__deref_opt_inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x101
	.ascii "SAL__deref_opt_inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x102
	.ascii "SAL__deref_opt_inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x103
	.ascii "SAL__deref_opt_inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x104
	.ascii "SAL__deref_opt_inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x105
	.ascii "SAL__deref_opt_inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x106
	.ascii "SAL__deref_opt_inout_z_opt \0"
	.byte	0x1
	.uleb128 0x107
	.ascii "SAL__deref_opt_inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x108
	.ascii "SAL__deref_opt_inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x109
	.ascii "SAL__deref_opt_inout_nz_opt \0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "SAL__deref_opt_inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "SAL__deref_opt_inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "SAL__success(expr) \0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "SAL__nullterminated \0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "SAL__nullnullterminated \0"
	.byte	0x1
	.uleb128 0x110
	.ascii "SAL__reserved \0"
	.byte	0x1
	.uleb128 0x111
	.ascii "SAL__checkReturn \0"
	.byte	0x1
	.uleb128 0x112
	.ascii "SAL__typefix(ctype) \0"
	.byte	0x1
	.uleb128 0x113
	.ascii "SAL__override \0"
	.byte	0x1
	.uleb128 0x114
	.ascii "SAL__callback \0"
	.byte	0x1
	.uleb128 0x115
	.ascii "SAL__format_string \0"
	.byte	0x1
	.uleb128 0x116
	.ascii "SAL__blocksOn(resource) \0"
	.byte	0x1
	.uleb128 0x117
	.ascii "SAL__control_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x118
	.ascii "SAL__data_entrypoint(category) \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x19
	.ascii "__INTRINSIC_GROUP_WINNT \0"
	.file 319 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/psdk_inc/intrin-impl.h"
	.byte	0x3
	.uleb128 0x1a
	.uleb128 0x13f
	.byte	0x1
	.uleb128 0x43
	.ascii "_INTRIN_MAC_ \0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "__buildstos(x,y,z) void x(y *Dest, y Data, size_t Count) { __asm__ __volatile__ (\"rep stos{%z[Data]|\" z \"}\" : \"+D\" (Dest), \"+c\" (Count) : [Data] \"a\" (Data) : \"memory\"); }\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "__buildlogicali(x,y,o) y x(volatile y *Destination, y Value) { return __sync_fetch_and_ ## o(Destination, Value); }\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "__buildbittesti(x,y,z,a,b) unsigned char x(b y *Base, y Offset) { unsigned char old; __asm__ __volatile__ (z \"%z[Base] {%[Offset],%[Base] | %[Base],%[Offset]} ; setc %[old]\" : [old] \"=qm\" (old), [Base] \"+m\" (*Base) : [Offset] a \"r\" (Offset) : \"memory\", \"cc\"); return old; }\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "__buildpause() __asm__ __volatile__(\"rep nop\")\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "__buildint(a) __asm__ __volatile__(\"int {$}\" #a :)\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "__buildmemorybarrier() { unsigned char Barrier; __asm__ __volatile__(\"xchg{b %%| }al, %0\" :\"=m\" (Barrier) : : \"eax\", \"memory\"); }\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "__buildreadseg(x,y,z) y x(unsigned __LONG32 Offset) { y ret; __asm__ (\"mov{%z[ret] %%\" z \":%[offset], %[ret] | %[ret], %%\" z \":%[offset]}\" : [ret] \"=r\" (ret) : [offset] \"m\" ((*(y *) (size_t) Offset))); return ret; }\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "__buildwriteseg(x,y,z) void x(unsigned __LONG32 Offset, y Data) { __asm__ (\"mov{%z[offset] %[Data], %%\" z \":%[offset] | %%\" z \":%[offset], %[Data]}\" : [offset] \"=m\" ((*(y *) (size_t) Offset)) : [Data] \"ri\" (Data)); }\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "__buildbitscan(x,y,z) unsigned char x(unsigned __LONG32 *Index, y Mask) { y n; __asm__ (z \"{%z[Mask] %[Mask],%[Index] | %[Index],%[Mask]}\" : [Index] \"=r\" (n) : [Mask] \"r\" (Mask) : \"cc\"); *Index = n; return Mask!=0; }\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "__buildbittest(x,y,a) unsigned char x(const y *Base, y Offset) { unsigned char old; __asm__ (\"bt{%z[Base] %[Offset],%[Base] | %[Base],%[Offset]} ; setc %[old]\" : [old] \"=rm\" (old) : [Offset] a \"r\" (Offset), [Base] \"rm\" (*Base) : \"cc\"); return old; }\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "__buildbittestand(x,y,z,a) unsigned char x(y *Base, y Offset) { unsigned char old; __asm__ (z \"%z[Base] {%[Offset],%[Base] | %[Base],%[Offset]} ; setc %[old]\" : [old] \"=r\" (old), [Base] \"+rm\" (*Base) : [Offset] a \"r\" (Offset) : \"cc\"); return old; }\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "__build_inport(x,y) y x(unsigned short Port) { y value; __asm__ __volatile__ (\"in{%z0 %w1,%0| %0,%w1}\" : \"=a\" (value) : \"Nd\" (Port)); return value; }\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "__build_outport(x,y) void x(unsigned short Port, y Data) { __asm__ __volatile__ (\"out{%z0 %0,%w1| %w1,%0}\" : : \"a\" (Data), \"Nd\" (Port)); }\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "__build_inportstring(x,y,z,a) void x(unsigned short Port, y *Buffer, unsigned __LONG32 Count) { __asm__ __volatile__ (\"cld ; rep ins{\" z \"|\" a \"}\" : \"=D\" (Buffer), \"=c\" (Count) : \"d\"(Port), \"0\"(Buffer), \"1\" (Count)); }\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "__build_outportstring(x,y,z,a) void x(unsigned short Port, y *Buffer, unsigned __LONG32 Count) { __asm__ __volatile__ (\"cld ; rep outs{\" z \"|\" a \"}\" : \"=S\" (Buffer), \"=c\" (Count) : \"d\"(Port), \"0\"(Buffer), \"1\" (Count)); }\0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "__build_readcr(x,y,z) y x(void) { y value; __asm__ __volatile__ (\"mov {%%cr\" z \", %[value] | %[value], %%cr\" z \"}\" : [value] \"=q\" (value)); return value; }\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "__build_writecr(x,y,z) void x(y Data) { __asm__ __volatile__ (\"mov {%[Data], %%cr\" z \"|%%cr\" z \", %[Data]}\" : : [Data] \"q\" (Data) : \"memory\"); }\0"
	.byte	0x1
	.uleb128 0x13d
	.ascii "__buildmov(x,y,z) void x(y *Destination, y const *Source, size_t Count) { __asm__ __volatile__ ( \"rep movs\" z : \"=D\" (Destination), \"=S\" (Source), \"=c\" (Count) : \"0\" (Destination), \"1\" (Source), \"2\" (Count) : \"memory\"); }\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "_ReadWriteBarrier() __asm__ __volatile__ (\"\" ::: \"memory\")\0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "_ReadBarrier _ReadWriteBarrier\0"
	.byte	0x1
	.uleb128 0x14e
	.ascii "_WriteBarrier _ReadWriteBarrier\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "__INTRINSIC_PROLOG(name) (!defined(__INTRINSIC_DEFINED_ ## name)) && ((!defined (__INTRINSIC_ONLYSPECIAL)) || (defined (__INTRINSIC_ONLYSPECIAL) && defined(__INTRINSIC_SPECIAL_ ## name)))\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "__INTRINSICS_USEINLINE __MINGW_INTRIN_INLINE\0"
	.byte	0x2
	.uleb128 0x175
	.ascii "__INTRINSIC_GROUP_WINNT\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "__INTRINSIC_ONLYSPECIAL \0"
	.byte	0x1
	.uleb128 0x17a
	.ascii "__INTRINSIC_SPECIAL___faststorefence \0"
	.byte	0x1
	.uleb128 0x17b
	.ascii "__INTRINSIC_SPECIAL___int2c \0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "__INTRINSIC_SPECIAL___stosb \0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "__INTRINSIC_SPECIAL___stosd \0"
	.byte	0x1
	.uleb128 0x17e
	.ascii "__INTRINSIC_SPECIAL___stosq \0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "__INTRINSIC_SPECIAL___stosw \0"
	.byte	0x1
	.uleb128 0x180
	.ascii "__INTRINSIC_SPECIAL__InterlockedAnd \0"
	.byte	0x1
	.uleb128 0x181
	.ascii "__INTRINSIC_SPECIAL__InterlockedAnd64 \0"
	.byte	0x1
	.uleb128 0x182
	.ascii "__INTRINSIC_SPECIAL__interlockedbittestandcomplement \0"
	.byte	0x1
	.uleb128 0x183
	.ascii "__INTRINSIC_SPECIAL__interlockedbittestandcomplement64 \0"
	.byte	0x1
	.uleb128 0x184
	.ascii "__INTRINSIC_SPECIAL__interlockedbittestandreset \0"
	.byte	0x1
	.uleb128 0x185
	.ascii "__INTRINSIC_SPECIAL__interlockedbittestandreset64 \0"
	.byte	0x1
	.uleb128 0x186
	.ascii "__INTRINSIC_SPECIAL__interlockedbittestandset \0"
	.byte	0x1
	.uleb128 0x187
	.ascii "__INTRINSIC_SPECIAL__interlockedbittestandset64 \0"
	.byte	0x1
	.uleb128 0x188
	.ascii "__INTRINSIC_SPECIAL__InterlockedOr \0"
	.byte	0x1
	.uleb128 0x189
	.ascii "__INTRINSIC_SPECIAL__InterlockedOr64 \0"
	.byte	0x1
	.uleb128 0x18a
	.ascii "__INTRINSIC_SPECIAL__InterlockedXor \0"
	.byte	0x1
	.uleb128 0x18b
	.ascii "__INTRINSIC_SPECIAL__InterlockedXor64 \0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "__INTRINSIC_SPECIAL_InterlockedBitTestAndComplement \0"
	.byte	0x1
	.uleb128 0x18d
	.ascii "__INTRINSIC_SPECIAL_InterlockedBitTestAndComplement64 \0"
	.byte	0x1
	.uleb128 0x18e
	.ascii "__INTRINSIC_SPECIAL_InterlockedBitTestAndReset \0"
	.byte	0x1
	.uleb128 0x18f
	.ascii "__INTRINSIC_SPECIAL_InterlockedBitTestAndReset64 \0"
	.byte	0x1
	.uleb128 0x190
	.ascii "__INTRINSIC_SPECIAL_InterlockedBitTestAndSet \0"
	.byte	0x1
	.uleb128 0x191
	.ascii "__INTRINSIC_SPECIAL_InterlockedBitTestAndSet64 \0"
	.byte	0x1
	.uleb128 0x192
	.ascii "__INTRINSIC_SPECIAL__InterlockedIncrement16 \0"
	.byte	0x1
	.uleb128 0x193
	.ascii "__INTRINSIC_SPECIAL__InterlockedDecrement16 \0"
	.byte	0x1
	.uleb128 0x194
	.ascii "__INTRINSIC_SPECIAL__InterlockedCompareExchange16 \0"
	.byte	0x1
	.uleb128 0x195
	.ascii "__INTRINSIC_SPECIAL__InterlockedIncrement \0"
	.byte	0x1
	.uleb128 0x196
	.ascii "__INTRINSIC_SPECIAL__InterlockedDecrement \0"
	.byte	0x1
	.uleb128 0x197
	.ascii "__INTRINSIC_SPECIAL__InterlockedExchange \0"
	.byte	0x1
	.uleb128 0x198
	.ascii "__INTRINSIC_SPECIAL__InterlockedExchangeAdd \0"
	.byte	0x1
	.uleb128 0x199
	.ascii "__INTRINSIC_SPECIAL__InterlockedCompareExchange \0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "__INTRINSIC_SPECIAL__InterlockedIncrement64 \0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "__INTRINSIC_SPECIAL__InterlockedDecrement64 \0"
	.byte	0x1
	.uleb128 0x19c
	.ascii "__INTRINSIC_SPECIAL__InterlockedExchangeAdd64 \0"
	.byte	0x1
	.uleb128 0x19d
	.ascii "__INTRINSIC_SPECIAL__InterlockedExchange64 \0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "__INTRINSIC_SPECIAL__InterlockedCompareExchange64 \0"
	.byte	0x1
	.uleb128 0x19f
	.ascii "__INTRINSIC_SPECIAL__InterlockedExchangePointer \0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "__INTRINSIC_SPECIAL__InterlockedCompareExchangePointer \0"
	.byte	0x1
	.uleb128 0x1a1
	.ascii "__INTRINSIC_SPECIAL___readgsbyte \0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "__INTRINSIC_SPECIAL___readgsword \0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "__INTRINSIC_SPECIAL___readgsdword \0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "__INTRINSIC_SPECIAL___readgsqword \0"
	.byte	0x1
	.uleb128 0x1a5
	.ascii "__INTRINSIC_SPECIAL___writegsbyte \0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "__INTRINSIC_SPECIAL___writegsword \0"
	.byte	0x1
	.uleb128 0x1a7
	.ascii "__INTRINSIC_SPECIAL___writegsdword \0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "__INTRINSIC_SPECIAL___writegsqword \0"
	.byte	0x1
	.uleb128 0x1a9
	.ascii "__INTRINSIC_SPECIAL___readfsbyte \0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "__INTRINSIC_SPECIAL___readfsword \0"
	.byte	0x1
	.uleb128 0x1ab
	.ascii "__INTRINSIC_SPECIAL___readfsdword \0"
	.byte	0x1
	.uleb128 0x1ac
	.ascii "__INTRINSIC_SPECIAL___writefsbyte \0"
	.byte	0x1
	.uleb128 0x1ad
	.ascii "__INTRINSIC_SPECIAL___writefsword \0"
	.byte	0x1
	.uleb128 0x1ae
	.ascii "__INTRINSIC_SPECIAL___writefsdword \0"
	.byte	0x1
	.uleb128 0x1af
	.ascii "__INTRINSIC_SPECIAL__BitScanForward \0"
	.byte	0x1
	.uleb128 0x1b0
	.ascii "__INTRINSIC_SPECIAL__BitScanForward64 \0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "__INTRINSIC_SPECIAL__BitScanReverse \0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "__INTRINSIC_SPECIAL__BitScanReverse64 \0"
	.byte	0x1
	.uleb128 0x1b3
	.ascii "__INTRINSIC_SPECIAL__bittest \0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "__INTRINSIC_SPECIAL__bittestandset \0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "__INTRINSIC_SPECIAL__bittestandreset \0"
	.byte	0x1
	.uleb128 0x1b6
	.ascii "__INTRINSIC_SPECIAL__bittestandcomplement \0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "__INTRINSIC_SPECIAL__bittest64 \0"
	.byte	0x1
	.uleb128 0x1b8
	.ascii "__INTRINSIC_SPECIAL__bittestandset64 \0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "__INTRINSIC_SPECIAL__bittestandreset64 \0"
	.byte	0x1
	.uleb128 0x1ba
	.ascii "__INTRINSIC_SPECIAL__bittestandcomplement64 \0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "__INTRINSIC_SPECIAL___movsb \0"
	.byte	0x1
	.uleb128 0x1bc
	.ascii "__INTRINSIC_SPECIAL___movsw \0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "__INTRINSIC_SPECIAL___movsd \0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "__INTRINSIC_SPECIAL___movsq \0"
	.byte	0x1
	.uleb128 0x1ec
	.ascii "__INTRINSIC_DEFINED___faststorefence \0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "__INTRINSIC_DEFINED___stosq \0"
	.byte	0x1
	.uleb128 0x1fa
	.ascii "__INTRINSIC_DEFINED__interlockedbittestandset64 \0"
	.byte	0x1
	.uleb128 0x201
	.ascii "__INTRINSIC_DEFINED__interlockedbittestandreset64 \0"
	.byte	0x1
	.uleb128 0x208
	.ascii "__INTRINSIC_DEFINED__interlockedbittestandcomplement64 \0"
	.byte	0x1
	.uleb128 0x20f
	.ascii "__INTRINSIC_DEFINED_InterlockedBitTestAndSet64 \0"
	.byte	0x1
	.uleb128 0x216
	.ascii "__INTRINSIC_DEFINED_InterlockedBitTestAndReset64 \0"
	.byte	0x1
	.uleb128 0x21d
	.ascii "__INTRINSIC_DEFINED_InterlockedBitTestAndComplement64 \0"
	.byte	0x1
	.uleb128 0x224
	.ascii "__INTRINSIC_DEFINED__InterlockedAnd64 \0"
	.byte	0x1
	.uleb128 0x22b
	.ascii "__INTRINSIC_DEFINED__InterlockedOr64 \0"
	.byte	0x1
	.uleb128 0x232
	.ascii "__INTRINSIC_DEFINED__InterlockedXor64 \0"
	.byte	0x1
	.uleb128 0x23b
	.ascii "__INTRINSIC_DEFINED__InterlockedIncrement64 \0"
	.byte	0x1
	.uleb128 0x244
	.ascii "__INTRINSIC_DEFINED__InterlockedDecrement64 \0"
	.byte	0x1
	.uleb128 0x24d
	.ascii "__INTRINSIC_DEFINED__InterlockedExchange64 \0"
	.byte	0x1
	.uleb128 0x256
	.ascii "__INTRINSIC_DEFINED__InterlockedExchangeAdd64 \0"
	.byte	0x1
	.uleb128 0x25d
	.ascii "__INTRINSIC_DEFINED___readgsbyte \0"
	.byte	0x1
	.uleb128 0x264
	.ascii "__INTRINSIC_DEFINED___readgsword \0"
	.byte	0x1
	.uleb128 0x26b
	.ascii "__INTRINSIC_DEFINED___readgsdword \0"
	.byte	0x1
	.uleb128 0x272
	.ascii "__INTRINSIC_DEFINED___readgsqword \0"
	.byte	0x1
	.uleb128 0x279
	.ascii "__INTRINSIC_DEFINED___writegsbyte \0"
	.byte	0x1
	.uleb128 0x280
	.ascii "__INTRINSIC_DEFINED___writegsword \0"
	.byte	0x1
	.uleb128 0x287
	.ascii "__INTRINSIC_DEFINED___writegsdword \0"
	.byte	0x1
	.uleb128 0x28e
	.ascii "__INTRINSIC_DEFINED___writegsqword \0"
	.byte	0x1
	.uleb128 0x295
	.ascii "__INTRINSIC_DEFINED__BitScanForward64 \0"
	.byte	0x1
	.uleb128 0x29c
	.ascii "__INTRINSIC_DEFINED__BitScanReverse64 \0"
	.byte	0x1
	.uleb128 0x2a3
	.ascii "__INTRINSIC_DEFINED__bittest64 \0"
	.byte	0x1
	.uleb128 0x2aa
	.ascii "__INTRINSIC_DEFINED__bittestandset64 \0"
	.byte	0x1
	.uleb128 0x2b1
	.ascii "__INTRINSIC_DEFINED__bittestandreset64 \0"
	.byte	0x1
	.uleb128 0x2b8
	.ascii "__INTRINSIC_DEFINED__bittestandcomplement64 \0"
	.byte	0x1
	.uleb128 0x2fe
	.ascii "__INTRINSIC_DEFINED___movsq \0"
	.byte	0x1
	.uleb128 0x34b
	.ascii "__INTRINSIC_DEFINED___int2c \0"
	.byte	0x1
	.uleb128 0x352
	.ascii "__INTRINSIC_DEFINED___stosb \0"
	.byte	0x1
	.uleb128 0x359
	.ascii "__INTRINSIC_DEFINED___stosw \0"
	.byte	0x1
	.uleb128 0x360
	.ascii "__INTRINSIC_DEFINED___stosd \0"
	.byte	0x1
	.uleb128 0x367
	.ascii "__INTRINSIC_DEFINED__interlockedbittestandset \0"
	.byte	0x1
	.uleb128 0x36e
	.ascii "__INTRINSIC_DEFINED__interlockedbittestandreset \0"
	.byte	0x1
	.uleb128 0x375
	.ascii "__INTRINSIC_DEFINED__interlockedbittestandcomplement \0"
	.byte	0x1
	.uleb128 0x37c
	.ascii "__INTRINSIC_DEFINED_InterlockedBitTestAndSet \0"
	.byte	0x1
	.uleb128 0x383
	.ascii "__INTRINSIC_DEFINED_InterlockedBitTestAndReset \0"
	.byte	0x1
	.uleb128 0x38a
	.ascii "__INTRINSIC_DEFINED_InterlockedBitTestAndComplement \0"
	.byte	0x1
	.uleb128 0x391
	.ascii "__INTRINSIC_DEFINED__InterlockedAnd \0"
	.byte	0x1
	.uleb128 0x398
	.ascii "__INTRINSIC_DEFINED__InterlockedOr \0"
	.byte	0x1
	.uleb128 0x39f
	.ascii "__INTRINSIC_DEFINED__InterlockedXor \0"
	.byte	0x1
	.uleb128 0x3a8
	.ascii "__INTRINSIC_DEFINED__InterlockedIncrement16 \0"
	.byte	0x1
	.uleb128 0x3b1
	.ascii "__INTRINSIC_DEFINED__InterlockedDecrement16 \0"
	.byte	0x1
	.uleb128 0x3ba
	.ascii "__INTRINSIC_DEFINED__InterlockedCompareExchange16 \0"
	.byte	0x1
	.uleb128 0x3c3
	.ascii "__INTRINSIC_DEFINED__InterlockedExchangeAdd \0"
	.byte	0x1
	.uleb128 0x3cc
	.ascii "__INTRINSIC_DEFINED__InterlockedCompareExchange \0"
	.byte	0x1
	.uleb128 0x3d5
	.ascii "__INTRINSIC_DEFINED__InterlockedIncrement \0"
	.byte	0x1
	.uleb128 0x3de
	.ascii "__INTRINSIC_DEFINED__InterlockedDecrement \0"
	.byte	0x1
	.uleb128 0x3e7
	.ascii "__INTRINSIC_DEFINED__InterlockedExchange \0"
	.byte	0x1
	.uleb128 0x3f0
	.ascii "__INTRINSIC_DEFINED__InterlockedCompareExchange64 \0"
	.byte	0x1
	.uleb128 0x3f9
	.ascii "__INTRINSIC_DEFINED__InterlockedCompareExchangePointer \0"
	.byte	0x1
	.uleb128 0x402
	.ascii "__INTRINSIC_DEFINED__InterlockedExchangePointer \0"
	.byte	0x1
	.uleb128 0x409
	.ascii "__INTRINSIC_DEFINED__BitScanForward \0"
	.byte	0x1
	.uleb128 0x410
	.ascii "__INTRINSIC_DEFINED__BitScanReverse \0"
	.byte	0x1
	.uleb128 0x417
	.ascii "__INTRINSIC_DEFINED__bittest \0"
	.byte	0x1
	.uleb128 0x41e
	.ascii "__INTRINSIC_DEFINED__bittestandset \0"
	.byte	0x1
	.uleb128 0x425
	.ascii "__INTRINSIC_DEFINED__bittestandreset \0"
	.byte	0x1
	.uleb128 0x42c
	.ascii "__INTRINSIC_DEFINED__bittestandcomplement \0"
	.byte	0x1
	.uleb128 0x4b6
	.ascii "__INTRINSIC_DEFINED___movsb \0"
	.byte	0x1
	.uleb128 0x4bd
	.ascii "__INTRINSIC_DEFINED___movsw \0"
	.byte	0x1
	.uleb128 0x4c4
	.ascii "__INTRINSIC_DEFINED___movsd \0"
	.byte	0x2
	.uleb128 0x53c
	.ascii "__INTRINSIC_ONLYSPECIAL\0"
	.byte	0x2
	.uleb128 0x53d
	.ascii "__INTRINSIC_PROLOG\0"
	.byte	0x2
	.uleb128 0x53e
	.ascii "__INTRINSIC_EPILOG\0"
	.byte	0x2
	.uleb128 0x53f
	.ascii "__INTRINSICS_USEINLINE\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x54
	.ascii "RESTRICTED_POINTER \0"
	.byte	0x2
	.uleb128 0x56
	.ascii "UNALIGNED\0"
	.byte	0x2
	.uleb128 0x57
	.ascii "UNALIGNED64\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "ALIGNMENT_MACHINE \0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "UNALIGNED __unaligned\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "UNALIGNED64 __unaligned\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "MAX_NATURAL_ALIGNMENT sizeof(ULONGLONG)\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "MEMORY_ALLOCATION_ALIGNMENT 16\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "TYPE_ALIGNMENT(t) __alignof__ (t)\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "PROBE_ALIGNMENT(_s) TYPE_ALIGNMENT (DWORD)\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "PROBE_ALIGNMENT32(_s) TYPE_ALIGNMENT (DWORD)\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "C_ASSERT(e) extern void __C_ASSERT__(int [(e)?1:-1])\0"
	.file 320 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/basetsd.h"
	.byte	0x3
	.uleb128 0x86
	.uleb128 0x140
	.byte	0x3
	.uleb128 0x5
	.uleb128 0x8
	.byte	0x4
	.byte	0x1
	.uleb128 0x8
	.ascii "_BASETSD_H_ \0"
	.byte	0x1
	.uleb128 0x10
	.ascii "POINTER_32 \0"
	.byte	0x1
	.uleb128 0x11
	.ascii "POINTER_64 \0"
	.byte	0x1
	.uleb128 0x12
	.ascii "FIRMWARE_PTR \0"
	.byte	0x1
	.uleb128 0x14
	.ascii "POINTER_SIGNED \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "POINTER_UNSIGNED \0"
	.byte	0x1
	.uleb128 0x16
	.ascii "SPOINTER_32 POINTER_SIGNED POINTER_32\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "UPOINTER_32 POINTER_UNSIGNED POINTER_32\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "__int3264 __int64\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "ADDRESS_TAG_BIT 0x40000000000ULL\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "PtrToPtr64(p) ((void *POINTER_64) p)\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "Ptr64ToPtr(p) ((void *) p)\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "HandleToHandle64(h) (PtrToPtr64 (h))\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "Handle64ToHandle(h) (Ptr64ToPtr (h))\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "HandleToHandle32(h) (PtrToPtr32 (h))\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "HandleToUlong(h) HandleToULong (h)\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "UlongToHandle(ul) ULongToHandle (ul)\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "UlongToPtr(ul) ULongToPtr (ul)\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "UintToPtr(ui) UIntToPtr (ui)\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "MAXUINT_PTR (~ ((UINT_PTR)0))\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "MAXINT_PTR ((INT_PTR) (MAXUINT_PTR >> 1))\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "MININT_PTR (~MAXINT_PTR)\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "MAXULONG_PTR (~ ((ULONG_PTR)0))\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "MAXLONG_PTR ((LONG_PTR) (MAXULONG_PTR >> 1))\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "MINLONG_PTR (~MAXLONG_PTR)\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "MAXUHALF_PTR ((UHALF_PTR)~0)\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "MAXHALF_PTR ((HALF_PTR) (MAXUHALF_PTR >> 1))\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "MINHALF_PTR (~MAXHALF_PTR)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x8a
	.ascii "DECLSPEC_IMPORT __declspec (dllimport)\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "DECLSPEC_NORETURN __declspec (noreturn)\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "DECLSPEC_NOTHROW __declspec (nothrow)\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "DECLSPEC_ALIGN(x) __attribute__ ((__aligned__ (x)))\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "SYSTEM_CACHE_ALIGNMENT_SIZE 64\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "DECLSPEC_CACHEALIGN DECLSPEC_ALIGN(SYSTEM_CACHE_ALIGNMENT_SIZE)\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "DECLSPEC_UUID(x) \0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "DECLSPEC_NOVTABLE \0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "DECLSPEC_SELECTANY __declspec(selectany)\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "NOP_FUNCTION (void)0\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "DECLSPEC_NOINLINE __attribute__((noinline))\0"
	.byte	0x1
	.uleb128 0xde
	.ascii "FORCEINLINE __forceinline\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "DECLSPEC_DEPRECATED __declspec(deprecated)\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "DEPRECATE_SUPPORTED \0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "DECLSPEC_DEPRECATED_DDK \0"
	.byte	0x1
	.uleb128 0xea
	.ascii "PRAGMA_DEPRECATED_DDK 0\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "FASTCALL \0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "NTAPI __stdcall\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "NTAPI_INLINE NTAPI\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "NTSYSAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "NTSYSCALLAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x103
	.ascii "VOID void\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "__WCHAR_DEFINED \0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "_TCHAR_DEFINED \0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "__TEXT(quote) quote\0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "TEXT(quote) __TEXT(quote)\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "___GROUP_AFFINITY_DEFINED \0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "DECLARE_HANDLE(name) struct name ##__ { int unused; }; typedef struct name ##__ *name\0"
	.byte	0x1
	.uleb128 0x189
	.ascii "_HRESULT_DEFINED \0"
	.byte	0x1
	.uleb128 0x18e
	.ascii "EXTERN_C extern \"C\"\0"
	.byte	0x1
	.uleb128 0x193
	.ascii "STDMETHODCALLTYPE WINAPI\0"
	.byte	0x1
	.uleb128 0x194
	.ascii "STDMETHODVCALLTYPE __cdecl\0"
	.byte	0x1
	.uleb128 0x195
	.ascii "STDAPICALLTYPE WINAPI\0"
	.byte	0x1
	.uleb128 0x196
	.ascii "STDAPIVCALLTYPE __cdecl\0"
	.byte	0x1
	.uleb128 0x197
	.ascii "STDAPI EXTERN_C HRESULT WINAPI\0"
	.byte	0x1
	.uleb128 0x198
	.ascii "STDAPI_(type) EXTERN_C type WINAPI\0"
	.byte	0x1
	.uleb128 0x199
	.ascii "STDMETHODIMP HRESULT WINAPI\0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "STDMETHODIMP_(type) type WINAPI\0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "IFACEMETHODIMP STDMETHODIMP\0"
	.byte	0x1
	.uleb128 0x19c
	.ascii "IFACEMETHODIMP_(type) STDMETHODIMP_(type)\0"
	.byte	0x1
	.uleb128 0x19d
	.ascii "STDAPIV EXTERN_C HRESULT STDAPIVCALLTYPE\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "STDAPIV_(type) EXTERN_C type STDAPIVCALLTYPE\0"
	.byte	0x1
	.uleb128 0x19f
	.ascii "STDMETHODIMPV HRESULT STDMETHODVCALLTYPE\0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "STDMETHODIMPV_(type) type STDMETHODVCALLTYPE\0"
	.byte	0x1
	.uleb128 0x1a1
	.ascii "IFACEMETHODIMPV STDMETHODIMPV\0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "IFACEMETHODIMPV_(type) STDMETHODIMPV_(type)\0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "_LCID_DEFINED \0"
	.byte	0x1
	.uleb128 0x1ab
	.ascii "_LANGID_DEFINED \0"
	.byte	0x1
	.uleb128 0x1b0
	.ascii "__COMPARTMENT_ID_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1b8
	.ascii "APPLICATION_ERROR_MASK 0x20000000\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "ERROR_SEVERITY_SUCCESS 0x00000000\0"
	.byte	0x1
	.uleb128 0x1ba
	.ascii "ERROR_SEVERITY_INFORMATIONAL 0x40000000\0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "ERROR_SEVERITY_WARNING 0x80000000\0"
	.byte	0x1
	.uleb128 0x1bc
	.ascii "ERROR_SEVERITY_ERROR 0xC0000000\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "_ULONGLONG_ \0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "MAXLONGLONG (0x7fffffffffffffffll)\0"
	.byte	0x1
	.uleb128 0x1d3
	.ascii "_LARGE_INTEGER_DEFINED \0"
	.byte	0x1
	.uleb128 0x200
	.ascii "_DWORDLONG_ \0"
	.byte	0x1
	.uleb128 0x204
	.ascii "Int32x32To64(a,b) (((LONGLONG) ((LONG) (a))) * ((LONGLONG) ((LONG) (b))))\0"
	.byte	0x1
	.uleb128 0x205
	.ascii "UInt32x32To64(a,b) (((ULONGLONG) ((unsigned int) (a))) *((ULONGLONG) ((unsigned int) (b))))\0"
	.byte	0x1
	.uleb128 0x206
	.ascii "Int64ShllMod32(a,b) (((ULONGLONG) (a)) << (b))\0"
	.byte	0x1
	.uleb128 0x207
	.ascii "Int64ShraMod32(a,b) (((LONGLONG) (a)) >> (b))\0"
	.byte	0x1
	.uleb128 0x208
	.ascii "Int64ShrlMod32(a,b) (((ULONGLONG) (a)) >> (b))\0"
	.byte	0x1
	.uleb128 0x210
	.ascii "RotateLeft8 _rotl8\0"
	.byte	0x1
	.uleb128 0x211
	.ascii "RotateLeft16 _rotl16\0"
	.byte	0x1
	.uleb128 0x212
	.ascii "RotateRight8 _rotr8\0"
	.byte	0x1
	.uleb128 0x213
	.ascii "RotateRight16 _rotr16\0"
	.byte	0x1
	.uleb128 0x21b
	.ascii "RotateLeft32 _rotl\0"
	.byte	0x1
	.uleb128 0x21c
	.ascii "RotateLeft64 _rotl64\0"
	.byte	0x1
	.uleb128 0x21d
	.ascii "RotateRight32 _rotr\0"
	.byte	0x1
	.uleb128 0x21e
	.ascii "RotateRight64 _rotr64\0"
	.byte	0x2
	.uleb128 0x222
	.ascii "_rotl\0"
	.byte	0x2
	.uleb128 0x223
	.ascii "_rotr\0"
	.byte	0x2
	.uleb128 0x22a
	.ascii "_rotl64\0"
	.byte	0x2
	.uleb128 0x22b
	.ascii "_rotr64\0"
	.byte	0x1
	.uleb128 0x235
	.ascii "ANSI_NULL ((CHAR)0)\0"
	.byte	0x1
	.uleb128 0x236
	.ascii "UNICODE_NULL ((WCHAR)0)\0"
	.byte	0x1
	.uleb128 0x237
	.ascii "UNICODE_STRING_MAX_BYTES ((WORD) 65534)\0"
	.byte	0x1
	.uleb128 0x238
	.ascii "UNICODE_STRING_MAX_CHARS (32767)\0"
	.byte	0x1
	.uleb128 0x23b
	.ascii "_BOOLEAN_ \0"
	.byte	0x1
	.uleb128 0x241
	.ascii "_LIST_ENTRY_DEFINED \0"
	.file 321 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/guiddef.h"
	.byte	0x3
	.uleb128 0x25a
	.uleb128 0x141
	.byte	0x1
	.uleb128 0x6
	.ascii "GUID_DEFINED \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x8
	.byte	0x4
	.byte	0x1
	.uleb128 0x3d
	.ascii "DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) EXTERN_C const GUID name\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "DEFINE_OLEGUID(name,l,w1,w2) DEFINE_GUID (name, l, w1, w2, 0xc0, 0, 0, 0, 0, 0, 0, 0x46)\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "_GUIDDEF_H_ \0"
	.byte	0x1
	.uleb128 0x46
	.ascii "__LPGUID_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "__LPCGUID_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x50
	.ascii "__IID_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x55
	.ascii "IID_NULL GUID_NULL\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "IsEqualIID(riid1,riid2) IsEqualGUID (riid1, riid2)\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "CLSID_DEFINED \0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "CLSID_NULL GUID_NULL\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "IsEqualCLSID(rclsid1,rclsid2) IsEqualGUID (rclsid1, rclsid2)\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "FMTID_NULL GUID_NULL\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "IsEqualFMTID(rfmtid1,rfmtid2) IsEqualGUID (rfmtid1, rfmtid2)\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "__MIDL_CONST const\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "_REFGUID_DEFINED \0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "REFGUID const GUID &\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "_REFIID_DEFINED \0"
	.byte	0x1
	.uleb128 0x78
	.ascii "REFIID const IID &\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "_REFCLSID_DEFINED \0"
	.byte	0x1
	.uleb128 0x81
	.ascii "REFCLSID const IID &\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "_REFFMTID_DEFINED \0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "REFFMTID const IID &\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "_SYS_GUID_OPERATORS_ \0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "IsEqualIID(riid1,riid2) IsEqualGUID (riid1, riid2)\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "IsEqualCLSID(rclsid1,rclsid2) IsEqualGUID (rclsid1, rclsid2)\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "_SYS_GUID_OPERATOR_EQ_ \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x25d
	.ascii "__OBJECTID_DEFINED \0"
	.byte	0x1
	.uleb128 0x264
	.ascii "MINCHAR 0x80\0"
	.byte	0x1
	.uleb128 0x265
	.ascii "MAXCHAR 0x7f\0"
	.byte	0x1
	.uleb128 0x266
	.ascii "MINSHORT 0x8000\0"
	.byte	0x1
	.uleb128 0x267
	.ascii "MAXSHORT 0x7fff\0"
	.byte	0x1
	.uleb128 0x268
	.ascii "MINLONG 0x80000000\0"
	.byte	0x1
	.uleb128 0x269
	.ascii "MAXLONG 0x7fffffff\0"
	.byte	0x1
	.uleb128 0x26a
	.ascii "MAXBYTE 0xff\0"
	.byte	0x1
	.uleb128 0x26b
	.ascii "MAXWORD 0xffff\0"
	.byte	0x1
	.uleb128 0x26c
	.ascii "MAXDWORD 0xffffffff\0"
	.byte	0x1
	.uleb128 0x26e
	.ascii "FIELD_OFFSET(type,field) ((LONG)(LONG_PTR)&(((type *)0)->field))\0"
	.byte	0x1
	.uleb128 0x26f
	.ascii "RTL_FIELD_SIZE(type,field) (sizeof(((type *)0)->field))\0"
	.byte	0x1
	.uleb128 0x270
	.ascii "RTL_SIZEOF_THROUGH_FIELD(type,field) (FIELD_OFFSET(type,field) + RTL_FIELD_SIZE(type,field))\0"
	.byte	0x1
	.uleb128 0x271
	.ascii "RTL_CONTAINS_FIELD(Struct,Size,Field) ((((PCHAR)(&(Struct)->Field)) + sizeof((Struct)->Field)) <= (((PCHAR)(Struct))+(Size)))\0"
	.byte	0x1
	.uleb128 0x272
	.ascii "RTL_NUMBER_OF_V1(A) (sizeof(A)/sizeof((A)[0]))\0"
	.byte	0x1
	.uleb128 0x273
	.ascii "RTL_NUMBER_OF_V2(A) RTL_NUMBER_OF_V1(A)\0"
	.byte	0x1
	.uleb128 0x278
	.ascii "RTL_NUMBER_OF(A) RTL_NUMBER_OF_V1(A)\0"
	.byte	0x1
	.uleb128 0x27b
	.ascii "ARRAYSIZE(A) RTL_NUMBER_OF_V2(A)\0"
	.byte	0x1
	.uleb128 0x27c
	.ascii "_ARRAYSIZE(A) RTL_NUMBER_OF_V1(A)\0"
	.byte	0x1
	.uleb128 0x27e
	.ascii "RTL_FIELD_TYPE(type,field) (((type*)0)->field)\0"
	.byte	0x1
	.uleb128 0x27f
	.ascii "RTL_NUMBER_OF_FIELD(type,field) (RTL_NUMBER_OF(RTL_FIELD_TYPE(type,field)))\0"
	.byte	0x1
	.uleb128 0x280
	.ascii "RTL_PADDING_BETWEEN_FIELDS(T,F1,F2) ((FIELD_OFFSET(T,F2) > FIELD_OFFSET(T,F1)) ? (FIELD_OFFSET(T,F2) - FIELD_OFFSET(T,F1) - RTL_FIELD_SIZE(T,F1)) : (FIELD_OFFSET(T,F1) - FIELD_OFFSET(T,F2) - RTL_FIELD_SIZE(T,F2)))\0"
	.byte	0x1
	.uleb128 0x283
	.ascii "RTL_CONST_CAST(type) const_cast<type>\0"
	.byte	0x1
	.uleb128 0x289
	.ascii "DEFINE_ENUM_FLAG_OPERATORS(ENUMTYPE) extern \"C++\" { inline ENUMTYPE operator | (ENUMTYPE a, ENUMTYPE b) { return ENUMTYPE(((int)a) | ((int)b)); } inline ENUMTYPE &operator |= (ENUMTYPE &a, ENUMTYPE b) { return (ENUMTYPE &)(((int &)a) |= ((int)b)); } inline ENUMTYPE operator & (ENUMTYPE a, ENUMTYPE b) { return ENUMTYPE(((int)a) & ((int)b)); } inline ENUMTYPE &operator &= (ENUMTYPE &a, ENUMTYPE b) { return (ENUMTYPE &)(((int &)a) &= ((int)b)); } inline ENUMTYPE operator ~ (ENUMTYPE a) { return ENUMTYPE(~((int)a)); } inline ENUMTYPE operator ^ (ENUMTYPE a, ENUMTYPE b) { return ENUMTYPE(((int)a) ^ ((int)b)); } inline ENUMTYPE &operator ^= (ENUMTYPE &a, ENUMTYPE b) { return (ENUMTYPE &)(((int &)a) ^= ((int)b)); } }\0"
	.byte	0x1
	.uleb128 0x297
	.ascii "COMPILETIME_OR_2FLAGS(a,b) ((UINT) (a) | (UINT) (b))\0"
	.byte	0x1
	.uleb128 0x298
	.ascii "COMPILETIME_OR_3FLAGS(a,b,c) ((UINT) (a) | (UINT) (b) | (UINT) (c))\0"
	.byte	0x1
	.uleb128 0x299
	.ascii "COMPILETIME_OR_4FLAGS(a,b,c,d) ((UINT) (a) | (UINT) (b) | (UINT) (c) | (UINT) (d))\0"
	.byte	0x1
	.uleb128 0x29a
	.ascii "COMPILETIME_OR_5FLAGS(a,b,c,d,e) ((UINT) (a) | (UINT) (b) | (UINT) (c) | (UINT) (d) | (UINT) (e))\0"
	.byte	0x1
	.uleb128 0x29d
	.ascii "RTL_BITS_OF(sizeOfArg) (sizeof(sizeOfArg) * 8)\0"
	.byte	0x1
	.uleb128 0x29e
	.ascii "RTL_BITS_OF_FIELD(type,field) (RTL_BITS_OF(RTL_FIELD_TYPE(type,field)))\0"
	.byte	0x1
	.uleb128 0x29f
	.ascii "CONTAINING_RECORD(address,type,field) ((type *)((PCHAR)(address) - (ULONG_PTR)(&((type *)0)->field)))\0"
	.byte	0x1
	.uleb128 0x2a3
	.ascii "__PEXCEPTION_ROUTINE_DEFINED \0"
	.byte	0x1
	.uleb128 0x2a7
	.ascii "VER_WORKSTATION_NT 0x40000000\0"
	.byte	0x1
	.uleb128 0x2a8
	.ascii "VER_SERVER_NT 0x80000000\0"
	.byte	0x1
	.uleb128 0x2a9
	.ascii "VER_SUITE_SMALLBUSINESS 0x00000001\0"
	.byte	0x1
	.uleb128 0x2aa
	.ascii "VER_SUITE_ENTERPRISE 0x00000002\0"
	.byte	0x1
	.uleb128 0x2ab
	.ascii "VER_SUITE_BACKOFFICE 0x00000004\0"
	.byte	0x1
	.uleb128 0x2ac
	.ascii "VER_SUITE_COMMUNICATIONS 0x00000008\0"
	.byte	0x1
	.uleb128 0x2ad
	.ascii "VER_SUITE_TERMINAL 0x00000010\0"
	.byte	0x1
	.uleb128 0x2ae
	.ascii "VER_SUITE_SMALLBUSINESS_RESTRICTED 0x00000020\0"
	.byte	0x1
	.uleb128 0x2af
	.ascii "VER_SUITE_EMBEDDEDNT 0x00000040\0"
	.byte	0x1
	.uleb128 0x2b0
	.ascii "VER_SUITE_DATACENTER 0x00000080\0"
	.byte	0x1
	.uleb128 0x2b1
	.ascii "VER_SUITE_SINGLEUSERTS 0x00000100\0"
	.byte	0x1
	.uleb128 0x2b2
	.ascii "VER_SUITE_PERSONAL 0x00000200\0"
	.byte	0x1
	.uleb128 0x2b3
	.ascii "VER_SUITE_BLADE 0x00000400\0"
	.byte	0x1
	.uleb128 0x2b4
	.ascii "VER_SUITE_EMBEDDED_RESTRICTED 0x00000800\0"
	.byte	0x1
	.uleb128 0x2b5
	.ascii "VER_SUITE_SECURITY_APPLIANCE 0x00001000\0"
	.byte	0x1
	.uleb128 0x2b6
	.ascii "VER_SUITE_STORAGE_SERVER 0x00002000\0"
	.byte	0x1
	.uleb128 0x2b7
	.ascii "VER_SUITE_COMPUTE_SERVER 0x00004000\0"
	.byte	0x1
	.uleb128 0x2b8
	.ascii "VER_SUITE_WH_SERVER 0x00008000\0"
	.byte	0x1
	.uleb128 0x2ba
	.ascii "PRODUCT_UNDEFINED 0x0\0"
	.byte	0x1
	.uleb128 0x2bc
	.ascii "PRODUCT_ULTIMATE 0x1\0"
	.byte	0x1
	.uleb128 0x2bd
	.ascii "PRODUCT_HOME_BASIC 0x2\0"
	.byte	0x1
	.uleb128 0x2be
	.ascii "PRODUCT_HOME_PREMIUM 0x3\0"
	.byte	0x1
	.uleb128 0x2bf
	.ascii "PRODUCT_ENTERPRISE 0x4\0"
	.byte	0x1
	.uleb128 0x2c0
	.ascii "PRODUCT_HOME_BASIC_N 0x5\0"
	.byte	0x1
	.uleb128 0x2c1
	.ascii "PRODUCT_BUSINESS 0x6\0"
	.byte	0x1
	.uleb128 0x2c2
	.ascii "PRODUCT_STANDARD_SERVER 0x7\0"
	.byte	0x1
	.uleb128 0x2c3
	.ascii "PRODUCT_DATACENTER_SERVER 0x8\0"
	.byte	0x1
	.uleb128 0x2c4
	.ascii "PRODUCT_SMALLBUSINESS_SERVER 0x9\0"
	.byte	0x1
	.uleb128 0x2c5
	.ascii "PRODUCT_ENTERPRISE_SERVER 0xa\0"
	.byte	0x1
	.uleb128 0x2c6
	.ascii "PRODUCT_STARTER 0xb\0"
	.byte	0x1
	.uleb128 0x2c7
	.ascii "PRODUCT_DATACENTER_SERVER_CORE 0xc\0"
	.byte	0x1
	.uleb128 0x2c8
	.ascii "PRODUCT_STANDARD_SERVER_CORE 0xd\0"
	.byte	0x1
	.uleb128 0x2c9
	.ascii "PRODUCT_ENTERPRISE_SERVER_CORE 0xe\0"
	.byte	0x1
	.uleb128 0x2ca
	.ascii "PRODUCT_ENTERPRISE_SERVER_IA64 0xf\0"
	.byte	0x1
	.uleb128 0x2cb
	.ascii "PRODUCT_BUSINESS_N 0x10\0"
	.byte	0x1
	.uleb128 0x2cc
	.ascii "PRODUCT_WEB_SERVER 0x11\0"
	.byte	0x1
	.uleb128 0x2cd
	.ascii "PRODUCT_CLUSTER_SERVER 0x12\0"
	.byte	0x1
	.uleb128 0x2ce
	.ascii "PRODUCT_HOME_SERVER 0x13\0"
	.byte	0x1
	.uleb128 0x2cf
	.ascii "PRODUCT_STORAGE_EXPRESS_SERVER 0x14\0"
	.byte	0x1
	.uleb128 0x2d0
	.ascii "PRODUCT_STORAGE_STANDARD_SERVER 0x15\0"
	.byte	0x1
	.uleb128 0x2d1
	.ascii "PRODUCT_STORAGE_WORKGROUP_SERVER 0x16\0"
	.byte	0x1
	.uleb128 0x2d2
	.ascii "PRODUCT_STORAGE_ENTERPRISE_SERVER 0x17\0"
	.byte	0x1
	.uleb128 0x2d3
	.ascii "PRODUCT_SERVER_FOR_SMALLBUSINESS 0x18\0"
	.byte	0x1
	.uleb128 0x2d4
	.ascii "PRODUCT_SMALLBUSINESS_SERVER_PREMIUM 0x19\0"
	.byte	0x1
	.uleb128 0x2d5
	.ascii "PRODUCT_HOME_PREMIUM_N 0x1a\0"
	.byte	0x1
	.uleb128 0x2d6
	.ascii "PRODUCT_ENTERPRISE_N 0x1b\0"
	.byte	0x1
	.uleb128 0x2d7
	.ascii "PRODUCT_ULTIMATE_N 0x1c\0"
	.byte	0x1
	.uleb128 0x2d8
	.ascii "PRODUCT_WEB_SERVER_CORE 0x1d\0"
	.byte	0x1
	.uleb128 0x2d9
	.ascii "PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT 0x1e\0"
	.byte	0x1
	.uleb128 0x2da
	.ascii "PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY 0x1f\0"
	.byte	0x1
	.uleb128 0x2db
	.ascii "PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING 0x20\0"
	.byte	0x1
	.uleb128 0x2dc
	.ascii "PRODUCT_SERVER_FOUNDATION 0x21\0"
	.byte	0x1
	.uleb128 0x2dd
	.ascii "PRODUCT_HOME_PREMIUM_SERVER 0x22\0"
	.byte	0x1
	.uleb128 0x2de
	.ascii "PRODUCT_SERVER_FOR_SMALLBUSINESS_V 0x23\0"
	.byte	0x1
	.uleb128 0x2df
	.ascii "PRODUCT_STANDARD_SERVER_V 0x24\0"
	.byte	0x1
	.uleb128 0x2e0
	.ascii "PRODUCT_DATACENTER_SERVER_V 0x25\0"
	.byte	0x1
	.uleb128 0x2e1
	.ascii "PRODUCT_ENTERPRISE_SERVER_V 0x26\0"
	.byte	0x1
	.uleb128 0x2e2
	.ascii "PRODUCT_DATACENTER_SERVER_CORE_V 0x27\0"
	.byte	0x1
	.uleb128 0x2e3
	.ascii "PRODUCT_STANDARD_SERVER_CORE_V 0x28\0"
	.byte	0x1
	.uleb128 0x2e4
	.ascii "PRODUCT_ENTERPRISE_SERVER_CORE_V 0x29\0"
	.byte	0x1
	.uleb128 0x2e5
	.ascii "PRODUCT_HYPERV 0x2a\0"
	.byte	0x1
	.uleb128 0x2e6
	.ascii "PRODUCT_STORAGE_EXPRESS_SERVER_CORE 0x2b\0"
	.byte	0x1
	.uleb128 0x2e7
	.ascii "PRODUCT_STORAGE_STANDARD_SERVER_CORE 0x2c\0"
	.byte	0x1
	.uleb128 0x2e8
	.ascii "PRODUCT_STORAGE_WORKGROUP_SERVER_CORE 0x2d\0"
	.byte	0x1
	.uleb128 0x2e9
	.ascii "PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE 0x2e\0"
	.byte	0x1
	.uleb128 0x2ea
	.ascii "PRODUCT_STARTER_N 0x2f\0"
	.byte	0x1
	.uleb128 0x2eb
	.ascii "PRODUCT_PROFESSIONAL 0x30\0"
	.byte	0x1
	.uleb128 0x2ec
	.ascii "PRODUCT_PROFESSIONAL_N 0x31\0"
	.byte	0x1
	.uleb128 0x2ed
	.ascii "PRODUCT_SB_SOLUTION_SERVER 0x32\0"
	.byte	0x1
	.uleb128 0x2ee
	.ascii "PRODUCT_SERVER_FOR_SB_SOLUTIONS 0x33\0"
	.byte	0x1
	.uleb128 0x2ef
	.ascii "PRODUCT_STANDARD_SERVER_SOLUTIONS 0x34\0"
	.byte	0x1
	.uleb128 0x2f0
	.ascii "PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE 0x35\0"
	.byte	0x1
	.uleb128 0x2f1
	.ascii "PRODUCT_SB_SOLUTION_SERVER_EM 0x36\0"
	.byte	0x1
	.uleb128 0x2f2
	.ascii "PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM 0x37\0"
	.byte	0x1
	.uleb128 0x2f3
	.ascii "PRODUCT_SOLUTION_EMBEDDEDSERVER 0x38\0"
	.byte	0x1
	.uleb128 0x2f4
	.ascii "PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE 0x39\0"
	.byte	0x1
	.uleb128 0x2f5
	.ascii "PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT 0x3B\0"
	.byte	0x1
	.uleb128 0x2f6
	.ascii "PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL 0x3C\0"
	.byte	0x1
	.uleb128 0x2f7
	.ascii "PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC 0x3D\0"
	.byte	0x1
	.uleb128 0x2f8
	.ascii "PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC 0x3E\0"
	.byte	0x1
	.uleb128 0x2f9
	.ascii "PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE 0x3f\0"
	.byte	0x1
	.uleb128 0x2fa
	.ascii "PRODUCT_CLUSTER_SERVER_V 0x40\0"
	.byte	0x1
	.uleb128 0x2fb
	.ascii "PRODUCT_EMBEDDED 0x41\0"
	.byte	0x1
	.uleb128 0x2fc
	.ascii "PRODUCT_STARTER_E 0x42\0"
	.byte	0x1
	.uleb128 0x2fd
	.ascii "PRODUCT_HOME_BASIC_E 0x43\0"
	.byte	0x1
	.uleb128 0x2fe
	.ascii "PRODUCT_HOME_PREMIUM_E 0x44\0"
	.byte	0x1
	.uleb128 0x2ff
	.ascii "PRODUCT_PROFESSIONAL_E 0x45\0"
	.byte	0x1
	.uleb128 0x300
	.ascii "PRODUCT_ENTERPRISE_E 0x46\0"
	.byte	0x1
	.uleb128 0x301
	.ascii "PRODUCT_ULTIMATE_E 0x47\0"
	.byte	0x1
	.uleb128 0x302
	.ascii "PRODUCT_ENTERPRISE_EVALUATION 0x48\0"
	.byte	0x1
	.uleb128 0x303
	.ascii "PRODUCT_MULTIPOINT_STANDARD_SERVER 0x4C\0"
	.byte	0x1
	.uleb128 0x304
	.ascii "PRODUCT_MULTIPOINT_PREMIUM_SERVER 0x4D\0"
	.byte	0x1
	.uleb128 0x305
	.ascii "PRODUCT_STANDARD_EVALUATION_SERVER 0x4F\0"
	.byte	0x1
	.uleb128 0x306
	.ascii "PRODUCT_DATACENTER_EVALUATION_SERVER 0x50\0"
	.byte	0x1
	.uleb128 0x307
	.ascii "PRODUCT_ENTERPRISE_N_EVALUATION 0x54\0"
	.byte	0x1
	.uleb128 0x308
	.ascii "PRODUCT_EMBEDDED_AUTOMOTIVE 0x55\0"
	.byte	0x1
	.uleb128 0x309
	.ascii "PRODUCT_EMBEDDED_INDUSTRY_A 0x56\0"
	.byte	0x1
	.uleb128 0x30a
	.ascii "PRODUCT_THINPC 0x57\0"
	.byte	0x1
	.uleb128 0x30b
	.ascii "PRODUCT_EMBEDDED_A 0x58\0"
	.byte	0x1
	.uleb128 0x30c
	.ascii "PRODUCT_EMBEDDED_INDUSTRY 0x59\0"
	.byte	0x1
	.uleb128 0x30d
	.ascii "PRODUCT_EMBEDDED_E 0x5A\0"
	.byte	0x1
	.uleb128 0x30e
	.ascii "PRODUCT_EMBEDDED_INDUSTRY_E 0x5B\0"
	.byte	0x1
	.uleb128 0x30f
	.ascii "PRODUCT_EMBEDDED_INDUSTRY_A_E 0x5C\0"
	.byte	0x1
	.uleb128 0x310
	.ascii "PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER 0x5F\0"
	.byte	0x1
	.uleb128 0x311
	.ascii "PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER 0x60\0"
	.byte	0x1
	.uleb128 0x312
	.ascii "PRODUCT_CORE_ARM 0x61\0"
	.byte	0x1
	.uleb128 0x313
	.ascii "PRODUCT_CORE_N 0x62\0"
	.byte	0x1
	.uleb128 0x314
	.ascii "PRODUCT_CORE_COUNTRYSPECIFIC 0x63\0"
	.byte	0x1
	.uleb128 0x315
	.ascii "PRODUCT_CORE_SINGLELANGUAGE 0x64\0"
	.byte	0x1
	.uleb128 0x316
	.ascii "PRODUCT_CORE 0x65\0"
	.byte	0x1
	.uleb128 0x317
	.ascii "PRODUCT_PROFESSIONAL_WMC 0x67\0"
	.byte	0x1
	.uleb128 0x318
	.ascii "PRODUCT_MOBILE_CORE 0x68\0"
	.byte	0x1
	.uleb128 0x31a
	.ascii "PRODUCT_UNLICENSED 0xabcdabcd\0"
	.byte	0x1
	.uleb128 0x31c
	.ascii "LANG_NEUTRAL 0x00\0"
	.byte	0x1
	.uleb128 0x31d
	.ascii "LANG_INVARIANT 0x7f\0"
	.byte	0x1
	.uleb128 0x31f
	.ascii "LANG_AFRIKAANS 0x36\0"
	.byte	0x1
	.uleb128 0x320
	.ascii "LANG_ALBANIAN 0x1c\0"
	.byte	0x1
	.uleb128 0x321
	.ascii "LANG_ALSATIAN 0x84\0"
	.byte	0x1
	.uleb128 0x322
	.ascii "LANG_AMHARIC 0x5e\0"
	.byte	0x1
	.uleb128 0x323
	.ascii "LANG_ARABIC 0x01\0"
	.byte	0x1
	.uleb128 0x324
	.ascii "LANG_ARMENIAN 0x2b\0"
	.byte	0x1
	.uleb128 0x325
	.ascii "LANG_ASSAMESE 0x4d\0"
	.byte	0x1
	.uleb128 0x326
	.ascii "LANG_AZERI 0x2c\0"
	.byte	0x1
	.uleb128 0x327
	.ascii "LANG_AZERBAIJANI 0x2c\0"
	.byte	0x1
	.uleb128 0x328
	.ascii "LANG_BANGLA 0x45\0"
	.byte	0x1
	.uleb128 0x329
	.ascii "LANG_BASHKIR 0x6d\0"
	.byte	0x1
	.uleb128 0x32a
	.ascii "LANG_BASQUE 0x2d\0"
	.byte	0x1
	.uleb128 0x32b
	.ascii "LANG_BELARUSIAN 0x23\0"
	.byte	0x1
	.uleb128 0x32c
	.ascii "LANG_BENGALI 0x45\0"
	.byte	0x1
	.uleb128 0x32d
	.ascii "LANG_BRETON 0x7e\0"
	.byte	0x1
	.uleb128 0x32e
	.ascii "LANG_BOSNIAN 0x1a\0"
	.byte	0x1
	.uleb128 0x32f
	.ascii "LANG_BOSNIAN_NEUTRAL 0x781a\0"
	.byte	0x1
	.uleb128 0x330
	.ascii "LANG_BULGARIAN 0x02\0"
	.byte	0x1
	.uleb128 0x331
	.ascii "LANG_CATALAN 0x03\0"
	.byte	0x1
	.uleb128 0x332
	.ascii "LANG_CENTRAL_KURDISH 0x92\0"
	.byte	0x1
	.uleb128 0x333
	.ascii "LANG_CHEROKEE 0x5c\0"
	.byte	0x1
	.uleb128 0x334
	.ascii "LANG_CHINESE 0x04\0"
	.byte	0x1
	.uleb128 0x335
	.ascii "LANG_CHINESE_SIMPLIFIED 0x04\0"
	.byte	0x1
	.uleb128 0x336
	.ascii "LANG_CHINESE_TRADITIONAL 0x7c04\0"
	.byte	0x1
	.uleb128 0x337
	.ascii "LANG_CORSICAN 0x83\0"
	.byte	0x1
	.uleb128 0x338
	.ascii "LANG_CROATIAN 0x1a\0"
	.byte	0x1
	.uleb128 0x339
	.ascii "LANG_CZECH 0x05\0"
	.byte	0x1
	.uleb128 0x33a
	.ascii "LANG_DANISH 0x06\0"
	.byte	0x1
	.uleb128 0x33b
	.ascii "LANG_DARI 0x8c\0"
	.byte	0x1
	.uleb128 0x33c
	.ascii "LANG_DIVEHI 0x65\0"
	.byte	0x1
	.uleb128 0x33d
	.ascii "LANG_DUTCH 0x13\0"
	.byte	0x1
	.uleb128 0x33e
	.ascii "LANG_ENGLISH 0x09\0"
	.byte	0x1
	.uleb128 0x33f
	.ascii "LANG_ESTONIAN 0x25\0"
	.byte	0x1
	.uleb128 0x340
	.ascii "LANG_FAEROESE 0x38\0"
	.byte	0x1
	.uleb128 0x341
	.ascii "LANG_FARSI 0x29\0"
	.byte	0x1
	.uleb128 0x342
	.ascii "LANG_FILIPINO 0x64\0"
	.byte	0x1
	.uleb128 0x343
	.ascii "LANG_FINNISH 0x0b\0"
	.byte	0x1
	.uleb128 0x344
	.ascii "LANG_FRENCH 0x0c\0"
	.byte	0x1
	.uleb128 0x345
	.ascii "LANG_FRISIAN 0x62\0"
	.byte	0x1
	.uleb128 0x346
	.ascii "LANG_FULAH 0x67\0"
	.byte	0x1
	.uleb128 0x347
	.ascii "LANG_GALICIAN 0x56\0"
	.byte	0x1
	.uleb128 0x348
	.ascii "LANG_GEORGIAN 0x37\0"
	.byte	0x1
	.uleb128 0x349
	.ascii "LANG_GERMAN 0x07\0"
	.byte	0x1
	.uleb128 0x34a
	.ascii "LANG_GREEK 0x08\0"
	.byte	0x1
	.uleb128 0x34b
	.ascii "LANG_GREENLANDIC 0x6f\0"
	.byte	0x1
	.uleb128 0x34c
	.ascii "LANG_GUJARATI 0x47\0"
	.byte	0x1
	.uleb128 0x34d
	.ascii "LANG_HAUSA 0x68\0"
	.byte	0x1
	.uleb128 0x34e
	.ascii "LANG_HEBREW 0x0d\0"
	.byte	0x1
	.uleb128 0x34f
	.ascii "LANG_HINDI 0x39\0"
	.byte	0x1
	.uleb128 0x350
	.ascii "LANG_HUNGARIAN 0x0e\0"
	.byte	0x1
	.uleb128 0x351
	.ascii "LANG_ICELANDIC 0x0f\0"
	.byte	0x1
	.uleb128 0x352
	.ascii "LANG_IGBO 0x70\0"
	.byte	0x1
	.uleb128 0x353
	.ascii "LANG_INDONESIAN 0x21\0"
	.byte	0x1
	.uleb128 0x354
	.ascii "LANG_INUKTITUT 0x5d\0"
	.byte	0x1
	.uleb128 0x355
	.ascii "LANG_IRISH 0x3c\0"
	.byte	0x1
	.uleb128 0x356
	.ascii "LANG_ITALIAN 0x10\0"
	.byte	0x1
	.uleb128 0x357
	.ascii "LANG_JAPANESE 0x11\0"
	.byte	0x1
	.uleb128 0x358
	.ascii "LANG_KANNADA 0x4b\0"
	.byte	0x1
	.uleb128 0x359
	.ascii "LANG_KASHMIRI 0x60\0"
	.byte	0x1
	.uleb128 0x35a
	.ascii "LANG_KAZAK 0x3f\0"
	.byte	0x1
	.uleb128 0x35b
	.ascii "LANG_KHMER 0x53\0"
	.byte	0x1
	.uleb128 0x35c
	.ascii "LANG_KICHE 0x86\0"
	.byte	0x1
	.uleb128 0x35d
	.ascii "LANG_KINYARWANDA 0x87\0"
	.byte	0x1
	.uleb128 0x35e
	.ascii "LANG_KONKANI 0x57\0"
	.byte	0x1
	.uleb128 0x35f
	.ascii "LANG_KOREAN 0x12\0"
	.byte	0x1
	.uleb128 0x360
	.ascii "LANG_KYRGYZ 0x40\0"
	.byte	0x1
	.uleb128 0x361
	.ascii "LANG_LAO 0x54\0"
	.byte	0x1
	.uleb128 0x362
	.ascii "LANG_LATVIAN 0x26\0"
	.byte	0x1
	.uleb128 0x363
	.ascii "LANG_LITHUANIAN 0x27\0"
	.byte	0x1
	.uleb128 0x364
	.ascii "LANG_LOWER_SORBIAN 0x2e\0"
	.byte	0x1
	.uleb128 0x365
	.ascii "LANG_LUXEMBOURGISH 0x6e\0"
	.byte	0x1
	.uleb128 0x366
	.ascii "LANG_MACEDONIAN 0x2f\0"
	.byte	0x1
	.uleb128 0x367
	.ascii "LANG_MALAY 0x3e\0"
	.byte	0x1
	.uleb128 0x368
	.ascii "LANG_MALAYALAM 0x4c\0"
	.byte	0x1
	.uleb128 0x369
	.ascii "LANG_MALTESE 0x3a\0"
	.byte	0x1
	.uleb128 0x36a
	.ascii "LANG_MANIPURI 0x58\0"
	.byte	0x1
	.uleb128 0x36b
	.ascii "LANG_MAORI 0x81\0"
	.byte	0x1
	.uleb128 0x36c
	.ascii "LANG_MAPUDUNGUN 0x7a\0"
	.byte	0x1
	.uleb128 0x36d
	.ascii "LANG_MARATHI 0x4e\0"
	.byte	0x1
	.uleb128 0x36e
	.ascii "LANG_MOHAWK 0x7c\0"
	.byte	0x1
	.uleb128 0x36f
	.ascii "LANG_MONGOLIAN 0x50\0"
	.byte	0x1
	.uleb128 0x370
	.ascii "LANG_NEPALI 0x61\0"
	.byte	0x1
	.uleb128 0x371
	.ascii "LANG_NORWEGIAN 0x14\0"
	.byte	0x1
	.uleb128 0x372
	.ascii "LANG_OCCITAN 0x82\0"
	.byte	0x1
	.uleb128 0x373
	.ascii "LANG_ODIA 0x48\0"
	.byte	0x1
	.uleb128 0x374
	.ascii "LANG_ORIYA 0x48\0"
	.byte	0x1
	.uleb128 0x375
	.ascii "LANG_PASHTO 0x63\0"
	.byte	0x1
	.uleb128 0x376
	.ascii "LANG_PERSIAN 0x29\0"
	.byte	0x1
	.uleb128 0x377
	.ascii "LANG_POLISH 0x15\0"
	.byte	0x1
	.uleb128 0x378
	.ascii "LANG_PORTUGUESE 0x16\0"
	.byte	0x1
	.uleb128 0x379
	.ascii "LANG_PULAR 0x67\0"
	.byte	0x1
	.uleb128 0x37a
	.ascii "LANG_PUNJABI 0x46\0"
	.byte	0x1
	.uleb128 0x37b
	.ascii "LANG_QUECHUA 0x6b\0"
	.byte	0x1
	.uleb128 0x37c
	.ascii "LANG_ROMANIAN 0x18\0"
	.byte	0x1
	.uleb128 0x37d
	.ascii "LANG_ROMANSH 0x17\0"
	.byte	0x1
	.uleb128 0x37e
	.ascii "LANG_RUSSIAN 0x19\0"
	.byte	0x1
	.uleb128 0x37f
	.ascii "LANG_SAKHA 0x85\0"
	.byte	0x1
	.uleb128 0x380
	.ascii "LANG_SAMI 0x3b\0"
	.byte	0x1
	.uleb128 0x381
	.ascii "LANG_SANSKRIT 0x4f\0"
	.byte	0x1
	.uleb128 0x382
	.ascii "LANG_SCOTTISH_GAELIC 0x91\0"
	.byte	0x1
	.uleb128 0x383
	.ascii "LANG_SERBIAN 0x1a\0"
	.byte	0x1
	.uleb128 0x384
	.ascii "LANG_SERBIAN_NEUTRAL 0x7c1a\0"
	.byte	0x1
	.uleb128 0x385
	.ascii "LANG_SINDHI 0x59\0"
	.byte	0x1
	.uleb128 0x386
	.ascii "LANG_SINHALESE 0x5b\0"
	.byte	0x1
	.uleb128 0x387
	.ascii "LANG_SLOVAK 0x1b\0"
	.byte	0x1
	.uleb128 0x388
	.ascii "LANG_SLOVENIAN 0x24\0"
	.byte	0x1
	.uleb128 0x389
	.ascii "LANG_SOTHO 0x6c\0"
	.byte	0x1
	.uleb128 0x38a
	.ascii "LANG_SPANISH 0x0a\0"
	.byte	0x1
	.uleb128 0x38b
	.ascii "LANG_SWAHILI 0x41\0"
	.byte	0x1
	.uleb128 0x38c
	.ascii "LANG_SWEDISH 0x1d\0"
	.byte	0x1
	.uleb128 0x38d
	.ascii "LANG_SYRIAC 0x5a\0"
	.byte	0x1
	.uleb128 0x38e
	.ascii "LANG_TAJIK 0x28\0"
	.byte	0x1
	.uleb128 0x38f
	.ascii "LANG_TAMAZIGHT 0x5f\0"
	.byte	0x1
	.uleb128 0x390
	.ascii "LANG_TAMIL 0x49\0"
	.byte	0x1
	.uleb128 0x391
	.ascii "LANG_TATAR 0x44\0"
	.byte	0x1
	.uleb128 0x392
	.ascii "LANG_TELUGU 0x4a\0"
	.byte	0x1
	.uleb128 0x393
	.ascii "LANG_THAI 0x1e\0"
	.byte	0x1
	.uleb128 0x394
	.ascii "LANG_TIBETAN 0x51\0"
	.byte	0x1
	.uleb128 0x395
	.ascii "LANG_TIGRIGNA 0x73\0"
	.byte	0x1
	.uleb128 0x396
	.ascii "LANG_TIGRINYA 0x73\0"
	.byte	0x1
	.uleb128 0x397
	.ascii "LANG_TSWANA 0x32\0"
	.byte	0x1
	.uleb128 0x398
	.ascii "LANG_TURKISH 0x1f\0"
	.byte	0x1
	.uleb128 0x399
	.ascii "LANG_TURKMEN 0x42\0"
	.byte	0x1
	.uleb128 0x39a
	.ascii "LANG_UIGHUR 0x80\0"
	.byte	0x1
	.uleb128 0x39b
	.ascii "LANG_UKRAINIAN 0x22\0"
	.byte	0x1
	.uleb128 0x39c
	.ascii "LANG_UPPER_SORBIAN 0x2e\0"
	.byte	0x1
	.uleb128 0x39d
	.ascii "LANG_URDU 0x20\0"
	.byte	0x1
	.uleb128 0x39e
	.ascii "LANG_UZBEK 0x43\0"
	.byte	0x1
	.uleb128 0x39f
	.ascii "LANG_VALENCIAN 0x03\0"
	.byte	0x1
	.uleb128 0x3a0
	.ascii "LANG_VIETNAMESE 0x2a\0"
	.byte	0x1
	.uleb128 0x3a1
	.ascii "LANG_WELSH 0x52\0"
	.byte	0x1
	.uleb128 0x3a2
	.ascii "LANG_WOLOF 0x88\0"
	.byte	0x1
	.uleb128 0x3a3
	.ascii "LANG_XHOSA 0x34\0"
	.byte	0x1
	.uleb128 0x3a4
	.ascii "LANG_YAKUT 0x85\0"
	.byte	0x1
	.uleb128 0x3a5
	.ascii "LANG_YI 0x78\0"
	.byte	0x1
	.uleb128 0x3a6
	.ascii "LANG_YORUBA 0x6a\0"
	.byte	0x1
	.uleb128 0x3a7
	.ascii "LANG_ZULU 0x35\0"
	.byte	0x1
	.uleb128 0x3a9
	.ascii "SUBLANG_NEUTRAL 0x00\0"
	.byte	0x1
	.uleb128 0x3aa
	.ascii "SUBLANG_DEFAULT 0x01\0"
	.byte	0x1
	.uleb128 0x3ab
	.ascii "SUBLANG_SYS_DEFAULT 0x02\0"
	.byte	0x1
	.uleb128 0x3ac
	.ascii "SUBLANG_CUSTOM_DEFAULT 0x03\0"
	.byte	0x1
	.uleb128 0x3ad
	.ascii "SUBLANG_CUSTOM_UNSPECIFIED 0x04\0"
	.byte	0x1
	.uleb128 0x3ae
	.ascii "SUBLANG_UI_CUSTOM_DEFAULT 0x05\0"
	.byte	0x1
	.uleb128 0x3b0
	.ascii "SUBLANG_AFRIKAANS_SOUTH_AFRICA 0x01\0"
	.byte	0x1
	.uleb128 0x3b1
	.ascii "SUBLANG_ALBANIAN_ALBANIA 0x01\0"
	.byte	0x1
	.uleb128 0x3b2
	.ascii "SUBLANG_ALSATIAN_FRANCE 0x01\0"
	.byte	0x1
	.uleb128 0x3b3
	.ascii "SUBLANG_AMHARIC_ETHIOPIA 0x01\0"
	.byte	0x1
	.uleb128 0x3b4
	.ascii "SUBLANG_ARABIC_SAUDI_ARABIA 0x01\0"
	.byte	0x1
	.uleb128 0x3b5
	.ascii "SUBLANG_ARABIC_IRAQ 0x02\0"
	.byte	0x1
	.uleb128 0x3b6
	.ascii "SUBLANG_ARABIC_EGYPT 0x03\0"
	.byte	0x1
	.uleb128 0x3b7
	.ascii "SUBLANG_ARABIC_LIBYA 0x04\0"
	.byte	0x1
	.uleb128 0x3b8
	.ascii "SUBLANG_ARABIC_ALGERIA 0x05\0"
	.byte	0x1
	.uleb128 0x3b9
	.ascii "SUBLANG_ARABIC_MOROCCO 0x06\0"
	.byte	0x1
	.uleb128 0x3ba
	.ascii "SUBLANG_ARABIC_TUNISIA 0x07\0"
	.byte	0x1
	.uleb128 0x3bb
	.ascii "SUBLANG_ARABIC_OMAN 0x08\0"
	.byte	0x1
	.uleb128 0x3bc
	.ascii "SUBLANG_ARABIC_YEMEN 0x09\0"
	.byte	0x1
	.uleb128 0x3bd
	.ascii "SUBLANG_ARABIC_SYRIA 0x0a\0"
	.byte	0x1
	.uleb128 0x3be
	.ascii "SUBLANG_ARABIC_JORDAN 0x0b\0"
	.byte	0x1
	.uleb128 0x3bf
	.ascii "SUBLANG_ARABIC_LEBANON 0x0c\0"
	.byte	0x1
	.uleb128 0x3c0
	.ascii "SUBLANG_ARABIC_KUWAIT 0x0d\0"
	.byte	0x1
	.uleb128 0x3c1
	.ascii "SUBLANG_ARABIC_UAE 0x0e\0"
	.byte	0x1
	.uleb128 0x3c2
	.ascii "SUBLANG_ARABIC_BAHRAIN 0x0f\0"
	.byte	0x1
	.uleb128 0x3c3
	.ascii "SUBLANG_ARABIC_QATAR 0x10\0"
	.byte	0x1
	.uleb128 0x3c4
	.ascii "SUBLANG_ARMENIAN_ARMENIA 0x01\0"
	.byte	0x1
	.uleb128 0x3c5
	.ascii "SUBLANG_ASSAMESE_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x3c6
	.ascii "SUBLANG_AZERI_LATIN 0x01\0"
	.byte	0x1
	.uleb128 0x3c7
	.ascii "SUBLANG_AZERI_CYRILLIC 0x02\0"
	.byte	0x1
	.uleb128 0x3c8
	.ascii "SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN 0x01\0"
	.byte	0x1
	.uleb128 0x3c9
	.ascii "SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC 0x02\0"
	.byte	0x1
	.uleb128 0x3ca
	.ascii "SUBLANG_BANGLA_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x3cb
	.ascii "SUBLANG_BANGLA_BANGLADESH 0x02\0"
	.byte	0x1
	.uleb128 0x3cc
	.ascii "SUBLANG_BASHKIR_RUSSIA 0x01\0"
	.byte	0x1
	.uleb128 0x3cd
	.ascii "SUBLANG_BASQUE_BASQUE 0x01\0"
	.byte	0x1
	.uleb128 0x3ce
	.ascii "SUBLANG_BELARUSIAN_BELARUS 0x01\0"
	.byte	0x1
	.uleb128 0x3cf
	.ascii "SUBLANG_BENGALI_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x3d0
	.ascii "SUBLANG_BENGALI_BANGLADESH 0x02\0"
	.byte	0x1
	.uleb128 0x3d1
	.ascii "SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN 0x05\0"
	.byte	0x1
	.uleb128 0x3d2
	.ascii "SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC 0x08\0"
	.byte	0x1
	.uleb128 0x3d3
	.ascii "SUBLANG_BRETON_FRANCE 0x01\0"
	.byte	0x1
	.uleb128 0x3d4
	.ascii "SUBLANG_BULGARIAN_BULGARIA 0x01\0"
	.byte	0x1
	.uleb128 0x3d5
	.ascii "SUBLANG_CATALAN_CATALAN 0x01\0"
	.byte	0x1
	.uleb128 0x3d6
	.ascii "SUBLANG_CENTRAL_KURDISH_IRAQ 0x01\0"
	.byte	0x1
	.uleb128 0x3d7
	.ascii "SUBLANG_CHEROKEE_CHEROKEE 0x01\0"
	.byte	0x1
	.uleb128 0x3d8
	.ascii "SUBLANG_CHINESE_TRADITIONAL 0x01\0"
	.byte	0x1
	.uleb128 0x3d9
	.ascii "SUBLANG_CHINESE_SIMPLIFIED 0x02\0"
	.byte	0x1
	.uleb128 0x3da
	.ascii "SUBLANG_CHINESE_HONGKONG 0x03\0"
	.byte	0x1
	.uleb128 0x3db
	.ascii "SUBLANG_CHINESE_SINGAPORE 0x04\0"
	.byte	0x1
	.uleb128 0x3dc
	.ascii "SUBLANG_CHINESE_MACAU 0x05\0"
	.byte	0x1
	.uleb128 0x3dd
	.ascii "SUBLANG_CORSICAN_FRANCE 0x01\0"
	.byte	0x1
	.uleb128 0x3de
	.ascii "SUBLANG_CZECH_CZECH_REPUBLIC 0x01\0"
	.byte	0x1
	.uleb128 0x3df
	.ascii "SUBLANG_CROATIAN_CROATIA 0x01\0"
	.byte	0x1
	.uleb128 0x3e0
	.ascii "SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN 0x04\0"
	.byte	0x1
	.uleb128 0x3e1
	.ascii "SUBLANG_DANISH_DENMARK 0x01\0"
	.byte	0x1
	.uleb128 0x3e2
	.ascii "SUBLANG_DARI_AFGHANISTAN 0x01\0"
	.byte	0x1
	.uleb128 0x3e3
	.ascii "SUBLANG_DIVEHI_MALDIVES 0x01\0"
	.byte	0x1
	.uleb128 0x3e4
	.ascii "SUBLANG_DUTCH 0x01\0"
	.byte	0x1
	.uleb128 0x3e5
	.ascii "SUBLANG_DUTCH_BELGIAN 0x02\0"
	.byte	0x1
	.uleb128 0x3e6
	.ascii "SUBLANG_ENGLISH_US 0x01\0"
	.byte	0x1
	.uleb128 0x3e7
	.ascii "SUBLANG_ENGLISH_UK 0x02\0"
	.byte	0x1
	.uleb128 0x3e8
	.ascii "SUBLANG_ENGLISH_AUS 0x03\0"
	.byte	0x1
	.uleb128 0x3e9
	.ascii "SUBLANG_ENGLISH_CAN 0x04\0"
	.byte	0x1
	.uleb128 0x3ea
	.ascii "SUBLANG_ENGLISH_NZ 0x05\0"
	.byte	0x1
	.uleb128 0x3eb
	.ascii "SUBLANG_ENGLISH_IRELAND 0x06\0"
	.byte	0x1
	.uleb128 0x3ec
	.ascii "SUBLANG_ENGLISH_EIRE 0x06\0"
	.byte	0x1
	.uleb128 0x3ed
	.ascii "SUBLANG_ENGLISH_SOUTH_AFRICA 0x07\0"
	.byte	0x1
	.uleb128 0x3ee
	.ascii "SUBLANG_ENGLISH_JAMAICA 0x08\0"
	.byte	0x1
	.uleb128 0x3ef
	.ascii "SUBLANG_ENGLISH_CARIBBEAN 0x09\0"
	.byte	0x1
	.uleb128 0x3f0
	.ascii "SUBLANG_ENGLISH_BELIZE 0x0a\0"
	.byte	0x1
	.uleb128 0x3f1
	.ascii "SUBLANG_ENGLISH_TRINIDAD 0x0b\0"
	.byte	0x1
	.uleb128 0x3f2
	.ascii "SUBLANG_ENGLISH_ZIMBABWE 0x0c\0"
	.byte	0x1
	.uleb128 0x3f3
	.ascii "SUBLANG_ENGLISH_PHILIPPINES 0x0d\0"
	.byte	0x1
	.uleb128 0x3f4
	.ascii "SUBLANG_ENGLISH_INDIA 0x10\0"
	.byte	0x1
	.uleb128 0x3f5
	.ascii "SUBLANG_ENGLISH_MALAYSIA 0x11\0"
	.byte	0x1
	.uleb128 0x3f6
	.ascii "SUBLANG_ENGLISH_SINGAPORE 0x12\0"
	.byte	0x1
	.uleb128 0x3f7
	.ascii "SUBLANG_ESTONIAN_ESTONIA 0x01\0"
	.byte	0x1
	.uleb128 0x3f8
	.ascii "SUBLANG_FAEROESE_FAROE_ISLANDS 0x01\0"
	.byte	0x1
	.uleb128 0x3f9
	.ascii "SUBLANG_FILIPINO_PHILIPPINES 0x01\0"
	.byte	0x1
	.uleb128 0x3fa
	.ascii "SUBLANG_FINNISH_FINLAND 0x01\0"
	.byte	0x1
	.uleb128 0x3fb
	.ascii "SUBLANG_FRENCH 0x01\0"
	.byte	0x1
	.uleb128 0x3fc
	.ascii "SUBLANG_FRENCH_BELGIAN 0x02\0"
	.byte	0x1
	.uleb128 0x3fd
	.ascii "SUBLANG_FRENCH_CANADIAN 0x03\0"
	.byte	0x1
	.uleb128 0x3fe
	.ascii "SUBLANG_FRENCH_SWISS 0x04\0"
	.byte	0x1
	.uleb128 0x3ff
	.ascii "SUBLANG_FRENCH_LUXEMBOURG 0x05\0"
	.byte	0x1
	.uleb128 0x400
	.ascii "SUBLANG_FRENCH_MONACO 0x06\0"
	.byte	0x1
	.uleb128 0x401
	.ascii "SUBLANG_FRISIAN_NETHERLANDS 0x01\0"
	.byte	0x1
	.uleb128 0x402
	.ascii "SUBLANG_FULAH_SENEGAL 0x02\0"
	.byte	0x1
	.uleb128 0x403
	.ascii "SUBLANG_GALICIAN_GALICIAN 0x01\0"
	.byte	0x1
	.uleb128 0x404
	.ascii "SUBLANG_GEORGIAN_GEORGIA 0x01\0"
	.byte	0x1
	.uleb128 0x405
	.ascii "SUBLANG_GERMAN 0x01\0"
	.byte	0x1
	.uleb128 0x406
	.ascii "SUBLANG_GERMAN_SWISS 0x02\0"
	.byte	0x1
	.uleb128 0x407
	.ascii "SUBLANG_GERMAN_AUSTRIAN 0x03\0"
	.byte	0x1
	.uleb128 0x408
	.ascii "SUBLANG_GERMAN_LUXEMBOURG 0x04\0"
	.byte	0x1
	.uleb128 0x409
	.ascii "SUBLANG_GERMAN_LIECHTENSTEIN 0x05\0"
	.byte	0x1
	.uleb128 0x40a
	.ascii "SUBLANG_GREEK_GREECE 0x01\0"
	.byte	0x1
	.uleb128 0x40b
	.ascii "SUBLANG_GREENLANDIC_GREENLAND 0x01\0"
	.byte	0x1
	.uleb128 0x40c
	.ascii "SUBLANG_GUJARATI_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x40d
	.ascii "SUBLANG_HAUSA_NIGERIA_LATIN 0x01\0"
	.byte	0x1
	.uleb128 0x40e
	.ascii "SUBLANG_HAUSA_NIGERIA SUBLANG_HAUSA_NIGERIA_LATIN\0"
	.byte	0x1
	.uleb128 0x40f
	.ascii "SUBLANG_HAWAIIAN_US 0x01\0"
	.byte	0x1
	.uleb128 0x410
	.ascii "SUBLANG_HEBREW_ISRAEL 0x01\0"
	.byte	0x1
	.uleb128 0x411
	.ascii "SUBLANG_HINDI_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x412
	.ascii "SUBLANG_HUNGARIAN_HUNGARY 0x01\0"
	.byte	0x1
	.uleb128 0x413
	.ascii "SUBLANG_ICELANDIC_ICELAND 0x01\0"
	.byte	0x1
	.uleb128 0x414
	.ascii "SUBLANG_IGBO_NIGERIA 0x01\0"
	.byte	0x1
	.uleb128 0x415
	.ascii "SUBLANG_INDONESIAN_INDONESIA 0x01\0"
	.byte	0x1
	.uleb128 0x416
	.ascii "SUBLANG_INUKTITUT_CANADA 0x01\0"
	.byte	0x1
	.uleb128 0x417
	.ascii "SUBLANG_INUKTITUT_CANADA_LATIN 0x02\0"
	.byte	0x1
	.uleb128 0x418
	.ascii "SUBLANG_IRISH_IRELAND 0x02\0"
	.byte	0x1
	.uleb128 0x419
	.ascii "SUBLANG_ITALIAN 0x01\0"
	.byte	0x1
	.uleb128 0x41a
	.ascii "SUBLANG_ITALIAN_SWISS 0x02\0"
	.byte	0x1
	.uleb128 0x41b
	.ascii "SUBLANG_JAPANESE_JAPAN 0x01\0"
	.byte	0x1
	.uleb128 0x41c
	.ascii "SUBLANG_KANNADA_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x41d
	.ascii "SUBLANG_KASHMIRI_INDIA 0x02\0"
	.byte	0x1
	.uleb128 0x41e
	.ascii "SUBLANG_KASHMIRI_SASIA 0x02\0"
	.byte	0x1
	.uleb128 0x41f
	.ascii "SUBLANG_KAZAK_KAZAKHSTAN 0x01\0"
	.byte	0x1
	.uleb128 0x420
	.ascii "SUBLANG_KHMER_CAMBODIA 0x01\0"
	.byte	0x1
	.uleb128 0x421
	.ascii "SUBLANG_KICHE_GUATEMALA 0x01\0"
	.byte	0x1
	.uleb128 0x422
	.ascii "SUBLANG_KINYARWANDA_RWANDA 0x01\0"
	.byte	0x1
	.uleb128 0x423
	.ascii "SUBLANG_KONKANI_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x424
	.ascii "SUBLANG_KOREAN 0x01\0"
	.byte	0x1
	.uleb128 0x425
	.ascii "SUBLANG_KYRGYZ_KYRGYZSTAN 0x01\0"
	.byte	0x1
	.uleb128 0x426
	.ascii "SUBLANG_LAO_LAO 0x01\0"
	.byte	0x1
	.uleb128 0x427
	.ascii "SUBLANG_LAO_LAO_PDR SUBLANG_LAO_LAO\0"
	.byte	0x1
	.uleb128 0x428
	.ascii "SUBLANG_LATVIAN_LATVIA 0x01\0"
	.byte	0x1
	.uleb128 0x42c
	.ascii "SUBLANG_LITHUANIAN 0x01\0"
	.byte	0x1
	.uleb128 0x42d
	.ascii "SUBLANG_LOWER_SORBIAN_GERMANY 0x02\0"
	.byte	0x1
	.uleb128 0x42e
	.ascii "SUBLANG_LUXEMBOURGISH_LUXEMBOURG 0x01\0"
	.byte	0x1
	.uleb128 0x42f
	.ascii "SUBLANG_MACEDONIAN_MACEDONIA 0x01\0"
	.byte	0x1
	.uleb128 0x430
	.ascii "SUBLANG_MALAY_MALAYSIA 0x01\0"
	.byte	0x1
	.uleb128 0x431
	.ascii "SUBLANG_MALAY_BRUNEI_DARUSSALAM 0x02\0"
	.byte	0x1
	.uleb128 0x432
	.ascii "SUBLANG_MALAYALAM_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x433
	.ascii "SUBLANG_MALTESE_MALTA 0x01\0"
	.byte	0x1
	.uleb128 0x434
	.ascii "SUBLANG_MAORI_NEW_ZEALAND 0x01\0"
	.byte	0x1
	.uleb128 0x435
	.ascii "SUBLANG_MAPUDUNGUN_CHILE 0x01\0"
	.byte	0x1
	.uleb128 0x436
	.ascii "SUBLANG_MARATHI_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x437
	.ascii "SUBLANG_MOHAWK_MOHAWK 0x01\0"
	.byte	0x1
	.uleb128 0x438
	.ascii "SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA 0x01\0"
	.byte	0x1
	.uleb128 0x439
	.ascii "SUBLANG_MONGOLIAN_PRC 0x02\0"
	.byte	0x1
	.uleb128 0x43a
	.ascii "SUBLANG_NEPALI_NEPAL 0x01\0"
	.byte	0x1
	.uleb128 0x43b
	.ascii "SUBLANG_NEPALI_INDIA 0x02\0"
	.byte	0x1
	.uleb128 0x43c
	.ascii "SUBLANG_NORWEGIAN_BOKMAL 0x01\0"
	.byte	0x1
	.uleb128 0x43d
	.ascii "SUBLANG_NORWEGIAN_NYNORSK 0x02\0"
	.byte	0x1
	.uleb128 0x43e
	.ascii "SUBLANG_OCCITAN_FRANCE 0x01\0"
	.byte	0x1
	.uleb128 0x43f
	.ascii "SUBLANG_ORIYA_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x440
	.ascii "SUBLANG_PASHTO_AFGHANISTAN 0x01\0"
	.byte	0x1
	.uleb128 0x441
	.ascii "SUBLANG_PERSIAN_IRAN 0x01\0"
	.byte	0x1
	.uleb128 0x442
	.ascii "SUBLANG_POLISH_POLAND 0x01\0"
	.byte	0x1
	.uleb128 0x443
	.ascii "SUBLANG_PORTUGUESE_BRAZILIAN 0x01\0"
	.byte	0x1
	.uleb128 0x447
	.ascii "SUBLANG_PORTUGUESE 0x02\0"
	.byte	0x1
	.uleb128 0x448
	.ascii "SUBLANG_PULAR_SENEGAL 0x02\0"
	.byte	0x1
	.uleb128 0x449
	.ascii "SUBLANG_PUNJABI_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x44a
	.ascii "SUBLANG_PUNJABI_PAKISTAN 0x02\0"
	.byte	0x1
	.uleb128 0x44b
	.ascii "SUBLANG_QUECHUA_BOLIVIA 0x01\0"
	.byte	0x1
	.uleb128 0x44c
	.ascii "SUBLANG_QUECHUA_ECUADOR 0x02\0"
	.byte	0x1
	.uleb128 0x44d
	.ascii "SUBLANG_QUECHUA_PERU 0x03\0"
	.byte	0x1
	.uleb128 0x44e
	.ascii "SUBLANG_ROMANIAN_ROMANIA 0x01\0"
	.byte	0x1
	.uleb128 0x450
	.ascii "SUBLANG_ROMANSH_SWITZERLAND 0x01\0"
	.byte	0x1
	.uleb128 0x451
	.ascii "SUBLANG_RUSSIAN_RUSSIA 0x01\0"
	.byte	0x1
	.uleb128 0x452
	.ascii "SUBLANG_SAKHA_RUSSIA 0x01\0"
	.byte	0x1
	.uleb128 0x453
	.ascii "SUBLANG_SAMI_NORTHERN_NORWAY 0x01\0"
	.byte	0x1
	.uleb128 0x454
	.ascii "SUBLANG_SAMI_NORTHERN_SWEDEN 0x02\0"
	.byte	0x1
	.uleb128 0x455
	.ascii "SUBLANG_SAMI_NORTHERN_FINLAND 0x03\0"
	.byte	0x1
	.uleb128 0x456
	.ascii "SUBLANG_SAMI_LULE_NORWAY 0x04\0"
	.byte	0x1
	.uleb128 0x457
	.ascii "SUBLANG_SAMI_LULE_SWEDEN 0x05\0"
	.byte	0x1
	.uleb128 0x458
	.ascii "SUBLANG_SAMI_SOUTHERN_NORWAY 0x06\0"
	.byte	0x1
	.uleb128 0x459
	.ascii "SUBLANG_SAMI_SOUTHERN_SWEDEN 0x07\0"
	.byte	0x1
	.uleb128 0x45a
	.ascii "SUBLANG_SAMI_SKOLT_FINLAND 0x08\0"
	.byte	0x1
	.uleb128 0x45b
	.ascii "SUBLANG_SAMI_INARI_FINLAND 0x09\0"
	.byte	0x1
	.uleb128 0x45c
	.ascii "SUBLANG_SANSKRIT_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x45d
	.ascii "SUBLANG_SCOTTISH_GAELIC 0x01\0"
	.byte	0x1
	.uleb128 0x45e
	.ascii "SUBLANG_SERBIAN_LATIN 0x02\0"
	.byte	0x1
	.uleb128 0x45f
	.ascii "SUBLANG_SERBIAN_CYRILLIC 0x03\0"
	.byte	0x1
	.uleb128 0x460
	.ascii "SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN 0x06\0"
	.byte	0x1
	.uleb128 0x461
	.ascii "SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC 0x07\0"
	.byte	0x1
	.uleb128 0x462
	.ascii "SUBLANG_SERBIAN_MONTENEGRO_LATIN 0x0b\0"
	.byte	0x1
	.uleb128 0x463
	.ascii "SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC 0x0c\0"
	.byte	0x1
	.uleb128 0x464
	.ascii "SUBLANG_SERBIAN_SERBIA_LATIN 0x09\0"
	.byte	0x1
	.uleb128 0x465
	.ascii "SUBLANG_SERBIAN_SERBIA_CYRILLIC 0x0a\0"
	.byte	0x1
	.uleb128 0x466
	.ascii "SUBLANG_SINDHI_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x467
	.ascii "SUBLANG_SINDHI_AFGHANISTAN 0x02\0"
	.byte	0x1
	.uleb128 0x468
	.ascii "SUBLANG_SINDHI_PAKISTAN 0x02\0"
	.byte	0x1
	.uleb128 0x469
	.ascii "SUBLANG_SINHALESE_SRI_LANKA 0x01\0"
	.byte	0x1
	.uleb128 0x46a
	.ascii "SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA 0x01\0"
	.byte	0x1
	.uleb128 0x46b
	.ascii "SUBLANG_SLOVAK_SLOVAKIA 0x01\0"
	.byte	0x1
	.uleb128 0x46c
	.ascii "SUBLANG_SLOVENIAN_SLOVENIA 0x01\0"
	.byte	0x1
	.uleb128 0x46d
	.ascii "SUBLANG_SPANISH 0x01\0"
	.byte	0x1
	.uleb128 0x46e
	.ascii "SUBLANG_SPANISH_MEXICAN 0x02\0"
	.byte	0x1
	.uleb128 0x46f
	.ascii "SUBLANG_SPANISH_MODERN 0x03\0"
	.byte	0x1
	.uleb128 0x470
	.ascii "SUBLANG_SPANISH_GUATEMALA 0x04\0"
	.byte	0x1
	.uleb128 0x471
	.ascii "SUBLANG_SPANISH_COSTA_RICA 0x05\0"
	.byte	0x1
	.uleb128 0x472
	.ascii "SUBLANG_SPANISH_PANAMA 0x06\0"
	.byte	0x1
	.uleb128 0x473
	.ascii "SUBLANG_SPANISH_DOMINICAN_REPUBLIC 0x07\0"
	.byte	0x1
	.uleb128 0x474
	.ascii "SUBLANG_SPANISH_VENEZUELA 0x08\0"
	.byte	0x1
	.uleb128 0x475
	.ascii "SUBLANG_SPANISH_COLOMBIA 0x09\0"
	.byte	0x1
	.uleb128 0x476
	.ascii "SUBLANG_SPANISH_PERU 0x0a\0"
	.byte	0x1
	.uleb128 0x477
	.ascii "SUBLANG_SPANISH_ARGENTINA 0x0b\0"
	.byte	0x1
	.uleb128 0x478
	.ascii "SUBLANG_SPANISH_ECUADOR 0x0c\0"
	.byte	0x1
	.uleb128 0x479
	.ascii "SUBLANG_SPANISH_CHILE 0x0d\0"
	.byte	0x1
	.uleb128 0x47a
	.ascii "SUBLANG_SPANISH_URUGUAY 0x0e\0"
	.byte	0x1
	.uleb128 0x47b
	.ascii "SUBLANG_SPANISH_PARAGUAY 0x0f\0"
	.byte	0x1
	.uleb128 0x47c
	.ascii "SUBLANG_SPANISH_BOLIVIA 0x10\0"
	.byte	0x1
	.uleb128 0x47d
	.ascii "SUBLANG_SPANISH_EL_SALVADOR 0x11\0"
	.byte	0x1
	.uleb128 0x47e
	.ascii "SUBLANG_SPANISH_HONDURAS 0x12\0"
	.byte	0x1
	.uleb128 0x47f
	.ascii "SUBLANG_SPANISH_NICARAGUA 0x13\0"
	.byte	0x1
	.uleb128 0x480
	.ascii "SUBLANG_SPANISH_PUERTO_RICO 0x14\0"
	.byte	0x1
	.uleb128 0x481
	.ascii "SUBLANG_SPANISH_US 0x15\0"
	.byte	0x1
	.uleb128 0x482
	.ascii "SUBLANG_SWAHILI_KENYA 0x01\0"
	.byte	0x1
	.uleb128 0x486
	.ascii "SUBLANG_SWEDISH 0x01\0"
	.byte	0x1
	.uleb128 0x487
	.ascii "SUBLANG_SWEDISH_FINLAND 0x02\0"
	.byte	0x1
	.uleb128 0x488
	.ascii "SUBLANG_SYRIAC 0x01\0"
	.byte	0x1
	.uleb128 0x489
	.ascii "SUBLANG_SYRIAC_SYRIA SUBLANG_SYRIAC\0"
	.byte	0x1
	.uleb128 0x48a
	.ascii "SUBLANG_TAJIK_TAJIKISTAN 0x01\0"
	.byte	0x1
	.uleb128 0x48b
	.ascii "SUBLANG_TAMAZIGHT_ALGERIA_LATIN 0x02\0"
	.byte	0x1
	.uleb128 0x48c
	.ascii "SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH 0x04\0"
	.byte	0x1
	.uleb128 0x48d
	.ascii "SUBLANG_TAMIL_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x48e
	.ascii "SUBLANG_TAMIL_SRI_LANKA 0x02\0"
	.byte	0x1
	.uleb128 0x48f
	.ascii "SUBLANG_TATAR_RUSSIA 0x01\0"
	.byte	0x1
	.uleb128 0x490
	.ascii "SUBLANG_TELUGU_INDIA 0x01\0"
	.byte	0x1
	.uleb128 0x491
	.ascii "SUBLANG_THAI_THAILAND 0x01\0"
	.byte	0x1
	.uleb128 0x492
	.ascii "SUBLANG_TIBETAN_PRC 0x01\0"
	.byte	0x1
	.uleb128 0x493
	.ascii "SUBLANG_TIBETAN_BHUTAN 0x02\0"
	.byte	0x1
	.uleb128 0x494
	.ascii "SUBLANG_TIGRIGNA_ERITREA 0x02\0"
	.byte	0x1
	.uleb128 0x495
	.ascii "SUBLANG_TIGRINYA_ERITREA 0x02\0"
	.byte	0x1
	.uleb128 0x496
	.ascii "SUBLANG_TIGRINYA_ETHIOPIA 0x01\0"
	.byte	0x1
	.uleb128 0x497
	.ascii "SUBLANG_TSWANA_BOTSWANA 0x02\0"
	.byte	0x1
	.uleb128 0x498
	.ascii "SUBLANG_TSWANA_SOUTH_AFRICA 0x01\0"
	.byte	0x1
	.uleb128 0x499
	.ascii "SUBLANG_TURKISH_TURKEY 0x01\0"
	.byte	0x1
	.uleb128 0x49a
	.ascii "SUBLANG_TURKMEN_TURKMENISTAN 0x01\0"
	.byte	0x1
	.uleb128 0x49b
	.ascii "SUBLANG_UIGHUR_PRC 0x01\0"
	.byte	0x1
	.uleb128 0x49c
	.ascii "SUBLANG_UKRAINIAN_UKRAINE 0x01\0"
	.byte	0x1
	.uleb128 0x49d
	.ascii "SUBLANG_UPPER_SORBIAN_GERMANY 0x01\0"
	.byte	0x1
	.uleb128 0x49e
	.ascii "SUBLANG_URDU_PAKISTAN 0x01\0"
	.byte	0x1
	.uleb128 0x49f
	.ascii "SUBLANG_URDU_INDIA 0x02\0"
	.byte	0x1
	.uleb128 0x4a0
	.ascii "SUBLANG_UZBEK_LATIN 0x01\0"
	.byte	0x1
	.uleb128 0x4a1
	.ascii "SUBLANG_UZBEK_CYRILLIC 0x02\0"
	.byte	0x1
	.uleb128 0x4a2
	.ascii "SUBLANG_VALENCIAN_VALENCIA 0x02\0"
	.byte	0x1
	.uleb128 0x4a3
	.ascii "SUBLANG_VIETNAMESE_VIETNAM 0x01\0"
	.byte	0x1
	.uleb128 0x4a4
	.ascii "SUBLANG_WELSH_UNITED_KINGDOM 0x01\0"
	.byte	0x1
	.uleb128 0x4a5
	.ascii "SUBLANG_WOLOF_SENEGAL 0x01\0"
	.byte	0x1
	.uleb128 0x4a6
	.ascii "SUBLANG_YORUBA_NIGERIA 0x01\0"
	.byte	0x1
	.uleb128 0x4a7
	.ascii "SUBLANG_XHOSA_SOUTH_AFRICA 0x01\0"
	.byte	0x1
	.uleb128 0x4a8
	.ascii "SUBLANG_YAKUT_RUSSIA 0x01\0"
	.byte	0x1
	.uleb128 0x4a9
	.ascii "SUBLANG_YI_PRC 0x01\0"
	.byte	0x1
	.uleb128 0x4aa
	.ascii "SUBLANG_ZULU_SOUTH_AFRICA 0x01\0"
	.byte	0x1
	.uleb128 0x4ac
	.ascii "SORT_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0x4ad
	.ascii "SORT_INVARIANT_MATH 0x1\0"
	.byte	0x1
	.uleb128 0x4af
	.ascii "SORT_JAPANESE_XJIS 0x0\0"
	.byte	0x1
	.uleb128 0x4b0
	.ascii "SORT_JAPANESE_UNICODE 0x1\0"
	.byte	0x1
	.uleb128 0x4b1
	.ascii "SORT_JAPANESE_RADICALSTROKE 0x4\0"
	.byte	0x1
	.uleb128 0x4b3
	.ascii "SORT_CHINESE_BIG5 0x0\0"
	.byte	0x1
	.uleb128 0x4b4
	.ascii "SORT_CHINESE_PRCP 0x0\0"
	.byte	0x1
	.uleb128 0x4b5
	.ascii "SORT_CHINESE_UNICODE 0x1\0"
	.byte	0x1
	.uleb128 0x4b6
	.ascii "SORT_CHINESE_PRC 0x2\0"
	.byte	0x1
	.uleb128 0x4b7
	.ascii "SORT_CHINESE_BOPOMOFO 0x3\0"
	.byte	0x1
	.uleb128 0x4b8
	.ascii "SORT_CHINESE_RADICALSTROKE 0x4\0"
	.byte	0x1
	.uleb128 0x4ba
	.ascii "SORT_KOREAN_KSC 0x0\0"
	.byte	0x1
	.uleb128 0x4bb
	.ascii "SORT_KOREAN_UNICODE 0x1\0"
	.byte	0x1
	.uleb128 0x4bd
	.ascii "SORT_GERMAN_PHONE_BOOK 0x1\0"
	.byte	0x1
	.uleb128 0x4bf
	.ascii "SORT_HUNGARIAN_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0x4c0
	.ascii "SORT_HUNGARIAN_TECHNICAL 0x1\0"
	.byte	0x1
	.uleb128 0x4c2
	.ascii "SORT_GEORGIAN_TRADITIONAL 0x0\0"
	.byte	0x1
	.uleb128 0x4c3
	.ascii "SORT_GEORGIAN_MODERN 0x1\0"
	.byte	0x1
	.uleb128 0x4c5
	.ascii "MAKELANGID(p,s) ((((WORD)(s)) << 10) | (WORD)(p))\0"
	.byte	0x1
	.uleb128 0x4c6
	.ascii "PRIMARYLANGID(lgid) ((WORD)(lgid) & 0x3ff)\0"
	.byte	0x1
	.uleb128 0x4c7
	.ascii "SUBLANGID(lgid) ((WORD)(lgid) >> 10)\0"
	.byte	0x1
	.uleb128 0x4c9
	.ascii "NLS_VALID_LOCALE_MASK 0x000fffff\0"
	.byte	0x1
	.uleb128 0x4cb
	.ascii "MAKELCID(lgid,srtid) ((DWORD)((((DWORD)((WORD)(srtid))) << 16) | ((DWORD)((WORD)(lgid)))))\0"
	.byte	0x1
	.uleb128 0x4cc
	.ascii "MAKESORTLCID(lgid,srtid,ver) ((DWORD)((MAKELCID(lgid,srtid)) | (((DWORD)((WORD)(ver))) << 20)))\0"
	.byte	0x1
	.uleb128 0x4cd
	.ascii "LANGIDFROMLCID(lcid) ((WORD)(lcid))\0"
	.byte	0x1
	.uleb128 0x4ce
	.ascii "SORTIDFROMLCID(lcid) ((WORD)((((DWORD)(lcid)) >> 16) & 0xf))\0"
	.byte	0x1
	.uleb128 0x4cf
	.ascii "SORTVERSIONFROMLCID(lcid) ((WORD)((((DWORD)(lcid)) >> 20) & 0xf))\0"
	.byte	0x1
	.uleb128 0x4d1
	.ascii "LOCALE_NAME_MAX_LENGTH 85\0"
	.byte	0x1
	.uleb128 0x4d2
	.ascii "LANG_SYSTEM_DEFAULT (MAKELANGID(LANG_NEUTRAL,SUBLANG_SYS_DEFAULT))\0"
	.byte	0x1
	.uleb128 0x4d3
	.ascii "LANG_USER_DEFAULT (MAKELANGID(LANG_NEUTRAL,SUBLANG_DEFAULT))\0"
	.byte	0x1
	.uleb128 0x4d5
	.ascii "LOCALE_SYSTEM_DEFAULT (MAKELCID(LANG_SYSTEM_DEFAULT,SORT_DEFAULT))\0"
	.byte	0x1
	.uleb128 0x4d6
	.ascii "LOCALE_USER_DEFAULT (MAKELCID(LANG_USER_DEFAULT,SORT_DEFAULT))\0"
	.byte	0x1
	.uleb128 0x4d8
	.ascii "LOCALE_NEUTRAL (MAKELCID(MAKELANGID(LANG_NEUTRAL,SUBLANG_NEUTRAL),SORT_DEFAULT))\0"
	.byte	0x1
	.uleb128 0x4da
	.ascii "LOCALE_CUSTOM_DEFAULT (MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_CUSTOM_DEFAULT), SORT_DEFAULT))\0"
	.byte	0x1
	.uleb128 0x4db
	.ascii "LOCALE_CUSTOM_UNSPECIFIED (MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_CUSTOM_UNSPECIFIED), SORT_DEFAULT))\0"
	.byte	0x1
	.uleb128 0x4dc
	.ascii "LOCALE_CUSTOM_UI_DEFAULT (MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_UI_CUSTOM_DEFAULT), SORT_DEFAULT))\0"
	.byte	0x1
	.uleb128 0x4de
	.ascii "LOCALE_INVARIANT (MAKELCID(MAKELANGID(LANG_INVARIANT,SUBLANG_NEUTRAL),SORT_DEFAULT))\0"
	.byte	0x1
	.uleb128 0x4e0
	.ascii "UNREFERENCED_PARAMETER(P) {(P) = (P);}\0"
	.byte	0x1
	.uleb128 0x4e1
	.ascii "UNREFERENCED_LOCAL_VARIABLE(V) {(V) = (V);}\0"
	.byte	0x1
	.uleb128 0x4e2
	.ascii "DBG_UNREFERENCED_PARAMETER(P) (P)\0"
	.byte	0x1
	.uleb128 0x4e3
	.ascii "DBG_UNREFERENCED_LOCAL_VARIABLE(V) (V)\0"
	.byte	0x1
	.uleb128 0x4e5
	.ascii "DEFAULT_UNREACHABLE \0"
	.byte	0x1
	.uleb128 0x4e9
	.ascii "STATUS_WAIT_0 ((DWORD)0x00000000)\0"
	.byte	0x1
	.uleb128 0x4ea
	.ascii "STATUS_ABANDONED_WAIT_0 ((DWORD)0x00000080)\0"
	.byte	0x1
	.uleb128 0x4eb
	.ascii "STATUS_USER_APC ((DWORD)0x000000C0)\0"
	.byte	0x1
	.uleb128 0x4ec
	.ascii "STATUS_TIMEOUT ((DWORD)0x00000102)\0"
	.byte	0x1
	.uleb128 0x4ed
	.ascii "STATUS_PENDING ((DWORD)0x00000103)\0"
	.byte	0x1
	.uleb128 0x4ee
	.ascii "DBG_EXCEPTION_HANDLED ((DWORD)0x00010001)\0"
	.byte	0x1
	.uleb128 0x4ef
	.ascii "DBG_CONTINUE ((DWORD)0x00010002)\0"
	.byte	0x1
	.uleb128 0x4f0
	.ascii "STATUS_SEGMENT_NOTIFICATION ((DWORD)0x40000005)\0"
	.byte	0x1
	.uleb128 0x4f1
	.ascii "STATUS_FATAL_APP_EXIT ((DWORD)0x40000015)\0"
	.byte	0x1
	.uleb128 0x4f2
	.ascii "DBG_TERMINATE_THREAD ((DWORD)0x40010003)\0"
	.byte	0x1
	.uleb128 0x4f3
	.ascii "DBG_TERMINATE_PROCESS ((DWORD)0x40010004)\0"
	.byte	0x1
	.uleb128 0x4f4
	.ascii "DBG_CONTROL_C ((DWORD)0x40010005)\0"
	.byte	0x1
	.uleb128 0x4f5
	.ascii "DBG_PRINTEXCEPTION_C ((DWORD)0x40010006)\0"
	.byte	0x1
	.uleb128 0x4f6
	.ascii "DBG_RIPEXCEPTION ((DWORD)0x40010007)\0"
	.byte	0x1
	.uleb128 0x4f7
	.ascii "DBG_CONTROL_BREAK ((DWORD)0x40010008)\0"
	.byte	0x1
	.uleb128 0x4f8
	.ascii "DBG_COMMAND_EXCEPTION ((DWORD)0x40010009)\0"
	.byte	0x1
	.uleb128 0x4f9
	.ascii "STATUS_GUARD_PAGE_VIOLATION ((DWORD)0x80000001)\0"
	.byte	0x1
	.uleb128 0x4fa
	.ascii "STATUS_DATATYPE_MISALIGNMENT ((DWORD)0x80000002)\0"
	.byte	0x1
	.uleb128 0x4fb
	.ascii "STATUS_BREAKPOINT ((DWORD)0x80000003)\0"
	.byte	0x1
	.uleb128 0x4fc
	.ascii "STATUS_SINGLE_STEP ((DWORD)0x80000004)\0"
	.byte	0x1
	.uleb128 0x4fd
	.ascii "STATUS_LONGJUMP ((DWORD)0x80000026)\0"
	.byte	0x1
	.uleb128 0x4fe
	.ascii "STATUS_UNWIND_CONSOLIDATE ((DWORD)0x80000029)\0"
	.byte	0x1
	.uleb128 0x4ff
	.ascii "DBG_EXCEPTION_NOT_HANDLED ((DWORD)0x80010001)\0"
	.byte	0x1
	.uleb128 0x500
	.ascii "STATUS_ACCESS_VIOLATION ((DWORD)0xC0000005)\0"
	.byte	0x1
	.uleb128 0x501
	.ascii "STATUS_IN_PAGE_ERROR ((DWORD)0xC0000006)\0"
	.byte	0x1
	.uleb128 0x502
	.ascii "STATUS_INVALID_HANDLE ((DWORD)0xC0000008)\0"
	.byte	0x1
	.uleb128 0x503
	.ascii "STATUS_INVALID_PARAMETER ((DWORD)0xC000000D)\0"
	.byte	0x1
	.uleb128 0x504
	.ascii "STATUS_NO_MEMORY ((DWORD)0xC0000017)\0"
	.byte	0x1
	.uleb128 0x505
	.ascii "STATUS_ILLEGAL_INSTRUCTION ((DWORD)0xC000001D)\0"
	.byte	0x1
	.uleb128 0x506
	.ascii "STATUS_NONCONTINUABLE_EXCEPTION ((DWORD)0xC0000025)\0"
	.byte	0x1
	.uleb128 0x507
	.ascii "STATUS_INVALID_DISPOSITION ((DWORD)0xC0000026)\0"
	.byte	0x1
	.uleb128 0x508
	.ascii "STATUS_ARRAY_BOUNDS_EXCEEDED ((DWORD)0xC000008C)\0"
	.byte	0x1
	.uleb128 0x509
	.ascii "STATUS_FLOAT_DENORMAL_OPERAND ((DWORD)0xC000008D)\0"
	.byte	0x1
	.uleb128 0x50a
	.ascii "STATUS_FLOAT_DIVIDE_BY_ZERO ((DWORD)0xC000008E)\0"
	.byte	0x1
	.uleb128 0x50b
	.ascii "STATUS_FLOAT_INEXACT_RESULT ((DWORD)0xC000008F)\0"
	.byte	0x1
	.uleb128 0x50c
	.ascii "STATUS_FLOAT_INVALID_OPERATION ((DWORD)0xC0000090)\0"
	.byte	0x1
	.uleb128 0x50d
	.ascii "STATUS_FLOAT_OVERFLOW ((DWORD)0xC0000091)\0"
	.byte	0x1
	.uleb128 0x50e
	.ascii "STATUS_FLOAT_STACK_CHECK ((DWORD)0xC0000092)\0"
	.byte	0x1
	.uleb128 0x50f
	.ascii "STATUS_FLOAT_UNDERFLOW ((DWORD)0xC0000093)\0"
	.byte	0x1
	.uleb128 0x510
	.ascii "STATUS_INTEGER_DIVIDE_BY_ZERO ((DWORD)0xC0000094)\0"
	.byte	0x1
	.uleb128 0x511
	.ascii "STATUS_INTEGER_OVERFLOW ((DWORD)0xC0000095)\0"
	.byte	0x1
	.uleb128 0x512
	.ascii "STATUS_PRIVILEGED_INSTRUCTION ((DWORD)0xC0000096)\0"
	.byte	0x1
	.uleb128 0x513
	.ascii "STATUS_STACK_OVERFLOW ((DWORD)0xC00000FD)\0"
	.byte	0x1
	.uleb128 0x514
	.ascii "STATUS_DLL_NOT_FOUND ((DWORD)0xC0000135)\0"
	.byte	0x1
	.uleb128 0x515
	.ascii "STATUS_ORDINAL_NOT_FOUND ((DWORD)0xC0000138)\0"
	.byte	0x1
	.uleb128 0x516
	.ascii "STATUS_ENTRYPOINT_NOT_FOUND ((DWORD)0xC0000139)\0"
	.byte	0x1
	.uleb128 0x517
	.ascii "STATUS_CONTROL_C_EXIT ((DWORD)0xC000013A)\0"
	.byte	0x1
	.uleb128 0x518
	.ascii "STATUS_DLL_INIT_FAILED ((DWORD)0xC0000142)\0"
	.byte	0x1
	.uleb128 0x519
	.ascii "STATUS_FLOAT_MULTIPLE_FAULTS ((DWORD)0xC00002B4)\0"
	.byte	0x1
	.uleb128 0x51a
	.ascii "STATUS_FLOAT_MULTIPLE_TRAPS ((DWORD)0xC00002B5)\0"
	.byte	0x1
	.uleb128 0x51b
	.ascii "STATUS_REG_NAT_CONSUMPTION ((DWORD)0xC00002C9)\0"
	.byte	0x1
	.uleb128 0x51c
	.ascii "STATUS_STACK_BUFFER_OVERRUN ((DWORD)0xC0000409)\0"
	.byte	0x1
	.uleb128 0x51d
	.ascii "STATUS_INVALID_CRUNTIME_PARAMETER ((DWORD)0xC0000417)\0"
	.byte	0x1
	.uleb128 0x51e
	.ascii "STATUS_ASSERTION_FAILURE ((DWORD)0xC0000420)\0"
	.byte	0x1
	.uleb128 0x51f
	.ascii "STATUS_SXS_EARLY_DEACTIVATION ((DWORD)0xC015000F)\0"
	.byte	0x1
	.uleb128 0x520
	.ascii "STATUS_SXS_INVALID_DEACTIVATION ((DWORD)0xC0150010)\0"
	.byte	0x1
	.uleb128 0x524
	.ascii "MAXIMUM_WAIT_OBJECTS 64\0"
	.byte	0x1
	.uleb128 0x525
	.ascii "MAXIMUM_SUSPEND_COUNT MAXCHAR\0"
	.byte	0x1
	.uleb128 0x572
	.ascii "BitTest _bittest\0"
	.byte	0x1
	.uleb128 0x573
	.ascii "BitTestAndComplement _bittestandcomplement\0"
	.byte	0x1
	.uleb128 0x574
	.ascii "BitTestAndSet _bittestandset\0"
	.byte	0x1
	.uleb128 0x575
	.ascii "BitTestAndReset _bittestandreset\0"
	.byte	0x1
	.uleb128 0x576
	.ascii "BitTest64 _bittest64\0"
	.byte	0x1
	.uleb128 0x577
	.ascii "BitTestAndComplement64 _bittestandcomplement64\0"
	.byte	0x1
	.uleb128 0x578
	.ascii "BitTestAndSet64 _bittestandset64\0"
	.byte	0x1
	.uleb128 0x579
	.ascii "BitTestAndReset64 _bittestandreset64\0"
	.byte	0x1
	.uleb128 0x584
	.ascii "BitScanForward _BitScanForward\0"
	.byte	0x1
	.uleb128 0x585
	.ascii "BitScanReverse _BitScanReverse\0"
	.byte	0x1
	.uleb128 0x586
	.ascii "BitScanForward64 _BitScanForward64\0"
	.byte	0x1
	.uleb128 0x587
	.ascii "BitScanReverse64 _BitScanReverse64\0"
	.byte	0x1
	.uleb128 0x58e
	.ascii "InterlockedIncrement16 _InterlockedIncrement16\0"
	.byte	0x1
	.uleb128 0x58f
	.ascii "InterlockedDecrement16 _InterlockedDecrement16\0"
	.byte	0x1
	.uleb128 0x590
	.ascii "InterlockedCompareExchange16 _InterlockedCompareExchange16\0"
	.byte	0x1
	.uleb128 0x592
	.ascii "InterlockedAnd _InterlockedAnd\0"
	.byte	0x1
	.uleb128 0x593
	.ascii "InterlockedOr _InterlockedOr\0"
	.byte	0x1
	.uleb128 0x594
	.ascii "InterlockedXor _InterlockedXor\0"
	.byte	0x1
	.uleb128 0x595
	.ascii "InterlockedIncrement _InterlockedIncrement\0"
	.byte	0x1
	.uleb128 0x596
	.ascii "InterlockedIncrementAcquire InterlockedIncrement\0"
	.byte	0x1
	.uleb128 0x597
	.ascii "InterlockedIncrementRelease InterlockedIncrement\0"
	.byte	0x1
	.uleb128 0x598
	.ascii "InterlockedDecrement _InterlockedDecrement\0"
	.byte	0x1
	.uleb128 0x599
	.ascii "InterlockedDecrementAcquire InterlockedDecrement\0"
	.byte	0x1
	.uleb128 0x59a
	.ascii "InterlockedDecrementRelease InterlockedDecrement\0"
	.byte	0x1
	.uleb128 0x59b
	.ascii "InterlockedAdd _InterlockedAdd\0"
	.byte	0x1
	.uleb128 0x59c
	.ascii "InterlockedExchange _InterlockedExchange\0"
	.byte	0x1
	.uleb128 0x59d
	.ascii "InterlockedExchangeAdd _InterlockedExchangeAdd\0"
	.byte	0x1
	.uleb128 0x59e
	.ascii "InterlockedCompareExchange _InterlockedCompareExchange\0"
	.byte	0x1
	.uleb128 0x59f
	.ascii "InterlockedCompareExchangeAcquire InterlockedCompareExchange\0"
	.byte	0x1
	.uleb128 0x5a0
	.ascii "InterlockedCompareExchangeRelease InterlockedCompareExchange\0"
	.byte	0x1
	.uleb128 0x5a2
	.ascii "InterlockedAnd64 _InterlockedAnd64\0"
	.byte	0x1
	.uleb128 0x5a3
	.ascii "InterlockedAndAffinity InterlockedAnd64\0"
	.byte	0x1
	.uleb128 0x5a4
	.ascii "InterlockedOr64 _InterlockedOr64\0"
	.byte	0x1
	.uleb128 0x5a5
	.ascii "InterlockedOrAffinity InterlockedOr64\0"
	.byte	0x1
	.uleb128 0x5a6
	.ascii "InterlockedXor64 _InterlockedXor64\0"
	.byte	0x1
	.uleb128 0x5a7
	.ascii "InterlockedIncrement64 _InterlockedIncrement64\0"
	.byte	0x1
	.uleb128 0x5a8
	.ascii "InterlockedDecrement64 _InterlockedDecrement64\0"
	.byte	0x1
	.uleb128 0x5a9
	.ascii "InterlockedAdd64 _InterlockedAdd64\0"
	.byte	0x1
	.uleb128 0x5aa
	.ascii "InterlockedExchange64 _InterlockedExchange64\0"
	.byte	0x1
	.uleb128 0x5ab
	.ascii "InterlockedExchangeAcquire64 InterlockedExchange64\0"
	.byte	0x1
	.uleb128 0x5ac
	.ascii "InterlockedExchangeAdd64 _InterlockedExchangeAdd64\0"
	.byte	0x1
	.uleb128 0x5ad
	.ascii "InterlockedCompareExchange64 _InterlockedCompareExchange64\0"
	.byte	0x1
	.uleb128 0x5ae
	.ascii "InterlockedCompareExchangeAcquire64 InterlockedCompareExchange64\0"
	.byte	0x1
	.uleb128 0x5af
	.ascii "InterlockedCompareExchangeRelease64 InterlockedCompareExchange64\0"
	.byte	0x1
	.uleb128 0x5b1
	.ascii "InterlockedExchangePointer _InterlockedExchangePointer\0"
	.byte	0x1
	.uleb128 0x5b2
	.ascii "InterlockedCompareExchangePointer _InterlockedCompareExchangePointer\0"
	.byte	0x1
	.uleb128 0x5b3
	.ascii "InterlockedCompareExchangePointerAcquire _InterlockedCompareExchangePointer\0"
	.byte	0x1
	.uleb128 0x5b4
	.ascii "InterlockedCompareExchangePointerRelease _InterlockedCompareExchangePointer\0"
	.byte	0x1
	.uleb128 0x5b6
	.ascii "InterlockedExchangeAddSizeT(a,b) InterlockedExchangeAdd64((LONG64 *)a,b)\0"
	.byte	0x1
	.uleb128 0x5b7
	.ascii "InterlockedIncrementSizeT(a) InterlockedIncrement64((LONG64 *)a)\0"
	.byte	0x1
	.uleb128 0x5b8
	.ascii "InterlockedDecrementSizeT(a) InterlockedDecrement64((LONG64 *)a)\0"
	.byte	0x1
	.uleb128 0x5d2
	.ascii "CacheLineFlush(Address) _mm_clflush(Address)\0"
	.byte	0x1
	.uleb128 0x5dc
	.ascii "FastFence __faststorefence\0"
	.byte	0x1
	.uleb128 0x5dd
	.ascii "LoadFence _mm_lfence\0"
	.byte	0x1
	.uleb128 0x5de
	.ascii "MemoryFence _mm_mfence\0"
	.byte	0x1
	.uleb128 0x5df
	.ascii "StoreFence _mm_sfence\0"
	.byte	0x1
	.uleb128 0x5e1
	.ascii "YieldProcessor _mm_pause\0"
	.byte	0x1
	.uleb128 0x5e2
	.ascii "MemoryBarrier _mm_mfence\0"
	.byte	0x1
	.uleb128 0x5e3
	.ascii "PreFetchCacheLine(l,a) _mm_prefetch((CHAR CONST *) a,l)\0"
	.byte	0x1
	.uleb128 0x5e4
	.ascii "PrefetchForWrite(p) _m_prefetchw(p)\0"
	.byte	0x1
	.uleb128 0x5e5
	.ascii "ReadForWriteAccess(p) (_m_prefetchw(p),*(p))\0"
	.byte	0x1
	.uleb128 0x5e7
	.ascii "PF_TEMPORAL_LEVEL_1 _MM_HINT_T0\0"
	.byte	0x1
	.uleb128 0x5e8
	.ascii "PF_TEMPORAL_LEVEL_2 _MM_HINT_T1\0"
	.byte	0x1
	.uleb128 0x5e9
	.ascii "PF_TEMPORAL_LEVEL_3 _MM_HINT_T2\0"
	.byte	0x1
	.uleb128 0x5ea
	.ascii "PF_NON_TEMPORAL_LEVEL_ALL _MM_HINT_NTA\0"
	.byte	0x1
	.uleb128 0x5ec
	.ascii "ReadMxCsr _mm_getcsr\0"
	.byte	0x1
	.uleb128 0x5ed
	.ascii "WriteMxCsr _mm_setcsr\0"
	.byte	0x1
	.uleb128 0x5ef
	.ascii "DbgRaiseAssertionFailure __int2c\0"
	.byte	0x1
	.uleb128 0x5f0
	.ascii "GetCallersEflags() __getcallerseflags()\0"
	.byte	0x1
	.uleb128 0x5f4
	.ascii "GetSegmentLimit __segmentlimit\0"
	.byte	0x1
	.uleb128 0x5f8
	.ascii "ReadTimeStampCounter() __rdtsc()\0"
	.byte	0x1
	.uleb128 0x5ff
	.ascii "MultiplyHigh __mulh\0"
	.byte	0x1
	.uleb128 0x600
	.ascii "UnsignedMultiplyHigh __umulh\0"
	.byte	0x1
	.uleb128 0x605
	.ascii "ShiftLeft128 __shiftleft128\0"
	.byte	0x1
	.uleb128 0x606
	.ascii "ShiftRight128 __shiftright128\0"
	.byte	0x1
	.uleb128 0x60b
	.ascii "Multiply128 _mul128\0"
	.byte	0x1
	.uleb128 0x60f
	.ascii "UnsignedMultiply128 _umul128\0"
	.byte	0x1
	.uleb128 0x638
	.ascii "EXCEPTION_READ_FAULT 0\0"
	.byte	0x1
	.uleb128 0x639
	.ascii "EXCEPTION_WRITE_FAULT 1\0"
	.byte	0x1
	.uleb128 0x63a
	.ascii "EXCEPTION_EXECUTE_FAULT 8\0"
	.byte	0x1
	.uleb128 0x63e
	.ascii "CONTEXT_AMD64 0x100000\0"
	.byte	0x1
	.uleb128 0x640
	.ascii "CONTEXT_CONTROL (CONTEXT_AMD64 | __MSABI_LONG(0x1))\0"
	.byte	0x1
	.uleb128 0x641
	.ascii "CONTEXT_INTEGER (CONTEXT_AMD64 | __MSABI_LONG(0x2))\0"
	.byte	0x1
	.uleb128 0x642
	.ascii "CONTEXT_SEGMENTS (CONTEXT_AMD64 | __MSABI_LONG(0x4))\0"
	.byte	0x1
	.uleb128 0x643
	.ascii "CONTEXT_FLOATING_POINT (CONTEXT_AMD64 | __MSABI_LONG(0x8))\0"
	.byte	0x1
	.uleb128 0x644
	.ascii "CONTEXT_DEBUG_REGISTERS (CONTEXT_AMD64 | __MSABI_LONG(0x10))\0"
	.byte	0x1
	.uleb128 0x646
	.ascii "CONTEXT_FULL (CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_FLOATING_POINT)\0"
	.byte	0x1
	.uleb128 0x647
	.ascii "CONTEXT_ALL (CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_SEGMENTS | CONTEXT_FLOATING_POINT | CONTEXT_DEBUG_REGISTERS)\0"
	.byte	0x1
	.uleb128 0x649
	.ascii "CONTEXT_EXCEPTION_ACTIVE 0x8000000\0"
	.byte	0x1
	.uleb128 0x64a
	.ascii "CONTEXT_SERVICE_ACTIVE 0x10000000\0"
	.byte	0x1
	.uleb128 0x64b
	.ascii "CONTEXT_EXCEPTION_REQUEST 0x40000000\0"
	.byte	0x1
	.uleb128 0x64c
	.ascii "CONTEXT_EXCEPTION_REPORTING 0x80000000\0"
	.byte	0x1
	.uleb128 0x64f
	.ascii "INITIAL_MXCSR 0x1f80\0"
	.byte	0x1
	.uleb128 0x650
	.ascii "INITIAL_FPCSR 0x027f\0"
	.byte	0x1
	.uleb128 0x665
	.ascii "LEGACY_SAVE_AREA_LENGTH sizeof(XMM_SAVE_AREA32)\0"
	.byte	0x1
	.uleb128 0x6af
	.ascii "RUNTIME_FUNCTION_INDIRECT 0x1\0"
	.byte	0x1
	.uleb128 0x6ba
	.ascii "OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_EXPORT_NAME \"OutOfProcessFunctionTableCallback\"\0"
	.byte	0x1
	.uleb128 0x751
	.ascii "_LDT_ENTRY_DEFINED \0"
	.byte	0x1
	.uleb128 0x8ad
	.ascii "EXCEPTION_NONCONTINUABLE 0x1\0"
	.byte	0x1
	.uleb128 0x8ae
	.ascii "EXCEPTION_UNWINDING 0x2\0"
	.byte	0x1
	.uleb128 0x8af
	.ascii "EXCEPTION_EXIT_UNWIND 0x4\0"
	.byte	0x1
	.uleb128 0x8b0
	.ascii "EXCEPTION_STACK_INVALID 0x8\0"
	.byte	0x1
	.uleb128 0x8b1
	.ascii "EXCEPTION_NESTED_CALL 0x10\0"
	.byte	0x1
	.uleb128 0x8b2
	.ascii "EXCEPTION_TARGET_UNWIND 0x20\0"
	.byte	0x1
	.uleb128 0x8b3
	.ascii "EXCEPTION_COLLIDED_UNWIND 0x40\0"
	.byte	0x1
	.uleb128 0x8b4
	.ascii "EXCEPTION_UNWIND 0x66\0"
	.byte	0x1
	.uleb128 0x8b6
	.ascii "IS_UNWINDING(f) ((f & EXCEPTION_UNWIND) != 0)\0"
	.byte	0x1
	.uleb128 0x8b7
	.ascii "IS_DISPATCHING(f) ((f & EXCEPTION_UNWIND) == 0)\0"
	.byte	0x1
	.uleb128 0x8b8
	.ascii "IS_TARGET_UNWIND(f) ((f & EXCEPTION_TARGET_UNWIND) != 0)\0"
	.byte	0x1
	.uleb128 0x8ba
	.ascii "EXCEPTION_MAXIMUM_PARAMETERS 15\0"
	.byte	0x1
	.uleb128 0x8e7
	.ascii "UNWIND_HISTORY_TABLE_SIZE 12\0"
	.byte	0x1
	.uleb128 0x8ee
	.ascii "UNWIND_HISTORY_TABLE_NONE 0\0"
	.byte	0x1
	.uleb128 0x8ef
	.ascii "UNWIND_HISTORY_TABLE_GLOBAL 1\0"
	.byte	0x1
	.uleb128 0x8f0
	.ascii "UNWIND_HISTORY_TABLE_LOCAL 2\0"
	.byte	0x1
	.uleb128 0x91f
	.ascii "DELETE (__MSABI_LONG(0x00010000))\0"
	.byte	0x1
	.uleb128 0x920
	.ascii "READ_CONTROL (__MSABI_LONG(0x00020000))\0"
	.byte	0x1
	.uleb128 0x921
	.ascii "WRITE_DAC (__MSABI_LONG(0x00040000))\0"
	.byte	0x1
	.uleb128 0x922
	.ascii "WRITE_OWNER (__MSABI_LONG(0x00080000))\0"
	.byte	0x1
	.uleb128 0x923
	.ascii "SYNCHRONIZE (__MSABI_LONG(0x00100000))\0"
	.byte	0x1
	.uleb128 0x925
	.ascii "STANDARD_RIGHTS_REQUIRED (__MSABI_LONG(0x000F0000))\0"
	.byte	0x1
	.uleb128 0x927
	.ascii "STANDARD_RIGHTS_READ (READ_CONTROL)\0"
	.byte	0x1
	.uleb128 0x928
	.ascii "STANDARD_RIGHTS_WRITE (READ_CONTROL)\0"
	.byte	0x1
	.uleb128 0x929
	.ascii "STANDARD_RIGHTS_EXECUTE (READ_CONTROL)\0"
	.byte	0x1
	.uleb128 0x92b
	.ascii "STANDARD_RIGHTS_ALL (__MSABI_LONG(0x001F0000))\0"
	.byte	0x1
	.uleb128 0x92d
	.ascii "SPECIFIC_RIGHTS_ALL (__MSABI_LONG(0x0000FFFF))\0"
	.byte	0x1
	.uleb128 0x92f
	.ascii "ACCESS_SYSTEM_SECURITY (__MSABI_LONG(0x01000000))\0"
	.byte	0x1
	.uleb128 0x930
	.ascii "MAXIMUM_ALLOWED (__MSABI_LONG(0x02000000))\0"
	.byte	0x1
	.uleb128 0x932
	.ascii "GENERIC_READ (__MSABI_LONG(0x80000000))\0"
	.byte	0x1
	.uleb128 0x933
	.ascii "GENERIC_WRITE (__MSABI_LONG(0x40000000))\0"
	.byte	0x1
	.uleb128 0x934
	.ascii "GENERIC_EXECUTE (__MSABI_LONG(0x20000000))\0"
	.byte	0x1
	.uleb128 0x935
	.ascii "GENERIC_ALL (__MSABI_LONG(0x10000000))\0"
	.file 322 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/pshpack4.h"
	.byte	0x3
	.uleb128 0x93f
	.uleb128 0x142
	.byte	0x4
	.file 323 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/poppack.h"
	.byte	0x3
	.uleb128 0x946
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x949
	.ascii "SID_IDENTIFIER_AUTHORITY_DEFINED \0"
	.byte	0x1
	.uleb128 0x950
	.ascii "SID_DEFINED \0"
	.byte	0x1
	.uleb128 0x959
	.ascii "SID_REVISION (1)\0"
	.byte	0x1
	.uleb128 0x95a
	.ascii "SID_MAX_SUB_AUTHORITIES (15)\0"
	.byte	0x1
	.uleb128 0x95b
	.ascii "SID_RECOMMENDED_SUB_AUTHORITIES (1)\0"
	.byte	0x1
	.uleb128 0x95d
	.ascii "SECURITY_MAX_SID_SIZE (sizeof (SID) - sizeof (DWORD) + (SID_MAX_SUB_AUTHORITIES *sizeof (DWORD)))\0"
	.byte	0x1
	.uleb128 0x960
	.ascii "SID_HASH_SIZE 32\0"
	.byte	0x1
	.uleb128 0x97a
	.ascii "SECURITY_NULL_SID_AUTHORITY {0,0,0,0,0,0}\0"
	.byte	0x1
	.uleb128 0x97b
	.ascii "SECURITY_WORLD_SID_AUTHORITY {0,0,0,0,0,1}\0"
	.byte	0x1
	.uleb128 0x97c
	.ascii "SECURITY_LOCAL_SID_AUTHORITY {0,0,0,0,0,2}\0"
	.byte	0x1
	.uleb128 0x97d
	.ascii "SECURITY_CREATOR_SID_AUTHORITY {0,0,0,0,0,3}\0"
	.byte	0x1
	.uleb128 0x97e
	.ascii "SECURITY_NON_UNIQUE_AUTHORITY {0,0,0,0,0,4}\0"
	.byte	0x1
	.uleb128 0x97f
	.ascii "SECURITY_RESOURCE_MANAGER_AUTHORITY {0,0,0,0,0,9}\0"
	.byte	0x1
	.uleb128 0x981
	.ascii "SECURITY_NULL_RID (__MSABI_LONG(0x00000000))\0"
	.byte	0x1
	.uleb128 0x982
	.ascii "SECURITY_WORLD_RID (__MSABI_LONG(0x00000000))\0"
	.byte	0x1
	.uleb128 0x983
	.ascii "SECURITY_LOCAL_RID (__MSABI_LONG(0x00000000))\0"
	.byte	0x1
	.uleb128 0x984
	.ascii "SECURITY_LOCAL_LOGON_RID (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0x986
	.ascii "SECURITY_CREATOR_OWNER_RID (__MSABI_LONG(0x00000000))\0"
	.byte	0x1
	.uleb128 0x987
	.ascii "SECURITY_CREATOR_GROUP_RID (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0x988
	.ascii "SECURITY_CREATOR_OWNER_SERVER_RID (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0x989
	.ascii "SECURITY_CREATOR_GROUP_SERVER_RID (__MSABI_LONG(0x00000003))\0"
	.byte	0x1
	.uleb128 0x98a
	.ascii "SECURITY_CREATOR_OWNER_RIGHTS_RID (__MSABI_LONG(0x00000004))\0"
	.byte	0x1
	.uleb128 0x98c
	.ascii "SECURITY_NT_AUTHORITY {0,0,0,0,0,5}\0"
	.byte	0x1
	.uleb128 0x98e
	.ascii "SECURITY_DIALUP_RID (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0x98f
	.ascii "SECURITY_NETWORK_RID (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0x990
	.ascii "SECURITY_BATCH_RID (__MSABI_LONG(0x00000003))\0"
	.byte	0x1
	.uleb128 0x991
	.ascii "SECURITY_INTERACTIVE_RID (__MSABI_LONG(0x00000004))\0"
	.byte	0x1
	.uleb128 0x992
	.ascii "SECURITY_LOGON_IDS_RID (__MSABI_LONG(0x00000005))\0"
	.byte	0x1
	.uleb128 0x993
	.ascii "SECURITY_LOGON_IDS_RID_COUNT (__MSABI_LONG(3))\0"
	.byte	0x1
	.uleb128 0x994
	.ascii "SECURITY_SERVICE_RID (__MSABI_LONG(0x00000006))\0"
	.byte	0x1
	.uleb128 0x995
	.ascii "SECURITY_ANONYMOUS_LOGON_RID (__MSABI_LONG(0x00000007))\0"
	.byte	0x1
	.uleb128 0x996
	.ascii "SECURITY_PROXY_RID (__MSABI_LONG(0x00000008))\0"
	.byte	0x1
	.uleb128 0x997
	.ascii "SECURITY_ENTERPRISE_CONTROLLERS_RID (__MSABI_LONG(0x00000009))\0"
	.byte	0x1
	.uleb128 0x998
	.ascii "SECURITY_SERVER_LOGON_RID SECURITY_ENTERPRISE_CONTROLLERS_RID\0"
	.byte	0x1
	.uleb128 0x999
	.ascii "SECURITY_PRINCIPAL_SELF_RID (__MSABI_LONG(0x0000000A))\0"
	.byte	0x1
	.uleb128 0x99a
	.ascii "SECURITY_AUTHENTICATED_USER_RID (__MSABI_LONG(0x0000000B))\0"
	.byte	0x1
	.uleb128 0x99b
	.ascii "SECURITY_RESTRICTED_CODE_RID (__MSABI_LONG(0x0000000C))\0"
	.byte	0x1
	.uleb128 0x99c
	.ascii "SECURITY_TERMINAL_SERVER_RID (__MSABI_LONG(0x0000000D))\0"
	.byte	0x1
	.uleb128 0x99d
	.ascii "SECURITY_REMOTE_LOGON_RID (__MSABI_LONG(0x0000000E))\0"
	.byte	0x1
	.uleb128 0x99e
	.ascii "SECURITY_THIS_ORGANIZATION_RID (__MSABI_LONG(0x0000000F))\0"
	.byte	0x1
	.uleb128 0x99f
	.ascii "SECURITY_IUSER_RID (__MSABI_LONG(0x00000011))\0"
	.byte	0x1
	.uleb128 0x9a0
	.ascii "SECURITY_LOCAL_SYSTEM_RID (__MSABI_LONG(0x00000012))\0"
	.byte	0x1
	.uleb128 0x9a1
	.ascii "SECURITY_LOCAL_SERVICE_RID (__MSABI_LONG(0x00000013))\0"
	.byte	0x1
	.uleb128 0x9a2
	.ascii "SECURITY_NETWORK_SERVICE_RID (__MSABI_LONG(0x00000014))\0"
	.byte	0x1
	.uleb128 0x9a4
	.ascii "SECURITY_NT_NON_UNIQUE (__MSABI_LONG(0x00000015))\0"
	.byte	0x1
	.uleb128 0x9a5
	.ascii "SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT (__MSABI_LONG(3))\0"
	.byte	0x1
	.uleb128 0x9a7
	.ascii "SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID (__MSABI_LONG(0x00000016))\0"
	.byte	0x1
	.uleb128 0x9a9
	.ascii "SECURITY_BUILTIN_DOMAIN_RID (__MSABI_LONG(0x00000020))\0"
	.byte	0x1
	.uleb128 0x9aa
	.ascii "SECURITY_WRITE_RESTRICTED_CODE_RID (__MSABI_LONG(0x00000021))\0"
	.byte	0x1
	.uleb128 0x9ac
	.ascii "SECURITY_PACKAGE_BASE_RID (__MSABI_LONG(0x00000040))\0"
	.byte	0x1
	.uleb128 0x9ad
	.ascii "SECURITY_PACKAGE_RID_COUNT (__MSABI_LONG(2))\0"
	.byte	0x1
	.uleb128 0x9ae
	.ascii "SECURITY_PACKAGE_NTLM_RID (__MSABI_LONG(0x0000000A))\0"
	.byte	0x1
	.uleb128 0x9af
	.ascii "SECURITY_PACKAGE_SCHANNEL_RID (__MSABI_LONG(0x0000000E))\0"
	.byte	0x1
	.uleb128 0x9b0
	.ascii "SECURITY_PACKAGE_DIGEST_RID (__MSABI_LONG(0x00000015))\0"
	.byte	0x1
	.uleb128 0x9b2
	.ascii "SECURITY_CRED_TYPE_BASE_RID (__MSABI_LONG(0x00000041))\0"
	.byte	0x1
	.uleb128 0x9b3
	.ascii "SECURITY_CRED_TYPE_RID_COUNT (__MSABI_LONG(2))\0"
	.byte	0x1
	.uleb128 0x9b4
	.ascii "SECURITY_CRED_TYPE_THIS_ORG_CERT_RID (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0x9b6
	.ascii "SECURITY_MIN_BASE_RID (__MSABI_LONG(0x00000050))\0"
	.byte	0x1
	.uleb128 0x9b8
	.ascii "SECURITY_SERVICE_ID_BASE_RID (__MSABI_LONG(0x00000050))\0"
	.byte	0x1
	.uleb128 0x9b9
	.ascii "SECURITY_SERVICE_ID_RID_COUNT (__MSABI_LONG(6))\0"
	.byte	0x1
	.uleb128 0x9bb
	.ascii "SECURITY_RESERVED_ID_BASE_RID (__MSABI_LONG(0x00000051))\0"
	.byte	0x1
	.uleb128 0x9bd
	.ascii "SECURITY_APPPOOL_ID_BASE_RID (__MSABI_LONG(0x00000052))\0"
	.byte	0x1
	.uleb128 0x9be
	.ascii "SECURITY_APPPOOL_ID_RID_COUNT (__MSABI_LONG(6))\0"
	.byte	0x1
	.uleb128 0x9c0
	.ascii "SECURITY_VIRTUALSERVER_ID_BASE_RID (__MSABI_LONG(0x00000053))\0"
	.byte	0x1
	.uleb128 0x9c1
	.ascii "SECURITY_VIRTUALSERVER_ID_RID_COUNT (__MSABI_LONG(6))\0"
	.byte	0x1
	.uleb128 0x9c3
	.ascii "SECURITY_USERMODEDRIVERHOST_ID_BASE_RID (__MSABI_LONG(0x00000054))\0"
	.byte	0x1
	.uleb128 0x9c4
	.ascii "SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT (__MSABI_LONG(6))\0"
	.byte	0x1
	.uleb128 0x9c6
	.ascii "SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID (__MSABI_LONG(0x00000055))\0"
	.byte	0x1
	.uleb128 0x9c7
	.ascii "SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT (__MSABI_LONG(6))\0"
	.byte	0x1
	.uleb128 0x9c9
	.ascii "SECURITY_WMIHOST_ID_BASE_RID (__MSABI_LONG(0x00000056))\0"
	.byte	0x1
	.uleb128 0x9ca
	.ascii "SECURITY_WMIHOST_ID_RID_COUNT (__MSABI_LONG(6))\0"
	.byte	0x1
	.uleb128 0x9cc
	.ascii "SECURITY_TASK_ID_BASE_RID (__MSABI_LONG(0x00000057))\0"
	.byte	0x1
	.uleb128 0x9ce
	.ascii "SECURITY_NFS_ID_BASE_RID (__MSABI_LONG(0x00000058))\0"
	.byte	0x1
	.uleb128 0x9d0
	.ascii "SECURITY_COM_ID_BASE_RID (__MSABI_LONG(0x00000059))\0"
	.byte	0x1
	.uleb128 0x9d2
	.ascii "SECURITY_WINDOW_MANAGER_BASE_RID (__MSABI_LONG(0x0000005a))\0"
	.byte	0x1
	.uleb128 0x9d4
	.ascii "SECURITY_RDV_GFX_BASE_RID (__MSABI_LONG(0x0000005b))\0"
	.byte	0x1
	.uleb128 0x9d6
	.ascii "SECURITY_DASHOST_ID_BASE_RID (__MSABI_LONG(0x0000005c))\0"
	.byte	0x1
	.uleb128 0x9d7
	.ascii "SECURITY_DASHOST_ID_RID_COUNT (__MSABI_LONG(6))\0"
	.byte	0x1
	.uleb128 0x9d9
	.ascii "SECURITY_VIRTUALACCOUNT_ID_RID_COUNT (__MSABI_LONG(6))\0"
	.byte	0x1
	.uleb128 0x9db
	.ascii "SECURITY_MAX_BASE_RID (__MSABI_LONG(0x0000006f))\0"
	.byte	0x1
	.uleb128 0x9dd
	.ascii "SECURITY_MAX_ALWAYS_FILTERED (__MSABI_LONG(0x000003E7))\0"
	.byte	0x1
	.uleb128 0x9de
	.ascii "SECURITY_MIN_NEVER_FILTERED (__MSABI_LONG(0x000003E8))\0"
	.byte	0x1
	.uleb128 0x9e0
	.ascii "SECURITY_OTHER_ORGANIZATION_RID (__MSABI_LONG(0x000003E8))\0"
	.byte	0x1
	.uleb128 0x9e2
	.ascii "SECURITY_WINDOWSMOBILE_ID_BASE_RID (__MSABI_LONG(0x00000070))\0"
	.byte	0x1
	.uleb128 0x9e4
	.ascii "DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED (__MSABI_LONG(0x000001f0))\0"
	.byte	0x1
	.uleb128 0x9e5
	.ascii "DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS (__MSABI_LONG(0x000001f1))\0"
	.byte	0x1
	.uleb128 0x9e6
	.ascii "DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS (__MSABI_LONG(0x000001f2))\0"
	.byte	0x1
	.uleb128 0x9e8
	.ascii "FOREST_USER_RID_MAX (__MSABI_LONG(0x000001F3))\0"
	.byte	0x1
	.uleb128 0x9ea
	.ascii "DOMAIN_USER_RID_ADMIN (__MSABI_LONG(0x000001F4))\0"
	.byte	0x1
	.uleb128 0x9eb
	.ascii "DOMAIN_USER_RID_GUEST (__MSABI_LONG(0x000001F5))\0"
	.byte	0x1
	.uleb128 0x9ec
	.ascii "DOMAIN_USER_RID_KRBTGT (__MSABI_LONG(0x000001F6))\0"
	.byte	0x1
	.uleb128 0x9ee
	.ascii "DOMAIN_USER_RID_MAX (__MSABI_LONG(0x000003E7))\0"
	.byte	0x1
	.uleb128 0x9f0
	.ascii "DOMAIN_GROUP_RID_ADMINS (__MSABI_LONG(0x00000200))\0"
	.byte	0x1
	.uleb128 0x9f1
	.ascii "DOMAIN_GROUP_RID_USERS (__MSABI_LONG(0x00000201))\0"
	.byte	0x1
	.uleb128 0x9f2
	.ascii "DOMAIN_GROUP_RID_GUESTS (__MSABI_LONG(0x00000202))\0"
	.byte	0x1
	.uleb128 0x9f3
	.ascii "DOMAIN_GROUP_RID_COMPUTERS (__MSABI_LONG(0x00000203))\0"
	.byte	0x1
	.uleb128 0x9f4
	.ascii "DOMAIN_GROUP_RID_CONTROLLERS (__MSABI_LONG(0x00000204))\0"
	.byte	0x1
	.uleb128 0x9f5
	.ascii "DOMAIN_GROUP_RID_CERT_ADMINS (__MSABI_LONG(0x00000205))\0"
	.byte	0x1
	.uleb128 0x9f6
	.ascii "DOMAIN_GROUP_RID_SCHEMA_ADMINS (__MSABI_LONG(0x00000206))\0"
	.byte	0x1
	.uleb128 0x9f7
	.ascii "DOMAIN_GROUP_RID_ENTERPRISE_ADMINS (__MSABI_LONG(0x00000207))\0"
	.byte	0x1
	.uleb128 0x9f8
	.ascii "DOMAIN_GROUP_RID_POLICY_ADMINS (__MSABI_LONG(0x00000208))\0"
	.byte	0x1
	.uleb128 0x9f9
	.ascii "DOMAIN_GROUP_RID_READONLY_CONTROLLERS (__MSABI_LONG(0x00000209))\0"
	.byte	0x1
	.uleb128 0x9fa
	.ascii "DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS (__MSABI_LONG(0x0000020a))\0"
	.byte	0x1
	.uleb128 0x9fc
	.ascii "DOMAIN_ALIAS_RID_ADMINS (__MSABI_LONG(0x00000220))\0"
	.byte	0x1
	.uleb128 0x9fd
	.ascii "DOMAIN_ALIAS_RID_USERS (__MSABI_LONG(0x00000221))\0"
	.byte	0x1
	.uleb128 0x9fe
	.ascii "DOMAIN_ALIAS_RID_GUESTS (__MSABI_LONG(0x00000222))\0"
	.byte	0x1
	.uleb128 0x9ff
	.ascii "DOMAIN_ALIAS_RID_POWER_USERS (__MSABI_LONG(0x00000223))\0"
	.byte	0x1
	.uleb128 0xa01
	.ascii "DOMAIN_ALIAS_RID_ACCOUNT_OPS (__MSABI_LONG(0x00000224))\0"
	.byte	0x1
	.uleb128 0xa02
	.ascii "DOMAIN_ALIAS_RID_SYSTEM_OPS (__MSABI_LONG(0x00000225))\0"
	.byte	0x1
	.uleb128 0xa03
	.ascii "DOMAIN_ALIAS_RID_PRINT_OPS (__MSABI_LONG(0x00000226))\0"
	.byte	0x1
	.uleb128 0xa04
	.ascii "DOMAIN_ALIAS_RID_BACKUP_OPS (__MSABI_LONG(0x00000227))\0"
	.byte	0x1
	.uleb128 0xa06
	.ascii "DOMAIN_ALIAS_RID_REPLICATOR (__MSABI_LONG(0x00000228))\0"
	.byte	0x1
	.uleb128 0xa07
	.ascii "DOMAIN_ALIAS_RID_RAS_SERVERS (__MSABI_LONG(0x00000229))\0"
	.byte	0x1
	.uleb128 0xa08
	.ascii "DOMAIN_ALIAS_RID_PREW2KCOMPACCESS (__MSABI_LONG(0x0000022A))\0"
	.byte	0x1
	.uleb128 0xa09
	.ascii "DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS (__MSABI_LONG(0x0000022B))\0"
	.byte	0x1
	.uleb128 0xa0a
	.ascii "DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS (__MSABI_LONG(0x0000022C))\0"
	.byte	0x1
	.uleb128 0xa0b
	.ascii "DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS (__MSABI_LONG(0x0000022D))\0"
	.byte	0x1
	.uleb128 0xa0d
	.ascii "DOMAIN_ALIAS_RID_MONITORING_USERS (__MSABI_LONG(0x0000022E))\0"
	.byte	0x1
	.uleb128 0xa0e
	.ascii "DOMAIN_ALIAS_RID_LOGGING_USERS (__MSABI_LONG(0x0000022F))\0"
	.byte	0x1
	.uleb128 0xa0f
	.ascii "DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS (__MSABI_LONG(0x00000230))\0"
	.byte	0x1
	.uleb128 0xa10
	.ascii "DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS (__MSABI_LONG(0x00000231))\0"
	.byte	0x1
	.uleb128 0xa11
	.ascii "DOMAIN_ALIAS_RID_DCOM_USERS (__MSABI_LONG(0x00000232))\0"
	.byte	0x1
	.uleb128 0xa13
	.ascii "DOMAIN_ALIAS_RID_IUSERS (__MSABI_LONG(0x00000238))\0"
	.byte	0x1
	.uleb128 0xa14
	.ascii "DOMAIN_ALIAS_RID_CRYPTO_OPERATORS (__MSABI_LONG(0x00000239))\0"
	.byte	0x1
	.uleb128 0xa15
	.ascii "DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP (__MSABI_LONG(0x0000023B))\0"
	.byte	0x1
	.uleb128 0xa16
	.ascii "DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP (__MSABI_LONG(0x0000023C))\0"
	.byte	0x1
	.uleb128 0xa17
	.ascii "DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP (__MSABI_LONG(0x0000023D))\0"
	.byte	0x1
	.uleb128 0xa18
	.ascii "DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP (__MSABI_LONG(0x0000023e))\0"
	.byte	0x1
	.uleb128 0xa19
	.ascii "DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS (__MSABI_LONG(0x0000023f))\0"
	.byte	0x1
	.uleb128 0xa1a
	.ascii "DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS (__MSABI_LONG(0x00000240))\0"
	.byte	0x1
	.uleb128 0xa1b
	.ascii "DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS (__MSABI_LONG(0x00000241))\0"
	.byte	0x1
	.uleb128 0xa1c
	.ascii "DOMAIN_ALIAS_RID_HYPER_V_ADMINS (__MSABI_LONG(0x00000242))\0"
	.byte	0x1
	.uleb128 0xa1d
	.ascii "DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS (__MSABI_LONG(0x00000243))\0"
	.byte	0x1
	.uleb128 0xa1e
	.ascii "DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS (__MSABI_LONG(0x00000244))\0"
	.byte	0x1
	.uleb128 0xa20
	.ascii "SECURITY_APP_PACKAGE_AUTHORITY {0, 0, 0, 0, 0, 15}\0"
	.byte	0x1
	.uleb128 0xa22
	.ascii "SECURITY_APP_PACKAGE_BASE_RID (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0xa23
	.ascii "SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT (__MSABI_LONG(2))\0"
	.byte	0x1
	.uleb128 0xa24
	.ascii "SECURITY_APP_PACKAGE_RID_COUNT (__MSABI_LONG(8))\0"
	.byte	0x1
	.uleb128 0xa25
	.ascii "SECURITY_CAPABILITY_BASE_RID (__MSABI_LONG(0x00000003))\0"
	.byte	0x1
	.uleb128 0xa26
	.ascii "SECURITY_BUILTIN_CAPABILITY_RID_COUNT (__MSABI_LONG(2))\0"
	.byte	0x1
	.uleb128 0xa27
	.ascii "SECURITY_CAPABILITY_RID_COUNT (__MSABI_LONG(5))\0"
	.byte	0x1
	.uleb128 0xa29
	.ascii "SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0xa2b
	.ascii "SECURITY_CAPABILITY_INTERNET_CLIENT (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0xa2c
	.ascii "SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0xa2d
	.ascii "SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER (__MSABI_LONG(0x00000003))\0"
	.byte	0x1
	.uleb128 0xa2e
	.ascii "SECURITY_CAPABILITY_PICTURES_LIBRARY (__MSABI_LONG(0x00000004))\0"
	.byte	0x1
	.uleb128 0xa2f
	.ascii "SECURITY_CAPABILITY_VIDEOS_LIBRARY (__MSABI_LONG(0x00000005))\0"
	.byte	0x1
	.uleb128 0xa30
	.ascii "SECURITY_CAPABILITY_MUSIC_LIBRARY (__MSABI_LONG(0x00000006))\0"
	.byte	0x1
	.uleb128 0xa31
	.ascii "SECURITY_CAPABILITY_DOCUMENTS_LIBRARY (__MSABI_LONG(0x00000007))\0"
	.byte	0x1
	.uleb128 0xa32
	.ascii "SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION (__MSABI_LONG(0x00000008))\0"
	.byte	0x1
	.uleb128 0xa33
	.ascii "SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES (__MSABI_LONG(0x00000009))\0"
	.byte	0x1
	.uleb128 0xa34
	.ascii "SECURITY_CAPABILITY_REMOVABLE_STORAGE (__MSABI_LONG(0x0000000a))\0"
	.byte	0x1
	.uleb128 0xa36
	.ascii "SECURITY_CAPABILITY_INTERNET_EXPLORER (__MSABI_LONG(0x00001000))\0"
	.byte	0x1
	.uleb128 0xa38
	.ascii "SECURITY_MANDATORY_LABEL_AUTHORITY {0,0,0,0,0,16}\0"
	.byte	0x1
	.uleb128 0xa39
	.ascii "SECURITY_MANDATORY_UNTRUSTED_RID (__MSABI_LONG(0x00000000))\0"
	.byte	0x1
	.uleb128 0xa3a
	.ascii "SECURITY_MANDATORY_LOW_RID (__MSABI_LONG(0x00001000))\0"
	.byte	0x1
	.uleb128 0xa3b
	.ascii "SECURITY_MANDATORY_MEDIUM_RID (__MSABI_LONG(0x00002000))\0"
	.byte	0x1
	.uleb128 0xa3c
	.ascii "SECURITY_MANDATORY_HIGH_RID (__MSABI_LONG(0x00003000))\0"
	.byte	0x1
	.uleb128 0xa3d
	.ascii "SECURITY_MANDATORY_SYSTEM_RID (__MSABI_LONG(0x00004000))\0"
	.byte	0x1
	.uleb128 0xa3e
	.ascii "SECURITY_MANDATORY_PROTECTED_PROCESS_RID (__MSABI_LONG(0x00005000))\0"
	.byte	0x1
	.uleb128 0xa40
	.ascii "SECURITY_MANDATORY_MAXIMUM_USER_RID SECURITY_MANDATORY_SYSTEM_RID\0"
	.byte	0x1
	.uleb128 0xa42
	.ascii "MANDATORY_LEVEL_TO_MANDATORY_RID(IL) (IL * 0x1000)\0"
	.byte	0x1
	.uleb128 0xa44
	.ascii "SECURITY_SCOPED_POLICY_ID_AUTHORITY {0, 0, 0, 0, 0, 17}\0"
	.byte	0x1
	.uleb128 0xa46
	.ascii "SECURITY_AUTHENTICATION_AUTHORITY {0, 0, 0, 0, 0, 18}\0"
	.byte	0x1
	.uleb128 0xa47
	.ascii "SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT (__MSABI_LONG(1))\0"
	.byte	0x1
	.uleb128 0xa48
	.ascii "SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0xa49
	.ascii "SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0xa4b
	.ascii "SECURITY_TRUSTED_INSTALLER_RID1 956008885\0"
	.byte	0x1
	.uleb128 0xa4c
	.ascii "SECURITY_TRUSTED_INSTALLER_RID2 3418522649\0"
	.byte	0x1
	.uleb128 0xa4d
	.ascii "SECURITY_TRUSTED_INSTALLER_RID3 1831038044\0"
	.byte	0x1
	.uleb128 0xa4e
	.ascii "SECURITY_TRUSTED_INSTALLER_RID4 1853292631\0"
	.byte	0x1
	.uleb128 0xa4f
	.ascii "SECURITY_TRUSTED_INSTALLER_RID5 2271478464\0"
	.byte	0x1
	.uleb128 0xa89
	.ascii "SYSTEM_LUID { 0x3e7, 0x0 }\0"
	.byte	0x1
	.uleb128 0xa8a
	.ascii "ANONYMOUS_LOGON_LUID { 0x3e6, 0x0 }\0"
	.byte	0x1
	.uleb128 0xa8b
	.ascii "LOCALSERVICE_LUID { 0x3e5, 0x0 }\0"
	.byte	0x1
	.uleb128 0xa8c
	.ascii "NETWORKSERVICE_LUID { 0x3e4, 0x0 }\0"
	.byte	0x1
	.uleb128 0xa8d
	.ascii "IUSER_LUID { 0x3e3, 0x0 }\0"
	.byte	0x1
	.uleb128 0xa8f
	.ascii "SE_GROUP_MANDATORY (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0xa90
	.ascii "SE_GROUP_ENABLED_BY_DEFAULT (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0xa91
	.ascii "SE_GROUP_ENABLED (__MSABI_LONG(0x00000004))\0"
	.byte	0x1
	.uleb128 0xa92
	.ascii "SE_GROUP_OWNER (__MSABI_LONG(0x00000008))\0"
	.byte	0x1
	.uleb128 0xa93
	.ascii "SE_GROUP_USE_FOR_DENY_ONLY (__MSABI_LONG(0x00000010))\0"
	.byte	0x1
	.uleb128 0xa94
	.ascii "SE_GROUP_INTEGRITY (__MSABI_LONG(0x00000020))\0"
	.byte	0x1
	.uleb128 0xa95
	.ascii "SE_GROUP_INTEGRITY_ENABLED (__MSABI_LONG(0x00000040))\0"
	.byte	0x1
	.uleb128 0xa96
	.ascii "SE_GROUP_LOGON_ID (__MSABI_LONG(0xC0000000))\0"
	.byte	0x1
	.uleb128 0xa97
	.ascii "SE_GROUP_RESOURCE (__MSABI_LONG(0x20000000))\0"
	.byte	0x1
	.uleb128 0xa99
	.ascii "SE_GROUP_VALID_ATTRIBUTES (SE_GROUP_MANDATORY | SE_GROUP_ENABLED_BY_DEFAULT | SE_GROUP_ENABLED | SE_GROUP_OWNER | SE_GROUP_USE_FOR_DENY_ONLY | SE_GROUP_LOGON_ID | SE_GROUP_RESOURCE | SE_GROUP_INTEGRITY | SE_GROUP_INTEGRITY_ENABLED)\0"
	.byte	0x1
	.uleb128 0xa9b
	.ascii "ACL_REVISION (2)\0"
	.byte	0x1
	.uleb128 0xa9c
	.ascii "ACL_REVISION_DS (4)\0"
	.byte	0x1
	.uleb128 0xa9e
	.ascii "ACL_REVISION1 (1)\0"
	.byte	0x1
	.uleb128 0xa9f
	.ascii "MIN_ACL_REVISION ACL_REVISION2\0"
	.byte	0x1
	.uleb128 0xaa0
	.ascii "ACL_REVISION2 (2)\0"
	.byte	0x1
	.uleb128 0xaa1
	.ascii "ACL_REVISION3 (3)\0"
	.byte	0x1
	.uleb128 0xaa2
	.ascii "ACL_REVISION4 (4)\0"
	.byte	0x1
	.uleb128 0xaa3
	.ascii "MAX_ACL_REVISION ACL_REVISION4\0"
	.byte	0x1
	.uleb128 0xab5
	.ascii "ACCESS_MIN_MS_ACE_TYPE (0x0)\0"
	.byte	0x1
	.uleb128 0xab6
	.ascii "ACCESS_ALLOWED_ACE_TYPE (0x0)\0"
	.byte	0x1
	.uleb128 0xab7
	.ascii "ACCESS_DENIED_ACE_TYPE (0x1)\0"
	.byte	0x1
	.uleb128 0xab8
	.ascii "SYSTEM_AUDIT_ACE_TYPE (0x2)\0"
	.byte	0x1
	.uleb128 0xab9
	.ascii "SYSTEM_ALARM_ACE_TYPE (0x3)\0"
	.byte	0x1
	.uleb128 0xaba
	.ascii "ACCESS_MAX_MS_V2_ACE_TYPE (0x3)\0"
	.byte	0x1
	.uleb128 0xabc
	.ascii "ACCESS_ALLOWED_COMPOUND_ACE_TYPE (0x4)\0"
	.byte	0x1
	.uleb128 0xabd
	.ascii "ACCESS_MAX_MS_V3_ACE_TYPE (0x4)\0"
	.byte	0x1
	.uleb128 0xabf
	.ascii "ACCESS_MIN_MS_OBJECT_ACE_TYPE (0x5)\0"
	.byte	0x1
	.uleb128 0xac0
	.ascii "ACCESS_ALLOWED_OBJECT_ACE_TYPE (0x5)\0"
	.byte	0x1
	.uleb128 0xac1
	.ascii "ACCESS_DENIED_OBJECT_ACE_TYPE (0x6)\0"
	.byte	0x1
	.uleb128 0xac2
	.ascii "SYSTEM_AUDIT_OBJECT_ACE_TYPE (0x7)\0"
	.byte	0x1
	.uleb128 0xac3
	.ascii "SYSTEM_ALARM_OBJECT_ACE_TYPE (0x8)\0"
	.byte	0x1
	.uleb128 0xac4
	.ascii "ACCESS_MAX_MS_OBJECT_ACE_TYPE (0x8)\0"
	.byte	0x1
	.uleb128 0xac6
	.ascii "ACCESS_MAX_MS_V4_ACE_TYPE (0x8)\0"
	.byte	0x1
	.uleb128 0xac7
	.ascii "ACCESS_MAX_MS_ACE_TYPE (0x8)\0"
	.byte	0x1
	.uleb128 0xac9
	.ascii "ACCESS_ALLOWED_CALLBACK_ACE_TYPE (0x9)\0"
	.byte	0x1
	.uleb128 0xaca
	.ascii "ACCESS_DENIED_CALLBACK_ACE_TYPE (0xA)\0"
	.byte	0x1
	.uleb128 0xacb
	.ascii "ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE (0xB)\0"
	.byte	0x1
	.uleb128 0xacc
	.ascii "ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE (0xC)\0"
	.byte	0x1
	.uleb128 0xacd
	.ascii "SYSTEM_AUDIT_CALLBACK_ACE_TYPE (0xD)\0"
	.byte	0x1
	.uleb128 0xace
	.ascii "SYSTEM_ALARM_CALLBACK_ACE_TYPE (0xE)\0"
	.byte	0x1
	.uleb128 0xacf
	.ascii "SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE (0xF)\0"
	.byte	0x1
	.uleb128 0xad0
	.ascii "SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE (0x10)\0"
	.byte	0x1
	.uleb128 0xad2
	.ascii "SYSTEM_MANDATORY_LABEL_ACE_TYPE (0x11)\0"
	.byte	0x1
	.uleb128 0xad3
	.ascii "SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE (0x12)\0"
	.byte	0x1
	.uleb128 0xad4
	.ascii "SYSTEM_SCOPED_POLICY_ID_ACE_TYPE (0x13)\0"
	.byte	0x1
	.uleb128 0xad5
	.ascii "ACCESS_MAX_MS_V5_ACE_TYPE (0x13)\0"
	.byte	0x1
	.uleb128 0xad7
	.ascii "OBJECT_INHERIT_ACE (0x1)\0"
	.byte	0x1
	.uleb128 0xad8
	.ascii "CONTAINER_INHERIT_ACE (0x2)\0"
	.byte	0x1
	.uleb128 0xad9
	.ascii "NO_PROPAGATE_INHERIT_ACE (0x4)\0"
	.byte	0x1
	.uleb128 0xada
	.ascii "INHERIT_ONLY_ACE (0x8)\0"
	.byte	0x1
	.uleb128 0xadb
	.ascii "INHERITED_ACE (0x10)\0"
	.byte	0x1
	.uleb128 0xadc
	.ascii "VALID_INHERIT_FLAGS (0x1F)\0"
	.byte	0x1
	.uleb128 0xade
	.ascii "SUCCESSFUL_ACCESS_ACE_FLAG (0x40)\0"
	.byte	0x1
	.uleb128 0xadf
	.ascii "FAILED_ACCESS_ACE_FLAG (0x80)\0"
	.byte	0x1
	.uleb128 0xb10
	.ascii "SYSTEM_MANDATORY_LABEL_NO_WRITE_UP 0x1\0"
	.byte	0x1
	.uleb128 0xb11
	.ascii "SYSTEM_MANDATORY_LABEL_NO_READ_UP 0x2\0"
	.byte	0x1
	.uleb128 0xb12
	.ascii "SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP 0x4\0"
	.byte	0x1
	.uleb128 0xb14
	.ascii "SYSTEM_MANDATORY_LABEL_VALID_MASK (SYSTEM_MANDATORY_LABEL_NO_WRITE_UP | SYSTEM_MANDATORY_LABEL_NO_READ_UP | SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP)\0"
	.byte	0x1
	.uleb128 0xb78
	.ascii "ACE_OBJECT_TYPE_PRESENT 0x1\0"
	.byte	0x1
	.uleb128 0xb79
	.ascii "ACE_INHERITED_OBJECT_TYPE_PRESENT 0x2\0"
	.byte	0x1
	.uleb128 0xb8b
	.ascii "SECURITY_DESCRIPTOR_REVISION (1)\0"
	.byte	0x1
	.uleb128 0xb8c
	.ascii "SECURITY_DESCRIPTOR_REVISION1 (1)\0"
	.byte	0x1
	.uleb128 0xb8e
	.ascii "SECURITY_DESCRIPTOR_MIN_LENGTH (sizeof(SECURITY_DESCRIPTOR))\0"
	.byte	0x1
	.uleb128 0xb92
	.ascii "SE_OWNER_DEFAULTED (0x0001)\0"
	.byte	0x1
	.uleb128 0xb93
	.ascii "SE_GROUP_DEFAULTED (0x0002)\0"
	.byte	0x1
	.uleb128 0xb94
	.ascii "SE_DACL_PRESENT (0x0004)\0"
	.byte	0x1
	.uleb128 0xb95
	.ascii "SE_DACL_DEFAULTED (0x0008)\0"
	.byte	0x1
	.uleb128 0xb96
	.ascii "SE_SACL_PRESENT (0x0010)\0"
	.byte	0x1
	.uleb128 0xb97
	.ascii "SE_SACL_DEFAULTED (0x0020)\0"
	.byte	0x1
	.uleb128 0xb98
	.ascii "SE_DACL_AUTO_INHERIT_REQ (0x0100)\0"
	.byte	0x1
	.uleb128 0xb99
	.ascii "SE_SACL_AUTO_INHERIT_REQ (0x0200)\0"
	.byte	0x1
	.uleb128 0xb9a
	.ascii "SE_DACL_AUTO_INHERITED (0x0400)\0"
	.byte	0x1
	.uleb128 0xb9b
	.ascii "SE_SACL_AUTO_INHERITED (0x0800)\0"
	.byte	0x1
	.uleb128 0xb9c
	.ascii "SE_DACL_PROTECTED (0x1000)\0"
	.byte	0x1
	.uleb128 0xb9d
	.ascii "SE_SACL_PROTECTED (0x2000)\0"
	.byte	0x1
	.uleb128 0xb9e
	.ascii "SE_RM_CONTROL_VALID (0x4000)\0"
	.byte	0x1
	.uleb128 0xb9f
	.ascii "SE_SELF_RELATIVE (0x8000)\0"
	.byte	0x1
	.uleb128 0xbbb
	.ascii "ACCESS_OBJECT_GUID 0\0"
	.byte	0x1
	.uleb128 0xbbc
	.ascii "ACCESS_PROPERTY_SET_GUID 1\0"
	.byte	0x1
	.uleb128 0xbbd
	.ascii "ACCESS_PROPERTY_GUID 2\0"
	.byte	0x1
	.uleb128 0xbbf
	.ascii "ACCESS_MAX_LEVEL 4\0"
	.byte	0x1
	.uleb128 0xbc5
	.ascii "AUDIT_ALLOW_NO_PRIVILEGE 0x1\0"
	.byte	0x1
	.uleb128 0xbc7
	.ascii "ACCESS_DS_SOURCE_A \"DS\"\0"
	.byte	0x1
	.uleb128 0xbc8
	.ascii "ACCESS_DS_SOURCE_W L\"DS\"\0"
	.byte	0x1
	.uleb128 0xbc9
	.ascii "ACCESS_DS_OBJECT_TYPE_NAME_A \"Directory Service Object\"\0"
	.byte	0x1
	.uleb128 0xbca
	.ascii "ACCESS_DS_OBJECT_TYPE_NAME_W L\"Directory Service Object\"\0"
	.byte	0x1
	.uleb128 0xbcc
	.ascii "SE_PRIVILEGE_ENABLED_BY_DEFAULT (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0xbcd
	.ascii "SE_PRIVILEGE_ENABLED (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0xbce
	.ascii "SE_PRIVILEGE_REMOVED (0X00000004L)\0"
	.byte	0x1
	.uleb128 0xbcf
	.ascii "SE_PRIVILEGE_USED_FOR_ACCESS (__MSABI_LONG(0x80000000))\0"
	.byte	0x1
	.uleb128 0xbd1
	.ascii "SE_PRIVILEGE_VALID_ATTRIBUTES (SE_PRIVILEGE_ENABLED_BY_DEFAULT | SE_PRIVILEGE_ENABLED | SE_PRIVILEGE_REMOVED | SE_PRIVILEGE_USED_FOR_ACCESS)\0"
	.byte	0x1
	.uleb128 0xbd3
	.ascii "PRIVILEGE_SET_ALL_NECESSARY (1)\0"
	.byte	0x1
	.uleb128 0xbdb
	.ascii "ACCESS_REASON_TYPE_MASK 0x00ff0000\0"
	.byte	0x1
	.uleb128 0xbdc
	.ascii "ACCESS_REASON_DATA_MASK 0x0000ffff\0"
	.byte	0x1
	.uleb128 0xbde
	.ascii "ACCESS_REASON_STAGING_MASK 0x80000000\0"
	.byte	0x1
	.uleb128 0xbdf
	.ascii "ACCESS_REASON_EXDATA_MASK 0x7f000000\0"
	.byte	0x1
	.uleb128 0xbf9
	.ascii "SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE 0x00000001\0"
	.byte	0x1
	.uleb128 0xbfa
	.ascii "SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE 0x00000002\0"
	.byte	0x1
	.uleb128 0xbfb
	.ascii "SE_SECURITY_DESCRIPTOR_VALID_FLAGS 0x00000003\0"
	.byte	0x1
	.uleb128 0xc17
	.ascii "SE_CREATE_TOKEN_NAME TEXT(\"SeCreateTokenPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc18
	.ascii "SE_ASSIGNPRIMARYTOKEN_NAME TEXT(\"SeAssignPrimaryTokenPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc19
	.ascii "SE_LOCK_MEMORY_NAME TEXT(\"SeLockMemoryPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc1a
	.ascii "SE_INCREASE_QUOTA_NAME TEXT(\"SeIncreaseQuotaPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc1b
	.ascii "SE_UNSOLICITED_INPUT_NAME TEXT(\"SeUnsolicitedInputPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc1c
	.ascii "SE_MACHINE_ACCOUNT_NAME TEXT(\"SeMachineAccountPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc1d
	.ascii "SE_TCB_NAME TEXT(\"SeTcbPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc1e
	.ascii "SE_SECURITY_NAME TEXT(\"SeSecurityPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc1f
	.ascii "SE_TAKE_OWNERSHIP_NAME TEXT(\"SeTakeOwnershipPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc20
	.ascii "SE_LOAD_DRIVER_NAME TEXT(\"SeLoadDriverPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc21
	.ascii "SE_SYSTEM_PROFILE_NAME TEXT(\"SeSystemProfilePrivilege\")\0"
	.byte	0x1
	.uleb128 0xc22
	.ascii "SE_SYSTEMTIME_NAME TEXT(\"SeSystemtimePrivilege\")\0"
	.byte	0x1
	.uleb128 0xc23
	.ascii "SE_PROF_SINGLE_PROCESS_NAME TEXT(\"SeProfileSingleProcessPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc24
	.ascii "SE_INC_BASE_PRIORITY_NAME TEXT(\"SeIncreaseBasePriorityPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc25
	.ascii "SE_CREATE_PAGEFILE_NAME TEXT(\"SeCreatePagefilePrivilege\")\0"
	.byte	0x1
	.uleb128 0xc26
	.ascii "SE_CREATE_PERMANENT_NAME TEXT(\"SeCreatePermanentPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc27
	.ascii "SE_BACKUP_NAME TEXT(\"SeBackupPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc28
	.ascii "SE_RESTORE_NAME TEXT(\"SeRestorePrivilege\")\0"
	.byte	0x1
	.uleb128 0xc29
	.ascii "SE_SHUTDOWN_NAME TEXT(\"SeShutdownPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc2a
	.ascii "SE_DEBUG_NAME TEXT(\"SeDebugPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc2b
	.ascii "SE_AUDIT_NAME TEXT(\"SeAuditPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc2c
	.ascii "SE_SYSTEM_ENVIRONMENT_NAME TEXT(\"SeSystemEnvironmentPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc2d
	.ascii "SE_CHANGE_NOTIFY_NAME TEXT(\"SeChangeNotifyPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc2e
	.ascii "SE_REMOTE_SHUTDOWN_NAME TEXT(\"SeRemoteShutdownPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc2f
	.ascii "SE_UNDOCK_NAME TEXT(\"SeUndockPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc30
	.ascii "SE_SYNC_AGENT_NAME TEXT(\"SeSyncAgentPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc31
	.ascii "SE_ENABLE_DELEGATION_NAME TEXT(\"SeEnableDelegationPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc32
	.ascii "SE_MANAGE_VOLUME_NAME TEXT(\"SeManageVolumePrivilege\")\0"
	.byte	0x1
	.uleb128 0xc33
	.ascii "SE_IMPERSONATE_NAME TEXT(\"SeImpersonatePrivilege\")\0"
	.byte	0x1
	.uleb128 0xc34
	.ascii "SE_CREATE_GLOBAL_NAME TEXT(\"SeCreateGlobalPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc35
	.ascii "SE_TRUSTED_CREDMAN_ACCESS_NAME TEXT(\"SeTrustedCredManAccessPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc36
	.ascii "SE_RELABEL_NAME TEXT(\"SeRelabelPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc37
	.ascii "SE_INC_WORKING_SET_NAME TEXT(\"SeIncreaseWorkingSetPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc38
	.ascii "SE_TIME_ZONE_NAME TEXT(\"SeTimeZonePrivilege\")\0"
	.byte	0x1
	.uleb128 0xc39
	.ascii "SE_CREATE_SYMBOLIC_LINK_NAME TEXT(\"SeCreateSymbolicLinkPrivilege\")\0"
	.byte	0x1
	.uleb128 0xc3f
	.ascii "SECURITY_MAX_IMPERSONATION_LEVEL SecurityDelegation\0"
	.byte	0x1
	.uleb128 0xc40
	.ascii "SECURITY_MIN_IMPERSONATION_LEVEL SecurityAnonymous\0"
	.byte	0x1
	.uleb128 0xc41
	.ascii "DEFAULT_IMPERSONATION_LEVEL SecurityImpersonation\0"
	.byte	0x1
	.uleb128 0xc42
	.ascii "VALID_IMPERSONATION_LEVEL(L) (((L) >= SECURITY_MIN_IMPERSONATION_LEVEL) && ((L) <= SECURITY_MAX_IMPERSONATION_LEVEL))\0"
	.byte	0x1
	.uleb128 0xc44
	.ascii "TOKEN_ASSIGN_PRIMARY (0x0001)\0"
	.byte	0x1
	.uleb128 0xc45
	.ascii "TOKEN_DUPLICATE (0x0002)\0"
	.byte	0x1
	.uleb128 0xc46
	.ascii "TOKEN_IMPERSONATE (0x0004)\0"
	.byte	0x1
	.uleb128 0xc47
	.ascii "TOKEN_QUERY (0x0008)\0"
	.byte	0x1
	.uleb128 0xc48
	.ascii "TOKEN_QUERY_SOURCE (0x0010)\0"
	.byte	0x1
	.uleb128 0xc49
	.ascii "TOKEN_ADJUST_PRIVILEGES (0x0020)\0"
	.byte	0x1
	.uleb128 0xc4a
	.ascii "TOKEN_ADJUST_GROUPS (0x0040)\0"
	.byte	0x1
	.uleb128 0xc4b
	.ascii "TOKEN_ADJUST_DEFAULT (0x0080)\0"
	.byte	0x1
	.uleb128 0xc4c
	.ascii "TOKEN_ADJUST_SESSIONID (0x0100)\0"
	.byte	0x1
	.uleb128 0xc4e
	.ascii "TOKEN_ALL_ACCESS_P (STANDARD_RIGHTS_REQUIRED | TOKEN_ASSIGN_PRIMARY | TOKEN_DUPLICATE | TOKEN_IMPERSONATE | TOKEN_QUERY | TOKEN_QUERY_SOURCE | TOKEN_ADJUST_PRIVILEGES | TOKEN_ADJUST_GROUPS | TOKEN_ADJUST_DEFAULT)\0"
	.byte	0x1
	.uleb128 0xc4f
	.ascii "TOKEN_ALL_ACCESS (TOKEN_ALL_ACCESS_P | TOKEN_ADJUST_SESSIONID)\0"
	.byte	0x1
	.uleb128 0xc50
	.ascii "TOKEN_READ (STANDARD_RIGHTS_READ | TOKEN_QUERY)\0"
	.byte	0x1
	.uleb128 0xc52
	.ascii "TOKEN_WRITE (STANDARD_RIGHTS_WRITE | TOKEN_ADJUST_PRIVILEGES | TOKEN_ADJUST_GROUPS | TOKEN_ADJUST_DEFAULT)\0"
	.byte	0x1
	.uleb128 0xc54
	.ascii "TOKEN_EXECUTE (STANDARD_RIGHTS_EXECUTE)\0"
	.byte	0x1
	.uleb128 0xccc
	.ascii "TOKEN_MANDATORY_POLICY_OFF 0x0\0"
	.byte	0x1
	.uleb128 0xccd
	.ascii "TOKEN_MANDATORY_POLICY_NO_WRITE_UP 0x1\0"
	.byte	0x1
	.uleb128 0xcce
	.ascii "TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN 0x2\0"
	.byte	0x1
	.uleb128 0xcd0
	.ascii "TOKEN_MANDATORY_POLICY_VALID_MASK (TOKEN_MANDATORY_POLICY_NO_WRITE_UP | TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN)\0"
	.byte	0x1
	.uleb128 0xce4
	.ascii "POLICY_AUDIT_SUBCATEGORY_COUNT (56)\0"
	.byte	0x1
	.uleb128 0xcea
	.ascii "TOKEN_SOURCE_LENGTH 8\0"
	.byte	0x1
	.uleb128 0xd17
	.ascii "CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID 0x00\0"
	.byte	0x1
	.uleb128 0xd18
	.ascii "CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64 0x01\0"
	.byte	0x1
	.uleb128 0xd19
	.ascii "CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64 0x02\0"
	.byte	0x1
	.uleb128 0xd1a
	.ascii "CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING 0x03\0"
	.byte	0x1
	.uleb128 0xd1b
	.ascii "CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN 0x04\0"
	.byte	0x1
	.uleb128 0xd1c
	.ascii "CLAIM_SECURITY_ATTRIBUTE_TYPE_SID 0x05\0"
	.byte	0x1
	.uleb128 0xd1d
	.ascii "CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN 0x06\0"
	.byte	0x1
	.uleb128 0xd29
	.ascii "CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING 0x10\0"
	.byte	0x1
	.uleb128 0xd2a
	.ascii "CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE 0x0001\0"
	.byte	0x1
	.uleb128 0xd2b
	.ascii "CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE 0x0002\0"
	.byte	0x1
	.uleb128 0xd2c
	.ascii "CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY 0x0004\0"
	.byte	0x1
	.uleb128 0xd2d
	.ascii "CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT 0x0008\0"
	.byte	0x1
	.uleb128 0xd2e
	.ascii "CLAIM_SECURITY_ATTRIBUTE_DISABLED 0x0010\0"
	.byte	0x1
	.uleb128 0xd2f
	.ascii "CLAIM_SECURITY_ATTRIBUTE_MANDATORY 0x0020\0"
	.byte	0x1
	.uleb128 0xd31
	.ascii "CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS (CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE | CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE | CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY | CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT | CLAIM_SECURITY_ATTRIBUTE_DISABLED | CLAIM_SECURITY_ATTRIBUTE_MANDATORY)\0"
	.byte	0x1
	.uleb128 0xd32
	.ascii "CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS 0xffff0000\0"
	.byte	0x1
	.uleb128 0xd52
	.ascii "CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1 1\0"
	.byte	0x1
	.uleb128 0xd54
	.ascii "CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1\0"
	.byte	0x1
	.uleb128 0xd5f
	.ascii "SECURITY_DYNAMIC_TRACKING (TRUE)\0"
	.byte	0x1
	.uleb128 0xd60
	.ascii "SECURITY_STATIC_TRACKING (FALSE)\0"
	.byte	0x1
	.uleb128 0xd72
	.ascii "DISABLE_MAX_PRIVILEGE 0x1\0"
	.byte	0x1
	.uleb128 0xd73
	.ascii "SANDBOX_INERT 0x2\0"
	.byte	0x1
	.uleb128 0xd74
	.ascii "LUA_TOKEN 0x4\0"
	.byte	0x1
	.uleb128 0xd75
	.ascii "WRITE_RESTRICTED 0x8\0"
	.byte	0x1
	.uleb128 0xd79
	.ascii "OWNER_SECURITY_INFORMATION (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0xd7a
	.ascii "GROUP_SECURITY_INFORMATION (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0xd7b
	.ascii "DACL_SECURITY_INFORMATION (__MSABI_LONG(0x00000004))\0"
	.byte	0x1
	.uleb128 0xd7c
	.ascii "SACL_SECURITY_INFORMATION (__MSABI_LONG(0x00000008))\0"
	.byte	0x1
	.uleb128 0xd7d
	.ascii "LABEL_SECURITY_INFORMATION (__MSABI_LONG(0x00000010))\0"
	.byte	0x1
	.uleb128 0xd7e
	.ascii "ATTRIBUTE_SECURITY_INFORMATION (__MSABI_LONG(0x00000020))\0"
	.byte	0x1
	.uleb128 0xd7f
	.ascii "SCOPE_SECURITY_INFORMATION (__MSABI_LONG(0x00000040))\0"
	.byte	0x1
	.uleb128 0xd80
	.ascii "BACKUP_SECURITY_INFORMATION (__MSABI_LONG(0x00010000))\0"
	.byte	0x1
	.uleb128 0xd82
	.ascii "PROTECTED_DACL_SECURITY_INFORMATION (__MSABI_LONG(0x80000000))\0"
	.byte	0x1
	.uleb128 0xd83
	.ascii "PROTECTED_SACL_SECURITY_INFORMATION (__MSABI_LONG(0x40000000))\0"
	.byte	0x1
	.uleb128 0xd84
	.ascii "UNPROTECTED_DACL_SECURITY_INFORMATION (__MSABI_LONG(0x20000000))\0"
	.byte	0x1
	.uleb128 0xd85
	.ascii "UNPROTECTED_SACL_SECURITY_INFORMATION (__MSABI_LONG(0x10000000))\0"
	.byte	0x1
	.uleb128 0xd8d
	.ascii "SE_LEARNING_MODE_FLAG_PERMISSIVE 0x00000001\0"
	.byte	0x1
	.uleb128 0xd96
	.ascii "PROCESS_TERMINATE (0x0001)\0"
	.byte	0x1
	.uleb128 0xd97
	.ascii "PROCESS_CREATE_THREAD (0x0002)\0"
	.byte	0x1
	.uleb128 0xd98
	.ascii "PROCESS_SET_SESSIONID (0x0004)\0"
	.byte	0x1
	.uleb128 0xd99
	.ascii "PROCESS_VM_OPERATION (0x0008)\0"
	.byte	0x1
	.uleb128 0xd9a
	.ascii "PROCESS_VM_READ (0x0010)\0"
	.byte	0x1
	.uleb128 0xd9b
	.ascii "PROCESS_VM_WRITE (0x0020)\0"
	.byte	0x1
	.uleb128 0xd9c
	.ascii "PROCESS_DUP_HANDLE (0x0040)\0"
	.byte	0x1
	.uleb128 0xd9d
	.ascii "PROCESS_CREATE_PROCESS (0x0080)\0"
	.byte	0x1
	.uleb128 0xd9e
	.ascii "PROCESS_SET_QUOTA (0x0100)\0"
	.byte	0x1
	.uleb128 0xd9f
	.ascii "PROCESS_SET_INFORMATION (0x0200)\0"
	.byte	0x1
	.uleb128 0xda0
	.ascii "PROCESS_QUERY_INFORMATION (0x0400)\0"
	.byte	0x1
	.uleb128 0xda1
	.ascii "PROCESS_SUSPEND_RESUME (0x0800)\0"
	.byte	0x1
	.uleb128 0xda2
	.ascii "PROCESS_QUERY_LIMITED_INFORMATION (0x1000)\0"
	.byte	0x1
	.uleb128 0xda7
	.ascii "PROCESS_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0xfff)\0"
	.byte	0x1
	.uleb128 0xdab
	.ascii "MAXIMUM_PROC_PER_GROUP 64\0"
	.byte	0x1
	.uleb128 0xdb0
	.ascii "MAXIMUM_PROCESSORS MAXIMUM_PROC_PER_GROUP\0"
	.byte	0x1
	.uleb128 0xdb2
	.ascii "THREAD_TERMINATE (0x0001)\0"
	.byte	0x1
	.uleb128 0xdb3
	.ascii "THREAD_SUSPEND_RESUME (0x0002)\0"
	.byte	0x1
	.uleb128 0xdb4
	.ascii "THREAD_GET_CONTEXT (0x0008)\0"
	.byte	0x1
	.uleb128 0xdb5
	.ascii "THREAD_SET_CONTEXT (0x0010)\0"
	.byte	0x1
	.uleb128 0xdb6
	.ascii "THREAD_SET_INFORMATION (0x0020)\0"
	.byte	0x1
	.uleb128 0xdb7
	.ascii "THREAD_QUERY_INFORMATION (0x0040)\0"
	.byte	0x1
	.uleb128 0xdb8
	.ascii "THREAD_SET_THREAD_TOKEN (0x0080)\0"
	.byte	0x1
	.uleb128 0xdb9
	.ascii "THREAD_IMPERSONATE (0x0100)\0"
	.byte	0x1
	.uleb128 0xdba
	.ascii "THREAD_DIRECT_IMPERSONATION (0x0200)\0"
	.byte	0x1
	.uleb128 0xdbb
	.ascii "THREAD_SET_LIMITED_INFORMATION (0x0400)\0"
	.byte	0x1
	.uleb128 0xdbc
	.ascii "THREAD_QUERY_LIMITED_INFORMATION (0x0800)\0"
	.byte	0x1
	.uleb128 0xdc1
	.ascii "THREAD_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x3ff)\0"
	.byte	0x1
	.uleb128 0xdc4
	.ascii "JOB_OBJECT_ASSIGN_PROCESS (0x0001)\0"
	.byte	0x1
	.uleb128 0xdc5
	.ascii "JOB_OBJECT_SET_ATTRIBUTES (0x0002)\0"
	.byte	0x1
	.uleb128 0xdc6
	.ascii "JOB_OBJECT_QUERY (0x0004)\0"
	.byte	0x1
	.uleb128 0xdc7
	.ascii "JOB_OBJECT_TERMINATE (0x0008)\0"
	.byte	0x1
	.uleb128 0xdc8
	.ascii "JOB_OBJECT_SET_SECURITY_ATTRIBUTES (0x0010)\0"
	.byte	0x1
	.uleb128 0xdc9
	.ascii "JOB_OBJECT_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x1F)\0"
	.byte	0x1
	.uleb128 0xdd1
	.ascii "FLS_MAXIMUM_AVAILABLE 128\0"
	.byte	0x1
	.uleb128 0xdd2
	.ascii "TLS_MINIMUM_AVAILABLE 64\0"
	.byte	0x1
	.uleb128 0xde7
	.ascii "_NT_TIB_DEFINED \0"
	.byte	0x1
	.uleb128 0xe15
	.ascii "THREAD_BASE_PRIORITY_LOWRT 15\0"
	.byte	0x1
	.uleb128 0xe16
	.ascii "THREAD_BASE_PRIORITY_MAX 2\0"
	.byte	0x1
	.uleb128 0xe17
	.ascii "THREAD_BASE_PRIORITY_MIN (-2)\0"
	.byte	0x1
	.uleb128 0xe18
	.ascii "THREAD_BASE_PRIORITY_IDLE (-15)\0"
	.byte	0x1
	.uleb128 0xe29
	.ascii "QUOTA_LIMITS_HARDWS_MIN_ENABLE 0x00000001\0"
	.byte	0x1
	.uleb128 0xe2a
	.ascii "QUOTA_LIMITS_HARDWS_MIN_DISABLE 0x00000002\0"
	.byte	0x1
	.uleb128 0xe2b
	.ascii "QUOTA_LIMITS_HARDWS_MAX_ENABLE 0x00000004\0"
	.byte	0x1
	.uleb128 0xe2c
	.ascii "QUOTA_LIMITS_HARDWS_MAX_DISABLE 0x00000008\0"
	.byte	0x1
	.uleb128 0xe2d
	.ascii "QUOTA_LIMITS_USE_DEFAULT_LIMITS 0x00000010\0"
	.byte	0x1
	.uleb128 0xe50
	.ascii "MAX_HW_COUNTERS 16\0"
	.byte	0x1
	.uleb128 0xe51
	.ascii "THREAD_PROFILING_FLAG_DISPATCH 0x1\0"
	.byte	0x1
	.uleb128 0xf0c
	.ascii "JOB_OBJECT_TERMINATE_AT_END_OF_JOB 0\0"
	.byte	0x1
	.uleb128 0xf0d
	.ascii "JOB_OBJECT_POST_AT_END_OF_JOB 1\0"
	.byte	0x1
	.uleb128 0xf0f
	.ascii "JOB_OBJECT_MSG_END_OF_JOB_TIME 1\0"
	.byte	0x1
	.uleb128 0xf10
	.ascii "JOB_OBJECT_MSG_END_OF_PROCESS_TIME 2\0"
	.byte	0x1
	.uleb128 0xf11
	.ascii "JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT 3\0"
	.byte	0x1
	.uleb128 0xf12
	.ascii "JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO 4\0"
	.byte	0x1
	.uleb128 0xf13
	.ascii "JOB_OBJECT_MSG_NEW_PROCESS 6\0"
	.byte	0x1
	.uleb128 0xf14
	.ascii "JOB_OBJECT_MSG_EXIT_PROCESS 7\0"
	.byte	0x1
	.uleb128 0xf15
	.ascii "JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS 8\0"
	.byte	0x1
	.uleb128 0xf16
	.ascii "JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT 9\0"
	.byte	0x1
	.uleb128 0xf17
	.ascii "JOB_OBJECT_MSG_JOB_MEMORY_LIMIT 10\0"
	.byte	0x1
	.uleb128 0xf18
	.ascii "JOB_OBJECT_MSG_NOTIFICATION_LIMIT 11\0"
	.byte	0x1
	.uleb128 0xf19
	.ascii "JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT 12\0"
	.byte	0x1
	.uleb128 0xf1b
	.ascii "JOB_OBJECT_MSG_MINIMUM 1\0"
	.byte	0x1
	.uleb128 0xf1c
	.ascii "JOB_OBJECT_MSG_MAXIMUM 12\0"
	.byte	0x1
	.uleb128 0xf1e
	.ascii "JOB_OBJECT_LIMIT_WORKINGSET 0x00000001\0"
	.byte	0x1
	.uleb128 0xf1f
	.ascii "JOB_OBJECT_LIMIT_PROCESS_TIME 0x00000002\0"
	.byte	0x1
	.uleb128 0xf20
	.ascii "JOB_OBJECT_LIMIT_JOB_TIME 0x00000004\0"
	.byte	0x1
	.uleb128 0xf21
	.ascii "JOB_OBJECT_LIMIT_ACTIVE_PROCESS 0x00000008\0"
	.byte	0x1
	.uleb128 0xf22
	.ascii "JOB_OBJECT_LIMIT_AFFINITY 0x00000010\0"
	.byte	0x1
	.uleb128 0xf23
	.ascii "JOB_OBJECT_LIMIT_PRIORITY_CLASS 0x00000020\0"
	.byte	0x1
	.uleb128 0xf24
	.ascii "JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME 0x00000040\0"
	.byte	0x1
	.uleb128 0xf25
	.ascii "JOB_OBJECT_LIMIT_SCHEDULING_CLASS 0x00000080\0"
	.byte	0x1
	.uleb128 0xf27
	.ascii "JOB_OBJECT_LIMIT_PROCESS_MEMORY 0x00000100\0"
	.byte	0x1
	.uleb128 0xf28
	.ascii "JOB_OBJECT_LIMIT_JOB_MEMORY 0x00000200\0"
	.byte	0x1
	.uleb128 0xf29
	.ascii "JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 0x00000400\0"
	.byte	0x1
	.uleb128 0xf2a
	.ascii "JOB_OBJECT_LIMIT_BREAKAWAY_OK 0x00000800\0"
	.byte	0x1
	.uleb128 0xf2b
	.ascii "JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK 0x00001000\0"
	.byte	0x1
	.uleb128 0xf2c
	.ascii "JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE 0x00002000\0"
	.byte	0x1
	.uleb128 0xf2e
	.ascii "JOB_OBJECT_LIMIT_SUBSET_AFFINITY 0x00004000\0"
	.byte	0x1
	.uleb128 0xf2f
	.ascii "JOB_OBJECT_LIMIT_RESERVED3 0x00008000\0"
	.byte	0x1
	.uleb128 0xf30
	.ascii "JOB_OBJECT_LIMIT_JOB_READ_BYTES 0x00010000\0"
	.byte	0x1
	.uleb128 0xf31
	.ascii "JOB_OBJECT_LIMIT_JOB_WRITE_BYTES 0x00020000\0"
	.byte	0x1
	.uleb128 0xf32
	.ascii "JOB_OBJECT_LIMIT_RATE_CONTROL 0x00040000\0"
	.byte	0x1
	.uleb128 0xf34
	.ascii "JOB_OBJECT_LIMIT_RESERVED3 0x00008000\0"
	.byte	0x1
	.uleb128 0xf35
	.ascii "JOB_OBJECT_LIMIT_RESERVED4 0x00010000\0"
	.byte	0x1
	.uleb128 0xf36
	.ascii "JOB_OBJECT_LIMIT_RESERVED5 0x00020000\0"
	.byte	0x1
	.uleb128 0xf37
	.ascii "JOB_OBJECT_LIMIT_RESERVED6 0x00040000\0"
	.byte	0x1
	.uleb128 0xf39
	.ascii "JOB_OBJECT_LIMIT_VALID_FLAGS 0x0007ffff\0"
	.byte	0x1
	.uleb128 0xf3b
	.ascii "JOB_OBJECT_BASIC_LIMIT_VALID_FLAGS 0x000000ff\0"
	.byte	0x1
	.uleb128 0xf3c
	.ascii "JOB_OBJECT_EXTENDED_LIMIT_VALID_FLAGS 0x00007fff\0"
	.byte	0x1
	.uleb128 0xf3d
	.ascii "JOB_OBJECT_RESERVED_LIMIT_VALID_FLAGS 0x0007ffff\0"
	.byte	0x1
	.uleb128 0xf3e
	.ascii "JOB_OBJECT_NOTIFICATION_LIMIT_VALID_FLAGS 0x00070204\0"
	.byte	0x1
	.uleb128 0xf40
	.ascii "JOB_OBJECT_UILIMIT_NONE 0x00000000\0"
	.byte	0x1
	.uleb128 0xf42
	.ascii "JOB_OBJECT_UILIMIT_HANDLES 0x00000001\0"
	.byte	0x1
	.uleb128 0xf43
	.ascii "JOB_OBJECT_UILIMIT_READCLIPBOARD 0x00000002\0"
	.byte	0x1
	.uleb128 0xf44
	.ascii "JOB_OBJECT_UILIMIT_WRITECLIPBOARD 0x00000004\0"
	.byte	0x1
	.uleb128 0xf45
	.ascii "JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS 0x00000008\0"
	.byte	0x1
	.uleb128 0xf46
	.ascii "JOB_OBJECT_UILIMIT_DISPLAYSETTINGS 0x00000010\0"
	.byte	0x1
	.uleb128 0xf47
	.ascii "JOB_OBJECT_UILIMIT_GLOBALATOMS 0x00000020\0"
	.byte	0x1
	.uleb128 0xf48
	.ascii "JOB_OBJECT_UILIMIT_DESKTOP 0x00000040\0"
	.byte	0x1
	.uleb128 0xf49
	.ascii "JOB_OBJECT_UILIMIT_EXITWINDOWS 0x00000080\0"
	.byte	0x1
	.uleb128 0xf4b
	.ascii "JOB_OBJECT_UILIMIT_ALL 0x000000FF\0"
	.byte	0x1
	.uleb128 0xf4d
	.ascii "JOB_OBJECT_UI_VALID_FLAGS 0x000000FF\0"
	.byte	0x1
	.uleb128 0xf4f
	.ascii "JOB_OBJECT_SECURITY_NO_ADMIN 0x00000001\0"
	.byte	0x1
	.uleb128 0xf50
	.ascii "JOB_OBJECT_SECURITY_RESTRICTED_TOKEN 0x00000002\0"
	.byte	0x1
	.uleb128 0xf51
	.ascii "JOB_OBJECT_SECURITY_ONLY_TOKEN 0x00000004\0"
	.byte	0x1
	.uleb128 0xf52
	.ascii "JOB_OBJECT_SECURITY_FILTER_TOKENS 0x00000008\0"
	.byte	0x1
	.uleb128 0xf54
	.ascii "JOB_OBJECT_SECURITY_VALID_FLAGS 0x0000000f\0"
	.byte	0x1
	.uleb128 0xf56
	.ascii "JOB_OBJECT_CPU_RATE_CONTROL_ENABLE 0x1\0"
	.byte	0x1
	.uleb128 0xf57
	.ascii "JOB_OBJECT_CPU_RATE_CONTROL_WEIGHT_BASED 0x2\0"
	.byte	0x1
	.uleb128 0xf58
	.ascii "JOB_OBJECT_CPU_RATE_CONTROL_HARD_CAP 0x4\0"
	.byte	0x1
	.uleb128 0xf59
	.ascii "JOB_OBJECT_CPU_RATE_CONTROL_NOTIFY 0x8\0"
	.byte	0x1
	.uleb128 0xf5a
	.ascii "JOB_OBJECT_CPU_RATE_CONTROL_VALID_FLAGS 0xf\0"
	.byte	0x1
	.uleb128 0xf7b
	.ascii "EVENT_MODIFY_STATE 0x0002\0"
	.byte	0x1
	.uleb128 0xf7c
	.ascii "EVENT_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|0x3)\0"
	.byte	0x1
	.uleb128 0xf7e
	.ascii "MUTANT_QUERY_STATE 0x0001\0"
	.byte	0x1
	.uleb128 0xf80
	.ascii "MUTANT_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE| MUTANT_QUERY_STATE)\0"
	.byte	0x1
	.uleb128 0xf81
	.ascii "SEMAPHORE_MODIFY_STATE 0x0002\0"
	.byte	0x1
	.uleb128 0xf82
	.ascii "SEMAPHORE_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|0x3)\0"
	.byte	0x1
	.uleb128 0xf84
	.ascii "TIMER_QUERY_STATE 0x0001\0"
	.byte	0x1
	.uleb128 0xf85
	.ascii "TIMER_MODIFY_STATE 0x0002\0"
	.byte	0x1
	.uleb128 0xf87
	.ascii "TIMER_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE| TIMER_QUERY_STATE|TIMER_MODIFY_STATE)\0"
	.byte	0x1
	.uleb128 0xf89
	.ascii "TIME_ZONE_ID_UNKNOWN 0\0"
	.byte	0x1
	.uleb128 0xf8a
	.ascii "TIME_ZONE_ID_STANDARD 1\0"
	.byte	0x1
	.uleb128 0xf8b
	.ascii "TIME_ZONE_ID_DAYLIGHT 2\0"
	.byte	0x1
	.uleb128 0xf92
	.ascii "LTP_PC_SMT 0x1\0"
	.byte	0x1
	.uleb128 0xf98
	.ascii "CACHE_FULLY_ASSOCIATIVE 0xFF\0"
	.byte	0x1
	.uleb128 0xfe7
	.ascii "PROCESSOR_INTEL_386 386\0"
	.byte	0x1
	.uleb128 0xfe8
	.ascii "PROCESSOR_INTEL_486 486\0"
	.byte	0x1
	.uleb128 0xfe9
	.ascii "PROCESSOR_INTEL_PENTIUM 586\0"
	.byte	0x1
	.uleb128 0xfea
	.ascii "PROCESSOR_INTEL_IA64 2200\0"
	.byte	0x1
	.uleb128 0xfeb
	.ascii "PROCESSOR_AMD_X8664 8664\0"
	.byte	0x1
	.uleb128 0xfec
	.ascii "PROCESSOR_MIPS_R4000 4000\0"
	.byte	0x1
	.uleb128 0xfed
	.ascii "PROCESSOR_ALPHA_21064 21064\0"
	.byte	0x1
	.uleb128 0xfee
	.ascii "PROCESSOR_PPC_601 601\0"
	.byte	0x1
	.uleb128 0xfef
	.ascii "PROCESSOR_PPC_603 603\0"
	.byte	0x1
	.uleb128 0xff0
	.ascii "PROCESSOR_PPC_604 604\0"
	.byte	0x1
	.uleb128 0xff1
	.ascii "PROCESSOR_PPC_620 620\0"
	.byte	0x1
	.uleb128 0xff2
	.ascii "PROCESSOR_HITACHI_SH3 10003\0"
	.byte	0x1
	.uleb128 0xff3
	.ascii "PROCESSOR_HITACHI_SH3E 10004\0"
	.byte	0x1
	.uleb128 0xff4
	.ascii "PROCESSOR_HITACHI_SH4 10005\0"
	.byte	0x1
	.uleb128 0xff5
	.ascii "PROCESSOR_MOTOROLA_821 821\0"
	.byte	0x1
	.uleb128 0xff6
	.ascii "PROCESSOR_SHx_SH3 103\0"
	.byte	0x1
	.uleb128 0xff7
	.ascii "PROCESSOR_SHx_SH4 104\0"
	.byte	0x1
	.uleb128 0xff8
	.ascii "PROCESSOR_STRONGARM 2577\0"
	.byte	0x1
	.uleb128 0xff9
	.ascii "PROCESSOR_ARM720 1824\0"
	.byte	0x1
	.uleb128 0xffa
	.ascii "PROCESSOR_ARM820 2080\0"
	.byte	0x1
	.uleb128 0xffb
	.ascii "PROCESSOR_ARM920 2336\0"
	.byte	0x1
	.uleb128 0xffc
	.ascii "PROCESSOR_ARM_7TDMI 70001\0"
	.byte	0x1
	.uleb128 0xffd
	.ascii "PROCESSOR_OPTIL 0x494f\0"
	.byte	0x1
	.uleb128 0xfff
	.ascii "PROCESSOR_ARCHITECTURE_INTEL 0\0"
	.byte	0x1
	.uleb128 0x1000
	.ascii "PROCESSOR_ARCHITECTURE_MIPS 1\0"
	.byte	0x1
	.uleb128 0x1001
	.ascii "PROCESSOR_ARCHITECTURE_ALPHA 2\0"
	.byte	0x1
	.uleb128 0x1002
	.ascii "PROCESSOR_ARCHITECTURE_PPC 3\0"
	.byte	0x1
	.uleb128 0x1003
	.ascii "PROCESSOR_ARCHITECTURE_SHX 4\0"
	.byte	0x1
	.uleb128 0x1004
	.ascii "PROCESSOR_ARCHITECTURE_ARM 5\0"
	.byte	0x1
	.uleb128 0x1005
	.ascii "PROCESSOR_ARCHITECTURE_IA64 6\0"
	.byte	0x1
	.uleb128 0x1006
	.ascii "PROCESSOR_ARCHITECTURE_ALPHA64 7\0"
	.byte	0x1
	.uleb128 0x1007
	.ascii "PROCESSOR_ARCHITECTURE_MSIL 8\0"
	.byte	0x1
	.uleb128 0x1008
	.ascii "PROCESSOR_ARCHITECTURE_AMD64 9\0"
	.byte	0x1
	.uleb128 0x1009
	.ascii "PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 10\0"
	.byte	0x1
	.uleb128 0x100a
	.ascii "PROCESSOR_ARCHITECTURE_NEUTRAL 11\0"
	.byte	0x1
	.uleb128 0x100c
	.ascii "PROCESSOR_ARCHITECTURE_UNKNOWN 0xffff\0"
	.byte	0x1
	.uleb128 0x100e
	.ascii "PF_FLOATING_POINT_PRECISION_ERRATA 0\0"
	.byte	0x1
	.uleb128 0x100f
	.ascii "PF_FLOATING_POINT_EMULATED 1\0"
	.byte	0x1
	.uleb128 0x1010
	.ascii "PF_COMPARE_EXCHANGE_DOUBLE 2\0"
	.byte	0x1
	.uleb128 0x1011
	.ascii "PF_MMX_INSTRUCTIONS_AVAILABLE 3\0"
	.byte	0x1
	.uleb128 0x1012
	.ascii "PF_PPC_MOVEMEM_64BIT_OK 4\0"
	.byte	0x1
	.uleb128 0x1013
	.ascii "PF_ALPHA_BYTE_INSTRUCTIONS 5\0"
	.byte	0x1
	.uleb128 0x1014
	.ascii "PF_XMMI_INSTRUCTIONS_AVAILABLE 6\0"
	.byte	0x1
	.uleb128 0x1015
	.ascii "PF_3DNOW_INSTRUCTIONS_AVAILABLE 7\0"
	.byte	0x1
	.uleb128 0x1016
	.ascii "PF_RDTSC_INSTRUCTION_AVAILABLE 8\0"
	.byte	0x1
	.uleb128 0x1017
	.ascii "PF_PAE_ENABLED 9\0"
	.byte	0x1
	.uleb128 0x1018
	.ascii "PF_XMMI64_INSTRUCTIONS_AVAILABLE 10\0"
	.byte	0x1
	.uleb128 0x1019
	.ascii "PF_SSE_DAZ_MODE_AVAILABLE 11\0"
	.byte	0x1
	.uleb128 0x101a
	.ascii "PF_NX_ENABLED 12\0"
	.byte	0x1
	.uleb128 0x101b
	.ascii "PF_SSE3_INSTRUCTIONS_AVAILABLE 13\0"
	.byte	0x1
	.uleb128 0x101c
	.ascii "PF_COMPARE_EXCHANGE128 14\0"
	.byte	0x1
	.uleb128 0x101d
	.ascii "PF_COMPARE64_EXCHANGE128 15\0"
	.byte	0x1
	.uleb128 0x101e
	.ascii "PF_CHANNELS_ENABLED 16\0"
	.byte	0x1
	.uleb128 0x101f
	.ascii "PF_XSAVE_ENABLED 17\0"
	.byte	0x1
	.uleb128 0x1020
	.ascii "PF_ARM_VFP_32_REGISTERS_AVAILABLE 18\0"
	.byte	0x1
	.uleb128 0x1021
	.ascii "PF_ARM_NEON_INSTRUCTIONS_AVAILABLE 19\0"
	.byte	0x1
	.uleb128 0x1022
	.ascii "PF_SECOND_LEVEL_ADDRESS_TRANSLATION 20\0"
	.byte	0x1
	.uleb128 0x1023
	.ascii "PF_VIRT_FIRMWARE_ENABLED 21\0"
	.byte	0x1
	.uleb128 0x1024
	.ascii "PF_RDWRFSGSBASE_AVAILABLE 22\0"
	.byte	0x1
	.uleb128 0x1025
	.ascii "PF_FASTFAIL_AVAILABLE 23\0"
	.byte	0x1
	.uleb128 0x1026
	.ascii "PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE 24\0"
	.byte	0x1
	.uleb128 0x1027
	.ascii "PF_ARM_64BIT_LOADSTORE_ATOMIC 25\0"
	.byte	0x1
	.uleb128 0x1028
	.ascii "PF_ARM_EXTERNAL_CACHE_AVAILABLE 26\0"
	.byte	0x1
	.uleb128 0x1029
	.ascii "PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE 27\0"
	.byte	0x1
	.uleb128 0x102b
	.ascii "XSTATE_LEGACY_FLOATING_POINT (0)\0"
	.byte	0x1
	.uleb128 0x102c
	.ascii "XSTATE_LEGACY_SSE (1)\0"
	.byte	0x1
	.uleb128 0x102d
	.ascii "XSTATE_GSSE (2)\0"
	.byte	0x1
	.uleb128 0x102e
	.ascii "XSTATE_AVX (XSTATE_GSSE)\0"
	.byte	0x1
	.uleb128 0x1030
	.ascii "XSTATE_MASK_LEGACY_FLOATING_POINT (1ULL << (XSTATE_LEGACY_FLOATING_POINT))\0"
	.byte	0x1
	.uleb128 0x1031
	.ascii "XSTATE_MASK_LEGACY_SSE (1ULL << (XSTATE_LEGACY_SSE))\0"
	.byte	0x1
	.uleb128 0x1032
	.ascii "XSTATE_MASK_LEGACY (XSTATE_MASK_LEGACY_FLOATING_POINT | XSTATE_MASK_LEGACY_SSE)\0"
	.byte	0x1
	.uleb128 0x1033
	.ascii "XSTATE_MASK_GSSE (1LLU << (XSTATE_GSSE))\0"
	.byte	0x1
	.uleb128 0x1034
	.ascii "XSTATE_MASK_AVX (XSTATE_MASK_GSSE)\0"
	.byte	0x1
	.uleb128 0x1036
	.ascii "MAXIMUM_XSTATE_FEATURES (64)\0"
	.byte	0x1
	.uleb128 0x1065
	.ascii "SECTION_QUERY 0x0001\0"
	.byte	0x1
	.uleb128 0x1066
	.ascii "SECTION_MAP_WRITE 0x0002\0"
	.byte	0x1
	.uleb128 0x1067
	.ascii "SECTION_MAP_READ 0x0004\0"
	.byte	0x1
	.uleb128 0x1068
	.ascii "SECTION_MAP_EXECUTE 0x0008\0"
	.byte	0x1
	.uleb128 0x1069
	.ascii "SECTION_EXTEND_SIZE 0x0010\0"
	.byte	0x1
	.uleb128 0x106a
	.ascii "SECTION_MAP_EXECUTE_EXPLICIT 0x0020\0"
	.byte	0x1
	.uleb128 0x106c
	.ascii "SECTION_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED|SECTION_QUERY| SECTION_MAP_WRITE | SECTION_MAP_READ | SECTION_MAP_EXECUTE | SECTION_EXTEND_SIZE)\0"
	.byte	0x1
	.uleb128 0x106e
	.ascii "SESSION_QUERY_ACCESS 0x1\0"
	.byte	0x1
	.uleb128 0x106f
	.ascii "SESSION_MODIFY_ACCESS 0x2\0"
	.byte	0x1
	.uleb128 0x1071
	.ascii "SESSION_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | SESSION_QUERY_ACCESS | SESSION_MODIFY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1073
	.ascii "PAGE_NOACCESS 0x01\0"
	.byte	0x1
	.uleb128 0x1074
	.ascii "PAGE_READONLY 0x02\0"
	.byte	0x1
	.uleb128 0x1075
	.ascii "PAGE_READWRITE 0x04\0"
	.byte	0x1
	.uleb128 0x1076
	.ascii "PAGE_WRITECOPY 0x08\0"
	.byte	0x1
	.uleb128 0x1077
	.ascii "PAGE_EXECUTE 0x10\0"
	.byte	0x1
	.uleb128 0x1078
	.ascii "PAGE_EXECUTE_READ 0x20\0"
	.byte	0x1
	.uleb128 0x1079
	.ascii "PAGE_EXECUTE_READWRITE 0x40\0"
	.byte	0x1
	.uleb128 0x107a
	.ascii "PAGE_EXECUTE_WRITECOPY 0x80\0"
	.byte	0x1
	.uleb128 0x107b
	.ascii "PAGE_GUARD 0x100\0"
	.byte	0x1
	.uleb128 0x107c
	.ascii "PAGE_NOCACHE 0x200\0"
	.byte	0x1
	.uleb128 0x107d
	.ascii "PAGE_WRITECOMBINE 0x400\0"
	.byte	0x1
	.uleb128 0x107e
	.ascii "MEM_COMMIT 0x1000\0"
	.byte	0x1
	.uleb128 0x107f
	.ascii "MEM_RESERVE 0x2000\0"
	.byte	0x1
	.uleb128 0x1080
	.ascii "MEM_DECOMMIT 0x4000\0"
	.byte	0x1
	.uleb128 0x1081
	.ascii "MEM_RELEASE 0x8000\0"
	.byte	0x1
	.uleb128 0x1082
	.ascii "MEM_FREE 0x10000\0"
	.byte	0x1
	.uleb128 0x1083
	.ascii "MEM_PRIVATE 0x20000\0"
	.byte	0x1
	.uleb128 0x1084
	.ascii "MEM_MAPPED 0x40000\0"
	.byte	0x1
	.uleb128 0x1085
	.ascii "MEM_RESET 0x80000\0"
	.byte	0x1
	.uleb128 0x1086
	.ascii "MEM_TOP_DOWN 0x100000\0"
	.byte	0x1
	.uleb128 0x1087
	.ascii "MEM_WRITE_WATCH 0x200000\0"
	.byte	0x1
	.uleb128 0x1088
	.ascii "MEM_PHYSICAL 0x400000\0"
	.byte	0x1
	.uleb128 0x1089
	.ascii "MEM_ROTATE 0x800000\0"
	.byte	0x1
	.uleb128 0x108a
	.ascii "MEM_LARGE_PAGES 0x20000000\0"
	.byte	0x1
	.uleb128 0x108b
	.ascii "MEM_4MB_PAGES 0x80000000\0"
	.byte	0x1
	.uleb128 0x108c
	.ascii "SEC_FILE 0x800000\0"
	.byte	0x1
	.uleb128 0x108d
	.ascii "SEC_IMAGE 0x1000000\0"
	.byte	0x1
	.uleb128 0x108e
	.ascii "SEC_PROTECTED_IMAGE 0x2000000\0"
	.byte	0x1
	.uleb128 0x108f
	.ascii "SEC_RESERVE 0x4000000\0"
	.byte	0x1
	.uleb128 0x1090
	.ascii "SEC_COMMIT 0x8000000\0"
	.byte	0x1
	.uleb128 0x1091
	.ascii "SEC_NOCACHE 0x10000000\0"
	.byte	0x1
	.uleb128 0x1092
	.ascii "SEC_WRITECOMBINE 0x40000000\0"
	.byte	0x1
	.uleb128 0x1093
	.ascii "SEC_LARGE_PAGES 0x80000000\0"
	.byte	0x1
	.uleb128 0x1095
	.ascii "SEC_IMAGE_NO_EXECUTE (SEC_IMAGE | SEC_NOCACHE)\0"
	.byte	0x1
	.uleb128 0x1096
	.ascii "MEM_IMAGE SEC_IMAGE\0"
	.byte	0x1
	.uleb128 0x1097
	.ascii "WRITE_WATCH_FLAG_RESET 0x01\0"
	.byte	0x1
	.uleb128 0x1098
	.ascii "MEM_UNMAP_WITH_TRANSIENT_BOOST 0x01\0"
	.byte	0x1
	.uleb128 0x109a
	.ascii "FILE_READ_DATA (0x0001)\0"
	.byte	0x1
	.uleb128 0x109b
	.ascii "FILE_LIST_DIRECTORY (0x0001)\0"
	.byte	0x1
	.uleb128 0x109d
	.ascii "FILE_WRITE_DATA (0x0002)\0"
	.byte	0x1
	.uleb128 0x109e
	.ascii "FILE_ADD_FILE (0x0002)\0"
	.byte	0x1
	.uleb128 0x10a0
	.ascii "FILE_APPEND_DATA (0x0004)\0"
	.byte	0x1
	.uleb128 0x10a1
	.ascii "FILE_ADD_SUBDIRECTORY (0x0004)\0"
	.byte	0x1
	.uleb128 0x10a2
	.ascii "FILE_CREATE_PIPE_INSTANCE (0x0004)\0"
	.byte	0x1
	.uleb128 0x10a4
	.ascii "FILE_READ_EA (0x0008)\0"
	.byte	0x1
	.uleb128 0x10a5
	.ascii "FILE_WRITE_EA (0x0010)\0"
	.byte	0x1
	.uleb128 0x10a6
	.ascii "FILE_EXECUTE (0x0020)\0"
	.byte	0x1
	.uleb128 0x10a7
	.ascii "FILE_TRAVERSE (0x0020)\0"
	.byte	0x1
	.uleb128 0x10a8
	.ascii "FILE_DELETE_CHILD (0x0040)\0"
	.byte	0x1
	.uleb128 0x10a9
	.ascii "FILE_READ_ATTRIBUTES (0x0080)\0"
	.byte	0x1
	.uleb128 0x10aa
	.ascii "FILE_WRITE_ATTRIBUTES (0x0100)\0"
	.byte	0x1
	.uleb128 0x10ac
	.ascii "FILE_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x1FF)\0"
	.byte	0x1
	.uleb128 0x10ad
	.ascii "FILE_GENERIC_READ (STANDARD_RIGHTS_READ | FILE_READ_DATA | FILE_READ_ATTRIBUTES | FILE_READ_EA | SYNCHRONIZE)\0"
	.byte	0x1
	.uleb128 0x10ae
	.ascii "FILE_GENERIC_WRITE (STANDARD_RIGHTS_WRITE | FILE_WRITE_DATA | FILE_WRITE_ATTRIBUTES | FILE_WRITE_EA | FILE_APPEND_DATA | SYNCHRONIZE)\0"
	.byte	0x1
	.uleb128 0x10af
	.ascii "FILE_GENERIC_EXECUTE (STANDARD_RIGHTS_EXECUTE | FILE_READ_ATTRIBUTES | FILE_EXECUTE | SYNCHRONIZE)\0"
	.byte	0x1
	.uleb128 0x10b1
	.ascii "FILE_SUPERSEDE 0x00000000\0"
	.byte	0x1
	.uleb128 0x10b2
	.ascii "FILE_OPEN 0x00000001\0"
	.byte	0x1
	.uleb128 0x10b3
	.ascii "FILE_CREATE 0x00000002\0"
	.byte	0x1
	.uleb128 0x10b4
	.ascii "FILE_OPEN_IF 0x00000003\0"
	.byte	0x1
	.uleb128 0x10b5
	.ascii "FILE_OVERWRITE 0x00000004\0"
	.byte	0x1
	.uleb128 0x10b6
	.ascii "FILE_OVERWRITE_IF 0x00000005\0"
	.byte	0x1
	.uleb128 0x10b7
	.ascii "FILE_MAXIMUM_DISPOSITION 0x00000005\0"
	.byte	0x1
	.uleb128 0x10b9
	.ascii "FILE_DIRECTORY_FILE 0x00000001\0"
	.byte	0x1
	.uleb128 0x10ba
	.ascii "FILE_WRITE_THROUGH 0x00000002\0"
	.byte	0x1
	.uleb128 0x10bb
	.ascii "FILE_SEQUENTIAL_ONLY 0x00000004\0"
	.byte	0x1
	.uleb128 0x10bc
	.ascii "FILE_NO_INTERMEDIATE_BUFFERING 0x00000008\0"
	.byte	0x1
	.uleb128 0x10bd
	.ascii "FILE_SYNCHRONOUS_IO_ALERT 0x00000010\0"
	.byte	0x1
	.uleb128 0x10be
	.ascii "FILE_SYNCHRONOUS_IO_NONALERT 0x00000020\0"
	.byte	0x1
	.uleb128 0x10bf
	.ascii "FILE_NON_DIRECTORY_FILE 0x00000040\0"
	.byte	0x1
	.uleb128 0x10c0
	.ascii "FILE_CREATE_TREE_CONNECTION 0x00000080\0"
	.byte	0x1
	.uleb128 0x10c1
	.ascii "FILE_COMPLETE_IF_OPLOCKED 0x00000100\0"
	.byte	0x1
	.uleb128 0x10c2
	.ascii "FILE_NO_EA_KNOWLEDGE 0x00000200\0"
	.byte	0x1
	.uleb128 0x10c3
	.ascii "FILE_OPEN_REMOTE_INSTANCE 0x00000400\0"
	.byte	0x1
	.uleb128 0x10c4
	.ascii "FILE_RANDOM_ACCESS 0x00000800\0"
	.byte	0x1
	.uleb128 0x10c5
	.ascii "FILE_DELETE_ON_CLOSE 0x00001000\0"
	.byte	0x1
	.uleb128 0x10c6
	.ascii "FILE_OPEN_BY_FILE_ID 0x00002000\0"
	.byte	0x1
	.uleb128 0x10c7
	.ascii "FILE_OPEN_FOR_BACKUP_INTENT 0x00004000\0"
	.byte	0x1
	.uleb128 0x10c8
	.ascii "FILE_NO_COMPRESSION 0x00008000\0"
	.byte	0x1
	.uleb128 0x10cd
	.ascii "FILE_RESERVE_OPFILTER 0x00100000\0"
	.byte	0x1
	.uleb128 0x10ce
	.ascii "FILE_OPEN_REPARSE_POINT 0x00200000\0"
	.byte	0x1
	.uleb128 0x10cf
	.ascii "FILE_OPEN_NO_RECALL 0x00400000\0"
	.byte	0x1
	.uleb128 0x10d0
	.ascii "FILE_OPEN_FOR_FREE_SPACE_QUERY 0x00800000\0"
	.byte	0x1
	.uleb128 0x10d2
	.ascii "FILE_SHARE_READ 0x00000001\0"
	.byte	0x1
	.uleb128 0x10d3
	.ascii "FILE_SHARE_WRITE 0x00000002\0"
	.byte	0x1
	.uleb128 0x10d4
	.ascii "FILE_SHARE_DELETE 0x00000004\0"
	.byte	0x1
	.uleb128 0x10d5
	.ascii "FILE_SHARE_VALID_FLAGS 0x00000007\0"
	.byte	0x1
	.uleb128 0x10d6
	.ascii "FILE_ATTRIBUTE_READONLY 0x00000001\0"
	.byte	0x1
	.uleb128 0x10d7
	.ascii "FILE_ATTRIBUTE_HIDDEN 0x00000002\0"
	.byte	0x1
	.uleb128 0x10d8
	.ascii "FILE_ATTRIBUTE_SYSTEM 0x00000004\0"
	.byte	0x1
	.uleb128 0x10d9
	.ascii "FILE_ATTRIBUTE_DIRECTORY 0x00000010\0"
	.byte	0x1
	.uleb128 0x10da
	.ascii "FILE_ATTRIBUTE_ARCHIVE 0x00000020\0"
	.byte	0x1
	.uleb128 0x10db
	.ascii "FILE_ATTRIBUTE_DEVICE 0x00000040\0"
	.byte	0x1
	.uleb128 0x10dc
	.ascii "FILE_ATTRIBUTE_NORMAL 0x00000080\0"
	.byte	0x1
	.uleb128 0x10dd
	.ascii "FILE_ATTRIBUTE_TEMPORARY 0x00000100\0"
	.byte	0x1
	.uleb128 0x10de
	.ascii "FILE_ATTRIBUTE_SPARSE_FILE 0x00000200\0"
	.byte	0x1
	.uleb128 0x10df
	.ascii "FILE_ATTRIBUTE_REPARSE_POINT 0x00000400\0"
	.byte	0x1
	.uleb128 0x10e0
	.ascii "FILE_ATTRIBUTE_COMPRESSED 0x00000800\0"
	.byte	0x1
	.uleb128 0x10e1
	.ascii "FILE_ATTRIBUTE_OFFLINE 0x00001000\0"
	.byte	0x1
	.uleb128 0x10e2
	.ascii "FILE_ATTRIBUTE_NOT_CONTENT_INDEXED 0x00002000\0"
	.byte	0x1
	.uleb128 0x10e3
	.ascii "FILE_ATTRIBUTE_ENCRYPTED 0x00004000\0"
	.byte	0x1
	.uleb128 0x10e4
	.ascii "FILE_ATTRIBUTE_VIRTUAL 0x00010000\0"
	.byte	0x1
	.uleb128 0x10e5
	.ascii "FILE_NOTIFY_CHANGE_FILE_NAME 0x00000001\0"
	.byte	0x1
	.uleb128 0x10e6
	.ascii "FILE_NOTIFY_CHANGE_DIR_NAME 0x00000002\0"
	.byte	0x1
	.uleb128 0x10e7
	.ascii "FILE_NOTIFY_CHANGE_ATTRIBUTES 0x00000004\0"
	.byte	0x1
	.uleb128 0x10e8
	.ascii "FILE_NOTIFY_CHANGE_SIZE 0x00000008\0"
	.byte	0x1
	.uleb128 0x10e9
	.ascii "FILE_NOTIFY_CHANGE_LAST_WRITE 0x00000010\0"
	.byte	0x1
	.uleb128 0x10ea
	.ascii "FILE_NOTIFY_CHANGE_LAST_ACCESS 0x00000020\0"
	.byte	0x1
	.uleb128 0x10eb
	.ascii "FILE_NOTIFY_CHANGE_CREATION 0x00000040\0"
	.byte	0x1
	.uleb128 0x10ec
	.ascii "FILE_NOTIFY_CHANGE_SECURITY 0x00000100\0"
	.byte	0x1
	.uleb128 0x10ed
	.ascii "FILE_ACTION_ADDED 0x00000001\0"
	.byte	0x1
	.uleb128 0x10ee
	.ascii "FILE_ACTION_REMOVED 0x00000002\0"
	.byte	0x1
	.uleb128 0x10ef
	.ascii "FILE_ACTION_MODIFIED 0x00000003\0"
	.byte	0x1
	.uleb128 0x10f0
	.ascii "FILE_ACTION_RENAMED_OLD_NAME 0x00000004\0"
	.byte	0x1
	.uleb128 0x10f1
	.ascii "FILE_ACTION_RENAMED_NEW_NAME 0x00000005\0"
	.byte	0x1
	.uleb128 0x10f2
	.ascii "MAILSLOT_NO_MESSAGE ((DWORD)-1)\0"
	.byte	0x1
	.uleb128 0x10f3
	.ascii "MAILSLOT_WAIT_FOREVER ((DWORD)-1)\0"
	.byte	0x1
	.uleb128 0x10f4
	.ascii "FILE_CASE_SENSITIVE_SEARCH 0x00000001\0"
	.byte	0x1
	.uleb128 0x10f5
	.ascii "FILE_CASE_PRESERVED_NAMES 0x00000002\0"
	.byte	0x1
	.uleb128 0x10f6
	.ascii "FILE_UNICODE_ON_DISK 0x00000004\0"
	.byte	0x1
	.uleb128 0x10f7
	.ascii "FILE_PERSISTENT_ACLS 0x00000008\0"
	.byte	0x1
	.uleb128 0x10f8
	.ascii "FILE_FILE_COMPRESSION 0x00000010\0"
	.byte	0x1
	.uleb128 0x10f9
	.ascii "FILE_VOLUME_QUOTAS 0x00000020\0"
	.byte	0x1
	.uleb128 0x10fa
	.ascii "FILE_SUPPORTS_SPARSE_FILES 0x00000040\0"
	.byte	0x1
	.uleb128 0x10fb
	.ascii "FILE_SUPPORTS_REPARSE_POINTS 0x00000080\0"
	.byte	0x1
	.uleb128 0x10fc
	.ascii "FILE_SUPPORTS_REMOTE_STORAGE 0x00000100\0"
	.byte	0x1
	.uleb128 0x10fd
	.ascii "FILE_VOLUME_IS_COMPRESSED 0x00008000\0"
	.byte	0x1
	.uleb128 0x10fe
	.ascii "FILE_SUPPORTS_OBJECT_IDS 0x00010000\0"
	.byte	0x1
	.uleb128 0x10ff
	.ascii "FILE_SUPPORTS_ENCRYPTION 0x00020000\0"
	.byte	0x1
	.uleb128 0x1100
	.ascii "FILE_NAMED_STREAMS 0x00040000\0"
	.byte	0x1
	.uleb128 0x1101
	.ascii "FILE_READ_ONLY_VOLUME 0x00080000\0"
	.byte	0x1
	.uleb128 0x1102
	.ascii "FILE_SEQUENTIAL_WRITE_ONCE 0x00100000\0"
	.byte	0x1
	.uleb128 0x1103
	.ascii "FILE_SUPPORTS_TRANSACTIONS 0x00200000\0"
	.byte	0x1
	.uleb128 0x1104
	.ascii "FILE_SUPPORTS_HARD_LINKS 0x00400000\0"
	.byte	0x1
	.uleb128 0x1105
	.ascii "FILE_SUPPORTS_EXTENDED_ATTRIBUTES 0x00800000\0"
	.byte	0x1
	.uleb128 0x1106
	.ascii "FILE_SUPPORTS_OPEN_BY_FILE_ID 0x01000000\0"
	.byte	0x1
	.uleb128 0x1107
	.ascii "FILE_SUPPORTS_USN_JOURNAL 0x02000000\0"
	.byte	0x1
	.uleb128 0x1108
	.ascii "FILE_SUPPORTS_INTEGRITY_STREAMS 0x04000000\0"
	.byte	0x1
	.uleb128 0x1125
	.ascii "REPARSE_GUID_DATA_BUFFER_HEADER_SIZE FIELD_OFFSET(REPARSE_GUID_DATA_BUFFER,GenericReparseBuffer)\0"
	.byte	0x1
	.uleb128 0x1127
	.ascii "MAXIMUM_REPARSE_DATA_BUFFER_SIZE (16 *1024)\0"
	.byte	0x1
	.uleb128 0x1129
	.ascii "SYMLINK_FLAG_RELATIVE 1\0"
	.byte	0x1
	.uleb128 0x112b
	.ascii "IO_REPARSE_TAG_RESERVED_ZERO (0)\0"
	.byte	0x1
	.uleb128 0x112c
	.ascii "IO_REPARSE_TAG_RESERVED_ONE (1)\0"
	.byte	0x1
	.uleb128 0x112e
	.ascii "IO_REPARSE_TAG_RESERVED_RANGE IO_REPARSE_TAG_RESERVED_ONE\0"
	.byte	0x1
	.uleb128 0x1130
	.ascii "IsReparseTagMicrosoft(_tag) (((_tag) & 0x80000000))\0"
	.byte	0x1
	.uleb128 0x1131
	.ascii "IsReparseTagNameSurrogate(_tag) (((_tag) & 0x20000000))\0"
	.byte	0x1
	.uleb128 0x1133
	.ascii "IO_REPARSE_TAG_MOUNT_POINT (__MSABI_LONG(0xA0000003))\0"
	.byte	0x1
	.uleb128 0x1134
	.ascii "IO_REPARSE_TAG_HSM (__MSABI_LONG(0xC0000004))\0"
	.byte	0x1
	.uleb128 0x1135
	.ascii "IO_REPARSE_TAG_HSM2 (__MSABI_LONG(0x80000006))\0"
	.byte	0x1
	.uleb128 0x1136
	.ascii "IO_REPARSE_TAG_SIS (__MSABI_LONG(0x80000007))\0"
	.byte	0x1
	.uleb128 0x1137
	.ascii "IO_REPARSE_TAG_WIM (__MSABI_LONG(0x80000008))\0"
	.byte	0x1
	.uleb128 0x1138
	.ascii "IO_REPARSE_TAG_CSV (__MSABI_LONG(0x80000009))\0"
	.byte	0x1
	.uleb128 0x1139
	.ascii "IO_REPARSE_TAG_DFS (__MSABI_LONG(0x8000000A))\0"
	.byte	0x1
	.uleb128 0x113a
	.ascii "IO_REPARSE_TAG_FILTER_MANAGER (__MSABI_LONG(0x8000000B))\0"
	.byte	0x1
	.uleb128 0x113b
	.ascii "IO_REPARSE_TAG_DFSR (__MSABI_LONG(0x80000012))\0"
	.byte	0x1
	.uleb128 0x113c
	.ascii "IO_REPARSE_TAG_SYMLINK (__MSABI_LONG(0xA000000C))\0"
	.byte	0x1
	.uleb128 0x113d
	.ascii "IO_REPARSE_TAG_IIS_CACHE (__MSABI_LONG(0xA0000010))\0"
	.byte	0x1
	.uleb128 0x113e
	.ascii "IO_REPARSE_TAG_DRIVE_EXTENDER (__MSABI_LONG(0x80000005))\0"
	.byte	0x1
	.uleb128 0x113f
	.ascii "IO_REPARSE_TAG_DEDUP (__MSABI_LONG(0x80000013))\0"
	.byte	0x1
	.uleb128 0x1140
	.ascii "IO_REPARSE_TAG_NFS (__MSABI_LONG(0x80000014))\0"
	.byte	0x1
	.uleb128 0x1160
	.ascii "IO_COMPLETION_MODIFY_STATE 0x0002\0"
	.byte	0x1
	.uleb128 0x1161
	.ascii "IO_COMPLETION_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|0x3)\0"
	.byte	0x1
	.uleb128 0x1162
	.ascii "DUPLICATE_CLOSE_SOURCE 0x00000001\0"
	.byte	0x1
	.uleb128 0x1163
	.ascii "DUPLICATE_SAME_ACCESS 0x00000002\0"
	.byte	0x1
	.uleb128 0x1165
	.ascii "POWERBUTTON_ACTION_INDEX_NOTHING 0\0"
	.byte	0x1
	.uleb128 0x1166
	.ascii "POWERBUTTON_ACTION_INDEX_SLEEP 1\0"
	.byte	0x1
	.uleb128 0x1167
	.ascii "POWERBUTTON_ACTION_INDEX_HIBERNATE 2\0"
	.byte	0x1
	.uleb128 0x1168
	.ascii "POWERBUTTON_ACTION_INDEX_SHUTDOWN 3\0"
	.byte	0x1
	.uleb128 0x116a
	.ascii "POWERBUTTON_ACTION_VALUE_NOTHING 0\0"
	.byte	0x1
	.uleb128 0x116b
	.ascii "POWERBUTTON_ACTION_VALUE_SLEEP 2\0"
	.byte	0x1
	.uleb128 0x116c
	.ascii "POWERBUTTON_ACTION_VALUE_HIBERNATE 3\0"
	.byte	0x1
	.uleb128 0x116d
	.ascii "POWERBUTTON_ACTION_VALUE_SHUTDOWN 6\0"
	.byte	0x1
	.uleb128 0x116f
	.ascii "PERFSTATE_POLICY_CHANGE_IDEAL 0\0"
	.byte	0x1
	.uleb128 0x1170
	.ascii "PERFSTATE_POLICY_CHANGE_SINGLE 1\0"
	.byte	0x1
	.uleb128 0x1171
	.ascii "PERFSTATE_POLICY_CHANGE_ROCKET 2\0"
	.byte	0x1
	.uleb128 0x1172
	.ascii "PERFSTATE_POLICY_CHANGE_MAX PERFSTATE_POLICY_CHANGE_ROCKET\0"
	.byte	0x1
	.uleb128 0x1174
	.ascii "PROCESSOR_PERF_BOOST_POLICY_DISABLED 0\0"
	.byte	0x1
	.uleb128 0x1175
	.ascii "PROCESSOR_PERF_BOOST_POLICY_MAX 100\0"
	.byte	0x1
	.uleb128 0x1177
	.ascii "PROCESSOR_PERF_BOOST_MODE_DISABLED 0\0"
	.byte	0x1
	.uleb128 0x1178
	.ascii "PROCESSOR_PERF_BOOST_MODE_ENABLED 1\0"
	.byte	0x1
	.uleb128 0x1179
	.ascii "PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE 2\0"
	.byte	0x1
	.uleb128 0x117a
	.ascii "PROCESSOR_PERF_BOOST_MODE_EFFICIENT_ENABLED 3\0"
	.byte	0x1
	.uleb128 0x117b
	.ascii "PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE 4\0"
	.byte	0x1
	.uleb128 0x117c
	.ascii "PROCESSOR_PERF_BOOST_MODE_MAX PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE\0"
	.byte	0x1
	.uleb128 0x117e
	.ascii "CORE_PARKING_POLICY_CHANGE_IDEAL 0\0"
	.byte	0x1
	.uleb128 0x117f
	.ascii "CORE_PARKING_POLICY_CHANGE_SINGLE 1\0"
	.byte	0x1
	.uleb128 0x1180
	.ascii "CORE_PARKING_POLICY_CHANGE_ROCKET 2\0"
	.byte	0x1
	.uleb128 0x1181
	.ascii "CORE_PARKING_POLICY_CHANGE_MULTISTEP 3\0"
	.byte	0x1
	.uleb128 0x1182
	.ascii "CORE_PARKING_POLICY_CHANGE_MAX CORE_PARKING_POLICY_CHANGE_MULTISTEP\0"
	.byte	0x1
	.uleb128 0x1184
	.ascii "POWER_DEVICE_IDLE_POLICY_PERFORMANCE 0\0"
	.byte	0x1
	.uleb128 0x1185
	.ascii "POWER_DEVICE_IDLE_POLICY_CONSERVATIVE 1\0"
	.byte	0x1
	.uleb128 0x1206
	.ascii "POWER_SYSTEM_MAXIMUM 7\0"
	.byte	0x1
	.uleb128 0x121f
	.ascii "ES_SYSTEM_REQUIRED ((DWORD)0x00000001)\0"
	.byte	0x1
	.uleb128 0x1220
	.ascii "ES_DISPLAY_REQUIRED ((DWORD)0x00000002)\0"
	.byte	0x1
	.uleb128 0x1221
	.ascii "ES_USER_PRESENT ((DWORD)0x00000004)\0"
	.byte	0x1
	.uleb128 0x1222
	.ascii "ES_AWAYMODE_REQUIRED ((DWORD)0x00000040)\0"
	.byte	0x1
	.uleb128 0x1223
	.ascii "ES_CONTINUOUS ((DWORD)0x80000000)\0"
	.byte	0x1
	.uleb128 0x122b
	.ascii "DIAGNOSTIC_REASON_VERSION 0\0"
	.byte	0x1
	.uleb128 0x122c
	.ascii "POWER_REQUEST_CONTEXT_VERSION 0\0"
	.byte	0x1
	.uleb128 0x122e
	.ascii "DIAGNOSTIC_REASON_SIMPLE_STRING 0x00000001\0"
	.byte	0x1
	.uleb128 0x122f
	.ascii "DIAGNOSTIC_REASON_DETAILED_STRING 0x00000002\0"
	.byte	0x1
	.uleb128 0x1230
	.ascii "DIAGNOSTIC_REASON_NOT_SPECIFIED 0x80000000\0"
	.byte	0x1
	.uleb128 0x1231
	.ascii "DIAGNOSTIC_REASON_INVALID_FLAGS (~0x80000003)\0"
	.byte	0x1
	.uleb128 0x1233
	.ascii "POWER_REQUEST_CONTEXT_SIMPLE_STRING 0x00000001\0"
	.byte	0x1
	.uleb128 0x1234
	.ascii "POWER_REQUEST_CONTEXT_DETAILED_STRING 0x00000002\0"
	.byte	0x1
	.uleb128 0x123d
	.ascii "PDCAP_D0_SUPPORTED 0x00000001\0"
	.byte	0x1
	.uleb128 0x123e
	.ascii "PDCAP_D1_SUPPORTED 0x00000002\0"
	.byte	0x1
	.uleb128 0x123f
	.ascii "PDCAP_D2_SUPPORTED 0x00000004\0"
	.byte	0x1
	.uleb128 0x1240
	.ascii "PDCAP_D3_SUPPORTED 0x00000008\0"
	.byte	0x1
	.uleb128 0x1241
	.ascii "PDCAP_WAKE_FROM_D0_SUPPORTED 0x00000010\0"
	.byte	0x1
	.uleb128 0x1242
	.ascii "PDCAP_WAKE_FROM_D1_SUPPORTED 0x00000020\0"
	.byte	0x1
	.uleb128 0x1243
	.ascii "PDCAP_WAKE_FROM_D2_SUPPORTED 0x00000040\0"
	.byte	0x1
	.uleb128 0x1244
	.ascii "PDCAP_WAKE_FROM_D3_SUPPORTED 0x00000080\0"
	.byte	0x1
	.uleb128 0x1245
	.ascii "PDCAP_WARM_EJECT_SUPPORTED 0x00000100\0"
	.byte	0x1
	.uleb128 0x12f7
	.ascii "POWER_SETTING_VALUE_VERSION (0x1)\0"
	.byte	0x1
	.uleb128 0x1314
	.ascii "POWER_PLATFORM_ROLE_V1 (0x00000001)\0"
	.byte	0x1
	.uleb128 0x1315
	.ascii "POWER_PLATFORM_ROLE_V1_MAX (PlatformRolePerformanceServer + 1)\0"
	.byte	0x1
	.uleb128 0x1317
	.ascii "POWER_PLATFORM_ROLE_V2 (0x00000002)\0"
	.byte	0x1
	.uleb128 0x1318
	.ascii "POWER_PLATFORM_ROLE_V2_MAX (PlatformRoleSlate + 1)\0"
	.byte	0x1
	.uleb128 0x131e
	.ascii "POWER_PLATFORM_ROLE_VERSION POWER_PLATFORM_ROLE_V1\0"
	.byte	0x1
	.uleb128 0x131f
	.ascii "POWER_PLATFORM_ROLE_VERSION_MAX POWER_PLATFORM_ROLE_V1_MAX\0"
	.byte	0x1
	.uleb128 0x138e
	.ascii "PROC_IDLE_BUCKET_COUNT 6\0"
	.byte	0x1
	.uleb128 0x138f
	.ascii "PROC_IDLE_BUCKET_COUNT_EX 16\0"
	.byte	0x1
	.uleb128 0x13bc
	.ascii "ACPI_PPM_SOFTWARE_ALL 0xfc\0"
	.byte	0x1
	.uleb128 0x13bd
	.ascii "ACPI_PPM_SOFTWARE_ANY 0xfd\0"
	.byte	0x1
	.uleb128 0x13be
	.ascii "ACPI_PPM_HARDWARE_ALL 0xfe\0"
	.byte	0x1
	.uleb128 0x13c0
	.ascii "MS_PPM_SOFTWARE_ALL 0x1\0"
	.byte	0x1
	.uleb128 0x13c2
	.ascii "PPM_FIRMWARE_ACPI1C2 0x1\0"
	.byte	0x1
	.uleb128 0x13c3
	.ascii "PPM_FIRMWARE_ACPI1C3 0x2\0"
	.byte	0x1
	.uleb128 0x13c4
	.ascii "PPM_FIRMWARE_ACPI1TSTATES 0x4\0"
	.byte	0x1
	.uleb128 0x13c5
	.ascii "PPM_FIRMWARE_CST 0x8\0"
	.byte	0x1
	.uleb128 0x13c6
	.ascii "PPM_FIRMWARE_CSD 0x10\0"
	.byte	0x1
	.uleb128 0x13c7
	.ascii "PPM_FIRMWARE_PCT 0x20\0"
	.byte	0x1
	.uleb128 0x13c8
	.ascii "PPM_FIRMWARE_PSS 0x40\0"
	.byte	0x1
	.uleb128 0x13c9
	.ascii "PPM_FIRMWARE_XPSS 0x80\0"
	.byte	0x1
	.uleb128 0x13ca
	.ascii "PPM_FIRMWARE_PPC 0x100\0"
	.byte	0x1
	.uleb128 0x13cb
	.ascii "PPM_FIRMWARE_PSD 0x200\0"
	.byte	0x1
	.uleb128 0x13cc
	.ascii "PPM_FIRMWARE_PTC 0x400\0"
	.byte	0x1
	.uleb128 0x13cd
	.ascii "PPM_FIRMWARE_TSS 0x800\0"
	.byte	0x1
	.uleb128 0x13ce
	.ascii "PPM_FIRMWARE_TPC 0x1000\0"
	.byte	0x1
	.uleb128 0x13cf
	.ascii "PPM_FIRMWARE_TSD 0x2000\0"
	.byte	0x1
	.uleb128 0x13d0
	.ascii "PPM_FIRMWARE_PCCH 0x4000\0"
	.byte	0x1
	.uleb128 0x13d1
	.ascii "PPM_FIRMWARE_PCCP 0x8000\0"
	.byte	0x1
	.uleb128 0x13d2
	.ascii "PPM_FIRMWARE_OSC 0x10000\0"
	.byte	0x1
	.uleb128 0x13d3
	.ascii "PPM_FIRMWARE_PDC 0x20000\0"
	.byte	0x1
	.uleb128 0x13d4
	.ascii "PPM_FIRMWARE_CPC 0x40000\0"
	.byte	0x1
	.uleb128 0x13d6
	.ascii "PPM_PERFORMANCE_IMPLEMENTATION_NONE 0\0"
	.byte	0x1
	.uleb128 0x13d7
	.ascii "PPM_PERFORMANCE_IMPLEMENTATION_PSTATES 1\0"
	.byte	0x1
	.uleb128 0x13d8
	.ascii "PPM_PERFORMANCE_IMPLEMENTATION_PCCV1 2\0"
	.byte	0x1
	.uleb128 0x13d9
	.ascii "PPM_PERFORMANCE_IMPLEMENTATION_CPPC 3\0"
	.byte	0x1
	.uleb128 0x13da
	.ascii "PPM_PERFORMANCE_IMPLEMENTATION_PEP 4\0"
	.byte	0x1
	.uleb128 0x13dc
	.ascii "PPM_IDLE_IMPLEMENTATION_NONE 0x0\0"
	.byte	0x1
	.uleb128 0x13dd
	.ascii "PPM_IDLE_IMPLEMENTATION_CSTATES 0x1\0"
	.byte	0x1
	.uleb128 0x13de
	.ascii "PPM_IDLE_IMPLEMENTATION_PEP 0x2\0"
	.byte	0x1
	.uleb128 0x140f
	.ascii "POWER_ACTION_QUERY_ALLOWED 0x00000001\0"
	.byte	0x1
	.uleb128 0x1410
	.ascii "POWER_ACTION_UI_ALLOWED 0x00000002\0"
	.byte	0x1
	.uleb128 0x1411
	.ascii "POWER_ACTION_OVERRIDE_APPS 0x00000004\0"
	.byte	0x1
	.uleb128 0x1412
	.ascii "POWER_ACTION_HIBERBOOT 0x00000008\0"
	.byte	0x1
	.uleb128 0x1413
	.ascii "POWER_ACTION_PSEUDO_TRANSITION 0x08000000\0"
	.byte	0x1
	.uleb128 0x1414
	.ascii "POWER_ACTION_LIGHTEST_FIRST 0x10000000\0"
	.byte	0x1
	.uleb128 0x1415
	.ascii "POWER_ACTION_LOCK_CONSOLE 0x20000000\0"
	.byte	0x1
	.uleb128 0x1416
	.ascii "POWER_ACTION_DISABLE_WAKES 0x40000000\0"
	.byte	0x1
	.uleb128 0x1417
	.ascii "POWER_ACTION_CRITICAL 0x80000000\0"
	.byte	0x1
	.uleb128 0x1419
	.ascii "POWER_LEVEL_USER_NOTIFY_TEXT 0x00000001\0"
	.byte	0x1
	.uleb128 0x141a
	.ascii "POWER_LEVEL_USER_NOTIFY_SOUND 0x00000002\0"
	.byte	0x1
	.uleb128 0x141b
	.ascii "POWER_LEVEL_USER_NOTIFY_EXEC 0x00000004\0"
	.byte	0x1
	.uleb128 0x141c
	.ascii "POWER_USER_NOTIFY_BUTTON 0x00000008\0"
	.byte	0x1
	.uleb128 0x141d
	.ascii "POWER_USER_NOTIFY_SHUTDOWN 0x00000010\0"
	.byte	0x1
	.uleb128 0x141e
	.ascii "POWER_USER_NOTIFY_FORCED_SHUTDOWN 0x00000020\0"
	.byte	0x1
	.uleb128 0x141f
	.ascii "POWER_FORCE_TRIGGER_RESET 0x80000000\0"
	.byte	0x1
	.uleb128 0x1421
	.ascii "BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK 0x00000007\0"
	.byte	0x1
	.uleb128 0x1422
	.ascii "BATTERY_DISCHARGE_FLAGS_ENABLE 0x80000000\0"
	.byte	0x1
	.uleb128 0x1424
	.ascii "DISCHARGE_POLICY_CRITICAL 0\0"
	.byte	0x1
	.uleb128 0x1425
	.ascii "DISCHARGE_POLICY_LOW 1\0"
	.byte	0x1
	.uleb128 0x1427
	.ascii "NUM_DISCHARGE_POLICIES 4\0"
	.byte	0x1
	.uleb128 0x1429
	.ascii "PROCESSOR_IDLESTATE_POLICY_COUNT 0x3\0"
	.byte	0x1
	.uleb128 0x1459
	.ascii "PO_THROTTLE_NONE 0\0"
	.byte	0x1
	.uleb128 0x145a
	.ascii "PO_THROTTLE_CONSTANT 1\0"
	.byte	0x1
	.uleb128 0x145b
	.ascii "PO_THROTTLE_DEGRADE 2\0"
	.byte	0x1
	.uleb128 0x145c
	.ascii "PO_THROTTLE_ADAPTIVE 3\0"
	.byte	0x1
	.uleb128 0x145d
	.ascii "PO_THROTTLE_MAXIMUM 4\0"
	.byte	0x3
	.uleb128 0x14d2
	.uleb128 0x142
	.byte	0x4
	.byte	0x1
	.uleb128 0x14d4
	.ascii "IMAGE_DOS_SIGNATURE 0x5A4D\0"
	.byte	0x1
	.uleb128 0x14d5
	.ascii "IMAGE_OS2_SIGNATURE 0x454E\0"
	.byte	0x1
	.uleb128 0x14d6
	.ascii "IMAGE_OS2_SIGNATURE_LE 0x454C\0"
	.byte	0x1
	.uleb128 0x14d7
	.ascii "IMAGE_VXD_SIGNATURE 0x454C\0"
	.byte	0x1
	.uleb128 0x14d8
	.ascii "IMAGE_NT_SIGNATURE 0x00004550\0"
	.file 324 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/pshpack2.h"
	.byte	0x3
	.uleb128 0x14da
	.uleb128 0x144
	.byte	0x4
	.byte	0x3
	.uleb128 0x1549
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x1555
	.ascii "IMAGE_SIZEOF_FILE_HEADER 20\0"
	.byte	0x1
	.uleb128 0x1557
	.ascii "IMAGE_FILE_RELOCS_STRIPPED 0x0001\0"
	.byte	0x1
	.uleb128 0x1558
	.ascii "IMAGE_FILE_EXECUTABLE_IMAGE 0x0002\0"
	.byte	0x1
	.uleb128 0x1559
	.ascii "IMAGE_FILE_LINE_NUMS_STRIPPED 0x0004\0"
	.byte	0x1
	.uleb128 0x155a
	.ascii "IMAGE_FILE_LOCAL_SYMS_STRIPPED 0x0008\0"
	.byte	0x1
	.uleb128 0x155b
	.ascii "IMAGE_FILE_AGGRESIVE_WS_TRIM 0x0010\0"
	.byte	0x1
	.uleb128 0x155c
	.ascii "IMAGE_FILE_LARGE_ADDRESS_AWARE 0x0020\0"
	.byte	0x1
	.uleb128 0x155d
	.ascii "IMAGE_FILE_BYTES_REVERSED_LO 0x0080\0"
	.byte	0x1
	.uleb128 0x155e
	.ascii "IMAGE_FILE_32BIT_MACHINE 0x0100\0"
	.byte	0x1
	.uleb128 0x155f
	.ascii "IMAGE_FILE_DEBUG_STRIPPED 0x0200\0"
	.byte	0x1
	.uleb128 0x1560
	.ascii "IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP 0x0400\0"
	.byte	0x1
	.uleb128 0x1561
	.ascii "IMAGE_FILE_NET_RUN_FROM_SWAP 0x0800\0"
	.byte	0x1
	.uleb128 0x1562
	.ascii "IMAGE_FILE_SYSTEM 0x1000\0"
	.byte	0x1
	.uleb128 0x1563
	.ascii "IMAGE_FILE_DLL 0x2000\0"
	.byte	0x1
	.uleb128 0x1564
	.ascii "IMAGE_FILE_UP_SYSTEM_ONLY 0x4000\0"
	.byte	0x1
	.uleb128 0x1565
	.ascii "IMAGE_FILE_BYTES_REVERSED_HI 0x8000\0"
	.byte	0x1
	.uleb128 0x1567
	.ascii "IMAGE_FILE_MACHINE_UNKNOWN 0\0"
	.byte	0x1
	.uleb128 0x1568
	.ascii "IMAGE_FILE_MACHINE_I386 0x014c\0"
	.byte	0x1
	.uleb128 0x1569
	.ascii "IMAGE_FILE_MACHINE_R3000 0x0162\0"
	.byte	0x1
	.uleb128 0x156a
	.ascii "IMAGE_FILE_MACHINE_R4000 0x0166\0"
	.byte	0x1
	.uleb128 0x156b
	.ascii "IMAGE_FILE_MACHINE_R10000 0x0168\0"
	.byte	0x1
	.uleb128 0x156c
	.ascii "IMAGE_FILE_MACHINE_WCEMIPSV2 0x0169\0"
	.byte	0x1
	.uleb128 0x156d
	.ascii "IMAGE_FILE_MACHINE_ALPHA 0x0184\0"
	.byte	0x1
	.uleb128 0x156e
	.ascii "IMAGE_FILE_MACHINE_SH3 0x01a2\0"
	.byte	0x1
	.uleb128 0x156f
	.ascii "IMAGE_FILE_MACHINE_SH3DSP 0x01a3\0"
	.byte	0x1
	.uleb128 0x1570
	.ascii "IMAGE_FILE_MACHINE_SH3E 0x01a4\0"
	.byte	0x1
	.uleb128 0x1571
	.ascii "IMAGE_FILE_MACHINE_SH4 0x01a6\0"
	.byte	0x1
	.uleb128 0x1572
	.ascii "IMAGE_FILE_MACHINE_SH5 0x01a8\0"
	.byte	0x1
	.uleb128 0x1573
	.ascii "IMAGE_FILE_MACHINE_ARM 0x01c0\0"
	.byte	0x1
	.uleb128 0x1574
	.ascii "IMAGE_FILE_MACHINE_ARMV7 0x01c4\0"
	.byte	0x1
	.uleb128 0x1575
	.ascii "IMAGE_FILE_MACHINE_ARMNT 0x01c4\0"
	.byte	0x1
	.uleb128 0x1576
	.ascii "IMAGE_FILE_MACHINE_THUMB 0x01c2\0"
	.byte	0x1
	.uleb128 0x1577
	.ascii "IMAGE_FILE_MACHINE_AM33 0x01d3\0"
	.byte	0x1
	.uleb128 0x1578
	.ascii "IMAGE_FILE_MACHINE_POWERPC 0x01F0\0"
	.byte	0x1
	.uleb128 0x1579
	.ascii "IMAGE_FILE_MACHINE_POWERPCFP 0x01f1\0"
	.byte	0x1
	.uleb128 0x157a
	.ascii "IMAGE_FILE_MACHINE_IA64 0x0200\0"
	.byte	0x1
	.uleb128 0x157b
	.ascii "IMAGE_FILE_MACHINE_MIPS16 0x0266\0"
	.byte	0x1
	.uleb128 0x157c
	.ascii "IMAGE_FILE_MACHINE_ALPHA64 0x0284\0"
	.byte	0x1
	.uleb128 0x157d
	.ascii "IMAGE_FILE_MACHINE_MIPSFPU 0x0366\0"
	.byte	0x1
	.uleb128 0x157e
	.ascii "IMAGE_FILE_MACHINE_MIPSFPU16 0x0466\0"
	.byte	0x1
	.uleb128 0x157f
	.ascii "IMAGE_FILE_MACHINE_AXP64 IMAGE_FILE_MACHINE_ALPHA64\0"
	.byte	0x1
	.uleb128 0x1580
	.ascii "IMAGE_FILE_MACHINE_TRICORE 0x0520\0"
	.byte	0x1
	.uleb128 0x1581
	.ascii "IMAGE_FILE_MACHINE_CEF 0x0CEF\0"
	.byte	0x1
	.uleb128 0x1582
	.ascii "IMAGE_FILE_MACHINE_EBC 0x0EBC\0"
	.byte	0x1
	.uleb128 0x1583
	.ascii "IMAGE_FILE_MACHINE_AMD64 0x8664\0"
	.byte	0x1
	.uleb128 0x1584
	.ascii "IMAGE_FILE_MACHINE_M32R 0x9041\0"
	.byte	0x1
	.uleb128 0x1585
	.ascii "IMAGE_FILE_MACHINE_CEE 0xc0ee\0"
	.byte	0x1
	.uleb128 0x158c
	.ascii "IMAGE_NUMBEROF_DIRECTORY_ENTRIES 16\0"
	.byte	0x1
	.uleb128 0x15e2
	.ascii "IMAGE_SIZEOF_ROM_OPTIONAL_HEADER 56\0"
	.byte	0x1
	.uleb128 0x15e3
	.ascii "IMAGE_SIZEOF_STD_OPTIONAL_HEADER 28\0"
	.byte	0x1
	.uleb128 0x15e4
	.ascii "IMAGE_SIZEOF_NT_OPTIONAL32_HEADER 224\0"
	.byte	0x1
	.uleb128 0x15e5
	.ascii "IMAGE_SIZEOF_NT_OPTIONAL64_HEADER 240\0"
	.byte	0x1
	.uleb128 0x15e7
	.ascii "IMAGE_NT_OPTIONAL_HDR32_MAGIC 0x10b\0"
	.byte	0x1
	.uleb128 0x15e8
	.ascii "IMAGE_NT_OPTIONAL_HDR64_MAGIC 0x20b\0"
	.byte	0x1
	.uleb128 0x15e9
	.ascii "IMAGE_ROM_OPTIONAL_HDR_MAGIC 0x107\0"
	.byte	0x1
	.uleb128 0x15ee
	.ascii "IMAGE_SIZEOF_NT_OPTIONAL_HEADER IMAGE_SIZEOF_NT_OPTIONAL64_HEADER\0"
	.byte	0x1
	.uleb128 0x15ef
	.ascii "IMAGE_NT_OPTIONAL_HDR_MAGIC IMAGE_NT_OPTIONAL_HDR64_MAGIC\0"
	.byte	0x1
	.uleb128 0x1610
	.ascii "IMAGE_FIRST_SECTION(ntheader) ((PIMAGE_SECTION_HEADER) ((ULONG_PTR)ntheader + FIELD_OFFSET(IMAGE_NT_HEADERS,OptionalHeader) + ((PIMAGE_NT_HEADERS)(ntheader))->FileHeader.SizeOfOptionalHeader))\0"
	.byte	0x1
	.uleb128 0x1612
	.ascii "IMAGE_SUBSYSTEM_UNKNOWN 0\0"
	.byte	0x1
	.uleb128 0x1613
	.ascii "IMAGE_SUBSYSTEM_NATIVE 1\0"
	.byte	0x1
	.uleb128 0x1614
	.ascii "IMAGE_SUBSYSTEM_WINDOWS_GUI 2\0"
	.byte	0x1
	.uleb128 0x1615
	.ascii "IMAGE_SUBSYSTEM_WINDOWS_CUI 3\0"
	.byte	0x1
	.uleb128 0x1616
	.ascii "IMAGE_SUBSYSTEM_OS2_CUI 5\0"
	.byte	0x1
	.uleb128 0x1617
	.ascii "IMAGE_SUBSYSTEM_POSIX_CUI 7\0"
	.byte	0x1
	.uleb128 0x1618
	.ascii "IMAGE_SUBSYSTEM_NATIVE_WINDOWS 8\0"
	.byte	0x1
	.uleb128 0x1619
	.ascii "IMAGE_SUBSYSTEM_WINDOWS_CE_GUI 9\0"
	.byte	0x1
	.uleb128 0x161a
	.ascii "IMAGE_SUBSYSTEM_EFI_APPLICATION 10\0"
	.byte	0x1
	.uleb128 0x161b
	.ascii "IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER 11\0"
	.byte	0x1
	.uleb128 0x161c
	.ascii "IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER 12\0"
	.byte	0x1
	.uleb128 0x161d
	.ascii "IMAGE_SUBSYSTEM_EFI_ROM 13\0"
	.byte	0x1
	.uleb128 0x161e
	.ascii "IMAGE_SUBSYSTEM_XBOX 14\0"
	.byte	0x1
	.uleb128 0x161f
	.ascii "IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION 16\0"
	.byte	0x1
	.uleb128 0x1621
	.ascii "IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE 0x0040\0"
	.byte	0x1
	.uleb128 0x1622
	.ascii "IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY 0x0080\0"
	.byte	0x1
	.uleb128 0x1623
	.ascii "IMAGE_DLLCHARACTERISTICS_NX_COMPAT 0x0100\0"
	.byte	0x1
	.uleb128 0x1624
	.ascii "IMAGE_DLLCHARACTERISTICS_NO_ISOLATION 0x0200\0"
	.byte	0x1
	.uleb128 0x1625
	.ascii "IMAGE_DLLCHARACTERISTICS_NO_SEH 0x0400\0"
	.byte	0x1
	.uleb128 0x1626
	.ascii "IMAGE_DLLCHARACTERISTICS_NO_BIND 0x0800\0"
	.byte	0x1
	.uleb128 0x1627
	.ascii "IMAGE_DLLCHARACTERISTICS_APPCONTAINER 0x1000\0"
	.byte	0x1
	.uleb128 0x1628
	.ascii "IMAGE_DLLCHARACTERISTICS_WDM_DRIVER 0x2000\0"
	.byte	0x1
	.uleb128 0x1629
	.ascii "IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE 0x8000\0"
	.byte	0x1
	.uleb128 0x162b
	.ascii "IMAGE_DIRECTORY_ENTRY_EXPORT 0\0"
	.byte	0x1
	.uleb128 0x162c
	.ascii "IMAGE_DIRECTORY_ENTRY_IMPORT 1\0"
	.byte	0x1
	.uleb128 0x162d
	.ascii "IMAGE_DIRECTORY_ENTRY_RESOURCE 2\0"
	.byte	0x1
	.uleb128 0x162e
	.ascii "IMAGE_DIRECTORY_ENTRY_EXCEPTION 3\0"
	.byte	0x1
	.uleb128 0x162f
	.ascii "IMAGE_DIRECTORY_ENTRY_SECURITY 4\0"
	.byte	0x1
	.uleb128 0x1630
	.ascii "IMAGE_DIRECTORY_ENTRY_BASERELOC 5\0"
	.byte	0x1
	.uleb128 0x1631
	.ascii "IMAGE_DIRECTORY_ENTRY_DEBUG 6\0"
	.byte	0x1
	.uleb128 0x1632
	.ascii "IMAGE_DIRECTORY_ENTRY_ARCHITECTURE 7\0"
	.byte	0x1
	.uleb128 0x1633
	.ascii "IMAGE_DIRECTORY_ENTRY_GLOBALPTR 8\0"
	.byte	0x1
	.uleb128 0x1634
	.ascii "IMAGE_DIRECTORY_ENTRY_TLS 9\0"
	.byte	0x1
	.uleb128 0x1635
	.ascii "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG 10\0"
	.byte	0x1
	.uleb128 0x1636
	.ascii "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT 11\0"
	.byte	0x1
	.uleb128 0x1637
	.ascii "IMAGE_DIRECTORY_ENTRY_IAT 12\0"
	.byte	0x1
	.uleb128 0x1638
	.ascii "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT 13\0"
	.byte	0x1
	.uleb128 0x1639
	.ascii "IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR 14\0"
	.byte	0x1
	.uleb128 0x1662
	.ascii "IMAGE_SIZEOF_SHORT_NAME 8\0"
	.byte	0x1
	.uleb128 0x1674
	.ascii "IMAGE_SIZEOF_SECTION_HEADER 40\0"
	.byte	0x1
	.uleb128 0x1676
	.ascii "IMAGE_SCN_TYPE_NO_PAD 0x00000008\0"
	.byte	0x1
	.uleb128 0x1678
	.ascii "IMAGE_SCN_CNT_CODE 0x00000020\0"
	.byte	0x1
	.uleb128 0x1679
	.ascii "IMAGE_SCN_CNT_INITIALIZED_DATA 0x00000040\0"
	.byte	0x1
	.uleb128 0x167a
	.ascii "IMAGE_SCN_CNT_UNINITIALIZED_DATA 0x00000080\0"
	.byte	0x1
	.uleb128 0x167b
	.ascii "IMAGE_SCN_LNK_OTHER 0x00000100\0"
	.byte	0x1
	.uleb128 0x167c
	.ascii "IMAGE_SCN_LNK_INFO 0x00000200\0"
	.byte	0x1
	.uleb128 0x167d
	.ascii "IMAGE_SCN_LNK_REMOVE 0x00000800\0"
	.byte	0x1
	.uleb128 0x167e
	.ascii "IMAGE_SCN_LNK_COMDAT 0x00001000\0"
	.byte	0x1
	.uleb128 0x167f
	.ascii "IMAGE_SCN_NO_DEFER_SPEC_EXC 0x00004000\0"
	.byte	0x1
	.uleb128 0x1680
	.ascii "IMAGE_SCN_GPREL 0x00008000\0"
	.byte	0x1
	.uleb128 0x1681
	.ascii "IMAGE_SCN_MEM_FARDATA 0x00008000\0"
	.byte	0x1
	.uleb128 0x1682
	.ascii "IMAGE_SCN_MEM_PURGEABLE 0x00020000\0"
	.byte	0x1
	.uleb128 0x1683
	.ascii "IMAGE_SCN_MEM_16BIT 0x00020000\0"
	.byte	0x1
	.uleb128 0x1684
	.ascii "IMAGE_SCN_MEM_LOCKED 0x00040000\0"
	.byte	0x1
	.uleb128 0x1685
	.ascii "IMAGE_SCN_MEM_PRELOAD 0x00080000\0"
	.byte	0x1
	.uleb128 0x1687
	.ascii "IMAGE_SCN_ALIGN_1BYTES 0x00100000\0"
	.byte	0x1
	.uleb128 0x1688
	.ascii "IMAGE_SCN_ALIGN_2BYTES 0x00200000\0"
	.byte	0x1
	.uleb128 0x1689
	.ascii "IMAGE_SCN_ALIGN_4BYTES 0x00300000\0"
	.byte	0x1
	.uleb128 0x168a
	.ascii "IMAGE_SCN_ALIGN_8BYTES 0x00400000\0"
	.byte	0x1
	.uleb128 0x168b
	.ascii "IMAGE_SCN_ALIGN_16BYTES 0x00500000\0"
	.byte	0x1
	.uleb128 0x168c
	.ascii "IMAGE_SCN_ALIGN_32BYTES 0x00600000\0"
	.byte	0x1
	.uleb128 0x168d
	.ascii "IMAGE_SCN_ALIGN_64BYTES 0x00700000\0"
	.byte	0x1
	.uleb128 0x168e
	.ascii "IMAGE_SCN_ALIGN_128BYTES 0x00800000\0"
	.byte	0x1
	.uleb128 0x168f
	.ascii "IMAGE_SCN_ALIGN_256BYTES 0x00900000\0"
	.byte	0x1
	.uleb128 0x1690
	.ascii "IMAGE_SCN_ALIGN_512BYTES 0x00A00000\0"
	.byte	0x1
	.uleb128 0x1691
	.ascii "IMAGE_SCN_ALIGN_1024BYTES 0x00B00000\0"
	.byte	0x1
	.uleb128 0x1692
	.ascii "IMAGE_SCN_ALIGN_2048BYTES 0x00C00000\0"
	.byte	0x1
	.uleb128 0x1693
	.ascii "IMAGE_SCN_ALIGN_4096BYTES 0x00D00000\0"
	.byte	0x1
	.uleb128 0x1694
	.ascii "IMAGE_SCN_ALIGN_8192BYTES 0x00E00000\0"
	.byte	0x1
	.uleb128 0x1696
	.ascii "IMAGE_SCN_ALIGN_MASK 0x00F00000\0"
	.byte	0x1
	.uleb128 0x1698
	.ascii "IMAGE_SCN_LNK_NRELOC_OVFL 0x01000000\0"
	.byte	0x1
	.uleb128 0x1699
	.ascii "IMAGE_SCN_MEM_DISCARDABLE 0x02000000\0"
	.byte	0x1
	.uleb128 0x169a
	.ascii "IMAGE_SCN_MEM_NOT_CACHED 0x04000000\0"
	.byte	0x1
	.uleb128 0x169b
	.ascii "IMAGE_SCN_MEM_NOT_PAGED 0x08000000\0"
	.byte	0x1
	.uleb128 0x169c
	.ascii "IMAGE_SCN_MEM_SHARED 0x10000000\0"
	.byte	0x1
	.uleb128 0x169d
	.ascii "IMAGE_SCN_MEM_EXECUTE 0x20000000\0"
	.byte	0x1
	.uleb128 0x169e
	.ascii "IMAGE_SCN_MEM_READ 0x40000000\0"
	.byte	0x1
	.uleb128 0x169f
	.ascii "IMAGE_SCN_MEM_WRITE 0x80000000\0"
	.byte	0x1
	.uleb128 0x16a1
	.ascii "IMAGE_SCN_SCALE_INDEX 0x00000001\0"
	.byte	0x3
	.uleb128 0x16a3
	.uleb128 0x144
	.byte	0x4
	.byte	0x1
	.uleb128 0x16b5
	.ascii "IMAGE_SIZEOF_SYMBOL 18\0"
	.byte	0x1
	.uleb128 0x16c7
	.ascii "IMAGE_SYM_UNDEFINED (SHORT)0\0"
	.byte	0x1
	.uleb128 0x16c8
	.ascii "IMAGE_SYM_ABSOLUTE (SHORT)-1\0"
	.byte	0x1
	.uleb128 0x16c9
	.ascii "IMAGE_SYM_DEBUG (SHORT)-2\0"
	.byte	0x1
	.uleb128 0x16ca
	.ascii "IMAGE_SYM_SECTION_MAX 0xFEFF\0"
	.byte	0x1
	.uleb128 0x16cb
	.ascii "IMAGE_SYM_SECTION_MAX_EX MAXLONG\0"
	.byte	0x1
	.uleb128 0x16cd
	.ascii "IMAGE_SYM_TYPE_NULL 0x0000\0"
	.byte	0x1
	.uleb128 0x16ce
	.ascii "IMAGE_SYM_TYPE_VOID 0x0001\0"
	.byte	0x1
	.uleb128 0x16cf
	.ascii "IMAGE_SYM_TYPE_CHAR 0x0002\0"
	.byte	0x1
	.uleb128 0x16d0
	.ascii "IMAGE_SYM_TYPE_SHORT 0x0003\0"
	.byte	0x1
	.uleb128 0x16d1
	.ascii "IMAGE_SYM_TYPE_INT 0x0004\0"
	.byte	0x1
	.uleb128 0x16d2
	.ascii "IMAGE_SYM_TYPE_LONG 0x0005\0"
	.byte	0x1
	.uleb128 0x16d3
	.ascii "IMAGE_SYM_TYPE_FLOAT 0x0006\0"
	.byte	0x1
	.uleb128 0x16d4
	.ascii "IMAGE_SYM_TYPE_DOUBLE 0x0007\0"
	.byte	0x1
	.uleb128 0x16d5
	.ascii "IMAGE_SYM_TYPE_STRUCT 0x0008\0"
	.byte	0x1
	.uleb128 0x16d6
	.ascii "IMAGE_SYM_TYPE_UNION 0x0009\0"
	.byte	0x1
	.uleb128 0x16d7
	.ascii "IMAGE_SYM_TYPE_ENUM 0x000A\0"
	.byte	0x1
	.uleb128 0x16d8
	.ascii "IMAGE_SYM_TYPE_MOE 0x000B\0"
	.byte	0x1
	.uleb128 0x16d9
	.ascii "IMAGE_SYM_TYPE_BYTE 0x000C\0"
	.byte	0x1
	.uleb128 0x16da
	.ascii "IMAGE_SYM_TYPE_WORD 0x000D\0"
	.byte	0x1
	.uleb128 0x16db
	.ascii "IMAGE_SYM_TYPE_UINT 0x000E\0"
	.byte	0x1
	.uleb128 0x16dc
	.ascii "IMAGE_SYM_TYPE_DWORD 0x000F\0"
	.byte	0x1
	.uleb128 0x16dd
	.ascii "IMAGE_SYM_TYPE_PCODE 0x8000\0"
	.byte	0x1
	.uleb128 0x16df
	.ascii "IMAGE_SYM_DTYPE_NULL 0\0"
	.byte	0x1
	.uleb128 0x16e0
	.ascii "IMAGE_SYM_DTYPE_POINTER 1\0"
	.byte	0x1
	.uleb128 0x16e1
	.ascii "IMAGE_SYM_DTYPE_FUNCTION 2\0"
	.byte	0x1
	.uleb128 0x16e2
	.ascii "IMAGE_SYM_DTYPE_ARRAY 3\0"
	.byte	0x1
	.uleb128 0x16e4
	.ascii "IMAGE_SYM_CLASS_END_OF_FUNCTION (BYTE)-1\0"
	.byte	0x1
	.uleb128 0x16e5
	.ascii "IMAGE_SYM_CLASS_NULL 0x0000\0"
	.byte	0x1
	.uleb128 0x16e6
	.ascii "IMAGE_SYM_CLASS_AUTOMATIC 0x0001\0"
	.byte	0x1
	.uleb128 0x16e7
	.ascii "IMAGE_SYM_CLASS_EXTERNAL 0x0002\0"
	.byte	0x1
	.uleb128 0x16e8
	.ascii "IMAGE_SYM_CLASS_STATIC 0x0003\0"
	.byte	0x1
	.uleb128 0x16e9
	.ascii "IMAGE_SYM_CLASS_REGISTER 0x0004\0"
	.byte	0x1
	.uleb128 0x16ea
	.ascii "IMAGE_SYM_CLASS_EXTERNAL_DEF 0x0005\0"
	.byte	0x1
	.uleb128 0x16eb
	.ascii "IMAGE_SYM_CLASS_LABEL 0x0006\0"
	.byte	0x1
	.uleb128 0x16ec
	.ascii "IMAGE_SYM_CLASS_UNDEFINED_LABEL 0x0007\0"
	.byte	0x1
	.uleb128 0x16ed
	.ascii "IMAGE_SYM_CLASS_MEMBER_OF_STRUCT 0x0008\0"
	.byte	0x1
	.uleb128 0x16ee
	.ascii "IMAGE_SYM_CLASS_ARGUMENT 0x0009\0"
	.byte	0x1
	.uleb128 0x16ef
	.ascii "IMAGE_SYM_CLASS_STRUCT_TAG 0x000A\0"
	.byte	0x1
	.uleb128 0x16f0
	.ascii "IMAGE_SYM_CLASS_MEMBER_OF_UNION 0x000B\0"
	.byte	0x1
	.uleb128 0x16f1
	.ascii "IMAGE_SYM_CLASS_UNION_TAG 0x000C\0"
	.byte	0x1
	.uleb128 0x16f2
	.ascii "IMAGE_SYM_CLASS_TYPE_DEFINITION 0x000D\0"
	.byte	0x1
	.uleb128 0x16f3
	.ascii "IMAGE_SYM_CLASS_UNDEFINED_STATIC 0x000E\0"
	.byte	0x1
	.uleb128 0x16f4
	.ascii "IMAGE_SYM_CLASS_ENUM_TAG 0x000F\0"
	.byte	0x1
	.uleb128 0x16f5
	.ascii "IMAGE_SYM_CLASS_MEMBER_OF_ENUM 0x0010\0"
	.byte	0x1
	.uleb128 0x16f6
	.ascii "IMAGE_SYM_CLASS_REGISTER_PARAM 0x0011\0"
	.byte	0x1
	.uleb128 0x16f7
	.ascii "IMAGE_SYM_CLASS_BIT_FIELD 0x0012\0"
	.byte	0x1
	.uleb128 0x16f8
	.ascii "IMAGE_SYM_CLASS_FAR_EXTERNAL 0x0044\0"
	.byte	0x1
	.uleb128 0x16f9
	.ascii "IMAGE_SYM_CLASS_BLOCK 0x0064\0"
	.byte	0x1
	.uleb128 0x16fa
	.ascii "IMAGE_SYM_CLASS_FUNCTION 0x0065\0"
	.byte	0x1
	.uleb128 0x16fb
	.ascii "IMAGE_SYM_CLASS_END_OF_STRUCT 0x0066\0"
	.byte	0x1
	.uleb128 0x16fc
	.ascii "IMAGE_SYM_CLASS_FILE 0x0067\0"
	.byte	0x1
	.uleb128 0x16fd
	.ascii "IMAGE_SYM_CLASS_SECTION 0x0068\0"
	.byte	0x1
	.uleb128 0x16fe
	.ascii "IMAGE_SYM_CLASS_WEAK_EXTERNAL 0x0069\0"
	.byte	0x1
	.uleb128 0x16ff
	.ascii "IMAGE_SYM_CLASS_CLR_TOKEN 0x006B\0"
	.byte	0x1
	.uleb128 0x1701
	.ascii "N_BTMASK 0x000F\0"
	.byte	0x1
	.uleb128 0x1702
	.ascii "N_TMASK 0x0030\0"
	.byte	0x1
	.uleb128 0x1703
	.ascii "N_TMASK1 0x00C0\0"
	.byte	0x1
	.uleb128 0x1704
	.ascii "N_TMASK2 0x00F0\0"
	.byte	0x1
	.uleb128 0x1705
	.ascii "N_BTSHFT 4\0"
	.byte	0x1
	.uleb128 0x1706
	.ascii "N_TSHIFT 2\0"
	.byte	0x1
	.uleb128 0x1708
	.ascii "BTYPE(x) ((x) & N_BTMASK)\0"
	.byte	0x1
	.uleb128 0x170b
	.ascii "ISPTR(x) (((x) & N_TMASK)==(IMAGE_SYM_DTYPE_POINTER << N_BTSHFT))\0"
	.byte	0x1
	.uleb128 0x170f
	.ascii "ISFCN(x) (((x) & N_TMASK)==(IMAGE_SYM_DTYPE_FUNCTION << N_BTSHFT))\0"
	.byte	0x1
	.uleb128 0x1713
	.ascii "ISARY(x) (((x) & N_TMASK)==(IMAGE_SYM_DTYPE_ARRAY << N_BTSHFT))\0"
	.byte	0x1
	.uleb128 0x1717
	.ascii "ISTAG(x) ((x)==IMAGE_SYM_CLASS_STRUCT_TAG || (x)==IMAGE_SYM_CLASS_UNION_TAG || (x)==IMAGE_SYM_CLASS_ENUM_TAG)\0"
	.byte	0x1
	.uleb128 0x171b
	.ascii "INCREF(x) ((((x)&~N_BTMASK)<<N_TSHIFT)|(IMAGE_SYM_DTYPE_POINTER<<N_BTSHFT)|((x)&N_BTMASK))\0"
	.byte	0x1
	.uleb128 0x171e
	.ascii "DECREF(x) ((((x)>>N_TSHIFT)&~N_BTMASK)|((x)&N_BTMASK))\0"
	.byte	0x3
	.uleb128 0x1721
	.uleb128 0x144
	.byte	0x4
	.byte	0x3
	.uleb128 0x1728
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x176f
	.ascii "IMAGE_SIZEOF_AUX_SYMBOL 18\0"
	.byte	0x1
	.uleb128 0x1775
	.ascii "IMAGE_COMDAT_SELECT_NODUPLICATES 1\0"
	.byte	0x1
	.uleb128 0x1776
	.ascii "IMAGE_COMDAT_SELECT_ANY 2\0"
	.byte	0x1
	.uleb128 0x1777
	.ascii "IMAGE_COMDAT_SELECT_SAME_SIZE 3\0"
	.byte	0x1
	.uleb128 0x1778
	.ascii "IMAGE_COMDAT_SELECT_EXACT_MATCH 4\0"
	.byte	0x1
	.uleb128 0x1779
	.ascii "IMAGE_COMDAT_SELECT_ASSOCIATIVE 5\0"
	.byte	0x1
	.uleb128 0x177a
	.ascii "IMAGE_COMDAT_SELECT_LARGEST 6\0"
	.byte	0x1
	.uleb128 0x177b
	.ascii "IMAGE_COMDAT_SELECT_NEWEST 7\0"
	.byte	0x1
	.uleb128 0x177d
	.ascii "IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY 1\0"
	.byte	0x1
	.uleb128 0x177e
	.ascii "IMAGE_WEAK_EXTERN_SEARCH_LIBRARY 2\0"
	.byte	0x1
	.uleb128 0x177f
	.ascii "IMAGE_WEAK_EXTERN_SEARCH_ALIAS 3\0"
	.byte	0x1
	.uleb128 0x178b
	.ascii "IMAGE_SIZEOF_RELOCATION 10\0"
	.byte	0x1
	.uleb128 0x178d
	.ascii "IMAGE_REL_I386_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x178e
	.ascii "IMAGE_REL_I386_DIR16 0x0001\0"
	.byte	0x1
	.uleb128 0x178f
	.ascii "IMAGE_REL_I386_REL16 0x0002\0"
	.byte	0x1
	.uleb128 0x1790
	.ascii "IMAGE_REL_I386_DIR32 0x0006\0"
	.byte	0x1
	.uleb128 0x1791
	.ascii "IMAGE_REL_I386_DIR32NB 0x0007\0"
	.byte	0x1
	.uleb128 0x1792
	.ascii "IMAGE_REL_I386_SEG12 0x0009\0"
	.byte	0x1
	.uleb128 0x1793
	.ascii "IMAGE_REL_I386_SECTION 0x000A\0"
	.byte	0x1
	.uleb128 0x1794
	.ascii "IMAGE_REL_I386_SECREL 0x000B\0"
	.byte	0x1
	.uleb128 0x1795
	.ascii "IMAGE_REL_I386_TOKEN 0x000C\0"
	.byte	0x1
	.uleb128 0x1796
	.ascii "IMAGE_REL_I386_SECREL7 0x000D\0"
	.byte	0x1
	.uleb128 0x1797
	.ascii "IMAGE_REL_I386_REL32 0x0014\0"
	.byte	0x1
	.uleb128 0x1799
	.ascii "IMAGE_REL_MIPS_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x179a
	.ascii "IMAGE_REL_MIPS_REFHALF 0x0001\0"
	.byte	0x1
	.uleb128 0x179b
	.ascii "IMAGE_REL_MIPS_REFWORD 0x0002\0"
	.byte	0x1
	.uleb128 0x179c
	.ascii "IMAGE_REL_MIPS_JMPADDR 0x0003\0"
	.byte	0x1
	.uleb128 0x179d
	.ascii "IMAGE_REL_MIPS_REFHI 0x0004\0"
	.byte	0x1
	.uleb128 0x179e
	.ascii "IMAGE_REL_MIPS_REFLO 0x0005\0"
	.byte	0x1
	.uleb128 0x179f
	.ascii "IMAGE_REL_MIPS_GPREL 0x0006\0"
	.byte	0x1
	.uleb128 0x17a0
	.ascii "IMAGE_REL_MIPS_LITERAL 0x0007\0"
	.byte	0x1
	.uleb128 0x17a1
	.ascii "IMAGE_REL_MIPS_SECTION 0x000A\0"
	.byte	0x1
	.uleb128 0x17a2
	.ascii "IMAGE_REL_MIPS_SECREL 0x000B\0"
	.byte	0x1
	.uleb128 0x17a3
	.ascii "IMAGE_REL_MIPS_SECRELLO 0x000C\0"
	.byte	0x1
	.uleb128 0x17a4
	.ascii "IMAGE_REL_MIPS_SECRELHI 0x000D\0"
	.byte	0x1
	.uleb128 0x17a5
	.ascii "IMAGE_REL_MIPS_TOKEN 0x000E\0"
	.byte	0x1
	.uleb128 0x17a6
	.ascii "IMAGE_REL_MIPS_JMPADDR16 0x0010\0"
	.byte	0x1
	.uleb128 0x17a7
	.ascii "IMAGE_REL_MIPS_REFWORDNB 0x0022\0"
	.byte	0x1
	.uleb128 0x17a8
	.ascii "IMAGE_REL_MIPS_PAIR 0x0025\0"
	.byte	0x1
	.uleb128 0x17aa
	.ascii "IMAGE_REL_ALPHA_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x17ab
	.ascii "IMAGE_REL_ALPHA_REFLONG 0x0001\0"
	.byte	0x1
	.uleb128 0x17ac
	.ascii "IMAGE_REL_ALPHA_REFQUAD 0x0002\0"
	.byte	0x1
	.uleb128 0x17ad
	.ascii "IMAGE_REL_ALPHA_GPREL32 0x0003\0"
	.byte	0x1
	.uleb128 0x17ae
	.ascii "IMAGE_REL_ALPHA_LITERAL 0x0004\0"
	.byte	0x1
	.uleb128 0x17af
	.ascii "IMAGE_REL_ALPHA_LITUSE 0x0005\0"
	.byte	0x1
	.uleb128 0x17b0
	.ascii "IMAGE_REL_ALPHA_GPDISP 0x0006\0"
	.byte	0x1
	.uleb128 0x17b1
	.ascii "IMAGE_REL_ALPHA_BRADDR 0x0007\0"
	.byte	0x1
	.uleb128 0x17b2
	.ascii "IMAGE_REL_ALPHA_HINT 0x0008\0"
	.byte	0x1
	.uleb128 0x17b3
	.ascii "IMAGE_REL_ALPHA_INLINE_REFLONG 0x0009\0"
	.byte	0x1
	.uleb128 0x17b4
	.ascii "IMAGE_REL_ALPHA_REFHI 0x000A\0"
	.byte	0x1
	.uleb128 0x17b5
	.ascii "IMAGE_REL_ALPHA_REFLO 0x000B\0"
	.byte	0x1
	.uleb128 0x17b6
	.ascii "IMAGE_REL_ALPHA_PAIR 0x000C\0"
	.byte	0x1
	.uleb128 0x17b7
	.ascii "IMAGE_REL_ALPHA_MATCH 0x000D\0"
	.byte	0x1
	.uleb128 0x17b8
	.ascii "IMAGE_REL_ALPHA_SECTION 0x000E\0"
	.byte	0x1
	.uleb128 0x17b9
	.ascii "IMAGE_REL_ALPHA_SECREL 0x000F\0"
	.byte	0x1
	.uleb128 0x17ba
	.ascii "IMAGE_REL_ALPHA_REFLONGNB 0x0010\0"
	.byte	0x1
	.uleb128 0x17bb
	.ascii "IMAGE_REL_ALPHA_SECRELLO 0x0011\0"
	.byte	0x1
	.uleb128 0x17bc
	.ascii "IMAGE_REL_ALPHA_SECRELHI 0x0012\0"
	.byte	0x1
	.uleb128 0x17bd
	.ascii "IMAGE_REL_ALPHA_REFQ3 0x0013\0"
	.byte	0x1
	.uleb128 0x17be
	.ascii "IMAGE_REL_ALPHA_REFQ2 0x0014\0"
	.byte	0x1
	.uleb128 0x17bf
	.ascii "IMAGE_REL_ALPHA_REFQ1 0x0015\0"
	.byte	0x1
	.uleb128 0x17c0
	.ascii "IMAGE_REL_ALPHA_GPRELLO 0x0016\0"
	.byte	0x1
	.uleb128 0x17c1
	.ascii "IMAGE_REL_ALPHA_GPRELHI 0x0017\0"
	.byte	0x1
	.uleb128 0x17c3
	.ascii "IMAGE_REL_PPC_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x17c4
	.ascii "IMAGE_REL_PPC_ADDR64 0x0001\0"
	.byte	0x1
	.uleb128 0x17c5
	.ascii "IMAGE_REL_PPC_ADDR32 0x0002\0"
	.byte	0x1
	.uleb128 0x17c6
	.ascii "IMAGE_REL_PPC_ADDR24 0x0003\0"
	.byte	0x1
	.uleb128 0x17c7
	.ascii "IMAGE_REL_PPC_ADDR16 0x0004\0"
	.byte	0x1
	.uleb128 0x17c8
	.ascii "IMAGE_REL_PPC_ADDR14 0x0005\0"
	.byte	0x1
	.uleb128 0x17c9
	.ascii "IMAGE_REL_PPC_REL24 0x0006\0"
	.byte	0x1
	.uleb128 0x17ca
	.ascii "IMAGE_REL_PPC_REL14 0x0007\0"
	.byte	0x1
	.uleb128 0x17cb
	.ascii "IMAGE_REL_PPC_TOCREL16 0x0008\0"
	.byte	0x1
	.uleb128 0x17cc
	.ascii "IMAGE_REL_PPC_TOCREL14 0x0009\0"
	.byte	0x1
	.uleb128 0x17cd
	.ascii "IMAGE_REL_PPC_ADDR32NB 0x000A\0"
	.byte	0x1
	.uleb128 0x17ce
	.ascii "IMAGE_REL_PPC_SECREL 0x000B\0"
	.byte	0x1
	.uleb128 0x17cf
	.ascii "IMAGE_REL_PPC_SECTION 0x000C\0"
	.byte	0x1
	.uleb128 0x17d0
	.ascii "IMAGE_REL_PPC_IFGLUE 0x000D\0"
	.byte	0x1
	.uleb128 0x17d1
	.ascii "IMAGE_REL_PPC_IMGLUE 0x000E\0"
	.byte	0x1
	.uleb128 0x17d2
	.ascii "IMAGE_REL_PPC_SECREL16 0x000F\0"
	.byte	0x1
	.uleb128 0x17d3
	.ascii "IMAGE_REL_PPC_REFHI 0x0010\0"
	.byte	0x1
	.uleb128 0x17d4
	.ascii "IMAGE_REL_PPC_REFLO 0x0011\0"
	.byte	0x1
	.uleb128 0x17d5
	.ascii "IMAGE_REL_PPC_PAIR 0x0012\0"
	.byte	0x1
	.uleb128 0x17d6
	.ascii "IMAGE_REL_PPC_SECRELLO 0x0013\0"
	.byte	0x1
	.uleb128 0x17d7
	.ascii "IMAGE_REL_PPC_SECRELHI 0x0014\0"
	.byte	0x1
	.uleb128 0x17d8
	.ascii "IMAGE_REL_PPC_GPREL 0x0015\0"
	.byte	0x1
	.uleb128 0x17d9
	.ascii "IMAGE_REL_PPC_TOKEN 0x0016\0"
	.byte	0x1
	.uleb128 0x17da
	.ascii "IMAGE_REL_PPC_TYPEMASK 0x00FF\0"
	.byte	0x1
	.uleb128 0x17db
	.ascii "IMAGE_REL_PPC_NEG 0x0100\0"
	.byte	0x1
	.uleb128 0x17dc
	.ascii "IMAGE_REL_PPC_BRTAKEN 0x0200\0"
	.byte	0x1
	.uleb128 0x17dd
	.ascii "IMAGE_REL_PPC_BRNTAKEN 0x0400\0"
	.byte	0x1
	.uleb128 0x17de
	.ascii "IMAGE_REL_PPC_TOCDEFN 0x0800\0"
	.byte	0x1
	.uleb128 0x17e0
	.ascii "IMAGE_REL_SH3_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x17e1
	.ascii "IMAGE_REL_SH3_DIRECT16 0x0001\0"
	.byte	0x1
	.uleb128 0x17e2
	.ascii "IMAGE_REL_SH3_DIRECT32 0x0002\0"
	.byte	0x1
	.uleb128 0x17e3
	.ascii "IMAGE_REL_SH3_DIRECT8 0x0003\0"
	.byte	0x1
	.uleb128 0x17e4
	.ascii "IMAGE_REL_SH3_DIRECT8_WORD 0x0004\0"
	.byte	0x1
	.uleb128 0x17e5
	.ascii "IMAGE_REL_SH3_DIRECT8_LONG 0x0005\0"
	.byte	0x1
	.uleb128 0x17e6
	.ascii "IMAGE_REL_SH3_DIRECT4 0x0006\0"
	.byte	0x1
	.uleb128 0x17e7
	.ascii "IMAGE_REL_SH3_DIRECT4_WORD 0x0007\0"
	.byte	0x1
	.uleb128 0x17e8
	.ascii "IMAGE_REL_SH3_DIRECT4_LONG 0x0008\0"
	.byte	0x1
	.uleb128 0x17e9
	.ascii "IMAGE_REL_SH3_PCREL8_WORD 0x0009\0"
	.byte	0x1
	.uleb128 0x17ea
	.ascii "IMAGE_REL_SH3_PCREL8_LONG 0x000A\0"
	.byte	0x1
	.uleb128 0x17eb
	.ascii "IMAGE_REL_SH3_PCREL12_WORD 0x000B\0"
	.byte	0x1
	.uleb128 0x17ec
	.ascii "IMAGE_REL_SH3_STARTOF_SECTION 0x000C\0"
	.byte	0x1
	.uleb128 0x17ed
	.ascii "IMAGE_REL_SH3_SIZEOF_SECTION 0x000D\0"
	.byte	0x1
	.uleb128 0x17ee
	.ascii "IMAGE_REL_SH3_SECTION 0x000E\0"
	.byte	0x1
	.uleb128 0x17ef
	.ascii "IMAGE_REL_SH3_SECREL 0x000F\0"
	.byte	0x1
	.uleb128 0x17f0
	.ascii "IMAGE_REL_SH3_DIRECT32_NB 0x0010\0"
	.byte	0x1
	.uleb128 0x17f1
	.ascii "IMAGE_REL_SH3_GPREL4_LONG 0x0011\0"
	.byte	0x1
	.uleb128 0x17f2
	.ascii "IMAGE_REL_SH3_TOKEN 0x0012\0"
	.byte	0x1
	.uleb128 0x17f4
	.ascii "IMAGE_REL_SHM_PCRELPT 0x0013\0"
	.byte	0x1
	.uleb128 0x17f5
	.ascii "IMAGE_REL_SHM_REFLO 0x0014\0"
	.byte	0x1
	.uleb128 0x17f6
	.ascii "IMAGE_REL_SHM_REFHALF 0x0015\0"
	.byte	0x1
	.uleb128 0x17f7
	.ascii "IMAGE_REL_SHM_RELLO 0x0016\0"
	.byte	0x1
	.uleb128 0x17f8
	.ascii "IMAGE_REL_SHM_RELHALF 0x0017\0"
	.byte	0x1
	.uleb128 0x17f9
	.ascii "IMAGE_REL_SHM_PAIR 0x0018\0"
	.byte	0x1
	.uleb128 0x17fb
	.ascii "IMAGE_REL_SH_NOMODE 0x8000\0"
	.byte	0x1
	.uleb128 0x17fd
	.ascii "IMAGE_REL_ARM_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x17fe
	.ascii "IMAGE_REL_ARM_ADDR32 0x0001\0"
	.byte	0x1
	.uleb128 0x17ff
	.ascii "IMAGE_REL_ARM_ADDR32NB 0x0002\0"
	.byte	0x1
	.uleb128 0x1800
	.ascii "IMAGE_REL_ARM_BRANCH24 0x0003\0"
	.byte	0x1
	.uleb128 0x1801
	.ascii "IMAGE_REL_ARM_BRANCH11 0x0004\0"
	.byte	0x1
	.uleb128 0x1802
	.ascii "IMAGE_REL_ARM_TOKEN 0x0005\0"
	.byte	0x1
	.uleb128 0x1803
	.ascii "IMAGE_REL_ARM_GPREL12 0x0006\0"
	.byte	0x1
	.uleb128 0x1804
	.ascii "IMAGE_REL_ARM_GPREL7 0x0007\0"
	.byte	0x1
	.uleb128 0x1805
	.ascii "IMAGE_REL_ARM_BLX24 0x0008\0"
	.byte	0x1
	.uleb128 0x1806
	.ascii "IMAGE_REL_ARM_BLX11 0x0009\0"
	.byte	0x1
	.uleb128 0x1807
	.ascii "IMAGE_REL_ARM_SECTION 0x000E\0"
	.byte	0x1
	.uleb128 0x1808
	.ascii "IMAGE_REL_ARM_SECREL 0x000F\0"
	.byte	0x1
	.uleb128 0x1809
	.ascii "IMAGE_REL_ARM_MOV32A 0x0010\0"
	.byte	0x1
	.uleb128 0x180a
	.ascii "IMAGE_REL_ARM_MOV32 0x0010\0"
	.byte	0x1
	.uleb128 0x180b
	.ascii "IMAGE_REL_ARM_MOV32T 0x0011\0"
	.byte	0x1
	.uleb128 0x180c
	.ascii "IMAGE_REL_THUMB_MOV32 0x0011\0"
	.byte	0x1
	.uleb128 0x180d
	.ascii "IMAGE_REL_ARM_BRANCH20T 0x0012\0"
	.byte	0x1
	.uleb128 0x180e
	.ascii "IMAGE_REL_THUMB_BRANCH20 0x0012\0"
	.byte	0x1
	.uleb128 0x180f
	.ascii "IMAGE_REL_ARM_BRANCH24T 0x0014\0"
	.byte	0x1
	.uleb128 0x1810
	.ascii "IMAGE_REL_THUMB_BRANCH24 0x0014\0"
	.byte	0x1
	.uleb128 0x1811
	.ascii "IMAGE_REL_ARM_BLX23T 0x0015\0"
	.byte	0x1
	.uleb128 0x1812
	.ascii "IMAGE_REL_THUMB_BLX23 0x0015\0"
	.byte	0x1
	.uleb128 0x1814
	.ascii "IMAGE_REL_AM_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x1815
	.ascii "IMAGE_REL_AM_ADDR32 0x0001\0"
	.byte	0x1
	.uleb128 0x1816
	.ascii "IMAGE_REL_AM_ADDR32NB 0x0002\0"
	.byte	0x1
	.uleb128 0x1817
	.ascii "IMAGE_REL_AM_CALL32 0x0003\0"
	.byte	0x1
	.uleb128 0x1818
	.ascii "IMAGE_REL_AM_FUNCINFO 0x0004\0"
	.byte	0x1
	.uleb128 0x1819
	.ascii "IMAGE_REL_AM_REL32_1 0x0005\0"
	.byte	0x1
	.uleb128 0x181a
	.ascii "IMAGE_REL_AM_REL32_2 0x0006\0"
	.byte	0x1
	.uleb128 0x181b
	.ascii "IMAGE_REL_AM_SECREL 0x0007\0"
	.byte	0x1
	.uleb128 0x181c
	.ascii "IMAGE_REL_AM_SECTION 0x0008\0"
	.byte	0x1
	.uleb128 0x181d
	.ascii "IMAGE_REL_AM_TOKEN 0x0009\0"
	.byte	0x1
	.uleb128 0x181f
	.ascii "IMAGE_REL_AMD64_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x1820
	.ascii "IMAGE_REL_AMD64_ADDR64 0x0001\0"
	.byte	0x1
	.uleb128 0x1821
	.ascii "IMAGE_REL_AMD64_ADDR32 0x0002\0"
	.byte	0x1
	.uleb128 0x1822
	.ascii "IMAGE_REL_AMD64_ADDR32NB 0x0003\0"
	.byte	0x1
	.uleb128 0x1823
	.ascii "IMAGE_REL_AMD64_REL32 0x0004\0"
	.byte	0x1
	.uleb128 0x1824
	.ascii "IMAGE_REL_AMD64_REL32_1 0x0005\0"
	.byte	0x1
	.uleb128 0x1825
	.ascii "IMAGE_REL_AMD64_REL32_2 0x0006\0"
	.byte	0x1
	.uleb128 0x1826
	.ascii "IMAGE_REL_AMD64_REL32_3 0x0007\0"
	.byte	0x1
	.uleb128 0x1827
	.ascii "IMAGE_REL_AMD64_REL32_4 0x0008\0"
	.byte	0x1
	.uleb128 0x1828
	.ascii "IMAGE_REL_AMD64_REL32_5 0x0009\0"
	.byte	0x1
	.uleb128 0x1829
	.ascii "IMAGE_REL_AMD64_SECTION 0x000A\0"
	.byte	0x1
	.uleb128 0x182a
	.ascii "IMAGE_REL_AMD64_SECREL 0x000B\0"
	.byte	0x1
	.uleb128 0x182b
	.ascii "IMAGE_REL_AMD64_SECREL7 0x000C\0"
	.byte	0x1
	.uleb128 0x182c
	.ascii "IMAGE_REL_AMD64_TOKEN 0x000D\0"
	.byte	0x1
	.uleb128 0x182d
	.ascii "IMAGE_REL_AMD64_SREL32 0x000E\0"
	.byte	0x1
	.uleb128 0x182e
	.ascii "IMAGE_REL_AMD64_PAIR 0x000F\0"
	.byte	0x1
	.uleb128 0x182f
	.ascii "IMAGE_REL_AMD64_SSPAN32 0x0010\0"
	.byte	0x1
	.uleb128 0x1831
	.ascii "IMAGE_REL_IA64_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x1832
	.ascii "IMAGE_REL_IA64_IMM14 0x0001\0"
	.byte	0x1
	.uleb128 0x1833
	.ascii "IMAGE_REL_IA64_IMM22 0x0002\0"
	.byte	0x1
	.uleb128 0x1834
	.ascii "IMAGE_REL_IA64_IMM64 0x0003\0"
	.byte	0x1
	.uleb128 0x1835
	.ascii "IMAGE_REL_IA64_DIR32 0x0004\0"
	.byte	0x1
	.uleb128 0x1836
	.ascii "IMAGE_REL_IA64_DIR64 0x0005\0"
	.byte	0x1
	.uleb128 0x1837
	.ascii "IMAGE_REL_IA64_PCREL21B 0x0006\0"
	.byte	0x1
	.uleb128 0x1838
	.ascii "IMAGE_REL_IA64_PCREL21M 0x0007\0"
	.byte	0x1
	.uleb128 0x1839
	.ascii "IMAGE_REL_IA64_PCREL21F 0x0008\0"
	.byte	0x1
	.uleb128 0x183a
	.ascii "IMAGE_REL_IA64_GPREL22 0x0009\0"
	.byte	0x1
	.uleb128 0x183b
	.ascii "IMAGE_REL_IA64_LTOFF22 0x000A\0"
	.byte	0x1
	.uleb128 0x183c
	.ascii "IMAGE_REL_IA64_SECTION 0x000B\0"
	.byte	0x1
	.uleb128 0x183d
	.ascii "IMAGE_REL_IA64_SECREL22 0x000C\0"
	.byte	0x1
	.uleb128 0x183e
	.ascii "IMAGE_REL_IA64_SECREL64I 0x000D\0"
	.byte	0x1
	.uleb128 0x183f
	.ascii "IMAGE_REL_IA64_SECREL32 0x000E\0"
	.byte	0x1
	.uleb128 0x1841
	.ascii "IMAGE_REL_IA64_DIR32NB 0x0010\0"
	.byte	0x1
	.uleb128 0x1842
	.ascii "IMAGE_REL_IA64_SREL14 0x0011\0"
	.byte	0x1
	.uleb128 0x1843
	.ascii "IMAGE_REL_IA64_SREL22 0x0012\0"
	.byte	0x1
	.uleb128 0x1844
	.ascii "IMAGE_REL_IA64_SREL32 0x0013\0"
	.byte	0x1
	.uleb128 0x1845
	.ascii "IMAGE_REL_IA64_UREL32 0x0014\0"
	.byte	0x1
	.uleb128 0x1846
	.ascii "IMAGE_REL_IA64_PCREL60X 0x0015\0"
	.byte	0x1
	.uleb128 0x1847
	.ascii "IMAGE_REL_IA64_PCREL60B 0x0016\0"
	.byte	0x1
	.uleb128 0x1848
	.ascii "IMAGE_REL_IA64_PCREL60F 0x0017\0"
	.byte	0x1
	.uleb128 0x1849
	.ascii "IMAGE_REL_IA64_PCREL60I 0x0018\0"
	.byte	0x1
	.uleb128 0x184a
	.ascii "IMAGE_REL_IA64_PCREL60M 0x0019\0"
	.byte	0x1
	.uleb128 0x184b
	.ascii "IMAGE_REL_IA64_IMMGPREL64 0x001A\0"
	.byte	0x1
	.uleb128 0x184c
	.ascii "IMAGE_REL_IA64_TOKEN 0x001B\0"
	.byte	0x1
	.uleb128 0x184d
	.ascii "IMAGE_REL_IA64_GPREL32 0x001C\0"
	.byte	0x1
	.uleb128 0x184e
	.ascii "IMAGE_REL_IA64_ADDEND 0x001F\0"
	.byte	0x1
	.uleb128 0x1850
	.ascii "IMAGE_REL_CEF_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x1851
	.ascii "IMAGE_REL_CEF_ADDR32 0x0001\0"
	.byte	0x1
	.uleb128 0x1852
	.ascii "IMAGE_REL_CEF_ADDR64 0x0002\0"
	.byte	0x1
	.uleb128 0x1853
	.ascii "IMAGE_REL_CEF_ADDR32NB 0x0003\0"
	.byte	0x1
	.uleb128 0x1854
	.ascii "IMAGE_REL_CEF_SECTION 0x0004\0"
	.byte	0x1
	.uleb128 0x1855
	.ascii "IMAGE_REL_CEF_SECREL 0x0005\0"
	.byte	0x1
	.uleb128 0x1856
	.ascii "IMAGE_REL_CEF_TOKEN 0x0006\0"
	.byte	0x1
	.uleb128 0x1858
	.ascii "IMAGE_REL_CEE_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x1859
	.ascii "IMAGE_REL_CEE_ADDR32 0x0001\0"
	.byte	0x1
	.uleb128 0x185a
	.ascii "IMAGE_REL_CEE_ADDR64 0x0002\0"
	.byte	0x1
	.uleb128 0x185b
	.ascii "IMAGE_REL_CEE_ADDR32NB 0x0003\0"
	.byte	0x1
	.uleb128 0x185c
	.ascii "IMAGE_REL_CEE_SECTION 0x0004\0"
	.byte	0x1
	.uleb128 0x185d
	.ascii "IMAGE_REL_CEE_SECREL 0x0005\0"
	.byte	0x1
	.uleb128 0x185e
	.ascii "IMAGE_REL_CEE_TOKEN 0x0006\0"
	.byte	0x1
	.uleb128 0x1860
	.ascii "IMAGE_REL_M32R_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x1861
	.ascii "IMAGE_REL_M32R_ADDR32 0x0001\0"
	.byte	0x1
	.uleb128 0x1862
	.ascii "IMAGE_REL_M32R_ADDR32NB 0x0002\0"
	.byte	0x1
	.uleb128 0x1863
	.ascii "IMAGE_REL_M32R_ADDR24 0x0003\0"
	.byte	0x1
	.uleb128 0x1864
	.ascii "IMAGE_REL_M32R_GPREL16 0x0004\0"
	.byte	0x1
	.uleb128 0x1865
	.ascii "IMAGE_REL_M32R_PCREL24 0x0005\0"
	.byte	0x1
	.uleb128 0x1866
	.ascii "IMAGE_REL_M32R_PCREL16 0x0006\0"
	.byte	0x1
	.uleb128 0x1867
	.ascii "IMAGE_REL_M32R_PCREL8 0x0007\0"
	.byte	0x1
	.uleb128 0x1868
	.ascii "IMAGE_REL_M32R_REFHALF 0x0008\0"
	.byte	0x1
	.uleb128 0x1869
	.ascii "IMAGE_REL_M32R_REFHI 0x0009\0"
	.byte	0x1
	.uleb128 0x186a
	.ascii "IMAGE_REL_M32R_REFLO 0x000A\0"
	.byte	0x1
	.uleb128 0x186b
	.ascii "IMAGE_REL_M32R_PAIR 0x000B\0"
	.byte	0x1
	.uleb128 0x186c
	.ascii "IMAGE_REL_M32R_SECTION 0x000C\0"
	.byte	0x1
	.uleb128 0x186d
	.ascii "IMAGE_REL_M32R_SECREL32 0x000D\0"
	.byte	0x1
	.uleb128 0x186e
	.ascii "IMAGE_REL_M32R_TOKEN 0x000E\0"
	.byte	0x1
	.uleb128 0x1870
	.ascii "IMAGE_REL_EBC_ABSOLUTE 0x0000\0"
	.byte	0x1
	.uleb128 0x1871
	.ascii "IMAGE_REL_EBC_ADDR32NB 0x0001\0"
	.byte	0x1
	.uleb128 0x1872
	.ascii "IMAGE_REL_EBC_REL32 0x0002\0"
	.byte	0x1
	.uleb128 0x1873
	.ascii "IMAGE_REL_EBC_SECTION 0x0003\0"
	.byte	0x1
	.uleb128 0x1874
	.ascii "IMAGE_REL_EBC_SECREL 0x0004\0"
	.byte	0x1
	.uleb128 0x1876
	.ascii "EXT_IMM64(Value,Address,Size,InstPos,ValPos) Value |= (((ULONGLONG)((*(Address) >> InstPos) & (((ULONGLONG)1 << Size) - 1))) << ValPos)\0"
	.byte	0x1
	.uleb128 0x1877
	.ascii "INS_IMM64(Value,Address,Size,InstPos,ValPos) *(PDWORD)Address = (*(PDWORD)Address & ~(((1 << Size) - 1) << InstPos)) | ((DWORD)((((ULONGLONG)Value >> ValPos) & (((ULONGLONG)1 << Size) - 1))) << InstPos)\0"
	.byte	0x1
	.uleb128 0x1879
	.ascii "EMARCH_ENC_I17_IMM7B_INST_WORD_X 3\0"
	.byte	0x1
	.uleb128 0x187a
	.ascii "EMARCH_ENC_I17_IMM7B_SIZE_X 7\0"
	.byte	0x1
	.uleb128 0x187b
	.ascii "EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X 4\0"
	.byte	0x1
	.uleb128 0x187c
	.ascii "EMARCH_ENC_I17_IMM7B_VAL_POS_X 0\0"
	.byte	0x1
	.uleb128 0x187e
	.ascii "EMARCH_ENC_I17_IMM9D_INST_WORD_X 3\0"
	.byte	0x1
	.uleb128 0x187f
	.ascii "EMARCH_ENC_I17_IMM9D_SIZE_X 9\0"
	.byte	0x1
	.uleb128 0x1880
	.ascii "EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X 18\0"
	.byte	0x1
	.uleb128 0x1881
	.ascii "EMARCH_ENC_I17_IMM9D_VAL_POS_X 7\0"
	.byte	0x1
	.uleb128 0x1883
	.ascii "EMARCH_ENC_I17_IMM5C_INST_WORD_X 3\0"
	.byte	0x1
	.uleb128 0x1884
	.ascii "EMARCH_ENC_I17_IMM5C_SIZE_X 5\0"
	.byte	0x1
	.uleb128 0x1885
	.ascii "EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X 13\0"
	.byte	0x1
	.uleb128 0x1886
	.ascii "EMARCH_ENC_I17_IMM5C_VAL_POS_X 16\0"
	.byte	0x1
	.uleb128 0x1888
	.ascii "EMARCH_ENC_I17_IC_INST_WORD_X 3\0"
	.byte	0x1
	.uleb128 0x1889
	.ascii "EMARCH_ENC_I17_IC_SIZE_X 1\0"
	.byte	0x1
	.uleb128 0x188a
	.ascii "EMARCH_ENC_I17_IC_INST_WORD_POS_X 12\0"
	.byte	0x1
	.uleb128 0x188b
	.ascii "EMARCH_ENC_I17_IC_VAL_POS_X 21\0"
	.byte	0x1
	.uleb128 0x188d
	.ascii "EMARCH_ENC_I17_IMM41a_INST_WORD_X 1\0"
	.byte	0x1
	.uleb128 0x188e
	.ascii "EMARCH_ENC_I17_IMM41a_SIZE_X 10\0"
	.byte	0x1
	.uleb128 0x188f
	.ascii "EMARCH_ENC_I17_IMM41a_INST_WORD_POS_X 14\0"
	.byte	0x1
	.uleb128 0x1890
	.ascii "EMARCH_ENC_I17_IMM41a_VAL_POS_X 22\0"
	.byte	0x1
	.uleb128 0x1892
	.ascii "EMARCH_ENC_I17_IMM41b_INST_WORD_X 1\0"
	.byte	0x1
	.uleb128 0x1893
	.ascii "EMARCH_ENC_I17_IMM41b_SIZE_X 8\0"
	.byte	0x1
	.uleb128 0x1894
	.ascii "EMARCH_ENC_I17_IMM41b_INST_WORD_POS_X 24\0"
	.byte	0x1
	.uleb128 0x1895
	.ascii "EMARCH_ENC_I17_IMM41b_VAL_POS_X 32\0"
	.byte	0x1
	.uleb128 0x1897
	.ascii "EMARCH_ENC_I17_IMM41c_INST_WORD_X 2\0"
	.byte	0x1
	.uleb128 0x1898
	.ascii "EMARCH_ENC_I17_IMM41c_SIZE_X 23\0"
	.byte	0x1
	.uleb128 0x1899
	.ascii "EMARCH_ENC_I17_IMM41c_INST_WORD_POS_X 0\0"
	.byte	0x1
	.uleb128 0x189a
	.ascii "EMARCH_ENC_I17_IMM41c_VAL_POS_X 40\0"
	.byte	0x1
	.uleb128 0x189c
	.ascii "EMARCH_ENC_I17_SIGN_INST_WORD_X 3\0"
	.byte	0x1
	.uleb128 0x189d
	.ascii "EMARCH_ENC_I17_SIGN_SIZE_X 1\0"
	.byte	0x1
	.uleb128 0x189e
	.ascii "EMARCH_ENC_I17_SIGN_INST_WORD_POS_X 27\0"
	.byte	0x1
	.uleb128 0x189f
	.ascii "EMARCH_ENC_I17_SIGN_VAL_POS_X 63\0"
	.byte	0x1
	.uleb128 0x18a1
	.ascii "X3_OPCODE_INST_WORD_X 3\0"
	.byte	0x1
	.uleb128 0x18a2
	.ascii "X3_OPCODE_SIZE_X 4\0"
	.byte	0x1
	.uleb128 0x18a3
	.ascii "X3_OPCODE_INST_WORD_POS_X 28\0"
	.byte	0x1
	.uleb128 0x18a4
	.ascii "X3_OPCODE_SIGN_VAL_POS_X 0\0"
	.byte	0x1
	.uleb128 0x18a6
	.ascii "X3_I_INST_WORD_X 3\0"
	.byte	0x1
	.uleb128 0x18a7
	.ascii "X3_I_SIZE_X 1\0"
	.byte	0x1
	.uleb128 0x18a8
	.ascii "X3_I_INST_WORD_POS_X 27\0"
	.byte	0x1
	.uleb128 0x18a9
	.ascii "X3_I_SIGN_VAL_POS_X 59\0"
	.byte	0x1
	.uleb128 0x18ab
	.ascii "X3_D_WH_INST_WORD_X 3\0"
	.byte	0x1
	.uleb128 0x18ac
	.ascii "X3_D_WH_SIZE_X 3\0"
	.byte	0x1
	.uleb128 0x18ad
	.ascii "X3_D_WH_INST_WORD_POS_X 24\0"
	.byte	0x1
	.uleb128 0x18ae
	.ascii "X3_D_WH_SIGN_VAL_POS_X 0\0"
	.byte	0x1
	.uleb128 0x18b0
	.ascii "X3_IMM20_INST_WORD_X 3\0"
	.byte	0x1
	.uleb128 0x18b1
	.ascii "X3_IMM20_SIZE_X 20\0"
	.byte	0x1
	.uleb128 0x18b2
	.ascii "X3_IMM20_INST_WORD_POS_X 4\0"
	.byte	0x1
	.uleb128 0x18b3
	.ascii "X3_IMM20_SIGN_VAL_POS_X 0\0"
	.byte	0x1
	.uleb128 0x18b5
	.ascii "X3_IMM39_1_INST_WORD_X 2\0"
	.byte	0x1
	.uleb128 0x18b6
	.ascii "X3_IMM39_1_SIZE_X 23\0"
	.byte	0x1
	.uleb128 0x18b7
	.ascii "X3_IMM39_1_INST_WORD_POS_X 0\0"
	.byte	0x1
	.uleb128 0x18b8
	.ascii "X3_IMM39_1_SIGN_VAL_POS_X 36\0"
	.byte	0x1
	.uleb128 0x18ba
	.ascii "X3_IMM39_2_INST_WORD_X 1\0"
	.byte	0x1
	.uleb128 0x18bb
	.ascii "X3_IMM39_2_SIZE_X 16\0"
	.byte	0x1
	.uleb128 0x18bc
	.ascii "X3_IMM39_2_INST_WORD_POS_X 16\0"
	.byte	0x1
	.uleb128 0x18bd
	.ascii "X3_IMM39_2_SIGN_VAL_POS_X 20\0"
	.byte	0x1
	.uleb128 0x18bf
	.ascii "X3_P_INST_WORD_X 3\0"
	.byte	0x1
	.uleb128 0x18c0
	.ascii "X3_P_SIZE_X 4\0"
	.byte	0x1
	.uleb128 0x18c1
	.ascii "X3_P_INST_WORD_POS_X 0\0"
	.byte	0x1
	.uleb128 0x18c2
	.ascii "X3_P_SIGN_VAL_POS_X 0\0"
	.byte	0x1
	.uleb128 0x18c4
	.ascii "X3_TMPLT_INST_WORD_X 0\0"
	.byte	0x1
	.uleb128 0x18c5
	.ascii "X3_TMPLT_SIZE_X 4\0"
	.byte	0x1
	.uleb128 0x18c6
	.ascii "X3_TMPLT_INST_WORD_POS_X 0\0"
	.byte	0x1
	.uleb128 0x18c7
	.ascii "X3_TMPLT_SIGN_VAL_POS_X 0\0"
	.byte	0x1
	.uleb128 0x18c9
	.ascii "X3_BTYPE_QP_INST_WORD_X 2\0"
	.byte	0x1
	.uleb128 0x18ca
	.ascii "X3_BTYPE_QP_SIZE_X 9\0"
	.byte	0x1
	.uleb128 0x18cb
	.ascii "X3_BTYPE_QP_INST_WORD_POS_X 23\0"
	.byte	0x1
	.uleb128 0x18cc
	.ascii "X3_BTYPE_QP_INST_VAL_POS_X 0\0"
	.byte	0x1
	.uleb128 0x18ce
	.ascii "X3_EMPTY_INST_WORD_X 1\0"
	.byte	0x1
	.uleb128 0x18cf
	.ascii "X3_EMPTY_SIZE_X 2\0"
	.byte	0x1
	.uleb128 0x18d0
	.ascii "X3_EMPTY_INST_WORD_POS_X 14\0"
	.byte	0x1
	.uleb128 0x18d1
	.ascii "X3_EMPTY_INST_VAL_POS_X 0\0"
	.byte	0x1
	.uleb128 0x18dc
	.ascii "IMAGE_SIZEOF_LINENUMBER 6\0"
	.byte	0x3
	.uleb128 0x18de
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x18e6
	.ascii "IMAGE_SIZEOF_BASE_RELOCATION 8\0"
	.byte	0x1
	.uleb128 0x18e8
	.ascii "IMAGE_REL_BASED_ABSOLUTE 0\0"
	.byte	0x1
	.uleb128 0x18e9
	.ascii "IMAGE_REL_BASED_HIGH 1\0"
	.byte	0x1
	.uleb128 0x18ea
	.ascii "IMAGE_REL_BASED_LOW 2\0"
	.byte	0x1
	.uleb128 0x18eb
	.ascii "IMAGE_REL_BASED_HIGHLOW 3\0"
	.byte	0x1
	.uleb128 0x18ec
	.ascii "IMAGE_REL_BASED_HIGHADJ 4\0"
	.byte	0x1
	.uleb128 0x18ed
	.ascii "IMAGE_REL_BASED_MIPS_JMPADDR 5\0"
	.byte	0x1
	.uleb128 0x18ee
	.ascii "IMAGE_REL_BASED_ARM_MOV32 5\0"
	.byte	0x1
	.uleb128 0x18ef
	.ascii "IMAGE_REL_BASED_THUMB_MOV32 7\0"
	.byte	0x1
	.uleb128 0x18f0
	.ascii "IMAGE_REL_BASED_MIPS_JMPADDR16 9\0"
	.byte	0x1
	.uleb128 0x18f1
	.ascii "IMAGE_REL_BASED_IA64_IMM64 9\0"
	.byte	0x1
	.uleb128 0x18f2
	.ascii "IMAGE_REL_BASED_DIR64 10\0"
	.byte	0x1
	.uleb128 0x18f4
	.ascii "IMAGE_ARCHIVE_START_SIZE 8\0"
	.byte	0x1
	.uleb128 0x18f5
	.ascii "IMAGE_ARCHIVE_START \"!<arch>\\n\"\0"
	.byte	0x1
	.uleb128 0x18f6
	.ascii "IMAGE_ARCHIVE_END \"`\\n\"\0"
	.byte	0x1
	.uleb128 0x18f7
	.ascii "IMAGE_ARCHIVE_PAD \"\\n\"\0"
	.byte	0x1
	.uleb128 0x18f8
	.ascii "IMAGE_ARCHIVE_LINKER_MEMBER \"/               \"\0"
	.byte	0x1
	.uleb128 0x18f9
	.ascii "IMAGE_ARCHIVE_LONGNAMES_MEMBER \"//              \"\0"
	.byte	0x1
	.uleb128 0x1905
	.ascii "IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR 60\0"
	.file 325 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/pshpack8.h"
	.byte	0x3
	.uleb128 0x191a
	.uleb128 0x145
	.byte	0x4
	.byte	0x3
	.uleb128 0x1926
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x1932
	.ascii "IMAGE_ORDINAL_FLAG64 0x8000000000000000ull\0"
	.byte	0x1
	.uleb128 0x1933
	.ascii "IMAGE_ORDINAL_FLAG32 0x80000000\0"
	.byte	0x1
	.uleb128 0x1934
	.ascii "IMAGE_ORDINAL64(Ordinal) (Ordinal & 0xffffull)\0"
	.byte	0x1
	.uleb128 0x1935
	.ascii "IMAGE_ORDINAL32(Ordinal) (Ordinal & 0xffff)\0"
	.byte	0x1
	.uleb128 0x1936
	.ascii "IMAGE_SNAP_BY_ORDINAL64(Ordinal) ((Ordinal & IMAGE_ORDINAL_FLAG64)!=0)\0"
	.byte	0x1
	.uleb128 0x1937
	.ascii "IMAGE_SNAP_BY_ORDINAL32(Ordinal) ((Ordinal & IMAGE_ORDINAL_FLAG32)!=0)\0"
	.byte	0x1
	.uleb128 0x1950
	.ascii "IMAGE_ORDINAL_FLAG IMAGE_ORDINAL_FLAG64\0"
	.byte	0x1
	.uleb128 0x1951
	.ascii "IMAGE_ORDINAL(Ordinal) IMAGE_ORDINAL64(Ordinal)\0"
	.byte	0x1
	.uleb128 0x1954
	.ascii "IMAGE_SNAP_BY_ORDINAL(Ordinal) IMAGE_SNAP_BY_ORDINAL64(Ordinal)\0"
	.byte	0x1
	.uleb128 0x1995
	.ascii "IMAGE_RESOURCE_NAME_IS_STRING 0x80000000\0"
	.byte	0x1
	.uleb128 0x1996
	.ascii "IMAGE_RESOURCE_DATA_IS_DIRECTORY 0x80000000\0"
	.byte	0x1
	.uleb128 0x1a42
	.ascii "IMAGE_DEBUG_TYPE_UNKNOWN 0\0"
	.byte	0x1
	.uleb128 0x1a43
	.ascii "IMAGE_DEBUG_TYPE_COFF 1\0"
	.byte	0x1
	.uleb128 0x1a44
	.ascii "IMAGE_DEBUG_TYPE_CODEVIEW 2\0"
	.byte	0x1
	.uleb128 0x1a45
	.ascii "IMAGE_DEBUG_TYPE_FPO 3\0"
	.byte	0x1
	.uleb128 0x1a46
	.ascii "IMAGE_DEBUG_TYPE_MISC 4\0"
	.byte	0x1
	.uleb128 0x1a47
	.ascii "IMAGE_DEBUG_TYPE_EXCEPTION 5\0"
	.byte	0x1
	.uleb128 0x1a48
	.ascii "IMAGE_DEBUG_TYPE_FIXUP 6\0"
	.byte	0x1
	.uleb128 0x1a49
	.ascii "IMAGE_DEBUG_TYPE_OMAP_TO_SRC 7\0"
	.byte	0x1
	.uleb128 0x1a4a
	.ascii "IMAGE_DEBUG_TYPE_OMAP_FROM_SRC 8\0"
	.byte	0x1
	.uleb128 0x1a4b
	.ascii "IMAGE_DEBUG_TYPE_BORLAND 9\0"
	.byte	0x1
	.uleb128 0x1a4c
	.ascii "IMAGE_DEBUG_TYPE_RESERVED10 10\0"
	.byte	0x1
	.uleb128 0x1a4d
	.ascii "IMAGE_DEBUG_TYPE_CLSID 11\0"
	.byte	0x1
	.uleb128 0x1a5a
	.ascii "FRAME_FPO 0\0"
	.byte	0x1
	.uleb128 0x1a5b
	.ascii "FRAME_TRAP 1\0"
	.byte	0x1
	.uleb128 0x1a5c
	.ascii "FRAME_TSS 2\0"
	.byte	0x1
	.uleb128 0x1a5d
	.ascii "FRAME_NONFPO 3\0"
	.byte	0x1
	.uleb128 0x1a6b
	.ascii "SIZEOF_RFPO_DATA 16\0"
	.byte	0x1
	.uleb128 0x1a6d
	.ascii "IMAGE_DEBUG_MISC_EXENAME 1\0"
	.byte	0x1
	.uleb128 0x1aa2
	.ascii "IMAGE_SEPARATE_DEBUG_SIGNATURE 0x4944\0"
	.byte	0x1
	.uleb128 0x1aa3
	.ascii "NON_PAGED_DEBUG_SIGNATURE 0x494E\0"
	.byte	0x1
	.uleb128 0x1aa5
	.ascii "IMAGE_SEPARATE_DEBUG_FLAGS_MASK 0x8000\0"
	.byte	0x1
	.uleb128 0x1aa6
	.ascii "IMAGE_SEPARATE_DEBUG_MISMATCH 0x8000\0"
	.byte	0x3
	.uleb128 0x1ab4
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x1ab6
	.ascii "IMPORT_OBJECT_HDR_SIG2 0xffff\0"
	.byte	0x1
	.uleb128 0x1ad1
	.ascii "__IMAGE_COR20_HEADER_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1b28
	.ascii "_SLIST_HEADER_ \0"
	.byte	0x1
	.uleb128 0x1b5f
	.ascii "_RTL_RUN_ONCE_DEF 1\0"
	.byte	0x1
	.uleb128 0x1b64
	.ascii "RTL_RUN_ONCE_INIT {0}\0"
	.byte	0x1
	.uleb128 0x1b65
	.ascii "RTL_RUN_ONCE_CHECK_ONLY __MSABI_LONG(1U)\0"
	.byte	0x1
	.uleb128 0x1b66
	.ascii "RTL_RUN_ONCE_ASYNC __MSABI_LONG(2U)\0"
	.byte	0x1
	.uleb128 0x1b67
	.ascii "RTL_RUN_ONCE_INIT_FAILED __MSABI_LONG(4U)\0"
	.byte	0x1
	.uleb128 0x1b68
	.ascii "RTL_RUN_ONCE_CTX_RESERVED_BITS 2\0"
	.byte	0x1
	.uleb128 0x1b73
	.ascii "FAST_FAIL_LEGACY_GS_VIOLATION 0\0"
	.byte	0x1
	.uleb128 0x1b74
	.ascii "FAST_FAIL_VTGUARD_CHECK_FAILURE 1\0"
	.byte	0x1
	.uleb128 0x1b75
	.ascii "FAST_FAIL_STACK_COOKIE_CHECK_FAILURE 2\0"
	.byte	0x1
	.uleb128 0x1b76
	.ascii "FAST_FAIL_CORRUPT_LIST_ENTRY 3\0"
	.byte	0x1
	.uleb128 0x1b77
	.ascii "FAST_FAIL_INCORRECT_STACK 4\0"
	.byte	0x1
	.uleb128 0x1b78
	.ascii "FAST_FAIL_INVALID_ARG 5\0"
	.byte	0x1
	.uleb128 0x1b79
	.ascii "FAST_FAIL_GS_COOKIE_INIT 6\0"
	.byte	0x1
	.uleb128 0x1b7a
	.ascii "FAST_FAIL_FATAL_APP_EXIT 7\0"
	.byte	0x1
	.uleb128 0x1b7b
	.ascii "FAST_FAIL_RANGE_CHECK_FAILURE 8\0"
	.byte	0x1
	.uleb128 0x1b7c
	.ascii "FAST_FAIL_UNSAFE_REGISTRY_ACCESS 9\0"
	.byte	0x1
	.uleb128 0x1b7d
	.ascii "FAST_FAIL_INVALID_FAST_FAIL_CODE 0xffffffff\0"
	.byte	0x1
	.uleb128 0x1b82
	.ascii "HEAP_NO_SERIALIZE 0x00000001\0"
	.byte	0x1
	.uleb128 0x1b83
	.ascii "HEAP_GROWABLE 0x00000002\0"
	.byte	0x1
	.uleb128 0x1b84
	.ascii "HEAP_GENERATE_EXCEPTIONS 0x00000004\0"
	.byte	0x1
	.uleb128 0x1b85
	.ascii "HEAP_ZERO_MEMORY 0x00000008\0"
	.byte	0x1
	.uleb128 0x1b86
	.ascii "HEAP_REALLOC_IN_PLACE_ONLY 0x00000010\0"
	.byte	0x1
	.uleb128 0x1b87
	.ascii "HEAP_TAIL_CHECKING_ENABLED 0x00000020\0"
	.byte	0x1
	.uleb128 0x1b88
	.ascii "HEAP_FREE_CHECKING_ENABLED 0x00000040\0"
	.byte	0x1
	.uleb128 0x1b89
	.ascii "HEAP_DISABLE_COALESCE_ON_FREE 0x00000080\0"
	.byte	0x1
	.uleb128 0x1b8a
	.ascii "HEAP_CREATE_ALIGN_16 0x00010000\0"
	.byte	0x1
	.uleb128 0x1b8b
	.ascii "HEAP_CREATE_ENABLE_TRACING 0x00020000\0"
	.byte	0x1
	.uleb128 0x1b8c
	.ascii "HEAP_CREATE_ENABLE_EXECUTE 0x00040000\0"
	.byte	0x1
	.uleb128 0x1b8d
	.ascii "HEAP_MAXIMUM_TAG 0x0FFF\0"
	.byte	0x1
	.uleb128 0x1b8e
	.ascii "HEAP_PSEUDO_TAG_FLAG 0x8000\0"
	.byte	0x1
	.uleb128 0x1b8f
	.ascii "HEAP_TAG_SHIFT 18\0"
	.byte	0x1
	.uleb128 0x1b92
	.ascii "HEAP_MAKE_TAG_FLAGS(b,o) ((DWORD)((b) + ((o) << 18)))\0"
	.byte	0x1
	.uleb128 0x1b95
	.ascii "IS_TEXT_UNICODE_ASCII16 0x0001\0"
	.byte	0x1
	.uleb128 0x1b96
	.ascii "IS_TEXT_UNICODE_REVERSE_ASCII16 0x0010\0"
	.byte	0x1
	.uleb128 0x1b98
	.ascii "IS_TEXT_UNICODE_STATISTICS 0x0002\0"
	.byte	0x1
	.uleb128 0x1b99
	.ascii "IS_TEXT_UNICODE_REVERSE_STATISTICS 0x0020\0"
	.byte	0x1
	.uleb128 0x1b9b
	.ascii "IS_TEXT_UNICODE_CONTROLS 0x0004\0"
	.byte	0x1
	.uleb128 0x1b9c
	.ascii "IS_TEXT_UNICODE_REVERSE_CONTROLS 0x0040\0"
	.byte	0x1
	.uleb128 0x1b9e
	.ascii "IS_TEXT_UNICODE_SIGNATURE 0x0008\0"
	.byte	0x1
	.uleb128 0x1b9f
	.ascii "IS_TEXT_UNICODE_REVERSE_SIGNATURE 0x0080\0"
	.byte	0x1
	.uleb128 0x1ba1
	.ascii "IS_TEXT_UNICODE_ILLEGAL_CHARS 0x0100\0"
	.byte	0x1
	.uleb128 0x1ba2
	.ascii "IS_TEXT_UNICODE_ODD_LENGTH 0x0200\0"
	.byte	0x1
	.uleb128 0x1ba3
	.ascii "IS_TEXT_UNICODE_DBCS_LEADBYTE 0x0400\0"
	.byte	0x1
	.uleb128 0x1ba4
	.ascii "IS_TEXT_UNICODE_NULL_BYTES 0x1000\0"
	.byte	0x1
	.uleb128 0x1ba6
	.ascii "IS_TEXT_UNICODE_UNICODE_MASK 0x000F\0"
	.byte	0x1
	.uleb128 0x1ba7
	.ascii "IS_TEXT_UNICODE_REVERSE_MASK 0x00F0\0"
	.byte	0x1
	.uleb128 0x1ba8
	.ascii "IS_TEXT_UNICODE_NOT_UNICODE_MASK 0x0F00\0"
	.byte	0x1
	.uleb128 0x1ba9
	.ascii "IS_TEXT_UNICODE_NOT_ASCII_MASK 0xF000\0"
	.byte	0x1
	.uleb128 0x1bab
	.ascii "COMPRESSION_FORMAT_NONE (0x0000)\0"
	.byte	0x1
	.uleb128 0x1bac
	.ascii "COMPRESSION_FORMAT_DEFAULT (0x0001)\0"
	.byte	0x1
	.uleb128 0x1bad
	.ascii "COMPRESSION_FORMAT_LZNT1 (0x0002)\0"
	.byte	0x1
	.uleb128 0x1bae
	.ascii "COMPRESSION_FORMAT_XPRESS (0x0003)\0"
	.byte	0x1
	.uleb128 0x1baf
	.ascii "COMPRESSION_FORMAT_XPRESS_HUFF (0x0004)\0"
	.byte	0x1
	.uleb128 0x1bb0
	.ascii "COMPRESSION_ENGINE_STANDARD (0x0000)\0"
	.byte	0x1
	.uleb128 0x1bb1
	.ascii "COMPRESSION_ENGINE_MAXIMUM (0x0100)\0"
	.byte	0x1
	.uleb128 0x1bb2
	.ascii "COMPRESSION_ENGINE_HIBER (0x0200)\0"
	.byte	0x1
	.uleb128 0x1bc1
	.ascii "RtlEqualMemory(Destination,Source,Length) (!memcmp((Destination),(Source),(Length)))\0"
	.byte	0x1
	.uleb128 0x1bc2
	.ascii "RtlMoveMemory(Destination,Source,Length) memmove((Destination),(Source),(Length))\0"
	.byte	0x1
	.uleb128 0x1bc3
	.ascii "RtlCopyMemory(Destination,Source,Length) memcpy((Destination),(Source),(Length))\0"
	.byte	0x1
	.uleb128 0x1bc4
	.ascii "RtlFillMemory(Destination,Length,Fill) memset((Destination),(Fill),(Length))\0"
	.byte	0x1
	.uleb128 0x1bc5
	.ascii "RtlZeroMemory(Destination,Length) memset((Destination),0,(Length))\0"
	.byte	0x1
	.uleb128 0x1bde
	.ascii "SEF_DACL_AUTO_INHERIT 0x01\0"
	.byte	0x1
	.uleb128 0x1bdf
	.ascii "SEF_SACL_AUTO_INHERIT 0x02\0"
	.byte	0x1
	.uleb128 0x1be0
	.ascii "SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT 0x04\0"
	.byte	0x1
	.uleb128 0x1be1
	.ascii "SEF_AVOID_PRIVILEGE_CHECK 0x08\0"
	.byte	0x1
	.uleb128 0x1be2
	.ascii "SEF_AVOID_OWNER_CHECK 0x10\0"
	.byte	0x1
	.uleb128 0x1be3
	.ascii "SEF_DEFAULT_OWNER_FROM_PARENT 0x20\0"
	.byte	0x1
	.uleb128 0x1be4
	.ascii "SEF_DEFAULT_GROUP_FROM_PARENT 0x40\0"
	.byte	0x1
	.uleb128 0x1be5
	.ascii "SEF_MACL_NO_WRITE_UP 0x100\0"
	.byte	0x1
	.uleb128 0x1be6
	.ascii "SEF_MACL_NO_READ_UP 0x200\0"
	.byte	0x1
	.uleb128 0x1be7
	.ascii "SEF_MACL_NO_EXECUTE_UP 0x400\0"
	.byte	0x1
	.uleb128 0x1be8
	.ascii "SEF_AVOID_OWNER_RESTRICTION 0x1000\0"
	.byte	0x1
	.uleb128 0x1bea
	.ascii "SEF_MACL_VALID_FLAGS (SEF_MACL_NO_WRITE_UP | SEF_MACL_NO_READ_UP | SEF_MACL_NO_EXECUTE_UP)\0"
	.byte	0x1
	.uleb128 0x1bec
	.ascii "MESSAGE_RESOURCE_UNICODE 0x0001\0"
	.byte	0x1
	.uleb128 0x1c2f
	.ascii "VER_EQUAL 1\0"
	.byte	0x1
	.uleb128 0x1c30
	.ascii "VER_GREATER 2\0"
	.byte	0x1
	.uleb128 0x1c31
	.ascii "VER_GREATER_EQUAL 3\0"
	.byte	0x1
	.uleb128 0x1c32
	.ascii "VER_LESS 4\0"
	.byte	0x1
	.uleb128 0x1c33
	.ascii "VER_LESS_EQUAL 5\0"
	.byte	0x1
	.uleb128 0x1c34
	.ascii "VER_AND 6\0"
	.byte	0x1
	.uleb128 0x1c35
	.ascii "VER_OR 7\0"
	.byte	0x1
	.uleb128 0x1c37
	.ascii "VER_CONDITION_MASK 7\0"
	.byte	0x1
	.uleb128 0x1c38
	.ascii "VER_NUM_BITS_PER_CONDITION_MASK 3\0"
	.byte	0x1
	.uleb128 0x1c3a
	.ascii "VER_MINORVERSION 0x0000001\0"
	.byte	0x1
	.uleb128 0x1c3b
	.ascii "VER_MAJORVERSION 0x0000002\0"
	.byte	0x1
	.uleb128 0x1c3c
	.ascii "VER_BUILDNUMBER 0x0000004\0"
	.byte	0x1
	.uleb128 0x1c3d
	.ascii "VER_PLATFORMID 0x0000008\0"
	.byte	0x1
	.uleb128 0x1c3e
	.ascii "VER_SERVICEPACKMINOR 0x0000010\0"
	.byte	0x1
	.uleb128 0x1c3f
	.ascii "VER_SERVICEPACKMAJOR 0x0000020\0"
	.byte	0x1
	.uleb128 0x1c40
	.ascii "VER_SUITENAME 0x0000040\0"
	.byte	0x1
	.uleb128 0x1c41
	.ascii "VER_PRODUCT_TYPE 0x0000080\0"
	.byte	0x1
	.uleb128 0x1c43
	.ascii "VER_NT_WORKSTATION 0x0000001\0"
	.byte	0x1
	.uleb128 0x1c44
	.ascii "VER_NT_DOMAIN_CONTROLLER 0x0000002\0"
	.byte	0x1
	.uleb128 0x1c45
	.ascii "VER_NT_SERVER 0x0000003\0"
	.byte	0x1
	.uleb128 0x1c47
	.ascii "VER_PLATFORM_WIN32s 0\0"
	.byte	0x1
	.uleb128 0x1c48
	.ascii "VER_PLATFORM_WIN32_WINDOWS 1\0"
	.byte	0x1
	.uleb128 0x1c49
	.ascii "VER_PLATFORM_WIN32_NT 2\0"
	.byte	0x1
	.uleb128 0x1c50
	.ascii "VER_SET_CONDITION(_m_,_t_,_c_) ((_m_) = VerSetConditionMask((_m_),(_t_),(_c_)))\0"
	.byte	0x1
	.uleb128 0x1c57
	.ascii "RTL_UMS_VERSION (0x0100)\0"
	.byte	0x1
	.uleb128 0x1c8b
	.ascii "RTL_CRITSECT_TYPE 0\0"
	.byte	0x1
	.uleb128 0x1c8c
	.ascii "RTL_RESOURCE_TYPE 1\0"
	.byte	0x1
	.uleb128 0x1c8e
	.ascii "RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 0x01000000\0"
	.byte	0x1
	.uleb128 0x1c8f
	.ascii "RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN 0x02000000\0"
	.byte	0x1
	.uleb128 0x1c90
	.ascii "RTL_CRITICAL_SECTION_FLAG_STATIC_INIT 0x04000000\0"
	.byte	0x1
	.uleb128 0x1c91
	.ascii "RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE 0x08000000\0"
	.byte	0x1
	.uleb128 0x1c92
	.ascii "RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO 0x10000000\0"
	.byte	0x1
	.uleb128 0x1c93
	.ascii "RTL_CRITICAL_SECTION_ALL_FLAG_BITS 0xff000000\0"
	.byte	0x1
	.uleb128 0x1c95
	.ascii "RTL_CRITICAL_SECTION_FLAG_RESERVED (RTL_CRITICAL_SECTION_ALL_FLAG_BITS & (~(RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO | RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN | RTL_CRITICAL_SECTION_FLAG_STATIC_INIT | RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE | RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO)))\0"
	.byte	0x1
	.uleb128 0x1c97
	.ascii "RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT 0x00000001\0"
	.byte	0x3
	.uleb128 0x1c99
	.uleb128 0x145
	.byte	0x4
	.byte	0x3
	.uleb128 0x1ca2
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x1ca7
	.ascii "RTL_SRWLOCK_INIT {0}\0"
	.byte	0x1
	.uleb128 0x1ca8
	.ascii "RTL_CONDITION_VARIABLE_INIT {0}\0"
	.byte	0x1
	.uleb128 0x1caa
	.ascii "RTL_CONDITION_VARIABLE_LOCKMODE_SHARED 0x1\0"
	.byte	0x1
	.uleb128 0x1cbb
	.ascii "WT_EXECUTEDEFAULT 0x00000000\0"
	.byte	0x1
	.uleb128 0x1cbc
	.ascii "WT_EXECUTEINIOTHREAD 0x00000001\0"
	.byte	0x1
	.uleb128 0x1cbd
	.ascii "WT_EXECUTEINUITHREAD 0x00000002\0"
	.byte	0x1
	.uleb128 0x1cbe
	.ascii "WT_EXECUTEINWAITTHREAD 0x00000004\0"
	.byte	0x1
	.uleb128 0x1cbf
	.ascii "WT_EXECUTEONLYONCE 0x00000008\0"
	.byte	0x1
	.uleb128 0x1cc0
	.ascii "WT_EXECUTEINTIMERTHREAD 0x00000020\0"
	.byte	0x1
	.uleb128 0x1cc1
	.ascii "WT_EXECUTELONGFUNCTION 0x00000010\0"
	.byte	0x1
	.uleb128 0x1cc2
	.ascii "WT_EXECUTEINPERSISTENTIOTHREAD 0x00000040\0"
	.byte	0x1
	.uleb128 0x1cc3
	.ascii "WT_EXECUTEINPERSISTENTTHREAD 0x00000080\0"
	.byte	0x1
	.uleb128 0x1cc4
	.ascii "WT_TRANSFER_IMPERSONATION 0x00000100\0"
	.byte	0x1
	.uleb128 0x1cc6
	.ascii "WT_SET_MAX_THREADPOOL_THREADS(Flags,Limit) ((Flags) |= (Limit) << 16)\0"
	.byte	0x1
	.uleb128 0x1cc8
	.ascii "WT_EXECUTEDELETEWAIT 0x00000008\0"
	.byte	0x1
	.uleb128 0x1cc9
	.ascii "WT_EXECUTEINLONGTHREAD 0x00000010\0"
	.byte	0x1
	.uleb128 0x1d1b
	.ascii "MAX_SUPPORTED_OS_NUM (4)\0"
	.byte	0x1
	.uleb128 0x1d3a
	.ascii "ACTIVATIONCONTEXTINFOCLASS ACTIVATION_CONTEXT_INFO_CLASS\0"
	.byte	0x1
	.uleb128 0x1d3c
	.ascii "ACTIVATION_CONTEXT_PATH_TYPE_NONE (1)\0"
	.byte	0x1
	.uleb128 0x1d3d
	.ascii "ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE (2)\0"
	.byte	0x1
	.uleb128 0x1d3e
	.ascii "ACTIVATION_CONTEXT_PATH_TYPE_URL (3)\0"
	.byte	0x1
	.uleb128 0x1d3f
	.ascii "ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF (4)\0"
	.byte	0x1
	.uleb128 0x1d41
	.ascii "_ASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION _ASSEMBLY_FILE_DETAILED_INFORMATION\0"
	.byte	0x1
	.uleb128 0x1d42
	.ascii "ASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION ASSEMBLY_FILE_DETAILED_INFORMATION\0"
	.byte	0x1
	.uleb128 0x1d43
	.ascii "PASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION PASSEMBLY_FILE_DETAILED_INFORMATION\0"
	.byte	0x1
	.uleb128 0x1d44
	.ascii "PCASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION PCASSEMBLY_FILE_DETAILED_INFORMATION\0"
	.byte	0x1
	.uleb128 0x1d45
	.ascii "INVALID_OS_COUNT (0xffff)\0"
	.byte	0x1
	.uleb128 0x1d47
	.ascii "CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID 0x1\0"
	.byte	0x1
	.uleb128 0x1d68
	.ascii "RTL_VRF_FLG_FULL_PAGE_HEAP 0x00000001\0"
	.byte	0x1
	.uleb128 0x1d69
	.ascii "RTL_VRF_FLG_RESERVED_DONOTUSE 0x00000002\0"
	.byte	0x1
	.uleb128 0x1d6a
	.ascii "RTL_VRF_FLG_HANDLE_CHECKS 0x00000004\0"
	.byte	0x1
	.uleb128 0x1d6b
	.ascii "RTL_VRF_FLG_STACK_CHECKS 0x00000008\0"
	.byte	0x1
	.uleb128 0x1d6c
	.ascii "RTL_VRF_FLG_APPCOMPAT_CHECKS 0x00000010\0"
	.byte	0x1
	.uleb128 0x1d6d
	.ascii "RTL_VRF_FLG_TLS_CHECKS 0x00000020\0"
	.byte	0x1
	.uleb128 0x1d6e
	.ascii "RTL_VRF_FLG_DIRTY_STACKS 0x00000040\0"
	.byte	0x1
	.uleb128 0x1d6f
	.ascii "RTL_VRF_FLG_RPC_CHECKS 0x00000080\0"
	.byte	0x1
	.uleb128 0x1d70
	.ascii "RTL_VRF_FLG_COM_CHECKS 0x00000100\0"
	.byte	0x1
	.uleb128 0x1d71
	.ascii "RTL_VRF_FLG_DANGEROUS_APIS 0x00000200\0"
	.byte	0x1
	.uleb128 0x1d72
	.ascii "RTL_VRF_FLG_RACE_CHECKS 0x00000400\0"
	.byte	0x1
	.uleb128 0x1d73
	.ascii "RTL_VRF_FLG_DEADLOCK_CHECKS 0x00000800\0"
	.byte	0x1
	.uleb128 0x1d74
	.ascii "RTL_VRF_FLG_FIRST_CHANCE_EXCEPTION_CHECKS 0x00001000\0"
	.byte	0x1
	.uleb128 0x1d75
	.ascii "RTL_VRF_FLG_VIRTUAL_MEM_CHECKS 0x00002000\0"
	.byte	0x1
	.uleb128 0x1d76
	.ascii "RTL_VRF_FLG_ENABLE_LOGGING 0x00004000\0"
	.byte	0x1
	.uleb128 0x1d77
	.ascii "RTL_VRF_FLG_FAST_FILL_HEAP 0x00008000\0"
	.byte	0x1
	.uleb128 0x1d78
	.ascii "RTL_VRF_FLG_VIRTUAL_SPACE_TRACKING 0x00010000\0"
	.byte	0x1
	.uleb128 0x1d79
	.ascii "RTL_VRF_FLG_ENABLED_SYSTEM_WIDE 0x00020000\0"
	.byte	0x1
	.uleb128 0x1d7a
	.ascii "RTL_VRF_FLG_MISCELLANEOUS_CHECKS 0x00020000\0"
	.byte	0x1
	.uleb128 0x1d7b
	.ascii "RTL_VRF_FLG_LOCK_CHECKS 0x00040000\0"
	.byte	0x1
	.uleb128 0x1d7d
	.ascii "APPLICATION_VERIFIER_INTERNAL_ERROR 0x80000000\0"
	.byte	0x1
	.uleb128 0x1d7e
	.ascii "APPLICATION_VERIFIER_INTERNAL_WARNING 0x40000000\0"
	.byte	0x1
	.uleb128 0x1d7f
	.ascii "APPLICATION_VERIFIER_NO_BREAK 0x20000000\0"
	.byte	0x1
	.uleb128 0x1d80
	.ascii "APPLICATION_VERIFIER_CONTINUABLE_BREAK 0x10000000\0"
	.byte	0x1
	.uleb128 0x1d82
	.ascii "APPLICATION_VERIFIER_UNKNOWN_ERROR 0x0001\0"
	.byte	0x1
	.uleb128 0x1d83
	.ascii "APPLICATION_VERIFIER_ACCESS_VIOLATION 0x0002\0"
	.byte	0x1
	.uleb128 0x1d84
	.ascii "APPLICATION_VERIFIER_UNSYNCHRONIZED_ACCESS 0x0003\0"
	.byte	0x1
	.uleb128 0x1d85
	.ascii "APPLICATION_VERIFIER_EXTREME_SIZE_REQUEST 0x0004\0"
	.byte	0x1
	.uleb128 0x1d86
	.ascii "APPLICATION_VERIFIER_BAD_HEAP_HANDLE 0x0005\0"
	.byte	0x1
	.uleb128 0x1d87
	.ascii "APPLICATION_VERIFIER_SWITCHED_HEAP_HANDLE 0x0006\0"
	.byte	0x1
	.uleb128 0x1d88
	.ascii "APPLICATION_VERIFIER_DOUBLE_FREE 0x0007\0"
	.byte	0x1
	.uleb128 0x1d89
	.ascii "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK 0x0008\0"
	.byte	0x1
	.uleb128 0x1d8a
	.ascii "APPLICATION_VERIFIER_DESTROY_PROCESS_HEAP 0x0009\0"
	.byte	0x1
	.uleb128 0x1d8b
	.ascii "APPLICATION_VERIFIER_UNEXPECTED_EXCEPTION 0x000A\0"
	.byte	0x1
	.uleb128 0x1d8c
	.ascii "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_EXCEPTION_RAISED_FOR_HEADER 0x000B\0"
	.byte	0x1
	.uleb128 0x1d8d
	.ascii "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_EXCEPTION_RAISED_FOR_PROBING 0x000C\0"
	.byte	0x1
	.uleb128 0x1d8e
	.ascii "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_HEADER 0x000D\0"
	.byte	0x1
	.uleb128 0x1d8f
	.ascii "APPLICATION_VERIFIER_CORRUPTED_FREED_HEAP_BLOCK 0x000E\0"
	.byte	0x1
	.uleb128 0x1d90
	.ascii "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_SUFFIX 0x000F\0"
	.byte	0x1
	.uleb128 0x1d91
	.ascii "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_START_STAMP 0x0010\0"
	.byte	0x1
	.uleb128 0x1d92
	.ascii "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_END_STAMP 0x0011\0"
	.byte	0x1
	.uleb128 0x1d93
	.ascii "APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_PREFIX 0x0012\0"
	.byte	0x1
	.uleb128 0x1d94
	.ascii "APPLICATION_VERIFIER_FIRST_CHANCE_ACCESS_VIOLATION 0x0013\0"
	.byte	0x1
	.uleb128 0x1d95
	.ascii "APPLICATION_VERIFIER_CORRUPTED_HEAP_LIST 0x0014\0"
	.byte	0x1
	.uleb128 0x1d97
	.ascii "APPLICATION_VERIFIER_TERMINATE_THREAD_CALL 0x0100\0"
	.byte	0x1
	.uleb128 0x1d98
	.ascii "APPLICATION_VERIFIER_STACK_OVERFLOW 0x0101\0"
	.byte	0x1
	.uleb128 0x1d99
	.ascii "APPLICATION_VERIFIER_INVALID_EXIT_PROCESS_CALL 0x0102\0"
	.byte	0x1
	.uleb128 0x1d9b
	.ascii "APPLICATION_VERIFIER_EXIT_THREAD_OWNS_LOCK 0x0200\0"
	.byte	0x1
	.uleb128 0x1d9c
	.ascii "APPLICATION_VERIFIER_LOCK_IN_UNLOADED_DLL 0x0201\0"
	.byte	0x1
	.uleb128 0x1d9d
	.ascii "APPLICATION_VERIFIER_LOCK_IN_FREED_HEAP 0x0202\0"
	.byte	0x1
	.uleb128 0x1d9e
	.ascii "APPLICATION_VERIFIER_LOCK_DOUBLE_INITIALIZE 0x0203\0"
	.byte	0x1
	.uleb128 0x1d9f
	.ascii "APPLICATION_VERIFIER_LOCK_IN_FREED_MEMORY 0x0204\0"
	.byte	0x1
	.uleb128 0x1da0
	.ascii "APPLICATION_VERIFIER_LOCK_CORRUPTED 0x0205\0"
	.byte	0x1
	.uleb128 0x1da1
	.ascii "APPLICATION_VERIFIER_LOCK_INVALID_OWNER 0x0206\0"
	.byte	0x1
	.uleb128 0x1da2
	.ascii "APPLICATION_VERIFIER_LOCK_INVALID_RECURSION_COUNT 0x0207\0"
	.byte	0x1
	.uleb128 0x1da3
	.ascii "APPLICATION_VERIFIER_LOCK_INVALID_LOCK_COUNT 0x0208\0"
	.byte	0x1
	.uleb128 0x1da4
	.ascii "APPLICATION_VERIFIER_LOCK_OVER_RELEASED 0x0209\0"
	.byte	0x1
	.uleb128 0x1da5
	.ascii "APPLICATION_VERIFIER_LOCK_NOT_INITIALIZED 0x0210\0"
	.byte	0x1
	.uleb128 0x1da6
	.ascii "APPLICATION_VERIFIER_LOCK_ALREADY_INITIALIZED 0x0211\0"
	.byte	0x1
	.uleb128 0x1da7
	.ascii "APPLICATION_VERIFIER_LOCK_IN_FREED_VMEM 0x0212\0"
	.byte	0x1
	.uleb128 0x1da8
	.ascii "APPLICATION_VERIFIER_LOCK_IN_UNMAPPED_MEM 0x0213\0"
	.byte	0x1
	.uleb128 0x1da9
	.ascii "APPLICATION_VERIFIER_THREAD_NOT_LOCK_OWNER 0x0214\0"
	.byte	0x1
	.uleb128 0x1dab
	.ascii "APPLICATION_VERIFIER_INVALID_HANDLE 0x0300\0"
	.byte	0x1
	.uleb128 0x1dac
	.ascii "APPLICATION_VERIFIER_INVALID_TLS_VALUE 0x0301\0"
	.byte	0x1
	.uleb128 0x1dad
	.ascii "APPLICATION_VERIFIER_INCORRECT_WAIT_CALL 0x0302\0"
	.byte	0x1
	.uleb128 0x1dae
	.ascii "APPLICATION_VERIFIER_NULL_HANDLE 0x0303\0"
	.byte	0x1
	.uleb128 0x1daf
	.ascii "APPLICATION_VERIFIER_WAIT_IN_DLLMAIN 0x0304\0"
	.byte	0x1
	.uleb128 0x1db1
	.ascii "APPLICATION_VERIFIER_COM_ERROR 0x0400\0"
	.byte	0x1
	.uleb128 0x1db2
	.ascii "APPLICATION_VERIFIER_COM_API_IN_DLLMAIN 0x0401\0"
	.byte	0x1
	.uleb128 0x1db3
	.ascii "APPLICATION_VERIFIER_COM_UNHANDLED_EXCEPTION 0x0402\0"
	.byte	0x1
	.uleb128 0x1db4
	.ascii "APPLICATION_VERIFIER_COM_UNBALANCED_COINIT 0x0403\0"
	.byte	0x1
	.uleb128 0x1db5
	.ascii "APPLICATION_VERIFIER_COM_UNBALANCED_OLEINIT 0x0404\0"
	.byte	0x1
	.uleb128 0x1db6
	.ascii "APPLICATION_VERIFIER_COM_UNBALANCED_SWC 0x0405\0"
	.byte	0x1
	.uleb128 0x1db7
	.ascii "APPLICATION_VERIFIER_COM_NULL_DACL 0x0406\0"
	.byte	0x1
	.uleb128 0x1db8
	.ascii "APPLICATION_VERIFIER_COM_UNSAFE_IMPERSONATION 0x0407\0"
	.byte	0x1
	.uleb128 0x1db9
	.ascii "APPLICATION_VERIFIER_COM_SMUGGLED_WRAPPER 0x0408\0"
	.byte	0x1
	.uleb128 0x1dba
	.ascii "APPLICATION_VERIFIER_COM_SMUGGLED_PROXY 0x0409\0"
	.byte	0x1
	.uleb128 0x1dbb
	.ascii "APPLICATION_VERIFIER_COM_CF_SUCCESS_WITH_NULL 0x040A\0"
	.byte	0x1
	.uleb128 0x1dbc
	.ascii "APPLICATION_VERIFIER_COM_GCO_SUCCESS_WITH_NULL 0x040B\0"
	.byte	0x1
	.uleb128 0x1dbd
	.ascii "APPLICATION_VERIFIER_COM_OBJECT_IN_FREED_MEMORY 0x040C\0"
	.byte	0x1
	.uleb128 0x1dbe
	.ascii "APPLICATION_VERIFIER_COM_OBJECT_IN_UNLOADED_DLL 0x040D\0"
	.byte	0x1
	.uleb128 0x1dbf
	.ascii "APPLICATION_VERIFIER_COM_VTBL_IN_FREED_MEMORY 0x040E\0"
	.byte	0x1
	.uleb128 0x1dc0
	.ascii "APPLICATION_VERIFIER_COM_VTBL_IN_UNLOADED_DLL 0x040F\0"
	.byte	0x1
	.uleb128 0x1dc1
	.ascii "APPLICATION_VERIFIER_COM_HOLDING_LOCKS_ON_CALL 0x0410\0"
	.byte	0x1
	.uleb128 0x1dc3
	.ascii "APPLICATION_VERIFIER_RPC_ERROR 0x0500\0"
	.byte	0x1
	.uleb128 0x1dc5
	.ascii "APPLICATION_VERIFIER_INVALID_FREEMEM 0x0600\0"
	.byte	0x1
	.uleb128 0x1dc6
	.ascii "APPLICATION_VERIFIER_INVALID_ALLOCMEM 0x0601\0"
	.byte	0x1
	.uleb128 0x1dc7
	.ascii "APPLICATION_VERIFIER_INVALID_MAPVIEW 0x0602\0"
	.byte	0x1
	.uleb128 0x1dc8
	.ascii "APPLICATION_VERIFIER_PROBE_INVALID_ADDRESS 0x0603\0"
	.byte	0x1
	.uleb128 0x1dc9
	.ascii "APPLICATION_VERIFIER_PROBE_FREE_MEM 0x0604\0"
	.byte	0x1
	.uleb128 0x1dca
	.ascii "APPLICATION_VERIFIER_PROBE_GUARD_PAGE 0x0605\0"
	.byte	0x1
	.uleb128 0x1dcb
	.ascii "APPLICATION_VERIFIER_PROBE_NULL 0x0606\0"
	.byte	0x1
	.uleb128 0x1dcc
	.ascii "APPLICATION_VERIFIER_PROBE_INVALID_START_OR_SIZE 0x0607\0"
	.byte	0x1
	.uleb128 0x1dcd
	.ascii "APPLICATION_VERIFIER_SIZE_HEAP_UNEXPECTED_EXCEPTION 0x0618\0"
	.byte	0x1
	.uleb128 0x1dcf
	.ascii "VERIFIER_STOP(Code,Msg,P1,S1,P2,S2,P3,S3,P4,S4) { RtlApplicationVerifierStop ((Code),(Msg),(ULONG_PTR)(P1),(S1),(ULONG_PTR)(P2),(S2),(ULONG_PTR)(P3),(S3),(ULONG_PTR)(P4),(S4)); }\0"
	.byte	0x1
	.uleb128 0x1de9
	.ascii "PERFORMANCE_DATA_VERSION 1\0"
	.byte	0x1
	.uleb128 0x1deb
	.ascii "READ_THREAD_PROFILING_FLAG_DISPATCHING 0x00000001\0"
	.byte	0x1
	.uleb128 0x1dec
	.ascii "READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS 0x00000002\0"
	.byte	0x1
	.uleb128 0x1dee
	.ascii "DLL_PROCESS_ATTACH 1\0"
	.byte	0x1
	.uleb128 0x1def
	.ascii "DLL_THREAD_ATTACH 2\0"
	.byte	0x1
	.uleb128 0x1df0
	.ascii "DLL_THREAD_DETACH 3\0"
	.byte	0x1
	.uleb128 0x1df1
	.ascii "DLL_PROCESS_DETACH 0\0"
	.byte	0x1
	.uleb128 0x1df2
	.ascii "DLL_PROCESS_VERIFIER 4\0"
	.byte	0x1
	.uleb128 0x1df4
	.ascii "EVENTLOG_SEQUENTIAL_READ 0x0001\0"
	.byte	0x1
	.uleb128 0x1df5
	.ascii "EVENTLOG_SEEK_READ 0x0002\0"
	.byte	0x1
	.uleb128 0x1df6
	.ascii "EVENTLOG_FORWARDS_READ 0x0004\0"
	.byte	0x1
	.uleb128 0x1df7
	.ascii "EVENTLOG_BACKWARDS_READ 0x0008\0"
	.byte	0x1
	.uleb128 0x1df9
	.ascii "EVENTLOG_SUCCESS 0x0000\0"
	.byte	0x1
	.uleb128 0x1dfa
	.ascii "EVENTLOG_ERROR_TYPE 0x0001\0"
	.byte	0x1
	.uleb128 0x1dfb
	.ascii "EVENTLOG_WARNING_TYPE 0x0002\0"
	.byte	0x1
	.uleb128 0x1dfc
	.ascii "EVENTLOG_INFORMATION_TYPE 0x0004\0"
	.byte	0x1
	.uleb128 0x1dfd
	.ascii "EVENTLOG_AUDIT_SUCCESS 0x0008\0"
	.byte	0x1
	.uleb128 0x1dfe
	.ascii "EVENTLOG_AUDIT_FAILURE 0x0010\0"
	.byte	0x1
	.uleb128 0x1e00
	.ascii "EVENTLOG_START_PAIRED_EVENT 0x0001\0"
	.byte	0x1
	.uleb128 0x1e01
	.ascii "EVENTLOG_END_PAIRED_EVENT 0x0002\0"
	.byte	0x1
	.uleb128 0x1e02
	.ascii "EVENTLOG_END_ALL_PAIRED_EVENTS 0x0004\0"
	.byte	0x1
	.uleb128 0x1e03
	.ascii "EVENTLOG_PAIRED_EVENT_ACTIVE 0x0008\0"
	.byte	0x1
	.uleb128 0x1e04
	.ascii "EVENTLOG_PAIRED_EVENT_INACTIVE 0x0010\0"
	.byte	0x1
	.uleb128 0x1e19
	.ascii "MAXLOGICALLOGNAMESIZE 256\0"
	.byte	0x1
	.uleb128 0x1e28
	.ascii "KEY_QUERY_VALUE (0x0001)\0"
	.byte	0x1
	.uleb128 0x1e29
	.ascii "KEY_SET_VALUE (0x0002)\0"
	.byte	0x1
	.uleb128 0x1e2a
	.ascii "KEY_CREATE_SUB_KEY (0x0004)\0"
	.byte	0x1
	.uleb128 0x1e2b
	.ascii "KEY_ENUMERATE_SUB_KEYS (0x0008)\0"
	.byte	0x1
	.uleb128 0x1e2c
	.ascii "KEY_NOTIFY (0x0010)\0"
	.byte	0x1
	.uleb128 0x1e2d
	.ascii "KEY_CREATE_LINK (0x0020)\0"
	.byte	0x1
	.uleb128 0x1e2e
	.ascii "KEY_WOW64_64KEY (0x0100)\0"
	.byte	0x1
	.uleb128 0x1e2f
	.ascii "KEY_WOW64_32KEY (0x0200)\0"
	.byte	0x1
	.uleb128 0x1e30
	.ascii "KEY_WOW64_RES (0x0300)\0"
	.byte	0x1
	.uleb128 0x1e32
	.ascii "KEY_READ ((STANDARD_RIGHTS_READ | KEY_QUERY_VALUE | KEY_ENUMERATE_SUB_KEYS | KEY_NOTIFY) & (~SYNCHRONIZE))\0"
	.byte	0x1
	.uleb128 0x1e33
	.ascii "KEY_WRITE ((STANDARD_RIGHTS_WRITE | KEY_SET_VALUE | KEY_CREATE_SUB_KEY) & (~SYNCHRONIZE))\0"
	.byte	0x1
	.uleb128 0x1e34
	.ascii "KEY_EXECUTE ((KEY_READ) & (~SYNCHRONIZE))\0"
	.byte	0x1
	.uleb128 0x1e35
	.ascii "KEY_ALL_ACCESS ((STANDARD_RIGHTS_ALL | KEY_QUERY_VALUE | KEY_SET_VALUE | KEY_CREATE_SUB_KEY | KEY_ENUMERATE_SUB_KEYS | KEY_NOTIFY | KEY_CREATE_LINK) & (~SYNCHRONIZE))\0"
	.byte	0x1
	.uleb128 0x1e36
	.ascii "REG_OPTION_RESERVED (__MSABI_LONG(0x00000000))\0"
	.byte	0x1
	.uleb128 0x1e38
	.ascii "REG_OPTION_NON_VOLATILE (__MSABI_LONG(0x00000000))\0"
	.byte	0x1
	.uleb128 0x1e39
	.ascii "REG_OPTION_VOLATILE (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0x1e3a
	.ascii "REG_OPTION_CREATE_LINK (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0x1e3b
	.ascii "REG_OPTION_BACKUP_RESTORE (__MSABI_LONG(0x00000004))\0"
	.byte	0x1
	.uleb128 0x1e3c
	.ascii "REG_OPTION_OPEN_LINK (__MSABI_LONG(0x00000008))\0"
	.byte	0x1
	.uleb128 0x1e3d
	.ascii "REG_LEGAL_OPTION (REG_OPTION_RESERVED | REG_OPTION_NON_VOLATILE | REG_OPTION_VOLATILE | REG_OPTION_CREATE_LINK | REG_OPTION_BACKUP_RESTORE | REG_OPTION_OPEN_LINK)\0"
	.byte	0x1
	.uleb128 0x1e3f
	.ascii "REG_CREATED_NEW_KEY (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0x1e40
	.ascii "REG_OPENED_EXISTING_KEY (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0x1e42
	.ascii "REG_STANDARD_FORMAT 1\0"
	.byte	0x1
	.uleb128 0x1e43
	.ascii "REG_LATEST_FORMAT 2\0"
	.byte	0x1
	.uleb128 0x1e44
	.ascii "REG_NO_COMPRESSION 4\0"
	.byte	0x1
	.uleb128 0x1e46
	.ascii "REG_WHOLE_HIVE_VOLATILE (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0x1e47
	.ascii "REG_REFRESH_HIVE (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0x1e48
	.ascii "REG_NO_LAZY_FLUSH (__MSABI_LONG(0x00000004))\0"
	.byte	0x1
	.uleb128 0x1e49
	.ascii "REG_FORCE_RESTORE (__MSABI_LONG(0x00000008))\0"
	.byte	0x1
	.uleb128 0x1e4a
	.ascii "REG_APP_HIVE (__MSABI_LONG(0x00000010))\0"
	.byte	0x1
	.uleb128 0x1e4b
	.ascii "REG_PROCESS_PRIVATE (__MSABI_LONG(0x00000020))\0"
	.byte	0x1
	.uleb128 0x1e4c
	.ascii "REG_START_JOURNAL (__MSABI_LONG(0x00000040))\0"
	.byte	0x1
	.uleb128 0x1e4d
	.ascii "REG_HIVE_EXACT_FILE_GROWTH (__MSABI_LONG(0x00000080))\0"
	.byte	0x1
	.uleb128 0x1e4e
	.ascii "REG_HIVE_NO_RM (__MSABI_LONG(0x00000100))\0"
	.byte	0x1
	.uleb128 0x1e4f
	.ascii "REG_HIVE_SINGLE_LOG (__MSABI_LONG(0x00000200))\0"
	.byte	0x1
	.uleb128 0x1e50
	.ascii "REG_BOOT_HIVE (__MSABI_LONG(0x00000400))\0"
	.byte	0x1
	.uleb128 0x1e52
	.ascii "REG_FORCE_UNLOAD 1\0"
	.byte	0x1
	.uleb128 0x1e54
	.ascii "REG_NOTIFY_CHANGE_NAME (__MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0x1e55
	.ascii "REG_NOTIFY_CHANGE_ATTRIBUTES (__MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0x1e56
	.ascii "REG_NOTIFY_CHANGE_LAST_SET (__MSABI_LONG(0x00000004))\0"
	.byte	0x1
	.uleb128 0x1e57
	.ascii "REG_NOTIFY_CHANGE_SECURITY (__MSABI_LONG(0x00000008))\0"
	.byte	0x1
	.uleb128 0x1e58
	.ascii "REG_NOTIFY_THREAD_AGNOSTIC (__MSABI_LONG(0x10000000))\0"
	.byte	0x1
	.uleb128 0x1e5a
	.ascii "REG_LEGAL_CHANGE_FILTER (REG_NOTIFY_CHANGE_NAME | REG_NOTIFY_CHANGE_ATTRIBUTES | REG_NOTIFY_CHANGE_LAST_SET | REG_NOTIFY_CHANGE_SECURITY | REG_NOTIFY_THREAD_AGNOSTIC)\0"
	.byte	0x1
	.uleb128 0x1e5c
	.ascii "REG_NONE (0)\0"
	.byte	0x1
	.uleb128 0x1e5d
	.ascii "REG_SZ (1)\0"
	.byte	0x1
	.uleb128 0x1e5e
	.ascii "REG_EXPAND_SZ (2)\0"
	.byte	0x1
	.uleb128 0x1e5f
	.ascii "REG_BINARY (3)\0"
	.byte	0x1
	.uleb128 0x1e60
	.ascii "REG_DWORD (4)\0"
	.byte	0x1
	.uleb128 0x1e61
	.ascii "REG_DWORD_LITTLE_ENDIAN (4)\0"
	.byte	0x1
	.uleb128 0x1e62
	.ascii "REG_DWORD_BIG_ENDIAN (5)\0"
	.byte	0x1
	.uleb128 0x1e63
	.ascii "REG_LINK (6)\0"
	.byte	0x1
	.uleb128 0x1e64
	.ascii "REG_MULTI_SZ (7)\0"
	.byte	0x1
	.uleb128 0x1e65
	.ascii "REG_RESOURCE_LIST (8)\0"
	.byte	0x1
	.uleb128 0x1e66
	.ascii "REG_FULL_RESOURCE_DESCRIPTOR (9)\0"
	.byte	0x1
	.uleb128 0x1e67
	.ascii "REG_RESOURCE_REQUIREMENTS_LIST (10)\0"
	.byte	0x1
	.uleb128 0x1e68
	.ascii "REG_QWORD (11)\0"
	.byte	0x1
	.uleb128 0x1e69
	.ascii "REG_QWORD_LITTLE_ENDIAN (11)\0"
	.byte	0x1
	.uleb128 0x1e6b
	.ascii "SERVICE_KERNEL_DRIVER 0x00000001\0"
	.byte	0x1
	.uleb128 0x1e6c
	.ascii "SERVICE_FILE_SYSTEM_DRIVER 0x00000002\0"
	.byte	0x1
	.uleb128 0x1e6d
	.ascii "SERVICE_ADAPTER 0x00000004\0"
	.byte	0x1
	.uleb128 0x1e6e
	.ascii "SERVICE_RECOGNIZER_DRIVER 0x00000008\0"
	.byte	0x1
	.uleb128 0x1e70
	.ascii "SERVICE_DRIVER (SERVICE_KERNEL_DRIVER | SERVICE_FILE_SYSTEM_DRIVER | SERVICE_RECOGNIZER_DRIVER)\0"
	.byte	0x1
	.uleb128 0x1e72
	.ascii "SERVICE_WIN32_OWN_PROCESS 0x00000010\0"
	.byte	0x1
	.uleb128 0x1e73
	.ascii "SERVICE_WIN32_SHARE_PROCESS 0x00000020\0"
	.byte	0x1
	.uleb128 0x1e74
	.ascii "SERVICE_WIN32 (SERVICE_WIN32_OWN_PROCESS | SERVICE_WIN32_SHARE_PROCESS)\0"
	.byte	0x1
	.uleb128 0x1e76
	.ascii "SERVICE_INTERACTIVE_PROCESS 0x00000100\0"
	.byte	0x1
	.uleb128 0x1e78
	.ascii "SERVICE_TYPE_ALL (SERVICE_WIN32 | SERVICE_ADAPTER | SERVICE_DRIVER | SERVICE_INTERACTIVE_PROCESS)\0"
	.byte	0x1
	.uleb128 0x1e7a
	.ascii "SERVICE_BOOT_START 0x00000000\0"
	.byte	0x1
	.uleb128 0x1e7b
	.ascii "SERVICE_SYSTEM_START 0x00000001\0"
	.byte	0x1
	.uleb128 0x1e7c
	.ascii "SERVICE_AUTO_START 0x00000002\0"
	.byte	0x1
	.uleb128 0x1e7d
	.ascii "SERVICE_DEMAND_START 0x00000003\0"
	.byte	0x1
	.uleb128 0x1e7e
	.ascii "SERVICE_DISABLED 0x00000004\0"
	.byte	0x1
	.uleb128 0x1e80
	.ascii "SERVICE_ERROR_IGNORE 0x00000000\0"
	.byte	0x1
	.uleb128 0x1e81
	.ascii "SERVICE_ERROR_NORMAL 0x00000001\0"
	.byte	0x1
	.uleb128 0x1e82
	.ascii "SERVICE_ERROR_SEVERE 0x00000002\0"
	.byte	0x1
	.uleb128 0x1e83
	.ascii "SERVICE_ERROR_CRITICAL 0x00000003\0"
	.byte	0x1
	.uleb128 0x1e93
	.ascii "CM_SERVICE_NETWORK_BOOT_LOAD 0x00000001\0"
	.byte	0x1
	.uleb128 0x1e94
	.ascii "CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD 0x00000002\0"
	.byte	0x1
	.uleb128 0x1e95
	.ascii "CM_SERVICE_USB_DISK_BOOT_LOAD 0x00000004\0"
	.byte	0x1
	.uleb128 0x1e96
	.ascii "CM_SERVICE_SD_DISK_BOOT_LOAD 0x00000008\0"
	.byte	0x1
	.uleb128 0x1e97
	.ascii "CM_SERVICE_USB3_DISK_BOOT_LOAD 0x00000010\0"
	.byte	0x1
	.uleb128 0x1e98
	.ascii "CM_SERVICE_MEASURED_BOOT_LOAD 0x00000020\0"
	.byte	0x1
	.uleb128 0x1e99
	.ascii "CM_SERVICE_VERIFIER_BOOT_LOAD 0x00000040\0"
	.byte	0x1
	.uleb128 0x1e9a
	.ascii "CM_SERVICE_WINPE_BOOT_LOAD 0x00000080\0"
	.byte	0x1
	.uleb128 0x1e9c
	.ascii "CM_SERVICE_VALID_PROMOTION_MASK (CM_SERVICE_NETWORK_BOOT_LOAD | CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD | CM_SERVICE_USB_DISK_BOOT_LOAD | CM_SERVICE_SD_DISK_BOOT_LOAD | CM_SERVICE_USB3_DISK_BOOT_LOAD | CM_SERVICE_MEASURED_BOOT_LOAD | CM_SERVICE_VERIFIER_BOOT_LOAD | CM_SERVICE_WINPE_BOOT_LOAD)\0"
	.byte	0x1
	.uleb128 0x1e9f
	.ascii "_NTDDTAPE_WINNT_ \0"
	.byte	0x1
	.uleb128 0x1ea1
	.ascii "TAPE_ERASE_SHORT __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0x1ea2
	.ascii "TAPE_ERASE_LONG __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x1ea9
	.ascii "TAPE_LOAD __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0x1eaa
	.ascii "TAPE_UNLOAD __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x1eab
	.ascii "TAPE_TENSION __MSABI_LONG(2)\0"
	.byte	0x1
	.uleb128 0x1eac
	.ascii "TAPE_LOCK __MSABI_LONG(3)\0"
	.byte	0x1
	.uleb128 0x1ead
	.ascii "TAPE_UNLOCK __MSABI_LONG(4)\0"
	.byte	0x1
	.uleb128 0x1eae
	.ascii "TAPE_FORMAT __MSABI_LONG(5)\0"
	.byte	0x1
	.uleb128 0x1eb5
	.ascii "TAPE_SETMARKS __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0x1eb6
	.ascii "TAPE_FILEMARKS __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x1eb7
	.ascii "TAPE_SHORT_FILEMARKS __MSABI_LONG(2)\0"
	.byte	0x1
	.uleb128 0x1eb8
	.ascii "TAPE_LONG_FILEMARKS __MSABI_LONG(3)\0"
	.byte	0x1
	.uleb128 0x1ec0
	.ascii "TAPE_ABSOLUTE_POSITION __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0x1ec1
	.ascii "TAPE_LOGICAL_POSITION __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x1ec2
	.ascii "TAPE_PSEUDO_LOGICAL_POSITION __MSABI_LONG(2)\0"
	.byte	0x1
	.uleb128 0x1eca
	.ascii "TAPE_REWIND __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0x1ecb
	.ascii "TAPE_ABSOLUTE_BLOCK __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x1ecc
	.ascii "TAPE_LOGICAL_BLOCK __MSABI_LONG(2)\0"
	.byte	0x1
	.uleb128 0x1ecd
	.ascii "TAPE_PSEUDO_LOGICAL_BLOCK __MSABI_LONG(3)\0"
	.byte	0x1
	.uleb128 0x1ece
	.ascii "TAPE_SPACE_END_OF_DATA __MSABI_LONG(4)\0"
	.byte	0x1
	.uleb128 0x1ecf
	.ascii "TAPE_SPACE_RELATIVE_BLOCKS __MSABI_LONG(5)\0"
	.byte	0x1
	.uleb128 0x1ed0
	.ascii "TAPE_SPACE_FILEMARKS __MSABI_LONG(6)\0"
	.byte	0x1
	.uleb128 0x1ed1
	.ascii "TAPE_SPACE_SEQUENTIAL_FMKS __MSABI_LONG(7)\0"
	.byte	0x1
	.uleb128 0x1ed2
	.ascii "TAPE_SPACE_SETMARKS __MSABI_LONG(8)\0"
	.byte	0x1
	.uleb128 0x1ed3
	.ascii "TAPE_SPACE_SEQUENTIAL_SMKS __MSABI_LONG(9)\0"
	.byte	0x1
	.uleb128 0x1edc
	.ascii "TAPE_DRIVE_FIXED 0x00000001\0"
	.byte	0x1
	.uleb128 0x1edd
	.ascii "TAPE_DRIVE_SELECT 0x00000002\0"
	.byte	0x1
	.uleb128 0x1ede
	.ascii "TAPE_DRIVE_INITIATOR 0x00000004\0"
	.byte	0x1
	.uleb128 0x1ee0
	.ascii "TAPE_DRIVE_ERASE_SHORT 0x00000010\0"
	.byte	0x1
	.uleb128 0x1ee1
	.ascii "TAPE_DRIVE_ERASE_LONG 0x00000020\0"
	.byte	0x1
	.uleb128 0x1ee2
	.ascii "TAPE_DRIVE_ERASE_BOP_ONLY 0x00000040\0"
	.byte	0x1
	.uleb128 0x1ee3
	.ascii "TAPE_DRIVE_ERASE_IMMEDIATE 0x00000080\0"
	.byte	0x1
	.uleb128 0x1ee4
	.ascii "TAPE_DRIVE_TAPE_CAPACITY 0x00000100\0"
	.byte	0x1
	.uleb128 0x1ee5
	.ascii "TAPE_DRIVE_TAPE_REMAINING 0x00000200\0"
	.byte	0x1
	.uleb128 0x1ee6
	.ascii "TAPE_DRIVE_FIXED_BLOCK 0x00000400\0"
	.byte	0x1
	.uleb128 0x1ee7
	.ascii "TAPE_DRIVE_VARIABLE_BLOCK 0x00000800\0"
	.byte	0x1
	.uleb128 0x1ee8
	.ascii "TAPE_DRIVE_WRITE_PROTECT 0x00001000\0"
	.byte	0x1
	.uleb128 0x1ee9
	.ascii "TAPE_DRIVE_EOT_WZ_SIZE 0x00002000\0"
	.byte	0x1
	.uleb128 0x1eea
	.ascii "TAPE_DRIVE_ECC 0x00010000\0"
	.byte	0x1
	.uleb128 0x1eeb
	.ascii "TAPE_DRIVE_COMPRESSION 0x00020000\0"
	.byte	0x1
	.uleb128 0x1eec
	.ascii "TAPE_DRIVE_PADDING 0x00040000\0"
	.byte	0x1
	.uleb128 0x1eed
	.ascii "TAPE_DRIVE_REPORT_SMKS 0x00080000\0"
	.byte	0x1
	.uleb128 0x1eee
	.ascii "TAPE_DRIVE_GET_ABSOLUTE_BLK 0x00100000\0"
	.byte	0x1
	.uleb128 0x1eef
	.ascii "TAPE_DRIVE_GET_LOGICAL_BLK 0x00200000\0"
	.byte	0x1
	.uleb128 0x1ef0
	.ascii "TAPE_DRIVE_SET_EOT_WZ_SIZE 0x00400000\0"
	.byte	0x1
	.uleb128 0x1ef1
	.ascii "TAPE_DRIVE_EJECT_MEDIA 0x01000000\0"
	.byte	0x1
	.uleb128 0x1ef2
	.ascii "TAPE_DRIVE_CLEAN_REQUESTS 0x02000000\0"
	.byte	0x1
	.uleb128 0x1ef3
	.ascii "TAPE_DRIVE_SET_CMP_BOP_ONLY 0x04000000\0"
	.byte	0x1
	.uleb128 0x1ef5
	.ascii "TAPE_DRIVE_RESERVED_BIT 0x80000000\0"
	.byte	0x1
	.uleb128 0x1ef7
	.ascii "TAPE_DRIVE_LOAD_UNLOAD 0x80000001\0"
	.byte	0x1
	.uleb128 0x1ef8
	.ascii "TAPE_DRIVE_TENSION 0x80000002\0"
	.byte	0x1
	.uleb128 0x1ef9
	.ascii "TAPE_DRIVE_LOCK_UNLOCK 0x80000004\0"
	.byte	0x1
	.uleb128 0x1efa
	.ascii "TAPE_DRIVE_REWIND_IMMEDIATE 0x80000008\0"
	.byte	0x1
	.uleb128 0x1efb
	.ascii "TAPE_DRIVE_SET_BLOCK_SIZE 0x80000010\0"
	.byte	0x1
	.uleb128 0x1efd
	.ascii "TAPE_DRIVE_LOAD_UNLD_IMMED 0x80000020\0"
	.byte	0x1
	.uleb128 0x1efe
	.ascii "TAPE_DRIVE_TENSION_IMMED 0x80000040\0"
	.byte	0x1
	.uleb128 0x1eff
	.ascii "TAPE_DRIVE_LOCK_UNLK_IMMED 0x80000080\0"
	.byte	0x1
	.uleb128 0x1f01
	.ascii "TAPE_DRIVE_SET_ECC 0x80000100\0"
	.byte	0x1
	.uleb128 0x1f02
	.ascii "TAPE_DRIVE_SET_COMPRESSION 0x80000200\0"
	.byte	0x1
	.uleb128 0x1f03
	.ascii "TAPE_DRIVE_SET_PADDING 0x80000400\0"
	.byte	0x1
	.uleb128 0x1f04
	.ascii "TAPE_DRIVE_SET_REPORT_SMKS 0x80000800\0"
	.byte	0x1
	.uleb128 0x1f06
	.ascii "TAPE_DRIVE_ABSOLUTE_BLK 0x80001000\0"
	.byte	0x1
	.uleb128 0x1f07
	.ascii "TAPE_DRIVE_ABS_BLK_IMMED 0x80002000\0"
	.byte	0x1
	.uleb128 0x1f08
	.ascii "TAPE_DRIVE_LOGICAL_BLK 0x80004000\0"
	.byte	0x1
	.uleb128 0x1f09
	.ascii "TAPE_DRIVE_LOG_BLK_IMMED 0x80008000\0"
	.byte	0x1
	.uleb128 0x1f0b
	.ascii "TAPE_DRIVE_END_OF_DATA 0x80010000\0"
	.byte	0x1
	.uleb128 0x1f0c
	.ascii "TAPE_DRIVE_RELATIVE_BLKS 0x80020000\0"
	.byte	0x1
	.uleb128 0x1f0d
	.ascii "TAPE_DRIVE_FILEMARKS 0x80040000\0"
	.byte	0x1
	.uleb128 0x1f0e
	.ascii "TAPE_DRIVE_SEQUENTIAL_FMKS 0x80080000\0"
	.byte	0x1
	.uleb128 0x1f10
	.ascii "TAPE_DRIVE_SETMARKS 0x80100000\0"
	.byte	0x1
	.uleb128 0x1f11
	.ascii "TAPE_DRIVE_SEQUENTIAL_SMKS 0x80200000\0"
	.byte	0x1
	.uleb128 0x1f12
	.ascii "TAPE_DRIVE_REVERSE_POSITION 0x80400000\0"
	.byte	0x1
	.uleb128 0x1f13
	.ascii "TAPE_DRIVE_SPACE_IMMEDIATE 0x80800000\0"
	.byte	0x1
	.uleb128 0x1f15
	.ascii "TAPE_DRIVE_WRITE_SETMARKS 0x81000000\0"
	.byte	0x1
	.uleb128 0x1f16
	.ascii "TAPE_DRIVE_WRITE_FILEMARKS 0x82000000\0"
	.byte	0x1
	.uleb128 0x1f17
	.ascii "TAPE_DRIVE_WRITE_SHORT_FMKS 0x84000000\0"
	.byte	0x1
	.uleb128 0x1f18
	.ascii "TAPE_DRIVE_WRITE_LONG_FMKS 0x88000000\0"
	.byte	0x1
	.uleb128 0x1f1a
	.ascii "TAPE_DRIVE_WRITE_MARK_IMMED 0x90000000\0"
	.byte	0x1
	.uleb128 0x1f1b
	.ascii "TAPE_DRIVE_FORMAT 0xA0000000\0"
	.byte	0x1
	.uleb128 0x1f1c
	.ascii "TAPE_DRIVE_FORMAT_IMMEDIATE 0xC0000000\0"
	.byte	0x1
	.uleb128 0x1f1d
	.ascii "TAPE_DRIVE_HIGH_FEATURES 0x80000000\0"
	.byte	0x1
	.uleb128 0x1f41
	.ascii "TAPE_FIXED_PARTITIONS __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0x1f42
	.ascii "TAPE_SELECT_PARTITIONS __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x1f43
	.ascii "TAPE_INITIATOR_PARTITIONS __MSABI_LONG(2)\0"
	.byte	0x1
	.uleb128 0x1f4b
	.ascii "TAPE_QUERY_DRIVE_PARAMETERS __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0x1f4c
	.ascii "TAPE_QUERY_MEDIA_CAPACITY __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x1f4d
	.ascii "TAPE_CHECK_FOR_DRIVE_PROBLEM __MSABI_LONG(2)\0"
	.byte	0x1
	.uleb128 0x1f4e
	.ascii "TAPE_QUERY_IO_ERROR_DATA __MSABI_LONG(3)\0"
	.byte	0x1
	.uleb128 0x1f4f
	.ascii "TAPE_QUERY_DEVICE_ERROR_DATA __MSABI_LONG(4)\0"
	.byte	0x1
	.uleb128 0x1fd9
	.ascii "_NTTMAPI_ \0"
	.file 326 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/ktmtypes.h"
	.byte	0x3
	.uleb128 0x1fdf
	.uleb128 0x146
	.byte	0x1
	.uleb128 0x7
	.ascii "_KTMTYPES_ \0"
	.byte	0x1
	.uleb128 0xf
	.ascii "TRANSACTION_MANAGER_VOLATILE 0x00000001\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "TRANSACTION_MANAGER_COMMIT_DEFAULT 0x00000000\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME 0x00000002\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES 0x00000004\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "TRANSACTION_MANAGER_COMMIT_LOWEST 0x00000008\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY 0x00000010\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS 0x00000020\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "TRANSACTION_MANAGER_MAXIMUM_OPTION 0x0000003f\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "TRANSACTION_DO_NOT_PROMOTE 0x00000001\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "TRANSACTION_MAXIMUM_OPTION 0x00000001\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "RESOURCE_MANAGER_VOLATILE 0x00000001\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "RESOURCE_MANAGER_COMMUNICATION 0x00000002\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "RESOURCE_MANAGER_MAXIMUM_OPTION 0x00000003\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY 0x00000001\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO 0x00000002\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "CRM_PROTOCOL_MAXIMUM_OPTION 0x00000003\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "ENLISTMENT_SUPERIOR 0x00000001\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "ENLISTMENT_MAXIMUM_OPTION 0x00000001\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "TRANSACTION_NOTIFY_MASK 0x3fffffff\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "TRANSACTION_NOTIFY_PREPREPARE 0x00000001\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "TRANSACTION_NOTIFY_PREPARE 0x00000002\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "TRANSACTION_NOTIFY_COMMIT 0x00000004\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "TRANSACTION_NOTIFY_ROLLBACK 0x00000008\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "TRANSACTION_NOTIFY_PREPREPARE_COMPLETE 0x00000010\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "TRANSACTION_NOTIFY_PREPARE_COMPLETE 0x00000020\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "TRANSACTION_NOTIFY_COMMIT_COMPLETE 0x00000040\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "TRANSACTION_NOTIFY_ROLLBACK_COMPLETE 0x00000080\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "TRANSACTION_NOTIFY_RECOVER 0x00000100\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT 0x00000200\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "TRANSACTION_NOTIFY_DELEGATE_COMMIT 0x00000400\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "TRANSACTION_NOTIFY_RECOVER_QUERY 0x00000800\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "TRANSACTION_NOTIFY_ENLIST_PREPREPARE 0x00001000\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "TRANSACTION_NOTIFY_LAST_RECOVER 0x00002000\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "TRANSACTION_NOTIFY_INDOUBT 0x00004000\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "TRANSACTION_NOTIFY_PROPAGATE_PULL 0x00008000\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "TRANSACTION_NOTIFY_PROPAGATE_PUSH 0x00010000\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "TRANSACTION_NOTIFY_MARSHAL 0x00020000\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "TRANSACTION_NOTIFY_ENLIST_MASK 0x00040000\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "TRANSACTION_NOTIFY_RM_DISCONNECTED 0x01000000\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "TRANSACTION_NOTIFY_TM_ONLINE 0x02000000\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "TRANSACTION_NOTIFY_COMMIT_REQUEST 0x04000000\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "TRANSACTION_NOTIFY_PROMOTE 0x08000000\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "TRANSACTION_NOTIFY_PROMOTE_NEW 0x10000000\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "TRANSACTION_NOTIFY_REQUEST_OUTCOME 0x20000000\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "TRANSACTION_NOTIFY_COMMIT_FINALIZE 0x40000000\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "TRANSACTIONMANAGER_OBJECT_PATH L\"\\\\TransactionManager\\\\\"\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "TRANSACTION_OBJECT_PATH L\"\\\\Transaction\\\\\"\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "ENLISTMENT_OBJECT_PATH L\"\\\\Enlistment\\\\\"\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "RESOURCE_MANAGER_OBJECT_PATH L\"\\\\ResourceManager\\\\\"\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "TRANSACTIONMANAGER_OBJECT_NAME_LENGTH_IN_BYTES (sizeof (TRANSACTIONMANAGER_OBJECT_PATH) + (38 * sizeof (WCHAR)))\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "TRANSACTION_OBJECT_NAME_LENGTH_IN_BYTES (sizeof (TRANSACTION_OBJECT_PATH) + (38 * sizeof (WCHAR)))\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "ENLISTMENT_OBJECT_NAME_LENGTH_IN_BYTES (sizeof (ENLISTMENT_OBJECT_PATH) + (38 * sizeof (WCHAR)))\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "RESOURCE_MANAGER_OBJECT_NAME_LENGTH_IN_BYTES (sizeof (RESOURCE_MANAGER_OBJECT_PATH) + (38 * sizeof (WCHAR)))\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED 0x1\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "KTM_MARSHAL_BLOB_VERSION_MAJOR 1\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "KTM_MARSHAL_BLOB_VERSION_MINOR 1\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "MAX_TRANSACTION_DESCRIPTION_LENGTH 64\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH 64\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x1fe1
	.ascii "TRANSACTIONMANAGER_QUERY_INFORMATION 0x00001\0"
	.byte	0x1
	.uleb128 0x1fe2
	.ascii "TRANSACTIONMANAGER_SET_INFORMATION 0x00002\0"
	.byte	0x1
	.uleb128 0x1fe3
	.ascii "TRANSACTIONMANAGER_RECOVER 0x00004\0"
	.byte	0x1
	.uleb128 0x1fe4
	.ascii "TRANSACTIONMANAGER_RENAME 0x00008\0"
	.byte	0x1
	.uleb128 0x1fe5
	.ascii "TRANSACTIONMANAGER_CREATE_RM 0x00010\0"
	.byte	0x1
	.uleb128 0x1fe6
	.ascii "TRANSACTIONMANAGER_BIND_TRANSACTION 0x00020\0"
	.byte	0x1
	.uleb128 0x1fe8
	.ascii "TRANSACTIONMANAGER_GENERIC_READ (STANDARD_RIGHTS_READ | TRANSACTIONMANAGER_QUERY_INFORMATION)\0"
	.byte	0x1
	.uleb128 0x1fe9
	.ascii "TRANSACTIONMANAGER_GENERIC_WRITE (STANDARD_RIGHTS_WRITE | TRANSACTIONMANAGER_SET_INFORMATION | TRANSACTIONMANAGER_RECOVER | TRANSACTIONMANAGER_RENAME | TRANSACTIONMANAGER_CREATE_RM)\0"
	.byte	0x1
	.uleb128 0x1fea
	.ascii "TRANSACTIONMANAGER_GENERIC_EXECUTE (STANDARD_RIGHTS_EXECUTE)\0"
	.byte	0x1
	.uleb128 0x1feb
	.ascii "TRANSACTIONMANAGER_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | TRANSACTIONMANAGER_GENERIC_READ | TRANSACTIONMANAGER_GENERIC_WRITE | TRANSACTIONMANAGER_GENERIC_EXECUTE | TRANSACTIONMANAGER_BIND_TRANSACTION)\0"
	.byte	0x1
	.uleb128 0x1fed
	.ascii "TRANSACTION_QUERY_INFORMATION (0x0001)\0"
	.byte	0x1
	.uleb128 0x1fee
	.ascii "TRANSACTION_SET_INFORMATION (0x0002)\0"
	.byte	0x1
	.uleb128 0x1fef
	.ascii "TRANSACTION_ENLIST (0x0004)\0"
	.byte	0x1
	.uleb128 0x1ff0
	.ascii "TRANSACTION_COMMIT (0x0008)\0"
	.byte	0x1
	.uleb128 0x1ff1
	.ascii "TRANSACTION_ROLLBACK (0x0010)\0"
	.byte	0x1
	.uleb128 0x1ff2
	.ascii "TRANSACTION_PROPAGATE (0x0020)\0"
	.byte	0x1
	.uleb128 0x1ff3
	.ascii "TRANSACTION_RIGHT_RESERVED1 (0x0040)\0"
	.byte	0x1
	.uleb128 0x1ff5
	.ascii "TRANSACTION_GENERIC_READ (STANDARD_RIGHTS_READ | TRANSACTION_QUERY_INFORMATION | SYNCHRONIZE)\0"
	.byte	0x1
	.uleb128 0x1ff6
	.ascii "TRANSACTION_GENERIC_WRITE (STANDARD_RIGHTS_WRITE | TRANSACTION_SET_INFORMATION | TRANSACTION_COMMIT | TRANSACTION_ENLIST | TRANSACTION_ROLLBACK | TRANSACTION_PROPAGATE | SYNCHRONIZE)\0"
	.byte	0x1
	.uleb128 0x1ff7
	.ascii "TRANSACTION_GENERIC_EXECUTE (STANDARD_RIGHTS_EXECUTE | TRANSACTION_COMMIT | TRANSACTION_ROLLBACK | SYNCHRONIZE)\0"
	.byte	0x1
	.uleb128 0x1ff8
	.ascii "TRANSACTION_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | TRANSACTION_GENERIC_READ | TRANSACTION_GENERIC_WRITE | TRANSACTION_GENERIC_EXECUTE)\0"
	.byte	0x1
	.uleb128 0x1ff9
	.ascii "TRANSACTION_RESOURCE_MANAGER_RIGHTS (TRANSACTION_GENERIC_READ | STANDARD_RIGHTS_WRITE | TRANSACTION_SET_INFORMATION | TRANSACTION_ENLIST | TRANSACTION_ROLLBACK | TRANSACTION_PROPAGATE | SYNCHRONIZE)\0"
	.byte	0x1
	.uleb128 0x1ffb
	.ascii "RESOURCEMANAGER_QUERY_INFORMATION (0x0001)\0"
	.byte	0x1
	.uleb128 0x1ffc
	.ascii "RESOURCEMANAGER_SET_INFORMATION (0x0002)\0"
	.byte	0x1
	.uleb128 0x1ffd
	.ascii "RESOURCEMANAGER_RECOVER (0x0004)\0"
	.byte	0x1
	.uleb128 0x1ffe
	.ascii "RESOURCEMANAGER_ENLIST (0x0008)\0"
	.byte	0x1
	.uleb128 0x1fff
	.ascii "RESOURCEMANAGER_GET_NOTIFICATION (0x0010)\0"
	.byte	0x1
	.uleb128 0x2000
	.ascii "RESOURCEMANAGER_REGISTER_PROTOCOL (0x0020)\0"
	.byte	0x1
	.uleb128 0x2001
	.ascii "RESOURCEMANAGER_COMPLETE_PROPAGATION (0x0040)\0"
	.byte	0x1
	.uleb128 0x2003
	.ascii "RESOURCEMANAGER_GENERIC_READ (STANDARD_RIGHTS_READ | RESOURCEMANAGER_QUERY_INFORMATION | SYNCHRONIZE)\0"
	.byte	0x1
	.uleb128 0x2004
	.ascii "RESOURCEMANAGER_GENERIC_WRITE (STANDARD_RIGHTS_WRITE | RESOURCEMANAGER_SET_INFORMATION | RESOURCEMANAGER_RECOVER | RESOURCEMANAGER_ENLIST | RESOURCEMANAGER_GET_NOTIFICATION | RESOURCEMANAGER_REGISTER_PROTOCOL | RESOURCEMANAGER_COMPLETE_PROPAGATION | SYNCHRONIZE)\0"
	.byte	0x1
	.uleb128 0x2005
	.ascii "RESOURCEMANAGER_GENERIC_EXECUTE (STANDARD_RIGHTS_EXECUTE | RESOURCEMANAGER_RECOVER | RESOURCEMANAGER_ENLIST | RESOURCEMANAGER_GET_NOTIFICATION | RESOURCEMANAGER_COMPLETE_PROPAGATION | SYNCHRONIZE)\0"
	.byte	0x1
	.uleb128 0x2006
	.ascii "RESOURCEMANAGER_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | RESOURCEMANAGER_GENERIC_READ | RESOURCEMANAGER_GENERIC_WRITE | RESOURCEMANAGER_GENERIC_EXECUTE)\0"
	.byte	0x1
	.uleb128 0x2008
	.ascii "ENLISTMENT_QUERY_INFORMATION 1\0"
	.byte	0x1
	.uleb128 0x2009
	.ascii "ENLISTMENT_SET_INFORMATION 2\0"
	.byte	0x1
	.uleb128 0x200a
	.ascii "ENLISTMENT_RECOVER 4\0"
	.byte	0x1
	.uleb128 0x200b
	.ascii "ENLISTMENT_SUBORDINATE_RIGHTS 8\0"
	.byte	0x1
	.uleb128 0x200c
	.ascii "ENLISTMENT_SUPERIOR_RIGHTS 0x10\0"
	.byte	0x1
	.uleb128 0x200e
	.ascii "ENLISTMENT_GENERIC_READ (STANDARD_RIGHTS_READ | ENLISTMENT_QUERY_INFORMATION)\0"
	.byte	0x1
	.uleb128 0x200f
	.ascii "ENLISTMENT_GENERIC_WRITE (STANDARD_RIGHTS_WRITE | ENLISTMENT_SET_INFORMATION | ENLISTMENT_RECOVER | ENLISTMENT_SUBORDINATE_RIGHTS | ENLISTMENT_SUPERIOR_RIGHTS)\0"
	.byte	0x1
	.uleb128 0x2010
	.ascii "ENLISTMENT_GENERIC_EXECUTE (STANDARD_RIGHTS_EXECUTE | ENLISTMENT_RECOVER | ENLISTMENT_SUBORDINATE_RIGHTS | ENLISTMENT_SUPERIOR_RIGHTS)\0"
	.byte	0x1
	.uleb128 0x2011
	.ascii "ENLISTMENT_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | ENLISTMENT_GENERIC_READ | ENLISTMENT_GENERIC_WRITE | ENLISTMENT_GENERIC_EXECUTE)\0"
	.byte	0x1
	.uleb128 0x20af
	.ascii "WOW64_CONTEXT_i386 0x00010000\0"
	.byte	0x1
	.uleb128 0x20b0
	.ascii "WOW64_CONTEXT_i486 0x00010000\0"
	.byte	0x1
	.uleb128 0x20b1
	.ascii "WOW64_CONTEXT_CONTROL (WOW64_CONTEXT_i386 | __MSABI_LONG(0x00000001))\0"
	.byte	0x1
	.uleb128 0x20b2
	.ascii "WOW64_CONTEXT_INTEGER (WOW64_CONTEXT_i386 | __MSABI_LONG(0x00000002))\0"
	.byte	0x1
	.uleb128 0x20b3
	.ascii "WOW64_CONTEXT_SEGMENTS (WOW64_CONTEXT_i386 | __MSABI_LONG(0x00000004))\0"
	.byte	0x1
	.uleb128 0x20b4
	.ascii "WOW64_CONTEXT_FLOATING_POINT (WOW64_CONTEXT_i386 | __MSABI_LONG(0x00000008))\0"
	.byte	0x1
	.uleb128 0x20b5
	.ascii "WOW64_CONTEXT_DEBUG_REGISTERS (WOW64_CONTEXT_i386 | __MSABI_LONG(0x00000010))\0"
	.byte	0x1
	.uleb128 0x20b6
	.ascii "WOW64_CONTEXT_EXTENDED_REGISTERS (WOW64_CONTEXT_i386 | __MSABI_LONG(0x00000020))\0"
	.byte	0x1
	.uleb128 0x20b7
	.ascii "WOW64_CONTEXT_FULL (WOW64_CONTEXT_CONTROL | WOW64_CONTEXT_INTEGER | WOW64_CONTEXT_SEGMENTS)\0"
	.byte	0x1
	.uleb128 0x20b8
	.ascii "WOW64_CONTEXT_ALL (WOW64_CONTEXT_CONTROL | WOW64_CONTEXT_INTEGER | WOW64_CONTEXT_SEGMENTS | WOW64_CONTEXT_FLOATING_POINT | WOW64_CONTEXT_DEBUG_REGISTERS | WOW64_CONTEXT_EXTENDED_REGISTERS)\0"
	.byte	0x1
	.uleb128 0x20ba
	.ascii "WOW64_CONTEXT_XSTATE (WOW64_CONTEXT_i386 | __MSABI_LONG(0x00000040))\0"
	.byte	0x1
	.uleb128 0x20bc
	.ascii "WOW64_CONTEXT_EXCEPTION_ACTIVE 0x08000000\0"
	.byte	0x1
	.uleb128 0x20bd
	.ascii "WOW64_CONTEXT_SERVICE_ACTIVE 0x10000000\0"
	.byte	0x1
	.uleb128 0x20be
	.ascii "WOW64_CONTEXT_EXCEPTION_REQUEST 0x40000000\0"
	.byte	0x1
	.uleb128 0x20bf
	.ascii "WOW64_CONTEXT_EXCEPTION_REPORTING 0x80000000\0"
	.byte	0x1
	.uleb128 0x20c1
	.ascii "WOW64_SIZE_OF_80387_REGISTERS 80\0"
	.byte	0x1
	.uleb128 0x20c2
	.ascii "WOW64_MAXIMUM_SUPPORTED_EXTENSION 512\0"
	.byte	0x3
	.uleb128 0x20d0
	.uleb128 0x142
	.byte	0x4
	.byte	0x3
	.uleb128 0x20ec
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x211b
	.ascii "ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION (1)\0"
	.byte	0x1
	.uleb128 0x211c
	.ascii "ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION (2)\0"
	.byte	0x1
	.uleb128 0x211d
	.ascii "ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION (3)\0"
	.byte	0x1
	.uleb128 0x211e
	.ascii "ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION (4)\0"
	.byte	0x1
	.uleb128 0x211f
	.ascii "ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION (5)\0"
	.byte	0x1
	.uleb128 0x2120
	.ascii "ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION (6)\0"
	.byte	0x1
	.uleb128 0x2121
	.ascii "ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION (7)\0"
	.byte	0x1
	.uleb128 0x2122
	.ascii "ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE (8)\0"
	.byte	0x1
	.uleb128 0x2123
	.ascii "ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES (9)\0"
	.byte	0x1
	.uleb128 0x2124
	.ascii "ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS (10)\0"
	.byte	0x1
	.uleb128 0x2125
	.ascii "ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO (11)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0xa5
	.ascii "MAKEWORD(a,b) ((WORD) (((BYTE) (((DWORD_PTR) (a)) & 0xff)) | ((WORD) ((BYTE) (((DWORD_PTR) (b)) & 0xff))) << 8))\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "MAKELONG(a,b) ((LONG) (((WORD) (((DWORD_PTR) (a)) & 0xffff)) | ((DWORD) ((WORD) (((DWORD_PTR) (b)) & 0xffff))) << 16))\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "LOWORD(l) ((WORD) (((DWORD_PTR) (l)) & 0xffff))\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "HIWORD(l) ((WORD) ((((DWORD_PTR) (l)) >> 16) & 0xffff))\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "LOBYTE(w) ((BYTE) (((DWORD_PTR) (w)) & 0xff))\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "HIBYTE(w) ((BYTE) ((((DWORD_PTR) (w)) >> 8) & 0xff))\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "_FILETIME_ \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x43
	.ascii "HFILE_ERROR ((HFILE)-1)\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "DM_UPDATE 1\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "DM_COPY 2\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "DM_PROMPT 4\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "DM_MODIFY 8\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "DM_IN_BUFFER DM_MODIFY\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "DM_IN_PROMPT DM_PROMPT\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "DM_OUT_BUFFER DM_COPY\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "DM_OUT_DEFAULT DM_UPDATE\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "DC_FIELDS 1\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "DC_PAPERS 2\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "DC_PAPERSIZE 3\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "DC_MINEXTENT 4\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "DC_MAXEXTENT 5\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "DC_BINS 6\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "DC_DUPLEX 7\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "DC_SIZE 8\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "DC_EXTRA 9\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "DC_VERSION 10\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "DC_DRIVER 11\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "DC_BINNAMES 12\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "DC_ENUMRESOLUTIONS 13\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "DC_FILEDEPENDENCIES 14\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "DC_TRUETYPE 15\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "DC_PAPERNAMES 16\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "DC_ORIENTATION 17\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "DC_COPIES 18\0"
	.byte	0x4
	.file 327 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winbase.h"
	.byte	0x3
	.uleb128 0x46
	.uleb128 0x147
	.byte	0x1
	.uleb128 0x6
	.ascii "_WINBASE_ \0"
	.file 328 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/apisetcconv.h"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x148
	.byte	0x1
	.uleb128 0x7
	.ascii "_APISETCCONV_ \0"
	.byte	0x1
	.uleb128 0xb
	.ascii "CMAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "CREDUIAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "WINABLEAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "WINADVAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "WINBASEAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "WINUSERAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "ZAWPROXYAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "WINCFGMGR32API DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "WINDEVQUERYAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "WINSWDEVICEAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "WINPATHCCHAPI WINBASEAPI\0"
	.byte	0x4
	.file 329 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/minwinbase.h"
	.byte	0x3
	.uleb128 0xd
	.uleb128 0x149
	.byte	0x1
	.uleb128 0x2
	.ascii "_MINWINBASE_ \0"
	.byte	0x1
	.uleb128 0x8
	.ascii "MoveMemory RtlMoveMemory\0"
	.byte	0x1
	.uleb128 0x9
	.ascii "CopyMemory RtlCopyMemory\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "FillMemory RtlFillMemory\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "ZeroMemory RtlZeroMemory\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "_SYSTEMTIME_ \0"
	.byte	0x1
	.uleb128 0x61
	.ascii "FIND_FIRST_EX_CASE_SENSITIVE 0x00000001\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "FIND_FIRST_EX_LARGE_FETCH 0x00000002\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "LOCKFILE_FAIL_IMMEDIATELY 0x1\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "LOCKFILE_EXCLUSIVE_LOCK 0x2\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "PROCESS_HEAP_REGION 0x1\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "PROCESS_HEAP_UNCOMMITTED_RANGE 0x2\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "PROCESS_HEAP_ENTRY_BUSY 0x4\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "PROCESS_HEAP_ENTRY_MOVEABLE 0x10\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "PROCESS_HEAP_ENTRY_DDESHARE 0x20\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "EXCEPTION_DEBUG_EVENT 1\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "CREATE_THREAD_DEBUG_EVENT 2\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "CREATE_PROCESS_DEBUG_EVENT 3\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "EXIT_THREAD_DEBUG_EVENT 4\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "EXIT_PROCESS_DEBUG_EVENT 5\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "LOAD_DLL_DEBUG_EVENT 6\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "UNLOAD_DLL_DEBUG_EVENT 7\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "OUTPUT_DEBUG_STRING_EVENT 8\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "RIP_EVENT 9\0"
	.byte	0x1
	.uleb128 0x11b
	.ascii "STILL_ACTIVE STATUS_PENDING\0"
	.byte	0x1
	.uleb128 0x11c
	.ascii "EXCEPTION_ACCESS_VIOLATION STATUS_ACCESS_VIOLATION\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "EXCEPTION_DATATYPE_MISALIGNMENT STATUS_DATATYPE_MISALIGNMENT\0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "EXCEPTION_BREAKPOINT STATUS_BREAKPOINT\0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "EXCEPTION_SINGLE_STEP STATUS_SINGLE_STEP\0"
	.byte	0x1
	.uleb128 0x120
	.ascii "EXCEPTION_ARRAY_BOUNDS_EXCEEDED STATUS_ARRAY_BOUNDS_EXCEEDED\0"
	.byte	0x1
	.uleb128 0x121
	.ascii "EXCEPTION_FLT_DENORMAL_OPERAND STATUS_FLOAT_DENORMAL_OPERAND\0"
	.byte	0x1
	.uleb128 0x122
	.ascii "EXCEPTION_FLT_DIVIDE_BY_ZERO STATUS_FLOAT_DIVIDE_BY_ZERO\0"
	.byte	0x1
	.uleb128 0x123
	.ascii "EXCEPTION_FLT_INEXACT_RESULT STATUS_FLOAT_INEXACT_RESULT\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "EXCEPTION_FLT_INVALID_OPERATION STATUS_FLOAT_INVALID_OPERATION\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "EXCEPTION_FLT_OVERFLOW STATUS_FLOAT_OVERFLOW\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "EXCEPTION_FLT_STACK_CHECK STATUS_FLOAT_STACK_CHECK\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "EXCEPTION_FLT_UNDERFLOW STATUS_FLOAT_UNDERFLOW\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "EXCEPTION_INT_DIVIDE_BY_ZERO STATUS_INTEGER_DIVIDE_BY_ZERO\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "EXCEPTION_INT_OVERFLOW STATUS_INTEGER_OVERFLOW\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "EXCEPTION_PRIV_INSTRUCTION STATUS_PRIVILEGED_INSTRUCTION\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "EXCEPTION_IN_PAGE_ERROR STATUS_IN_PAGE_ERROR\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "EXCEPTION_ILLEGAL_INSTRUCTION STATUS_ILLEGAL_INSTRUCTION\0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "EXCEPTION_NONCONTINUABLE_EXCEPTION STATUS_NONCONTINUABLE_EXCEPTION\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "EXCEPTION_STACK_OVERFLOW STATUS_STACK_OVERFLOW\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "EXCEPTION_INVALID_DISPOSITION STATUS_INVALID_DISPOSITION\0"
	.byte	0x1
	.uleb128 0x130
	.ascii "EXCEPTION_GUARD_PAGE STATUS_GUARD_PAGE_VIOLATION\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "EXCEPTION_INVALID_HANDLE STATUS_INVALID_HANDLE\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "EXCEPTION_POSSIBLE_DEADLOCK STATUS_POSSIBLE_DEADLOCK\0"
	.byte	0x1
	.uleb128 0x133
	.ascii "CONTROL_C_EXIT STATUS_CONTROL_C_EXIT\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "LMEM_FIXED 0x0\0"
	.byte	0x1
	.uleb128 0x136
	.ascii "LMEM_MOVEABLE 0x2\0"
	.byte	0x1
	.uleb128 0x137
	.ascii "LMEM_NOCOMPACT 0x10\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "LMEM_NODISCARD 0x20\0"
	.byte	0x1
	.uleb128 0x139
	.ascii "LMEM_ZEROINIT 0x40\0"
	.byte	0x1
	.uleb128 0x13a
	.ascii "LMEM_MODIFY 0x80\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "LMEM_DISCARDABLE 0xf00\0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "LMEM_VALID_FLAGS 0xf72\0"
	.byte	0x1
	.uleb128 0x13d
	.ascii "LMEM_INVALID_HANDLE 0x8000\0"
	.byte	0x1
	.uleb128 0x13f
	.ascii "LHND (LMEM_MOVEABLE | LMEM_ZEROINIT)\0"
	.byte	0x1
	.uleb128 0x140
	.ascii "LPTR (LMEM_FIXED | LMEM_ZEROINIT)\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "NONZEROLHND (LMEM_MOVEABLE)\0"
	.byte	0x1
	.uleb128 0x143
	.ascii "NONZEROLPTR (LMEM_FIXED)\0"
	.byte	0x1
	.uleb128 0x145
	.ascii "LocalDiscard(h) LocalReAlloc ((h), 0, LMEM_MOVEABLE)\0"
	.byte	0x1
	.uleb128 0x147
	.ascii "LMEM_DISCARDED 0x4000\0"
	.byte	0x1
	.uleb128 0x148
	.ascii "LMEM_LOCKCOUNT 0xff\0"
	.byte	0x4
	.file 330 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/bemapiset.h"
	.byte	0x3
	.uleb128 0xe
	.uleb128 0x14a
	.byte	0x1
	.uleb128 0x6
	.ascii "_BEM_H_ \0"
	.byte	0x4
	.file 331 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/debugapi.h"
	.byte	0x3
	.uleb128 0xf
	.uleb128 0x14b
	.byte	0x1
	.uleb128 0x6
	.ascii "_APISETDEBUG_ \0"
	.byte	0x1
	.uleb128 0x16
	.ascii "OutputDebugString __MINGW_NAME_AW(OutputDebugString)\0"
	.byte	0x4
	.file 332 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/errhandlingapi.h"
	.byte	0x3
	.uleb128 0x10
	.uleb128 0x14c
	.byte	0x1
	.uleb128 0x6
	.ascii "_ERRHANDLING_H_ \0"
	.byte	0x4
	.file 333 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/fibersapi.h"
	.byte	0x3
	.uleb128 0x11
	.uleb128 0x14d
	.byte	0x1
	.uleb128 0x6
	.ascii "_FIBERS_H_ \0"
	.byte	0x4
	.file 334 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/fileapi.h"
	.byte	0x3
	.uleb128 0x12
	.uleb128 0x14e
	.byte	0x1
	.uleb128 0x6
	.ascii "_APISETFILE_ \0"
	.byte	0x1
	.uleb128 0x12
	.ascii "CREATE_NEW 1\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "CREATE_ALWAYS 2\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "OPEN_EXISTING 3\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "OPEN_ALWAYS 4\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "TRUNCATE_EXISTING 5\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "INVALID_FILE_SIZE ((DWORD)0xffffffff)\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "INVALID_SET_FILE_POINTER ((DWORD)-1)\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "INVALID_FILE_ATTRIBUTES ((DWORD)-1)\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "CreateFile __MINGW_NAME_AW(CreateFile)\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "FindFirstChangeNotification __MINGW_NAME_AW(FindFirstChangeNotification)\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "FindFirstFile __MINGW_NAME_AW(FindFirstFile)\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "GetDiskFreeSpace __MINGW_NAME_AW(GetDiskFreeSpace)\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "GetDriveType __MINGW_NAME_AW(GetDriveType)\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "GetFileAttributes __MINGW_NAME_AW(GetFileAttributes)\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "GetFullPathName __MINGW_NAME_AW(GetFullPathName)\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "GetLongPathName __MINGW_NAME_AW(GetLongPathName)\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "CreateDirectory __MINGW_NAME_AW(CreateDirectory)\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "DeleteFile __MINGW_NAME_AW(DeleteFile)\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "FindFirstFileEx __MINGW_NAME_AW(FindFirstFileEx)\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "FindNextFile __MINGW_NAME_AW(FindNextFile)\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "GetDiskFreeSpaceEx __MINGW_NAME_AW(GetDiskFreeSpaceEx)\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "GetFileAttributesEx __MINGW_NAME_AW(GetFileAttributesEx)\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "RemoveDirectory __MINGW_NAME_AW(RemoveDirectory)\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "SetFileAttributes __MINGW_NAME_AW(SetFileAttributes)\0"
	.byte	0x4
	.file 335 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/handleapi.h"
	.byte	0x3
	.uleb128 0x13
	.uleb128 0x14f
	.byte	0x1
	.uleb128 0x6
	.ascii "_APISETHANDLE_ \0"
	.byte	0x1
	.uleb128 0x10
	.ascii "INVALID_HANDLE_VALUE ((HANDLE) (LONG_PTR)-1)\0"
	.byte	0x4
	.file 336 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/heapapi.h"
	.byte	0x3
	.uleb128 0x14
	.uleb128 0x150
	.byte	0x1
	.uleb128 0x6
	.ascii "_HEAPAPI_H_ \0"
	.byte	0x4
	.file 337 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/ioapiset.h"
	.byte	0x3
	.uleb128 0x15
	.uleb128 0x151
	.byte	0x1
	.uleb128 0x6
	.ascii "_IO_APISET_H_ \0"
	.byte	0x4
	.file 338 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/interlockedapi.h"
	.byte	0x3
	.uleb128 0x16
	.uleb128 0x152
	.byte	0x1
	.uleb128 0x6
	.ascii "_INTERLOCKAPI_H_ \0"
	.byte	0x4
	.file 339 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/jobapi.h"
	.byte	0x3
	.uleb128 0x17
	.uleb128 0x153
	.byte	0x1
	.uleb128 0x6
	.ascii "_JOBAPISET_H_ \0"
	.byte	0x4
	.file 340 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/libloaderapi.h"
	.byte	0x3
	.uleb128 0x18
	.uleb128 0x154
	.byte	0x1
	.uleb128 0x6
	.ascii "_APISETLIBLOADER_ \0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "FIND_RESOURCE_DIRECTORY_TYPES (0x0100)\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "FIND_RESOURCE_DIRECTORY_NAMES (0x0200)\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "FIND_RESOURCE_DIRECTORY_LANGUAGES (0x0400)\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "RESOURCE_ENUM_LN (0x0001)\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "RESOURCE_ENUM_MUI (0x0002)\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "RESOURCE_ENUM_MUI_SYSTEM (0x0004)\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "RESOURCE_ENUM_VALIDATE (0x0008)\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "RESOURCE_ENUM_MODULE_EXACT (0x0010)\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "SUPPORT_LANG_NUMBER 32\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "DONT_RESOLVE_DLL_REFERENCES 0x1\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "LOAD_LIBRARY_AS_DATAFILE 0x2\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "LOAD_WITH_ALTERED_SEARCH_PATH 0x8\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "LOAD_IGNORE_CODE_AUTHZ_LEVEL 0x10\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "LOAD_LIBRARY_AS_IMAGE_RESOURCE 0x20\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE 0x40\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "LOAD_LIBRARY_REQUIRE_SIGNED_TARGET 0x80\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR 0x100\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "LOAD_LIBRARY_SEARCH_APPLICATION_DIR 0x200\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "LOAD_LIBRARY_SEARCH_USER_DIRS 0x400\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "LOAD_LIBRARY_SEARCH_SYSTEM32 0x800\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "LOAD_LIBRARY_SEARCH_DEFAULT_DIRS 0x1000\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "GET_MODULE_HANDLE_EX_FLAG_PIN (0x1)\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT (0x2)\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS (0x4)\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "ENUMRESLANGPROC __MINGW_NAME_AW(ENUMRESLANGPROC)\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "ENUMRESNAMEPROC __MINGW_NAME_AW(ENUMRESNAMEPROC)\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "ENUMRESTYPEPROC __MINGW_NAME_AW(ENUMRESTYPEPROC)\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "PGET_MODULE_HANDLE_EX __MINGW_NAME_AW(PGET_MODULE_HANDLE_EX)\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "GetModuleHandleEx __MINGW_NAME_AW(GetModuleHandleEx)\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "LoadString __MINGW_NAME_AW(LoadString)\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "GetModuleFileName __MINGW_NAME_AW(GetModuleFileName)\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "GetModuleHandle __MINGW_NAME_AW(GetModuleHandle)\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "LoadLibraryEx __MINGW_NAME_AW(LoadLibraryEx)\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "EnumResourceLanguages __MINGW_NAME_AW(EnumResourceLanguages)\0"
	.byte	0x4
	.file 341 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/memoryapi.h"
	.byte	0x3
	.uleb128 0x19
	.uleb128 0x155
	.byte	0x1
	.uleb128 0x6
	.ascii "_MEMORYAPI_H_ \0"
	.byte	0x1
	.uleb128 0x20
	.ascii "FILE_MAP_WRITE SECTION_MAP_WRITE\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "FILE_MAP_READ SECTION_MAP_READ\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "FILE_MAP_ALL_ACCESS SECTION_ALL_ACCESS\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "FILE_MAP_COPY 0x1\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "FILE_MAP_RESERVE 0x80000000\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "FILE_MAP_EXECUTE SECTION_MAP_EXECUTE_EXPLICIT\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "FILE_CACHE_FLAGS_DEFINED \0"
	.byte	0x1
	.uleb128 0x31
	.ascii "FILE_CACHE_MAX_HARD_ENABLE 0x00000001\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "FILE_CACHE_MAX_HARD_DISABLE 0x00000002\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "FILE_CACHE_MIN_HARD_ENABLE 0x00000004\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "FILE_CACHE_MIN_HARD_DISABLE 0x00000008\0"
	.byte	0x4
	.file 342 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/namedpipeapi.h"
	.byte	0x3
	.uleb128 0x1a
	.uleb128 0x156
	.byte	0x1
	.uleb128 0x6
	.ascii "_NAMEDPIPE_H_ \0"
	.byte	0x4
	.file 343 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/namespaceapi.h"
	.byte	0x3
	.uleb128 0x1b
	.uleb128 0x157
	.byte	0x1
	.uleb128 0x6
	.ascii "_APISETNAMESPACE_ \0"
	.byte	0x1
	.uleb128 0x12
	.ascii "PRIVATE_NAMESPACE_FLAG_DESTROY 0x1\0"
	.byte	0x4
	.file 344 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/processenv.h"
	.byte	0x3
	.uleb128 0x1c
	.uleb128 0x158
	.byte	0x1
	.uleb128 0x7
	.ascii "_PROCESSENV_ \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "GetEnvironmentStringsA GetEnvironmentStrings\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "ExpandEnvironmentStrings __MINGW_NAME_AW(ExpandEnvironmentStrings)\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "FreeEnvironmentStrings __MINGW_NAME_AW(FreeEnvironmentStrings)\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "GetCommandLine __MINGW_NAME_AW(GetCommandLine)\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "GetCurrentDirectory __MINGW_NAME_AW(GetCurrentDirectory)\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "GetEnvironmentVariable __MINGW_NAME_AW(GetEnvironmentVariable)\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "NeedCurrentDirectoryForExePath __MINGW_NAME_AW(NeedCurrentDirectoryForExePath)\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "SearchPath __MINGW_NAME_AW(SearchPath)\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "SetCurrentDirectory __MINGW_NAME_AW(SetCurrentDirectory)\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "SetEnvironmentVariable __MINGW_NAME_AW(SetEnvironmentVariable)\0"
	.byte	0x4
	.file 345 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/processthreadsapi.h"
	.byte	0x3
	.uleb128 0x1d
	.uleb128 0x159
	.byte	0x1
	.uleb128 0x6
	.ascii "_PROCESSTHREADSAPI_H_ \0"
	.byte	0x1
	.uleb128 0x13
	.ascii "FLS_OUT_OF_INDEXES ((DWORD)0xffffffff)\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "TLS_OUT_OF_INDEXES ((DWORD)0xffffffff)\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "CreateProcess __MINGW_NAME_AW(CreateProcess)\0"
	.byte	0x4
	.file 346 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/processtopologyapi.h"
	.byte	0x3
	.uleb128 0x1e
	.uleb128 0x15a
	.byte	0x1
	.uleb128 0x6
	.ascii "_PROCESSTOPOLOGYAPI_H_ \0"
	.byte	0x4
	.file 347 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/profileapi.h"
	.byte	0x3
	.uleb128 0x1f
	.uleb128 0x15b
	.byte	0x1
	.uleb128 0x6
	.ascii "_PROFILEAPI_H_ \0"
	.byte	0x4
	.file 348 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/realtimeapiset.h"
	.byte	0x3
	.uleb128 0x20
	.uleb128 0x15c
	.byte	0x1
	.uleb128 0x6
	.ascii "_APISETREALTIME_ \0"
	.byte	0x4
	.file 349 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/securityappcontainer.h"
	.byte	0x3
	.uleb128 0x21
	.uleb128 0x15d
	.byte	0x1
	.uleb128 0x6
	.ascii "_APIAPPCONTAINER_ \0"
	.byte	0x4
	.file 350 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/securitybaseapi.h"
	.byte	0x3
	.uleb128 0x22
	.uleb128 0x15e
	.byte	0x1
	.uleb128 0x6
	.ascii "_APISECUREBASE_ \0"
	.byte	0x4
	.file 351 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/synchapi.h"
	.byte	0x3
	.uleb128 0x23
	.uleb128 0x15f
	.byte	0x1
	.uleb128 0x6
	.ascii "_SYNCHAPI_H_ \0"
	.byte	0x1
	.uleb128 0x11
	.ascii "SRWLOCK_INIT RTL_SRWLOCK_INIT\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "INIT_ONCE_STATIC_INIT RTL_RUN_ONCE_INIT\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "INIT_ONCE_CHECK_ONLY RTL_RUN_ONCE_CHECK_ONLY\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "INIT_ONCE_ASYNC RTL_RUN_ONCE_ASYNC\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "INIT_ONCE_INIT_FAILED RTL_RUN_ONCE_INIT_FAILED\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "INIT_ONCE_CTX_RESERVED_BITS RTL_RUN_ONCE_CTX_RESERVED_BITS\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "CONDITION_VARIABLE_INIT RTL_CONDITION_VARIABLE_INIT\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "CONDITION_VARIABLE_LOCKMODE_SHARED RTL_CONDITION_VARIABLE_LOCKMODE_SHARED\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "MUTEX_MODIFY_STATE MUTANT_QUERY_STATE\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "MUTEX_ALL_ACCESS MUTANT_ALL_ACCESS\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "OpenEvent __MINGW_NAME_AW(OpenEvent)\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "SYNCHRONIZATION_BARRIER_FLAGS_SPIN_ONLY 0x01\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "SYNCHRONIZATION_BARRIER_FLAGS_BLOCK_ONLY 0x02\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "SYNCHRONIZATION_BARRIER_FLAGS_NO_DELETE 0x04\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "CreateMutex __MINGW_NAME_AW(CreateMutex)\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "CreateEvent __MINGW_NAME_AW(CreateEvent)\0"
	.byte	0x4
	.file 352 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sysinfoapi.h"
	.byte	0x3
	.uleb128 0x24
	.uleb128 0x160
	.byte	0x1
	.uleb128 0x6
	.ascii "_SYSINFOAPI_H_ \0"
	.byte	0x1
	.uleb128 0x67
	.ascii "GetSystemDirectory __MINGW_NAME_AW(GetSystemDirectory)\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "GetWindowsDirectory __MINGW_NAME_AW(GetWindowsDirectory)\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "GetSystemWindowsDirectory __MINGW_NAME_AW(GetSystemWindowsDirectory)\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "GetComputerNameEx __MINGW_NAME_AW(GetComputerNameEx)\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "GetVersionEx __MINGW_NAME_AW(GetVersionEx)\0"
	.byte	0x4
	.file 353 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/systemtopologyapi.h"
	.byte	0x3
	.uleb128 0x25
	.uleb128 0x161
	.byte	0x1
	.uleb128 0x6
	.ascii "_SYSTEMTOPOLOGY_H_ \0"
	.byte	0x4
	.file 354 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/threadpoolapiset.h"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0x162
	.byte	0x1
	.uleb128 0x6
	.ascii "_THREADPOOLAPISET_H_ \0"
	.byte	0x4
	.file 355 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/threadpoollegacyapiset.h"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x163
	.byte	0x1
	.uleb128 0x6
	.ascii "_THREADPOOLLEGACYAPISET_H_ \0"
	.byte	0x4
	.file 356 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/utilapiset.h"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x164
	.byte	0x1
	.uleb128 0x6
	.ascii "_APISETUTIL_ \0"
	.byte	0x4
	.file 357 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/wow64apiset.h"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x165
	.byte	0x1
	.uleb128 0x6
	.ascii "_WOW64APISET_H_ \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x2c
	.ascii "__INTRINSIC_GROUP_WINBASE \0"
	.byte	0x3
	.uleb128 0x2d
	.uleb128 0x13f
	.byte	0x1
	.uleb128 0x15a
	.ascii "__INTRINSIC_PROLOG(name) (!defined(__INTRINSIC_DEFINED_ ## name)) && ((!defined (__INTRINSIC_ONLYSPECIAL)) || (defined (__INTRINSIC_ONLYSPECIAL) && defined(__INTRINSIC_SPECIAL_ ## name)))\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "__INTRINSICS_USEINLINE __MINGW_INTRIN_INLINE\0"
	.byte	0x2
	.uleb128 0x1c3
	.ascii "__INTRINSIC_GROUP_WINBASE\0"
	.byte	0x1
	.uleb128 0x1c6
	.ascii "__INTRINSIC_ONLYSPECIAL \0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "__INTRINSIC_SPECIAL__InterlockedIncrement \0"
	.byte	0x1
	.uleb128 0x1c9
	.ascii "__INTRINSIC_SPECIAL__InterlockedDecrement \0"
	.byte	0x1
	.uleb128 0x1ca
	.ascii "__INTRINSIC_SPECIAL__InterlockedExchange \0"
	.byte	0x1
	.uleb128 0x1cb
	.ascii "__INTRINSIC_SPECIAL__InterlockedExchangeAdd \0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "__INTRINSIC_SPECIAL__InterlockedCompareExchange \0"
	.byte	0x1
	.uleb128 0x1cd
	.ascii "__INTRINSIC_SPECIAL__InterlockedCompareExchangePointer \0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "__INTRINSIC_SPECIAL__InterlockedExchangePointer \0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "__INTRINSIC_SPECIAL__InterlockedAnd64 \0"
	.byte	0x1
	.uleb128 0x1d0
	.ascii "__INTRINSIC_SPECIAL__InterlockedOr64 \0"
	.byte	0x1
	.uleb128 0x1d1
	.ascii "__INTRINSIC_SPECIAL__InterlockedXor64 \0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "__INTRINSIC_SPECIAL__InterlockedIncrement64 \0"
	.byte	0x1
	.uleb128 0x1d3
	.ascii "__INTRINSIC_SPECIAL__InterlockedDecrement64 \0"
	.byte	0x1
	.uleb128 0x1d4
	.ascii "__INTRINSIC_SPECIAL__InterlockedExchange64 \0"
	.byte	0x1
	.uleb128 0x1d5
	.ascii "__INTRINSIC_SPECIAL__InterlockedExchangeAdd64 \0"
	.byte	0x1
	.uleb128 0x1d6
	.ascii "__INTRINSIC_SPECIAL__InterlockedCompareExchange64 \0"
	.byte	0x2
	.uleb128 0x53c
	.ascii "__INTRINSIC_ONLYSPECIAL\0"
	.byte	0x2
	.uleb128 0x53d
	.ascii "__INTRINSIC_PROLOG\0"
	.byte	0x2
	.uleb128 0x53e
	.ascii "__INTRINSIC_EPILOG\0"
	.byte	0x2
	.uleb128 0x53f
	.ascii "__INTRINSICS_USEINLINE\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x35
	.ascii "GetCurrentTime() GetTickCount ()\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "DefineHandleTable(w) ( { (VOID)(w); TRUE; } )\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "LimitEmsPages(dw) \0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "SetSwapAreaSize(w) (w)\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "LockSegment(w) GlobalFix((HANDLE)(w))\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "UnlockSegment(w) GlobalUnfix((HANDLE)(w))\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "Yield() \0"
	.byte	0x1
	.uleb128 0x41
	.ascii "FILE_BEGIN 0\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "FILE_CURRENT 1\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "FILE_END 2\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "WAIT_FAILED ((DWORD)0xffffffff)\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "WAIT_OBJECT_0 ((STATUS_WAIT_0) + 0)\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "WAIT_ABANDONED ((STATUS_ABANDONED_WAIT_0) + 0)\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "WAIT_ABANDONED_0 ((STATUS_ABANDONED_WAIT_0) + 0)\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "WAIT_IO_COMPLETION STATUS_USER_APC\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "SecureZeroMemory RtlSecureZeroMemory\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "CaptureStackBackTrace RtlCaptureStackBackTrace\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "FILE_FLAG_WRITE_THROUGH 0x80000000\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "FILE_FLAG_OVERLAPPED 0x40000000\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "FILE_FLAG_NO_BUFFERING 0x20000000\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "FILE_FLAG_RANDOM_ACCESS 0x10000000\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "FILE_FLAG_SEQUENTIAL_SCAN 0x8000000\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "FILE_FLAG_DELETE_ON_CLOSE 0x4000000\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "FILE_FLAG_BACKUP_SEMANTICS 0x2000000\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "FILE_FLAG_POSIX_SEMANTICS 0x1000000\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "FILE_FLAG_SESSION_AWARE 0x800000\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "FILE_FLAG_OPEN_REPARSE_POINT 0x200000\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "FILE_FLAG_OPEN_NO_RECALL 0x100000\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "FILE_FLAG_FIRST_PIPE_INSTANCE 0x80000\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "PROGRESS_CONTINUE 0\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "PROGRESS_CANCEL 1\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "PROGRESS_STOP 2\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "PROGRESS_QUIET 3\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "CALLBACK_CHUNK_FINISHED 0x0\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "CALLBACK_STREAM_SWITCH 0x1\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "COPY_FILE_FAIL_IF_EXISTS 0x1\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "COPY_FILE_RESTARTABLE 0x2\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "COPY_FILE_OPEN_SOURCE_FOR_WRITE 0x4\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "COPY_FILE_ALLOW_DECRYPTED_DESTINATION 0x8\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "REPLACEFILE_WRITE_THROUGH 0x1\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "REPLACEFILE_IGNORE_MERGE_ERRORS 0x2\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "PIPE_ACCESS_INBOUND 0x1\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "PIPE_ACCESS_OUTBOUND 0x2\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "PIPE_ACCESS_DUPLEX 0x3\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "PIPE_CLIENT_END 0x0\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "PIPE_SERVER_END 0x1\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "PIPE_WAIT 0x0\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "PIPE_NOWAIT 0x1\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "PIPE_READMODE_BYTE 0x0\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "PIPE_READMODE_MESSAGE 0x2\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "PIPE_TYPE_BYTE 0x0\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "PIPE_TYPE_MESSAGE 0x4\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "PIPE_ACCEPT_REMOTE_CLIENTS 0x0\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "PIPE_REJECT_REMOTE_CLIENTS 0x8\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "PIPE_UNLIMITED_INSTANCES 255\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "SECURITY_ANONYMOUS (SecurityAnonymous << 16)\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "SECURITY_IDENTIFICATION (SecurityIdentification << 16)\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "SECURITY_IMPERSONATION (SecurityImpersonation << 16)\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "SECURITY_DELEGATION (SecurityDelegation << 16)\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "SECURITY_CONTEXT_TRACKING 0x40000\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "SECURITY_EFFECTIVE_ONLY 0x80000\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "SECURITY_SQOS_PRESENT 0x100000\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "SECURITY_VALID_SQOS_FLAGS 0x1f0000\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "FAIL_FAST_GENERATE_EXCEPTION_ADDRESS 0x1\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "FAIL_FAST_NO_HARD_ERROR_DLG 0x2\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "SP_SERIALCOMM ((DWORD)0x1)\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "PST_UNSPECIFIED ((DWORD)0x0)\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "PST_RS232 ((DWORD)0x1)\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "PST_PARALLELPORT ((DWORD)0x2)\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "PST_RS422 ((DWORD)0x3)\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "PST_RS423 ((DWORD)0x4)\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "PST_RS449 ((DWORD)0x5)\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "PST_MODEM ((DWORD)0x6)\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "PST_FAX ((DWORD)0x21)\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "PST_SCANNER ((DWORD)0x22)\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "PST_NETWORK_BRIDGE ((DWORD)0x100)\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "PST_LAT ((DWORD)0x101)\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "PST_TCPIP_TELNET ((DWORD)0x102)\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "PST_X25 ((DWORD)0x103)\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "PCF_DTRDSR ((DWORD)0x1)\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "PCF_RTSCTS ((DWORD)0x2)\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "PCF_RLSD ((DWORD)0x4)\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "PCF_PARITY_CHECK ((DWORD)0x8)\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "PCF_XONXOFF ((DWORD)0x10)\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "PCF_SETXCHAR ((DWORD)0x20)\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "PCF_TOTALTIMEOUTS ((DWORD)0x40)\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "PCF_INTTIMEOUTS ((DWORD)0x80)\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "PCF_SPECIALCHARS ((DWORD)0x100)\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "PCF_16BITMODE ((DWORD)0x200)\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "SP_PARITY ((DWORD)0x1)\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "SP_BAUD ((DWORD)0x2)\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "SP_DATABITS ((DWORD)0x4)\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "SP_STOPBITS ((DWORD)0x8)\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "SP_HANDSHAKING ((DWORD)0x10)\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "SP_PARITY_CHECK ((DWORD)0x20)\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "SP_RLSD ((DWORD)0x40)\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "BAUD_075 ((DWORD)0x1)\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "BAUD_110 ((DWORD)0x2)\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "BAUD_134_5 ((DWORD)0x4)\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "BAUD_150 ((DWORD)0x8)\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "BAUD_300 ((DWORD)0x10)\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "BAUD_600 ((DWORD)0x20)\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "BAUD_1200 ((DWORD)0x40)\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "BAUD_1800 ((DWORD)0x80)\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "BAUD_2400 ((DWORD)0x100)\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "BAUD_4800 ((DWORD)0x200)\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "BAUD_7200 ((DWORD)0x400)\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "BAUD_9600 ((DWORD)0x800)\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "BAUD_14400 ((DWORD)0x1000)\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "BAUD_19200 ((DWORD)0x2000)\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "BAUD_38400 ((DWORD)0x4000)\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "BAUD_56K ((DWORD)0x8000)\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "BAUD_128K ((DWORD)0x10000)\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "BAUD_115200 ((DWORD)0x20000)\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "BAUD_57600 ((DWORD)0x40000)\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "BAUD_USER ((DWORD)0x10000000)\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "DATABITS_5 ((WORD)0x1)\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "DATABITS_6 ((WORD)0x2)\0"
	.byte	0x1
	.uleb128 0xde
	.ascii "DATABITS_7 ((WORD)0x4)\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "DATABITS_8 ((WORD)0x8)\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "DATABITS_16 ((WORD)0x10)\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "DATABITS_16X ((WORD)0x20)\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "STOPBITS_10 ((WORD)0x1)\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "STOPBITS_15 ((WORD)0x2)\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "STOPBITS_20 ((WORD)0x4)\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "PARITY_NONE ((WORD)0x100)\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "PARITY_ODD ((WORD)0x200)\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "PARITY_EVEN ((WORD)0x400)\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "PARITY_MARK ((WORD)0x800)\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "PARITY_SPACE ((WORD)0x1000)\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "COMMPROP_INITIALIZED ((DWORD)0xe73cf52e)\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "DTR_CONTROL_DISABLE 0x0\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "DTR_CONTROL_ENABLE 0x1\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "DTR_CONTROL_HANDSHAKE 0x2\0"
	.byte	0x1
	.uleb128 0x114
	.ascii "RTS_CONTROL_DISABLE 0x0\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "RTS_CONTROL_ENABLE 0x1\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "RTS_CONTROL_HANDSHAKE 0x2\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "RTS_CONTROL_TOGGLE 0x3\0"
	.byte	0x1
	.uleb128 0x14b
	.ascii "FreeModule(hLibModule) FreeLibrary((hLibModule))\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "MakeProcInstance(lpProc,hInstance) (lpProc)\0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "FreeProcInstance(lpProc) (lpProc)\0"
	.byte	0x1
	.uleb128 0x14f
	.ascii "GMEM_FIXED 0x0\0"
	.byte	0x1
	.uleb128 0x150
	.ascii "GMEM_MOVEABLE 0x2\0"
	.byte	0x1
	.uleb128 0x151
	.ascii "GMEM_NOCOMPACT 0x10\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "GMEM_NODISCARD 0x20\0"
	.byte	0x1
	.uleb128 0x153
	.ascii "GMEM_ZEROINIT 0x40\0"
	.byte	0x1
	.uleb128 0x154
	.ascii "GMEM_MODIFY 0x80\0"
	.byte	0x1
	.uleb128 0x155
	.ascii "GMEM_DISCARDABLE 0x100\0"
	.byte	0x1
	.uleb128 0x156
	.ascii "GMEM_NOT_BANKED 0x1000\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "GMEM_SHARE 0x2000\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "GMEM_DDESHARE 0x2000\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "GMEM_NOTIFY 0x4000\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "GMEM_LOWER GMEM_NOT_BANKED\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "GMEM_VALID_FLAGS 0x7f72\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "GMEM_INVALID_HANDLE 0x8000\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "GHND (GMEM_MOVEABLE | GMEM_ZEROINIT)\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "GPTR (GMEM_FIXED | GMEM_ZEROINIT)\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "GlobalLRUNewest(h) ((HANDLE)(h))\0"
	.byte	0x1
	.uleb128 0x162
	.ascii "GlobalLRUOldest(h) ((HANDLE)(h))\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "GlobalDiscard(h) GlobalReAlloc ((h), 0, GMEM_MOVEABLE)\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "GMEM_DISCARDED 0x4000\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "GMEM_LOCKCOUNT 0x00ff\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "NUMA_NO_PREFERRED_NODE ((DWORD) -1)\0"
	.byte	0x1
	.uleb128 0x175
	.ascii "DEBUG_PROCESS 0x1\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "DEBUG_ONLY_THIS_PROCESS 0x2\0"
	.byte	0x1
	.uleb128 0x177
	.ascii "CREATE_SUSPENDED 0x4\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "DETACHED_PROCESS 0x8\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "CREATE_NEW_CONSOLE 0x10\0"
	.byte	0x1
	.uleb128 0x17a
	.ascii "NORMAL_PRIORITY_CLASS 0x20\0"
	.byte	0x1
	.uleb128 0x17b
	.ascii "IDLE_PRIORITY_CLASS 0x40\0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "HIGH_PRIORITY_CLASS 0x80\0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "REALTIME_PRIORITY_CLASS 0x100\0"
	.byte	0x1
	.uleb128 0x17e
	.ascii "CREATE_NEW_PROCESS_GROUP 0x200\0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "CREATE_UNICODE_ENVIRONMENT 0x400\0"
	.byte	0x1
	.uleb128 0x180
	.ascii "CREATE_SEPARATE_WOW_VDM 0x800\0"
	.byte	0x1
	.uleb128 0x181
	.ascii "CREATE_SHARED_WOW_VDM 0x1000\0"
	.byte	0x1
	.uleb128 0x182
	.ascii "CREATE_FORCEDOS 0x2000\0"
	.byte	0x1
	.uleb128 0x183
	.ascii "BELOW_NORMAL_PRIORITY_CLASS 0x4000\0"
	.byte	0x1
	.uleb128 0x184
	.ascii "ABOVE_NORMAL_PRIORITY_CLASS 0x8000\0"
	.byte	0x1
	.uleb128 0x185
	.ascii "INHERIT_PARENT_AFFINITY 0x10000\0"
	.byte	0x1
	.uleb128 0x186
	.ascii "INHERIT_CALLER_PRIORITY 0x20000\0"
	.byte	0x1
	.uleb128 0x187
	.ascii "CREATE_PROTECTED_PROCESS 0x40000\0"
	.byte	0x1
	.uleb128 0x188
	.ascii "EXTENDED_STARTUPINFO_PRESENT 0x80000\0"
	.byte	0x1
	.uleb128 0x189
	.ascii "PROCESS_MODE_BACKGROUND_BEGIN 0x100000\0"
	.byte	0x1
	.uleb128 0x18a
	.ascii "PROCESS_MODE_BACKGROUND_END 0x200000\0"
	.byte	0x1
	.uleb128 0x18b
	.ascii "CREATE_BREAKAWAY_FROM_JOB 0x1000000\0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "CREATE_PRESERVE_CODE_AUTHZ_LEVEL 0x2000000\0"
	.byte	0x1
	.uleb128 0x18d
	.ascii "CREATE_DEFAULT_ERROR_MODE 0x4000000\0"
	.byte	0x1
	.uleb128 0x18e
	.ascii "CREATE_NO_WINDOW 0x8000000\0"
	.byte	0x1
	.uleb128 0x18f
	.ascii "PROFILE_USER 0x10000000\0"
	.byte	0x1
	.uleb128 0x190
	.ascii "PROFILE_KERNEL 0x20000000\0"
	.byte	0x1
	.uleb128 0x191
	.ascii "PROFILE_SERVER 0x40000000\0"
	.byte	0x1
	.uleb128 0x192
	.ascii "CREATE_IGNORE_SYSTEM_DEFAULT 0x80000000\0"
	.byte	0x1
	.uleb128 0x194
	.ascii "STACK_SIZE_PARAM_IS_A_RESERVATION 0x10000\0"
	.byte	0x1
	.uleb128 0x196
	.ascii "THREAD_PRIORITY_LOWEST THREAD_BASE_PRIORITY_MIN\0"
	.byte	0x1
	.uleb128 0x197
	.ascii "THREAD_PRIORITY_BELOW_NORMAL (THREAD_PRIORITY_LOWEST+1)\0"
	.byte	0x1
	.uleb128 0x198
	.ascii "THREAD_PRIORITY_NORMAL 0\0"
	.byte	0x1
	.uleb128 0x199
	.ascii "THREAD_PRIORITY_HIGHEST THREAD_BASE_PRIORITY_MAX\0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "THREAD_PRIORITY_ABOVE_NORMAL (THREAD_PRIORITY_HIGHEST-1)\0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "THREAD_PRIORITY_ERROR_RETURN (MAXLONG)\0"
	.byte	0x1
	.uleb128 0x19d
	.ascii "THREAD_PRIORITY_TIME_CRITICAL THREAD_BASE_PRIORITY_LOWRT\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "THREAD_PRIORITY_IDLE THREAD_BASE_PRIORITY_IDLE\0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "THREAD_MODE_BACKGROUND_BEGIN 0x00010000\0"
	.byte	0x1
	.uleb128 0x1a1
	.ascii "THREAD_MODE_BACKGROUND_END 0x00020000\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "VOLUME_NAME_DOS 0x0\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "VOLUME_NAME_GUID 0x1\0"
	.byte	0x1
	.uleb128 0x1a5
	.ascii "VOLUME_NAME_NT 0x2\0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "VOLUME_NAME_NONE 0x4\0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "FILE_NAME_NORMALIZED 0x0\0"
	.byte	0x1
	.uleb128 0x1a9
	.ascii "FILE_NAME_OPENED 0x8\0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "DRIVE_UNKNOWN 0\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "DRIVE_NO_ROOT_DIR 1\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "DRIVE_REMOVABLE 2\0"
	.byte	0x1
	.uleb128 0x1c0
	.ascii "DRIVE_FIXED 3\0"
	.byte	0x1
	.uleb128 0x1c1
	.ascii "DRIVE_REMOTE 4\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "DRIVE_CDROM 5\0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "DRIVE_RAMDISK 6\0"
	.byte	0x1
	.uleb128 0x1c5
	.ascii "GetFreeSpace(w) (__MSABI_LONG(0x100000))\0"
	.byte	0x1
	.uleb128 0x1c7
	.ascii "FILE_TYPE_UNKNOWN 0x0\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "FILE_TYPE_DISK 0x1\0"
	.byte	0x1
	.uleb128 0x1c9
	.ascii "FILE_TYPE_CHAR 0x2\0"
	.byte	0x1
	.uleb128 0x1ca
	.ascii "FILE_TYPE_PIPE 0x3\0"
	.byte	0x1
	.uleb128 0x1cb
	.ascii "FILE_TYPE_REMOTE 0x8000\0"
	.byte	0x1
	.uleb128 0x1cd
	.ascii "STD_INPUT_HANDLE ((DWORD)-10)\0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "STD_OUTPUT_HANDLE ((DWORD)-11)\0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "STD_ERROR_HANDLE ((DWORD)-12)\0"
	.byte	0x1
	.uleb128 0x1d1
	.ascii "NOPARITY 0\0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "ODDPARITY 1\0"
	.byte	0x1
	.uleb128 0x1d3
	.ascii "EVENPARITY 2\0"
	.byte	0x1
	.uleb128 0x1d4
	.ascii "MARKPARITY 3\0"
	.byte	0x1
	.uleb128 0x1d5
	.ascii "SPACEPARITY 4\0"
	.byte	0x1
	.uleb128 0x1d7
	.ascii "ONESTOPBIT 0\0"
	.byte	0x1
	.uleb128 0x1d8
	.ascii "ONE5STOPBITS 1\0"
	.byte	0x1
	.uleb128 0x1d9
	.ascii "TWOSTOPBITS 2\0"
	.byte	0x1
	.uleb128 0x1db
	.ascii "IGNORE 0\0"
	.byte	0x1
	.uleb128 0x1dc
	.ascii "INFINITE 0xffffffff\0"
	.byte	0x1
	.uleb128 0x1de
	.ascii "CBR_110 110\0"
	.byte	0x1
	.uleb128 0x1df
	.ascii "CBR_300 300\0"
	.byte	0x1
	.uleb128 0x1e0
	.ascii "CBR_600 600\0"
	.byte	0x1
	.uleb128 0x1e1
	.ascii "CBR_1200 1200\0"
	.byte	0x1
	.uleb128 0x1e2
	.ascii "CBR_2400 2400\0"
	.byte	0x1
	.uleb128 0x1e3
	.ascii "CBR_4800 4800\0"
	.byte	0x1
	.uleb128 0x1e4
	.ascii "CBR_9600 9600\0"
	.byte	0x1
	.uleb128 0x1e5
	.ascii "CBR_14400 14400\0"
	.byte	0x1
	.uleb128 0x1e6
	.ascii "CBR_19200 19200\0"
	.byte	0x1
	.uleb128 0x1e7
	.ascii "CBR_38400 38400\0"
	.byte	0x1
	.uleb128 0x1e8
	.ascii "CBR_56000 56000\0"
	.byte	0x1
	.uleb128 0x1e9
	.ascii "CBR_57600 57600\0"
	.byte	0x1
	.uleb128 0x1ea
	.ascii "CBR_115200 115200\0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "CBR_128000 128000\0"
	.byte	0x1
	.uleb128 0x1ec
	.ascii "CBR_256000 256000\0"
	.byte	0x1
	.uleb128 0x1ee
	.ascii "CE_RXOVER 0x1\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "CE_OVERRUN 0x2\0"
	.byte	0x1
	.uleb128 0x1f0
	.ascii "CE_RXPARITY 0x4\0"
	.byte	0x1
	.uleb128 0x1f1
	.ascii "CE_FRAME 0x8\0"
	.byte	0x1
	.uleb128 0x1f2
	.ascii "CE_BREAK 0x10\0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "CE_TXFULL 0x100\0"
	.byte	0x1
	.uleb128 0x1f4
	.ascii "CE_PTO 0x200\0"
	.byte	0x1
	.uleb128 0x1f5
	.ascii "CE_IOE 0x400\0"
	.byte	0x1
	.uleb128 0x1f6
	.ascii "CE_DNS 0x800\0"
	.byte	0x1
	.uleb128 0x1f7
	.ascii "CE_OOP 0x1000\0"
	.byte	0x1
	.uleb128 0x1f8
	.ascii "CE_MODE 0x8000\0"
	.byte	0x1
	.uleb128 0x1fa
	.ascii "IE_BADID (-1)\0"
	.byte	0x1
	.uleb128 0x1fb
	.ascii "IE_OPEN (-2)\0"
	.byte	0x1
	.uleb128 0x1fc
	.ascii "IE_NOPEN (-3)\0"
	.byte	0x1
	.uleb128 0x1fd
	.ascii "IE_MEMORY (-4)\0"
	.byte	0x1
	.uleb128 0x1fe
	.ascii "IE_DEFAULT (-5)\0"
	.byte	0x1
	.uleb128 0x1ff
	.ascii "IE_HARDWARE (-10)\0"
	.byte	0x1
	.uleb128 0x200
	.ascii "IE_BYTESIZE (-11)\0"
	.byte	0x1
	.uleb128 0x201
	.ascii "IE_BAUDRATE (-12)\0"
	.byte	0x1
	.uleb128 0x203
	.ascii "EV_RXCHAR 0x1\0"
	.byte	0x1
	.uleb128 0x204
	.ascii "EV_RXFLAG 0x2\0"
	.byte	0x1
	.uleb128 0x205
	.ascii "EV_TXEMPTY 0x4\0"
	.byte	0x1
	.uleb128 0x206
	.ascii "EV_CTS 0x8\0"
	.byte	0x1
	.uleb128 0x207
	.ascii "EV_DSR 0x10\0"
	.byte	0x1
	.uleb128 0x208
	.ascii "EV_RLSD 0x20\0"
	.byte	0x1
	.uleb128 0x209
	.ascii "EV_BREAK 0x40\0"
	.byte	0x1
	.uleb128 0x20a
	.ascii "EV_ERR 0x80\0"
	.byte	0x1
	.uleb128 0x20b
	.ascii "EV_RING 0x100\0"
	.byte	0x1
	.uleb128 0x20c
	.ascii "EV_PERR 0x200\0"
	.byte	0x1
	.uleb128 0x20d
	.ascii "EV_RX80FULL 0x400\0"
	.byte	0x1
	.uleb128 0x20e
	.ascii "EV_EVENT1 0x800\0"
	.byte	0x1
	.uleb128 0x20f
	.ascii "EV_EVENT2 0x1000\0"
	.byte	0x1
	.uleb128 0x211
	.ascii "SETXOFF 1\0"
	.byte	0x1
	.uleb128 0x212
	.ascii "SETXON 2\0"
	.byte	0x1
	.uleb128 0x213
	.ascii "SETRTS 3\0"
	.byte	0x1
	.uleb128 0x214
	.ascii "CLRRTS 4\0"
	.byte	0x1
	.uleb128 0x215
	.ascii "SETDTR 5\0"
	.byte	0x1
	.uleb128 0x216
	.ascii "CLRDTR 6\0"
	.byte	0x1
	.uleb128 0x217
	.ascii "RESETDEV 7\0"
	.byte	0x1
	.uleb128 0x218
	.ascii "SETBREAK 8\0"
	.byte	0x1
	.uleb128 0x219
	.ascii "CLRBREAK 9\0"
	.byte	0x1
	.uleb128 0x21b
	.ascii "PURGE_TXABORT 0x1\0"
	.byte	0x1
	.uleb128 0x21c
	.ascii "PURGE_RXABORT 0x2\0"
	.byte	0x1
	.uleb128 0x21d
	.ascii "PURGE_TXCLEAR 0x4\0"
	.byte	0x1
	.uleb128 0x21e
	.ascii "PURGE_RXCLEAR 0x8\0"
	.byte	0x1
	.uleb128 0x220
	.ascii "LPTx 0x80\0"
	.byte	0x1
	.uleb128 0x222
	.ascii "MS_CTS_ON ((DWORD)0x10)\0"
	.byte	0x1
	.uleb128 0x223
	.ascii "MS_DSR_ON ((DWORD)0x20)\0"
	.byte	0x1
	.uleb128 0x224
	.ascii "MS_RING_ON ((DWORD)0x40)\0"
	.byte	0x1
	.uleb128 0x225
	.ascii "MS_RLSD_ON ((DWORD)0x80)\0"
	.byte	0x1
	.uleb128 0x227
	.ascii "S_QUEUEEMPTY 0\0"
	.byte	0x1
	.uleb128 0x228
	.ascii "S_THRESHOLD 1\0"
	.byte	0x1
	.uleb128 0x229
	.ascii "S_ALLTHRESHOLD 2\0"
	.byte	0x1
	.uleb128 0x22b
	.ascii "S_NORMAL 0\0"
	.byte	0x1
	.uleb128 0x22c
	.ascii "S_LEGATO 1\0"
	.byte	0x1
	.uleb128 0x22d
	.ascii "S_STACCATO 2\0"
	.byte	0x1
	.uleb128 0x22f
	.ascii "S_PERIOD512 0\0"
	.byte	0x1
	.uleb128 0x230
	.ascii "S_PERIOD1024 1\0"
	.byte	0x1
	.uleb128 0x231
	.ascii "S_PERIOD2048 2\0"
	.byte	0x1
	.uleb128 0x232
	.ascii "S_PERIODVOICE 3\0"
	.byte	0x1
	.uleb128 0x233
	.ascii "S_WHITE512 4\0"
	.byte	0x1
	.uleb128 0x234
	.ascii "S_WHITE1024 5\0"
	.byte	0x1
	.uleb128 0x235
	.ascii "S_WHITE2048 6\0"
	.byte	0x1
	.uleb128 0x236
	.ascii "S_WHITEVOICE 7\0"
	.byte	0x1
	.uleb128 0x238
	.ascii "S_SERDVNA (-1)\0"
	.byte	0x1
	.uleb128 0x239
	.ascii "S_SEROFM (-2)\0"
	.byte	0x1
	.uleb128 0x23a
	.ascii "S_SERMACT (-3)\0"
	.byte	0x1
	.uleb128 0x23b
	.ascii "S_SERQFUL (-4)\0"
	.byte	0x1
	.uleb128 0x23c
	.ascii "S_SERBDNT (-5)\0"
	.byte	0x1
	.uleb128 0x23d
	.ascii "S_SERDLN (-6)\0"
	.byte	0x1
	.uleb128 0x23e
	.ascii "S_SERDCC (-7)\0"
	.byte	0x1
	.uleb128 0x23f
	.ascii "S_SERDTP (-8)\0"
	.byte	0x1
	.uleb128 0x240
	.ascii "S_SERDVL (-9)\0"
	.byte	0x1
	.uleb128 0x241
	.ascii "S_SERDMD (-10)\0"
	.byte	0x1
	.uleb128 0x242
	.ascii "S_SERDSH (-11)\0"
	.byte	0x1
	.uleb128 0x243
	.ascii "S_SERDPT (-12)\0"
	.byte	0x1
	.uleb128 0x244
	.ascii "S_SERDFQ (-13)\0"
	.byte	0x1
	.uleb128 0x245
	.ascii "S_SERDDR (-14)\0"
	.byte	0x1
	.uleb128 0x246
	.ascii "S_SERDSR (-15)\0"
	.byte	0x1
	.uleb128 0x247
	.ascii "S_SERDST (-16)\0"
	.byte	0x1
	.uleb128 0x249
	.ascii "NMPWAIT_WAIT_FOREVER 0xffffffff\0"
	.byte	0x1
	.uleb128 0x24a
	.ascii "NMPWAIT_NOWAIT 0x1\0"
	.byte	0x1
	.uleb128 0x24b
	.ascii "NMPWAIT_USE_DEFAULT_WAIT 0x0\0"
	.byte	0x1
	.uleb128 0x24d
	.ascii "FS_CASE_IS_PRESERVED FILE_CASE_PRESERVED_NAMES\0"
	.byte	0x1
	.uleb128 0x24e
	.ascii "FS_CASE_SENSITIVE FILE_CASE_SENSITIVE_SEARCH\0"
	.byte	0x1
	.uleb128 0x24f
	.ascii "FS_UNICODE_STORED_ON_DISK FILE_UNICODE_ON_DISK\0"
	.byte	0x1
	.uleb128 0x250
	.ascii "FS_PERSISTENT_ACLS FILE_PERSISTENT_ACLS\0"
	.byte	0x1
	.uleb128 0x251
	.ascii "FS_VOL_IS_COMPRESSED FILE_VOLUME_IS_COMPRESSED\0"
	.byte	0x1
	.uleb128 0x252
	.ascii "FS_FILE_COMPRESSION FILE_FILE_COMPRESSION\0"
	.byte	0x1
	.uleb128 0x253
	.ascii "FS_FILE_ENCRYPTION FILE_SUPPORTS_ENCRYPTION\0"
	.byte	0x1
	.uleb128 0x255
	.ascii "OF_READ 0x0\0"
	.byte	0x1
	.uleb128 0x256
	.ascii "OF_WRITE 0x1\0"
	.byte	0x1
	.uleb128 0x257
	.ascii "OF_READWRITE 0x2\0"
	.byte	0x1
	.uleb128 0x258
	.ascii "OF_SHARE_COMPAT 0x0\0"
	.byte	0x1
	.uleb128 0x259
	.ascii "OF_SHARE_EXCLUSIVE 0x10\0"
	.byte	0x1
	.uleb128 0x25a
	.ascii "OF_SHARE_DENY_WRITE 0x20\0"
	.byte	0x1
	.uleb128 0x25b
	.ascii "OF_SHARE_DENY_READ 0x30\0"
	.byte	0x1
	.uleb128 0x25c
	.ascii "OF_SHARE_DENY_NONE 0x40\0"
	.byte	0x1
	.uleb128 0x25d
	.ascii "OF_PARSE 0x100\0"
	.byte	0x1
	.uleb128 0x25e
	.ascii "OF_DELETE 0x200\0"
	.byte	0x1
	.uleb128 0x25f
	.ascii "OF_VERIFY 0x400\0"
	.byte	0x1
	.uleb128 0x260
	.ascii "OF_CANCEL 0x800\0"
	.byte	0x1
	.uleb128 0x261
	.ascii "OF_CREATE 0x1000\0"
	.byte	0x1
	.uleb128 0x262
	.ascii "OF_PROMPT 0x2000\0"
	.byte	0x1
	.uleb128 0x263
	.ascii "OF_EXIST 0x4000\0"
	.byte	0x1
	.uleb128 0x264
	.ascii "OF_REOPEN 0x8000\0"
	.byte	0x1
	.uleb128 0x266
	.ascii "OFS_MAXPATHNAME 128\0"
	.byte	0x1
	.uleb128 0x367
	.ascii "InterlockedIncrement _InterlockedIncrement\0"
	.byte	0x1
	.uleb128 0x368
	.ascii "InterlockedIncrementAcquire InterlockedIncrement\0"
	.byte	0x1
	.uleb128 0x369
	.ascii "InterlockedIncrementRelease InterlockedIncrement\0"
	.byte	0x1
	.uleb128 0x36a
	.ascii "InterlockedDecrement _InterlockedDecrement\0"
	.byte	0x1
	.uleb128 0x36b
	.ascii "InterlockedDecrementAcquire InterlockedDecrement\0"
	.byte	0x1
	.uleb128 0x36c
	.ascii "InterlockedDecrementRelease InterlockedDecrement\0"
	.byte	0x1
	.uleb128 0x36d
	.ascii "InterlockedExchange _InterlockedExchange\0"
	.byte	0x1
	.uleb128 0x36e
	.ascii "InterlockedExchangeAdd _InterlockedExchangeAdd\0"
	.byte	0x1
	.uleb128 0x36f
	.ascii "InterlockedCompareExchange _InterlockedCompareExchange\0"
	.byte	0x1
	.uleb128 0x370
	.ascii "InterlockedCompareExchangeAcquire InterlockedCompareExchange\0"
	.byte	0x1
	.uleb128 0x371
	.ascii "InterlockedCompareExchangeRelease InterlockedCompareExchange\0"
	.byte	0x1
	.uleb128 0x372
	.ascii "InterlockedExchangePointer _InterlockedExchangePointer\0"
	.byte	0x1
	.uleb128 0x373
	.ascii "InterlockedCompareExchangePointer _InterlockedCompareExchangePointer\0"
	.byte	0x1
	.uleb128 0x374
	.ascii "InterlockedCompareExchangePointerAcquire _InterlockedCompareExchangePointer\0"
	.byte	0x1
	.uleb128 0x375
	.ascii "InterlockedCompareExchangePointerRelease _InterlockedCompareExchangePointer\0"
	.byte	0x1
	.uleb128 0x376
	.ascii "InterlockedAnd64 _InterlockedAnd64\0"
	.byte	0x1
	.uleb128 0x377
	.ascii "InterlockedOr64 _InterlockedOr64\0"
	.byte	0x1
	.uleb128 0x378
	.ascii "InterlockedXor64 _InterlockedXor64\0"
	.byte	0x1
	.uleb128 0x379
	.ascii "InterlockedIncrement64 _InterlockedIncrement64\0"
	.byte	0x1
	.uleb128 0x37a
	.ascii "InterlockedDecrement64 _InterlockedDecrement64\0"
	.byte	0x1
	.uleb128 0x37b
	.ascii "InterlockedExchange64 _InterlockedExchange64\0"
	.byte	0x1
	.uleb128 0x37c
	.ascii "InterlockedExchangeAdd64 _InterlockedExchangeAdd64\0"
	.byte	0x1
	.uleb128 0x37d
	.ascii "InterlockedCompareExchange64 _InterlockedCompareExchange64\0"
	.byte	0x1
	.uleb128 0x37e
	.ascii "InterlockedCompareExchangeAcquire64 InterlockedCompareExchange64\0"
	.byte	0x1
	.uleb128 0x37f
	.ascii "InterlockedCompareExchangeRelease64 InterlockedCompareExchange64\0"
	.byte	0x1
	.uleb128 0x381
	.ascii "InterlockedAnd8 _InterlockedAnd8\0"
	.byte	0x1
	.uleb128 0x382
	.ascii "InterlockedOr8 _InterlockedOr8\0"
	.byte	0x1
	.uleb128 0x383
	.ascii "InterlockedXor8 _InterlockedXor8\0"
	.byte	0x1
	.uleb128 0x384
	.ascii "InterlockedAnd16 _InterlockedAnd16\0"
	.byte	0x1
	.uleb128 0x385
	.ascii "InterlockedOr16 _InterlockedOr16\0"
	.byte	0x1
	.uleb128 0x386
	.ascii "InterlockedXor16 _InterlockedXor16\0"
	.byte	0x1
	.uleb128 0x422
	.ascii "UnlockResource(hResData) ( { (VOID)(hResData); 0; } )\0"
	.byte	0x1
	.uleb128 0x423
	.ascii "MAXINTATOM 0xc000\0"
	.byte	0x1
	.uleb128 0x424
	.ascii "MAKEINTATOM(i) (LPTSTR) ((ULONG_PTR)((WORD)(i)))\0"
	.byte	0x1
	.uleb128 0x425
	.ascii "INVALID_ATOM ((ATOM)0)\0"
	.byte	0x1
	.uleb128 0x44b
	.ascii "SCS_32BIT_BINARY 0\0"
	.byte	0x1
	.uleb128 0x44c
	.ascii "SCS_DOS_BINARY 1\0"
	.byte	0x1
	.uleb128 0x44d
	.ascii "SCS_WOW_BINARY 2\0"
	.byte	0x1
	.uleb128 0x44e
	.ascii "SCS_PIF_BINARY 3\0"
	.byte	0x1
	.uleb128 0x44f
	.ascii "SCS_POSIX_BINARY 4\0"
	.byte	0x1
	.uleb128 0x450
	.ascii "SCS_OS216_BINARY 5\0"
	.byte	0x1
	.uleb128 0x451
	.ascii "SCS_64BIT_BINARY 6\0"
	.byte	0x1
	.uleb128 0x454
	.ascii "SCS_THIS_PLATFORM_BINARY SCS_64BIT_BINARY\0"
	.byte	0x1
	.uleb128 0x469
	.ascii "SetEnvironmentStrings SetEnvironmentStringsA\0"
	.byte	0x1
	.uleb128 0x46a
	.ascii "GetShortPathName GetShortPathNameA\0"
	.byte	0x1
	.uleb128 0x46d
	.ascii "GetBinaryType __MINGW_NAME_AW(GetBinaryType)\0"
	.byte	0x1
	.uleb128 0x47a
	.ascii "FIBER_FLAG_FLOAT_SWITCH 0x1\0"
	.byte	0x1
	.uleb128 0x4c9
	.ascii "HasOverlappedIoCompleted(lpOverlapped) (((DWORD) (lpOverlapped)->Internal) != STATUS_PENDING)\0"
	.byte	0x1
	.uleb128 0x4d3
	.ascii "SEM_FAILCRITICALERRORS 0x0001\0"
	.byte	0x1
	.uleb128 0x4d4
	.ascii "SEM_NOGPFAULTERRORBOX 0x0002\0"
	.byte	0x1
	.uleb128 0x4d5
	.ascii "SEM_NOALIGNMENTFAULTEXCEPT 0x0004\0"
	.byte	0x1
	.uleb128 0x4d6
	.ascii "SEM_NOOPENFILEERRORBOX 0x8000\0"
	.byte	0x1
	.uleb128 0x4eb
	.ascii "CRITICAL_SECTION_NO_DEBUG_INFO RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO\0"
	.byte	0x1
	.uleb128 0x4f7
	.ascii "HANDLE_FLAG_INHERIT 0x1\0"
	.byte	0x1
	.uleb128 0x4f8
	.ascii "HANDLE_FLAG_PROTECT_FROM_CLOSE 0x2\0"
	.byte	0x1
	.uleb128 0x4fa
	.ascii "HINSTANCE_ERROR 32\0"
	.byte	0x1
	.uleb128 0x4fc
	.ascii "GET_TAPE_MEDIA_INFORMATION 0\0"
	.byte	0x1
	.uleb128 0x4fd
	.ascii "GET_TAPE_DRIVE_INFORMATION 1\0"
	.byte	0x1
	.uleb128 0x4ff
	.ascii "SET_TAPE_MEDIA_INFORMATION 0\0"
	.byte	0x1
	.uleb128 0x500
	.ascii "SET_TAPE_DRIVE_INFORMATION 1\0"
	.byte	0x1
	.uleb128 0x532
	.ascii "SetFileShortName __MINGW_NAME_AW(SetFileShortName)\0"
	.byte	0x1
	.uleb128 0x53d
	.ascii "FormatMessage __MINGW_NAME_AW(FormatMessage)\0"
	.byte	0x1
	.uleb128 0x540
	.ascii "FORMAT_MESSAGE_IGNORE_INSERTS 0x00000200\0"
	.byte	0x1
	.uleb128 0x541
	.ascii "FORMAT_MESSAGE_FROM_STRING 0x00000400\0"
	.byte	0x1
	.uleb128 0x542
	.ascii "FORMAT_MESSAGE_FROM_HMODULE 0x00000800\0"
	.byte	0x1
	.uleb128 0x543
	.ascii "FORMAT_MESSAGE_FROM_SYSTEM 0x00001000\0"
	.byte	0x1
	.uleb128 0x544
	.ascii "FORMAT_MESSAGE_ARGUMENT_ARRAY 0x00002000\0"
	.byte	0x1
	.uleb128 0x545
	.ascii "FORMAT_MESSAGE_MAX_WIDTH_MASK 0x000000ff\0"
	.byte	0x1
	.uleb128 0x54c
	.ascii "FILE_ENCRYPTABLE 0\0"
	.byte	0x1
	.uleb128 0x54d
	.ascii "FILE_IS_ENCRYPTED 1\0"
	.byte	0x1
	.uleb128 0x54e
	.ascii "FILE_SYSTEM_ATTR 2\0"
	.byte	0x1
	.uleb128 0x54f
	.ascii "FILE_ROOT_DIR 3\0"
	.byte	0x1
	.uleb128 0x550
	.ascii "FILE_SYSTEM_DIR 4\0"
	.byte	0x1
	.uleb128 0x551
	.ascii "FILE_UNKNOWN 5\0"
	.byte	0x1
	.uleb128 0x552
	.ascii "FILE_SYSTEM_NOT_SUPPORT 6\0"
	.byte	0x1
	.uleb128 0x553
	.ascii "FILE_USER_DISALLOWED 7\0"
	.byte	0x1
	.uleb128 0x554
	.ascii "FILE_READ_ONLY 8\0"
	.byte	0x1
	.uleb128 0x555
	.ascii "FILE_DIR_DISALLOWED 9\0"
	.byte	0x1
	.uleb128 0x557
	.ascii "FORMAT_MESSAGE_ALLOCATE_BUFFER 0x00000100\0"
	.byte	0x1
	.uleb128 0x559
	.ascii "EFS_USE_RECOVERY_KEYS (0x1)\0"
	.byte	0x1
	.uleb128 0x55b
	.ascii "CREATE_FOR_IMPORT (1)\0"
	.byte	0x1
	.uleb128 0x55c
	.ascii "CREATE_FOR_DIR (2)\0"
	.byte	0x1
	.uleb128 0x55d
	.ascii "OVERWRITE_HIDDEN (4)\0"
	.byte	0x1
	.uleb128 0x55e
	.ascii "EFSRPC_SECURE_ONLY (8)\0"
	.byte	0x1
	.uleb128 0x58b
	.ascii "CreateMailslot __MINGW_NAME_AW(CreateMailslot)\0"
	.byte	0x1
	.uleb128 0x58c
	.ascii "EncryptFile __MINGW_NAME_AW(EncryptFile)\0"
	.byte	0x1
	.uleb128 0x58d
	.ascii "DecryptFile __MINGW_NAME_AW(DecryptFile)\0"
	.byte	0x1
	.uleb128 0x58e
	.ascii "FileEncryptionStatus __MINGW_NAME_AW(FileEncryptionStatus)\0"
	.byte	0x1
	.uleb128 0x58f
	.ascii "OpenEncryptedFileRaw __MINGW_NAME_AW(OpenEncryptedFileRaw)\0"
	.byte	0x1
	.uleb128 0x590
	.ascii "lstrcmp __MINGW_NAME_AW(lstrcmp)\0"
	.byte	0x1
	.uleb128 0x591
	.ascii "lstrcmpi __MINGW_NAME_AW(lstrcmpi)\0"
	.byte	0x1
	.uleb128 0x592
	.ascii "lstrcpyn __MINGW_NAME_AW(lstrcpyn)\0"
	.byte	0x1
	.uleb128 0x593
	.ascii "lstrcpy __MINGW_NAME_AW(lstrcpy)\0"
	.byte	0x1
	.uleb128 0x594
	.ascii "lstrcat __MINGW_NAME_AW(lstrcat)\0"
	.byte	0x1
	.uleb128 0x595
	.ascii "lstrlen __MINGW_NAME_AW(lstrlen)\0"
	.byte	0x1
	.uleb128 0x59f
	.ascii "BACKUP_INVALID 0x00000000\0"
	.byte	0x1
	.uleb128 0x5a0
	.ascii "BACKUP_DATA 0x00000001\0"
	.byte	0x1
	.uleb128 0x5a1
	.ascii "BACKUP_EA_DATA 0x00000002\0"
	.byte	0x1
	.uleb128 0x5a2
	.ascii "BACKUP_SECURITY_DATA 0x00000003\0"
	.byte	0x1
	.uleb128 0x5a3
	.ascii "BACKUP_ALTERNATE_DATA 0x00000004\0"
	.byte	0x1
	.uleb128 0x5a4
	.ascii "BACKUP_LINK 0x00000005\0"
	.byte	0x1
	.uleb128 0x5a5
	.ascii "BACKUP_PROPERTY_DATA 0x00000006\0"
	.byte	0x1
	.uleb128 0x5a6
	.ascii "BACKUP_OBJECT_ID 0x00000007\0"
	.byte	0x1
	.uleb128 0x5a7
	.ascii "BACKUP_REPARSE_DATA 0x00000008\0"
	.byte	0x1
	.uleb128 0x5a8
	.ascii "BACKUP_SPARSE_BLOCK 0x00000009\0"
	.byte	0x1
	.uleb128 0x5a9
	.ascii "BACKUP_TXFS_DATA 0x0000000a\0"
	.byte	0x1
	.uleb128 0x5ab
	.ascii "STREAM_NORMAL_ATTRIBUTE 0x00000000\0"
	.byte	0x1
	.uleb128 0x5ac
	.ascii "STREAM_MODIFIED_WHEN_READ 0x00000001\0"
	.byte	0x1
	.uleb128 0x5ad
	.ascii "STREAM_CONTAINS_SECURITY 0x00000002\0"
	.byte	0x1
	.uleb128 0x5ae
	.ascii "STREAM_CONTAINS_PROPERTIES 0x00000004\0"
	.byte	0x1
	.uleb128 0x5af
	.ascii "STREAM_SPARSE_ATTRIBUTE 0x00000008\0"
	.byte	0x1
	.uleb128 0x5b1
	.ascii "STARTF_USESHOWWINDOW 0x00000001\0"
	.byte	0x1
	.uleb128 0x5b2
	.ascii "STARTF_USESIZE 0x00000002\0"
	.byte	0x1
	.uleb128 0x5b3
	.ascii "STARTF_USEPOSITION 0x00000004\0"
	.byte	0x1
	.uleb128 0x5b4
	.ascii "STARTF_USECOUNTCHARS 0x00000008\0"
	.byte	0x1
	.uleb128 0x5b5
	.ascii "STARTF_USEFILLATTRIBUTE 0x00000010\0"
	.byte	0x1
	.uleb128 0x5b6
	.ascii "STARTF_RUNFULLSCREEN 0x00000020\0"
	.byte	0x1
	.uleb128 0x5b7
	.ascii "STARTF_FORCEONFEEDBACK 0x00000040\0"
	.byte	0x1
	.uleb128 0x5b8
	.ascii "STARTF_FORCEOFFFEEDBACK 0x00000080\0"
	.byte	0x1
	.uleb128 0x5b9
	.ascii "STARTF_USESTDHANDLES 0x00000100\0"
	.byte	0x1
	.uleb128 0x5bb
	.ascii "STARTF_USEHOTKEY 0x00000200\0"
	.byte	0x1
	.uleb128 0x5bc
	.ascii "STARTF_TITLEISLINKNAME 0x00000800\0"
	.byte	0x1
	.uleb128 0x5bd
	.ascii "STARTF_TITLEISAPPID 0x00001000\0"
	.byte	0x1
	.uleb128 0x5be
	.ascii "STARTF_PREVENTPINNING 0x00002000\0"
	.byte	0x1
	.uleb128 0x5cf
	.ascii "SHUTDOWN_NORETRY 0x1\0"
	.byte	0x1
	.uleb128 0x5d3
	.ascii "CreateSemaphore __MINGW_NAME_AW(CreateSemaphore)\0"
	.byte	0x1
	.uleb128 0x5e9
	.ascii "OpenMutex OpenMutexA\0"
	.byte	0x1
	.uleb128 0x5ea
	.ascii "OpenSemaphore OpenSemaphoreA\0"
	.byte	0x1
	.uleb128 0x5eb
	.ascii "OpenWaitableTimer OpenWaitableTimerA\0"
	.byte	0x1
	.uleb128 0x5ec
	.ascii "CreateFileMapping CreateFileMappingA\0"
	.byte	0x1
	.uleb128 0x5ed
	.ascii "OpenFileMapping OpenFileMappingA\0"
	.byte	0x1
	.uleb128 0x5ee
	.ascii "GetLogicalDriveStrings GetLogicalDriveStringsA\0"
	.byte	0x1
	.uleb128 0x5f1
	.ascii "CreateWaitableTimer __MINGW_NAME_AW(CreateWaitableTimer)\0"
	.byte	0x1
	.uleb128 0x5f2
	.ascii "LoadLibrary __MINGW_NAME_AW(LoadLibrary)\0"
	.byte	0x1
	.uleb128 0x661
	.ascii "ATOM_FLAG_GLOBAL 0x2\0"
	.byte	0x1
	.uleb128 0x6ae
	.ascii "GetStartupInfo GetStartupInfoA\0"
	.byte	0x1
	.uleb128 0x6af
	.ascii "FindResourceEx FindResourceExA\0"
	.byte	0x1
	.uleb128 0x6b0
	.ascii "GetTempPath GetTempPathA\0"
	.byte	0x1
	.uleb128 0x6b1
	.ascii "GetTempFileName GetTempFileNameA\0"
	.byte	0x1
	.uleb128 0x6b4
	.ascii "FatalAppExit __MINGW_NAME_AW(FatalAppExit)\0"
	.byte	0x1
	.uleb128 0x6b5
	.ascii "GetFirmwareEnvironmentVariable __MINGW_NAME_AW(GetFirmwareEnvironmentVariable)\0"
	.byte	0x1
	.uleb128 0x6b6
	.ascii "SetFirmwareEnvironmentVariable __MINGW_NAME_AW(SetFirmwareEnvironmentVariable)\0"
	.byte	0x1
	.uleb128 0x6b7
	.ascii "FindResource __MINGW_NAME_AW(FindResource)\0"
	.byte	0x1
	.uleb128 0x6b8
	.ascii "EnumResourceTypes __MINGW_NAME_AW(EnumResourceTypes)\0"
	.byte	0x1
	.uleb128 0x6b9
	.ascii "EnumResourceNames __MINGW_NAME_AW(EnumResourceNames)\0"
	.byte	0x1
	.uleb128 0x6ba
	.ascii "EnumResourceLanguages __MINGW_NAME_AW(EnumResourceLanguages)\0"
	.byte	0x1
	.uleb128 0x6bb
	.ascii "BeginUpdateResource __MINGW_NAME_AW(BeginUpdateResource)\0"
	.byte	0x1
	.uleb128 0x6bc
	.ascii "UpdateResource __MINGW_NAME_AW(UpdateResource)\0"
	.byte	0x1
	.uleb128 0x6bd
	.ascii "EndUpdateResource __MINGW_NAME_AW(EndUpdateResource)\0"
	.byte	0x1
	.uleb128 0x6be
	.ascii "GlobalAddAtom __MINGW_NAME_AW(GlobalAddAtom)\0"
	.byte	0x1
	.uleb128 0x6bf
	.ascii "GlobalAddAtomEx __MINGW_NAME_AW(GlobalAddAtomEx)\0"
	.byte	0x1
	.uleb128 0x6c0
	.ascii "GlobalFindAtom __MINGW_NAME_AW(GlobalFindAtom)\0"
	.byte	0x1
	.uleb128 0x6c1
	.ascii "GlobalGetAtomName __MINGW_NAME_AW(GlobalGetAtomName)\0"
	.byte	0x1
	.uleb128 0x6c2
	.ascii "AddAtom __MINGW_NAME_AW(AddAtom)\0"
	.byte	0x1
	.uleb128 0x6c3
	.ascii "FindAtom __MINGW_NAME_AW(FindAtom)\0"
	.byte	0x1
	.uleb128 0x6c4
	.ascii "GetAtomName __MINGW_NAME_AW(GetAtomName)\0"
	.byte	0x1
	.uleb128 0x6c5
	.ascii "GetProfileInt __MINGW_NAME_AW(GetProfileInt)\0"
	.byte	0x1
	.uleb128 0x6c6
	.ascii "GetProfileString __MINGW_NAME_AW(GetProfileString)\0"
	.byte	0x1
	.uleb128 0x6c7
	.ascii "WriteProfileString __MINGW_NAME_AW(WriteProfileString)\0"
	.byte	0x1
	.uleb128 0x6c8
	.ascii "GetProfileSection __MINGW_NAME_AW(GetProfileSection)\0"
	.byte	0x1
	.uleb128 0x6c9
	.ascii "WriteProfileSection __MINGW_NAME_AW(WriteProfileSection)\0"
	.byte	0x1
	.uleb128 0x6ca
	.ascii "GetPrivateProfileInt __MINGW_NAME_AW(GetPrivateProfileInt)\0"
	.byte	0x1
	.uleb128 0x6cb
	.ascii "GetPrivateProfileString __MINGW_NAME_AW(GetPrivateProfileString)\0"
	.byte	0x1
	.uleb128 0x6cc
	.ascii "WritePrivateProfileString __MINGW_NAME_AW(WritePrivateProfileString)\0"
	.byte	0x1
	.uleb128 0x6cd
	.ascii "GetPrivateProfileSection __MINGW_NAME_AW(GetPrivateProfileSection)\0"
	.byte	0x1
	.uleb128 0x6ce
	.ascii "WritePrivateProfileSection __MINGW_NAME_AW(WritePrivateProfileSection)\0"
	.byte	0x1
	.uleb128 0x6cf
	.ascii "GetPrivateProfileSectionNames __MINGW_NAME_AW(GetPrivateProfileSectionNames)\0"
	.byte	0x1
	.uleb128 0x6d0
	.ascii "GetPrivateProfileStruct __MINGW_NAME_AW(GetPrivateProfileStruct)\0"
	.byte	0x1
	.uleb128 0x6d1
	.ascii "WritePrivateProfileStruct __MINGW_NAME_AW(WritePrivateProfileStruct)\0"
	.byte	0x1
	.uleb128 0x6dc
	.ascii "GetSystemWow64Directory __MINGW_NAME_AW(GetSystemWow64Directory)\0"
	.byte	0x1
	.uleb128 0x6e3
	.ascii "GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A \"GetSystemWow64DirectoryA\"\0"
	.byte	0x1
	.uleb128 0x6e4
	.ascii "GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W L\"GetSystemWow64DirectoryA\"\0"
	.byte	0x1
	.uleb128 0x6e5
	.ascii "GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T TEXT (\"GetSystemWow64DirectoryA\")\0"
	.byte	0x1
	.uleb128 0x6e6
	.ascii "GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A \"GetSystemWow64DirectoryW\"\0"
	.byte	0x1
	.uleb128 0x6e7
	.ascii "GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W L\"GetSystemWow64DirectoryW\"\0"
	.byte	0x1
	.uleb128 0x6e8
	.ascii "GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T TEXT (\"GetSystemWow64DirectoryW\")\0"
	.byte	0x1
	.uleb128 0x6ea
	.ascii "GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A __MINGW_NAME_UAW_EXT(GET_SYSTEM_WOW64_DIRECTORY_NAME,A)\0"
	.byte	0x1
	.uleb128 0x6eb
	.ascii "GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W __MINGW_NAME_UAW_EXT(GET_SYSTEM_WOW64_DIRECTORY_NAME,W)\0"
	.byte	0x1
	.uleb128 0x6ec
	.ascii "GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T __MINGW_NAME_UAW_EXT(GET_SYSTEM_WOW64_DIRECTORY_NAME,T)\0"
	.byte	0x1
	.uleb128 0x6f4
	.ascii "SetDllDirectory __MINGW_NAME_AW(SetDllDirectory)\0"
	.byte	0x1
	.uleb128 0x6f5
	.ascii "GetDllDirectory __MINGW_NAME_AW(GetDllDirectory)\0"
	.byte	0x1
	.uleb128 0x6f7
	.ascii "BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE 0x1\0"
	.byte	0x1
	.uleb128 0x6f8
	.ascii "BASE_SEARCH_PATH_DISABLE_SAFE_SEARCHMODE 0x10000\0"
	.byte	0x1
	.uleb128 0x6f9
	.ascii "BASE_SEARCH_PATH_PERMANENT 0x8000\0"
	.byte	0x1
	.uleb128 0x6fa
	.ascii "BASE_SEARCH_PATH_INVALID_FLAGS ~0x18001\0"
	.byte	0x1
	.uleb128 0x703
	.ascii "CreateDirectoryEx __MINGW_NAME_AW(CreateDirectoryEx)\0"
	.byte	0x1
	.uleb128 0x713
	.ascii "DDD_RAW_TARGET_PATH 0x00000001\0"
	.byte	0x1
	.uleb128 0x714
	.ascii "DDD_REMOVE_DEFINITION 0x00000002\0"
	.byte	0x1
	.uleb128 0x715
	.ascii "DDD_EXACT_MATCH_ON_REMOVE 0x00000004\0"
	.byte	0x1
	.uleb128 0x716
	.ascii "DDD_NO_BROADCAST_SYSTEM 0x00000008\0"
	.byte	0x1
	.uleb128 0x717
	.ascii "DDD_LUID_BROADCAST_DRIVE 0x00000010\0"
	.byte	0x1
	.uleb128 0x71d
	.ascii "DefineDosDevice DefineDosDeviceA\0"
	.byte	0x1
	.uleb128 0x71e
	.ascii "QueryDosDevice QueryDosDeviceA\0"
	.byte	0x1
	.uleb128 0x721
	.ascii "EXPAND_LOCAL_DRIVES \0"
	.byte	0x1
	.uleb128 0x739
	.ascii "GetCompressedFileSize __MINGW_NAME_AW(GetCompressedFileSize)\0"
	.byte	0x1
	.uleb128 0x75b
	.ascii "CheckNameLegalDOS8Dot3 __MINGW_NAME_AW(CheckNameLegalDOS8Dot3)\0"
	.byte	0x1
	.uleb128 0x75c
	.ascii "CopyFile __MINGW_NAME_AW(CopyFile)\0"
	.byte	0x1
	.uleb128 0x75d
	.ascii "CopyFileEx __MINGW_NAME_AW(CopyFileEx)\0"
	.byte	0x1
	.uleb128 0x7d2
	.ascii "MoveFile __MINGW_NAME_AW(MoveFile)\0"
	.byte	0x1
	.uleb128 0x7d9
	.ascii "MoveFileEx __MINGW_NAME_AW(MoveFileEx)\0"
	.byte	0x1
	.uleb128 0x7e0
	.ascii "MoveFileWithProgress __MINGW_NAME_AW(MoveFileWithProgress)\0"
	.byte	0x1
	.uleb128 0x7eb
	.ascii "MOVEFILE_REPLACE_EXISTING 0x00000001\0"
	.byte	0x1
	.uleb128 0x7ec
	.ascii "MOVEFILE_COPY_ALLOWED 0x00000002\0"
	.byte	0x1
	.uleb128 0x7ed
	.ascii "MOVEFILE_DELAY_UNTIL_REBOOT 0x00000004\0"
	.byte	0x1
	.uleb128 0x7ee
	.ascii "MOVEFILE_WRITE_THROUGH 0x00000008\0"
	.byte	0x1
	.uleb128 0x7ef
	.ascii "MOVEFILE_CREATE_HARDLINK 0x00000010\0"
	.byte	0x1
	.uleb128 0x7f0
	.ascii "MOVEFILE_FAIL_IF_NOT_TRACKABLE 0x00000020\0"
	.byte	0x1
	.uleb128 0x7f9
	.ascii "ReplaceFile __MINGW_NAME_AW(ReplaceFile)\0"
	.byte	0x1
	.uleb128 0x7fa
	.ascii "CreateHardLink __MINGW_NAME_AW(CreateHardLink)\0"
	.byte	0x1
	.uleb128 0x83d
	.ascii "CreateNamedPipe CreateNamedPipeA\0"
	.byte	0x1
	.uleb128 0x83e
	.ascii "WaitNamedPipe WaitNamedPipeA\0"
	.byte	0x1
	.uleb128 0x83f
	.ascii "GetVolumeInformation GetVolumeInformationA\0"
	.byte	0x1
	.uleb128 0x842
	.ascii "GetNamedPipeHandleState __MINGW_NAME_AW(GetNamedPipeHandleState)\0"
	.byte	0x1
	.uleb128 0x843
	.ascii "CallNamedPipe __MINGW_NAME_AW(CallNamedPipe)\0"
	.byte	0x1
	.uleb128 0x844
	.ascii "SetVolumeLabel __MINGW_NAME_AW(SetVolumeLabel)\0"
	.byte	0x1
	.uleb128 0x845
	.ascii "ClearEventLog __MINGW_NAME_AW(ClearEventLog)\0"
	.byte	0x1
	.uleb128 0x846
	.ascii "BackupEventLog __MINGW_NAME_AW(BackupEventLog)\0"
	.byte	0x1
	.uleb128 0x847
	.ascii "OpenEventLog __MINGW_NAME_AW(OpenEventLog)\0"
	.byte	0x1
	.uleb128 0x848
	.ascii "RegisterEventSource __MINGW_NAME_AW(RegisterEventSource)\0"
	.byte	0x1
	.uleb128 0x849
	.ascii "OpenBackupEventLog __MINGW_NAME_AW(OpenBackupEventLog)\0"
	.byte	0x1
	.uleb128 0x84a
	.ascii "ReadEventLog __MINGW_NAME_AW(ReadEventLog)\0"
	.byte	0x1
	.uleb128 0x84b
	.ascii "ReportEvent __MINGW_NAME_AW(ReportEvent)\0"
	.byte	0x1
	.uleb128 0x851
	.ascii "EVENTLOG_FULL_INFO 0\0"
	.byte	0x1
	.uleb128 0x892
	.ascii "AccessCheckAndAuditAlarm AccessCheckAndAuditAlarmA\0"
	.byte	0x1
	.uleb128 0x893
	.ascii "AccessCheckByTypeAndAuditAlarm AccessCheckByTypeAndAuditAlarmA\0"
	.byte	0x1
	.uleb128 0x894
	.ascii "AccessCheckByTypeResultListAndAuditAlarm AccessCheckByTypeResultListAndAuditAlarmA\0"
	.byte	0x1
	.uleb128 0x895
	.ascii "AccessCheckByTypeResultListAndAuditAlarmByHandle AccessCheckByTypeResultListAndAuditAlarmByHandleA\0"
	.byte	0x1
	.uleb128 0x896
	.ascii "ObjectOpenAuditAlarm ObjectOpenAuditAlarmA\0"
	.byte	0x1
	.uleb128 0x897
	.ascii "ObjectPrivilegeAuditAlarm ObjectPrivilegeAuditAlarmA\0"
	.byte	0x1
	.uleb128 0x898
	.ascii "ObjectCloseAuditAlarm ObjectCloseAuditAlarmA\0"
	.byte	0x1
	.uleb128 0x899
	.ascii "ObjectDeleteAuditAlarm ObjectDeleteAuditAlarmA\0"
	.byte	0x1
	.uleb128 0x89a
	.ascii "PrivilegedServiceAuditAlarm PrivilegedServiceAuditAlarmA\0"
	.byte	0x1
	.uleb128 0x89b
	.ascii "SetFileSecurity SetFileSecurityA\0"
	.byte	0x1
	.uleb128 0x89c
	.ascii "GetFileSecurity GetFileSecurityA\0"
	.byte	0x1
	.uleb128 0x89f
	.ascii "IsBadStringPtr __MINGW_NAME_AW(IsBadStringPtr)\0"
	.byte	0x1
	.uleb128 0x8a0
	.ascii "LookupAccountSid __MINGW_NAME_AW(LookupAccountSid)\0"
	.byte	0x1
	.uleb128 0x8a1
	.ascii "LookupAccountName __MINGW_NAME_AW(LookupAccountName)\0"
	.byte	0x1
	.uleb128 0x8ad
	.ascii "LookupAccountNameLocalA(n,s,cs,d,cd,u) LookupAccountNameA (NULL, n, s, cs, d, cd, u)\0"
	.byte	0x1
	.uleb128 0x8ae
	.ascii "LookupAccountNameLocalW(n,s,cs,d,cd,u) LookupAccountNameW (NULL, n, s, cs, d, cd, u)\0"
	.byte	0x1
	.uleb128 0x8af
	.ascii "LookupAccountNameLocal(n,s,cs,d,cd,u) __MINGW_NAME_AW(LookupAccountName) (NULL, n, s, cs, d, cd, u)\0"
	.byte	0x1
	.uleb128 0x8b1
	.ascii "LookupAccountSidLocalA(s,n,cn,d,cd,u) LookupAccountSidA (NULL, s, n, cn, d, cd, u)\0"
	.byte	0x1
	.uleb128 0x8b2
	.ascii "LookupAccountSidLocalW(s,n,cn,d,cd,u) LookupAccountSidW (NULL, s, n, cn, d, cd, u)\0"
	.byte	0x1
	.uleb128 0x8b3
	.ascii "LookupAccountSidLocal(s,n,cn,d,cd,u) __MINGW_NAME_AW(LookupAccountSid) (NULL, s, n, cn, d, cd, u)\0"
	.byte	0x1
	.uleb128 0x8c8
	.ascii "LookupPrivilegeValue __MINGW_NAME_AW(LookupPrivilegeValue)\0"
	.byte	0x1
	.uleb128 0x8c9
	.ascii "LookupPrivilegeName __MINGW_NAME_AW(LookupPrivilegeName)\0"
	.byte	0x1
	.uleb128 0x8ca
	.ascii "LookupPrivilegeDisplayName __MINGW_NAME_AW(LookupPrivilegeDisplayName)\0"
	.byte	0x1
	.uleb128 0x8cb
	.ascii "BuildCommDCB __MINGW_NAME_AW(BuildCommDCB)\0"
	.byte	0x1
	.uleb128 0x8cc
	.ascii "BuildCommDCBAndTimeouts __MINGW_NAME_AW(BuildCommDCBAndTimeouts)\0"
	.byte	0x1
	.uleb128 0x8cd
	.ascii "CommConfigDialog __MINGW_NAME_AW(CommConfigDialog)\0"
	.byte	0x1
	.uleb128 0x8ce
	.ascii "GetDefaultCommConfig __MINGW_NAME_AW(GetDefaultCommConfig)\0"
	.byte	0x1
	.uleb128 0x8cf
	.ascii "SetDefaultCommConfig __MINGW_NAME_AW(SetDefaultCommConfig)\0"
	.byte	0x1
	.uleb128 0x8d1
	.ascii "MAX_COMPUTERNAME_LENGTH 15\0"
	.byte	0x1
	.uleb128 0x8de
	.ascii "SetComputerNameEx SetComputerNameExA\0"
	.byte	0x1
	.uleb128 0x8e1
	.ascii "GetComputerName __MINGW_NAME_AW(GetComputerName)\0"
	.byte	0x1
	.uleb128 0x8e2
	.ascii "SetComputerName __MINGW_NAME_AW(SetComputerName)\0"
	.byte	0x1
	.uleb128 0x8e3
	.ascii "DnsHostnameToComputerName __MINGW_NAME_AW(DnsHostnameToComputerName)\0"
	.byte	0x1
	.uleb128 0x8e4
	.ascii "GetUserName __MINGW_NAME_AW(GetUserName)\0"
	.byte	0x1
	.uleb128 0x8e6
	.ascii "LOGON32_LOGON_INTERACTIVE 2\0"
	.byte	0x1
	.uleb128 0x8e7
	.ascii "LOGON32_LOGON_NETWORK 3\0"
	.byte	0x1
	.uleb128 0x8e8
	.ascii "LOGON32_LOGON_BATCH 4\0"
	.byte	0x1
	.uleb128 0x8e9
	.ascii "LOGON32_LOGON_SERVICE 5\0"
	.byte	0x1
	.uleb128 0x8ea
	.ascii "LOGON32_LOGON_UNLOCK 7\0"
	.byte	0x1
	.uleb128 0x8eb
	.ascii "LOGON32_LOGON_NETWORK_CLEARTEXT 8\0"
	.byte	0x1
	.uleb128 0x8ec
	.ascii "LOGON32_LOGON_NEW_CREDENTIALS 9\0"
	.byte	0x1
	.uleb128 0x8ee
	.ascii "LOGON32_PROVIDER_DEFAULT 0\0"
	.byte	0x1
	.uleb128 0x8ef
	.ascii "LOGON32_PROVIDER_WINNT35 1\0"
	.byte	0x1
	.uleb128 0x8f0
	.ascii "LOGON32_PROVIDER_WINNT40 2\0"
	.byte	0x1
	.uleb128 0x8f1
	.ascii "LOGON32_PROVIDER_WINNT50 3\0"
	.byte	0x1
	.uleb128 0x8fd
	.ascii "CreateProcessAsUser CreateProcessAsUserA\0"
	.byte	0x1
	.uleb128 0x900
	.ascii "LogonUser __MINGW_NAME_AW(LogonUser)\0"
	.byte	0x1
	.uleb128 0x901
	.ascii "LogonUserEx __MINGW_NAME_AW(LogonUserEx)\0"
	.byte	0x1
	.uleb128 0x903
	.ascii "LOGON_WITH_PROFILE 0x00000001\0"
	.byte	0x1
	.uleb128 0x904
	.ascii "LOGON_NETCREDENTIALS_ONLY 0x00000002\0"
	.byte	0x1
	.uleb128 0x905
	.ascii "LOGON_ZERO_PASSWORD_BUFFER 0x80000000\0"
	.byte	0x1
	.uleb128 0x91a
	.ascii "CreatePrivateNamespace __MINGW_NAME_AW(CreatePrivateNamespace)\0"
	.byte	0x1
	.uleb128 0x91c
	.ascii "OpenPrivateNamespace __MINGW_NAME_AW(OpenPrivateNamespace)\0"
	.byte	0x1
	.uleb128 0x91e
	.ascii "CreateBoundaryDescriptor __MINGW_NAME_AW(CreateBoundaryDescriptor)\0"
	.byte	0x1
	.uleb128 0x923
	.ascii "HW_PROFILE_GUIDLEN 39\0"
	.byte	0x1
	.uleb128 0x924
	.ascii "MAX_PROFILE_LEN 80\0"
	.byte	0x1
	.uleb128 0x926
	.ascii "DOCKINFO_UNDOCKED (0x1)\0"
	.byte	0x1
	.uleb128 0x927
	.ascii "DOCKINFO_DOCKED (0x2)\0"
	.byte	0x1
	.uleb128 0x928
	.ascii "DOCKINFO_USER_SUPPLIED (0x4)\0"
	.byte	0x1
	.uleb128 0x929
	.ascii "DOCKINFO_USER_UNDOCKED (DOCKINFO_USER_SUPPLIED | DOCKINFO_UNDOCKED)\0"
	.byte	0x1
	.uleb128 0x92a
	.ascii "DOCKINFO_USER_DOCKED (DOCKINFO_USER_SUPPLIED | DOCKINFO_DOCKED)\0"
	.byte	0x1
	.uleb128 0x940
	.ascii "GetCurrentHwProfile __MINGW_NAME_AW(GetCurrentHwProfile)\0"
	.byte	0x1
	.uleb128 0x942
	.ascii "VerifyVersionInfo __MINGW_NAME_AW(VerifyVersionInfo)\0"
	.file 358 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winerror.h"
	.byte	0x3
	.uleb128 0x945
	.uleb128 0x166
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINERROR_ \0"
	.byte	0x1
	.uleb128 0x9
	.ascii "__IN__WINERROR_ 1\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "FACILITY_WINDOWSUPDATE 36\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "FACILITY_WINDOWS_CE 24\0"
	.byte	0x1
	.uleb128 0xd
	.ascii "FACILITY_WINDOWS 8\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "FACILITY_URT 19\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "FACILITY_UMI 22\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "FACILITY_SXS 23\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "FACILITY_STORAGE 3\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "FACILITY_STATE_MANAGEMENT 34\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "FACILITY_SSPI 9\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "FACILITY_SCARD 16\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "FACILITY_SETUPAPI 15\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "FACILITY_SECURITY 9\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "FACILITY_RPC 1\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "FACILITY_WIN32 7\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "FACILITY_CONTROL 10\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "FACILITY_NULL 0\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "FACILITY_METADIRECTORY 35\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "FACILITY_MSMQ 14\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "FACILITY_MEDIASERVER 13\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "FACILITY_INTERNET 12\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "FACILITY_ITF 4\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "FACILITY_HTTP 25\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "FACILITY_DPLAY 21\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "FACILITY_DISPATCH 2\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "FACILITY_DIRECTORYSERVICE 37\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "FACILITY_CONFIGURATION 33\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "FACILITY_COMPLUS 17\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "FACILITY_CERT 11\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "FACILITY_BACKGROUNDCOPY 32\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "FACILITY_ACS 20\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "FACILITY_AAF 18\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "FACILITY_AUDCLNT 2185\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "ERROR_SUCCESS __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "NO_ERROR __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "SEC_E_OK ((HRESULT)0x00000000)\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "ERROR_INVALID_FUNCTION __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "ERROR_FILE_NOT_FOUND __MSABI_LONG(2)\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "ERROR_PATH_NOT_FOUND __MSABI_LONG(3)\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "ERROR_TOO_MANY_OPEN_FILES __MSABI_LONG(4)\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "ERROR_ACCESS_DENIED __MSABI_LONG(5)\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "ERROR_INVALID_HANDLE __MSABI_LONG(6)\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "ERROR_ARENA_TRASHED __MSABI_LONG(7)\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "ERROR_NOT_ENOUGH_MEMORY __MSABI_LONG(8)\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "ERROR_INVALID_BLOCK __MSABI_LONG(9)\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "ERROR_BAD_ENVIRONMENT __MSABI_LONG(10)\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "ERROR_BAD_FORMAT __MSABI_LONG(11)\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "ERROR_INVALID_ACCESS __MSABI_LONG(12)\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "ERROR_INVALID_DATA __MSABI_LONG(13)\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "ERROR_OUTOFMEMORY __MSABI_LONG(14)\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "ERROR_INVALID_DRIVE __MSABI_LONG(15)\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "ERROR_CURRENT_DIRECTORY __MSABI_LONG(16)\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "ERROR_NOT_SAME_DEVICE __MSABI_LONG(17)\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "ERROR_NO_MORE_FILES __MSABI_LONG(18)\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "ERROR_WRITE_PROTECT __MSABI_LONG(19)\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "ERROR_BAD_UNIT __MSABI_LONG(20)\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "ERROR_NOT_READY __MSABI_LONG(21)\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "ERROR_BAD_COMMAND __MSABI_LONG(22)\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "ERROR_CRC __MSABI_LONG(23)\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "ERROR_BAD_LENGTH __MSABI_LONG(24)\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "ERROR_SEEK __MSABI_LONG(25)\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "ERROR_NOT_DOS_DISK __MSABI_LONG(26)\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "ERROR_SECTOR_NOT_FOUND __MSABI_LONG(27)\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "ERROR_OUT_OF_PAPER __MSABI_LONG(28)\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "ERROR_WRITE_FAULT __MSABI_LONG(29)\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "ERROR_READ_FAULT __MSABI_LONG(30)\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "ERROR_GEN_FAILURE __MSABI_LONG(31)\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "ERROR_SHARING_VIOLATION __MSABI_LONG(32)\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "ERROR_LOCK_VIOLATION __MSABI_LONG(33)\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "ERROR_WRONG_DISK __MSABI_LONG(34)\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "ERROR_SHARING_BUFFER_EXCEEDED __MSABI_LONG(36)\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "ERROR_HANDLE_EOF __MSABI_LONG(38)\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "ERROR_HANDLE_DISK_FULL __MSABI_LONG(39)\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "ERROR_NOT_SUPPORTED __MSABI_LONG(50)\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "ERROR_REM_NOT_LIST __MSABI_LONG(51)\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "ERROR_DUP_NAME __MSABI_LONG(52)\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "ERROR_BAD_NETPATH __MSABI_LONG(53)\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "ERROR_NETWORK_BUSY __MSABI_LONG(54)\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "ERROR_DEV_NOT_EXIST __MSABI_LONG(55)\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "ERROR_TOO_MANY_CMDS __MSABI_LONG(56)\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "ERROR_ADAP_HDW_ERR __MSABI_LONG(57)\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "ERROR_BAD_NET_RESP __MSABI_LONG(58)\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "ERROR_UNEXP_NET_ERR __MSABI_LONG(59)\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "ERROR_BAD_REM_ADAP __MSABI_LONG(60)\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "ERROR_PRINTQ_FULL __MSABI_LONG(61)\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "ERROR_NO_SPOOL_SPACE __MSABI_LONG(62)\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "ERROR_PRINT_CANCELLED __MSABI_LONG(63)\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "ERROR_NETNAME_DELETED __MSABI_LONG(64)\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "ERROR_NETWORK_ACCESS_DENIED __MSABI_LONG(65)\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "ERROR_BAD_DEV_TYPE __MSABI_LONG(66)\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "ERROR_BAD_NET_NAME __MSABI_LONG(67)\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "ERROR_TOO_MANY_NAMES __MSABI_LONG(68)\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "ERROR_TOO_MANY_SESS __MSABI_LONG(69)\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "ERROR_SHARING_PAUSED __MSABI_LONG(70)\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "ERROR_REQ_NOT_ACCEP __MSABI_LONG(71)\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "ERROR_REDIR_PAUSED __MSABI_LONG(72)\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "ERROR_FILE_EXISTS __MSABI_LONG(80)\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "ERROR_CANNOT_MAKE __MSABI_LONG(82)\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "ERROR_FAIL_I24 __MSABI_LONG(83)\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "ERROR_OUT_OF_STRUCTURES __MSABI_LONG(84)\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "ERROR_ALREADY_ASSIGNED __MSABI_LONG(85)\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "ERROR_INVALID_PASSWORD __MSABI_LONG(86)\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "ERROR_INVALID_PARAMETER __MSABI_LONG(87)\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "ERROR_NET_WRITE_FAULT __MSABI_LONG(88)\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "ERROR_NO_PROC_SLOTS __MSABI_LONG(89)\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "ERROR_TOO_MANY_SEMAPHORES __MSABI_LONG(100)\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "ERROR_EXCL_SEM_ALREADY_OWNED __MSABI_LONG(101)\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "ERROR_SEM_IS_SET __MSABI_LONG(102)\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "ERROR_TOO_MANY_SEM_REQUESTS __MSABI_LONG(103)\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "ERROR_INVALID_AT_INTERRUPT_TIME __MSABI_LONG(104)\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "ERROR_SEM_OWNER_DIED __MSABI_LONG(105)\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "ERROR_SEM_USER_LIMIT __MSABI_LONG(106)\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "ERROR_DISK_CHANGE __MSABI_LONG(107)\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "ERROR_DRIVE_LOCKED __MSABI_LONG(108)\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "ERROR_BROKEN_PIPE __MSABI_LONG(109)\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "ERROR_OPEN_FAILED __MSABI_LONG(110)\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "ERROR_BUFFER_OVERFLOW __MSABI_LONG(111)\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "ERROR_DISK_FULL __MSABI_LONG(112)\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "ERROR_NO_MORE_SEARCH_HANDLES __MSABI_LONG(113)\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "ERROR_INVALID_TARGET_HANDLE __MSABI_LONG(114)\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "ERROR_INVALID_CATEGORY __MSABI_LONG(117)\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "ERROR_INVALID_VERIFY_SWITCH __MSABI_LONG(118)\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "ERROR_BAD_DRIVER_LEVEL __MSABI_LONG(119)\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "ERROR_CALL_NOT_IMPLEMENTED __MSABI_LONG(120)\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "ERROR_SEM_TIMEOUT __MSABI_LONG(121)\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "ERROR_INSUFFICIENT_BUFFER __MSABI_LONG(122)\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "ERROR_INVALID_NAME __MSABI_LONG(123)\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "ERROR_INVALID_LEVEL __MSABI_LONG(124)\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "ERROR_NO_VOLUME_LABEL __MSABI_LONG(125)\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "ERROR_MOD_NOT_FOUND __MSABI_LONG(126)\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "ERROR_PROC_NOT_FOUND __MSABI_LONG(127)\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "ERROR_WAIT_NO_CHILDREN __MSABI_LONG(128)\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "ERROR_CHILD_NOT_COMPLETE __MSABI_LONG(129)\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "ERROR_DIRECT_ACCESS_HANDLE __MSABI_LONG(130)\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "ERROR_NEGATIVE_SEEK __MSABI_LONG(131)\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "ERROR_SEEK_ON_DEVICE __MSABI_LONG(132)\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "ERROR_IS_JOIN_TARGET __MSABI_LONG(133)\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "ERROR_IS_JOINED __MSABI_LONG(134)\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "ERROR_IS_SUBSTED __MSABI_LONG(135)\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "ERROR_NOT_JOINED __MSABI_LONG(136)\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "ERROR_NOT_SUBSTED __MSABI_LONG(137)\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "ERROR_JOIN_TO_JOIN __MSABI_LONG(138)\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "ERROR_SUBST_TO_SUBST __MSABI_LONG(139)\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "ERROR_JOIN_TO_SUBST __MSABI_LONG(140)\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "ERROR_SUBST_TO_JOIN __MSABI_LONG(141)\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "ERROR_BUSY_DRIVE __MSABI_LONG(142)\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "ERROR_SAME_DRIVE __MSABI_LONG(143)\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "ERROR_DIR_NOT_ROOT __MSABI_LONG(144)\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "ERROR_DIR_NOT_EMPTY __MSABI_LONG(145)\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "ERROR_IS_SUBST_PATH __MSABI_LONG(146)\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "ERROR_IS_JOIN_PATH __MSABI_LONG(147)\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "ERROR_PATH_BUSY __MSABI_LONG(148)\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "ERROR_IS_SUBST_TARGET __MSABI_LONG(149)\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "ERROR_SYSTEM_TRACE __MSABI_LONG(150)\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "ERROR_INVALID_EVENT_COUNT __MSABI_LONG(151)\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "ERROR_TOO_MANY_MUXWAITERS __MSABI_LONG(152)\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "ERROR_INVALID_LIST_FORMAT __MSABI_LONG(153)\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "ERROR_LABEL_TOO_LONG __MSABI_LONG(154)\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "ERROR_TOO_MANY_TCBS __MSABI_LONG(155)\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "ERROR_SIGNAL_REFUSED __MSABI_LONG(156)\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "ERROR_DISCARDED __MSABI_LONG(157)\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "ERROR_NOT_LOCKED __MSABI_LONG(158)\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "ERROR_BAD_THREADID_ADDR __MSABI_LONG(159)\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "ERROR_BAD_ARGUMENTS __MSABI_LONG(160)\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "ERROR_BAD_PATHNAME __MSABI_LONG(161)\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "ERROR_SIGNAL_PENDING __MSABI_LONG(162)\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "ERROR_MAX_THRDS_REACHED __MSABI_LONG(164)\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "ERROR_LOCK_FAILED __MSABI_LONG(167)\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "ERROR_BUSY __MSABI_LONG(170)\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "ERROR_CANCEL_VIOLATION __MSABI_LONG(173)\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "ERROR_ATOMIC_LOCKS_NOT_SUPPORTED __MSABI_LONG(174)\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "ERROR_INVALID_SEGMENT_NUMBER __MSABI_LONG(180)\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "ERROR_INVALID_ORDINAL __MSABI_LONG(182)\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "ERROR_ALREADY_EXISTS __MSABI_LONG(183)\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "ERROR_INVALID_FLAG_NUMBER __MSABI_LONG(186)\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "ERROR_SEM_NOT_FOUND __MSABI_LONG(187)\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "ERROR_INVALID_STARTING_CODESEG __MSABI_LONG(188)\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "ERROR_INVALID_STACKSEG __MSABI_LONG(189)\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "ERROR_INVALID_MODULETYPE __MSABI_LONG(190)\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "ERROR_INVALID_EXE_SIGNATURE __MSABI_LONG(191)\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "ERROR_EXE_MARKED_INVALID __MSABI_LONG(192)\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "ERROR_BAD_EXE_FORMAT __MSABI_LONG(193)\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "ERROR_ITERATED_DATA_EXCEEDS_64k __MSABI_LONG(194)\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "ERROR_INVALID_MINALLOCSIZE __MSABI_LONG(195)\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "ERROR_DYNLINK_FROM_INVALID_RING __MSABI_LONG(196)\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "ERROR_IOPL_NOT_ENABLED __MSABI_LONG(197)\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "ERROR_INVALID_SEGDPL __MSABI_LONG(198)\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "ERROR_AUTODATASEG_EXCEEDS_64k __MSABI_LONG(199)\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "ERROR_RING2SEG_MUST_BE_MOVABLE __MSABI_LONG(200)\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "ERROR_RELOC_CHAIN_XEEDS_SEGLIM __MSABI_LONG(201)\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "ERROR_INFLOOP_IN_RELOC_CHAIN __MSABI_LONG(202)\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "ERROR_ENVVAR_NOT_FOUND __MSABI_LONG(203)\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "ERROR_NO_SIGNAL_SENT __MSABI_LONG(205)\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "ERROR_FILENAME_EXCED_RANGE __MSABI_LONG(206)\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "ERROR_RING2_STACK_IN_USE __MSABI_LONG(207)\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "ERROR_META_EXPANSION_TOO_LONG __MSABI_LONG(208)\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "ERROR_INVALID_SIGNAL_NUMBER __MSABI_LONG(209)\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "ERROR_THREAD_1_INACTIVE __MSABI_LONG(210)\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "ERROR_LOCKED __MSABI_LONG(212)\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "ERROR_TOO_MANY_MODULES __MSABI_LONG(214)\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "ERROR_NESTING_NOT_ALLOWED __MSABI_LONG(215)\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "ERROR_EXE_MACHINE_TYPE_MISMATCH __MSABI_LONG(216)\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY __MSABI_LONG(217)\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY __MSABI_LONG(218)\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "ERROR_BAD_PIPE __MSABI_LONG(230)\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "ERROR_PIPE_BUSY __MSABI_LONG(231)\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "ERROR_NO_DATA __MSABI_LONG(232)\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "ERROR_PIPE_NOT_CONNECTED __MSABI_LONG(233)\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "ERROR_MORE_DATA __MSABI_LONG(234)\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "ERROR_VC_DISCONNECTED __MSABI_LONG(240)\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "ERROR_INVALID_EA_NAME __MSABI_LONG(254)\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "ERROR_EA_LIST_INCONSISTENT __MSABI_LONG(255)\0"
	.byte	0x1
	.uleb128 0xde
	.ascii "WAIT_TIMEOUT __MSABI_LONG(258)\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "ERROR_NO_MORE_ITEMS __MSABI_LONG(259)\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "ERROR_CANNOT_COPY __MSABI_LONG(266)\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "ERROR_DIRECTORY __MSABI_LONG(267)\0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "ERROR_EAS_DIDNT_FIT __MSABI_LONG(275)\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "ERROR_EA_FILE_CORRUPT __MSABI_LONG(276)\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "ERROR_EA_TABLE_FULL __MSABI_LONG(277)\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "ERROR_INVALID_EA_HANDLE __MSABI_LONG(278)\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "ERROR_EAS_NOT_SUPPORTED __MSABI_LONG(282)\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "ERROR_NOT_OWNER __MSABI_LONG(288)\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "ERROR_TOO_MANY_POSTS __MSABI_LONG(298)\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "ERROR_PARTIAL_COPY __MSABI_LONG(299)\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "ERROR_OPLOCK_NOT_GRANTED __MSABI_LONG(300)\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "ERROR_INVALID_OPLOCK_PROTOCOL __MSABI_LONG(301)\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "ERROR_DISK_TOO_FRAGMENTED __MSABI_LONG(302)\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "ERROR_DELETE_PENDING __MSABI_LONG(303)\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "ERROR_MR_MID_NOT_FOUND __MSABI_LONG(317)\0"
	.byte	0x1
	.uleb128 0xef
	.ascii "ERROR_SCOPE_NOT_FOUND __MSABI_LONG(318)\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "ERROR_INVALID_ADDRESS __MSABI_LONG(487)\0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "ERROR_ARITHMETIC_OVERFLOW __MSABI_LONG(534)\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "ERROR_PIPE_CONNECTED __MSABI_LONG(535)\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "ERROR_PIPE_LISTENING __MSABI_LONG(536)\0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "ERROR_EA_ACCESS_DENIED __MSABI_LONG(994)\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "ERROR_OPERATION_ABORTED __MSABI_LONG(995)\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "ERROR_IO_INCOMPLETE __MSABI_LONG(996)\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "ERROR_IO_PENDING __MSABI_LONG(997)\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "ERROR_NOACCESS __MSABI_LONG(998)\0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "ERROR_SWAPERROR __MSABI_LONG(999)\0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "ERROR_STACK_OVERFLOW __MSABI_LONG(1001)\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "ERROR_INVALID_MESSAGE __MSABI_LONG(1002)\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "ERROR_CAN_NOT_COMPLETE __MSABI_LONG(1003)\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "ERROR_INVALID_FLAGS __MSABI_LONG(1004)\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "ERROR_UNRECOGNIZED_VOLUME __MSABI_LONG(1005)\0"
	.byte	0x1
	.uleb128 0xff
	.ascii "ERROR_FILE_INVALID __MSABI_LONG(1006)\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "ERROR_FULLSCREEN_MODE __MSABI_LONG(1007)\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "ERROR_NO_TOKEN __MSABI_LONG(1008)\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "ERROR_BADDB __MSABI_LONG(1009)\0"
	.byte	0x1
	.uleb128 0x103
	.ascii "ERROR_BADKEY __MSABI_LONG(1010)\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "ERROR_CANTOPEN __MSABI_LONG(1011)\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "ERROR_CANTREAD __MSABI_LONG(1012)\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "ERROR_CANTWRITE __MSABI_LONG(1013)\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "ERROR_REGISTRY_RECOVERED __MSABI_LONG(1014)\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "ERROR_REGISTRY_CORRUPT __MSABI_LONG(1015)\0"
	.byte	0x1
	.uleb128 0x109
	.ascii "ERROR_REGISTRY_IO_FAILED __MSABI_LONG(1016)\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "ERROR_NOT_REGISTRY_FILE __MSABI_LONG(1017)\0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "ERROR_KEY_DELETED __MSABI_LONG(1018)\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "ERROR_NO_LOG_SPACE __MSABI_LONG(1019)\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "ERROR_KEY_HAS_CHILDREN __MSABI_LONG(1020)\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "ERROR_CHILD_MUST_BE_VOLATILE __MSABI_LONG(1021)\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "ERROR_NOTIFY_ENUM_DIR __MSABI_LONG(1022)\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "ERROR_DEPENDENT_SERVICES_RUNNING __MSABI_LONG(1051)\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "ERROR_INVALID_SERVICE_CONTROL __MSABI_LONG(1052)\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "ERROR_SERVICE_REQUEST_TIMEOUT __MSABI_LONG(1053)\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "ERROR_SERVICE_NO_THREAD __MSABI_LONG(1054)\0"
	.byte	0x1
	.uleb128 0x114
	.ascii "ERROR_SERVICE_DATABASE_LOCKED __MSABI_LONG(1055)\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "ERROR_SERVICE_ALREADY_RUNNING __MSABI_LONG(1056)\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "ERROR_INVALID_SERVICE_ACCOUNT __MSABI_LONG(1057)\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "ERROR_SERVICE_DISABLED __MSABI_LONG(1058)\0"
	.byte	0x1
	.uleb128 0x118
	.ascii "ERROR_CIRCULAR_DEPENDENCY __MSABI_LONG(1059)\0"
	.byte	0x1
	.uleb128 0x119
	.ascii "ERROR_SERVICE_DOES_NOT_EXIST __MSABI_LONG(1060)\0"
	.byte	0x1
	.uleb128 0x11a
	.ascii "ERROR_SERVICE_CANNOT_ACCEPT_CTRL __MSABI_LONG(1061)\0"
	.byte	0x1
	.uleb128 0x11b
	.ascii "ERROR_SERVICE_NOT_ACTIVE __MSABI_LONG(1062)\0"
	.byte	0x1
	.uleb128 0x11c
	.ascii "ERROR_FAILED_SERVICE_CONTROLLER_CONNECT __MSABI_LONG(1063)\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "ERROR_EXCEPTION_IN_SERVICE __MSABI_LONG(1064)\0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "ERROR_DATABASE_DOES_NOT_EXIST __MSABI_LONG(1065)\0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "ERROR_SERVICE_SPECIFIC_ERROR __MSABI_LONG(1066)\0"
	.byte	0x1
	.uleb128 0x120
	.ascii "ERROR_PROCESS_ABORTED __MSABI_LONG(1067)\0"
	.byte	0x1
	.uleb128 0x121
	.ascii "ERROR_SERVICE_DEPENDENCY_FAIL __MSABI_LONG(1068)\0"
	.byte	0x1
	.uleb128 0x122
	.ascii "ERROR_SERVICE_LOGON_FAILED __MSABI_LONG(1069)\0"
	.byte	0x1
	.uleb128 0x123
	.ascii "ERROR_SERVICE_START_HANG __MSABI_LONG(1070)\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "ERROR_INVALID_SERVICE_LOCK __MSABI_LONG(1071)\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "ERROR_SERVICE_MARKED_FOR_DELETE __MSABI_LONG(1072)\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "ERROR_SERVICE_EXISTS __MSABI_LONG(1073)\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "ERROR_ALREADY_RUNNING_LKG __MSABI_LONG(1074)\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "ERROR_SERVICE_DEPENDENCY_DELETED __MSABI_LONG(1075)\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "ERROR_BOOT_ALREADY_ACCEPTED __MSABI_LONG(1076)\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "ERROR_SERVICE_NEVER_STARTED __MSABI_LONG(1077)\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "ERROR_DUPLICATE_SERVICE_NAME __MSABI_LONG(1078)\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "ERROR_DIFFERENT_SERVICE_ACCOUNT __MSABI_LONG(1079)\0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "ERROR_CANNOT_DETECT_DRIVER_FAILURE __MSABI_LONG(1080)\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "ERROR_CANNOT_DETECT_PROCESS_ABORT __MSABI_LONG(1081)\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "ERROR_NO_RECOVERY_PROGRAM __MSABI_LONG(1082)\0"
	.byte	0x1
	.uleb128 0x130
	.ascii "ERROR_SERVICE_NOT_IN_EXE __MSABI_LONG(1083)\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "ERROR_NOT_SAFEBOOT_SERVICE __MSABI_LONG(1084)\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "ERROR_END_OF_MEDIA __MSABI_LONG(1100)\0"
	.byte	0x1
	.uleb128 0x133
	.ascii "ERROR_FILEMARK_DETECTED __MSABI_LONG(1101)\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "ERROR_BEGINNING_OF_MEDIA __MSABI_LONG(1102)\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "ERROR_SETMARK_DETECTED __MSABI_LONG(1103)\0"
	.byte	0x1
	.uleb128 0x136
	.ascii "ERROR_NO_DATA_DETECTED __MSABI_LONG(1104)\0"
	.byte	0x1
	.uleb128 0x137
	.ascii "ERROR_PARTITION_FAILURE __MSABI_LONG(1105)\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "ERROR_INVALID_BLOCK_LENGTH __MSABI_LONG(1106)\0"
	.byte	0x1
	.uleb128 0x139
	.ascii "ERROR_DEVICE_NOT_PARTITIONED __MSABI_LONG(1107)\0"
	.byte	0x1
	.uleb128 0x13a
	.ascii "ERROR_UNABLE_TO_LOCK_MEDIA __MSABI_LONG(1108)\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "ERROR_UNABLE_TO_UNLOAD_MEDIA __MSABI_LONG(1109)\0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "ERROR_MEDIA_CHANGED __MSABI_LONG(1110)\0"
	.byte	0x1
	.uleb128 0x13d
	.ascii "ERROR_BUS_RESET __MSABI_LONG(1111)\0"
	.byte	0x1
	.uleb128 0x13e
	.ascii "ERROR_NO_MEDIA_IN_DRIVE __MSABI_LONG(1112)\0"
	.byte	0x1
	.uleb128 0x13f
	.ascii "ERROR_NO_UNICODE_TRANSLATION __MSABI_LONG(1113)\0"
	.byte	0x1
	.uleb128 0x140
	.ascii "ERROR_DLL_INIT_FAILED __MSABI_LONG(1114)\0"
	.byte	0x1
	.uleb128 0x141
	.ascii "ERROR_SHUTDOWN_IN_PROGRESS __MSABI_LONG(1115)\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "ERROR_NO_SHUTDOWN_IN_PROGRESS __MSABI_LONG(1116)\0"
	.byte	0x1
	.uleb128 0x143
	.ascii "ERROR_IO_DEVICE __MSABI_LONG(1117)\0"
	.byte	0x1
	.uleb128 0x144
	.ascii "ERROR_SERIAL_NO_DEVICE __MSABI_LONG(1118)\0"
	.byte	0x1
	.uleb128 0x145
	.ascii "ERROR_IRQ_BUSY __MSABI_LONG(1119)\0"
	.byte	0x1
	.uleb128 0x146
	.ascii "ERROR_MORE_WRITES __MSABI_LONG(1120)\0"
	.byte	0x1
	.uleb128 0x147
	.ascii "ERROR_COUNTER_TIMEOUT __MSABI_LONG(1121)\0"
	.byte	0x1
	.uleb128 0x148
	.ascii "ERROR_FLOPPY_ID_MARK_NOT_FOUND __MSABI_LONG(1122)\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "ERROR_FLOPPY_WRONG_CYLINDER __MSABI_LONG(1123)\0"
	.byte	0x1
	.uleb128 0x14a
	.ascii "ERROR_FLOPPY_UNKNOWN_ERROR __MSABI_LONG(1124)\0"
	.byte	0x1
	.uleb128 0x14b
	.ascii "ERROR_FLOPPY_BAD_REGISTERS __MSABI_LONG(1125)\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "ERROR_DISK_RECALIBRATE_FAILED __MSABI_LONG(1126)\0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "ERROR_DISK_OPERATION_FAILED __MSABI_LONG(1127)\0"
	.byte	0x1
	.uleb128 0x14e
	.ascii "ERROR_DISK_RESET_FAILED __MSABI_LONG(1128)\0"
	.byte	0x1
	.uleb128 0x14f
	.ascii "ERROR_EOM_OVERFLOW __MSABI_LONG(1129)\0"
	.byte	0x1
	.uleb128 0x150
	.ascii "ERROR_NOT_ENOUGH_SERVER_MEMORY __MSABI_LONG(1130)\0"
	.byte	0x1
	.uleb128 0x151
	.ascii "ERROR_POSSIBLE_DEADLOCK __MSABI_LONG(1131)\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "ERROR_MAPPED_ALIGNMENT __MSABI_LONG(1132)\0"
	.byte	0x1
	.uleb128 0x153
	.ascii "ERROR_SET_POWER_STATE_VETOED __MSABI_LONG(1140)\0"
	.byte	0x1
	.uleb128 0x154
	.ascii "ERROR_SET_POWER_STATE_FAILED __MSABI_LONG(1141)\0"
	.byte	0x1
	.uleb128 0x155
	.ascii "ERROR_TOO_MANY_LINKS __MSABI_LONG(1142)\0"
	.byte	0x1
	.uleb128 0x156
	.ascii "ERROR_OLD_WIN_VERSION __MSABI_LONG(1150)\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "ERROR_APP_WRONG_OS __MSABI_LONG(1151)\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "ERROR_SINGLE_INSTANCE_APP __MSABI_LONG(1152)\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "ERROR_RMODE_APP __MSABI_LONG(1153)\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "ERROR_INVALID_DLL __MSABI_LONG(1154)\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "ERROR_NO_ASSOCIATION __MSABI_LONG(1155)\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "ERROR_DDE_FAIL __MSABI_LONG(1156)\0"
	.byte	0x1
	.uleb128 0x15d
	.ascii "ERROR_DLL_NOT_FOUND __MSABI_LONG(1157)\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "ERROR_NO_MORE_USER_HANDLES __MSABI_LONG(1158)\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "ERROR_MESSAGE_SYNC_ONLY __MSABI_LONG(1159)\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "ERROR_SOURCE_ELEMENT_EMPTY __MSABI_LONG(1160)\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "ERROR_DESTINATION_ELEMENT_FULL __MSABI_LONG(1161)\0"
	.byte	0x1
	.uleb128 0x162
	.ascii "ERROR_ILLEGAL_ELEMENT_ADDRESS __MSABI_LONG(1162)\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "ERROR_MAGAZINE_NOT_PRESENT __MSABI_LONG(1163)\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "ERROR_DEVICE_REINITIALIZATION_NEEDED __MSABI_LONG(1164)\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "ERROR_DEVICE_REQUIRES_CLEANING __MSABI_LONG(1165)\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "ERROR_DEVICE_DOOR_OPEN __MSABI_LONG(1166)\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "ERROR_DEVICE_NOT_CONNECTED __MSABI_LONG(1167)\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "ERROR_NOT_FOUND __MSABI_LONG(1168)\0"
	.byte	0x1
	.uleb128 0x169
	.ascii "ERROR_NO_MATCH __MSABI_LONG(1169)\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "ERROR_SET_NOT_FOUND __MSABI_LONG(1170)\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "ERROR_POINT_NOT_FOUND __MSABI_LONG(1171)\0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "ERROR_NO_TRACKING_SERVICE __MSABI_LONG(1172)\0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "ERROR_NO_VOLUME_ID __MSABI_LONG(1173)\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "ERROR_UNABLE_TO_REMOVE_REPLACED __MSABI_LONG(1175)\0"
	.byte	0x1
	.uleb128 0x16f
	.ascii "ERROR_UNABLE_TO_MOVE_REPLACEMENT __MSABI_LONG(1176)\0"
	.byte	0x1
	.uleb128 0x170
	.ascii "ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 __MSABI_LONG(1177)\0"
	.byte	0x1
	.uleb128 0x171
	.ascii "ERROR_JOURNAL_DELETE_IN_PROGRESS __MSABI_LONG(1178)\0"
	.byte	0x1
	.uleb128 0x172
	.ascii "ERROR_JOURNAL_NOT_ACTIVE __MSABI_LONG(1179)\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "ERROR_POTENTIAL_FILE_FOUND __MSABI_LONG(1180)\0"
	.byte	0x1
	.uleb128 0x174
	.ascii "ERROR_JOURNAL_ENTRY_DELETED __MSABI_LONG(1181)\0"
	.byte	0x1
	.uleb128 0x175
	.ascii "ERROR_BAD_DEVICE __MSABI_LONG(1200)\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "ERROR_CONNECTION_UNAVAIL __MSABI_LONG(1201)\0"
	.byte	0x1
	.uleb128 0x177
	.ascii "ERROR_DEVICE_ALREADY_REMEMBERED __MSABI_LONG(1202)\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "ERROR_NO_NET_OR_BAD_PATH __MSABI_LONG(1203)\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "ERROR_BAD_PROVIDER __MSABI_LONG(1204)\0"
	.byte	0x1
	.uleb128 0x17a
	.ascii "ERROR_CANNOT_OPEN_PROFILE __MSABI_LONG(1205)\0"
	.byte	0x1
	.uleb128 0x17b
	.ascii "ERROR_BAD_PROFILE __MSABI_LONG(1206)\0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "ERROR_NOT_CONTAINER __MSABI_LONG(1207)\0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "ERROR_EXTENDED_ERROR __MSABI_LONG(1208)\0"
	.byte	0x1
	.uleb128 0x17e
	.ascii "ERROR_INVALID_GROUPNAME __MSABI_LONG(1209)\0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "ERROR_INVALID_COMPUTERNAME __MSABI_LONG(1210)\0"
	.byte	0x1
	.uleb128 0x180
	.ascii "ERROR_INVALID_EVENTNAME __MSABI_LONG(1211)\0"
	.byte	0x1
	.uleb128 0x181
	.ascii "ERROR_INVALID_DOMAINNAME __MSABI_LONG(1212)\0"
	.byte	0x1
	.uleb128 0x182
	.ascii "ERROR_INVALID_SERVICENAME __MSABI_LONG(1213)\0"
	.byte	0x1
	.uleb128 0x183
	.ascii "ERROR_INVALID_NETNAME __MSABI_LONG(1214)\0"
	.byte	0x1
	.uleb128 0x184
	.ascii "ERROR_INVALID_SHARENAME __MSABI_LONG(1215)\0"
	.byte	0x1
	.uleb128 0x185
	.ascii "ERROR_INVALID_PASSWORDNAME __MSABI_LONG(1216)\0"
	.byte	0x1
	.uleb128 0x186
	.ascii "ERROR_INVALID_MESSAGENAME __MSABI_LONG(1217)\0"
	.byte	0x1
	.uleb128 0x187
	.ascii "ERROR_INVALID_MESSAGEDEST __MSABI_LONG(1218)\0"
	.byte	0x1
	.uleb128 0x188
	.ascii "ERROR_SESSION_CREDENTIAL_CONFLICT __MSABI_LONG(1219)\0"
	.byte	0x1
	.uleb128 0x189
	.ascii "ERROR_REMOTE_SESSION_LIMIT_EXCEEDED __MSABI_LONG(1220)\0"
	.byte	0x1
	.uleb128 0x18a
	.ascii "ERROR_DUP_DOMAINNAME __MSABI_LONG(1221)\0"
	.byte	0x1
	.uleb128 0x18b
	.ascii "ERROR_NO_NETWORK __MSABI_LONG(1222)\0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "ERROR_CANCELLED __MSABI_LONG(1223)\0"
	.byte	0x1
	.uleb128 0x18d
	.ascii "ERROR_USER_MAPPED_FILE __MSABI_LONG(1224)\0"
	.byte	0x1
	.uleb128 0x18e
	.ascii "ERROR_CONNECTION_REFUSED __MSABI_LONG(1225)\0"
	.byte	0x1
	.uleb128 0x18f
	.ascii "ERROR_GRACEFUL_DISCONNECT __MSABI_LONG(1226)\0"
	.byte	0x1
	.uleb128 0x190
	.ascii "ERROR_ADDRESS_ALREADY_ASSOCIATED __MSABI_LONG(1227)\0"
	.byte	0x1
	.uleb128 0x191
	.ascii "ERROR_ADDRESS_NOT_ASSOCIATED __MSABI_LONG(1228)\0"
	.byte	0x1
	.uleb128 0x192
	.ascii "ERROR_CONNECTION_INVALID __MSABI_LONG(1229)\0"
	.byte	0x1
	.uleb128 0x193
	.ascii "ERROR_CONNECTION_ACTIVE __MSABI_LONG(1230)\0"
	.byte	0x1
	.uleb128 0x194
	.ascii "ERROR_NETWORK_UNREACHABLE __MSABI_LONG(1231)\0"
	.byte	0x1
	.uleb128 0x195
	.ascii "ERROR_HOST_UNREACHABLE __MSABI_LONG(1232)\0"
	.byte	0x1
	.uleb128 0x196
	.ascii "ERROR_PROTOCOL_UNREACHABLE __MSABI_LONG(1233)\0"
	.byte	0x1
	.uleb128 0x197
	.ascii "ERROR_PORT_UNREACHABLE __MSABI_LONG(1234)\0"
	.byte	0x1
	.uleb128 0x198
	.ascii "ERROR_REQUEST_ABORTED __MSABI_LONG(1235)\0"
	.byte	0x1
	.uleb128 0x199
	.ascii "ERROR_CONNECTION_ABORTED __MSABI_LONG(1236)\0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "ERROR_RETRY __MSABI_LONG(1237)\0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "ERROR_CONNECTION_COUNT_LIMIT __MSABI_LONG(1238)\0"
	.byte	0x1
	.uleb128 0x19c
	.ascii "ERROR_LOGIN_TIME_RESTRICTION __MSABI_LONG(1239)\0"
	.byte	0x1
	.uleb128 0x19d
	.ascii "ERROR_LOGIN_WKSTA_RESTRICTION __MSABI_LONG(1240)\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "ERROR_INCORRECT_ADDRESS __MSABI_LONG(1241)\0"
	.byte	0x1
	.uleb128 0x19f
	.ascii "ERROR_ALREADY_REGISTERED __MSABI_LONG(1242)\0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "ERROR_SERVICE_NOT_FOUND __MSABI_LONG(1243)\0"
	.byte	0x1
	.uleb128 0x1a1
	.ascii "ERROR_NOT_AUTHENTICATED __MSABI_LONG(1244)\0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "ERROR_NOT_LOGGED_ON __MSABI_LONG(1245)\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "ERROR_CONTINUE __MSABI_LONG(1246)\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "ERROR_ALREADY_INITIALIZED __MSABI_LONG(1247)\0"
	.byte	0x1
	.uleb128 0x1a5
	.ascii "ERROR_NO_MORE_DEVICES __MSABI_LONG(1248)\0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "ERROR_NO_SUCH_SITE __MSABI_LONG(1249)\0"
	.byte	0x1
	.uleb128 0x1a7
	.ascii "ERROR_DOMAIN_CONTROLLER_EXISTS __MSABI_LONG(1250)\0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "ERROR_ONLY_IF_CONNECTED __MSABI_LONG(1251)\0"
	.byte	0x1
	.uleb128 0x1a9
	.ascii "ERROR_OVERRIDE_NOCHANGES __MSABI_LONG(1252)\0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "ERROR_BAD_USER_PROFILE __MSABI_LONG(1253)\0"
	.byte	0x1
	.uleb128 0x1ab
	.ascii "ERROR_NOT_SUPPORTED_ON_SBS __MSABI_LONG(1254)\0"
	.byte	0x1
	.uleb128 0x1ac
	.ascii "ERROR_SERVER_SHUTDOWN_IN_PROGRESS __MSABI_LONG(1255)\0"
	.byte	0x1
	.uleb128 0x1ad
	.ascii "ERROR_HOST_DOWN __MSABI_LONG(1256)\0"
	.byte	0x1
	.uleb128 0x1ae
	.ascii "ERROR_NON_ACCOUNT_SID __MSABI_LONG(1257)\0"
	.byte	0x1
	.uleb128 0x1af
	.ascii "ERROR_NON_DOMAIN_SID __MSABI_LONG(1258)\0"
	.byte	0x1
	.uleb128 0x1b0
	.ascii "ERROR_APPHELP_BLOCK __MSABI_LONG(1259)\0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "ERROR_ACCESS_DISABLED_BY_POLICY __MSABI_LONG(1260)\0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "ERROR_REG_NAT_CONSUMPTION __MSABI_LONG(1261)\0"
	.byte	0x1
	.uleb128 0x1b3
	.ascii "ERROR_CSCSHARE_OFFLINE __MSABI_LONG(1262)\0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "ERROR_PKINIT_FAILURE __MSABI_LONG(1263)\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "ERROR_SMARTCARD_SUBSYSTEM_FAILURE __MSABI_LONG(1264)\0"
	.byte	0x1
	.uleb128 0x1b6
	.ascii "ERROR_DOWNGRADE_DETECTED __MSABI_LONG(1265)\0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "ERROR_MACHINE_LOCKED __MSABI_LONG(1271)\0"
	.byte	0x1
	.uleb128 0x1b8
	.ascii "ERROR_CALLBACK_SUPPLIED_INVALID_DATA __MSABI_LONG(1273)\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED __MSABI_LONG(1274)\0"
	.byte	0x1
	.uleb128 0x1ba
	.ascii "ERROR_DRIVER_BLOCKED __MSABI_LONG(1275)\0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "ERROR_INVALID_IMPORT_OF_NON_DLL __MSABI_LONG(1276)\0"
	.byte	0x1
	.uleb128 0x1bc
	.ascii "ERROR_ACCESS_DISABLED_WEBBLADE __MSABI_LONG(1277)\0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER __MSABI_LONG(1278)\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "ERROR_RECOVERY_FAILURE __MSABI_LONG(1279)\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "ERROR_ALREADY_FIBER __MSABI_LONG(1280)\0"
	.byte	0x1
	.uleb128 0x1c0
	.ascii "ERROR_ALREADY_THREAD __MSABI_LONG(1281)\0"
	.byte	0x1
	.uleb128 0x1c1
	.ascii "ERROR_STACK_BUFFER_OVERRUN __MSABI_LONG(1282)\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "ERROR_PARAMETER_QUOTA_EXCEEDED __MSABI_LONG(1283)\0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "ERROR_DEBUGGER_INACTIVE __MSABI_LONG(1284)\0"
	.byte	0x1
	.uleb128 0x1c4
	.ascii "ERROR_DELAY_LOAD_FAILED __MSABI_LONG(1285)\0"
	.byte	0x1
	.uleb128 0x1c5
	.ascii "ERROR_VDM_DISALLOWED __MSABI_LONG(1286)\0"
	.byte	0x1
	.uleb128 0x1c6
	.ascii "ERROR_UNIDENTIFIED_ERROR __MSABI_LONG(1287)\0"
	.byte	0x1
	.uleb128 0x1c7
	.ascii "ERROR_NOT_ALL_ASSIGNED __MSABI_LONG(1300)\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "ERROR_SOME_NOT_MAPPED __MSABI_LONG(1301)\0"
	.byte	0x1
	.uleb128 0x1c9
	.ascii "ERROR_NO_QUOTAS_FOR_ACCOUNT __MSABI_LONG(1302)\0"
	.byte	0x1
	.uleb128 0x1ca
	.ascii "ERROR_LOCAL_USER_SESSION_KEY __MSABI_LONG(1303)\0"
	.byte	0x1
	.uleb128 0x1cb
	.ascii "ERROR_NULL_LM_PASSWORD __MSABI_LONG(1304)\0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "ERROR_UNKNOWN_REVISION __MSABI_LONG(1305)\0"
	.byte	0x1
	.uleb128 0x1cd
	.ascii "ERROR_REVISION_MISMATCH __MSABI_LONG(1306)\0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "ERROR_INVALID_OWNER __MSABI_LONG(1307)\0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "ERROR_INVALID_PRIMARY_GROUP __MSABI_LONG(1308)\0"
	.byte	0x1
	.uleb128 0x1d0
	.ascii "ERROR_NO_IMPERSONATION_TOKEN __MSABI_LONG(1309)\0"
	.byte	0x1
	.uleb128 0x1d1
	.ascii "ERROR_CANT_DISABLE_MANDATORY __MSABI_LONG(1310)\0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "ERROR_NO_LOGON_SERVERS __MSABI_LONG(1311)\0"
	.byte	0x1
	.uleb128 0x1d3
	.ascii "ERROR_NO_SUCH_LOGON_SESSION __MSABI_LONG(1312)\0"
	.byte	0x1
	.uleb128 0x1d4
	.ascii "ERROR_NO_SUCH_PRIVILEGE __MSABI_LONG(1313)\0"
	.byte	0x1
	.uleb128 0x1d5
	.ascii "ERROR_PRIVILEGE_NOT_HELD __MSABI_LONG(1314)\0"
	.byte	0x1
	.uleb128 0x1d6
	.ascii "ERROR_INVALID_ACCOUNT_NAME __MSABI_LONG(1315)\0"
	.byte	0x1
	.uleb128 0x1d7
	.ascii "ERROR_USER_EXISTS __MSABI_LONG(1316)\0"
	.byte	0x1
	.uleb128 0x1d8
	.ascii "ERROR_NO_SUCH_USER __MSABI_LONG(1317)\0"
	.byte	0x1
	.uleb128 0x1d9
	.ascii "ERROR_GROUP_EXISTS __MSABI_LONG(1318)\0"
	.byte	0x1
	.uleb128 0x1da
	.ascii "ERROR_NO_SUCH_GROUP __MSABI_LONG(1319)\0"
	.byte	0x1
	.uleb128 0x1db
	.ascii "ERROR_MEMBER_IN_GROUP __MSABI_LONG(1320)\0"
	.byte	0x1
	.uleb128 0x1dc
	.ascii "ERROR_MEMBER_NOT_IN_GROUP __MSABI_LONG(1321)\0"
	.byte	0x1
	.uleb128 0x1dd
	.ascii "ERROR_LAST_ADMIN __MSABI_LONG(1322)\0"
	.byte	0x1
	.uleb128 0x1de
	.ascii "ERROR_WRONG_PASSWORD __MSABI_LONG(1323)\0"
	.byte	0x1
	.uleb128 0x1df
	.ascii "ERROR_ILL_FORMED_PASSWORD __MSABI_LONG(1324)\0"
	.byte	0x1
	.uleb128 0x1e0
	.ascii "ERROR_PASSWORD_RESTRICTION __MSABI_LONG(1325)\0"
	.byte	0x1
	.uleb128 0x1e1
	.ascii "ERROR_LOGON_FAILURE __MSABI_LONG(1326)\0"
	.byte	0x1
	.uleb128 0x1e2
	.ascii "ERROR_ACCOUNT_RESTRICTION __MSABI_LONG(1327)\0"
	.byte	0x1
	.uleb128 0x1e3
	.ascii "ERROR_INVALID_LOGON_HOURS __MSABI_LONG(1328)\0"
	.byte	0x1
	.uleb128 0x1e4
	.ascii "ERROR_INVALID_WORKSTATION __MSABI_LONG(1329)\0"
	.byte	0x1
	.uleb128 0x1e5
	.ascii "ERROR_PASSWORD_EXPIRED __MSABI_LONG(1330)\0"
	.byte	0x1
	.uleb128 0x1e6
	.ascii "ERROR_ACCOUNT_DISABLED __MSABI_LONG(1331)\0"
	.byte	0x1
	.uleb128 0x1e7
	.ascii "ERROR_NONE_MAPPED __MSABI_LONG(1332)\0"
	.byte	0x1
	.uleb128 0x1e8
	.ascii "ERROR_TOO_MANY_LUIDS_REQUESTED __MSABI_LONG(1333)\0"
	.byte	0x1
	.uleb128 0x1e9
	.ascii "ERROR_LUIDS_EXHAUSTED __MSABI_LONG(1334)\0"
	.byte	0x1
	.uleb128 0x1ea
	.ascii "ERROR_INVALID_SUB_AUTHORITY __MSABI_LONG(1335)\0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "ERROR_INVALID_ACL __MSABI_LONG(1336)\0"
	.byte	0x1
	.uleb128 0x1ec
	.ascii "ERROR_INVALID_SID __MSABI_LONG(1337)\0"
	.byte	0x1
	.uleb128 0x1ed
	.ascii "ERROR_INVALID_SECURITY_DESCR __MSABI_LONG(1338)\0"
	.byte	0x1
	.uleb128 0x1ee
	.ascii "ERROR_BAD_INHERITANCE_ACL __MSABI_LONG(1340)\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "ERROR_SERVER_DISABLED __MSABI_LONG(1341)\0"
	.byte	0x1
	.uleb128 0x1f0
	.ascii "ERROR_SERVER_NOT_DISABLED __MSABI_LONG(1342)\0"
	.byte	0x1
	.uleb128 0x1f1
	.ascii "ERROR_INVALID_ID_AUTHORITY __MSABI_LONG(1343)\0"
	.byte	0x1
	.uleb128 0x1f2
	.ascii "ERROR_ALLOTTED_SPACE_EXCEEDED __MSABI_LONG(1344)\0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "ERROR_INVALID_GROUP_ATTRIBUTES __MSABI_LONG(1345)\0"
	.byte	0x1
	.uleb128 0x1f4
	.ascii "ERROR_BAD_IMPERSONATION_LEVEL __MSABI_LONG(1346)\0"
	.byte	0x1
	.uleb128 0x1f5
	.ascii "ERROR_CANT_OPEN_ANONYMOUS __MSABI_LONG(1347)\0"
	.byte	0x1
	.uleb128 0x1f6
	.ascii "ERROR_BAD_VALIDATION_CLASS __MSABI_LONG(1348)\0"
	.byte	0x1
	.uleb128 0x1f7
	.ascii "ERROR_BAD_TOKEN_TYPE __MSABI_LONG(1349)\0"
	.byte	0x1
	.uleb128 0x1f8
	.ascii "ERROR_NO_SECURITY_ON_OBJECT __MSABI_LONG(1350)\0"
	.byte	0x1
	.uleb128 0x1f9
	.ascii "ERROR_CANT_ACCESS_DOMAIN_INFO __MSABI_LONG(1351)\0"
	.byte	0x1
	.uleb128 0x1fa
	.ascii "ERROR_INVALID_SERVER_STATE __MSABI_LONG(1352)\0"
	.byte	0x1
	.uleb128 0x1fb
	.ascii "ERROR_INVALID_DOMAIN_STATE __MSABI_LONG(1353)\0"
	.byte	0x1
	.uleb128 0x1fc
	.ascii "ERROR_INVALID_DOMAIN_ROLE __MSABI_LONG(1354)\0"
	.byte	0x1
	.uleb128 0x1fd
	.ascii "ERROR_NO_SUCH_DOMAIN __MSABI_LONG(1355)\0"
	.byte	0x1
	.uleb128 0x1fe
	.ascii "ERROR_DOMAIN_EXISTS __MSABI_LONG(1356)\0"
	.byte	0x1
	.uleb128 0x1ff
	.ascii "ERROR_DOMAIN_LIMIT_EXCEEDED __MSABI_LONG(1357)\0"
	.byte	0x1
	.uleb128 0x200
	.ascii "ERROR_INTERNAL_DB_CORRUPTION __MSABI_LONG(1358)\0"
	.byte	0x1
	.uleb128 0x201
	.ascii "ERROR_INTERNAL_ERROR __MSABI_LONG(1359)\0"
	.byte	0x1
	.uleb128 0x202
	.ascii "ERROR_GENERIC_NOT_MAPPED __MSABI_LONG(1360)\0"
	.byte	0x1
	.uleb128 0x203
	.ascii "ERROR_BAD_DESCRIPTOR_FORMAT __MSABI_LONG(1361)\0"
	.byte	0x1
	.uleb128 0x204
	.ascii "ERROR_NOT_LOGON_PROCESS __MSABI_LONG(1362)\0"
	.byte	0x1
	.uleb128 0x205
	.ascii "ERROR_LOGON_SESSION_EXISTS __MSABI_LONG(1363)\0"
	.byte	0x1
	.uleb128 0x206
	.ascii "ERROR_NO_SUCH_PACKAGE __MSABI_LONG(1364)\0"
	.byte	0x1
	.uleb128 0x207
	.ascii "ERROR_BAD_LOGON_SESSION_STATE __MSABI_LONG(1365)\0"
	.byte	0x1
	.uleb128 0x208
	.ascii "ERROR_LOGON_SESSION_COLLISION __MSABI_LONG(1366)\0"
	.byte	0x1
	.uleb128 0x209
	.ascii "ERROR_INVALID_LOGON_TYPE __MSABI_LONG(1367)\0"
	.byte	0x1
	.uleb128 0x20a
	.ascii "ERROR_CANNOT_IMPERSONATE __MSABI_LONG(1368)\0"
	.byte	0x1
	.uleb128 0x20b
	.ascii "ERROR_RXACT_INVALID_STATE __MSABI_LONG(1369)\0"
	.byte	0x1
	.uleb128 0x20c
	.ascii "ERROR_RXACT_COMMIT_FAILURE __MSABI_LONG(1370)\0"
	.byte	0x1
	.uleb128 0x20d
	.ascii "ERROR_SPECIAL_ACCOUNT __MSABI_LONG(1371)\0"
	.byte	0x1
	.uleb128 0x20e
	.ascii "ERROR_SPECIAL_GROUP __MSABI_LONG(1372)\0"
	.byte	0x1
	.uleb128 0x20f
	.ascii "ERROR_SPECIAL_USER __MSABI_LONG(1373)\0"
	.byte	0x1
	.uleb128 0x210
	.ascii "ERROR_MEMBERS_PRIMARY_GROUP __MSABI_LONG(1374)\0"
	.byte	0x1
	.uleb128 0x211
	.ascii "ERROR_TOKEN_ALREADY_IN_USE __MSABI_LONG(1375)\0"
	.byte	0x1
	.uleb128 0x212
	.ascii "ERROR_NO_SUCH_ALIAS __MSABI_LONG(1376)\0"
	.byte	0x1
	.uleb128 0x213
	.ascii "ERROR_MEMBER_NOT_IN_ALIAS __MSABI_LONG(1377)\0"
	.byte	0x1
	.uleb128 0x214
	.ascii "ERROR_MEMBER_IN_ALIAS __MSABI_LONG(1378)\0"
	.byte	0x1
	.uleb128 0x215
	.ascii "ERROR_ALIAS_EXISTS __MSABI_LONG(1379)\0"
	.byte	0x1
	.uleb128 0x216
	.ascii "ERROR_LOGON_NOT_GRANTED __MSABI_LONG(1380)\0"
	.byte	0x1
	.uleb128 0x217
	.ascii "ERROR_TOO_MANY_SECRETS __MSABI_LONG(1381)\0"
	.byte	0x1
	.uleb128 0x218
	.ascii "ERROR_SECRET_TOO_LONG __MSABI_LONG(1382)\0"
	.byte	0x1
	.uleb128 0x219
	.ascii "ERROR_INTERNAL_DB_ERROR __MSABI_LONG(1383)\0"
	.byte	0x1
	.uleb128 0x21a
	.ascii "ERROR_TOO_MANY_CONTEXT_IDS __MSABI_LONG(1384)\0"
	.byte	0x1
	.uleb128 0x21b
	.ascii "ERROR_LOGON_TYPE_NOT_GRANTED __MSABI_LONG(1385)\0"
	.byte	0x1
	.uleb128 0x21c
	.ascii "ERROR_NT_CROSS_ENCRYPTION_REQUIRED __MSABI_LONG(1386)\0"
	.byte	0x1
	.uleb128 0x21d
	.ascii "ERROR_NO_SUCH_MEMBER __MSABI_LONG(1387)\0"
	.byte	0x1
	.uleb128 0x21e
	.ascii "ERROR_INVALID_MEMBER __MSABI_LONG(1388)\0"
	.byte	0x1
	.uleb128 0x21f
	.ascii "ERROR_TOO_MANY_SIDS __MSABI_LONG(1389)\0"
	.byte	0x1
	.uleb128 0x220
	.ascii "ERROR_LM_CROSS_ENCRYPTION_REQUIRED __MSABI_LONG(1390)\0"
	.byte	0x1
	.uleb128 0x221
	.ascii "ERROR_NO_INHERITANCE __MSABI_LONG(1391)\0"
	.byte	0x1
	.uleb128 0x222
	.ascii "ERROR_FILE_CORRUPT __MSABI_LONG(1392)\0"
	.byte	0x1
	.uleb128 0x223
	.ascii "ERROR_DISK_CORRUPT __MSABI_LONG(1393)\0"
	.byte	0x1
	.uleb128 0x224
	.ascii "ERROR_NO_USER_SESSION_KEY __MSABI_LONG(1394)\0"
	.byte	0x1
	.uleb128 0x225
	.ascii "ERROR_LICENSE_QUOTA_EXCEEDED __MSABI_LONG(1395)\0"
	.byte	0x1
	.uleb128 0x226
	.ascii "ERROR_WRONG_TARGET_NAME __MSABI_LONG(1396)\0"
	.byte	0x1
	.uleb128 0x227
	.ascii "ERROR_MUTUAL_AUTH_FAILED __MSABI_LONG(1397)\0"
	.byte	0x1
	.uleb128 0x228
	.ascii "ERROR_TIME_SKEW __MSABI_LONG(1398)\0"
	.byte	0x1
	.uleb128 0x229
	.ascii "ERROR_CURRENT_DOMAIN_NOT_ALLOWED __MSABI_LONG(1399)\0"
	.byte	0x1
	.uleb128 0x22a
	.ascii "ERROR_INVALID_WINDOW_HANDLE __MSABI_LONG(1400)\0"
	.byte	0x1
	.uleb128 0x22b
	.ascii "ERROR_INVALID_MENU_HANDLE __MSABI_LONG(1401)\0"
	.byte	0x1
	.uleb128 0x22c
	.ascii "ERROR_INVALID_CURSOR_HANDLE __MSABI_LONG(1402)\0"
	.byte	0x1
	.uleb128 0x22d
	.ascii "ERROR_INVALID_ACCEL_HANDLE __MSABI_LONG(1403)\0"
	.byte	0x1
	.uleb128 0x22e
	.ascii "ERROR_INVALID_HOOK_HANDLE __MSABI_LONG(1404)\0"
	.byte	0x1
	.uleb128 0x22f
	.ascii "ERROR_INVALID_DWP_HANDLE __MSABI_LONG(1405)\0"
	.byte	0x1
	.uleb128 0x230
	.ascii "ERROR_TLW_WITH_WSCHILD __MSABI_LONG(1406)\0"
	.byte	0x1
	.uleb128 0x231
	.ascii "ERROR_CANNOT_FIND_WND_CLASS __MSABI_LONG(1407)\0"
	.byte	0x1
	.uleb128 0x232
	.ascii "ERROR_WINDOW_OF_OTHER_THREAD __MSABI_LONG(1408)\0"
	.byte	0x1
	.uleb128 0x233
	.ascii "ERROR_HOTKEY_ALREADY_REGISTERED __MSABI_LONG(1409)\0"
	.byte	0x1
	.uleb128 0x234
	.ascii "ERROR_CLASS_ALREADY_EXISTS __MSABI_LONG(1410)\0"
	.byte	0x1
	.uleb128 0x235
	.ascii "ERROR_CLASS_DOES_NOT_EXIST __MSABI_LONG(1411)\0"
	.byte	0x1
	.uleb128 0x236
	.ascii "ERROR_CLASS_HAS_WINDOWS __MSABI_LONG(1412)\0"
	.byte	0x1
	.uleb128 0x237
	.ascii "ERROR_INVALID_INDEX __MSABI_LONG(1413)\0"
	.byte	0x1
	.uleb128 0x238
	.ascii "ERROR_INVALID_ICON_HANDLE __MSABI_LONG(1414)\0"
	.byte	0x1
	.uleb128 0x239
	.ascii "ERROR_PRIVATE_DIALOG_INDEX __MSABI_LONG(1415)\0"
	.byte	0x1
	.uleb128 0x23a
	.ascii "ERROR_LISTBOX_ID_NOT_FOUND __MSABI_LONG(1416)\0"
	.byte	0x1
	.uleb128 0x23b
	.ascii "ERROR_NO_WILDCARD_CHARACTERS __MSABI_LONG(1417)\0"
	.byte	0x1
	.uleb128 0x23c
	.ascii "ERROR_CLIPBOARD_NOT_OPEN __MSABI_LONG(1418)\0"
	.byte	0x1
	.uleb128 0x23d
	.ascii "ERROR_HOTKEY_NOT_REGISTERED __MSABI_LONG(1419)\0"
	.byte	0x1
	.uleb128 0x23e
	.ascii "ERROR_WINDOW_NOT_DIALOG __MSABI_LONG(1420)\0"
	.byte	0x1
	.uleb128 0x23f
	.ascii "ERROR_CONTROL_ID_NOT_FOUND __MSABI_LONG(1421)\0"
	.byte	0x1
	.uleb128 0x240
	.ascii "ERROR_INVALID_COMBOBOX_MESSAGE __MSABI_LONG(1422)\0"
	.byte	0x1
	.uleb128 0x241
	.ascii "ERROR_WINDOW_NOT_COMBOBOX __MSABI_LONG(1423)\0"
	.byte	0x1
	.uleb128 0x242
	.ascii "ERROR_INVALID_EDIT_HEIGHT __MSABI_LONG(1424)\0"
	.byte	0x1
	.uleb128 0x243
	.ascii "ERROR_DC_NOT_FOUND __MSABI_LONG(1425)\0"
	.byte	0x1
	.uleb128 0x244
	.ascii "ERROR_INVALID_HOOK_FILTER __MSABI_LONG(1426)\0"
	.byte	0x1
	.uleb128 0x245
	.ascii "ERROR_INVALID_FILTER_PROC __MSABI_LONG(1427)\0"
	.byte	0x1
	.uleb128 0x246
	.ascii "ERROR_HOOK_NEEDS_HMOD __MSABI_LONG(1428)\0"
	.byte	0x1
	.uleb128 0x247
	.ascii "ERROR_GLOBAL_ONLY_HOOK __MSABI_LONG(1429)\0"
	.byte	0x1
	.uleb128 0x248
	.ascii "ERROR_JOURNAL_HOOK_SET __MSABI_LONG(1430)\0"
	.byte	0x1
	.uleb128 0x249
	.ascii "ERROR_HOOK_NOT_INSTALLED __MSABI_LONG(1431)\0"
	.byte	0x1
	.uleb128 0x24a
	.ascii "ERROR_INVALID_LB_MESSAGE __MSABI_LONG(1432)\0"
	.byte	0x1
	.uleb128 0x24b
	.ascii "ERROR_SETCOUNT_ON_BAD_LB __MSABI_LONG(1433)\0"
	.byte	0x1
	.uleb128 0x24c
	.ascii "ERROR_LB_WITHOUT_TABSTOPS __MSABI_LONG(1434)\0"
	.byte	0x1
	.uleb128 0x24d
	.ascii "ERROR_DESTROY_OBJECT_OF_OTHER_THREAD __MSABI_LONG(1435)\0"
	.byte	0x1
	.uleb128 0x24e
	.ascii "ERROR_CHILD_WINDOW_MENU __MSABI_LONG(1436)\0"
	.byte	0x1
	.uleb128 0x24f
	.ascii "ERROR_NO_SYSTEM_MENU __MSABI_LONG(1437)\0"
	.byte	0x1
	.uleb128 0x250
	.ascii "ERROR_INVALID_MSGBOX_STYLE __MSABI_LONG(1438)\0"
	.byte	0x1
	.uleb128 0x251
	.ascii "ERROR_INVALID_SPI_VALUE __MSABI_LONG(1439)\0"
	.byte	0x1
	.uleb128 0x252
	.ascii "ERROR_SCREEN_ALREADY_LOCKED __MSABI_LONG(1440)\0"
	.byte	0x1
	.uleb128 0x253
	.ascii "ERROR_HWNDS_HAVE_DIFF_PARENT __MSABI_LONG(1441)\0"
	.byte	0x1
	.uleb128 0x254
	.ascii "ERROR_NOT_CHILD_WINDOW __MSABI_LONG(1442)\0"
	.byte	0x1
	.uleb128 0x255
	.ascii "ERROR_INVALID_GW_COMMAND __MSABI_LONG(1443)\0"
	.byte	0x1
	.uleb128 0x256
	.ascii "ERROR_INVALID_THREAD_ID __MSABI_LONG(1444)\0"
	.byte	0x1
	.uleb128 0x257
	.ascii "ERROR_NON_MDICHILD_WINDOW __MSABI_LONG(1445)\0"
	.byte	0x1
	.uleb128 0x258
	.ascii "ERROR_POPUP_ALREADY_ACTIVE __MSABI_LONG(1446)\0"
	.byte	0x1
	.uleb128 0x259
	.ascii "ERROR_NO_SCROLLBARS __MSABI_LONG(1447)\0"
	.byte	0x1
	.uleb128 0x25a
	.ascii "ERROR_INVALID_SCROLLBAR_RANGE __MSABI_LONG(1448)\0"
	.byte	0x1
	.uleb128 0x25b
	.ascii "ERROR_INVALID_SHOWWIN_COMMAND __MSABI_LONG(1449)\0"
	.byte	0x1
	.uleb128 0x25c
	.ascii "ERROR_NO_SYSTEM_RESOURCES __MSABI_LONG(1450)\0"
	.byte	0x1
	.uleb128 0x25d
	.ascii "ERROR_NONPAGED_SYSTEM_RESOURCES __MSABI_LONG(1451)\0"
	.byte	0x1
	.uleb128 0x25e
	.ascii "ERROR_PAGED_SYSTEM_RESOURCES __MSABI_LONG(1452)\0"
	.byte	0x1
	.uleb128 0x25f
	.ascii "ERROR_WORKING_SET_QUOTA __MSABI_LONG(1453)\0"
	.byte	0x1
	.uleb128 0x260
	.ascii "ERROR_PAGEFILE_QUOTA __MSABI_LONG(1454)\0"
	.byte	0x1
	.uleb128 0x261
	.ascii "ERROR_COMMITMENT_LIMIT __MSABI_LONG(1455)\0"
	.byte	0x1
	.uleb128 0x262
	.ascii "ERROR_MENU_ITEM_NOT_FOUND __MSABI_LONG(1456)\0"
	.byte	0x1
	.uleb128 0x263
	.ascii "ERROR_INVALID_KEYBOARD_HANDLE __MSABI_LONG(1457)\0"
	.byte	0x1
	.uleb128 0x264
	.ascii "ERROR_HOOK_TYPE_NOT_ALLOWED __MSABI_LONG(1458)\0"
	.byte	0x1
	.uleb128 0x265
	.ascii "ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION __MSABI_LONG(1459)\0"
	.byte	0x1
	.uleb128 0x266
	.ascii "ERROR_TIMEOUT __MSABI_LONG(1460)\0"
	.byte	0x1
	.uleb128 0x267
	.ascii "ERROR_INVALID_MONITOR_HANDLE __MSABI_LONG(1461)\0"
	.byte	0x1
	.uleb128 0x268
	.ascii "ERROR_INCORRECT_SIZE __MSABI_LONG(1462)\0"
	.byte	0x1
	.uleb128 0x269
	.ascii "ERROR_EVENTLOG_FILE_CORRUPT __MSABI_LONG(1500)\0"
	.byte	0x1
	.uleb128 0x26a
	.ascii "ERROR_EVENTLOG_CANT_START __MSABI_LONG(1501)\0"
	.byte	0x1
	.uleb128 0x26b
	.ascii "ERROR_LOG_FILE_FULL __MSABI_LONG(1502)\0"
	.byte	0x1
	.uleb128 0x26c
	.ascii "ERROR_EVENTLOG_FILE_CHANGED __MSABI_LONG(1503)\0"
	.byte	0x1
	.uleb128 0x26d
	.ascii "ERROR_INSTALL_SERVICE_FAILURE __MSABI_LONG(1601)\0"
	.byte	0x1
	.uleb128 0x26e
	.ascii "ERROR_INSTALL_USEREXIT __MSABI_LONG(1602)\0"
	.byte	0x1
	.uleb128 0x26f
	.ascii "ERROR_INSTALL_FAILURE __MSABI_LONG(1603)\0"
	.byte	0x1
	.uleb128 0x270
	.ascii "ERROR_INSTALL_SUSPEND __MSABI_LONG(1604)\0"
	.byte	0x1
	.uleb128 0x271
	.ascii "ERROR_UNKNOWN_PRODUCT __MSABI_LONG(1605)\0"
	.byte	0x1
	.uleb128 0x272
	.ascii "ERROR_UNKNOWN_FEATURE __MSABI_LONG(1606)\0"
	.byte	0x1
	.uleb128 0x273
	.ascii "ERROR_UNKNOWN_COMPONENT __MSABI_LONG(1607)\0"
	.byte	0x1
	.uleb128 0x274
	.ascii "ERROR_UNKNOWN_PROPERTY __MSABI_LONG(1608)\0"
	.byte	0x1
	.uleb128 0x275
	.ascii "ERROR_INVALID_HANDLE_STATE __MSABI_LONG(1609)\0"
	.byte	0x1
	.uleb128 0x276
	.ascii "ERROR_BAD_CONFIGURATION __MSABI_LONG(1610)\0"
	.byte	0x1
	.uleb128 0x277
	.ascii "ERROR_INDEX_ABSENT __MSABI_LONG(1611)\0"
	.byte	0x1
	.uleb128 0x278
	.ascii "ERROR_INSTALL_SOURCE_ABSENT __MSABI_LONG(1612)\0"
	.byte	0x1
	.uleb128 0x279
	.ascii "ERROR_INSTALL_PACKAGE_VERSION __MSABI_LONG(1613)\0"
	.byte	0x1
	.uleb128 0x27a
	.ascii "ERROR_PRODUCT_UNINSTALLED __MSABI_LONG(1614)\0"
	.byte	0x1
	.uleb128 0x27b
	.ascii "ERROR_BAD_QUERY_SYNTAX __MSABI_LONG(1615)\0"
	.byte	0x1
	.uleb128 0x27c
	.ascii "ERROR_INVALID_FIELD __MSABI_LONG(1616)\0"
	.byte	0x1
	.uleb128 0x27d
	.ascii "ERROR_DEVICE_REMOVED __MSABI_LONG(1617)\0"
	.byte	0x1
	.uleb128 0x27e
	.ascii "ERROR_INSTALL_ALREADY_RUNNING __MSABI_LONG(1618)\0"
	.byte	0x1
	.uleb128 0x27f
	.ascii "ERROR_INSTALL_PACKAGE_OPEN_FAILED __MSABI_LONG(1619)\0"
	.byte	0x1
	.uleb128 0x280
	.ascii "ERROR_INSTALL_PACKAGE_INVALID __MSABI_LONG(1620)\0"
	.byte	0x1
	.uleb128 0x281
	.ascii "ERROR_INSTALL_UI_FAILURE __MSABI_LONG(1621)\0"
	.byte	0x1
	.uleb128 0x282
	.ascii "ERROR_INSTALL_LOG_FAILURE __MSABI_LONG(1622)\0"
	.byte	0x1
	.uleb128 0x283
	.ascii "ERROR_INSTALL_LANGUAGE_UNSUPPORTED __MSABI_LONG(1623)\0"
	.byte	0x1
	.uleb128 0x284
	.ascii "ERROR_INSTALL_TRANSFORM_FAILURE __MSABI_LONG(1624)\0"
	.byte	0x1
	.uleb128 0x285
	.ascii "ERROR_INSTALL_PACKAGE_REJECTED __MSABI_LONG(1625)\0"
	.byte	0x1
	.uleb128 0x286
	.ascii "ERROR_FUNCTION_NOT_CALLED __MSABI_LONG(1626)\0"
	.byte	0x1
	.uleb128 0x287
	.ascii "ERROR_FUNCTION_FAILED __MSABI_LONG(1627)\0"
	.byte	0x1
	.uleb128 0x288
	.ascii "ERROR_INVALID_TABLE __MSABI_LONG(1628)\0"
	.byte	0x1
	.uleb128 0x289
	.ascii "ERROR_DATATYPE_MISMATCH __MSABI_LONG(1629)\0"
	.byte	0x1
	.uleb128 0x28a
	.ascii "ERROR_UNSUPPORTED_TYPE __MSABI_LONG(1630)\0"
	.byte	0x1
	.uleb128 0x28b
	.ascii "ERROR_CREATE_FAILED __MSABI_LONG(1631)\0"
	.byte	0x1
	.uleb128 0x28c
	.ascii "ERROR_INSTALL_TEMP_UNWRITABLE __MSABI_LONG(1632)\0"
	.byte	0x1
	.uleb128 0x28d
	.ascii "ERROR_INSTALL_PLATFORM_UNSUPPORTED __MSABI_LONG(1633)\0"
	.byte	0x1
	.uleb128 0x28e
	.ascii "ERROR_INSTALL_NOTUSED __MSABI_LONG(1634)\0"
	.byte	0x1
	.uleb128 0x28f
	.ascii "ERROR_PATCH_PACKAGE_OPEN_FAILED __MSABI_LONG(1635)\0"
	.byte	0x1
	.uleb128 0x290
	.ascii "ERROR_PATCH_PACKAGE_INVALID __MSABI_LONG(1636)\0"
	.byte	0x1
	.uleb128 0x291
	.ascii "ERROR_PATCH_PACKAGE_UNSUPPORTED __MSABI_LONG(1637)\0"
	.byte	0x1
	.uleb128 0x292
	.ascii "ERROR_PRODUCT_VERSION __MSABI_LONG(1638)\0"
	.byte	0x1
	.uleb128 0x293
	.ascii "ERROR_INVALID_COMMAND_LINE __MSABI_LONG(1639)\0"
	.byte	0x1
	.uleb128 0x294
	.ascii "ERROR_INSTALL_REMOTE_DISALLOWED __MSABI_LONG(1640)\0"
	.byte	0x1
	.uleb128 0x295
	.ascii "ERROR_SUCCESS_REBOOT_INITIATED __MSABI_LONG(1641)\0"
	.byte	0x1
	.uleb128 0x296
	.ascii "ERROR_PATCH_TARGET_NOT_FOUND __MSABI_LONG(1642)\0"
	.byte	0x1
	.uleb128 0x297
	.ascii "ERROR_PATCH_PACKAGE_REJECTED __MSABI_LONG(1643)\0"
	.byte	0x1
	.uleb128 0x298
	.ascii "ERROR_INSTALL_TRANSFORM_REJECTED __MSABI_LONG(1644)\0"
	.byte	0x1
	.uleb128 0x299
	.ascii "ERROR_INSTALL_REMOTE_PROHIBITED __MSABI_LONG(1645)\0"
	.byte	0x1
	.uleb128 0x29a
	.ascii "RPC_S_INVALID_STRING_BINDING __MSABI_LONG(1700)\0"
	.byte	0x1
	.uleb128 0x29b
	.ascii "RPC_S_WRONG_KIND_OF_BINDING __MSABI_LONG(1701)\0"
	.byte	0x1
	.uleb128 0x29c
	.ascii "RPC_S_INVALID_BINDING __MSABI_LONG(1702)\0"
	.byte	0x1
	.uleb128 0x29d
	.ascii "RPC_S_PROTSEQ_NOT_SUPPORTED __MSABI_LONG(1703)\0"
	.byte	0x1
	.uleb128 0x29e
	.ascii "RPC_S_INVALID_RPC_PROTSEQ __MSABI_LONG(1704)\0"
	.byte	0x1
	.uleb128 0x29f
	.ascii "RPC_S_INVALID_STRING_UUID __MSABI_LONG(1705)\0"
	.byte	0x1
	.uleb128 0x2a0
	.ascii "RPC_S_INVALID_ENDPOINT_FORMAT __MSABI_LONG(1706)\0"
	.byte	0x1
	.uleb128 0x2a1
	.ascii "RPC_S_INVALID_NET_ADDR __MSABI_LONG(1707)\0"
	.byte	0x1
	.uleb128 0x2a2
	.ascii "RPC_S_NO_ENDPOINT_FOUND __MSABI_LONG(1708)\0"
	.byte	0x1
	.uleb128 0x2a3
	.ascii "RPC_S_INVALID_TIMEOUT __MSABI_LONG(1709)\0"
	.byte	0x1
	.uleb128 0x2a4
	.ascii "RPC_S_OBJECT_NOT_FOUND __MSABI_LONG(1710)\0"
	.byte	0x1
	.uleb128 0x2a5
	.ascii "RPC_S_ALREADY_REGISTERED __MSABI_LONG(1711)\0"
	.byte	0x1
	.uleb128 0x2a6
	.ascii "RPC_S_TYPE_ALREADY_REGISTERED __MSABI_LONG(1712)\0"
	.byte	0x1
	.uleb128 0x2a7
	.ascii "RPC_S_ALREADY_LISTENING __MSABI_LONG(1713)\0"
	.byte	0x1
	.uleb128 0x2a8
	.ascii "RPC_S_NO_PROTSEQS_REGISTERED __MSABI_LONG(1714)\0"
	.byte	0x1
	.uleb128 0x2a9
	.ascii "RPC_S_NOT_LISTENING __MSABI_LONG(1715)\0"
	.byte	0x1
	.uleb128 0x2aa
	.ascii "RPC_S_UNKNOWN_MGR_TYPE __MSABI_LONG(1716)\0"
	.byte	0x1
	.uleb128 0x2ab
	.ascii "RPC_S_UNKNOWN_IF __MSABI_LONG(1717)\0"
	.byte	0x1
	.uleb128 0x2ac
	.ascii "RPC_S_NO_BINDINGS __MSABI_LONG(1718)\0"
	.byte	0x1
	.uleb128 0x2ad
	.ascii "RPC_S_NO_PROTSEQS __MSABI_LONG(1719)\0"
	.byte	0x1
	.uleb128 0x2ae
	.ascii "RPC_S_CANT_CREATE_ENDPOINT __MSABI_LONG(1720)\0"
	.byte	0x1
	.uleb128 0x2af
	.ascii "RPC_S_OUT_OF_RESOURCES __MSABI_LONG(1721)\0"
	.byte	0x1
	.uleb128 0x2b0
	.ascii "RPC_S_SERVER_UNAVAILABLE __MSABI_LONG(1722)\0"
	.byte	0x1
	.uleb128 0x2b1
	.ascii "RPC_S_SERVER_TOO_BUSY __MSABI_LONG(1723)\0"
	.byte	0x1
	.uleb128 0x2b2
	.ascii "RPC_S_INVALID_NETWORK_OPTIONS __MSABI_LONG(1724)\0"
	.byte	0x1
	.uleb128 0x2b3
	.ascii "RPC_S_NO_CALL_ACTIVE __MSABI_LONG(1725)\0"
	.byte	0x1
	.uleb128 0x2b4
	.ascii "RPC_S_CALL_FAILED __MSABI_LONG(1726)\0"
	.byte	0x1
	.uleb128 0x2b5
	.ascii "RPC_S_CALL_FAILED_DNE __MSABI_LONG(1727)\0"
	.byte	0x1
	.uleb128 0x2b6
	.ascii "RPC_S_PROTOCOL_ERROR __MSABI_LONG(1728)\0"
	.byte	0x1
	.uleb128 0x2b7
	.ascii "RPC_S_UNSUPPORTED_TRANS_SYN __MSABI_LONG(1730)\0"
	.byte	0x1
	.uleb128 0x2b8
	.ascii "RPC_S_UNSUPPORTED_TYPE __MSABI_LONG(1732)\0"
	.byte	0x1
	.uleb128 0x2b9
	.ascii "RPC_S_INVALID_TAG __MSABI_LONG(1733)\0"
	.byte	0x1
	.uleb128 0x2ba
	.ascii "RPC_S_INVALID_BOUND __MSABI_LONG(1734)\0"
	.byte	0x1
	.uleb128 0x2bb
	.ascii "RPC_S_NO_ENTRY_NAME __MSABI_LONG(1735)\0"
	.byte	0x1
	.uleb128 0x2bc
	.ascii "RPC_S_INVALID_NAME_SYNTAX __MSABI_LONG(1736)\0"
	.byte	0x1
	.uleb128 0x2bd
	.ascii "RPC_S_UNSUPPORTED_NAME_SYNTAX __MSABI_LONG(1737)\0"
	.byte	0x1
	.uleb128 0x2be
	.ascii "RPC_S_UUID_NO_ADDRESS __MSABI_LONG(1739)\0"
	.byte	0x1
	.uleb128 0x2bf
	.ascii "RPC_S_DUPLICATE_ENDPOINT __MSABI_LONG(1740)\0"
	.byte	0x1
	.uleb128 0x2c0
	.ascii "RPC_S_UNKNOWN_AUTHN_TYPE __MSABI_LONG(1741)\0"
	.byte	0x1
	.uleb128 0x2c1
	.ascii "RPC_S_MAX_CALLS_TOO_SMALL __MSABI_LONG(1742)\0"
	.byte	0x1
	.uleb128 0x2c2
	.ascii "RPC_S_STRING_TOO_LONG __MSABI_LONG(1743)\0"
	.byte	0x1
	.uleb128 0x2c3
	.ascii "RPC_S_PROTSEQ_NOT_FOUND __MSABI_LONG(1744)\0"
	.byte	0x1
	.uleb128 0x2c4
	.ascii "RPC_S_PROCNUM_OUT_OF_RANGE __MSABI_LONG(1745)\0"
	.byte	0x1
	.uleb128 0x2c5
	.ascii "RPC_S_BINDING_HAS_NO_AUTH __MSABI_LONG(1746)\0"
	.byte	0x1
	.uleb128 0x2c6
	.ascii "RPC_S_UNKNOWN_AUTHN_SERVICE __MSABI_LONG(1747)\0"
	.byte	0x1
	.uleb128 0x2c7
	.ascii "RPC_S_UNKNOWN_AUTHN_LEVEL __MSABI_LONG(1748)\0"
	.byte	0x1
	.uleb128 0x2c8
	.ascii "RPC_S_INVALID_AUTH_IDENTITY __MSABI_LONG(1749)\0"
	.byte	0x1
	.uleb128 0x2c9
	.ascii "RPC_S_UNKNOWN_AUTHZ_SERVICE __MSABI_LONG(1750)\0"
	.byte	0x1
	.uleb128 0x2ca
	.ascii "EPT_S_INVALID_ENTRY __MSABI_LONG(1751)\0"
	.byte	0x1
	.uleb128 0x2cb
	.ascii "EPT_S_CANT_PERFORM_OP __MSABI_LONG(1752)\0"
	.byte	0x1
	.uleb128 0x2cc
	.ascii "EPT_S_NOT_REGISTERED __MSABI_LONG(1753)\0"
	.byte	0x1
	.uleb128 0x2cd
	.ascii "RPC_S_NOTHING_TO_EXPORT __MSABI_LONG(1754)\0"
	.byte	0x1
	.uleb128 0x2ce
	.ascii "RPC_S_INCOMPLETE_NAME __MSABI_LONG(1755)\0"
	.byte	0x1
	.uleb128 0x2cf
	.ascii "RPC_S_INVALID_VERS_OPTION __MSABI_LONG(1756)\0"
	.byte	0x1
	.uleb128 0x2d0
	.ascii "RPC_S_NO_MORE_MEMBERS __MSABI_LONG(1757)\0"
	.byte	0x1
	.uleb128 0x2d1
	.ascii "RPC_S_NOT_ALL_OBJS_UNEXPORTED __MSABI_LONG(1758)\0"
	.byte	0x1
	.uleb128 0x2d2
	.ascii "RPC_S_INTERFACE_NOT_FOUND __MSABI_LONG(1759)\0"
	.byte	0x1
	.uleb128 0x2d3
	.ascii "RPC_S_ENTRY_ALREADY_EXISTS __MSABI_LONG(1760)\0"
	.byte	0x1
	.uleb128 0x2d4
	.ascii "RPC_S_ENTRY_NOT_FOUND __MSABI_LONG(1761)\0"
	.byte	0x1
	.uleb128 0x2d5
	.ascii "RPC_S_NAME_SERVICE_UNAVAILABLE __MSABI_LONG(1762)\0"
	.byte	0x1
	.uleb128 0x2d6
	.ascii "RPC_S_INVALID_NAF_ID __MSABI_LONG(1763)\0"
	.byte	0x1
	.uleb128 0x2d7
	.ascii "RPC_S_CANNOT_SUPPORT __MSABI_LONG(1764)\0"
	.byte	0x1
	.uleb128 0x2d8
	.ascii "RPC_S_NO_CONTEXT_AVAILABLE __MSABI_LONG(1765)\0"
	.byte	0x1
	.uleb128 0x2d9
	.ascii "RPC_S_INTERNAL_ERROR __MSABI_LONG(1766)\0"
	.byte	0x1
	.uleb128 0x2da
	.ascii "RPC_S_ZERO_DIVIDE __MSABI_LONG(1767)\0"
	.byte	0x1
	.uleb128 0x2db
	.ascii "RPC_S_ADDRESS_ERROR __MSABI_LONG(1768)\0"
	.byte	0x1
	.uleb128 0x2dc
	.ascii "RPC_S_FP_DIV_ZERO __MSABI_LONG(1769)\0"
	.byte	0x1
	.uleb128 0x2dd
	.ascii "RPC_S_FP_UNDERFLOW __MSABI_LONG(1770)\0"
	.byte	0x1
	.uleb128 0x2de
	.ascii "RPC_S_FP_OVERFLOW __MSABI_LONG(1771)\0"
	.byte	0x1
	.uleb128 0x2df
	.ascii "RPC_X_NO_MORE_ENTRIES __MSABI_LONG(1772)\0"
	.byte	0x1
	.uleb128 0x2e0
	.ascii "RPC_X_SS_CHAR_TRANS_OPEN_FAIL __MSABI_LONG(1773)\0"
	.byte	0x1
	.uleb128 0x2e1
	.ascii "RPC_X_SS_CHAR_TRANS_SHORT_FILE __MSABI_LONG(1774)\0"
	.byte	0x1
	.uleb128 0x2e2
	.ascii "RPC_X_SS_IN_NULL_CONTEXT __MSABI_LONG(1775)\0"
	.byte	0x1
	.uleb128 0x2e3
	.ascii "RPC_X_SS_CONTEXT_DAMAGED __MSABI_LONG(1777)\0"
	.byte	0x1
	.uleb128 0x2e4
	.ascii "RPC_X_SS_HANDLES_MISMATCH __MSABI_LONG(1778)\0"
	.byte	0x1
	.uleb128 0x2e5
	.ascii "RPC_X_SS_CANNOT_GET_CALL_HANDLE __MSABI_LONG(1779)\0"
	.byte	0x1
	.uleb128 0x2e6
	.ascii "RPC_X_NULL_REF_POINTER __MSABI_LONG(1780)\0"
	.byte	0x1
	.uleb128 0x2e7
	.ascii "RPC_X_ENUM_VALUE_OUT_OF_RANGE __MSABI_LONG(1781)\0"
	.byte	0x1
	.uleb128 0x2e8
	.ascii "RPC_X_BYTE_COUNT_TOO_SMALL __MSABI_LONG(1782)\0"
	.byte	0x1
	.uleb128 0x2e9
	.ascii "RPC_X_BAD_STUB_DATA __MSABI_LONG(1783)\0"
	.byte	0x1
	.uleb128 0x2ea
	.ascii "ERROR_INVALID_USER_BUFFER __MSABI_LONG(1784)\0"
	.byte	0x1
	.uleb128 0x2eb
	.ascii "ERROR_UNRECOGNIZED_MEDIA __MSABI_LONG(1785)\0"
	.byte	0x1
	.uleb128 0x2ec
	.ascii "ERROR_NO_TRUST_LSA_SECRET __MSABI_LONG(1786)\0"
	.byte	0x1
	.uleb128 0x2ed
	.ascii "ERROR_NO_TRUST_SAM_ACCOUNT __MSABI_LONG(1787)\0"
	.byte	0x1
	.uleb128 0x2ee
	.ascii "ERROR_TRUSTED_DOMAIN_FAILURE __MSABI_LONG(1788)\0"
	.byte	0x1
	.uleb128 0x2ef
	.ascii "ERROR_TRUSTED_RELATIONSHIP_FAILURE __MSABI_LONG(1789)\0"
	.byte	0x1
	.uleb128 0x2f0
	.ascii "ERROR_TRUST_FAILURE __MSABI_LONG(1790)\0"
	.byte	0x1
	.uleb128 0x2f1
	.ascii "RPC_S_CALL_IN_PROGRESS __MSABI_LONG(1791)\0"
	.byte	0x1
	.uleb128 0x2f2
	.ascii "ERROR_NETLOGON_NOT_STARTED __MSABI_LONG(1792)\0"
	.byte	0x1
	.uleb128 0x2f3
	.ascii "ERROR_ACCOUNT_EXPIRED __MSABI_LONG(1793)\0"
	.byte	0x1
	.uleb128 0x2f4
	.ascii "ERROR_REDIRECTOR_HAS_OPEN_HANDLES __MSABI_LONG(1794)\0"
	.byte	0x1
	.uleb128 0x2f5
	.ascii "ERROR_PRINTER_DRIVER_ALREADY_INSTALLED __MSABI_LONG(1795)\0"
	.byte	0x1
	.uleb128 0x2f6
	.ascii "ERROR_UNKNOWN_PORT __MSABI_LONG(1796)\0"
	.byte	0x1
	.uleb128 0x2f7
	.ascii "ERROR_UNKNOWN_PRINTER_DRIVER __MSABI_LONG(1797)\0"
	.byte	0x1
	.uleb128 0x2f8
	.ascii "ERROR_UNKNOWN_PRINTPROCESSOR __MSABI_LONG(1798)\0"
	.byte	0x1
	.uleb128 0x2f9
	.ascii "ERROR_INVALID_SEPARATOR_FILE __MSABI_LONG(1799)\0"
	.byte	0x1
	.uleb128 0x2fa
	.ascii "ERROR_INVALID_PRIORITY __MSABI_LONG(1800)\0"
	.byte	0x1
	.uleb128 0x2fb
	.ascii "ERROR_INVALID_PRINTER_NAME __MSABI_LONG(1801)\0"
	.byte	0x1
	.uleb128 0x2fc
	.ascii "ERROR_PRINTER_ALREADY_EXISTS __MSABI_LONG(1802)\0"
	.byte	0x1
	.uleb128 0x2fd
	.ascii "ERROR_INVALID_PRINTER_COMMAND __MSABI_LONG(1803)\0"
	.byte	0x1
	.uleb128 0x2fe
	.ascii "ERROR_INVALID_DATATYPE __MSABI_LONG(1804)\0"
	.byte	0x1
	.uleb128 0x2ff
	.ascii "ERROR_INVALID_ENVIRONMENT __MSABI_LONG(1805)\0"
	.byte	0x1
	.uleb128 0x300
	.ascii "RPC_S_NO_MORE_BINDINGS __MSABI_LONG(1806)\0"
	.byte	0x1
	.uleb128 0x301
	.ascii "ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT __MSABI_LONG(1807)\0"
	.byte	0x1
	.uleb128 0x302
	.ascii "ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT __MSABI_LONG(1808)\0"
	.byte	0x1
	.uleb128 0x303
	.ascii "ERROR_NOLOGON_SERVER_TRUST_ACCOUNT __MSABI_LONG(1809)\0"
	.byte	0x1
	.uleb128 0x304
	.ascii "ERROR_DOMAIN_TRUST_INCONSISTENT __MSABI_LONG(1810)\0"
	.byte	0x1
	.uleb128 0x305
	.ascii "ERROR_SERVER_HAS_OPEN_HANDLES __MSABI_LONG(1811)\0"
	.byte	0x1
	.uleb128 0x306
	.ascii "ERROR_RESOURCE_DATA_NOT_FOUND __MSABI_LONG(1812)\0"
	.byte	0x1
	.uleb128 0x307
	.ascii "ERROR_RESOURCE_TYPE_NOT_FOUND __MSABI_LONG(1813)\0"
	.byte	0x1
	.uleb128 0x308
	.ascii "ERROR_RESOURCE_NAME_NOT_FOUND __MSABI_LONG(1814)\0"
	.byte	0x1
	.uleb128 0x309
	.ascii "ERROR_RESOURCE_LANG_NOT_FOUND __MSABI_LONG(1815)\0"
	.byte	0x1
	.uleb128 0x30a
	.ascii "ERROR_NOT_ENOUGH_QUOTA __MSABI_LONG(1816)\0"
	.byte	0x1
	.uleb128 0x30b
	.ascii "RPC_S_NO_INTERFACES __MSABI_LONG(1817)\0"
	.byte	0x1
	.uleb128 0x30c
	.ascii "RPC_S_CALL_CANCELLED __MSABI_LONG(1818)\0"
	.byte	0x1
	.uleb128 0x30d
	.ascii "RPC_S_BINDING_INCOMPLETE __MSABI_LONG(1819)\0"
	.byte	0x1
	.uleb128 0x30e
	.ascii "RPC_S_COMM_FAILURE __MSABI_LONG(1820)\0"
	.byte	0x1
	.uleb128 0x30f
	.ascii "RPC_S_UNSUPPORTED_AUTHN_LEVEL __MSABI_LONG(1821)\0"
	.byte	0x1
	.uleb128 0x310
	.ascii "RPC_S_NO_PRINC_NAME __MSABI_LONG(1822)\0"
	.byte	0x1
	.uleb128 0x311
	.ascii "RPC_S_NOT_RPC_ERROR __MSABI_LONG(1823)\0"
	.byte	0x1
	.uleb128 0x312
	.ascii "RPC_S_UUID_LOCAL_ONLY __MSABI_LONG(1824)\0"
	.byte	0x1
	.uleb128 0x313
	.ascii "RPC_S_SEC_PKG_ERROR __MSABI_LONG(1825)\0"
	.byte	0x1
	.uleb128 0x314
	.ascii "RPC_S_NOT_CANCELLED __MSABI_LONG(1826)\0"
	.byte	0x1
	.uleb128 0x315
	.ascii "RPC_X_INVALID_ES_ACTION __MSABI_LONG(1827)\0"
	.byte	0x1
	.uleb128 0x316
	.ascii "RPC_X_WRONG_ES_VERSION __MSABI_LONG(1828)\0"
	.byte	0x1
	.uleb128 0x317
	.ascii "RPC_X_WRONG_STUB_VERSION __MSABI_LONG(1829)\0"
	.byte	0x1
	.uleb128 0x318
	.ascii "RPC_X_INVALID_PIPE_OBJECT __MSABI_LONG(1830)\0"
	.byte	0x1
	.uleb128 0x319
	.ascii "RPC_X_WRONG_PIPE_ORDER __MSABI_LONG(1831)\0"
	.byte	0x1
	.uleb128 0x31a
	.ascii "RPC_X_WRONG_PIPE_VERSION __MSABI_LONG(1832)\0"
	.byte	0x1
	.uleb128 0x31b
	.ascii "RPC_S_GROUP_MEMBER_NOT_FOUND __MSABI_LONG(1898)\0"
	.byte	0x1
	.uleb128 0x31c
	.ascii "EPT_S_CANT_CREATE __MSABI_LONG(1899)\0"
	.byte	0x1
	.uleb128 0x31d
	.ascii "RPC_S_INVALID_OBJECT __MSABI_LONG(1900)\0"
	.byte	0x1
	.uleb128 0x31e
	.ascii "ERROR_INVALID_TIME __MSABI_LONG(1901)\0"
	.byte	0x1
	.uleb128 0x31f
	.ascii "ERROR_INVALID_FORM_NAME __MSABI_LONG(1902)\0"
	.byte	0x1
	.uleb128 0x320
	.ascii "ERROR_INVALID_FORM_SIZE __MSABI_LONG(1903)\0"
	.byte	0x1
	.uleb128 0x321
	.ascii "ERROR_ALREADY_WAITING __MSABI_LONG(1904)\0"
	.byte	0x1
	.uleb128 0x322
	.ascii "ERROR_PRINTER_DELETED __MSABI_LONG(1905)\0"
	.byte	0x1
	.uleb128 0x323
	.ascii "ERROR_INVALID_PRINTER_STATE __MSABI_LONG(1906)\0"
	.byte	0x1
	.uleb128 0x324
	.ascii "ERROR_PASSWORD_MUST_CHANGE __MSABI_LONG(1907)\0"
	.byte	0x1
	.uleb128 0x325
	.ascii "ERROR_DOMAIN_CONTROLLER_NOT_FOUND __MSABI_LONG(1908)\0"
	.byte	0x1
	.uleb128 0x326
	.ascii "ERROR_ACCOUNT_LOCKED_OUT __MSABI_LONG(1909)\0"
	.byte	0x1
	.uleb128 0x327
	.ascii "OR_INVALID_OXID __MSABI_LONG(1910)\0"
	.byte	0x1
	.uleb128 0x328
	.ascii "OR_INVALID_OID __MSABI_LONG(1911)\0"
	.byte	0x1
	.uleb128 0x329
	.ascii "OR_INVALID_SET __MSABI_LONG(1912)\0"
	.byte	0x1
	.uleb128 0x32a
	.ascii "RPC_S_SEND_INCOMPLETE __MSABI_LONG(1913)\0"
	.byte	0x1
	.uleb128 0x32b
	.ascii "RPC_S_INVALID_ASYNC_HANDLE __MSABI_LONG(1914)\0"
	.byte	0x1
	.uleb128 0x32c
	.ascii "RPC_S_INVALID_ASYNC_CALL __MSABI_LONG(1915)\0"
	.byte	0x1
	.uleb128 0x32d
	.ascii "RPC_X_PIPE_CLOSED __MSABI_LONG(1916)\0"
	.byte	0x1
	.uleb128 0x32e
	.ascii "RPC_X_PIPE_DISCIPLINE_ERROR __MSABI_LONG(1917)\0"
	.byte	0x1
	.uleb128 0x32f
	.ascii "RPC_X_PIPE_EMPTY __MSABI_LONG(1918)\0"
	.byte	0x1
	.uleb128 0x330
	.ascii "ERROR_NO_SITENAME __MSABI_LONG(1919)\0"
	.byte	0x1
	.uleb128 0x331
	.ascii "ERROR_CANT_ACCESS_FILE __MSABI_LONG(1920)\0"
	.byte	0x1
	.uleb128 0x332
	.ascii "ERROR_CANT_RESOLVE_FILENAME __MSABI_LONG(1921)\0"
	.byte	0x1
	.uleb128 0x333
	.ascii "RPC_S_ENTRY_TYPE_MISMATCH __MSABI_LONG(1922)\0"
	.byte	0x1
	.uleb128 0x334
	.ascii "RPC_S_NOT_ALL_OBJS_EXPORTED __MSABI_LONG(1923)\0"
	.byte	0x1
	.uleb128 0x335
	.ascii "RPC_S_INTERFACE_NOT_EXPORTED __MSABI_LONG(1924)\0"
	.byte	0x1
	.uleb128 0x336
	.ascii "RPC_S_PROFILE_NOT_ADDED __MSABI_LONG(1925)\0"
	.byte	0x1
	.uleb128 0x337
	.ascii "RPC_S_PRF_ELT_NOT_ADDED __MSABI_LONG(1926)\0"
	.byte	0x1
	.uleb128 0x338
	.ascii "RPC_S_PRF_ELT_NOT_REMOVED __MSABI_LONG(1927)\0"
	.byte	0x1
	.uleb128 0x339
	.ascii "RPC_S_GRP_ELT_NOT_ADDED __MSABI_LONG(1928)\0"
	.byte	0x1
	.uleb128 0x33a
	.ascii "RPC_S_GRP_ELT_NOT_REMOVED __MSABI_LONG(1929)\0"
	.byte	0x1
	.uleb128 0x33b
	.ascii "ERROR_KM_DRIVER_BLOCKED __MSABI_LONG(1930)\0"
	.byte	0x1
	.uleb128 0x33c
	.ascii "ERROR_CONTEXT_EXPIRED __MSABI_LONG(1931)\0"
	.byte	0x1
	.uleb128 0x33d
	.ascii "ERROR_PER_USER_TRUST_QUOTA_EXCEEDED __MSABI_LONG(1932)\0"
	.byte	0x1
	.uleb128 0x33e
	.ascii "ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED __MSABI_LONG(1933)\0"
	.byte	0x1
	.uleb128 0x33f
	.ascii "ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED __MSABI_LONG(1934)\0"
	.byte	0x1
	.uleb128 0x340
	.ascii "ERROR_AUTHENTICATION_FIREWALL_FAILED __MSABI_LONG(1935)\0"
	.byte	0x1
	.uleb128 0x341
	.ascii "ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED __MSABI_LONG(1936)\0"
	.byte	0x1
	.uleb128 0x342
	.ascii "ERROR_INVALID_PIXEL_FORMAT __MSABI_LONG(2000)\0"
	.byte	0x1
	.uleb128 0x343
	.ascii "ERROR_BAD_DRIVER __MSABI_LONG(2001)\0"
	.byte	0x1
	.uleb128 0x344
	.ascii "ERROR_INVALID_WINDOW_STYLE __MSABI_LONG(2002)\0"
	.byte	0x1
	.uleb128 0x345
	.ascii "ERROR_METAFILE_NOT_SUPPORTED __MSABI_LONG(2003)\0"
	.byte	0x1
	.uleb128 0x346
	.ascii "ERROR_TRANSFORM_NOT_SUPPORTED __MSABI_LONG(2004)\0"
	.byte	0x1
	.uleb128 0x347
	.ascii "ERROR_CLIPPING_NOT_SUPPORTED __MSABI_LONG(2005)\0"
	.byte	0x1
	.uleb128 0x348
	.ascii "ERROR_INVALID_CMM __MSABI_LONG(2010)\0"
	.byte	0x1
	.uleb128 0x349
	.ascii "ERROR_INVALID_PROFILE __MSABI_LONG(2011)\0"
	.byte	0x1
	.uleb128 0x34a
	.ascii "ERROR_TAG_NOT_FOUND __MSABI_LONG(2012)\0"
	.byte	0x1
	.uleb128 0x34b
	.ascii "ERROR_TAG_NOT_PRESENT __MSABI_LONG(2013)\0"
	.byte	0x1
	.uleb128 0x34c
	.ascii "ERROR_DUPLICATE_TAG __MSABI_LONG(2014)\0"
	.byte	0x1
	.uleb128 0x34d
	.ascii "ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE __MSABI_LONG(2015)\0"
	.byte	0x1
	.uleb128 0x34e
	.ascii "ERROR_PROFILE_NOT_FOUND __MSABI_LONG(2016)\0"
	.byte	0x1
	.uleb128 0x34f
	.ascii "ERROR_INVALID_COLORSPACE __MSABI_LONG(2017)\0"
	.byte	0x1
	.uleb128 0x350
	.ascii "ERROR_ICM_NOT_ENABLED __MSABI_LONG(2018)\0"
	.byte	0x1
	.uleb128 0x351
	.ascii "ERROR_DELETING_ICM_XFORM __MSABI_LONG(2019)\0"
	.byte	0x1
	.uleb128 0x352
	.ascii "ERROR_INVALID_TRANSFORM __MSABI_LONG(2020)\0"
	.byte	0x1
	.uleb128 0x353
	.ascii "ERROR_COLORSPACE_MISMATCH __MSABI_LONG(2021)\0"
	.byte	0x1
	.uleb128 0x354
	.ascii "ERROR_INVALID_COLORINDEX __MSABI_LONG(2022)\0"
	.byte	0x1
	.uleb128 0x355
	.ascii "ERROR_CONNECTED_OTHER_PASSWORD __MSABI_LONG(2108)\0"
	.byte	0x1
	.uleb128 0x356
	.ascii "ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT __MSABI_LONG(2109)\0"
	.byte	0x1
	.uleb128 0x357
	.ascii "ERROR_BAD_USERNAME __MSABI_LONG(2202)\0"
	.byte	0x1
	.uleb128 0x358
	.ascii "ERROR_NOT_CONNECTED __MSABI_LONG(2250)\0"
	.byte	0x1
	.uleb128 0x359
	.ascii "ERROR_OPEN_FILES __MSABI_LONG(2401)\0"
	.byte	0x1
	.uleb128 0x35a
	.ascii "ERROR_ACTIVE_CONNECTIONS __MSABI_LONG(2402)\0"
	.byte	0x1
	.uleb128 0x35b
	.ascii "ERROR_DEVICE_IN_USE __MSABI_LONG(2404)\0"
	.byte	0x1
	.uleb128 0x35c
	.ascii "ERROR_UNKNOWN_PRINT_MONITOR __MSABI_LONG(3000)\0"
	.byte	0x1
	.uleb128 0x35d
	.ascii "ERROR_PRINTER_DRIVER_IN_USE __MSABI_LONG(3001)\0"
	.byte	0x1
	.uleb128 0x35e
	.ascii "ERROR_SPOOL_FILE_NOT_FOUND __MSABI_LONG(3002)\0"
	.byte	0x1
	.uleb128 0x35f
	.ascii "ERROR_SPL_NO_STARTDOC __MSABI_LONG(3003)\0"
	.byte	0x1
	.uleb128 0x360
	.ascii "ERROR_SPL_NO_ADDJOB __MSABI_LONG(3004)\0"
	.byte	0x1
	.uleb128 0x361
	.ascii "ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED __MSABI_LONG(3005)\0"
	.byte	0x1
	.uleb128 0x362
	.ascii "ERROR_PRINT_MONITOR_ALREADY_INSTALLED __MSABI_LONG(3006)\0"
	.byte	0x1
	.uleb128 0x363
	.ascii "ERROR_INVALID_PRINT_MONITOR __MSABI_LONG(3007)\0"
	.byte	0x1
	.uleb128 0x364
	.ascii "ERROR_PRINT_MONITOR_IN_USE __MSABI_LONG(3008)\0"
	.byte	0x1
	.uleb128 0x365
	.ascii "ERROR_PRINTER_HAS_JOBS_QUEUED __MSABI_LONG(3009)\0"
	.byte	0x1
	.uleb128 0x366
	.ascii "ERROR_SUCCESS_REBOOT_REQUIRED __MSABI_LONG(3010)\0"
	.byte	0x1
	.uleb128 0x367
	.ascii "ERROR_SUCCESS_RESTART_REQUIRED __MSABI_LONG(3011)\0"
	.byte	0x1
	.uleb128 0x368
	.ascii "ERROR_PRINTER_NOT_FOUND __MSABI_LONG(3012)\0"
	.byte	0x1
	.uleb128 0x369
	.ascii "ERROR_PRINTER_DRIVER_WARNED __MSABI_LONG(3013)\0"
	.byte	0x1
	.uleb128 0x36a
	.ascii "ERROR_PRINTER_DRIVER_BLOCKED __MSABI_LONG(3014)\0"
	.byte	0x1
	.uleb128 0x36b
	.ascii "ERROR_WINS_INTERNAL __MSABI_LONG(4000)\0"
	.byte	0x1
	.uleb128 0x36c
	.ascii "ERROR_CAN_NOT_DEL_LOCAL_WINS __MSABI_LONG(4001)\0"
	.byte	0x1
	.uleb128 0x36d
	.ascii "ERROR_STATIC_INIT __MSABI_LONG(4002)\0"
	.byte	0x1
	.uleb128 0x36e
	.ascii "ERROR_INC_BACKUP __MSABI_LONG(4003)\0"
	.byte	0x1
	.uleb128 0x36f
	.ascii "ERROR_FULL_BACKUP __MSABI_LONG(4004)\0"
	.byte	0x1
	.uleb128 0x370
	.ascii "ERROR_REC_NON_EXISTENT __MSABI_LONG(4005)\0"
	.byte	0x1
	.uleb128 0x371
	.ascii "ERROR_RPL_NOT_ALLOWED __MSABI_LONG(4006)\0"
	.byte	0x1
	.uleb128 0x372
	.ascii "ERROR_DHCP_ADDRESS_CONFLICT __MSABI_LONG(4100)\0"
	.byte	0x1
	.uleb128 0x373
	.ascii "ERROR_WMI_GUID_NOT_FOUND __MSABI_LONG(4200)\0"
	.byte	0x1
	.uleb128 0x374
	.ascii "ERROR_WMI_INSTANCE_NOT_FOUND __MSABI_LONG(4201)\0"
	.byte	0x1
	.uleb128 0x375
	.ascii "ERROR_WMI_ITEMID_NOT_FOUND __MSABI_LONG(4202)\0"
	.byte	0x1
	.uleb128 0x376
	.ascii "ERROR_WMI_TRY_AGAIN __MSABI_LONG(4203)\0"
	.byte	0x1
	.uleb128 0x377
	.ascii "ERROR_WMI_DP_NOT_FOUND __MSABI_LONG(4204)\0"
	.byte	0x1
	.uleb128 0x378
	.ascii "ERROR_WMI_UNRESOLVED_INSTANCE_REF __MSABI_LONG(4205)\0"
	.byte	0x1
	.uleb128 0x379
	.ascii "ERROR_WMI_ALREADY_ENABLED __MSABI_LONG(4206)\0"
	.byte	0x1
	.uleb128 0x37a
	.ascii "ERROR_WMI_GUID_DISCONNECTED __MSABI_LONG(4207)\0"
	.byte	0x1
	.uleb128 0x37b
	.ascii "ERROR_WMI_SERVER_UNAVAILABLE __MSABI_LONG(4208)\0"
	.byte	0x1
	.uleb128 0x37c
	.ascii "ERROR_WMI_DP_FAILED __MSABI_LONG(4209)\0"
	.byte	0x1
	.uleb128 0x37d
	.ascii "ERROR_WMI_INVALID_MOF __MSABI_LONG(4210)\0"
	.byte	0x1
	.uleb128 0x37e
	.ascii "ERROR_WMI_INVALID_REGINFO __MSABI_LONG(4211)\0"
	.byte	0x1
	.uleb128 0x37f
	.ascii "ERROR_WMI_ALREADY_DISABLED __MSABI_LONG(4212)\0"
	.byte	0x1
	.uleb128 0x380
	.ascii "ERROR_WMI_READ_ONLY __MSABI_LONG(4213)\0"
	.byte	0x1
	.uleb128 0x381
	.ascii "ERROR_WMI_SET_FAILURE __MSABI_LONG(4214)\0"
	.byte	0x1
	.uleb128 0x382
	.ascii "ERROR_INVALID_MEDIA __MSABI_LONG(4300)\0"
	.byte	0x1
	.uleb128 0x383
	.ascii "ERROR_INVALID_LIBRARY __MSABI_LONG(4301)\0"
	.byte	0x1
	.uleb128 0x384
	.ascii "ERROR_INVALID_MEDIA_POOL __MSABI_LONG(4302)\0"
	.byte	0x1
	.uleb128 0x385
	.ascii "ERROR_DRIVE_MEDIA_MISMATCH __MSABI_LONG(4303)\0"
	.byte	0x1
	.uleb128 0x386
	.ascii "ERROR_MEDIA_OFFLINE __MSABI_LONG(4304)\0"
	.byte	0x1
	.uleb128 0x387
	.ascii "ERROR_LIBRARY_OFFLINE __MSABI_LONG(4305)\0"
	.byte	0x1
	.uleb128 0x388
	.ascii "ERROR_EMPTY __MSABI_LONG(4306)\0"
	.byte	0x1
	.uleb128 0x389
	.ascii "ERROR_NOT_EMPTY __MSABI_LONG(4307)\0"
	.byte	0x1
	.uleb128 0x38a
	.ascii "ERROR_MEDIA_UNAVAILABLE __MSABI_LONG(4308)\0"
	.byte	0x1
	.uleb128 0x38b
	.ascii "ERROR_RESOURCE_DISABLED __MSABI_LONG(4309)\0"
	.byte	0x1
	.uleb128 0x38c
	.ascii "ERROR_INVALID_CLEANER __MSABI_LONG(4310)\0"
	.byte	0x1
	.uleb128 0x38d
	.ascii "ERROR_UNABLE_TO_CLEAN __MSABI_LONG(4311)\0"
	.byte	0x1
	.uleb128 0x38e
	.ascii "ERROR_OBJECT_NOT_FOUND __MSABI_LONG(4312)\0"
	.byte	0x1
	.uleb128 0x38f
	.ascii "ERROR_DATABASE_FAILURE __MSABI_LONG(4313)\0"
	.byte	0x1
	.uleb128 0x390
	.ascii "ERROR_DATABASE_FULL __MSABI_LONG(4314)\0"
	.byte	0x1
	.uleb128 0x391
	.ascii "ERROR_MEDIA_INCOMPATIBLE __MSABI_LONG(4315)\0"
	.byte	0x1
	.uleb128 0x392
	.ascii "ERROR_RESOURCE_NOT_PRESENT __MSABI_LONG(4316)\0"
	.byte	0x1
	.uleb128 0x393
	.ascii "ERROR_INVALID_OPERATION __MSABI_LONG(4317)\0"
	.byte	0x1
	.uleb128 0x394
	.ascii "ERROR_MEDIA_NOT_AVAILABLE __MSABI_LONG(4318)\0"
	.byte	0x1
	.uleb128 0x395
	.ascii "ERROR_DEVICE_NOT_AVAILABLE __MSABI_LONG(4319)\0"
	.byte	0x1
	.uleb128 0x396
	.ascii "ERROR_REQUEST_REFUSED __MSABI_LONG(4320)\0"
	.byte	0x1
	.uleb128 0x397
	.ascii "ERROR_INVALID_DRIVE_OBJECT __MSABI_LONG(4321)\0"
	.byte	0x1
	.uleb128 0x398
	.ascii "ERROR_LIBRARY_FULL __MSABI_LONG(4322)\0"
	.byte	0x1
	.uleb128 0x399
	.ascii "ERROR_MEDIUM_NOT_ACCESSIBLE __MSABI_LONG(4323)\0"
	.byte	0x1
	.uleb128 0x39a
	.ascii "ERROR_UNABLE_TO_LOAD_MEDIUM __MSABI_LONG(4324)\0"
	.byte	0x1
	.uleb128 0x39b
	.ascii "ERROR_UNABLE_TO_INVENTORY_DRIVE __MSABI_LONG(4325)\0"
	.byte	0x1
	.uleb128 0x39c
	.ascii "ERROR_UNABLE_TO_INVENTORY_SLOT __MSABI_LONG(4326)\0"
	.byte	0x1
	.uleb128 0x39d
	.ascii "ERROR_UNABLE_TO_INVENTORY_TRANSPORT __MSABI_LONG(4327)\0"
	.byte	0x1
	.uleb128 0x39e
	.ascii "ERROR_TRANSPORT_FULL __MSABI_LONG(4328)\0"
	.byte	0x1
	.uleb128 0x39f
	.ascii "ERROR_CONTROLLING_IEPORT __MSABI_LONG(4329)\0"
	.byte	0x1
	.uleb128 0x3a0
	.ascii "ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA __MSABI_LONG(4330)\0"
	.byte	0x1
	.uleb128 0x3a1
	.ascii "ERROR_CLEANER_SLOT_SET __MSABI_LONG(4331)\0"
	.byte	0x1
	.uleb128 0x3a2
	.ascii "ERROR_CLEANER_SLOT_NOT_SET __MSABI_LONG(4332)\0"
	.byte	0x1
	.uleb128 0x3a3
	.ascii "ERROR_CLEANER_CARTRIDGE_SPENT __MSABI_LONG(4333)\0"
	.byte	0x1
	.uleb128 0x3a4
	.ascii "ERROR_UNEXPECTED_OMID __MSABI_LONG(4334)\0"
	.byte	0x1
	.uleb128 0x3a5
	.ascii "ERROR_CANT_DELETE_LAST_ITEM __MSABI_LONG(4335)\0"
	.byte	0x1
	.uleb128 0x3a6
	.ascii "ERROR_MESSAGE_EXCEEDS_MAX_SIZE __MSABI_LONG(4336)\0"
	.byte	0x1
	.uleb128 0x3a7
	.ascii "ERROR_VOLUME_CONTAINS_SYS_FILES __MSABI_LONG(4337)\0"
	.byte	0x1
	.uleb128 0x3a8
	.ascii "ERROR_INDIGENOUS_TYPE __MSABI_LONG(4338)\0"
	.byte	0x1
	.uleb128 0x3a9
	.ascii "ERROR_NO_SUPPORTING_DRIVES __MSABI_LONG(4339)\0"
	.byte	0x1
	.uleb128 0x3aa
	.ascii "ERROR_CLEANER_CARTRIDGE_INSTALLED __MSABI_LONG(4340)\0"
	.byte	0x1
	.uleb128 0x3ab
	.ascii "ERROR_IEPORT_FULL __MSABI_LONG(4341)\0"
	.byte	0x1
	.uleb128 0x3ac
	.ascii "ERROR_FILE_OFFLINE __MSABI_LONG(4350)\0"
	.byte	0x1
	.uleb128 0x3ad
	.ascii "ERROR_REMOTE_STORAGE_NOT_ACTIVE __MSABI_LONG(4351)\0"
	.byte	0x1
	.uleb128 0x3ae
	.ascii "ERROR_REMOTE_STORAGE_MEDIA_ERROR __MSABI_LONG(4352)\0"
	.byte	0x1
	.uleb128 0x3af
	.ascii "ERROR_NOT_A_REPARSE_POINT __MSABI_LONG(4390)\0"
	.byte	0x1
	.uleb128 0x3b0
	.ascii "ERROR_REPARSE_ATTRIBUTE_CONFLICT __MSABI_LONG(4391)\0"
	.byte	0x1
	.uleb128 0x3b1
	.ascii "ERROR_INVALID_REPARSE_DATA __MSABI_LONG(4392)\0"
	.byte	0x1
	.uleb128 0x3b2
	.ascii "ERROR_REPARSE_TAG_INVALID __MSABI_LONG(4393)\0"
	.byte	0x1
	.uleb128 0x3b3
	.ascii "ERROR_REPARSE_TAG_MISMATCH __MSABI_LONG(4394)\0"
	.byte	0x1
	.uleb128 0x3b4
	.ascii "ERROR_VOLUME_NOT_SIS_ENABLED __MSABI_LONG(4500)\0"
	.byte	0x1
	.uleb128 0x3b5
	.ascii "ERROR_DEPENDENT_RESOURCE_EXISTS __MSABI_LONG(5001)\0"
	.byte	0x1
	.uleb128 0x3b6
	.ascii "ERROR_DEPENDENCY_NOT_FOUND __MSABI_LONG(5002)\0"
	.byte	0x1
	.uleb128 0x3b7
	.ascii "ERROR_DEPENDENCY_ALREADY_EXISTS __MSABI_LONG(5003)\0"
	.byte	0x1
	.uleb128 0x3b8
	.ascii "ERROR_RESOURCE_NOT_ONLINE __MSABI_LONG(5004)\0"
	.byte	0x1
	.uleb128 0x3b9
	.ascii "ERROR_HOST_NODE_NOT_AVAILABLE __MSABI_LONG(5005)\0"
	.byte	0x1
	.uleb128 0x3ba
	.ascii "ERROR_RESOURCE_NOT_AVAILABLE __MSABI_LONG(5006)\0"
	.byte	0x1
	.uleb128 0x3bb
	.ascii "ERROR_RESOURCE_NOT_FOUND __MSABI_LONG(5007)\0"
	.byte	0x1
	.uleb128 0x3bc
	.ascii "ERROR_SHUTDOWN_CLUSTER __MSABI_LONG(5008)\0"
	.byte	0x1
	.uleb128 0x3bd
	.ascii "ERROR_CANT_EVICT_ACTIVE_NODE __MSABI_LONG(5009)\0"
	.byte	0x1
	.uleb128 0x3be
	.ascii "ERROR_OBJECT_ALREADY_EXISTS __MSABI_LONG(5010)\0"
	.byte	0x1
	.uleb128 0x3bf
	.ascii "ERROR_OBJECT_IN_LIST __MSABI_LONG(5011)\0"
	.byte	0x1
	.uleb128 0x3c0
	.ascii "ERROR_GROUP_NOT_AVAILABLE __MSABI_LONG(5012)\0"
	.byte	0x1
	.uleb128 0x3c1
	.ascii "ERROR_GROUP_NOT_FOUND __MSABI_LONG(5013)\0"
	.byte	0x1
	.uleb128 0x3c2
	.ascii "ERROR_GROUP_NOT_ONLINE __MSABI_LONG(5014)\0"
	.byte	0x1
	.uleb128 0x3c3
	.ascii "ERROR_HOST_NODE_NOT_RESOURCE_OWNER __MSABI_LONG(5015)\0"
	.byte	0x1
	.uleb128 0x3c4
	.ascii "ERROR_HOST_NODE_NOT_GROUP_OWNER __MSABI_LONG(5016)\0"
	.byte	0x1
	.uleb128 0x3c5
	.ascii "ERROR_RESMON_CREATE_FAILED __MSABI_LONG(5017)\0"
	.byte	0x1
	.uleb128 0x3c6
	.ascii "ERROR_RESMON_ONLINE_FAILED __MSABI_LONG(5018)\0"
	.byte	0x1
	.uleb128 0x3c7
	.ascii "ERROR_RESOURCE_ONLINE __MSABI_LONG(5019)\0"
	.byte	0x1
	.uleb128 0x3c8
	.ascii "ERROR_QUORUM_RESOURCE __MSABI_LONG(5020)\0"
	.byte	0x1
	.uleb128 0x3c9
	.ascii "ERROR_NOT_QUORUM_CAPABLE __MSABI_LONG(5021)\0"
	.byte	0x1
	.uleb128 0x3ca
	.ascii "ERROR_CLUSTER_SHUTTING_DOWN __MSABI_LONG(5022)\0"
	.byte	0x1
	.uleb128 0x3cb
	.ascii "ERROR_INVALID_STATE __MSABI_LONG(5023)\0"
	.byte	0x1
	.uleb128 0x3cc
	.ascii "ERROR_RESOURCE_PROPERTIES_STORED __MSABI_LONG(5024)\0"
	.byte	0x1
	.uleb128 0x3cd
	.ascii "ERROR_NOT_QUORUM_CLASS __MSABI_LONG(5025)\0"
	.byte	0x1
	.uleb128 0x3ce
	.ascii "ERROR_CORE_RESOURCE __MSABI_LONG(5026)\0"
	.byte	0x1
	.uleb128 0x3cf
	.ascii "ERROR_QUORUM_RESOURCE_ONLINE_FAILED __MSABI_LONG(5027)\0"
	.byte	0x1
	.uleb128 0x3d0
	.ascii "ERROR_QUORUMLOG_OPEN_FAILED __MSABI_LONG(5028)\0"
	.byte	0x1
	.uleb128 0x3d1
	.ascii "ERROR_CLUSTERLOG_CORRUPT __MSABI_LONG(5029)\0"
	.byte	0x1
	.uleb128 0x3d2
	.ascii "ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE __MSABI_LONG(5030)\0"
	.byte	0x1
	.uleb128 0x3d3
	.ascii "ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE __MSABI_LONG(5031)\0"
	.byte	0x1
	.uleb128 0x3d4
	.ascii "ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND __MSABI_LONG(5032)\0"
	.byte	0x1
	.uleb128 0x3d5
	.ascii "ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE __MSABI_LONG(5033)\0"
	.byte	0x1
	.uleb128 0x3d6
	.ascii "ERROR_QUORUM_OWNER_ALIVE __MSABI_LONG(5034)\0"
	.byte	0x1
	.uleb128 0x3d7
	.ascii "ERROR_NETWORK_NOT_AVAILABLE __MSABI_LONG(5035)\0"
	.byte	0x1
	.uleb128 0x3d8
	.ascii "ERROR_NODE_NOT_AVAILABLE __MSABI_LONG(5036)\0"
	.byte	0x1
	.uleb128 0x3d9
	.ascii "ERROR_ALL_NODES_NOT_AVAILABLE __MSABI_LONG(5037)\0"
	.byte	0x1
	.uleb128 0x3da
	.ascii "ERROR_RESOURCE_FAILED __MSABI_LONG(5038)\0"
	.byte	0x1
	.uleb128 0x3db
	.ascii "ERROR_CLUSTER_INVALID_NODE __MSABI_LONG(5039)\0"
	.byte	0x1
	.uleb128 0x3dc
	.ascii "ERROR_CLUSTER_NODE_EXISTS __MSABI_LONG(5040)\0"
	.byte	0x1
	.uleb128 0x3dd
	.ascii "ERROR_CLUSTER_JOIN_IN_PROGRESS __MSABI_LONG(5041)\0"
	.byte	0x1
	.uleb128 0x3de
	.ascii "ERROR_CLUSTER_NODE_NOT_FOUND __MSABI_LONG(5042)\0"
	.byte	0x1
	.uleb128 0x3df
	.ascii "ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND __MSABI_LONG(5043)\0"
	.byte	0x1
	.uleb128 0x3e0
	.ascii "ERROR_CLUSTER_NETWORK_EXISTS __MSABI_LONG(5044)\0"
	.byte	0x1
	.uleb128 0x3e1
	.ascii "ERROR_CLUSTER_NETWORK_NOT_FOUND __MSABI_LONG(5045)\0"
	.byte	0x1
	.uleb128 0x3e2
	.ascii "ERROR_CLUSTER_NETINTERFACE_EXISTS __MSABI_LONG(5046)\0"
	.byte	0x1
	.uleb128 0x3e3
	.ascii "ERROR_CLUSTER_NETINTERFACE_NOT_FOUND __MSABI_LONG(5047)\0"
	.byte	0x1
	.uleb128 0x3e4
	.ascii "ERROR_CLUSTER_INVALID_REQUEST __MSABI_LONG(5048)\0"
	.byte	0x1
	.uleb128 0x3e5
	.ascii "ERROR_CLUSTER_INVALID_NETWORK_PROVIDER __MSABI_LONG(5049)\0"
	.byte	0x1
	.uleb128 0x3e6
	.ascii "ERROR_CLUSTER_NODE_DOWN __MSABI_LONG(5050)\0"
	.byte	0x1
	.uleb128 0x3e7
	.ascii "ERROR_CLUSTER_NODE_UNREACHABLE __MSABI_LONG(5051)\0"
	.byte	0x1
	.uleb128 0x3e8
	.ascii "ERROR_CLUSTER_NODE_NOT_MEMBER __MSABI_LONG(5052)\0"
	.byte	0x1
	.uleb128 0x3e9
	.ascii "ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS __MSABI_LONG(5053)\0"
	.byte	0x1
	.uleb128 0x3ea
	.ascii "ERROR_CLUSTER_INVALID_NETWORK __MSABI_LONG(5054)\0"
	.byte	0x1
	.uleb128 0x3eb
	.ascii "ERROR_CLUSTER_NODE_UP __MSABI_LONG(5056)\0"
	.byte	0x1
	.uleb128 0x3ec
	.ascii "ERROR_CLUSTER_IPADDR_IN_USE __MSABI_LONG(5057)\0"
	.byte	0x1
	.uleb128 0x3ed
	.ascii "ERROR_CLUSTER_NODE_NOT_PAUSED __MSABI_LONG(5058)\0"
	.byte	0x1
	.uleb128 0x3ee
	.ascii "ERROR_CLUSTER_NO_SECURITY_CONTEXT __MSABI_LONG(5059)\0"
	.byte	0x1
	.uleb128 0x3ef
	.ascii "ERROR_CLUSTER_NETWORK_NOT_INTERNAL __MSABI_LONG(5060)\0"
	.byte	0x1
	.uleb128 0x3f0
	.ascii "ERROR_CLUSTER_NODE_ALREADY_UP __MSABI_LONG(5061)\0"
	.byte	0x1
	.uleb128 0x3f1
	.ascii "ERROR_CLUSTER_NODE_ALREADY_DOWN __MSABI_LONG(5062)\0"
	.byte	0x1
	.uleb128 0x3f2
	.ascii "ERROR_CLUSTER_NETWORK_ALREADY_ONLINE __MSABI_LONG(5063)\0"
	.byte	0x1
	.uleb128 0x3f3
	.ascii "ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE __MSABI_LONG(5064)\0"
	.byte	0x1
	.uleb128 0x3f4
	.ascii "ERROR_CLUSTER_NODE_ALREADY_MEMBER __MSABI_LONG(5065)\0"
	.byte	0x1
	.uleb128 0x3f5
	.ascii "ERROR_CLUSTER_LAST_INTERNAL_NETWORK __MSABI_LONG(5066)\0"
	.byte	0x1
	.uleb128 0x3f6
	.ascii "ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS __MSABI_LONG(5067)\0"
	.byte	0x1
	.uleb128 0x3f7
	.ascii "ERROR_INVALID_OPERATION_ON_QUORUM __MSABI_LONG(5068)\0"
	.byte	0x1
	.uleb128 0x3f8
	.ascii "ERROR_DEPENDENCY_NOT_ALLOWED __MSABI_LONG(5069)\0"
	.byte	0x1
	.uleb128 0x3f9
	.ascii "ERROR_CLUSTER_NODE_PAUSED __MSABI_LONG(5070)\0"
	.byte	0x1
	.uleb128 0x3fa
	.ascii "ERROR_NODE_CANT_HOST_RESOURCE __MSABI_LONG(5071)\0"
	.byte	0x1
	.uleb128 0x3fb
	.ascii "ERROR_CLUSTER_NODE_NOT_READY __MSABI_LONG(5072)\0"
	.byte	0x1
	.uleb128 0x3fc
	.ascii "ERROR_CLUSTER_NODE_SHUTTING_DOWN __MSABI_LONG(5073)\0"
	.byte	0x1
	.uleb128 0x3fd
	.ascii "ERROR_CLUSTER_JOIN_ABORTED __MSABI_LONG(5074)\0"
	.byte	0x1
	.uleb128 0x3fe
	.ascii "ERROR_CLUSTER_INCOMPATIBLE_VERSIONS __MSABI_LONG(5075)\0"
	.byte	0x1
	.uleb128 0x3ff
	.ascii "ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED __MSABI_LONG(5076)\0"
	.byte	0x1
	.uleb128 0x400
	.ascii "ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED __MSABI_LONG(5077)\0"
	.byte	0x1
	.uleb128 0x401
	.ascii "ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND __MSABI_LONG(5078)\0"
	.byte	0x1
	.uleb128 0x402
	.ascii "ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED __MSABI_LONG(5079)\0"
	.byte	0x1
	.uleb128 0x403
	.ascii "ERROR_CLUSTER_RESNAME_NOT_FOUND __MSABI_LONG(5080)\0"
	.byte	0x1
	.uleb128 0x404
	.ascii "ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED __MSABI_LONG(5081)\0"
	.byte	0x1
	.uleb128 0x405
	.ascii "ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST __MSABI_LONG(5082)\0"
	.byte	0x1
	.uleb128 0x406
	.ascii "ERROR_CLUSTER_DATABASE_SEQMISMATCH __MSABI_LONG(5083)\0"
	.byte	0x1
	.uleb128 0x407
	.ascii "ERROR_RESMON_INVALID_STATE __MSABI_LONG(5084)\0"
	.byte	0x1
	.uleb128 0x408
	.ascii "ERROR_CLUSTER_GUM_NOT_LOCKER __MSABI_LONG(5085)\0"
	.byte	0x1
	.uleb128 0x409
	.ascii "ERROR_QUORUM_DISK_NOT_FOUND __MSABI_LONG(5086)\0"
	.byte	0x1
	.uleb128 0x40a
	.ascii "ERROR_DATABASE_BACKUP_CORRUPT __MSABI_LONG(5087)\0"
	.byte	0x1
	.uleb128 0x40b
	.ascii "ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT __MSABI_LONG(5088)\0"
	.byte	0x1
	.uleb128 0x40c
	.ascii "ERROR_RESOURCE_PROPERTY_UNCHANGEABLE __MSABI_LONG(5089)\0"
	.byte	0x1
	.uleb128 0x40d
	.ascii "ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE __MSABI_LONG(5890)\0"
	.byte	0x1
	.uleb128 0x40e
	.ascii "ERROR_CLUSTER_QUORUMLOG_NOT_FOUND __MSABI_LONG(5891)\0"
	.byte	0x1
	.uleb128 0x40f
	.ascii "ERROR_CLUSTER_MEMBERSHIP_HALT __MSABI_LONG(5892)\0"
	.byte	0x1
	.uleb128 0x410
	.ascii "ERROR_CLUSTER_INSTANCE_ID_MISMATCH __MSABI_LONG(5893)\0"
	.byte	0x1
	.uleb128 0x411
	.ascii "ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP __MSABI_LONG(5894)\0"
	.byte	0x1
	.uleb128 0x412
	.ascii "ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH __MSABI_LONG(5895)\0"
	.byte	0x1
	.uleb128 0x413
	.ascii "ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP __MSABI_LONG(5896)\0"
	.byte	0x1
	.uleb128 0x414
	.ascii "ERROR_CLUSTER_PARAMETER_MISMATCH __MSABI_LONG(5897)\0"
	.byte	0x1
	.uleb128 0x415
	.ascii "ERROR_NODE_CANNOT_BE_CLUSTERED __MSABI_LONG(5898)\0"
	.byte	0x1
	.uleb128 0x416
	.ascii "ERROR_CLUSTER_WRONG_OS_VERSION __MSABI_LONG(5899)\0"
	.byte	0x1
	.uleb128 0x417
	.ascii "ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME __MSABI_LONG(5900)\0"
	.byte	0x1
	.uleb128 0x418
	.ascii "ERROR_CLUSCFG_ALREADY_COMMITTED __MSABI_LONG(5901)\0"
	.byte	0x1
	.uleb128 0x419
	.ascii "ERROR_CLUSCFG_ROLLBACK_FAILED __MSABI_LONG(5902)\0"
	.byte	0x1
	.uleb128 0x41a
	.ascii "ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT __MSABI_LONG(5903)\0"
	.byte	0x1
	.uleb128 0x41b
	.ascii "ERROR_CLUSTER_OLD_VERSION __MSABI_LONG(5904)\0"
	.byte	0x1
	.uleb128 0x41c
	.ascii "ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME __MSABI_LONG(5905)\0"
	.byte	0x1
	.uleb128 0x41d
	.ascii "ERROR_ENCRYPTION_FAILED __MSABI_LONG(6000)\0"
	.byte	0x1
	.uleb128 0x41e
	.ascii "ERROR_DECRYPTION_FAILED __MSABI_LONG(6001)\0"
	.byte	0x1
	.uleb128 0x41f
	.ascii "ERROR_FILE_ENCRYPTED __MSABI_LONG(6002)\0"
	.byte	0x1
	.uleb128 0x420
	.ascii "ERROR_NO_RECOVERY_POLICY __MSABI_LONG(6003)\0"
	.byte	0x1
	.uleb128 0x421
	.ascii "ERROR_NO_EFS __MSABI_LONG(6004)\0"
	.byte	0x1
	.uleb128 0x422
	.ascii "ERROR_WRONG_EFS __MSABI_LONG(6005)\0"
	.byte	0x1
	.uleb128 0x423
	.ascii "ERROR_NO_USER_KEYS __MSABI_LONG(6006)\0"
	.byte	0x1
	.uleb128 0x424
	.ascii "ERROR_FILE_NOT_ENCRYPTED __MSABI_LONG(6007)\0"
	.byte	0x1
	.uleb128 0x425
	.ascii "ERROR_NOT_EXPORT_FORMAT __MSABI_LONG(6008)\0"
	.byte	0x1
	.uleb128 0x426
	.ascii "ERROR_FILE_READ_ONLY __MSABI_LONG(6009)\0"
	.byte	0x1
	.uleb128 0x427
	.ascii "ERROR_DIR_EFS_DISALLOWED __MSABI_LONG(6010)\0"
	.byte	0x1
	.uleb128 0x428
	.ascii "ERROR_EFS_SERVER_NOT_TRUSTED __MSABI_LONG(6011)\0"
	.byte	0x1
	.uleb128 0x429
	.ascii "ERROR_BAD_RECOVERY_POLICY __MSABI_LONG(6012)\0"
	.byte	0x1
	.uleb128 0x42a
	.ascii "ERROR_EFS_ALG_BLOB_TOO_BIG __MSABI_LONG(6013)\0"
	.byte	0x1
	.uleb128 0x42b
	.ascii "ERROR_VOLUME_NOT_SUPPORT_EFS __MSABI_LONG(6014)\0"
	.byte	0x1
	.uleb128 0x42c
	.ascii "ERROR_EFS_DISABLED __MSABI_LONG(6015)\0"
	.byte	0x1
	.uleb128 0x42d
	.ascii "ERROR_EFS_VERSION_NOT_SUPPORT __MSABI_LONG(6016)\0"
	.byte	0x1
	.uleb128 0x42e
	.ascii "ERROR_NO_BROWSER_SERVERS_FOUND __MSABI_LONG(6118)\0"
	.byte	0x1
	.uleb128 0x42f
	.ascii "SCHED_E_SERVICE_NOT_LOCALSYSTEM __MSABI_LONG(6200)\0"
	.byte	0x1
	.uleb128 0x430
	.ascii "ERROR_CTX_WINSTATION_NAME_INVALID __MSABI_LONG(7001)\0"
	.byte	0x1
	.uleb128 0x431
	.ascii "ERROR_CTX_INVALID_PD __MSABI_LONG(7002)\0"
	.byte	0x1
	.uleb128 0x432
	.ascii "ERROR_CTX_PD_NOT_FOUND __MSABI_LONG(7003)\0"
	.byte	0x1
	.uleb128 0x433
	.ascii "ERROR_CTX_WD_NOT_FOUND __MSABI_LONG(7004)\0"
	.byte	0x1
	.uleb128 0x434
	.ascii "ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY __MSABI_LONG(7005)\0"
	.byte	0x1
	.uleb128 0x435
	.ascii "ERROR_CTX_SERVICE_NAME_COLLISION __MSABI_LONG(7006)\0"
	.byte	0x1
	.uleb128 0x436
	.ascii "ERROR_CTX_CLOSE_PENDING __MSABI_LONG(7007)\0"
	.byte	0x1
	.uleb128 0x437
	.ascii "ERROR_CTX_NO_OUTBUF __MSABI_LONG(7008)\0"
	.byte	0x1
	.uleb128 0x438
	.ascii "ERROR_CTX_MODEM_INF_NOT_FOUND __MSABI_LONG(7009)\0"
	.byte	0x1
	.uleb128 0x439
	.ascii "ERROR_CTX_INVALID_MODEMNAME __MSABI_LONG(7010)\0"
	.byte	0x1
	.uleb128 0x43a
	.ascii "ERROR_CTX_MODEM_RESPONSE_ERROR __MSABI_LONG(7011)\0"
	.byte	0x1
	.uleb128 0x43b
	.ascii "ERROR_CTX_MODEM_RESPONSE_TIMEOUT __MSABI_LONG(7012)\0"
	.byte	0x1
	.uleb128 0x43c
	.ascii "ERROR_CTX_MODEM_RESPONSE_NO_CARRIER __MSABI_LONG(7013)\0"
	.byte	0x1
	.uleb128 0x43d
	.ascii "ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE __MSABI_LONG(7014)\0"
	.byte	0x1
	.uleb128 0x43e
	.ascii "ERROR_CTX_MODEM_RESPONSE_BUSY __MSABI_LONG(7015)\0"
	.byte	0x1
	.uleb128 0x43f
	.ascii "ERROR_CTX_MODEM_RESPONSE_VOICE __MSABI_LONG(7016)\0"
	.byte	0x1
	.uleb128 0x440
	.ascii "ERROR_CTX_TD_ERROR __MSABI_LONG(7017)\0"
	.byte	0x1
	.uleb128 0x441
	.ascii "ERROR_CTX_WINSTATION_NOT_FOUND __MSABI_LONG(7022)\0"
	.byte	0x1
	.uleb128 0x442
	.ascii "ERROR_CTX_WINSTATION_ALREADY_EXISTS __MSABI_LONG(7023)\0"
	.byte	0x1
	.uleb128 0x443
	.ascii "ERROR_CTX_WINSTATION_BUSY __MSABI_LONG(7024)\0"
	.byte	0x1
	.uleb128 0x444
	.ascii "ERROR_CTX_BAD_VIDEO_MODE __MSABI_LONG(7025)\0"
	.byte	0x1
	.uleb128 0x445
	.ascii "ERROR_CTX_GRAPHICS_INVALID __MSABI_LONG(7035)\0"
	.byte	0x1
	.uleb128 0x446
	.ascii "ERROR_CTX_LOGON_DISABLED __MSABI_LONG(7037)\0"
	.byte	0x1
	.uleb128 0x447
	.ascii "ERROR_CTX_NOT_CONSOLE __MSABI_LONG(7038)\0"
	.byte	0x1
	.uleb128 0x448
	.ascii "ERROR_CTX_CLIENT_QUERY_TIMEOUT __MSABI_LONG(7040)\0"
	.byte	0x1
	.uleb128 0x449
	.ascii "ERROR_CTX_CONSOLE_DISCONNECT __MSABI_LONG(7041)\0"
	.byte	0x1
	.uleb128 0x44a
	.ascii "ERROR_CTX_CONSOLE_CONNECT __MSABI_LONG(7042)\0"
	.byte	0x1
	.uleb128 0x44b
	.ascii "ERROR_CTX_SHADOW_DENIED __MSABI_LONG(7044)\0"
	.byte	0x1
	.uleb128 0x44c
	.ascii "ERROR_CTX_WINSTATION_ACCESS_DENIED __MSABI_LONG(7045)\0"
	.byte	0x1
	.uleb128 0x44d
	.ascii "ERROR_CTX_INVALID_WD __MSABI_LONG(7049)\0"
	.byte	0x1
	.uleb128 0x44e
	.ascii "ERROR_CTX_SHADOW_INVALID __MSABI_LONG(7050)\0"
	.byte	0x1
	.uleb128 0x44f
	.ascii "ERROR_CTX_SHADOW_DISABLED __MSABI_LONG(7051)\0"
	.byte	0x1
	.uleb128 0x450
	.ascii "ERROR_CTX_CLIENT_LICENSE_IN_USE __MSABI_LONG(7052)\0"
	.byte	0x1
	.uleb128 0x451
	.ascii "ERROR_CTX_CLIENT_LICENSE_NOT_SET __MSABI_LONG(7053)\0"
	.byte	0x1
	.uleb128 0x452
	.ascii "ERROR_CTX_LICENSE_NOT_AVAILABLE __MSABI_LONG(7054)\0"
	.byte	0x1
	.uleb128 0x453
	.ascii "ERROR_CTX_LICENSE_CLIENT_INVALID __MSABI_LONG(7055)\0"
	.byte	0x1
	.uleb128 0x454
	.ascii "ERROR_CTX_LICENSE_EXPIRED __MSABI_LONG(7056)\0"
	.byte	0x1
	.uleb128 0x455
	.ascii "ERROR_CTX_SHADOW_NOT_RUNNING __MSABI_LONG(7057)\0"
	.byte	0x1
	.uleb128 0x456
	.ascii "ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE __MSABI_LONG(7058)\0"
	.byte	0x1
	.uleb128 0x457
	.ascii "ERROR_ACTIVATION_COUNT_EXCEEDED __MSABI_LONG(7059)\0"
	.byte	0x1
	.uleb128 0x458
	.ascii "FRS_ERR_INVALID_API_SEQUENCE __MSABI_LONG(8001)\0"
	.byte	0x1
	.uleb128 0x459
	.ascii "FRS_ERR_STARTING_SERVICE __MSABI_LONG(8002)\0"
	.byte	0x1
	.uleb128 0x45a
	.ascii "FRS_ERR_STOPPING_SERVICE __MSABI_LONG(8003)\0"
	.byte	0x1
	.uleb128 0x45b
	.ascii "FRS_ERR_INTERNAL_API __MSABI_LONG(8004)\0"
	.byte	0x1
	.uleb128 0x45c
	.ascii "FRS_ERR_INTERNAL __MSABI_LONG(8005)\0"
	.byte	0x1
	.uleb128 0x45d
	.ascii "FRS_ERR_SERVICE_COMM __MSABI_LONG(8006)\0"
	.byte	0x1
	.uleb128 0x45e
	.ascii "FRS_ERR_INSUFFICIENT_PRIV __MSABI_LONG(8007)\0"
	.byte	0x1
	.uleb128 0x45f
	.ascii "FRS_ERR_AUTHENTICATION __MSABI_LONG(8008)\0"
	.byte	0x1
	.uleb128 0x460
	.ascii "FRS_ERR_PARENT_INSUFFICIENT_PRIV __MSABI_LONG(8009)\0"
	.byte	0x1
	.uleb128 0x461
	.ascii "FRS_ERR_PARENT_AUTHENTICATION __MSABI_LONG(8010)\0"
	.byte	0x1
	.uleb128 0x462
	.ascii "FRS_ERR_CHILD_TO_PARENT_COMM __MSABI_LONG(8011)\0"
	.byte	0x1
	.uleb128 0x463
	.ascii "FRS_ERR_PARENT_TO_CHILD_COMM __MSABI_LONG(8012)\0"
	.byte	0x1
	.uleb128 0x464
	.ascii "FRS_ERR_SYSVOL_POPULATE __MSABI_LONG(8013)\0"
	.byte	0x1
	.uleb128 0x465
	.ascii "FRS_ERR_SYSVOL_POPULATE_TIMEOUT __MSABI_LONG(8014)\0"
	.byte	0x1
	.uleb128 0x466
	.ascii "FRS_ERR_SYSVOL_IS_BUSY __MSABI_LONG(8015)\0"
	.byte	0x1
	.uleb128 0x467
	.ascii "FRS_ERR_SYSVOL_DEMOTE __MSABI_LONG(8016)\0"
	.byte	0x1
	.uleb128 0x468
	.ascii "FRS_ERR_INVALID_SERVICE_PARAMETER __MSABI_LONG(8017)\0"
	.byte	0x1
	.uleb128 0x469
	.ascii "DS_S_SUCCESS NO_ERROR\0"
	.byte	0x1
	.uleb128 0x46a
	.ascii "ERROR_DS_NOT_INSTALLED __MSABI_LONG(8200)\0"
	.byte	0x1
	.uleb128 0x46b
	.ascii "ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY __MSABI_LONG(8201)\0"
	.byte	0x1
	.uleb128 0x46c
	.ascii "ERROR_DS_NO_ATTRIBUTE_OR_VALUE __MSABI_LONG(8202)\0"
	.byte	0x1
	.uleb128 0x46d
	.ascii "ERROR_DS_INVALID_ATTRIBUTE_SYNTAX __MSABI_LONG(8203)\0"
	.byte	0x1
	.uleb128 0x46e
	.ascii "ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED __MSABI_LONG(8204)\0"
	.byte	0x1
	.uleb128 0x46f
	.ascii "ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS __MSABI_LONG(8205)\0"
	.byte	0x1
	.uleb128 0x470
	.ascii "ERROR_DS_BUSY __MSABI_LONG(8206)\0"
	.byte	0x1
	.uleb128 0x471
	.ascii "ERROR_DS_UNAVAILABLE __MSABI_LONG(8207)\0"
	.byte	0x1
	.uleb128 0x472
	.ascii "ERROR_DS_NO_RIDS_ALLOCATED __MSABI_LONG(8208)\0"
	.byte	0x1
	.uleb128 0x473
	.ascii "ERROR_DS_NO_MORE_RIDS __MSABI_LONG(8209)\0"
	.byte	0x1
	.uleb128 0x474
	.ascii "ERROR_DS_INCORRECT_ROLE_OWNER __MSABI_LONG(8210)\0"
	.byte	0x1
	.uleb128 0x475
	.ascii "ERROR_DS_RIDMGR_INIT_ERROR __MSABI_LONG(8211)\0"
	.byte	0x1
	.uleb128 0x476
	.ascii "ERROR_DS_OBJ_CLASS_VIOLATION __MSABI_LONG(8212)\0"
	.byte	0x1
	.uleb128 0x477
	.ascii "ERROR_DS_CANT_ON_NON_LEAF __MSABI_LONG(8213)\0"
	.byte	0x1
	.uleb128 0x478
	.ascii "ERROR_DS_CANT_ON_RDN __MSABI_LONG(8214)\0"
	.byte	0x1
	.uleb128 0x479
	.ascii "ERROR_DS_CANT_MOD_OBJ_CLASS __MSABI_LONG(8215)\0"
	.byte	0x1
	.uleb128 0x47a
	.ascii "ERROR_DS_CROSS_DOM_MOVE_ERROR __MSABI_LONG(8216)\0"
	.byte	0x1
	.uleb128 0x47b
	.ascii "ERROR_DS_GC_NOT_AVAILABLE __MSABI_LONG(8217)\0"
	.byte	0x1
	.uleb128 0x47c
	.ascii "ERROR_SHARED_POLICY __MSABI_LONG(8218)\0"
	.byte	0x1
	.uleb128 0x47d
	.ascii "ERROR_POLICY_OBJECT_NOT_FOUND __MSABI_LONG(8219)\0"
	.byte	0x1
	.uleb128 0x47e
	.ascii "ERROR_POLICY_ONLY_IN_DS __MSABI_LONG(8220)\0"
	.byte	0x1
	.uleb128 0x47f
	.ascii "ERROR_PROMOTION_ACTIVE __MSABI_LONG(8221)\0"
	.byte	0x1
	.uleb128 0x480
	.ascii "ERROR_NO_PROMOTION_ACTIVE __MSABI_LONG(8222)\0"
	.byte	0x1
	.uleb128 0x481
	.ascii "ERROR_DS_OPERATIONS_ERROR __MSABI_LONG(8224)\0"
	.byte	0x1
	.uleb128 0x482
	.ascii "ERROR_DS_PROTOCOL_ERROR __MSABI_LONG(8225)\0"
	.byte	0x1
	.uleb128 0x483
	.ascii "ERROR_DS_TIMELIMIT_EXCEEDED __MSABI_LONG(8226)\0"
	.byte	0x1
	.uleb128 0x484
	.ascii "ERROR_DS_SIZELIMIT_EXCEEDED __MSABI_LONG(8227)\0"
	.byte	0x1
	.uleb128 0x485
	.ascii "ERROR_DS_ADMIN_LIMIT_EXCEEDED __MSABI_LONG(8228)\0"
	.byte	0x1
	.uleb128 0x486
	.ascii "ERROR_DS_COMPARE_FALSE __MSABI_LONG(8229)\0"
	.byte	0x1
	.uleb128 0x487
	.ascii "ERROR_DS_COMPARE_TRUE __MSABI_LONG(8230)\0"
	.byte	0x1
	.uleb128 0x488
	.ascii "ERROR_DS_AUTH_METHOD_NOT_SUPPORTED __MSABI_LONG(8231)\0"
	.byte	0x1
	.uleb128 0x489
	.ascii "ERROR_DS_STRONG_AUTH_REQUIRED __MSABI_LONG(8232)\0"
	.byte	0x1
	.uleb128 0x48a
	.ascii "ERROR_DS_INAPPROPRIATE_AUTH __MSABI_LONG(8233)\0"
	.byte	0x1
	.uleb128 0x48b
	.ascii "ERROR_DS_AUTH_UNKNOWN __MSABI_LONG(8234)\0"
	.byte	0x1
	.uleb128 0x48c
	.ascii "ERROR_DS_REFERRAL __MSABI_LONG(8235)\0"
	.byte	0x1
	.uleb128 0x48d
	.ascii "ERROR_DS_UNAVAILABLE_CRIT_EXTENSION __MSABI_LONG(8236)\0"
	.byte	0x1
	.uleb128 0x48e
	.ascii "ERROR_DS_CONFIDENTIALITY_REQUIRED __MSABI_LONG(8237)\0"
	.byte	0x1
	.uleb128 0x48f
	.ascii "ERROR_DS_INAPPROPRIATE_MATCHING __MSABI_LONG(8238)\0"
	.byte	0x1
	.uleb128 0x490
	.ascii "ERROR_DS_CONSTRAINT_VIOLATION __MSABI_LONG(8239)\0"
	.byte	0x1
	.uleb128 0x491
	.ascii "ERROR_DS_NO_SUCH_OBJECT __MSABI_LONG(8240)\0"
	.byte	0x1
	.uleb128 0x492
	.ascii "ERROR_DS_ALIAS_PROBLEM __MSABI_LONG(8241)\0"
	.byte	0x1
	.uleb128 0x493
	.ascii "ERROR_DS_INVALID_DN_SYNTAX __MSABI_LONG(8242)\0"
	.byte	0x1
	.uleb128 0x494
	.ascii "ERROR_DS_IS_LEAF __MSABI_LONG(8243)\0"
	.byte	0x1
	.uleb128 0x495
	.ascii "ERROR_DS_ALIAS_DEREF_PROBLEM __MSABI_LONG(8244)\0"
	.byte	0x1
	.uleb128 0x496
	.ascii "ERROR_DS_UNWILLING_TO_PERFORM __MSABI_LONG(8245)\0"
	.byte	0x1
	.uleb128 0x497
	.ascii "ERROR_DS_LOOP_DETECT __MSABI_LONG(8246)\0"
	.byte	0x1
	.uleb128 0x498
	.ascii "ERROR_DS_NAMING_VIOLATION __MSABI_LONG(8247)\0"
	.byte	0x1
	.uleb128 0x499
	.ascii "ERROR_DS_OBJECT_RESULTS_TOO_LARGE __MSABI_LONG(8248)\0"
	.byte	0x1
	.uleb128 0x49a
	.ascii "ERROR_DS_AFFECTS_MULTIPLE_DSAS __MSABI_LONG(8249)\0"
	.byte	0x1
	.uleb128 0x49b
	.ascii "ERROR_DS_SERVER_DOWN __MSABI_LONG(8250)\0"
	.byte	0x1
	.uleb128 0x49c
	.ascii "ERROR_DS_LOCAL_ERROR __MSABI_LONG(8251)\0"
	.byte	0x1
	.uleb128 0x49d
	.ascii "ERROR_DS_ENCODING_ERROR __MSABI_LONG(8252)\0"
	.byte	0x1
	.uleb128 0x49e
	.ascii "ERROR_DS_DECODING_ERROR __MSABI_LONG(8253)\0"
	.byte	0x1
	.uleb128 0x49f
	.ascii "ERROR_DS_FILTER_UNKNOWN __MSABI_LONG(8254)\0"
	.byte	0x1
	.uleb128 0x4a0
	.ascii "ERROR_DS_PARAM_ERROR __MSABI_LONG(8255)\0"
	.byte	0x1
	.uleb128 0x4a1
	.ascii "ERROR_DS_NOT_SUPPORTED __MSABI_LONG(8256)\0"
	.byte	0x1
	.uleb128 0x4a2
	.ascii "ERROR_DS_NO_RESULTS_RETURNED __MSABI_LONG(8257)\0"
	.byte	0x1
	.uleb128 0x4a3
	.ascii "ERROR_DS_CONTROL_NOT_FOUND __MSABI_LONG(8258)\0"
	.byte	0x1
	.uleb128 0x4a4
	.ascii "ERROR_DS_CLIENT_LOOP __MSABI_LONG(8259)\0"
	.byte	0x1
	.uleb128 0x4a5
	.ascii "ERROR_DS_REFERRAL_LIMIT_EXCEEDED __MSABI_LONG(8260)\0"
	.byte	0x1
	.uleb128 0x4a6
	.ascii "ERROR_DS_SORT_CONTROL_MISSING __MSABI_LONG(8261)\0"
	.byte	0x1
	.uleb128 0x4a7
	.ascii "ERROR_DS_OFFSET_RANGE_ERROR __MSABI_LONG(8262)\0"
	.byte	0x1
	.uleb128 0x4a8
	.ascii "ERROR_DS_ROOT_MUST_BE_NC __MSABI_LONG(8301)\0"
	.byte	0x1
	.uleb128 0x4a9
	.ascii "ERROR_DS_ADD_REPLICA_INHIBITED __MSABI_LONG(8302)\0"
	.byte	0x1
	.uleb128 0x4aa
	.ascii "ERROR_DS_ATT_NOT_DEF_IN_SCHEMA __MSABI_LONG(8303)\0"
	.byte	0x1
	.uleb128 0x4ab
	.ascii "ERROR_DS_MAX_OBJ_SIZE_EXCEEDED __MSABI_LONG(8304)\0"
	.byte	0x1
	.uleb128 0x4ac
	.ascii "ERROR_DS_OBJ_STRING_NAME_EXISTS __MSABI_LONG(8305)\0"
	.byte	0x1
	.uleb128 0x4ad
	.ascii "ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA __MSABI_LONG(8306)\0"
	.byte	0x1
	.uleb128 0x4ae
	.ascii "ERROR_DS_RDN_DOESNT_MATCH_SCHEMA __MSABI_LONG(8307)\0"
	.byte	0x1
	.uleb128 0x4af
	.ascii "ERROR_DS_NO_REQUESTED_ATTS_FOUND __MSABI_LONG(8308)\0"
	.byte	0x1
	.uleb128 0x4b0
	.ascii "ERROR_DS_USER_BUFFER_TO_SMALL __MSABI_LONG(8309)\0"
	.byte	0x1
	.uleb128 0x4b1
	.ascii "ERROR_DS_ATT_IS_NOT_ON_OBJ __MSABI_LONG(8310)\0"
	.byte	0x1
	.uleb128 0x4b2
	.ascii "ERROR_DS_ILLEGAL_MOD_OPERATION __MSABI_LONG(8311)\0"
	.byte	0x1
	.uleb128 0x4b3
	.ascii "ERROR_DS_OBJ_TOO_LARGE __MSABI_LONG(8312)\0"
	.byte	0x1
	.uleb128 0x4b4
	.ascii "ERROR_DS_BAD_INSTANCE_TYPE __MSABI_LONG(8313)\0"
	.byte	0x1
	.uleb128 0x4b5
	.ascii "ERROR_DS_MASTERDSA_REQUIRED __MSABI_LONG(8314)\0"
	.byte	0x1
	.uleb128 0x4b6
	.ascii "ERROR_DS_OBJECT_CLASS_REQUIRED __MSABI_LONG(8315)\0"
	.byte	0x1
	.uleb128 0x4b7
	.ascii "ERROR_DS_MISSING_REQUIRED_ATT __MSABI_LONG(8316)\0"
	.byte	0x1
	.uleb128 0x4b8
	.ascii "ERROR_DS_ATT_NOT_DEF_FOR_CLASS __MSABI_LONG(8317)\0"
	.byte	0x1
	.uleb128 0x4b9
	.ascii "ERROR_DS_ATT_ALREADY_EXISTS __MSABI_LONG(8318)\0"
	.byte	0x1
	.uleb128 0x4ba
	.ascii "ERROR_DS_CANT_ADD_ATT_VALUES __MSABI_LONG(8320)\0"
	.byte	0x1
	.uleb128 0x4bb
	.ascii "ERROR_DS_SINGLE_VALUE_CONSTRAINT __MSABI_LONG(8321)\0"
	.byte	0x1
	.uleb128 0x4bc
	.ascii "ERROR_DS_RANGE_CONSTRAINT __MSABI_LONG(8322)\0"
	.byte	0x1
	.uleb128 0x4bd
	.ascii "ERROR_DS_ATT_VAL_ALREADY_EXISTS __MSABI_LONG(8323)\0"
	.byte	0x1
	.uleb128 0x4be
	.ascii "ERROR_DS_CANT_REM_MISSING_ATT __MSABI_LONG(8324)\0"
	.byte	0x1
	.uleb128 0x4bf
	.ascii "ERROR_DS_CANT_REM_MISSING_ATT_VAL __MSABI_LONG(8325)\0"
	.byte	0x1
	.uleb128 0x4c0
	.ascii "ERROR_DS_ROOT_CANT_BE_SUBREF __MSABI_LONG(8326)\0"
	.byte	0x1
	.uleb128 0x4c1
	.ascii "ERROR_DS_NO_CHAINING __MSABI_LONG(8327)\0"
	.byte	0x1
	.uleb128 0x4c2
	.ascii "ERROR_DS_NO_CHAINED_EVAL __MSABI_LONG(8328)\0"
	.byte	0x1
	.uleb128 0x4c3
	.ascii "ERROR_DS_NO_PARENT_OBJECT __MSABI_LONG(8329)\0"
	.byte	0x1
	.uleb128 0x4c4
	.ascii "ERROR_DS_PARENT_IS_AN_ALIAS __MSABI_LONG(8330)\0"
	.byte	0x1
	.uleb128 0x4c5
	.ascii "ERROR_DS_CANT_MIX_MASTER_AND_REPS __MSABI_LONG(8331)\0"
	.byte	0x1
	.uleb128 0x4c6
	.ascii "ERROR_DS_CHILDREN_EXIST __MSABI_LONG(8332)\0"
	.byte	0x1
	.uleb128 0x4c7
	.ascii "ERROR_DS_OBJ_NOT_FOUND __MSABI_LONG(8333)\0"
	.byte	0x1
	.uleb128 0x4c8
	.ascii "ERROR_DS_ALIASED_OBJ_MISSING __MSABI_LONG(8334)\0"
	.byte	0x1
	.uleb128 0x4c9
	.ascii "ERROR_DS_BAD_NAME_SYNTAX __MSABI_LONG(8335)\0"
	.byte	0x1
	.uleb128 0x4ca
	.ascii "ERROR_DS_ALIAS_POINTS_TO_ALIAS __MSABI_LONG(8336)\0"
	.byte	0x1
	.uleb128 0x4cb
	.ascii "ERROR_DS_CANT_DEREF_ALIAS __MSABI_LONG(8337)\0"
	.byte	0x1
	.uleb128 0x4cc
	.ascii "ERROR_DS_OUT_OF_SCOPE __MSABI_LONG(8338)\0"
	.byte	0x1
	.uleb128 0x4cd
	.ascii "ERROR_DS_OBJECT_BEING_REMOVED __MSABI_LONG(8339)\0"
	.byte	0x1
	.uleb128 0x4ce
	.ascii "ERROR_DS_CANT_DELETE_DSA_OBJ __MSABI_LONG(8340)\0"
	.byte	0x1
	.uleb128 0x4cf
	.ascii "ERROR_DS_GENERIC_ERROR __MSABI_LONG(8341)\0"
	.byte	0x1
	.uleb128 0x4d0
	.ascii "ERROR_DS_DSA_MUST_BE_INT_MASTER __MSABI_LONG(8342)\0"
	.byte	0x1
	.uleb128 0x4d1
	.ascii "ERROR_DS_CLASS_NOT_DSA __MSABI_LONG(8343)\0"
	.byte	0x1
	.uleb128 0x4d2
	.ascii "ERROR_DS_INSUFF_ACCESS_RIGHTS __MSABI_LONG(8344)\0"
	.byte	0x1
	.uleb128 0x4d3
	.ascii "ERROR_DS_ILLEGAL_SUPERIOR __MSABI_LONG(8345)\0"
	.byte	0x1
	.uleb128 0x4d4
	.ascii "ERROR_DS_ATTRIBUTE_OWNED_BY_SAM __MSABI_LONG(8346)\0"
	.byte	0x1
	.uleb128 0x4d5
	.ascii "ERROR_DS_NAME_TOO_MANY_PARTS __MSABI_LONG(8347)\0"
	.byte	0x1
	.uleb128 0x4d6
	.ascii "ERROR_DS_NAME_TOO_LONG __MSABI_LONG(8348)\0"
	.byte	0x1
	.uleb128 0x4d7
	.ascii "ERROR_DS_NAME_VALUE_TOO_LONG __MSABI_LONG(8349)\0"
	.byte	0x1
	.uleb128 0x4d8
	.ascii "ERROR_DS_NAME_UNPARSEABLE __MSABI_LONG(8350)\0"
	.byte	0x1
	.uleb128 0x4d9
	.ascii "ERROR_DS_NAME_TYPE_UNKNOWN __MSABI_LONG(8351)\0"
	.byte	0x1
	.uleb128 0x4da
	.ascii "ERROR_DS_NOT_AN_OBJECT __MSABI_LONG(8352)\0"
	.byte	0x1
	.uleb128 0x4db
	.ascii "ERROR_DS_SEC_DESC_TOO_SHORT __MSABI_LONG(8353)\0"
	.byte	0x1
	.uleb128 0x4dc
	.ascii "ERROR_DS_SEC_DESC_INVALID __MSABI_LONG(8354)\0"
	.byte	0x1
	.uleb128 0x4dd
	.ascii "ERROR_DS_NO_DELETED_NAME __MSABI_LONG(8355)\0"
	.byte	0x1
	.uleb128 0x4de
	.ascii "ERROR_DS_SUBREF_MUST_HAVE_PARENT __MSABI_LONG(8356)\0"
	.byte	0x1
	.uleb128 0x4df
	.ascii "ERROR_DS_NCNAME_MUST_BE_NC __MSABI_LONG(8357)\0"
	.byte	0x1
	.uleb128 0x4e0
	.ascii "ERROR_DS_CANT_ADD_SYSTEM_ONLY __MSABI_LONG(8358)\0"
	.byte	0x1
	.uleb128 0x4e1
	.ascii "ERROR_DS_CLASS_MUST_BE_CONCRETE __MSABI_LONG(8359)\0"
	.byte	0x1
	.uleb128 0x4e2
	.ascii "ERROR_DS_INVALID_DMD __MSABI_LONG(8360)\0"
	.byte	0x1
	.uleb128 0x4e3
	.ascii "ERROR_DS_OBJ_GUID_EXISTS __MSABI_LONG(8361)\0"
	.byte	0x1
	.uleb128 0x4e4
	.ascii "ERROR_DS_NOT_ON_BACKLINK __MSABI_LONG(8362)\0"
	.byte	0x1
	.uleb128 0x4e5
	.ascii "ERROR_DS_NO_CROSSREF_FOR_NC __MSABI_LONG(8363)\0"
	.byte	0x1
	.uleb128 0x4e6
	.ascii "ERROR_DS_SHUTTING_DOWN __MSABI_LONG(8364)\0"
	.byte	0x1
	.uleb128 0x4e7
	.ascii "ERROR_DS_UNKNOWN_OPERATION __MSABI_LONG(8365)\0"
	.byte	0x1
	.uleb128 0x4e8
	.ascii "ERROR_DS_INVALID_ROLE_OWNER __MSABI_LONG(8366)\0"
	.byte	0x1
	.uleb128 0x4e9
	.ascii "ERROR_DS_COULDNT_CONTACT_FSMO __MSABI_LONG(8367)\0"
	.byte	0x1
	.uleb128 0x4ea
	.ascii "ERROR_DS_CROSS_NC_DN_RENAME __MSABI_LONG(8368)\0"
	.byte	0x1
	.uleb128 0x4eb
	.ascii "ERROR_DS_CANT_MOD_SYSTEM_ONLY __MSABI_LONG(8369)\0"
	.byte	0x1
	.uleb128 0x4ec
	.ascii "ERROR_DS_REPLICATOR_ONLY __MSABI_LONG(8370)\0"
	.byte	0x1
	.uleb128 0x4ed
	.ascii "ERROR_DS_OBJ_CLASS_NOT_DEFINED __MSABI_LONG(8371)\0"
	.byte	0x1
	.uleb128 0x4ee
	.ascii "ERROR_DS_OBJ_CLASS_NOT_SUBCLASS __MSABI_LONG(8372)\0"
	.byte	0x1
	.uleb128 0x4ef
	.ascii "ERROR_DS_NAME_REFERENCE_INVALID __MSABI_LONG(8373)\0"
	.byte	0x1
	.uleb128 0x4f0
	.ascii "ERROR_DS_CROSS_REF_EXISTS __MSABI_LONG(8374)\0"
	.byte	0x1
	.uleb128 0x4f1
	.ascii "ERROR_DS_CANT_DEL_MASTER_CROSSREF __MSABI_LONG(8375)\0"
	.byte	0x1
	.uleb128 0x4f2
	.ascii "ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD __MSABI_LONG(8376)\0"
	.byte	0x1
	.uleb128 0x4f3
	.ascii "ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX __MSABI_LONG(8377)\0"
	.byte	0x1
	.uleb128 0x4f4
	.ascii "ERROR_DS_DUP_RDN __MSABI_LONG(8378)\0"
	.byte	0x1
	.uleb128 0x4f5
	.ascii "ERROR_DS_DUP_OID __MSABI_LONG(8379)\0"
	.byte	0x1
	.uleb128 0x4f6
	.ascii "ERROR_DS_DUP_MAPI_ID __MSABI_LONG(8380)\0"
	.byte	0x1
	.uleb128 0x4f7
	.ascii "ERROR_DS_DUP_SCHEMA_ID_GUID __MSABI_LONG(8381)\0"
	.byte	0x1
	.uleb128 0x4f8
	.ascii "ERROR_DS_DUP_LDAP_DISPLAY_NAME __MSABI_LONG(8382)\0"
	.byte	0x1
	.uleb128 0x4f9
	.ascii "ERROR_DS_SEMANTIC_ATT_TEST __MSABI_LONG(8383)\0"
	.byte	0x1
	.uleb128 0x4fa
	.ascii "ERROR_DS_SYNTAX_MISMATCH __MSABI_LONG(8384)\0"
	.byte	0x1
	.uleb128 0x4fb
	.ascii "ERROR_DS_EXISTS_IN_MUST_HAVE __MSABI_LONG(8385)\0"
	.byte	0x1
	.uleb128 0x4fc
	.ascii "ERROR_DS_EXISTS_IN_MAY_HAVE __MSABI_LONG(8386)\0"
	.byte	0x1
	.uleb128 0x4fd
	.ascii "ERROR_DS_NONEXISTENT_MAY_HAVE __MSABI_LONG(8387)\0"
	.byte	0x1
	.uleb128 0x4fe
	.ascii "ERROR_DS_NONEXISTENT_MUST_HAVE __MSABI_LONG(8388)\0"
	.byte	0x1
	.uleb128 0x4ff
	.ascii "ERROR_DS_AUX_CLS_TEST_FAIL __MSABI_LONG(8389)\0"
	.byte	0x1
	.uleb128 0x500
	.ascii "ERROR_DS_NONEXISTENT_POSS_SUP __MSABI_LONG(8390)\0"
	.byte	0x1
	.uleb128 0x501
	.ascii "ERROR_DS_SUB_CLS_TEST_FAIL __MSABI_LONG(8391)\0"
	.byte	0x1
	.uleb128 0x502
	.ascii "ERROR_DS_BAD_RDN_ATT_ID_SYNTAX __MSABI_LONG(8392)\0"
	.byte	0x1
	.uleb128 0x503
	.ascii "ERROR_DS_EXISTS_IN_AUX_CLS __MSABI_LONG(8393)\0"
	.byte	0x1
	.uleb128 0x504
	.ascii "ERROR_DS_EXISTS_IN_SUB_CLS __MSABI_LONG(8394)\0"
	.byte	0x1
	.uleb128 0x505
	.ascii "ERROR_DS_EXISTS_IN_POSS_SUP __MSABI_LONG(8395)\0"
	.byte	0x1
	.uleb128 0x506
	.ascii "ERROR_DS_RECALCSCHEMA_FAILED __MSABI_LONG(8396)\0"
	.byte	0x1
	.uleb128 0x507
	.ascii "ERROR_DS_TREE_DELETE_NOT_FINISHED __MSABI_LONG(8397)\0"
	.byte	0x1
	.uleb128 0x508
	.ascii "ERROR_DS_CANT_DELETE __MSABI_LONG(8398)\0"
	.byte	0x1
	.uleb128 0x509
	.ascii "ERROR_DS_ATT_SCHEMA_REQ_ID __MSABI_LONG(8399)\0"
	.byte	0x1
	.uleb128 0x50a
	.ascii "ERROR_DS_BAD_ATT_SCHEMA_SYNTAX __MSABI_LONG(8400)\0"
	.byte	0x1
	.uleb128 0x50b
	.ascii "ERROR_DS_CANT_CACHE_ATT __MSABI_LONG(8401)\0"
	.byte	0x1
	.uleb128 0x50c
	.ascii "ERROR_DS_CANT_CACHE_CLASS __MSABI_LONG(8402)\0"
	.byte	0x1
	.uleb128 0x50d
	.ascii "ERROR_DS_CANT_REMOVE_ATT_CACHE __MSABI_LONG(8403)\0"
	.byte	0x1
	.uleb128 0x50e
	.ascii "ERROR_DS_CANT_REMOVE_CLASS_CACHE __MSABI_LONG(8404)\0"
	.byte	0x1
	.uleb128 0x50f
	.ascii "ERROR_DS_CANT_RETRIEVE_DN __MSABI_LONG(8405)\0"
	.byte	0x1
	.uleb128 0x510
	.ascii "ERROR_DS_MISSING_SUPREF __MSABI_LONG(8406)\0"
	.byte	0x1
	.uleb128 0x511
	.ascii "ERROR_DS_CANT_RETRIEVE_INSTANCE __MSABI_LONG(8407)\0"
	.byte	0x1
	.uleb128 0x512
	.ascii "ERROR_DS_CODE_INCONSISTENCY __MSABI_LONG(8408)\0"
	.byte	0x1
	.uleb128 0x513
	.ascii "ERROR_DS_DATABASE_ERROR __MSABI_LONG(8409)\0"
	.byte	0x1
	.uleb128 0x514
	.ascii "ERROR_DS_GOVERNSID_MISSING __MSABI_LONG(8410)\0"
	.byte	0x1
	.uleb128 0x515
	.ascii "ERROR_DS_MISSING_EXPECTED_ATT __MSABI_LONG(8411)\0"
	.byte	0x1
	.uleb128 0x516
	.ascii "ERROR_DS_NCNAME_MISSING_CR_REF __MSABI_LONG(8412)\0"
	.byte	0x1
	.uleb128 0x517
	.ascii "ERROR_DS_SECURITY_CHECKING_ERROR __MSABI_LONG(8413)\0"
	.byte	0x1
	.uleb128 0x518
	.ascii "ERROR_DS_SCHEMA_NOT_LOADED __MSABI_LONG(8414)\0"
	.byte	0x1
	.uleb128 0x519
	.ascii "ERROR_DS_SCHEMA_ALLOC_FAILED __MSABI_LONG(8415)\0"
	.byte	0x1
	.uleb128 0x51a
	.ascii "ERROR_DS_ATT_SCHEMA_REQ_SYNTAX __MSABI_LONG(8416)\0"
	.byte	0x1
	.uleb128 0x51b
	.ascii "ERROR_DS_GCVERIFY_ERROR __MSABI_LONG(8417)\0"
	.byte	0x1
	.uleb128 0x51c
	.ascii "ERROR_DS_DRA_SCHEMA_MISMATCH __MSABI_LONG(8418)\0"
	.byte	0x1
	.uleb128 0x51d
	.ascii "ERROR_DS_CANT_FIND_DSA_OBJ __MSABI_LONG(8419)\0"
	.byte	0x1
	.uleb128 0x51e
	.ascii "ERROR_DS_CANT_FIND_EXPECTED_NC __MSABI_LONG(8420)\0"
	.byte	0x1
	.uleb128 0x51f
	.ascii "ERROR_DS_CANT_FIND_NC_IN_CACHE __MSABI_LONG(8421)\0"
	.byte	0x1
	.uleb128 0x520
	.ascii "ERROR_DS_CANT_RETRIEVE_CHILD __MSABI_LONG(8422)\0"
	.byte	0x1
	.uleb128 0x521
	.ascii "ERROR_DS_SECURITY_ILLEGAL_MODIFY __MSABI_LONG(8423)\0"
	.byte	0x1
	.uleb128 0x522
	.ascii "ERROR_DS_CANT_REPLACE_HIDDEN_REC __MSABI_LONG(8424)\0"
	.byte	0x1
	.uleb128 0x523
	.ascii "ERROR_DS_BAD_HIERARCHY_FILE __MSABI_LONG(8425)\0"
	.byte	0x1
	.uleb128 0x524
	.ascii "ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED __MSABI_LONG(8426)\0"
	.byte	0x1
	.uleb128 0x525
	.ascii "ERROR_DS_CONFIG_PARAM_MISSING __MSABI_LONG(8427)\0"
	.byte	0x1
	.uleb128 0x526
	.ascii "ERROR_DS_COUNTING_AB_INDICES_FAILED __MSABI_LONG(8428)\0"
	.byte	0x1
	.uleb128 0x527
	.ascii "ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED __MSABI_LONG(8429)\0"
	.byte	0x1
	.uleb128 0x528
	.ascii "ERROR_DS_INTERNAL_FAILURE __MSABI_LONG(8430)\0"
	.byte	0x1
	.uleb128 0x529
	.ascii "ERROR_DS_UNKNOWN_ERROR __MSABI_LONG(8431)\0"
	.byte	0x1
	.uleb128 0x52a
	.ascii "ERROR_DS_ROOT_REQUIRES_CLASS_TOP __MSABI_LONG(8432)\0"
	.byte	0x1
	.uleb128 0x52b
	.ascii "ERROR_DS_REFUSING_FSMO_ROLES __MSABI_LONG(8433)\0"
	.byte	0x1
	.uleb128 0x52c
	.ascii "ERROR_DS_MISSING_FSMO_SETTINGS __MSABI_LONG(8434)\0"
	.byte	0x1
	.uleb128 0x52d
	.ascii "ERROR_DS_UNABLE_TO_SURRENDER_ROLES __MSABI_LONG(8435)\0"
	.byte	0x1
	.uleb128 0x52e
	.ascii "ERROR_DS_DRA_GENERIC __MSABI_LONG(8436)\0"
	.byte	0x1
	.uleb128 0x52f
	.ascii "ERROR_DS_DRA_INVALID_PARAMETER __MSABI_LONG(8437)\0"
	.byte	0x1
	.uleb128 0x530
	.ascii "ERROR_DS_DRA_BUSY __MSABI_LONG(8438)\0"
	.byte	0x1
	.uleb128 0x531
	.ascii "ERROR_DS_DRA_BAD_DN __MSABI_LONG(8439)\0"
	.byte	0x1
	.uleb128 0x532
	.ascii "ERROR_DS_DRA_BAD_NC __MSABI_LONG(8440)\0"
	.byte	0x1
	.uleb128 0x533
	.ascii "ERROR_DS_DRA_DN_EXISTS __MSABI_LONG(8441)\0"
	.byte	0x1
	.uleb128 0x534
	.ascii "ERROR_DS_DRA_INTERNAL_ERROR __MSABI_LONG(8442)\0"
	.byte	0x1
	.uleb128 0x535
	.ascii "ERROR_DS_DRA_INCONSISTENT_DIT __MSABI_LONG(8443)\0"
	.byte	0x1
	.uleb128 0x536
	.ascii "ERROR_DS_DRA_CONNECTION_FAILED __MSABI_LONG(8444)\0"
	.byte	0x1
	.uleb128 0x537
	.ascii "ERROR_DS_DRA_BAD_INSTANCE_TYPE __MSABI_LONG(8445)\0"
	.byte	0x1
	.uleb128 0x538
	.ascii "ERROR_DS_DRA_OUT_OF_MEM __MSABI_LONG(8446)\0"
	.byte	0x1
	.uleb128 0x539
	.ascii "ERROR_DS_DRA_MAIL_PROBLEM __MSABI_LONG(8447)\0"
	.byte	0x1
	.uleb128 0x53a
	.ascii "ERROR_DS_DRA_REF_ALREADY_EXISTS __MSABI_LONG(8448)\0"
	.byte	0x1
	.uleb128 0x53b
	.ascii "ERROR_DS_DRA_REF_NOT_FOUND __MSABI_LONG(8449)\0"
	.byte	0x1
	.uleb128 0x53c
	.ascii "ERROR_DS_DRA_OBJ_IS_REP_SOURCE __MSABI_LONG(8450)\0"
	.byte	0x1
	.uleb128 0x53d
	.ascii "ERROR_DS_DRA_DB_ERROR __MSABI_LONG(8451)\0"
	.byte	0x1
	.uleb128 0x53e
	.ascii "ERROR_DS_DRA_NO_REPLICA __MSABI_LONG(8452)\0"
	.byte	0x1
	.uleb128 0x53f
	.ascii "ERROR_DS_DRA_ACCESS_DENIED __MSABI_LONG(8453)\0"
	.byte	0x1
	.uleb128 0x540
	.ascii "ERROR_DS_DRA_NOT_SUPPORTED __MSABI_LONG(8454)\0"
	.byte	0x1
	.uleb128 0x541
	.ascii "ERROR_DS_DRA_RPC_CANCELLED __MSABI_LONG(8455)\0"
	.byte	0x1
	.uleb128 0x542
	.ascii "ERROR_DS_DRA_SOURCE_DISABLED __MSABI_LONG(8456)\0"
	.byte	0x1
	.uleb128 0x543
	.ascii "ERROR_DS_DRA_SINK_DISABLED __MSABI_LONG(8457)\0"
	.byte	0x1
	.uleb128 0x544
	.ascii "ERROR_DS_DRA_NAME_COLLISION __MSABI_LONG(8458)\0"
	.byte	0x1
	.uleb128 0x545
	.ascii "ERROR_DS_DRA_SOURCE_REINSTALLED __MSABI_LONG(8459)\0"
	.byte	0x1
	.uleb128 0x546
	.ascii "ERROR_DS_DRA_MISSING_PARENT __MSABI_LONG(8460)\0"
	.byte	0x1
	.uleb128 0x547
	.ascii "ERROR_DS_DRA_PREEMPTED __MSABI_LONG(8461)\0"
	.byte	0x1
	.uleb128 0x548
	.ascii "ERROR_DS_DRA_ABANDON_SYNC __MSABI_LONG(8462)\0"
	.byte	0x1
	.uleb128 0x549
	.ascii "ERROR_DS_DRA_SHUTDOWN __MSABI_LONG(8463)\0"
	.byte	0x1
	.uleb128 0x54a
	.ascii "ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET __MSABI_LONG(8464)\0"
	.byte	0x1
	.uleb128 0x54b
	.ascii "ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA __MSABI_LONG(8465)\0"
	.byte	0x1
	.uleb128 0x54c
	.ascii "ERROR_DS_DRA_EXTN_CONNECTION_FAILED __MSABI_LONG(8466)\0"
	.byte	0x1
	.uleb128 0x54d
	.ascii "ERROR_DS_INSTALL_SCHEMA_MISMATCH __MSABI_LONG(8467)\0"
	.byte	0x1
	.uleb128 0x54e
	.ascii "ERROR_DS_DUP_LINK_ID __MSABI_LONG(8468)\0"
	.byte	0x1
	.uleb128 0x54f
	.ascii "ERROR_DS_NAME_ERROR_RESOLVING __MSABI_LONG(8469)\0"
	.byte	0x1
	.uleb128 0x550
	.ascii "ERROR_DS_NAME_ERROR_NOT_FOUND __MSABI_LONG(8470)\0"
	.byte	0x1
	.uleb128 0x551
	.ascii "ERROR_DS_NAME_ERROR_NOT_UNIQUE __MSABI_LONG(8471)\0"
	.byte	0x1
	.uleb128 0x552
	.ascii "ERROR_DS_NAME_ERROR_NO_MAPPING __MSABI_LONG(8472)\0"
	.byte	0x1
	.uleb128 0x553
	.ascii "ERROR_DS_NAME_ERROR_DOMAIN_ONLY __MSABI_LONG(8473)\0"
	.byte	0x1
	.uleb128 0x554
	.ascii "ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING __MSABI_LONG(8474)\0"
	.byte	0x1
	.uleb128 0x555
	.ascii "ERROR_DS_CONSTRUCTED_ATT_MOD __MSABI_LONG(8475)\0"
	.byte	0x1
	.uleb128 0x556
	.ascii "ERROR_DS_WRONG_OM_OBJ_CLASS __MSABI_LONG(8476)\0"
	.byte	0x1
	.uleb128 0x557
	.ascii "ERROR_DS_DRA_REPL_PENDING __MSABI_LONG(8477)\0"
	.byte	0x1
	.uleb128 0x558
	.ascii "ERROR_DS_DS_REQUIRED __MSABI_LONG(8478)\0"
	.byte	0x1
	.uleb128 0x559
	.ascii "ERROR_DS_INVALID_LDAP_DISPLAY_NAME __MSABI_LONG(8479)\0"
	.byte	0x1
	.uleb128 0x55a
	.ascii "ERROR_DS_NON_BASE_SEARCH __MSABI_LONG(8480)\0"
	.byte	0x1
	.uleb128 0x55b
	.ascii "ERROR_DS_CANT_RETRIEVE_ATTS __MSABI_LONG(8481)\0"
	.byte	0x1
	.uleb128 0x55c
	.ascii "ERROR_DS_BACKLINK_WITHOUT_LINK __MSABI_LONG(8482)\0"
	.byte	0x1
	.uleb128 0x55d
	.ascii "ERROR_DS_EPOCH_MISMATCH __MSABI_LONG(8483)\0"
	.byte	0x1
	.uleb128 0x55e
	.ascii "ERROR_DS_SRC_NAME_MISMATCH __MSABI_LONG(8484)\0"
	.byte	0x1
	.uleb128 0x55f
	.ascii "ERROR_DS_SRC_AND_DST_NC_IDENTICAL __MSABI_LONG(8485)\0"
	.byte	0x1
	.uleb128 0x560
	.ascii "ERROR_DS_DST_NC_MISMATCH __MSABI_LONG(8486)\0"
	.byte	0x1
	.uleb128 0x561
	.ascii "ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC __MSABI_LONG(8487)\0"
	.byte	0x1
	.uleb128 0x562
	.ascii "ERROR_DS_SRC_GUID_MISMATCH __MSABI_LONG(8488)\0"
	.byte	0x1
	.uleb128 0x563
	.ascii "ERROR_DS_CANT_MOVE_DELETED_OBJECT __MSABI_LONG(8489)\0"
	.byte	0x1
	.uleb128 0x564
	.ascii "ERROR_DS_PDC_OPERATION_IN_PROGRESS __MSABI_LONG(8490)\0"
	.byte	0x1
	.uleb128 0x565
	.ascii "ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD __MSABI_LONG(8491)\0"
	.byte	0x1
	.uleb128 0x566
	.ascii "ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION __MSABI_LONG(8492)\0"
	.byte	0x1
	.uleb128 0x567
	.ascii "ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS __MSABI_LONG(8493)\0"
	.byte	0x1
	.uleb128 0x568
	.ascii "ERROR_DS_NC_MUST_HAVE_NC_PARENT __MSABI_LONG(8494)\0"
	.byte	0x1
	.uleb128 0x569
	.ascii "ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE __MSABI_LONG(8495)\0"
	.byte	0x1
	.uleb128 0x56a
	.ascii "ERROR_DS_DST_DOMAIN_NOT_NATIVE __MSABI_LONG(8496)\0"
	.byte	0x1
	.uleb128 0x56b
	.ascii "ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER __MSABI_LONG(8497)\0"
	.byte	0x1
	.uleb128 0x56c
	.ascii "ERROR_DS_CANT_MOVE_ACCOUNT_GROUP __MSABI_LONG(8498)\0"
	.byte	0x1
	.uleb128 0x56d
	.ascii "ERROR_DS_CANT_MOVE_RESOURCE_GROUP __MSABI_LONG(8499)\0"
	.byte	0x1
	.uleb128 0x56e
	.ascii "ERROR_DS_INVALID_SEARCH_FLAG __MSABI_LONG(8500)\0"
	.byte	0x1
	.uleb128 0x56f
	.ascii "ERROR_DS_NO_TREE_DELETE_ABOVE_NC __MSABI_LONG(8501)\0"
	.byte	0x1
	.uleb128 0x570
	.ascii "ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE __MSABI_LONG(8502)\0"
	.byte	0x1
	.uleb128 0x571
	.ascii "ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE __MSABI_LONG(8503)\0"
	.byte	0x1
	.uleb128 0x572
	.ascii "ERROR_DS_SAM_INIT_FAILURE __MSABI_LONG(8504)\0"
	.byte	0x1
	.uleb128 0x573
	.ascii "ERROR_DS_SENSITIVE_GROUP_VIOLATION __MSABI_LONG(8505)\0"
	.byte	0x1
	.uleb128 0x574
	.ascii "ERROR_DS_CANT_MOD_PRIMARYGROUPID __MSABI_LONG(8506)\0"
	.byte	0x1
	.uleb128 0x575
	.ascii "ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD __MSABI_LONG(8507)\0"
	.byte	0x1
	.uleb128 0x576
	.ascii "ERROR_DS_NONSAFE_SCHEMA_CHANGE __MSABI_LONG(8508)\0"
	.byte	0x1
	.uleb128 0x577
	.ascii "ERROR_DS_SCHEMA_UPDATE_DISALLOWED __MSABI_LONG(8509)\0"
	.byte	0x1
	.uleb128 0x578
	.ascii "ERROR_DS_CANT_CREATE_UNDER_SCHEMA __MSABI_LONG(8510)\0"
	.byte	0x1
	.uleb128 0x579
	.ascii "ERROR_DS_INSTALL_NO_SRC_SCH_VERSION __MSABI_LONG(8511)\0"
	.byte	0x1
	.uleb128 0x57a
	.ascii "ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE __MSABI_LONG(8512)\0"
	.byte	0x1
	.uleb128 0x57b
	.ascii "ERROR_DS_INVALID_GROUP_TYPE __MSABI_LONG(8513)\0"
	.byte	0x1
	.uleb128 0x57c
	.ascii "ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN __MSABI_LONG(8514)\0"
	.byte	0x1
	.uleb128 0x57d
	.ascii "ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN __MSABI_LONG(8515)\0"
	.byte	0x1
	.uleb128 0x57e
	.ascii "ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER __MSABI_LONG(8516)\0"
	.byte	0x1
	.uleb128 0x57f
	.ascii "ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER __MSABI_LONG(8517)\0"
	.byte	0x1
	.uleb128 0x580
	.ascii "ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER __MSABI_LONG(8518)\0"
	.byte	0x1
	.uleb128 0x581
	.ascii "ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER __MSABI_LONG(8519)\0"
	.byte	0x1
	.uleb128 0x582
	.ascii "ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER __MSABI_LONG(8520)\0"
	.byte	0x1
	.uleb128 0x583
	.ascii "ERROR_DS_HAVE_PRIMARY_MEMBERS __MSABI_LONG(8521)\0"
	.byte	0x1
	.uleb128 0x584
	.ascii "ERROR_DS_STRING_SD_CONVERSION_FAILED __MSABI_LONG(8522)\0"
	.byte	0x1
	.uleb128 0x585
	.ascii "ERROR_DS_NAMING_MASTER_GC __MSABI_LONG(8523)\0"
	.byte	0x1
	.uleb128 0x586
	.ascii "ERROR_DS_DNS_LOOKUP_FAILURE __MSABI_LONG(8524)\0"
	.byte	0x1
	.uleb128 0x587
	.ascii "ERROR_DS_COULDNT_UPDATE_SPNS __MSABI_LONG(8525)\0"
	.byte	0x1
	.uleb128 0x588
	.ascii "ERROR_DS_CANT_RETRIEVE_SD __MSABI_LONG(8526)\0"
	.byte	0x1
	.uleb128 0x589
	.ascii "ERROR_DS_KEY_NOT_UNIQUE __MSABI_LONG(8527)\0"
	.byte	0x1
	.uleb128 0x58a
	.ascii "ERROR_DS_WRONG_LINKED_ATT_SYNTAX __MSABI_LONG(8528)\0"
	.byte	0x1
	.uleb128 0x58b
	.ascii "ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD __MSABI_LONG(8529)\0"
	.byte	0x1
	.uleb128 0x58c
	.ascii "ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY __MSABI_LONG(8530)\0"
	.byte	0x1
	.uleb128 0x58d
	.ascii "ERROR_DS_CANT_START __MSABI_LONG(8531)\0"
	.byte	0x1
	.uleb128 0x58e
	.ascii "ERROR_DS_INIT_FAILURE __MSABI_LONG(8532)\0"
	.byte	0x1
	.uleb128 0x58f
	.ascii "ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION __MSABI_LONG(8533)\0"
	.byte	0x1
	.uleb128 0x590
	.ascii "ERROR_DS_SOURCE_DOMAIN_IN_FOREST __MSABI_LONG(8534)\0"
	.byte	0x1
	.uleb128 0x591
	.ascii "ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST __MSABI_LONG(8535)\0"
	.byte	0x1
	.uleb128 0x592
	.ascii "ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED __MSABI_LONG(8536)\0"
	.byte	0x1
	.uleb128 0x593
	.ascii "ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN __MSABI_LONG(8537)\0"
	.byte	0x1
	.uleb128 0x594
	.ascii "ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER __MSABI_LONG(8538)\0"
	.byte	0x1
	.uleb128 0x595
	.ascii "ERROR_DS_SRC_SID_EXISTS_IN_FOREST __MSABI_LONG(8539)\0"
	.byte	0x1
	.uleb128 0x596
	.ascii "ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH __MSABI_LONG(8540)\0"
	.byte	0x1
	.uleb128 0x597
	.ascii "ERROR_SAM_INIT_FAILURE __MSABI_LONG(8541)\0"
	.byte	0x1
	.uleb128 0x598
	.ascii "ERROR_DS_DRA_SCHEMA_INFO_SHIP __MSABI_LONG(8542)\0"
	.byte	0x1
	.uleb128 0x599
	.ascii "ERROR_DS_DRA_SCHEMA_CONFLICT __MSABI_LONG(8543)\0"
	.byte	0x1
	.uleb128 0x59a
	.ascii "ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT __MSABI_LONG(8544)\0"
	.byte	0x1
	.uleb128 0x59b
	.ascii "ERROR_DS_DRA_OBJ_NC_MISMATCH __MSABI_LONG(8545)\0"
	.byte	0x1
	.uleb128 0x59c
	.ascii "ERROR_DS_NC_STILL_HAS_DSAS __MSABI_LONG(8546)\0"
	.byte	0x1
	.uleb128 0x59d
	.ascii "ERROR_DS_GC_REQUIRED __MSABI_LONG(8547)\0"
	.byte	0x1
	.uleb128 0x59e
	.ascii "ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY __MSABI_LONG(8548)\0"
	.byte	0x1
	.uleb128 0x59f
	.ascii "ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS __MSABI_LONG(8549)\0"
	.byte	0x1
	.uleb128 0x5a0
	.ascii "ERROR_DS_CANT_ADD_TO_GC __MSABI_LONG(8550)\0"
	.byte	0x1
	.uleb128 0x5a1
	.ascii "ERROR_DS_NO_CHECKPOINT_WITH_PDC __MSABI_LONG(8551)\0"
	.byte	0x1
	.uleb128 0x5a2
	.ascii "ERROR_DS_SOURCE_AUDITING_NOT_ENABLED __MSABI_LONG(8552)\0"
	.byte	0x1
	.uleb128 0x5a3
	.ascii "ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC __MSABI_LONG(8553)\0"
	.byte	0x1
	.uleb128 0x5a4
	.ascii "ERROR_DS_INVALID_NAME_FOR_SPN __MSABI_LONG(8554)\0"
	.byte	0x1
	.uleb128 0x5a5
	.ascii "ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS __MSABI_LONG(8555)\0"
	.byte	0x1
	.uleb128 0x5a6
	.ascii "ERROR_DS_UNICODEPWD_NOT_IN_QUOTES __MSABI_LONG(8556)\0"
	.byte	0x1
	.uleb128 0x5a7
	.ascii "ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED __MSABI_LONG(8557)\0"
	.byte	0x1
	.uleb128 0x5a8
	.ascii "ERROR_DS_MUST_BE_RUN_ON_DST_DC __MSABI_LONG(8558)\0"
	.byte	0x1
	.uleb128 0x5a9
	.ascii "ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER __MSABI_LONG(8559)\0"
	.byte	0x1
	.uleb128 0x5aa
	.ascii "ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ __MSABI_LONG(8560)\0"
	.byte	0x1
	.uleb128 0x5ab
	.ascii "ERROR_DS_INIT_FAILURE_CONSOLE __MSABI_LONG(8561)\0"
	.byte	0x1
	.uleb128 0x5ac
	.ascii "ERROR_DS_SAM_INIT_FAILURE_CONSOLE __MSABI_LONG(8562)\0"
	.byte	0x1
	.uleb128 0x5ad
	.ascii "ERROR_DS_FOREST_VERSION_TOO_HIGH __MSABI_LONG(8563)\0"
	.byte	0x1
	.uleb128 0x5ae
	.ascii "ERROR_DS_DOMAIN_VERSION_TOO_HIGH __MSABI_LONG(8564)\0"
	.byte	0x1
	.uleb128 0x5af
	.ascii "ERROR_DS_FOREST_VERSION_TOO_LOW __MSABI_LONG(8565)\0"
	.byte	0x1
	.uleb128 0x5b0
	.ascii "ERROR_DS_DOMAIN_VERSION_TOO_LOW __MSABI_LONG(8566)\0"
	.byte	0x1
	.uleb128 0x5b1
	.ascii "ERROR_DS_INCOMPATIBLE_VERSION __MSABI_LONG(8567)\0"
	.byte	0x1
	.uleb128 0x5b2
	.ascii "ERROR_DS_LOW_DSA_VERSION __MSABI_LONG(8568)\0"
	.byte	0x1
	.uleb128 0x5b3
	.ascii "ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN __MSABI_LONG(8569)\0"
	.byte	0x1
	.uleb128 0x5b4
	.ascii "ERROR_DS_NOT_SUPPORTED_SORT_ORDER __MSABI_LONG(8570)\0"
	.byte	0x1
	.uleb128 0x5b5
	.ascii "ERROR_DS_NAME_NOT_UNIQUE __MSABI_LONG(8571)\0"
	.byte	0x1
	.uleb128 0x5b6
	.ascii "ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 __MSABI_LONG(8572)\0"
	.byte	0x1
	.uleb128 0x5b7
	.ascii "ERROR_DS_OUT_OF_VERSION_STORE __MSABI_LONG(8573)\0"
	.byte	0x1
	.uleb128 0x5b8
	.ascii "ERROR_DS_INCOMPATIBLE_CONTROLS_USED __MSABI_LONG(8574)\0"
	.byte	0x1
	.uleb128 0x5b9
	.ascii "ERROR_DS_NO_REF_DOMAIN __MSABI_LONG(8575)\0"
	.byte	0x1
	.uleb128 0x5ba
	.ascii "ERROR_DS_RESERVED_LINK_ID __MSABI_LONG(8576)\0"
	.byte	0x1
	.uleb128 0x5bb
	.ascii "ERROR_DS_LINK_ID_NOT_AVAILABLE __MSABI_LONG(8577)\0"
	.byte	0x1
	.uleb128 0x5bc
	.ascii "ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER __MSABI_LONG(8578)\0"
	.byte	0x1
	.uleb128 0x5bd
	.ascii "ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE __MSABI_LONG(8579)\0"
	.byte	0x1
	.uleb128 0x5be
	.ascii "ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC __MSABI_LONG(8580)\0"
	.byte	0x1
	.uleb128 0x5bf
	.ascii "ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG __MSABI_LONG(8581)\0"
	.byte	0x1
	.uleb128 0x5c0
	.ascii "ERROR_DS_MODIFYDN_WRONG_GRANDPARENT __MSABI_LONG(8582)\0"
	.byte	0x1
	.uleb128 0x5c1
	.ascii "ERROR_DS_NAME_ERROR_TRUST_REFERRAL __MSABI_LONG(8583)\0"
	.byte	0x1
	.uleb128 0x5c2
	.ascii "ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER __MSABI_LONG(8584)\0"
	.byte	0x1
	.uleb128 0x5c3
	.ascii "ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD __MSABI_LONG(8585)\0"
	.byte	0x1
	.uleb128 0x5c4
	.ascii "ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 __MSABI_LONG(8586)\0"
	.byte	0x1
	.uleb128 0x5c5
	.ascii "ERROR_DS_THREAD_LIMIT_EXCEEDED __MSABI_LONG(8587)\0"
	.byte	0x1
	.uleb128 0x5c6
	.ascii "ERROR_DS_NOT_CLOSEST __MSABI_LONG(8588)\0"
	.byte	0x1
	.uleb128 0x5c7
	.ascii "ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF __MSABI_LONG(8589)\0"
	.byte	0x1
	.uleb128 0x5c8
	.ascii "ERROR_DS_SINGLE_USER_MODE_FAILED __MSABI_LONG(8590)\0"
	.byte	0x1
	.uleb128 0x5c9
	.ascii "ERROR_DS_NTDSCRIPT_SYNTAX_ERROR __MSABI_LONG(8591)\0"
	.byte	0x1
	.uleb128 0x5ca
	.ascii "ERROR_DS_NTDSCRIPT_PROCESS_ERROR __MSABI_LONG(8592)\0"
	.byte	0x1
	.uleb128 0x5cb
	.ascii "ERROR_DS_DIFFERENT_REPL_EPOCHS __MSABI_LONG(8593)\0"
	.byte	0x1
	.uleb128 0x5cc
	.ascii "ERROR_DS_DRS_EXTENSIONS_CHANGED __MSABI_LONG(8594)\0"
	.byte	0x1
	.uleb128 0x5cd
	.ascii "ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR __MSABI_LONG(8595)\0"
	.byte	0x1
	.uleb128 0x5ce
	.ascii "ERROR_DS_NO_MSDS_INTID __MSABI_LONG(8596)\0"
	.byte	0x1
	.uleb128 0x5cf
	.ascii "ERROR_DS_DUP_MSDS_INTID __MSABI_LONG(8597)\0"
	.byte	0x1
	.uleb128 0x5d0
	.ascii "ERROR_DS_EXISTS_IN_RDNATTID __MSABI_LONG(8598)\0"
	.byte	0x1
	.uleb128 0x5d1
	.ascii "ERROR_DS_AUTHORIZATION_FAILED __MSABI_LONG(8599)\0"
	.byte	0x1
	.uleb128 0x5d2
	.ascii "ERROR_DS_INVALID_SCRIPT __MSABI_LONG(8600)\0"
	.byte	0x1
	.uleb128 0x5d3
	.ascii "ERROR_DS_REMOTE_CROSSREF_OP_FAILED __MSABI_LONG(8601)\0"
	.byte	0x1
	.uleb128 0x5d4
	.ascii "ERROR_DS_CROSS_REF_BUSY __MSABI_LONG(8602)\0"
	.byte	0x1
	.uleb128 0x5d5
	.ascii "ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN __MSABI_LONG(8603)\0"
	.byte	0x1
	.uleb128 0x5d6
	.ascii "ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC __MSABI_LONG(8604)\0"
	.byte	0x1
	.uleb128 0x5d7
	.ascii "ERROR_DS_DUPLICATE_ID_FOUND __MSABI_LONG(8605)\0"
	.byte	0x1
	.uleb128 0x5d8
	.ascii "ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT __MSABI_LONG(8606)\0"
	.byte	0x1
	.uleb128 0x5d9
	.ascii "ERROR_DS_GROUP_CONVERSION_ERROR __MSABI_LONG(8607)\0"
	.byte	0x1
	.uleb128 0x5da
	.ascii "ERROR_DS_CANT_MOVE_APP_BASIC_GROUP __MSABI_LONG(8608)\0"
	.byte	0x1
	.uleb128 0x5db
	.ascii "ERROR_DS_CANT_MOVE_APP_QUERY_GROUP __MSABI_LONG(8609)\0"
	.byte	0x1
	.uleb128 0x5dc
	.ascii "ERROR_DS_ROLE_NOT_VERIFIED __MSABI_LONG(8610)\0"
	.byte	0x1
	.uleb128 0x5dd
	.ascii "ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL __MSABI_LONG(8611)\0"
	.byte	0x1
	.uleb128 0x5de
	.ascii "ERROR_DS_DOMAIN_RENAME_IN_PROGRESS __MSABI_LONG(8612)\0"
	.byte	0x1
	.uleb128 0x5df
	.ascii "ERROR_DS_EXISTING_AD_CHILD_NC __MSABI_LONG(8613)\0"
	.byte	0x1
	.uleb128 0x5e0
	.ascii "ERROR_DS_REPL_LIFETIME_EXCEEDED __MSABI_LONG(8614)\0"
	.byte	0x1
	.uleb128 0x5e1
	.ascii "ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER __MSABI_LONG(8615)\0"
	.byte	0x1
	.uleb128 0x5e2
	.ascii "ERROR_DS_LDAP_SEND_QUEUE_FULL __MSABI_LONG(8616)\0"
	.byte	0x1
	.uleb128 0x5e3
	.ascii "ERROR_DS_DRA_OUT_SCHEDULE_WINDOW __MSABI_LONG(8617)\0"
	.byte	0x1
	.uleb128 0x5e4
	.ascii "DNS_ERROR_RESPONSE_CODES_BASE 9000\0"
	.byte	0x1
	.uleb128 0x5e5
	.ascii "DNS_ERROR_RCODE_NO_ERROR NO_ERROR\0"
	.byte	0x1
	.uleb128 0x5e6
	.ascii "DNS_ERROR_MASK 0x00002328\0"
	.byte	0x1
	.uleb128 0x5e7
	.ascii "DNS_ERROR_RCODE_FORMAT_ERROR __MSABI_LONG(9001)\0"
	.byte	0x1
	.uleb128 0x5e8
	.ascii "DNS_ERROR_RCODE_SERVER_FAILURE __MSABI_LONG(9002)\0"
	.byte	0x1
	.uleb128 0x5e9
	.ascii "DNS_ERROR_RCODE_NAME_ERROR __MSABI_LONG(9003)\0"
	.byte	0x1
	.uleb128 0x5ea
	.ascii "DNS_ERROR_RCODE_NOT_IMPLEMENTED __MSABI_LONG(9004)\0"
	.byte	0x1
	.uleb128 0x5eb
	.ascii "DNS_ERROR_RCODE_REFUSED __MSABI_LONG(9005)\0"
	.byte	0x1
	.uleb128 0x5ec
	.ascii "DNS_ERROR_RCODE_YXDOMAIN __MSABI_LONG(9006)\0"
	.byte	0x1
	.uleb128 0x5ed
	.ascii "DNS_ERROR_RCODE_YXRRSET __MSABI_LONG(9007)\0"
	.byte	0x1
	.uleb128 0x5ee
	.ascii "DNS_ERROR_RCODE_NXRRSET __MSABI_LONG(9008)\0"
	.byte	0x1
	.uleb128 0x5ef
	.ascii "DNS_ERROR_RCODE_NOTAUTH __MSABI_LONG(9009)\0"
	.byte	0x1
	.uleb128 0x5f0
	.ascii "DNS_ERROR_RCODE_NOTZONE __MSABI_LONG(9010)\0"
	.byte	0x1
	.uleb128 0x5f1
	.ascii "DNS_ERROR_RCODE_BADSIG __MSABI_LONG(9016)\0"
	.byte	0x1
	.uleb128 0x5f2
	.ascii "DNS_ERROR_RCODE_BADKEY __MSABI_LONG(9017)\0"
	.byte	0x1
	.uleb128 0x5f3
	.ascii "DNS_ERROR_RCODE_BADTIME __MSABI_LONG(9018)\0"
	.byte	0x1
	.uleb128 0x5f4
	.ascii "DNS_ERROR_RCODE_LAST DNS_ERROR_RCODE_BADTIME\0"
	.byte	0x1
	.uleb128 0x5f5
	.ascii "DNS_ERROR_PACKET_FMT_BASE 9500\0"
	.byte	0x1
	.uleb128 0x5f6
	.ascii "DNS_INFO_NO_RECORDS __MSABI_LONG(9501)\0"
	.byte	0x1
	.uleb128 0x5f7
	.ascii "DNS_ERROR_BAD_PACKET __MSABI_LONG(9502)\0"
	.byte	0x1
	.uleb128 0x5f8
	.ascii "DNS_ERROR_NO_PACKET __MSABI_LONG(9503)\0"
	.byte	0x1
	.uleb128 0x5f9
	.ascii "DNS_ERROR_RCODE __MSABI_LONG(9504)\0"
	.byte	0x1
	.uleb128 0x5fa
	.ascii "DNS_ERROR_UNSECURE_PACKET __MSABI_LONG(9505)\0"
	.byte	0x1
	.uleb128 0x5fb
	.ascii "DNS_STATUS_PACKET_UNSECURE DNS_ERROR_UNSECURE_PACKET\0"
	.byte	0x1
	.uleb128 0x5fc
	.ascii "DNS_ERROR_NO_MEMORY ERROR_OUTOFMEMORY\0"
	.byte	0x1
	.uleb128 0x5fd
	.ascii "DNS_ERROR_INVALID_NAME ERROR_INVALID_NAME\0"
	.byte	0x1
	.uleb128 0x5fe
	.ascii "DNS_ERROR_INVALID_DATA ERROR_INVALID_DATA\0"
	.byte	0x1
	.uleb128 0x5ff
	.ascii "DNS_ERROR_GENERAL_API_BASE 9550\0"
	.byte	0x1
	.uleb128 0x600
	.ascii "DNS_ERROR_INVALID_TYPE __MSABI_LONG(9551)\0"
	.byte	0x1
	.uleb128 0x601
	.ascii "DNS_ERROR_INVALID_IP_ADDRESS __MSABI_LONG(9552)\0"
	.byte	0x1
	.uleb128 0x602
	.ascii "DNS_ERROR_INVALID_PROPERTY __MSABI_LONG(9553)\0"
	.byte	0x1
	.uleb128 0x603
	.ascii "DNS_ERROR_TRY_AGAIN_LATER __MSABI_LONG(9554)\0"
	.byte	0x1
	.uleb128 0x604
	.ascii "DNS_ERROR_NOT_UNIQUE __MSABI_LONG(9555)\0"
	.byte	0x1
	.uleb128 0x605
	.ascii "DNS_ERROR_NON_RFC_NAME __MSABI_LONG(9556)\0"
	.byte	0x1
	.uleb128 0x606
	.ascii "DNS_STATUS_FQDN __MSABI_LONG(9557)\0"
	.byte	0x1
	.uleb128 0x607
	.ascii "DNS_STATUS_DOTTED_NAME __MSABI_LONG(9558)\0"
	.byte	0x1
	.uleb128 0x608
	.ascii "DNS_STATUS_SINGLE_PART_NAME __MSABI_LONG(9559)\0"
	.byte	0x1
	.uleb128 0x609
	.ascii "DNS_ERROR_INVALID_NAME_CHAR __MSABI_LONG(9560)\0"
	.byte	0x1
	.uleb128 0x60a
	.ascii "DNS_ERROR_NUMERIC_NAME __MSABI_LONG(9561)\0"
	.byte	0x1
	.uleb128 0x60b
	.ascii "DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER __MSABI_LONG(9562)\0"
	.byte	0x1
	.uleb128 0x60c
	.ascii "DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION __MSABI_LONG(9563)\0"
	.byte	0x1
	.uleb128 0x60d
	.ascii "DNS_ERROR_CANNOT_FIND_ROOT_HINTS __MSABI_LONG(9564)\0"
	.byte	0x1
	.uleb128 0x60e
	.ascii "DNS_ERROR_INCONSISTENT_ROOT_HINTS __MSABI_LONG(9565)\0"
	.byte	0x1
	.uleb128 0x60f
	.ascii "DNS_ERROR_ZONE_BASE 9600\0"
	.byte	0x1
	.uleb128 0x610
	.ascii "DNS_ERROR_ZONE_DOES_NOT_EXIST __MSABI_LONG(9601)\0"
	.byte	0x1
	.uleb128 0x611
	.ascii "DNS_ERROR_NO_ZONE_INFO __MSABI_LONG(9602)\0"
	.byte	0x1
	.uleb128 0x612
	.ascii "DNS_ERROR_INVALID_ZONE_OPERATION __MSABI_LONG(9603)\0"
	.byte	0x1
	.uleb128 0x613
	.ascii "DNS_ERROR_ZONE_CONFIGURATION_ERROR __MSABI_LONG(9604)\0"
	.byte	0x1
	.uleb128 0x614
	.ascii "DNS_ERROR_ZONE_HAS_NO_SOA_RECORD __MSABI_LONG(9605)\0"
	.byte	0x1
	.uleb128 0x615
	.ascii "DNS_ERROR_ZONE_HAS_NO_NS_RECORDS __MSABI_LONG(9606)\0"
	.byte	0x1
	.uleb128 0x616
	.ascii "DNS_ERROR_ZONE_LOCKED __MSABI_LONG(9607)\0"
	.byte	0x1
	.uleb128 0x617
	.ascii "DNS_ERROR_ZONE_CREATION_FAILED __MSABI_LONG(9608)\0"
	.byte	0x1
	.uleb128 0x618
	.ascii "DNS_ERROR_ZONE_ALREADY_EXISTS __MSABI_LONG(9609)\0"
	.byte	0x1
	.uleb128 0x619
	.ascii "DNS_ERROR_AUTOZONE_ALREADY_EXISTS __MSABI_LONG(9610)\0"
	.byte	0x1
	.uleb128 0x61a
	.ascii "DNS_ERROR_INVALID_ZONE_TYPE __MSABI_LONG(9611)\0"
	.byte	0x1
	.uleb128 0x61b
	.ascii "DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP __MSABI_LONG(9612)\0"
	.byte	0x1
	.uleb128 0x61c
	.ascii "DNS_ERROR_ZONE_NOT_SECONDARY __MSABI_LONG(9613)\0"
	.byte	0x1
	.uleb128 0x61d
	.ascii "DNS_ERROR_NEED_SECONDARY_ADDRESSES __MSABI_LONG(9614)\0"
	.byte	0x1
	.uleb128 0x61e
	.ascii "DNS_ERROR_WINS_INIT_FAILED __MSABI_LONG(9615)\0"
	.byte	0x1
	.uleb128 0x61f
	.ascii "DNS_ERROR_NEED_WINS_SERVERS __MSABI_LONG(9616)\0"
	.byte	0x1
	.uleb128 0x620
	.ascii "DNS_ERROR_NBSTAT_INIT_FAILED __MSABI_LONG(9617)\0"
	.byte	0x1
	.uleb128 0x621
	.ascii "DNS_ERROR_SOA_DELETE_INVALID __MSABI_LONG(9618)\0"
	.byte	0x1
	.uleb128 0x622
	.ascii "DNS_ERROR_FORWARDER_ALREADY_EXISTS __MSABI_LONG(9619)\0"
	.byte	0x1
	.uleb128 0x623
	.ascii "DNS_ERROR_ZONE_REQUIRES_MASTER_IP __MSABI_LONG(9620)\0"
	.byte	0x1
	.uleb128 0x624
	.ascii "DNS_ERROR_ZONE_IS_SHUTDOWN __MSABI_LONG(9621)\0"
	.byte	0x1
	.uleb128 0x625
	.ascii "DNS_ERROR_DATAFILE_BASE 9650\0"
	.byte	0x1
	.uleb128 0x626
	.ascii "DNS_ERROR_PRIMARY_REQUIRES_DATAFILE __MSABI_LONG(9651)\0"
	.byte	0x1
	.uleb128 0x627
	.ascii "DNS_ERROR_INVALID_DATAFILE_NAME __MSABI_LONG(9652)\0"
	.byte	0x1
	.uleb128 0x628
	.ascii "DNS_ERROR_DATAFILE_OPEN_FAILURE __MSABI_LONG(9653)\0"
	.byte	0x1
	.uleb128 0x629
	.ascii "DNS_ERROR_FILE_WRITEBACK_FAILED __MSABI_LONG(9654)\0"
	.byte	0x1
	.uleb128 0x62a
	.ascii "DNS_ERROR_DATAFILE_PARSING __MSABI_LONG(9655)\0"
	.byte	0x1
	.uleb128 0x62b
	.ascii "DNS_ERROR_DATABASE_BASE 9700\0"
	.byte	0x1
	.uleb128 0x62c
	.ascii "DNS_ERROR_RECORD_DOES_NOT_EXIST __MSABI_LONG(9701)\0"
	.byte	0x1
	.uleb128 0x62d
	.ascii "DNS_ERROR_RECORD_FORMAT __MSABI_LONG(9702)\0"
	.byte	0x1
	.uleb128 0x62e
	.ascii "DNS_ERROR_NODE_CREATION_FAILED __MSABI_LONG(9703)\0"
	.byte	0x1
	.uleb128 0x62f
	.ascii "DNS_ERROR_UNKNOWN_RECORD_TYPE __MSABI_LONG(9704)\0"
	.byte	0x1
	.uleb128 0x630
	.ascii "DNS_ERROR_RECORD_TIMED_OUT __MSABI_LONG(9705)\0"
	.byte	0x1
	.uleb128 0x631
	.ascii "DNS_ERROR_NAME_NOT_IN_ZONE __MSABI_LONG(9706)\0"
	.byte	0x1
	.uleb128 0x632
	.ascii "DNS_ERROR_CNAME_LOOP __MSABI_LONG(9707)\0"
	.byte	0x1
	.uleb128 0x633
	.ascii "DNS_ERROR_NODE_IS_CNAME __MSABI_LONG(9708)\0"
	.byte	0x1
	.uleb128 0x634
	.ascii "DNS_ERROR_CNAME_COLLISION __MSABI_LONG(9709)\0"
	.byte	0x1
	.uleb128 0x635
	.ascii "DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT __MSABI_LONG(9710)\0"
	.byte	0x1
	.uleb128 0x636
	.ascii "DNS_ERROR_RECORD_ALREADY_EXISTS __MSABI_LONG(9711)\0"
	.byte	0x1
	.uleb128 0x637
	.ascii "DNS_ERROR_SECONDARY_DATA __MSABI_LONG(9712)\0"
	.byte	0x1
	.uleb128 0x638
	.ascii "DNS_ERROR_NO_CREATE_CACHE_DATA __MSABI_LONG(9713)\0"
	.byte	0x1
	.uleb128 0x639
	.ascii "DNS_ERROR_NAME_DOES_NOT_EXIST __MSABI_LONG(9714)\0"
	.byte	0x1
	.uleb128 0x63a
	.ascii "DNS_WARNING_PTR_CREATE_FAILED __MSABI_LONG(9715)\0"
	.byte	0x1
	.uleb128 0x63b
	.ascii "DNS_WARNING_DOMAIN_UNDELETED __MSABI_LONG(9716)\0"
	.byte	0x1
	.uleb128 0x63c
	.ascii "DNS_ERROR_DS_UNAVAILABLE __MSABI_LONG(9717)\0"
	.byte	0x1
	.uleb128 0x63d
	.ascii "DNS_ERROR_DS_ZONE_ALREADY_EXISTS __MSABI_LONG(9718)\0"
	.byte	0x1
	.uleb128 0x63e
	.ascii "DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE __MSABI_LONG(9719)\0"
	.byte	0x1
	.uleb128 0x63f
	.ascii "DNS_ERROR_OPERATION_BASE 9750\0"
	.byte	0x1
	.uleb128 0x640
	.ascii "DNS_INFO_AXFR_COMPLETE __MSABI_LONG(9751)\0"
	.byte	0x1
	.uleb128 0x641
	.ascii "DNS_ERROR_AXFR __MSABI_LONG(9752)\0"
	.byte	0x1
	.uleb128 0x642
	.ascii "DNS_INFO_ADDED_LOCAL_WINS __MSABI_LONG(9753)\0"
	.byte	0x1
	.uleb128 0x643
	.ascii "DNS_ERROR_SECURE_BASE 9800\0"
	.byte	0x1
	.uleb128 0x644
	.ascii "DNS_STATUS_CONTINUE_NEEDED __MSABI_LONG(9801)\0"
	.byte	0x1
	.uleb128 0x645
	.ascii "DNS_ERROR_SETUP_BASE 9850\0"
	.byte	0x1
	.uleb128 0x646
	.ascii "DNS_ERROR_NO_TCPIP __MSABI_LONG(9851)\0"
	.byte	0x1
	.uleb128 0x647
	.ascii "DNS_ERROR_NO_DNS_SERVERS __MSABI_LONG(9852)\0"
	.byte	0x1
	.uleb128 0x648
	.ascii "DNS_ERROR_DP_BASE 9900\0"
	.byte	0x1
	.uleb128 0x649
	.ascii "DNS_ERROR_DP_DOES_NOT_EXIST __MSABI_LONG(9901)\0"
	.byte	0x1
	.uleb128 0x64a
	.ascii "DNS_ERROR_DP_ALREADY_EXISTS __MSABI_LONG(9902)\0"
	.byte	0x1
	.uleb128 0x64b
	.ascii "DNS_ERROR_DP_NOT_ENLISTED __MSABI_LONG(9903)\0"
	.byte	0x1
	.uleb128 0x64c
	.ascii "DNS_ERROR_DP_ALREADY_ENLISTED __MSABI_LONG(9904)\0"
	.byte	0x1
	.uleb128 0x64d
	.ascii "DNS_ERROR_DP_NOT_AVAILABLE __MSABI_LONG(9905)\0"
	.byte	0x1
	.uleb128 0x64e
	.ascii "DNS_ERROR_DP_FSMO_ERROR __MSABI_LONG(9906)\0"
	.byte	0x1
	.uleb128 0x651
	.ascii "WSABASEERR 10000\0"
	.byte	0x1
	.uleb128 0x652
	.ascii "WSAEINTR (WSABASEERR + 4)\0"
	.byte	0x1
	.uleb128 0x653
	.ascii "WSAEBADF (WSABASEERR + 9)\0"
	.byte	0x1
	.uleb128 0x654
	.ascii "WSAEACCES (WSABASEERR + 13)\0"
	.byte	0x1
	.uleb128 0x655
	.ascii "WSAEFAULT (WSABASEERR + 14)\0"
	.byte	0x1
	.uleb128 0x656
	.ascii "WSAEINVAL (WSABASEERR + 22)\0"
	.byte	0x1
	.uleb128 0x657
	.ascii "WSAEMFILE (WSABASEERR + 24)\0"
	.byte	0x1
	.uleb128 0x658
	.ascii "WSAEWOULDBLOCK (WSABASEERR + 35)\0"
	.byte	0x1
	.uleb128 0x659
	.ascii "WSAEINPROGRESS (WSABASEERR + 36)\0"
	.byte	0x1
	.uleb128 0x65a
	.ascii "WSAEALREADY (WSABASEERR + 37)\0"
	.byte	0x1
	.uleb128 0x65b
	.ascii "WSAENOTSOCK (WSABASEERR + 38)\0"
	.byte	0x1
	.uleb128 0x65c
	.ascii "WSAEDESTADDRREQ (WSABASEERR + 39)\0"
	.byte	0x1
	.uleb128 0x65d
	.ascii "WSAEMSGSIZE (WSABASEERR + 40)\0"
	.byte	0x1
	.uleb128 0x65e
	.ascii "WSAEPROTOTYPE (WSABASEERR + 41)\0"
	.byte	0x1
	.uleb128 0x65f
	.ascii "WSAENOPROTOOPT (WSABASEERR + 42)\0"
	.byte	0x1
	.uleb128 0x660
	.ascii "WSAEPROTONOSUPPORT (WSABASEERR + 43)\0"
	.byte	0x1
	.uleb128 0x661
	.ascii "WSAESOCKTNOSUPPORT (WSABASEERR + 44)\0"
	.byte	0x1
	.uleb128 0x662
	.ascii "WSAEOPNOTSUPP (WSABASEERR + 45)\0"
	.byte	0x1
	.uleb128 0x663
	.ascii "WSAEPFNOSUPPORT (WSABASEERR + 46)\0"
	.byte	0x1
	.uleb128 0x664
	.ascii "WSAEAFNOSUPPORT (WSABASEERR + 47)\0"
	.byte	0x1
	.uleb128 0x665
	.ascii "WSAEADDRINUSE (WSABASEERR + 48)\0"
	.byte	0x1
	.uleb128 0x666
	.ascii "WSAEADDRNOTAVAIL (WSABASEERR + 49)\0"
	.byte	0x1
	.uleb128 0x667
	.ascii "WSAENETDOWN (WSABASEERR + 50)\0"
	.byte	0x1
	.uleb128 0x668
	.ascii "WSAENETUNREACH (WSABASEERR + 51)\0"
	.byte	0x1
	.uleb128 0x669
	.ascii "WSAENETRESET (WSABASEERR + 52)\0"
	.byte	0x1
	.uleb128 0x66a
	.ascii "WSAECONNABORTED (WSABASEERR + 53)\0"
	.byte	0x1
	.uleb128 0x66b
	.ascii "WSAECONNRESET (WSABASEERR + 54)\0"
	.byte	0x1
	.uleb128 0x66c
	.ascii "WSAENOBUFS (WSABASEERR + 55)\0"
	.byte	0x1
	.uleb128 0x66d
	.ascii "WSAEISCONN (WSABASEERR + 56)\0"
	.byte	0x1
	.uleb128 0x66e
	.ascii "WSAENOTCONN (WSABASEERR + 57)\0"
	.byte	0x1
	.uleb128 0x66f
	.ascii "WSAESHUTDOWN (WSABASEERR + 58)\0"
	.byte	0x1
	.uleb128 0x670
	.ascii "WSAETOOMANYREFS (WSABASEERR + 59)\0"
	.byte	0x1
	.uleb128 0x671
	.ascii "WSAETIMEDOUT (WSABASEERR + 60)\0"
	.byte	0x1
	.uleb128 0x672
	.ascii "WSAECONNREFUSED (WSABASEERR + 61)\0"
	.byte	0x1
	.uleb128 0x673
	.ascii "WSAELOOP (WSABASEERR + 62)\0"
	.byte	0x1
	.uleb128 0x674
	.ascii "WSAENAMETOOLONG (WSABASEERR + 63)\0"
	.byte	0x1
	.uleb128 0x675
	.ascii "WSAEHOSTDOWN (WSABASEERR + 64)\0"
	.byte	0x1
	.uleb128 0x676
	.ascii "WSAEHOSTUNREACH (WSABASEERR + 65)\0"
	.byte	0x1
	.uleb128 0x677
	.ascii "WSAENOTEMPTY (WSABASEERR + 66)\0"
	.byte	0x1
	.uleb128 0x678
	.ascii "WSAEPROCLIM (WSABASEERR + 67)\0"
	.byte	0x1
	.uleb128 0x679
	.ascii "WSAEUSERS (WSABASEERR + 68)\0"
	.byte	0x1
	.uleb128 0x67a
	.ascii "WSAEDQUOT (WSABASEERR + 69)\0"
	.byte	0x1
	.uleb128 0x67b
	.ascii "WSAESTALE (WSABASEERR + 70)\0"
	.byte	0x1
	.uleb128 0x67c
	.ascii "WSAEREMOTE (WSABASEERR + 71)\0"
	.byte	0x1
	.uleb128 0x67d
	.ascii "WSASYSNOTREADY (WSABASEERR + 91)\0"
	.byte	0x1
	.uleb128 0x67e
	.ascii "WSAVERNOTSUPPORTED (WSABASEERR + 92)\0"
	.byte	0x1
	.uleb128 0x67f
	.ascii "WSANOTINITIALISED (WSABASEERR + 93)\0"
	.byte	0x1
	.uleb128 0x680
	.ascii "WSAEDISCON (WSABASEERR + 101)\0"
	.byte	0x1
	.uleb128 0x681
	.ascii "WSAENOMORE (WSABASEERR + 102)\0"
	.byte	0x1
	.uleb128 0x682
	.ascii "WSAECANCELLED (WSABASEERR + 103)\0"
	.byte	0x1
	.uleb128 0x683
	.ascii "WSAEINVALIDPROCTABLE (WSABASEERR + 104)\0"
	.byte	0x1
	.uleb128 0x684
	.ascii "WSAEINVALIDPROVIDER (WSABASEERR + 105)\0"
	.byte	0x1
	.uleb128 0x685
	.ascii "WSAEPROVIDERFAILEDINIT (WSABASEERR + 106)\0"
	.byte	0x1
	.uleb128 0x686
	.ascii "WSASYSCALLFAILURE (WSABASEERR + 107)\0"
	.byte	0x1
	.uleb128 0x687
	.ascii "WSASERVICE_NOT_FOUND (WSABASEERR + 108)\0"
	.byte	0x1
	.uleb128 0x688
	.ascii "WSATYPE_NOT_FOUND (WSABASEERR + 109)\0"
	.byte	0x1
	.uleb128 0x689
	.ascii "WSA_E_NO_MORE (WSABASEERR + 110)\0"
	.byte	0x1
	.uleb128 0x68a
	.ascii "WSA_E_CANCELLED (WSABASEERR + 111)\0"
	.byte	0x1
	.uleb128 0x68b
	.ascii "WSAEREFUSED (WSABASEERR + 112)\0"
	.byte	0x1
	.uleb128 0x68d
	.ascii "WSAHOST_NOT_FOUND (WSABASEERR + 1001)\0"
	.byte	0x1
	.uleb128 0x690
	.ascii "WSATRY_AGAIN (WSABASEERR + 1002)\0"
	.byte	0x1
	.uleb128 0x693
	.ascii "WSANO_RECOVERY (WSABASEERR + 1003)\0"
	.byte	0x1
	.uleb128 0x696
	.ascii "WSANO_DATA (WSABASEERR + 1004)\0"
	.byte	0x1
	.uleb128 0x699
	.ascii "WSA_QOS_RECEIVERS (WSABASEERR + 1005)\0"
	.byte	0x1
	.uleb128 0x69c
	.ascii "WSA_QOS_SENDERS (WSABASEERR + 1006)\0"
	.byte	0x1
	.uleb128 0x69f
	.ascii "WSA_QOS_NO_SENDERS (WSABASEERR + 1007)\0"
	.byte	0x1
	.uleb128 0x6a2
	.ascii "WSA_QOS_NO_RECEIVERS (WSABASEERR + 1008)\0"
	.byte	0x1
	.uleb128 0x6a5
	.ascii "WSA_QOS_REQUEST_CONFIRMED (WSABASEERR + 1009)\0"
	.byte	0x1
	.uleb128 0x6a8
	.ascii "WSA_QOS_ADMISSION_FAILURE (WSABASEERR + 1010)\0"
	.byte	0x1
	.uleb128 0x6ab
	.ascii "WSA_QOS_POLICY_FAILURE (WSABASEERR + 1011)\0"
	.byte	0x1
	.uleb128 0x6ae
	.ascii "WSA_QOS_BAD_STYLE (WSABASEERR + 1012)\0"
	.byte	0x1
	.uleb128 0x6b1
	.ascii "WSA_QOS_BAD_OBJECT (WSABASEERR + 1013)\0"
	.byte	0x1
	.uleb128 0x6b4
	.ascii "WSA_QOS_TRAFFIC_CTRL_ERROR (WSABASEERR + 1014)\0"
	.byte	0x1
	.uleb128 0x6b7
	.ascii "WSA_QOS_GENERIC_ERROR (WSABASEERR + 1015)\0"
	.byte	0x1
	.uleb128 0x6ba
	.ascii "WSA_QOS_ESERVICETYPE (WSABASEERR + 1016)\0"
	.byte	0x1
	.uleb128 0x6bd
	.ascii "WSA_QOS_EFLOWSPEC (WSABASEERR + 1017)\0"
	.byte	0x1
	.uleb128 0x6c0
	.ascii "WSA_QOS_EPROVSPECBUF (WSABASEERR + 1018)\0"
	.byte	0x1
	.uleb128 0x6c3
	.ascii "WSA_QOS_EFILTERSTYLE (WSABASEERR + 1019)\0"
	.byte	0x1
	.uleb128 0x6c6
	.ascii "WSA_QOS_EFILTERTYPE (WSABASEERR + 1020)\0"
	.byte	0x1
	.uleb128 0x6c9
	.ascii "WSA_QOS_EFILTERCOUNT (WSABASEERR + 1021)\0"
	.byte	0x1
	.uleb128 0x6cc
	.ascii "WSA_QOS_EOBJLENGTH (WSABASEERR + 1022)\0"
	.byte	0x1
	.uleb128 0x6cf
	.ascii "WSA_QOS_EFLOWCOUNT (WSABASEERR + 1023)\0"
	.byte	0x1
	.uleb128 0x6d2
	.ascii "WSA_QOS_EUNKNOWNPSOBJ (WSABASEERR + 1024)\0"
	.byte	0x1
	.uleb128 0x6d5
	.ascii "WSA_QOS_EUNKOWNPSOBJ WSA_QOS_EUNKNOWNPSOBJ\0"
	.byte	0x1
	.uleb128 0x6d8
	.ascii "WSA_QOS_EPOLICYOBJ (WSABASEERR + 1025)\0"
	.byte	0x1
	.uleb128 0x6db
	.ascii "WSA_QOS_EFLOWDESC (WSABASEERR + 1026)\0"
	.byte	0x1
	.uleb128 0x6de
	.ascii "WSA_QOS_EPSFLOWSPEC (WSABASEERR + 1027)\0"
	.byte	0x1
	.uleb128 0x6e1
	.ascii "WSA_QOS_EPSFILTERSPEC (WSABASEERR + 1028)\0"
	.byte	0x1
	.uleb128 0x6e4
	.ascii "WSA_QOS_ESDMODEOBJ (WSABASEERR + 1029)\0"
	.byte	0x1
	.uleb128 0x6e7
	.ascii "WSA_QOS_ESHAPERATEOBJ (WSABASEERR + 1030)\0"
	.byte	0x1
	.uleb128 0x6ea
	.ascii "WSA_QOS_RESERVED_PETYPE (WSABASEERR + 1031)\0"
	.byte	0x1
	.uleb128 0x6ee
	.ascii "ERROR_SXS_SECTION_NOT_FOUND __MSABI_LONG(14000)\0"
	.byte	0x1
	.uleb128 0x6ef
	.ascii "ERROR_SXS_CANT_GEN_ACTCTX __MSABI_LONG(14001)\0"
	.byte	0x1
	.uleb128 0x6f0
	.ascii "ERROR_SXS_INVALID_ACTCTXDATA_FORMAT __MSABI_LONG(14002)\0"
	.byte	0x1
	.uleb128 0x6f1
	.ascii "ERROR_SXS_ASSEMBLY_NOT_FOUND __MSABI_LONG(14003)\0"
	.byte	0x1
	.uleb128 0x6f2
	.ascii "ERROR_SXS_MANIFEST_FORMAT_ERROR __MSABI_LONG(14004)\0"
	.byte	0x1
	.uleb128 0x6f3
	.ascii "ERROR_SXS_MANIFEST_PARSE_ERROR __MSABI_LONG(14005)\0"
	.byte	0x1
	.uleb128 0x6f4
	.ascii "ERROR_SXS_ACTIVATION_CONTEXT_DISABLED __MSABI_LONG(14006)\0"
	.byte	0x1
	.uleb128 0x6f5
	.ascii "ERROR_SXS_KEY_NOT_FOUND __MSABI_LONG(14007)\0"
	.byte	0x1
	.uleb128 0x6f6
	.ascii "ERROR_SXS_VERSION_CONFLICT __MSABI_LONG(14008)\0"
	.byte	0x1
	.uleb128 0x6f7
	.ascii "ERROR_SXS_WRONG_SECTION_TYPE __MSABI_LONG(14009)\0"
	.byte	0x1
	.uleb128 0x6f8
	.ascii "ERROR_SXS_THREAD_QUERIES_DISABLED __MSABI_LONG(14010)\0"
	.byte	0x1
	.uleb128 0x6f9
	.ascii "ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET __MSABI_LONG(14011)\0"
	.byte	0x1
	.uleb128 0x6fa
	.ascii "ERROR_SXS_UNKNOWN_ENCODING_GROUP __MSABI_LONG(14012)\0"
	.byte	0x1
	.uleb128 0x6fb
	.ascii "ERROR_SXS_UNKNOWN_ENCODING __MSABI_LONG(14013)\0"
	.byte	0x1
	.uleb128 0x6fc
	.ascii "ERROR_SXS_INVALID_XML_NAMESPACE_URI __MSABI_LONG(14014)\0"
	.byte	0x1
	.uleb128 0x6fd
	.ascii "ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED __MSABI_LONG(14015)\0"
	.byte	0x1
	.uleb128 0x6fe
	.ascii "ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED __MSABI_LONG(14016)\0"
	.byte	0x1
	.uleb128 0x6ff
	.ascii "ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE __MSABI_LONG(14017)\0"
	.byte	0x1
	.uleb128 0x700
	.ascii "ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE __MSABI_LONG(14018)\0"
	.byte	0x1
	.uleb128 0x701
	.ascii "ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE __MSABI_LONG(14019)\0"
	.byte	0x1
	.uleb128 0x702
	.ascii "ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT __MSABI_LONG(14020)\0"
	.byte	0x1
	.uleb128 0x703
	.ascii "ERROR_SXS_DUPLICATE_DLL_NAME __MSABI_LONG(14021)\0"
	.byte	0x1
	.uleb128 0x704
	.ascii "ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME __MSABI_LONG(14022)\0"
	.byte	0x1
	.uleb128 0x705
	.ascii "ERROR_SXS_DUPLICATE_CLSID __MSABI_LONG(14023)\0"
	.byte	0x1
	.uleb128 0x706
	.ascii "ERROR_SXS_DUPLICATE_IID __MSABI_LONG(14024)\0"
	.byte	0x1
	.uleb128 0x707
	.ascii "ERROR_SXS_DUPLICATE_TLBID __MSABI_LONG(14025)\0"
	.byte	0x1
	.uleb128 0x708
	.ascii "ERROR_SXS_DUPLICATE_PROGID __MSABI_LONG(14026)\0"
	.byte	0x1
	.uleb128 0x709
	.ascii "ERROR_SXS_DUPLICATE_ASSEMBLY_NAME __MSABI_LONG(14027)\0"
	.byte	0x1
	.uleb128 0x70a
	.ascii "ERROR_SXS_FILE_HASH_MISMATCH __MSABI_LONG(14028)\0"
	.byte	0x1
	.uleb128 0x70b
	.ascii "ERROR_SXS_POLICY_PARSE_ERROR __MSABI_LONG(14029)\0"
	.byte	0x1
	.uleb128 0x70c
	.ascii "ERROR_SXS_XML_E_MISSINGQUOTE __MSABI_LONG(14030)\0"
	.byte	0x1
	.uleb128 0x70d
	.ascii "ERROR_SXS_XML_E_COMMENTSYNTAX __MSABI_LONG(14031)\0"
	.byte	0x1
	.uleb128 0x70e
	.ascii "ERROR_SXS_XML_E_BADSTARTNAMECHAR __MSABI_LONG(14032)\0"
	.byte	0x1
	.uleb128 0x70f
	.ascii "ERROR_SXS_XML_E_BADNAMECHAR __MSABI_LONG(14033)\0"
	.byte	0x1
	.uleb128 0x710
	.ascii "ERROR_SXS_XML_E_BADCHARINSTRING __MSABI_LONG(14034)\0"
	.byte	0x1
	.uleb128 0x711
	.ascii "ERROR_SXS_XML_E_XMLDECLSYNTAX __MSABI_LONG(14035)\0"
	.byte	0x1
	.uleb128 0x712
	.ascii "ERROR_SXS_XML_E_BADCHARDATA __MSABI_LONG(14036)\0"
	.byte	0x1
	.uleb128 0x713
	.ascii "ERROR_SXS_XML_E_MISSINGWHITESPACE __MSABI_LONG(14037)\0"
	.byte	0x1
	.uleb128 0x714
	.ascii "ERROR_SXS_XML_E_EXPECTINGTAGEND __MSABI_LONG(14038)\0"
	.byte	0x1
	.uleb128 0x715
	.ascii "ERROR_SXS_XML_E_MISSINGSEMICOLON __MSABI_LONG(14039)\0"
	.byte	0x1
	.uleb128 0x716
	.ascii "ERROR_SXS_XML_E_UNBALANCEDPAREN __MSABI_LONG(14040)\0"
	.byte	0x1
	.uleb128 0x717
	.ascii "ERROR_SXS_XML_E_INTERNALERROR __MSABI_LONG(14041)\0"
	.byte	0x1
	.uleb128 0x718
	.ascii "ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE __MSABI_LONG(14042)\0"
	.byte	0x1
	.uleb128 0x719
	.ascii "ERROR_SXS_XML_E_INCOMPLETE_ENCODING __MSABI_LONG(14043)\0"
	.byte	0x1
	.uleb128 0x71a
	.ascii "ERROR_SXS_XML_E_MISSING_PAREN __MSABI_LONG(14044)\0"
	.byte	0x1
	.uleb128 0x71b
	.ascii "ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE __MSABI_LONG(14045)\0"
	.byte	0x1
	.uleb128 0x71c
	.ascii "ERROR_SXS_XML_E_MULTIPLE_COLONS __MSABI_LONG(14046)\0"
	.byte	0x1
	.uleb128 0x71d
	.ascii "ERROR_SXS_XML_E_INVALID_DECIMAL __MSABI_LONG(14047)\0"
	.byte	0x1
	.uleb128 0x71e
	.ascii "ERROR_SXS_XML_E_INVALID_HEXIDECIMAL __MSABI_LONG(14048)\0"
	.byte	0x1
	.uleb128 0x71f
	.ascii "ERROR_SXS_XML_E_INVALID_UNICODE __MSABI_LONG(14049)\0"
	.byte	0x1
	.uleb128 0x720
	.ascii "ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK __MSABI_LONG(14050)\0"
	.byte	0x1
	.uleb128 0x721
	.ascii "ERROR_SXS_XML_E_UNEXPECTEDENDTAG __MSABI_LONG(14051)\0"
	.byte	0x1
	.uleb128 0x722
	.ascii "ERROR_SXS_XML_E_UNCLOSEDTAG __MSABI_LONG(14052)\0"
	.byte	0x1
	.uleb128 0x723
	.ascii "ERROR_SXS_XML_E_DUPLICATEATTRIBUTE __MSABI_LONG(14053)\0"
	.byte	0x1
	.uleb128 0x724
	.ascii "ERROR_SXS_XML_E_MULTIPLEROOTS __MSABI_LONG(14054)\0"
	.byte	0x1
	.uleb128 0x725
	.ascii "ERROR_SXS_XML_E_INVALIDATROOTLEVEL __MSABI_LONG(14055)\0"
	.byte	0x1
	.uleb128 0x726
	.ascii "ERROR_SXS_XML_E_BADXMLDECL __MSABI_LONG(14056)\0"
	.byte	0x1
	.uleb128 0x727
	.ascii "ERROR_SXS_XML_E_MISSINGROOT __MSABI_LONG(14057)\0"
	.byte	0x1
	.uleb128 0x728
	.ascii "ERROR_SXS_XML_E_UNEXPECTEDEOF __MSABI_LONG(14058)\0"
	.byte	0x1
	.uleb128 0x729
	.ascii "ERROR_SXS_XML_E_BADPEREFINSUBSET __MSABI_LONG(14059)\0"
	.byte	0x1
	.uleb128 0x72a
	.ascii "ERROR_SXS_XML_E_UNCLOSEDSTARTTAG __MSABI_LONG(14060)\0"
	.byte	0x1
	.uleb128 0x72b
	.ascii "ERROR_SXS_XML_E_UNCLOSEDENDTAG __MSABI_LONG(14061)\0"
	.byte	0x1
	.uleb128 0x72c
	.ascii "ERROR_SXS_XML_E_UNCLOSEDSTRING __MSABI_LONG(14062)\0"
	.byte	0x1
	.uleb128 0x72d
	.ascii "ERROR_SXS_XML_E_UNCLOSEDCOMMENT __MSABI_LONG(14063)\0"
	.byte	0x1
	.uleb128 0x72e
	.ascii "ERROR_SXS_XML_E_UNCLOSEDDECL __MSABI_LONG(14064)\0"
	.byte	0x1
	.uleb128 0x72f
	.ascii "ERROR_SXS_XML_E_UNCLOSEDCDATA __MSABI_LONG(14065)\0"
	.byte	0x1
	.uleb128 0x730
	.ascii "ERROR_SXS_XML_E_RESERVEDNAMESPACE __MSABI_LONG(14066)\0"
	.byte	0x1
	.uleb128 0x731
	.ascii "ERROR_SXS_XML_E_INVALIDENCODING __MSABI_LONG(14067)\0"
	.byte	0x1
	.uleb128 0x732
	.ascii "ERROR_SXS_XML_E_INVALIDSWITCH __MSABI_LONG(14068)\0"
	.byte	0x1
	.uleb128 0x733
	.ascii "ERROR_SXS_XML_E_BADXMLCASE __MSABI_LONG(14069)\0"
	.byte	0x1
	.uleb128 0x734
	.ascii "ERROR_SXS_XML_E_INVALID_STANDALONE __MSABI_LONG(14070)\0"
	.byte	0x1
	.uleb128 0x735
	.ascii "ERROR_SXS_XML_E_UNEXPECTED_STANDALONE __MSABI_LONG(14071)\0"
	.byte	0x1
	.uleb128 0x736
	.ascii "ERROR_SXS_XML_E_INVALID_VERSION __MSABI_LONG(14072)\0"
	.byte	0x1
	.uleb128 0x737
	.ascii "ERROR_SXS_XML_E_MISSINGEQUALS __MSABI_LONG(14073)\0"
	.byte	0x1
	.uleb128 0x738
	.ascii "ERROR_SXS_PROTECTION_RECOVERY_FAILED __MSABI_LONG(14074)\0"
	.byte	0x1
	.uleb128 0x739
	.ascii "ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT __MSABI_LONG(14075)\0"
	.byte	0x1
	.uleb128 0x73a
	.ascii "ERROR_SXS_PROTECTION_CATALOG_NOT_VALID __MSABI_LONG(14076)\0"
	.byte	0x1
	.uleb128 0x73b
	.ascii "ERROR_SXS_UNTRANSLATABLE_HRESULT __MSABI_LONG(14077)\0"
	.byte	0x1
	.uleb128 0x73c
	.ascii "ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING __MSABI_LONG(14078)\0"
	.byte	0x1
	.uleb128 0x73d
	.ascii "ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE __MSABI_LONG(14079)\0"
	.byte	0x1
	.uleb128 0x73e
	.ascii "ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME __MSABI_LONG(14080)\0"
	.byte	0x1
	.uleb128 0x73f
	.ascii "ERROR_IPSEC_QM_POLICY_EXISTS __MSABI_LONG(13000)\0"
	.byte	0x1
	.uleb128 0x740
	.ascii "ERROR_IPSEC_QM_POLICY_NOT_FOUND __MSABI_LONG(13001)\0"
	.byte	0x1
	.uleb128 0x741
	.ascii "ERROR_IPSEC_QM_POLICY_IN_USE __MSABI_LONG(13002)\0"
	.byte	0x1
	.uleb128 0x742
	.ascii "ERROR_IPSEC_MM_POLICY_EXISTS __MSABI_LONG(13003)\0"
	.byte	0x1
	.uleb128 0x743
	.ascii "ERROR_IPSEC_MM_POLICY_NOT_FOUND __MSABI_LONG(13004)\0"
	.byte	0x1
	.uleb128 0x744
	.ascii "ERROR_IPSEC_MM_POLICY_IN_USE __MSABI_LONG(13005)\0"
	.byte	0x1
	.uleb128 0x745
	.ascii "ERROR_IPSEC_MM_FILTER_EXISTS __MSABI_LONG(13006)\0"
	.byte	0x1
	.uleb128 0x746
	.ascii "ERROR_IPSEC_MM_FILTER_NOT_FOUND __MSABI_LONG(13007)\0"
	.byte	0x1
	.uleb128 0x747
	.ascii "ERROR_IPSEC_TRANSPORT_FILTER_EXISTS __MSABI_LONG(13008)\0"
	.byte	0x1
	.uleb128 0x748
	.ascii "ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND __MSABI_LONG(13009)\0"
	.byte	0x1
	.uleb128 0x749
	.ascii "ERROR_IPSEC_MM_AUTH_EXISTS __MSABI_LONG(13010)\0"
	.byte	0x1
	.uleb128 0x74a
	.ascii "ERROR_IPSEC_MM_AUTH_NOT_FOUND __MSABI_LONG(13011)\0"
	.byte	0x1
	.uleb128 0x74b
	.ascii "ERROR_IPSEC_MM_AUTH_IN_USE __MSABI_LONG(13012)\0"
	.byte	0x1
	.uleb128 0x74c
	.ascii "ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND __MSABI_LONG(13013)\0"
	.byte	0x1
	.uleb128 0x74d
	.ascii "ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND __MSABI_LONG(13014)\0"
	.byte	0x1
	.uleb128 0x74e
	.ascii "ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND __MSABI_LONG(13015)\0"
	.byte	0x1
	.uleb128 0x74f
	.ascii "ERROR_IPSEC_TUNNEL_FILTER_EXISTS __MSABI_LONG(13016)\0"
	.byte	0x1
	.uleb128 0x750
	.ascii "ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND __MSABI_LONG(13017)\0"
	.byte	0x1
	.uleb128 0x751
	.ascii "ERROR_IPSEC_MM_FILTER_PENDING_DELETION __MSABI_LONG(13018)\0"
	.byte	0x1
	.uleb128 0x752
	.ascii "ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION __MSABI_LONG(13019)\0"
	.byte	0x1
	.uleb128 0x753
	.ascii "ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION __MSABI_LONG(13020)\0"
	.byte	0x1
	.uleb128 0x754
	.ascii "ERROR_IPSEC_MM_POLICY_PENDING_DELETION __MSABI_LONG(13021)\0"
	.byte	0x1
	.uleb128 0x755
	.ascii "ERROR_IPSEC_MM_AUTH_PENDING_DELETION __MSABI_LONG(13022)\0"
	.byte	0x1
	.uleb128 0x756
	.ascii "ERROR_IPSEC_QM_POLICY_PENDING_DELETION __MSABI_LONG(13023)\0"
	.byte	0x1
	.uleb128 0x757
	.ascii "WARNING_IPSEC_MM_POLICY_PRUNED __MSABI_LONG(13024)\0"
	.byte	0x1
	.uleb128 0x758
	.ascii "WARNING_IPSEC_QM_POLICY_PRUNED __MSABI_LONG(13025)\0"
	.byte	0x1
	.uleb128 0x759
	.ascii "ERROR_IPSEC_IKE_NEG_STATUS_BEGIN __MSABI_LONG(13800)\0"
	.byte	0x1
	.uleb128 0x75a
	.ascii "ERROR_IPSEC_IKE_AUTH_FAIL __MSABI_LONG(13801)\0"
	.byte	0x1
	.uleb128 0x75b
	.ascii "ERROR_IPSEC_IKE_ATTRIB_FAIL __MSABI_LONG(13802)\0"
	.byte	0x1
	.uleb128 0x75c
	.ascii "ERROR_IPSEC_IKE_NEGOTIATION_PENDING __MSABI_LONG(13803)\0"
	.byte	0x1
	.uleb128 0x75d
	.ascii "ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR __MSABI_LONG(13804)\0"
	.byte	0x1
	.uleb128 0x75e
	.ascii "ERROR_IPSEC_IKE_TIMED_OUT __MSABI_LONG(13805)\0"
	.byte	0x1
	.uleb128 0x75f
	.ascii "ERROR_IPSEC_IKE_NO_CERT __MSABI_LONG(13806)\0"
	.byte	0x1
	.uleb128 0x760
	.ascii "ERROR_IPSEC_IKE_SA_DELETED __MSABI_LONG(13807)\0"
	.byte	0x1
	.uleb128 0x761
	.ascii "ERROR_IPSEC_IKE_SA_REAPED __MSABI_LONG(13808)\0"
	.byte	0x1
	.uleb128 0x762
	.ascii "ERROR_IPSEC_IKE_MM_ACQUIRE_DROP __MSABI_LONG(13809)\0"
	.byte	0x1
	.uleb128 0x763
	.ascii "ERROR_IPSEC_IKE_QM_ACQUIRE_DROP __MSABI_LONG(13810)\0"
	.byte	0x1
	.uleb128 0x764
	.ascii "ERROR_IPSEC_IKE_QUEUE_DROP_MM __MSABI_LONG(13811)\0"
	.byte	0x1
	.uleb128 0x765
	.ascii "ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM __MSABI_LONG(13812)\0"
	.byte	0x1
	.uleb128 0x766
	.ascii "ERROR_IPSEC_IKE_DROP_NO_RESPONSE __MSABI_LONG(13813)\0"
	.byte	0x1
	.uleb128 0x767
	.ascii "ERROR_IPSEC_IKE_MM_DELAY_DROP __MSABI_LONG(13814)\0"
	.byte	0x1
	.uleb128 0x768
	.ascii "ERROR_IPSEC_IKE_QM_DELAY_DROP __MSABI_LONG(13815)\0"
	.byte	0x1
	.uleb128 0x769
	.ascii "ERROR_IPSEC_IKE_ERROR __MSABI_LONG(13816)\0"
	.byte	0x1
	.uleb128 0x76a
	.ascii "ERROR_IPSEC_IKE_CRL_FAILED __MSABI_LONG(13817)\0"
	.byte	0x1
	.uleb128 0x76b
	.ascii "ERROR_IPSEC_IKE_INVALID_KEY_USAGE __MSABI_LONG(13818)\0"
	.byte	0x1
	.uleb128 0x76c
	.ascii "ERROR_IPSEC_IKE_INVALID_CERT_TYPE __MSABI_LONG(13819)\0"
	.byte	0x1
	.uleb128 0x76d
	.ascii "ERROR_IPSEC_IKE_NO_PRIVATE_KEY __MSABI_LONG(13820)\0"
	.byte	0x1
	.uleb128 0x76e
	.ascii "ERROR_IPSEC_IKE_DH_FAIL __MSABI_LONG(13822)\0"
	.byte	0x1
	.uleb128 0x76f
	.ascii "ERROR_IPSEC_IKE_INVALID_HEADER __MSABI_LONG(13824)\0"
	.byte	0x1
	.uleb128 0x770
	.ascii "ERROR_IPSEC_IKE_NO_POLICY __MSABI_LONG(13825)\0"
	.byte	0x1
	.uleb128 0x771
	.ascii "ERROR_IPSEC_IKE_INVALID_SIGNATURE __MSABI_LONG(13826)\0"
	.byte	0x1
	.uleb128 0x772
	.ascii "ERROR_IPSEC_IKE_KERBEROS_ERROR __MSABI_LONG(13827)\0"
	.byte	0x1
	.uleb128 0x773
	.ascii "ERROR_IPSEC_IKE_NO_PUBLIC_KEY __MSABI_LONG(13828)\0"
	.byte	0x1
	.uleb128 0x774
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR __MSABI_LONG(13829)\0"
	.byte	0x1
	.uleb128 0x775
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_SA __MSABI_LONG(13830)\0"
	.byte	0x1
	.uleb128 0x776
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_PROP __MSABI_LONG(13831)\0"
	.byte	0x1
	.uleb128 0x777
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_TRANS __MSABI_LONG(13832)\0"
	.byte	0x1
	.uleb128 0x778
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_KE __MSABI_LONG(13833)\0"
	.byte	0x1
	.uleb128 0x779
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_ID __MSABI_LONG(13834)\0"
	.byte	0x1
	.uleb128 0x77a
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_CERT __MSABI_LONG(13835)\0"
	.byte	0x1
	.uleb128 0x77b
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ __MSABI_LONG(13836)\0"
	.byte	0x1
	.uleb128 0x77c
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_HASH __MSABI_LONG(13837)\0"
	.byte	0x1
	.uleb128 0x77d
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_SIG __MSABI_LONG(13838)\0"
	.byte	0x1
	.uleb128 0x77e
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_NONCE __MSABI_LONG(13839)\0"
	.byte	0x1
	.uleb128 0x77f
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY __MSABI_LONG(13840)\0"
	.byte	0x1
	.uleb128 0x780
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_DELETE __MSABI_LONG(13841)\0"
	.byte	0x1
	.uleb128 0x781
	.ascii "ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR __MSABI_LONG(13842)\0"
	.byte	0x1
	.uleb128 0x782
	.ascii "ERROR_IPSEC_IKE_INVALID_PAYLOAD __MSABI_LONG(13843)\0"
	.byte	0x1
	.uleb128 0x783
	.ascii "ERROR_IPSEC_IKE_LOAD_SOFT_SA __MSABI_LONG(13844)\0"
	.byte	0x1
	.uleb128 0x784
	.ascii "ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN __MSABI_LONG(13845)\0"
	.byte	0x1
	.uleb128 0x785
	.ascii "ERROR_IPSEC_IKE_INVALID_COOKIE __MSABI_LONG(13846)\0"
	.byte	0x1
	.uleb128 0x786
	.ascii "ERROR_IPSEC_IKE_NO_PEER_CERT __MSABI_LONG(13847)\0"
	.byte	0x1
	.uleb128 0x787
	.ascii "ERROR_IPSEC_IKE_PEER_CRL_FAILED __MSABI_LONG(13848)\0"
	.byte	0x1
	.uleb128 0x788
	.ascii "ERROR_IPSEC_IKE_POLICY_CHANGE __MSABI_LONG(13849)\0"
	.byte	0x1
	.uleb128 0x789
	.ascii "ERROR_IPSEC_IKE_NO_MM_POLICY __MSABI_LONG(13850)\0"
	.byte	0x1
	.uleb128 0x78a
	.ascii "ERROR_IPSEC_IKE_NOTCBPRIV __MSABI_LONG(13851)\0"
	.byte	0x1
	.uleb128 0x78b
	.ascii "ERROR_IPSEC_IKE_SECLOADFAIL __MSABI_LONG(13852)\0"
	.byte	0x1
	.uleb128 0x78c
	.ascii "ERROR_IPSEC_IKE_FAILSSPINIT __MSABI_LONG(13853)\0"
	.byte	0x1
	.uleb128 0x78d
	.ascii "ERROR_IPSEC_IKE_FAILQUERYSSP __MSABI_LONG(13854)\0"
	.byte	0x1
	.uleb128 0x78e
	.ascii "ERROR_IPSEC_IKE_SRVACQFAIL __MSABI_LONG(13855)\0"
	.byte	0x1
	.uleb128 0x78f
	.ascii "ERROR_IPSEC_IKE_SRVQUERYCRED __MSABI_LONG(13856)\0"
	.byte	0x1
	.uleb128 0x790
	.ascii "ERROR_IPSEC_IKE_GETSPIFAIL __MSABI_LONG(13857)\0"
	.byte	0x1
	.uleb128 0x791
	.ascii "ERROR_IPSEC_IKE_INVALID_FILTER __MSABI_LONG(13858)\0"
	.byte	0x1
	.uleb128 0x792
	.ascii "ERROR_IPSEC_IKE_OUT_OF_MEMORY __MSABI_LONG(13859)\0"
	.byte	0x1
	.uleb128 0x793
	.ascii "ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED __MSABI_LONG(13860)\0"
	.byte	0x1
	.uleb128 0x794
	.ascii "ERROR_IPSEC_IKE_INVALID_POLICY __MSABI_LONG(13861)\0"
	.byte	0x1
	.uleb128 0x795
	.ascii "ERROR_IPSEC_IKE_UNKNOWN_DOI __MSABI_LONG(13862)\0"
	.byte	0x1
	.uleb128 0x796
	.ascii "ERROR_IPSEC_IKE_INVALID_SITUATION __MSABI_LONG(13863)\0"
	.byte	0x1
	.uleb128 0x797
	.ascii "ERROR_IPSEC_IKE_DH_FAILURE __MSABI_LONG(13864)\0"
	.byte	0x1
	.uleb128 0x798
	.ascii "ERROR_IPSEC_IKE_INVALID_GROUP __MSABI_LONG(13865)\0"
	.byte	0x1
	.uleb128 0x799
	.ascii "ERROR_IPSEC_IKE_ENCRYPT __MSABI_LONG(13866)\0"
	.byte	0x1
	.uleb128 0x79a
	.ascii "ERROR_IPSEC_IKE_DECRYPT __MSABI_LONG(13867)\0"
	.byte	0x1
	.uleb128 0x79b
	.ascii "ERROR_IPSEC_IKE_POLICY_MATCH __MSABI_LONG(13868)\0"
	.byte	0x1
	.uleb128 0x79c
	.ascii "ERROR_IPSEC_IKE_UNSUPPORTED_ID __MSABI_LONG(13869)\0"
	.byte	0x1
	.uleb128 0x79d
	.ascii "ERROR_IPSEC_IKE_INVALID_HASH __MSABI_LONG(13870)\0"
	.byte	0x1
	.uleb128 0x79e
	.ascii "ERROR_IPSEC_IKE_INVALID_HASH_ALG __MSABI_LONG(13871)\0"
	.byte	0x1
	.uleb128 0x79f
	.ascii "ERROR_IPSEC_IKE_INVALID_HASH_SIZE __MSABI_LONG(13872)\0"
	.byte	0x1
	.uleb128 0x7a0
	.ascii "ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG __MSABI_LONG(13873)\0"
	.byte	0x1
	.uleb128 0x7a1
	.ascii "ERROR_IPSEC_IKE_INVALID_AUTH_ALG __MSABI_LONG(13874)\0"
	.byte	0x1
	.uleb128 0x7a2
	.ascii "ERROR_IPSEC_IKE_INVALID_SIG __MSABI_LONG(13875)\0"
	.byte	0x1
	.uleb128 0x7a3
	.ascii "ERROR_IPSEC_IKE_LOAD_FAILED __MSABI_LONG(13876)\0"
	.byte	0x1
	.uleb128 0x7a4
	.ascii "ERROR_IPSEC_IKE_RPC_DELETE __MSABI_LONG(13877)\0"
	.byte	0x1
	.uleb128 0x7a5
	.ascii "ERROR_IPSEC_IKE_BENIGN_REINIT __MSABI_LONG(13878)\0"
	.byte	0x1
	.uleb128 0x7a6
	.ascii "ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY __MSABI_LONG(13879)\0"
	.byte	0x1
	.uleb128 0x7a7
	.ascii "ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN __MSABI_LONG(13881)\0"
	.byte	0x1
	.uleb128 0x7a8
	.ascii "ERROR_IPSEC_IKE_MM_LIMIT __MSABI_LONG(13882)\0"
	.byte	0x1
	.uleb128 0x7a9
	.ascii "ERROR_IPSEC_IKE_NEGOTIATION_DISABLED __MSABI_LONG(13883)\0"
	.byte	0x1
	.uleb128 0x7aa
	.ascii "ERROR_IPSEC_IKE_NEG_STATUS_END __MSABI_LONG(13884)\0"
	.byte	0x1
	.uleb128 0x7ab
	.ascii "SEVERITY_SUCCESS 0\0"
	.byte	0x1
	.uleb128 0x7ac
	.ascii "SEVERITY_ERROR 1\0"
	.byte	0x1
	.uleb128 0x7ad
	.ascii "SUCCEEDED(hr) ((HRESULT)(hr) >= 0)\0"
	.byte	0x1
	.uleb128 0x7ae
	.ascii "FAILED(hr) ((HRESULT)(hr) < 0)\0"
	.byte	0x1
	.uleb128 0x7af
	.ascii "IS_ERROR(Status) ((unsigned __LONG32)(Status) >> 31==SEVERITY_ERROR)\0"
	.byte	0x1
	.uleb128 0x7b0
	.ascii "HRESULT_CODE(hr) ((hr) & 0xFFFF)\0"
	.byte	0x1
	.uleb128 0x7b1
	.ascii "SCODE_CODE(sc) ((sc) & 0xFFFF)\0"
	.byte	0x1
	.uleb128 0x7b2
	.ascii "HRESULT_FACILITY(hr) (((hr) >> 16) & 0x1fff)\0"
	.byte	0x1
	.uleb128 0x7b3
	.ascii "SCODE_FACILITY(sc) (((sc) >> 16) & 0x1fff)\0"
	.byte	0x1
	.uleb128 0x7b4
	.ascii "HRESULT_SEVERITY(hr) (((hr) >> 31) & 0x1)\0"
	.byte	0x1
	.uleb128 0x7b5
	.ascii "SCODE_SEVERITY(sc) (((sc) >> 31) & 0x1)\0"
	.byte	0x1
	.uleb128 0x7b6
	.ascii "MAKE_HRESULT(sev,fac,code) ((HRESULT) (((unsigned __LONG32)(sev)<<31) | ((unsigned __LONG32)(fac)<<16) | ((unsigned __LONG32)(code))))\0"
	.byte	0x1
	.uleb128 0x7b7
	.ascii "MAKE_SCODE(sev,fac,code) ((SCODE) (((unsigned __LONG32)(sev)<<31) | ((unsigned __LONG32)(fac)<<16) | ((unsigned __LONG32)(code))))\0"
	.byte	0x1
	.uleb128 0x7b8
	.ascii "FACILITY_NT_BIT 0x10000000\0"
	.byte	0x1
	.uleb128 0x7b9
	.ascii "__HRESULT_FROM_WIN32(x) ((HRESULT)(x) <= 0 ? ((HRESULT)(x)) : ((HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000)))\0"
	.byte	0x1
	.uleb128 0x7c3
	.ascii "HRESULT_FROM_WIN32(x) __HRESULT_FROM_WIN32(x)\0"
	.byte	0x1
	.uleb128 0x7c5
	.ascii "HRESULT_FROM_NT(x) ((HRESULT) ((x) | FACILITY_NT_BIT))\0"
	.byte	0x1
	.uleb128 0x7c6
	.ascii "GetScode(hr) ((SCODE) (hr))\0"
	.byte	0x1
	.uleb128 0x7c7
	.ascii "ResultFromScode(sc) ((HRESULT) (sc))\0"
	.byte	0x1
	.uleb128 0x7c8
	.ascii "PropagateResult(hrPrevious,scBase) ((HRESULT) scBase)\0"
	.byte	0x1
	.uleb128 0x7cc
	.ascii "_HRESULT_TYPEDEF_(_sc) ((HRESULT)_sc)\0"
	.byte	0x1
	.uleb128 0x7ce
	.ascii "NOERROR 0\0"
	.byte	0x1
	.uleb128 0x7cf
	.ascii "E_UNEXPECTED _HRESULT_TYPEDEF_(0x8000FFFF)\0"
	.byte	0x1
	.uleb128 0x7d0
	.ascii "E_NOTIMPL _HRESULT_TYPEDEF_(0x80004001)\0"
	.byte	0x1
	.uleb128 0x7d1
	.ascii "E_OUTOFMEMORY _HRESULT_TYPEDEF_(0x8007000E)\0"
	.byte	0x1
	.uleb128 0x7d2
	.ascii "E_INVALIDARG _HRESULT_TYPEDEF_(0x80070057)\0"
	.byte	0x1
	.uleb128 0x7d3
	.ascii "E_NOINTERFACE _HRESULT_TYPEDEF_(0x80004002)\0"
	.byte	0x1
	.uleb128 0x7d4
	.ascii "E_POINTER _HRESULT_TYPEDEF_(0x80004003)\0"
	.byte	0x1
	.uleb128 0x7d5
	.ascii "E_HANDLE _HRESULT_TYPEDEF_(0x80070006)\0"
	.byte	0x1
	.uleb128 0x7d6
	.ascii "E_ABORT _HRESULT_TYPEDEF_(0x80004004)\0"
	.byte	0x1
	.uleb128 0x7d7
	.ascii "E_FAIL _HRESULT_TYPEDEF_(0x80004005)\0"
	.byte	0x1
	.uleb128 0x7d8
	.ascii "E_ACCESSDENIED _HRESULT_TYPEDEF_(0x80070005)\0"
	.byte	0x1
	.uleb128 0x7d9
	.ascii "E_PENDING _HRESULT_TYPEDEF_(0x8000000A)\0"
	.byte	0x1
	.uleb128 0x7da
	.ascii "E_NOT_SUFFICIENT_BUFFER HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER)\0"
	.byte	0x1
	.uleb128 0x7db
	.ascii "CO_E_INIT_TLS _HRESULT_TYPEDEF_(0x80004006)\0"
	.byte	0x1
	.uleb128 0x7dc
	.ascii "CO_E_INIT_SHARED_ALLOCATOR _HRESULT_TYPEDEF_(0x80004007)\0"
	.byte	0x1
	.uleb128 0x7dd
	.ascii "CO_E_INIT_MEMORY_ALLOCATOR _HRESULT_TYPEDEF_(0x80004008)\0"
	.byte	0x1
	.uleb128 0x7de
	.ascii "CO_E_INIT_CLASS_CACHE _HRESULT_TYPEDEF_(0x80004009)\0"
	.byte	0x1
	.uleb128 0x7df
	.ascii "CO_E_INIT_RPC_CHANNEL _HRESULT_TYPEDEF_(0x8000400A)\0"
	.byte	0x1
	.uleb128 0x7e0
	.ascii "CO_E_INIT_TLS_SET_CHANNEL_CONTROL _HRESULT_TYPEDEF_(0x8000400B)\0"
	.byte	0x1
	.uleb128 0x7e1
	.ascii "CO_E_INIT_TLS_CHANNEL_CONTROL _HRESULT_TYPEDEF_(0x8000400C)\0"
	.byte	0x1
	.uleb128 0x7e2
	.ascii "CO_E_INIT_UNACCEPTED_USER_ALLOCATOR _HRESULT_TYPEDEF_(0x8000400D)\0"
	.byte	0x1
	.uleb128 0x7e3
	.ascii "CO_E_INIT_SCM_MUTEX_EXISTS _HRESULT_TYPEDEF_(0x8000400E)\0"
	.byte	0x1
	.uleb128 0x7e4
	.ascii "CO_E_INIT_SCM_FILE_MAPPING_EXISTS _HRESULT_TYPEDEF_(0x8000400F)\0"
	.byte	0x1
	.uleb128 0x7e5
	.ascii "CO_E_INIT_SCM_MAP_VIEW_OF_FILE _HRESULT_TYPEDEF_(0x80004010)\0"
	.byte	0x1
	.uleb128 0x7e6
	.ascii "CO_E_INIT_SCM_EXEC_FAILURE _HRESULT_TYPEDEF_(0x80004011)\0"
	.byte	0x1
	.uleb128 0x7e7
	.ascii "CO_E_INIT_ONLY_SINGLE_THREADED _HRESULT_TYPEDEF_(0x80004012)\0"
	.byte	0x1
	.uleb128 0x7e8
	.ascii "CO_E_CANT_REMOTE _HRESULT_TYPEDEF_(0x80004013)\0"
	.byte	0x1
	.uleb128 0x7e9
	.ascii "CO_E_BAD_SERVER_NAME _HRESULT_TYPEDEF_(0x80004014)\0"
	.byte	0x1
	.uleb128 0x7ea
	.ascii "CO_E_WRONG_SERVER_IDENTITY _HRESULT_TYPEDEF_(0x80004015)\0"
	.byte	0x1
	.uleb128 0x7eb
	.ascii "CO_E_OLE1DDE_DISABLED _HRESULT_TYPEDEF_(0x80004016)\0"
	.byte	0x1
	.uleb128 0x7ec
	.ascii "CO_E_RUNAS_SYNTAX _HRESULT_TYPEDEF_(0x80004017)\0"
	.byte	0x1
	.uleb128 0x7ed
	.ascii "CO_E_CREATEPROCESS_FAILURE _HRESULT_TYPEDEF_(0x80004018)\0"
	.byte	0x1
	.uleb128 0x7ee
	.ascii "CO_E_RUNAS_CREATEPROCESS_FAILURE _HRESULT_TYPEDEF_(0x80004019)\0"
	.byte	0x1
	.uleb128 0x7ef
	.ascii "CO_E_RUNAS_LOGON_FAILURE _HRESULT_TYPEDEF_(0x8000401A)\0"
	.byte	0x1
	.uleb128 0x7f0
	.ascii "CO_E_LAUNCH_PERMSSION_DENIED _HRESULT_TYPEDEF_(0x8000401B)\0"
	.byte	0x1
	.uleb128 0x7f1
	.ascii "CO_E_START_SERVICE_FAILURE _HRESULT_TYPEDEF_(0x8000401C)\0"
	.byte	0x1
	.uleb128 0x7f2
	.ascii "CO_E_REMOTE_COMMUNICATION_FAILURE _HRESULT_TYPEDEF_(0x8000401D)\0"
	.byte	0x1
	.uleb128 0x7f3
	.ascii "CO_E_SERVER_START_TIMEOUT _HRESULT_TYPEDEF_(0x8000401E)\0"
	.byte	0x1
	.uleb128 0x7f4
	.ascii "CO_E_CLSREG_INCONSISTENT _HRESULT_TYPEDEF_(0x8000401F)\0"
	.byte	0x1
	.uleb128 0x7f5
	.ascii "CO_E_IIDREG_INCONSISTENT _HRESULT_TYPEDEF_(0x80004020)\0"
	.byte	0x1
	.uleb128 0x7f6
	.ascii "CO_E_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80004021)\0"
	.byte	0x1
	.uleb128 0x7f7
	.ascii "CO_E_RELOAD_DLL _HRESULT_TYPEDEF_(0x80004022)\0"
	.byte	0x1
	.uleb128 0x7f8
	.ascii "CO_E_MSI_ERROR _HRESULT_TYPEDEF_(0x80004023)\0"
	.byte	0x1
	.uleb128 0x7f9
	.ascii "CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT _HRESULT_TYPEDEF_(0x80004024)\0"
	.byte	0x1
	.uleb128 0x7fa
	.ascii "CO_E_SERVER_PAUSED _HRESULT_TYPEDEF_(0x80004025)\0"
	.byte	0x1
	.uleb128 0x7fb
	.ascii "CO_E_SERVER_NOT_PAUSED _HRESULT_TYPEDEF_(0x80004026)\0"
	.byte	0x1
	.uleb128 0x7fc
	.ascii "CO_E_CLASS_DISABLED _HRESULT_TYPEDEF_(0x80004027)\0"
	.byte	0x1
	.uleb128 0x7fd
	.ascii "CO_E_CLRNOTAVAILABLE _HRESULT_TYPEDEF_(0x80004028)\0"
	.byte	0x1
	.uleb128 0x7fe
	.ascii "CO_E_ASYNC_WORK_REJECTED _HRESULT_TYPEDEF_(0x80004029)\0"
	.byte	0x1
	.uleb128 0x7ff
	.ascii "CO_E_SERVER_INIT_TIMEOUT _HRESULT_TYPEDEF_(0x8000402A)\0"
	.byte	0x1
	.uleb128 0x800
	.ascii "CO_E_NO_SECCTX_IN_ACTIVATE _HRESULT_TYPEDEF_(0x8000402B)\0"
	.byte	0x1
	.uleb128 0x801
	.ascii "CO_E_TRACKER_CONFIG _HRESULT_TYPEDEF_(0x80004030)\0"
	.byte	0x1
	.uleb128 0x802
	.ascii "CO_E_THREADPOOL_CONFIG _HRESULT_TYPEDEF_(0x80004031)\0"
	.byte	0x1
	.uleb128 0x803
	.ascii "CO_E_SXS_CONFIG _HRESULT_TYPEDEF_(0x80004032)\0"
	.byte	0x1
	.uleb128 0x804
	.ascii "CO_E_MALFORMED_SPN _HRESULT_TYPEDEF_(0x80004033)\0"
	.byte	0x1
	.uleb128 0x805
	.ascii "S_OK ((HRESULT)0x00000000)\0"
	.byte	0x1
	.uleb128 0x806
	.ascii "S_FALSE ((HRESULT)0x00000001)\0"
	.byte	0x1
	.uleb128 0x807
	.ascii "OLE_E_FIRST ((HRESULT)0x80040000)\0"
	.byte	0x1
	.uleb128 0x808
	.ascii "OLE_E_LAST ((HRESULT)0x800400FF)\0"
	.byte	0x1
	.uleb128 0x809
	.ascii "OLE_S_FIRST ((HRESULT)0x00040000)\0"
	.byte	0x1
	.uleb128 0x80a
	.ascii "OLE_S_LAST ((HRESULT)0x000400FF)\0"
	.byte	0x1
	.uleb128 0x80b
	.ascii "OLE_E_OLEVERB _HRESULT_TYPEDEF_(0x80040000)\0"
	.byte	0x1
	.uleb128 0x80c
	.ascii "OLE_E_ADVF _HRESULT_TYPEDEF_(0x80040001)\0"
	.byte	0x1
	.uleb128 0x80d
	.ascii "OLE_E_ENUM_NOMORE _HRESULT_TYPEDEF_(0x80040002)\0"
	.byte	0x1
	.uleb128 0x80e
	.ascii "OLE_E_ADVISENOTSUPPORTED _HRESULT_TYPEDEF_(0x80040003)\0"
	.byte	0x1
	.uleb128 0x80f
	.ascii "OLE_E_NOCONNECTION _HRESULT_TYPEDEF_(0x80040004)\0"
	.byte	0x1
	.uleb128 0x810
	.ascii "OLE_E_NOTRUNNING _HRESULT_TYPEDEF_(0x80040005)\0"
	.byte	0x1
	.uleb128 0x811
	.ascii "OLE_E_NOCACHE _HRESULT_TYPEDEF_(0x80040006)\0"
	.byte	0x1
	.uleb128 0x812
	.ascii "OLE_E_BLANK _HRESULT_TYPEDEF_(0x80040007)\0"
	.byte	0x1
	.uleb128 0x813
	.ascii "OLE_E_CLASSDIFF _HRESULT_TYPEDEF_(0x80040008)\0"
	.byte	0x1
	.uleb128 0x814
	.ascii "OLE_E_CANT_GETMONIKER _HRESULT_TYPEDEF_(0x80040009)\0"
	.byte	0x1
	.uleb128 0x815
	.ascii "OLE_E_CANT_BINDTOSOURCE _HRESULT_TYPEDEF_(0x8004000A)\0"
	.byte	0x1
	.uleb128 0x816
	.ascii "OLE_E_STATIC _HRESULT_TYPEDEF_(0x8004000B)\0"
	.byte	0x1
	.uleb128 0x817
	.ascii "OLE_E_PROMPTSAVECANCELLED _HRESULT_TYPEDEF_(0x8004000C)\0"
	.byte	0x1
	.uleb128 0x818
	.ascii "OLE_E_INVALIDRECT _HRESULT_TYPEDEF_(0x8004000D)\0"
	.byte	0x1
	.uleb128 0x819
	.ascii "OLE_E_WRONGCOMPOBJ _HRESULT_TYPEDEF_(0x8004000E)\0"
	.byte	0x1
	.uleb128 0x81a
	.ascii "OLE_E_INVALIDHWND _HRESULT_TYPEDEF_(0x8004000F)\0"
	.byte	0x1
	.uleb128 0x81b
	.ascii "OLE_E_NOT_INPLACEACTIVE _HRESULT_TYPEDEF_(0x80040010)\0"
	.byte	0x1
	.uleb128 0x81c
	.ascii "OLE_E_CANTCONVERT _HRESULT_TYPEDEF_(0x80040011)\0"
	.byte	0x1
	.uleb128 0x81d
	.ascii "OLE_E_NOSTORAGE _HRESULT_TYPEDEF_(0x80040012)\0"
	.byte	0x1
	.uleb128 0x81e
	.ascii "DV_E_FORMATETC _HRESULT_TYPEDEF_(0x80040064)\0"
	.byte	0x1
	.uleb128 0x81f
	.ascii "DV_E_DVTARGETDEVICE _HRESULT_TYPEDEF_(0x80040065)\0"
	.byte	0x1
	.uleb128 0x820
	.ascii "DV_E_STGMEDIUM _HRESULT_TYPEDEF_(0x80040066)\0"
	.byte	0x1
	.uleb128 0x821
	.ascii "DV_E_STATDATA _HRESULT_TYPEDEF_(0x80040067)\0"
	.byte	0x1
	.uleb128 0x822
	.ascii "DV_E_LINDEX _HRESULT_TYPEDEF_(0x80040068)\0"
	.byte	0x1
	.uleb128 0x823
	.ascii "DV_E_TYMED _HRESULT_TYPEDEF_(0x80040069)\0"
	.byte	0x1
	.uleb128 0x824
	.ascii "DV_E_CLIPFORMAT _HRESULT_TYPEDEF_(0x8004006A)\0"
	.byte	0x1
	.uleb128 0x825
	.ascii "DV_E_DVASPECT _HRESULT_TYPEDEF_(0x8004006B)\0"
	.byte	0x1
	.uleb128 0x826
	.ascii "DV_E_DVTARGETDEVICE_SIZE _HRESULT_TYPEDEF_(0x8004006C)\0"
	.byte	0x1
	.uleb128 0x827
	.ascii "DV_E_NOIVIEWOBJECT _HRESULT_TYPEDEF_(0x8004006D)\0"
	.byte	0x1
	.uleb128 0x828
	.ascii "DRAGDROP_E_FIRST __MSABI_LONG(0x80040100)\0"
	.byte	0x1
	.uleb128 0x829
	.ascii "DRAGDROP_E_LAST __MSABI_LONG(0x8004010F)\0"
	.byte	0x1
	.uleb128 0x82a
	.ascii "DRAGDROP_S_FIRST __MSABI_LONG(0x00040100)\0"
	.byte	0x1
	.uleb128 0x82b
	.ascii "DRAGDROP_S_LAST __MSABI_LONG(0x0004010F)\0"
	.byte	0x1
	.uleb128 0x82c
	.ascii "DRAGDROP_E_NOTREGISTERED _HRESULT_TYPEDEF_(0x80040100)\0"
	.byte	0x1
	.uleb128 0x82d
	.ascii "DRAGDROP_E_ALREADYREGISTERED _HRESULT_TYPEDEF_(0x80040101)\0"
	.byte	0x1
	.uleb128 0x82e
	.ascii "DRAGDROP_E_INVALIDHWND _HRESULT_TYPEDEF_(0x80040102)\0"
	.byte	0x1
	.uleb128 0x82f
	.ascii "CLASSFACTORY_E_FIRST __MSABI_LONG(0x80040110)\0"
	.byte	0x1
	.uleb128 0x830
	.ascii "CLASSFACTORY_E_LAST __MSABI_LONG(0x8004011F)\0"
	.byte	0x1
	.uleb128 0x831
	.ascii "CLASSFACTORY_S_FIRST __MSABI_LONG(0x00040110)\0"
	.byte	0x1
	.uleb128 0x832
	.ascii "CLASSFACTORY_S_LAST __MSABI_LONG(0x0004011F)\0"
	.byte	0x1
	.uleb128 0x833
	.ascii "CLASS_E_NOAGGREGATION _HRESULT_TYPEDEF_(0x80040110)\0"
	.byte	0x1
	.uleb128 0x834
	.ascii "CLASS_E_CLASSNOTAVAILABLE _HRESULT_TYPEDEF_(0x80040111)\0"
	.byte	0x1
	.uleb128 0x835
	.ascii "CLASS_E_NOTLICENSED _HRESULT_TYPEDEF_(0x80040112)\0"
	.byte	0x1
	.uleb128 0x836
	.ascii "MARSHAL_E_FIRST __MSABI_LONG(0x80040120)\0"
	.byte	0x1
	.uleb128 0x837
	.ascii "MARSHAL_E_LAST __MSABI_LONG(0x8004012F)\0"
	.byte	0x1
	.uleb128 0x838
	.ascii "MARSHAL_S_FIRST __MSABI_LONG(0x00040120)\0"
	.byte	0x1
	.uleb128 0x839
	.ascii "MARSHAL_S_LAST __MSABI_LONG(0x0004012F)\0"
	.byte	0x1
	.uleb128 0x83a
	.ascii "DATA_E_FIRST __MSABI_LONG(0x80040130)\0"
	.byte	0x1
	.uleb128 0x83b
	.ascii "DATA_E_LAST __MSABI_LONG(0x8004013F)\0"
	.byte	0x1
	.uleb128 0x83c
	.ascii "DATA_S_FIRST __MSABI_LONG(0x00040130)\0"
	.byte	0x1
	.uleb128 0x83d
	.ascii "DATA_S_LAST __MSABI_LONG(0x0004013F)\0"
	.byte	0x1
	.uleb128 0x83e
	.ascii "VIEW_E_FIRST __MSABI_LONG(0x80040140)\0"
	.byte	0x1
	.uleb128 0x83f
	.ascii "VIEW_E_LAST __MSABI_LONG(0x8004014F)\0"
	.byte	0x1
	.uleb128 0x840
	.ascii "VIEW_S_FIRST __MSABI_LONG(0x00040140)\0"
	.byte	0x1
	.uleb128 0x841
	.ascii "VIEW_S_LAST __MSABI_LONG(0x0004014F)\0"
	.byte	0x1
	.uleb128 0x842
	.ascii "VIEW_E_DRAW _HRESULT_TYPEDEF_(0x80040140)\0"
	.byte	0x1
	.uleb128 0x843
	.ascii "REGDB_E_FIRST __MSABI_LONG(0x80040150)\0"
	.byte	0x1
	.uleb128 0x844
	.ascii "REGDB_E_LAST __MSABI_LONG(0x8004015F)\0"
	.byte	0x1
	.uleb128 0x845
	.ascii "REGDB_S_FIRST __MSABI_LONG(0x00040150)\0"
	.byte	0x1
	.uleb128 0x846
	.ascii "REGDB_S_LAST __MSABI_LONG(0x0004015F)\0"
	.byte	0x1
	.uleb128 0x847
	.ascii "REGDB_E_READREGDB _HRESULT_TYPEDEF_(0x80040150)\0"
	.byte	0x1
	.uleb128 0x848
	.ascii "REGDB_E_WRITEREGDB _HRESULT_TYPEDEF_(0x80040151)\0"
	.byte	0x1
	.uleb128 0x849
	.ascii "REGDB_E_KEYMISSING _HRESULT_TYPEDEF_(0x80040152)\0"
	.byte	0x1
	.uleb128 0x84a
	.ascii "REGDB_E_INVALIDVALUE _HRESULT_TYPEDEF_(0x80040153)\0"
	.byte	0x1
	.uleb128 0x84b
	.ascii "REGDB_E_CLASSNOTREG _HRESULT_TYPEDEF_(0x80040154)\0"
	.byte	0x1
	.uleb128 0x84c
	.ascii "REGDB_E_IIDNOTREG _HRESULT_TYPEDEF_(0x80040155)\0"
	.byte	0x1
	.uleb128 0x84d
	.ascii "REGDB_E_BADTHREADINGMODEL _HRESULT_TYPEDEF_(0x80040156)\0"
	.byte	0x1
	.uleb128 0x84e
	.ascii "CAT_E_FIRST __MSABI_LONG(0x80040160)\0"
	.byte	0x1
	.uleb128 0x84f
	.ascii "CAT_E_LAST __MSABI_LONG(0x80040161)\0"
	.byte	0x1
	.uleb128 0x850
	.ascii "CAT_E_CATIDNOEXIST _HRESULT_TYPEDEF_(0x80040160)\0"
	.byte	0x1
	.uleb128 0x851
	.ascii "CAT_E_NODESCRIPTION _HRESULT_TYPEDEF_(0x80040161)\0"
	.byte	0x1
	.uleb128 0x852
	.ascii "CS_E_FIRST __MSABI_LONG(0x80040164)\0"
	.byte	0x1
	.uleb128 0x853
	.ascii "CS_E_LAST __MSABI_LONG(0x8004016F)\0"
	.byte	0x1
	.uleb128 0x854
	.ascii "CS_E_PACKAGE_NOTFOUND _HRESULT_TYPEDEF_(0x80040164)\0"
	.byte	0x1
	.uleb128 0x855
	.ascii "CS_E_NOT_DELETABLE _HRESULT_TYPEDEF_(0x80040165)\0"
	.byte	0x1
	.uleb128 0x856
	.ascii "CS_E_CLASS_NOTFOUND _HRESULT_TYPEDEF_(0x80040166)\0"
	.byte	0x1
	.uleb128 0x857
	.ascii "CS_E_INVALID_VERSION _HRESULT_TYPEDEF_(0x80040167)\0"
	.byte	0x1
	.uleb128 0x858
	.ascii "CS_E_NO_CLASSSTORE _HRESULT_TYPEDEF_(0x80040168)\0"
	.byte	0x1
	.uleb128 0x859
	.ascii "CS_E_OBJECT_NOTFOUND _HRESULT_TYPEDEF_(0x80040169)\0"
	.byte	0x1
	.uleb128 0x85a
	.ascii "CS_E_OBJECT_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x8004016A)\0"
	.byte	0x1
	.uleb128 0x85b
	.ascii "CS_E_INVALID_PATH _HRESULT_TYPEDEF_(0x8004016B)\0"
	.byte	0x1
	.uleb128 0x85c
	.ascii "CS_E_NETWORK_ERROR _HRESULT_TYPEDEF_(0x8004016C)\0"
	.byte	0x1
	.uleb128 0x85d
	.ascii "CS_E_ADMIN_LIMIT_EXCEEDED _HRESULT_TYPEDEF_(0x8004016D)\0"
	.byte	0x1
	.uleb128 0x85e
	.ascii "CS_E_SCHEMA_MISMATCH _HRESULT_TYPEDEF_(0x8004016E)\0"
	.byte	0x1
	.uleb128 0x85f
	.ascii "CS_E_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x8004016F)\0"
	.byte	0x1
	.uleb128 0x860
	.ascii "CACHE_E_FIRST __MSABI_LONG(0x80040170)\0"
	.byte	0x1
	.uleb128 0x861
	.ascii "CACHE_E_LAST __MSABI_LONG(0x8004017F)\0"
	.byte	0x1
	.uleb128 0x862
	.ascii "CACHE_S_FIRST __MSABI_LONG(0x00040170)\0"
	.byte	0x1
	.uleb128 0x863
	.ascii "CACHE_S_LAST __MSABI_LONG(0x0004017F)\0"
	.byte	0x1
	.uleb128 0x864
	.ascii "CACHE_E_NOCACHE_UPDATED _HRESULT_TYPEDEF_(0x80040170)\0"
	.byte	0x1
	.uleb128 0x865
	.ascii "OLEOBJ_E_FIRST __MSABI_LONG(0x80040180)\0"
	.byte	0x1
	.uleb128 0x866
	.ascii "OLEOBJ_E_LAST __MSABI_LONG(0x8004018F)\0"
	.byte	0x1
	.uleb128 0x867
	.ascii "OLEOBJ_S_FIRST __MSABI_LONG(0x00040180)\0"
	.byte	0x1
	.uleb128 0x868
	.ascii "OLEOBJ_S_LAST __MSABI_LONG(0x0004018F)\0"
	.byte	0x1
	.uleb128 0x869
	.ascii "OLEOBJ_E_NOVERBS _HRESULT_TYPEDEF_(0x80040180)\0"
	.byte	0x1
	.uleb128 0x86a
	.ascii "OLEOBJ_E_INVALIDVERB _HRESULT_TYPEDEF_(0x80040181)\0"
	.byte	0x1
	.uleb128 0x86b
	.ascii "CLIENTSITE_E_FIRST __MSABI_LONG(0x80040190)\0"
	.byte	0x1
	.uleb128 0x86c
	.ascii "CLIENTSITE_E_LAST __MSABI_LONG(0x8004019F)\0"
	.byte	0x1
	.uleb128 0x86d
	.ascii "CLIENTSITE_S_FIRST __MSABI_LONG(0x00040190)\0"
	.byte	0x1
	.uleb128 0x86e
	.ascii "CLIENTSITE_S_LAST __MSABI_LONG(0x0004019F)\0"
	.byte	0x1
	.uleb128 0x86f
	.ascii "INPLACE_E_NOTUNDOABLE _HRESULT_TYPEDEF_(0x800401A0)\0"
	.byte	0x1
	.uleb128 0x870
	.ascii "INPLACE_E_NOTOOLSPACE _HRESULT_TYPEDEF_(0x800401A1)\0"
	.byte	0x1
	.uleb128 0x871
	.ascii "INPLACE_E_FIRST __MSABI_LONG(0x800401A0)\0"
	.byte	0x1
	.uleb128 0x872
	.ascii "INPLACE_E_LAST __MSABI_LONG(0x800401AF)\0"
	.byte	0x1
	.uleb128 0x873
	.ascii "INPLACE_S_FIRST __MSABI_LONG(0x000401A0)\0"
	.byte	0x1
	.uleb128 0x874
	.ascii "INPLACE_S_LAST __MSABI_LONG(0x000401AF)\0"
	.byte	0x1
	.uleb128 0x875
	.ascii "ENUM_E_FIRST __MSABI_LONG(0x800401B0)\0"
	.byte	0x1
	.uleb128 0x876
	.ascii "ENUM_E_LAST __MSABI_LONG(0x800401BF)\0"
	.byte	0x1
	.uleb128 0x877
	.ascii "ENUM_S_FIRST __MSABI_LONG(0x000401B0)\0"
	.byte	0x1
	.uleb128 0x878
	.ascii "ENUM_S_LAST __MSABI_LONG(0x000401BF)\0"
	.byte	0x1
	.uleb128 0x879
	.ascii "CONVERT10_E_FIRST __MSABI_LONG(0x800401C0)\0"
	.byte	0x1
	.uleb128 0x87a
	.ascii "CONVERT10_E_LAST __MSABI_LONG(0x800401CF)\0"
	.byte	0x1
	.uleb128 0x87b
	.ascii "CONVERT10_S_FIRST __MSABI_LONG(0x000401C0)\0"
	.byte	0x1
	.uleb128 0x87c
	.ascii "CONVERT10_S_LAST __MSABI_LONG(0x000401CF)\0"
	.byte	0x1
	.uleb128 0x87d
	.ascii "CONVERT10_E_OLESTREAM_GET _HRESULT_TYPEDEF_(0x800401C0)\0"
	.byte	0x1
	.uleb128 0x87e
	.ascii "CONVERT10_E_OLESTREAM_PUT _HRESULT_TYPEDEF_(0x800401C1)\0"
	.byte	0x1
	.uleb128 0x87f
	.ascii "CONVERT10_E_OLESTREAM_FMT _HRESULT_TYPEDEF_(0x800401C2)\0"
	.byte	0x1
	.uleb128 0x880
	.ascii "CONVERT10_E_OLESTREAM_BITMAP_TO_DIB _HRESULT_TYPEDEF_(0x800401C3)\0"
	.byte	0x1
	.uleb128 0x881
	.ascii "CONVERT10_E_STG_FMT _HRESULT_TYPEDEF_(0x800401C4)\0"
	.byte	0x1
	.uleb128 0x882
	.ascii "CONVERT10_E_STG_NO_STD_STREAM _HRESULT_TYPEDEF_(0x800401C5)\0"
	.byte	0x1
	.uleb128 0x883
	.ascii "CONVERT10_E_STG_DIB_TO_BITMAP _HRESULT_TYPEDEF_(0x800401C6)\0"
	.byte	0x1
	.uleb128 0x884
	.ascii "CLIPBRD_E_FIRST __MSABI_LONG(0x800401D0)\0"
	.byte	0x1
	.uleb128 0x885
	.ascii "CLIPBRD_E_LAST __MSABI_LONG(0x800401DF)\0"
	.byte	0x1
	.uleb128 0x886
	.ascii "CLIPBRD_S_FIRST __MSABI_LONG(0x000401D0)\0"
	.byte	0x1
	.uleb128 0x887
	.ascii "CLIPBRD_S_LAST __MSABI_LONG(0x000401DF)\0"
	.byte	0x1
	.uleb128 0x888
	.ascii "CLIPBRD_E_CANT_OPEN _HRESULT_TYPEDEF_(0x800401D0)\0"
	.byte	0x1
	.uleb128 0x889
	.ascii "CLIPBRD_E_CANT_EMPTY _HRESULT_TYPEDEF_(0x800401D1)\0"
	.byte	0x1
	.uleb128 0x88a
	.ascii "CLIPBRD_E_CANT_SET _HRESULT_TYPEDEF_(0x800401D2)\0"
	.byte	0x1
	.uleb128 0x88b
	.ascii "CLIPBRD_E_BAD_DATA _HRESULT_TYPEDEF_(0x800401D3)\0"
	.byte	0x1
	.uleb128 0x88c
	.ascii "CLIPBRD_E_CANT_CLOSE _HRESULT_TYPEDEF_(0x800401D4)\0"
	.byte	0x1
	.uleb128 0x88d
	.ascii "MK_E_FIRST __MSABI_LONG(0x800401E0)\0"
	.byte	0x1
	.uleb128 0x88e
	.ascii "MK_E_LAST __MSABI_LONG(0x800401EF)\0"
	.byte	0x1
	.uleb128 0x88f
	.ascii "MK_S_FIRST __MSABI_LONG(0x000401E0)\0"
	.byte	0x1
	.uleb128 0x890
	.ascii "MK_S_LAST __MSABI_LONG(0x000401EF)\0"
	.byte	0x1
	.uleb128 0x891
	.ascii "MK_E_CONNECTMANUALLY _HRESULT_TYPEDEF_(0x800401E0)\0"
	.byte	0x1
	.uleb128 0x892
	.ascii "MK_E_EXCEEDEDDEADLINE _HRESULT_TYPEDEF_(0x800401E1)\0"
	.byte	0x1
	.uleb128 0x893
	.ascii "MK_E_NEEDGENERIC _HRESULT_TYPEDEF_(0x800401E2)\0"
	.byte	0x1
	.uleb128 0x894
	.ascii "MK_E_UNAVAILABLE _HRESULT_TYPEDEF_(0x800401E3)\0"
	.byte	0x1
	.uleb128 0x895
	.ascii "MK_E_SYNTAX _HRESULT_TYPEDEF_(0x800401E4)\0"
	.byte	0x1
	.uleb128 0x896
	.ascii "MK_E_NOOBJECT _HRESULT_TYPEDEF_(0x800401E5)\0"
	.byte	0x1
	.uleb128 0x897
	.ascii "MK_E_INVALIDEXTENSION _HRESULT_TYPEDEF_(0x800401E6)\0"
	.byte	0x1
	.uleb128 0x898
	.ascii "MK_E_INTERMEDIATEINTERFACENOTSUPPORTED _HRESULT_TYPEDEF_(0x800401E7)\0"
	.byte	0x1
	.uleb128 0x899
	.ascii "MK_E_NOTBINDABLE _HRESULT_TYPEDEF_(0x800401E8)\0"
	.byte	0x1
	.uleb128 0x89a
	.ascii "MK_E_NOTBOUND _HRESULT_TYPEDEF_(0x800401E9)\0"
	.byte	0x1
	.uleb128 0x89b
	.ascii "MK_E_CANTOPENFILE _HRESULT_TYPEDEF_(0x800401EA)\0"
	.byte	0x1
	.uleb128 0x89c
	.ascii "MK_E_MUSTBOTHERUSER _HRESULT_TYPEDEF_(0x800401EB)\0"
	.byte	0x1
	.uleb128 0x89d
	.ascii "MK_E_NOINVERSE _HRESULT_TYPEDEF_(0x800401EC)\0"
	.byte	0x1
	.uleb128 0x89e
	.ascii "MK_E_NOSTORAGE _HRESULT_TYPEDEF_(0x800401ED)\0"
	.byte	0x1
	.uleb128 0x89f
	.ascii "MK_E_NOPREFIX _HRESULT_TYPEDEF_(0x800401EE)\0"
	.byte	0x1
	.uleb128 0x8a0
	.ascii "MK_E_ENUMERATION_FAILED _HRESULT_TYPEDEF_(0x800401EF)\0"
	.byte	0x1
	.uleb128 0x8a1
	.ascii "CO_E_FIRST __MSABI_LONG(0x800401F0)\0"
	.byte	0x1
	.uleb128 0x8a2
	.ascii "CO_E_LAST __MSABI_LONG(0x800401FF)\0"
	.byte	0x1
	.uleb128 0x8a3
	.ascii "CO_S_FIRST __MSABI_LONG(0x000401F0)\0"
	.byte	0x1
	.uleb128 0x8a4
	.ascii "CO_S_LAST __MSABI_LONG(0x000401FF)\0"
	.byte	0x1
	.uleb128 0x8a5
	.ascii "CO_E_NOTINITIALIZED _HRESULT_TYPEDEF_(0x800401F0)\0"
	.byte	0x1
	.uleb128 0x8a6
	.ascii "CO_E_ALREADYINITIALIZED _HRESULT_TYPEDEF_(0x800401F1)\0"
	.byte	0x1
	.uleb128 0x8a7
	.ascii "CO_E_CANTDETERMINECLASS _HRESULT_TYPEDEF_(0x800401F2)\0"
	.byte	0x1
	.uleb128 0x8a8
	.ascii "CO_E_CLASSSTRING _HRESULT_TYPEDEF_(0x800401F3)\0"
	.byte	0x1
	.uleb128 0x8a9
	.ascii "CO_E_IIDSTRING _HRESULT_TYPEDEF_(0x800401F4)\0"
	.byte	0x1
	.uleb128 0x8aa
	.ascii "CO_E_APPNOTFOUND _HRESULT_TYPEDEF_(0x800401F5)\0"
	.byte	0x1
	.uleb128 0x8ab
	.ascii "CO_E_APPSINGLEUSE _HRESULT_TYPEDEF_(0x800401F6)\0"
	.byte	0x1
	.uleb128 0x8ac
	.ascii "CO_E_ERRORINAPP _HRESULT_TYPEDEF_(0x800401F7)\0"
	.byte	0x1
	.uleb128 0x8ad
	.ascii "CO_E_DLLNOTFOUND _HRESULT_TYPEDEF_(0x800401F8)\0"
	.byte	0x1
	.uleb128 0x8ae
	.ascii "CO_E_ERRORINDLL _HRESULT_TYPEDEF_(0x800401F9)\0"
	.byte	0x1
	.uleb128 0x8af
	.ascii "CO_E_WRONGOSFORAPP _HRESULT_TYPEDEF_(0x800401FA)\0"
	.byte	0x1
	.uleb128 0x8b0
	.ascii "CO_E_OBJNOTREG _HRESULT_TYPEDEF_(0x800401FB)\0"
	.byte	0x1
	.uleb128 0x8b1
	.ascii "CO_E_OBJISREG _HRESULT_TYPEDEF_(0x800401FC)\0"
	.byte	0x1
	.uleb128 0x8b2
	.ascii "CO_E_OBJNOTCONNECTED _HRESULT_TYPEDEF_(0x800401FD)\0"
	.byte	0x1
	.uleb128 0x8b3
	.ascii "CO_E_APPDIDNTREG _HRESULT_TYPEDEF_(0x800401FE)\0"
	.byte	0x1
	.uleb128 0x8b4
	.ascii "CO_E_RELEASED _HRESULT_TYPEDEF_(0x800401FF)\0"
	.byte	0x1
	.uleb128 0x8b5
	.ascii "EVENT_E_FIRST __MSABI_LONG(0x80040200)\0"
	.byte	0x1
	.uleb128 0x8b6
	.ascii "EVENT_E_LAST __MSABI_LONG(0x8004021F)\0"
	.byte	0x1
	.uleb128 0x8b7
	.ascii "EVENT_S_FIRST __MSABI_LONG(0x00040200)\0"
	.byte	0x1
	.uleb128 0x8b8
	.ascii "EVENT_S_LAST __MSABI_LONG(0x0004021F)\0"
	.byte	0x1
	.uleb128 0x8b9
	.ascii "EVENT_S_SOME_SUBSCRIBERS_FAILED _HRESULT_TYPEDEF_(0x00040200)\0"
	.byte	0x1
	.uleb128 0x8ba
	.ascii "EVENT_E_ALL_SUBSCRIBERS_FAILED _HRESULT_TYPEDEF_(0x80040201)\0"
	.byte	0x1
	.uleb128 0x8bb
	.ascii "EVENT_S_NOSUBSCRIBERS _HRESULT_TYPEDEF_(0x00040202)\0"
	.byte	0x1
	.uleb128 0x8bc
	.ascii "EVENT_E_QUERYSYNTAX _HRESULT_TYPEDEF_(0x80040203)\0"
	.byte	0x1
	.uleb128 0x8bd
	.ascii "EVENT_E_QUERYFIELD _HRESULT_TYPEDEF_(0x80040204)\0"
	.byte	0x1
	.uleb128 0x8be
	.ascii "EVENT_E_INTERNALEXCEPTION _HRESULT_TYPEDEF_(0x80040205)\0"
	.byte	0x1
	.uleb128 0x8bf
	.ascii "EVENT_E_INTERNALERROR _HRESULT_TYPEDEF_(0x80040206)\0"
	.byte	0x1
	.uleb128 0x8c0
	.ascii "EVENT_E_INVALID_PER_USER_SID _HRESULT_TYPEDEF_(0x80040207)\0"
	.byte	0x1
	.uleb128 0x8c1
	.ascii "EVENT_E_USER_EXCEPTION _HRESULT_TYPEDEF_(0x80040208)\0"
	.byte	0x1
	.uleb128 0x8c2
	.ascii "EVENT_E_TOO_MANY_METHODS _HRESULT_TYPEDEF_(0x80040209)\0"
	.byte	0x1
	.uleb128 0x8c3
	.ascii "EVENT_E_MISSING_EVENTCLASS _HRESULT_TYPEDEF_(0x8004020A)\0"
	.byte	0x1
	.uleb128 0x8c4
	.ascii "EVENT_E_NOT_ALL_REMOVED _HRESULT_TYPEDEF_(0x8004020B)\0"
	.byte	0x1
	.uleb128 0x8c5
	.ascii "EVENT_E_COMPLUS_NOT_INSTALLED _HRESULT_TYPEDEF_(0x8004020C)\0"
	.byte	0x1
	.uleb128 0x8c6
	.ascii "EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT _HRESULT_TYPEDEF_(0x8004020D)\0"
	.byte	0x1
	.uleb128 0x8c7
	.ascii "EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT _HRESULT_TYPEDEF_(0x8004020E)\0"
	.byte	0x1
	.uleb128 0x8c8
	.ascii "EVENT_E_INVALID_EVENT_CLASS_PARTITION _HRESULT_TYPEDEF_(0x8004020F)\0"
	.byte	0x1
	.uleb128 0x8c9
	.ascii "EVENT_E_PER_USER_SID_NOT_LOGGED_ON _HRESULT_TYPEDEF_(0x80040210)\0"
	.byte	0x1
	.uleb128 0x8ca
	.ascii "XACT_E_FIRST 0x8004D000\0"
	.byte	0x1
	.uleb128 0x8cb
	.ascii "XACT_E_LAST 0x8004D029\0"
	.byte	0x1
	.uleb128 0x8cc
	.ascii "XACT_S_FIRST 0x0004D000\0"
	.byte	0x1
	.uleb128 0x8cd
	.ascii "XACT_S_LAST 0x0004D010\0"
	.byte	0x1
	.uleb128 0x8ce
	.ascii "XACT_E_ALREADYOTHERSINGLEPHASE _HRESULT_TYPEDEF_(0x8004D000)\0"
	.byte	0x1
	.uleb128 0x8cf
	.ascii "XACT_E_CANTRETAIN _HRESULT_TYPEDEF_(0x8004D001)\0"
	.byte	0x1
	.uleb128 0x8d0
	.ascii "XACT_E_COMMITFAILED _HRESULT_TYPEDEF_(0x8004D002)\0"
	.byte	0x1
	.uleb128 0x8d1
	.ascii "XACT_E_COMMITPREVENTED _HRESULT_TYPEDEF_(0x8004D003)\0"
	.byte	0x1
	.uleb128 0x8d2
	.ascii "XACT_E_HEURISTICABORT _HRESULT_TYPEDEF_(0x8004D004)\0"
	.byte	0x1
	.uleb128 0x8d3
	.ascii "XACT_E_HEURISTICCOMMIT _HRESULT_TYPEDEF_(0x8004D005)\0"
	.byte	0x1
	.uleb128 0x8d4
	.ascii "XACT_E_HEURISTICDAMAGE _HRESULT_TYPEDEF_(0x8004D006)\0"
	.byte	0x1
	.uleb128 0x8d5
	.ascii "XACT_E_HEURISTICDANGER _HRESULT_TYPEDEF_(0x8004D007)\0"
	.byte	0x1
	.uleb128 0x8d6
	.ascii "XACT_E_ISOLATIONLEVEL _HRESULT_TYPEDEF_(0x8004D008)\0"
	.byte	0x1
	.uleb128 0x8d7
	.ascii "XACT_E_NOASYNC _HRESULT_TYPEDEF_(0x8004D009)\0"
	.byte	0x1
	.uleb128 0x8d8
	.ascii "XACT_E_NOENLIST _HRESULT_TYPEDEF_(0x8004D00A)\0"
	.byte	0x1
	.uleb128 0x8d9
	.ascii "XACT_E_NOISORETAIN _HRESULT_TYPEDEF_(0x8004D00B)\0"
	.byte	0x1
	.uleb128 0x8da
	.ascii "XACT_E_NORESOURCE _HRESULT_TYPEDEF_(0x8004D00C)\0"
	.byte	0x1
	.uleb128 0x8db
	.ascii "XACT_E_NOTCURRENT _HRESULT_TYPEDEF_(0x8004D00D)\0"
	.byte	0x1
	.uleb128 0x8dc
	.ascii "XACT_E_NOTRANSACTION _HRESULT_TYPEDEF_(0x8004D00E)\0"
	.byte	0x1
	.uleb128 0x8dd
	.ascii "XACT_E_NOTSUPPORTED _HRESULT_TYPEDEF_(0x8004D00F)\0"
	.byte	0x1
	.uleb128 0x8de
	.ascii "XACT_E_UNKNOWNRMGRID _HRESULT_TYPEDEF_(0x8004D010)\0"
	.byte	0x1
	.uleb128 0x8df
	.ascii "XACT_E_WRONGSTATE _HRESULT_TYPEDEF_(0x8004D011)\0"
	.byte	0x1
	.uleb128 0x8e0
	.ascii "XACT_E_WRONGUOW _HRESULT_TYPEDEF_(0x8004D012)\0"
	.byte	0x1
	.uleb128 0x8e1
	.ascii "XACT_E_XTIONEXISTS _HRESULT_TYPEDEF_(0x8004D013)\0"
	.byte	0x1
	.uleb128 0x8e2
	.ascii "XACT_E_NOIMPORTOBJECT _HRESULT_TYPEDEF_(0x8004D014)\0"
	.byte	0x1
	.uleb128 0x8e3
	.ascii "XACT_E_INVALIDCOOKIE _HRESULT_TYPEDEF_(0x8004D015)\0"
	.byte	0x1
	.uleb128 0x8e4
	.ascii "XACT_E_INDOUBT _HRESULT_TYPEDEF_(0x8004D016)\0"
	.byte	0x1
	.uleb128 0x8e5
	.ascii "XACT_E_NOTIMEOUT _HRESULT_TYPEDEF_(0x8004D017)\0"
	.byte	0x1
	.uleb128 0x8e6
	.ascii "XACT_E_ALREADYINPROGRESS _HRESULT_TYPEDEF_(0x8004D018)\0"
	.byte	0x1
	.uleb128 0x8e7
	.ascii "XACT_E_ABORTED _HRESULT_TYPEDEF_(0x8004D019)\0"
	.byte	0x1
	.uleb128 0x8e8
	.ascii "XACT_E_LOGFULL _HRESULT_TYPEDEF_(0x8004D01A)\0"
	.byte	0x1
	.uleb128 0x8e9
	.ascii "XACT_E_TMNOTAVAILABLE _HRESULT_TYPEDEF_(0x8004D01B)\0"
	.byte	0x1
	.uleb128 0x8ea
	.ascii "XACT_E_CONNECTION_DOWN _HRESULT_TYPEDEF_(0x8004D01C)\0"
	.byte	0x1
	.uleb128 0x8eb
	.ascii "XACT_E_CONNECTION_DENIED _HRESULT_TYPEDEF_(0x8004D01D)\0"
	.byte	0x1
	.uleb128 0x8ec
	.ascii "XACT_E_REENLISTTIMEOUT _HRESULT_TYPEDEF_(0x8004D01E)\0"
	.byte	0x1
	.uleb128 0x8ed
	.ascii "XACT_E_TIP_CONNECT_FAILED _HRESULT_TYPEDEF_(0x8004D01F)\0"
	.byte	0x1
	.uleb128 0x8ee
	.ascii "XACT_E_TIP_PROTOCOL_ERROR _HRESULT_TYPEDEF_(0x8004D020)\0"
	.byte	0x1
	.uleb128 0x8ef
	.ascii "XACT_E_TIP_PULL_FAILED _HRESULT_TYPEDEF_(0x8004D021)\0"
	.byte	0x1
	.uleb128 0x8f0
	.ascii "XACT_E_DEST_TMNOTAVAILABLE _HRESULT_TYPEDEF_(0x8004D022)\0"
	.byte	0x1
	.uleb128 0x8f1
	.ascii "XACT_E_TIP_DISABLED _HRESULT_TYPEDEF_(0x8004D023)\0"
	.byte	0x1
	.uleb128 0x8f2
	.ascii "XACT_E_NETWORK_TX_DISABLED _HRESULT_TYPEDEF_(0x8004D024)\0"
	.byte	0x1
	.uleb128 0x8f3
	.ascii "XACT_E_PARTNER_NETWORK_TX_DISABLED _HRESULT_TYPEDEF_(0x8004D025)\0"
	.byte	0x1
	.uleb128 0x8f4
	.ascii "XACT_E_XA_TX_DISABLED _HRESULT_TYPEDEF_(0x8004D026)\0"
	.byte	0x1
	.uleb128 0x8f5
	.ascii "XACT_E_UNABLE_TO_READ_DTC_CONFIG _HRESULT_TYPEDEF_(0x8004D027)\0"
	.byte	0x1
	.uleb128 0x8f6
	.ascii "XACT_E_UNABLE_TO_LOAD_DTC_PROXY _HRESULT_TYPEDEF_(0x8004D028)\0"
	.byte	0x1
	.uleb128 0x8f7
	.ascii "XACT_E_ABORTING _HRESULT_TYPEDEF_(0x8004D029)\0"
	.byte	0x1
	.uleb128 0x8f8
	.ascii "XACT_E_CLERKNOTFOUND _HRESULT_TYPEDEF_(0x8004D080)\0"
	.byte	0x1
	.uleb128 0x8f9
	.ascii "XACT_E_CLERKEXISTS _HRESULT_TYPEDEF_(0x8004D081)\0"
	.byte	0x1
	.uleb128 0x8fa
	.ascii "XACT_E_RECOVERYINPROGRESS _HRESULT_TYPEDEF_(0x8004D082)\0"
	.byte	0x1
	.uleb128 0x8fb
	.ascii "XACT_E_TRANSACTIONCLOSED _HRESULT_TYPEDEF_(0x8004D083)\0"
	.byte	0x1
	.uleb128 0x8fc
	.ascii "XACT_E_INVALIDLSN _HRESULT_TYPEDEF_(0x8004D084)\0"
	.byte	0x1
	.uleb128 0x8fd
	.ascii "XACT_E_REPLAYREQUEST _HRESULT_TYPEDEF_(0x8004D085)\0"
	.byte	0x1
	.uleb128 0x8fe
	.ascii "XACT_S_ASYNC _HRESULT_TYPEDEF_(0x0004D000)\0"
	.byte	0x1
	.uleb128 0x8ff
	.ascii "XACT_S_DEFECT _HRESULT_TYPEDEF_(0x0004D001)\0"
	.byte	0x1
	.uleb128 0x900
	.ascii "XACT_S_READONLY _HRESULT_TYPEDEF_(0x0004D002)\0"
	.byte	0x1
	.uleb128 0x901
	.ascii "XACT_S_SOMENORETAIN _HRESULT_TYPEDEF_(0x0004D003)\0"
	.byte	0x1
	.uleb128 0x902
	.ascii "XACT_S_OKINFORM _HRESULT_TYPEDEF_(0x0004D004)\0"
	.byte	0x1
	.uleb128 0x903
	.ascii "XACT_S_MADECHANGESCONTENT _HRESULT_TYPEDEF_(0x0004D005)\0"
	.byte	0x1
	.uleb128 0x904
	.ascii "XACT_S_MADECHANGESINFORM _HRESULT_TYPEDEF_(0x0004D006)\0"
	.byte	0x1
	.uleb128 0x905
	.ascii "XACT_S_ALLNORETAIN _HRESULT_TYPEDEF_(0x0004D007)\0"
	.byte	0x1
	.uleb128 0x906
	.ascii "XACT_S_ABORTING _HRESULT_TYPEDEF_(0x0004D008)\0"
	.byte	0x1
	.uleb128 0x907
	.ascii "XACT_S_SINGLEPHASE _HRESULT_TYPEDEF_(0x0004D009)\0"
	.byte	0x1
	.uleb128 0x908
	.ascii "XACT_S_LOCALLY_OK _HRESULT_TYPEDEF_(0x0004D00A)\0"
	.byte	0x1
	.uleb128 0x909
	.ascii "XACT_S_LASTRESOURCEMANAGER _HRESULT_TYPEDEF_(0x0004D010)\0"
	.byte	0x1
	.uleb128 0x90a
	.ascii "CONTEXT_E_FIRST __MSABI_LONG(0x8004E000)\0"
	.byte	0x1
	.uleb128 0x90b
	.ascii "CONTEXT_E_LAST __MSABI_LONG(0x8004E02F)\0"
	.byte	0x1
	.uleb128 0x90c
	.ascii "CONTEXT_S_FIRST __MSABI_LONG(0x0004E000)\0"
	.byte	0x1
	.uleb128 0x90d
	.ascii "CONTEXT_S_LAST __MSABI_LONG(0x0004E02F)\0"
	.byte	0x1
	.uleb128 0x90e
	.ascii "CONTEXT_E_ABORTED _HRESULT_TYPEDEF_(0x8004E002)\0"
	.byte	0x1
	.uleb128 0x90f
	.ascii "CONTEXT_E_ABORTING _HRESULT_TYPEDEF_(0x8004E003)\0"
	.byte	0x1
	.uleb128 0x910
	.ascii "CONTEXT_E_NOCONTEXT _HRESULT_TYPEDEF_(0x8004E004)\0"
	.byte	0x1
	.uleb128 0x911
	.ascii "CONTEXT_E_WOULD_DEADLOCK _HRESULT_TYPEDEF_(0x8004E005)\0"
	.byte	0x1
	.uleb128 0x912
	.ascii "CONTEXT_E_SYNCH_TIMEOUT _HRESULT_TYPEDEF_(0x8004E006)\0"
	.byte	0x1
	.uleb128 0x913
	.ascii "CONTEXT_E_OLDREF _HRESULT_TYPEDEF_(0x8004E007)\0"
	.byte	0x1
	.uleb128 0x914
	.ascii "CONTEXT_E_ROLENOTFOUND _HRESULT_TYPEDEF_(0x8004E00C)\0"
	.byte	0x1
	.uleb128 0x915
	.ascii "CONTEXT_E_TMNOTAVAILABLE _HRESULT_TYPEDEF_(0x8004E00F)\0"
	.byte	0x1
	.uleb128 0x916
	.ascii "CO_E_ACTIVATIONFAILED _HRESULT_TYPEDEF_(0x8004E021)\0"
	.byte	0x1
	.uleb128 0x917
	.ascii "CO_E_ACTIVATIONFAILED_EVENTLOGGED _HRESULT_TYPEDEF_(0x8004E022)\0"
	.byte	0x1
	.uleb128 0x918
	.ascii "CO_E_ACTIVATIONFAILED_CATALOGERROR _HRESULT_TYPEDEF_(0x8004E023)\0"
	.byte	0x1
	.uleb128 0x919
	.ascii "CO_E_ACTIVATIONFAILED_TIMEOUT _HRESULT_TYPEDEF_(0x8004E024)\0"
	.byte	0x1
	.uleb128 0x91a
	.ascii "CO_E_INITIALIZATIONFAILED _HRESULT_TYPEDEF_(0x8004E025)\0"
	.byte	0x1
	.uleb128 0x91b
	.ascii "CONTEXT_E_NOJIT _HRESULT_TYPEDEF_(0x8004E026)\0"
	.byte	0x1
	.uleb128 0x91c
	.ascii "CONTEXT_E_NOTRANSACTION _HRESULT_TYPEDEF_(0x8004E027)\0"
	.byte	0x1
	.uleb128 0x91d
	.ascii "CO_E_THREADINGMODEL_CHANGED _HRESULT_TYPEDEF_(0x8004E028)\0"
	.byte	0x1
	.uleb128 0x91e
	.ascii "CO_E_NOIISINTRINSICS _HRESULT_TYPEDEF_(0x8004E029)\0"
	.byte	0x1
	.uleb128 0x91f
	.ascii "CO_E_NOCOOKIES _HRESULT_TYPEDEF_(0x8004E02A)\0"
	.byte	0x1
	.uleb128 0x920
	.ascii "CO_E_DBERROR _HRESULT_TYPEDEF_(0x8004E02B)\0"
	.byte	0x1
	.uleb128 0x921
	.ascii "CO_E_NOTPOOLED _HRESULT_TYPEDEF_(0x8004E02C)\0"
	.byte	0x1
	.uleb128 0x922
	.ascii "CO_E_NOTCONSTRUCTED _HRESULT_TYPEDEF_(0x8004E02D)\0"
	.byte	0x1
	.uleb128 0x923
	.ascii "CO_E_NOSYNCHRONIZATION _HRESULT_TYPEDEF_(0x8004E02E)\0"
	.byte	0x1
	.uleb128 0x924
	.ascii "CO_E_ISOLEVELMISMATCH _HRESULT_TYPEDEF_(0x8004E02F)\0"
	.byte	0x1
	.uleb128 0x925
	.ascii "OLE_S_USEREG _HRESULT_TYPEDEF_(0x00040000)\0"
	.byte	0x1
	.uleb128 0x926
	.ascii "OLE_S_STATIC _HRESULT_TYPEDEF_(0x00040001)\0"
	.byte	0x1
	.uleb128 0x927
	.ascii "OLE_S_MAC_CLIPFORMAT _HRESULT_TYPEDEF_(0x00040002)\0"
	.byte	0x1
	.uleb128 0x928
	.ascii "DRAGDROP_S_DROP _HRESULT_TYPEDEF_(0x00040100)\0"
	.byte	0x1
	.uleb128 0x929
	.ascii "DRAGDROP_S_CANCEL _HRESULT_TYPEDEF_(0x00040101)\0"
	.byte	0x1
	.uleb128 0x92a
	.ascii "DRAGDROP_S_USEDEFAULTCURSORS _HRESULT_TYPEDEF_(0x00040102)\0"
	.byte	0x1
	.uleb128 0x92b
	.ascii "DATA_S_SAMEFORMATETC _HRESULT_TYPEDEF_(0x00040130)\0"
	.byte	0x1
	.uleb128 0x92c
	.ascii "VIEW_S_ALREADY_FROZEN _HRESULT_TYPEDEF_(0x00040140)\0"
	.byte	0x1
	.uleb128 0x92d
	.ascii "CACHE_S_FORMATETC_NOTSUPPORTED _HRESULT_TYPEDEF_(0x00040170)\0"
	.byte	0x1
	.uleb128 0x92e
	.ascii "CACHE_S_SAMECACHE _HRESULT_TYPEDEF_(0x00040171)\0"
	.byte	0x1
	.uleb128 0x92f
	.ascii "CACHE_S_SOMECACHES_NOTUPDATED _HRESULT_TYPEDEF_(0x00040172)\0"
	.byte	0x1
	.uleb128 0x930
	.ascii "OLEOBJ_S_INVALIDVERB _HRESULT_TYPEDEF_(0x00040180)\0"
	.byte	0x1
	.uleb128 0x931
	.ascii "OLEOBJ_S_CANNOT_DOVERB_NOW _HRESULT_TYPEDEF_(0x00040181)\0"
	.byte	0x1
	.uleb128 0x932
	.ascii "OLEOBJ_S_INVALIDHWND _HRESULT_TYPEDEF_(0x00040182)\0"
	.byte	0x1
	.uleb128 0x933
	.ascii "INPLACE_S_TRUNCATED _HRESULT_TYPEDEF_(0x000401A0)\0"
	.byte	0x1
	.uleb128 0x934
	.ascii "CONVERT10_S_NO_PRESENTATION _HRESULT_TYPEDEF_(0x000401C0)\0"
	.byte	0x1
	.uleb128 0x935
	.ascii "MK_S_REDUCED_TO_SELF _HRESULT_TYPEDEF_(0x000401E2)\0"
	.byte	0x1
	.uleb128 0x936
	.ascii "MK_S_ME _HRESULT_TYPEDEF_(0x000401E4)\0"
	.byte	0x1
	.uleb128 0x937
	.ascii "MK_S_HIM _HRESULT_TYPEDEF_(0x000401E5)\0"
	.byte	0x1
	.uleb128 0x938
	.ascii "MK_S_US _HRESULT_TYPEDEF_(0x000401E6)\0"
	.byte	0x1
	.uleb128 0x939
	.ascii "MK_S_MONIKERALREADYREGISTERED _HRESULT_TYPEDEF_(0x000401E7)\0"
	.byte	0x1
	.uleb128 0x93a
	.ascii "SCHED_S_TASK_READY _HRESULT_TYPEDEF_(0x00041300)\0"
	.byte	0x1
	.uleb128 0x93b
	.ascii "SCHED_S_TASK_RUNNING _HRESULT_TYPEDEF_(0x00041301)\0"
	.byte	0x1
	.uleb128 0x93c
	.ascii "SCHED_S_TASK_DISABLED _HRESULT_TYPEDEF_(0x00041302)\0"
	.byte	0x1
	.uleb128 0x93d
	.ascii "SCHED_S_TASK_HAS_NOT_RUN _HRESULT_TYPEDEF_(0x00041303)\0"
	.byte	0x1
	.uleb128 0x93e
	.ascii "SCHED_S_TASK_NO_MORE_RUNS _HRESULT_TYPEDEF_(0x00041304)\0"
	.byte	0x1
	.uleb128 0x93f
	.ascii "SCHED_S_TASK_NOT_SCHEDULED _HRESULT_TYPEDEF_(0x00041305)\0"
	.byte	0x1
	.uleb128 0x940
	.ascii "SCHED_S_TASK_TERMINATED _HRESULT_TYPEDEF_(0x00041306)\0"
	.byte	0x1
	.uleb128 0x941
	.ascii "SCHED_S_TASK_NO_VALID_TRIGGERS _HRESULT_TYPEDEF_(0x00041307)\0"
	.byte	0x1
	.uleb128 0x942
	.ascii "SCHED_S_EVENT_TRIGGER _HRESULT_TYPEDEF_(0x00041308)\0"
	.byte	0x1
	.uleb128 0x943
	.ascii "SCHED_E_TRIGGER_NOT_FOUND _HRESULT_TYPEDEF_(0x80041309)\0"
	.byte	0x1
	.uleb128 0x944
	.ascii "SCHED_E_TASK_NOT_READY _HRESULT_TYPEDEF_(0x8004130A)\0"
	.byte	0x1
	.uleb128 0x945
	.ascii "SCHED_E_TASK_NOT_RUNNING _HRESULT_TYPEDEF_(0x8004130B)\0"
	.byte	0x1
	.uleb128 0x946
	.ascii "SCHED_E_SERVICE_NOT_INSTALLED _HRESULT_TYPEDEF_(0x8004130C)\0"
	.byte	0x1
	.uleb128 0x947
	.ascii "SCHED_E_CANNOT_OPEN_TASK _HRESULT_TYPEDEF_(0x8004130D)\0"
	.byte	0x1
	.uleb128 0x948
	.ascii "SCHED_E_INVALID_TASK _HRESULT_TYPEDEF_(0x8004130E)\0"
	.byte	0x1
	.uleb128 0x949
	.ascii "SCHED_E_ACCOUNT_INFORMATION_NOT_SET _HRESULT_TYPEDEF_(0x8004130F)\0"
	.byte	0x1
	.uleb128 0x94a
	.ascii "SCHED_E_ACCOUNT_NAME_NOT_FOUND _HRESULT_TYPEDEF_(0x80041310)\0"
	.byte	0x1
	.uleb128 0x94b
	.ascii "SCHED_E_ACCOUNT_DBASE_CORRUPT _HRESULT_TYPEDEF_(0x80041311)\0"
	.byte	0x1
	.uleb128 0x94c
	.ascii "SCHED_E_NO_SECURITY_SERVICES _HRESULT_TYPEDEF_(0x80041312)\0"
	.byte	0x1
	.uleb128 0x94d
	.ascii "SCHED_E_UNKNOWN_OBJECT_VERSION _HRESULT_TYPEDEF_(0x80041313)\0"
	.byte	0x1
	.uleb128 0x94e
	.ascii "SCHED_E_UNSUPPORTED_ACCOUNT_OPTION _HRESULT_TYPEDEF_(0x80041314)\0"
	.byte	0x1
	.uleb128 0x94f
	.ascii "SCHED_E_SERVICE_NOT_RUNNING _HRESULT_TYPEDEF_(0x80041315)\0"
	.byte	0x1
	.uleb128 0x950
	.ascii "CO_E_CLASS_CREATE_FAILED _HRESULT_TYPEDEF_(0x80080001)\0"
	.byte	0x1
	.uleb128 0x951
	.ascii "CO_E_SCM_ERROR _HRESULT_TYPEDEF_(0x80080002)\0"
	.byte	0x1
	.uleb128 0x952
	.ascii "CO_E_SCM_RPC_FAILURE _HRESULT_TYPEDEF_(0x80080003)\0"
	.byte	0x1
	.uleb128 0x953
	.ascii "CO_E_BAD_PATH _HRESULT_TYPEDEF_(0x80080004)\0"
	.byte	0x1
	.uleb128 0x954
	.ascii "CO_E_SERVER_EXEC_FAILURE _HRESULT_TYPEDEF_(0x80080005)\0"
	.byte	0x1
	.uleb128 0x955
	.ascii "CO_E_OBJSRV_RPC_FAILURE _HRESULT_TYPEDEF_(0x80080006)\0"
	.byte	0x1
	.uleb128 0x956
	.ascii "MK_E_NO_NORMALIZED _HRESULT_TYPEDEF_(0x80080007)\0"
	.byte	0x1
	.uleb128 0x957
	.ascii "CO_E_SERVER_STOPPING _HRESULT_TYPEDEF_(0x80080008)\0"
	.byte	0x1
	.uleb128 0x958
	.ascii "MEM_E_INVALID_ROOT _HRESULT_TYPEDEF_(0x80080009)\0"
	.byte	0x1
	.uleb128 0x959
	.ascii "MEM_E_INVALID_LINK _HRESULT_TYPEDEF_(0x80080010)\0"
	.byte	0x1
	.uleb128 0x95a
	.ascii "MEM_E_INVALID_SIZE _HRESULT_TYPEDEF_(0x80080011)\0"
	.byte	0x1
	.uleb128 0x95b
	.ascii "CO_S_NOTALLINTERFACES _HRESULT_TYPEDEF_(0x00080012)\0"
	.byte	0x1
	.uleb128 0x95c
	.ascii "CO_S_MACHINENAMENOTFOUND _HRESULT_TYPEDEF_(0x00080013)\0"
	.byte	0x1
	.uleb128 0x95d
	.ascii "DISP_E_UNKNOWNINTERFACE _HRESULT_TYPEDEF_(0x80020001)\0"
	.byte	0x1
	.uleb128 0x95e
	.ascii "DISP_E_MEMBERNOTFOUND _HRESULT_TYPEDEF_(0x80020003)\0"
	.byte	0x1
	.uleb128 0x95f
	.ascii "DISP_E_PARAMNOTFOUND _HRESULT_TYPEDEF_(0x80020004)\0"
	.byte	0x1
	.uleb128 0x960
	.ascii "DISP_E_TYPEMISMATCH _HRESULT_TYPEDEF_(0x80020005)\0"
	.byte	0x1
	.uleb128 0x961
	.ascii "DISP_E_UNKNOWNNAME _HRESULT_TYPEDEF_(0x80020006)\0"
	.byte	0x1
	.uleb128 0x962
	.ascii "DISP_E_NONAMEDARGS _HRESULT_TYPEDEF_(0x80020007)\0"
	.byte	0x1
	.uleb128 0x963
	.ascii "DISP_E_BADVARTYPE _HRESULT_TYPEDEF_(0x80020008)\0"
	.byte	0x1
	.uleb128 0x964
	.ascii "DISP_E_EXCEPTION _HRESULT_TYPEDEF_(0x80020009)\0"
	.byte	0x1
	.uleb128 0x965
	.ascii "DISP_E_OVERFLOW _HRESULT_TYPEDEF_(0x8002000A)\0"
	.byte	0x1
	.uleb128 0x966
	.ascii "DISP_E_BADINDEX _HRESULT_TYPEDEF_(0x8002000B)\0"
	.byte	0x1
	.uleb128 0x967
	.ascii "DISP_E_UNKNOWNLCID _HRESULT_TYPEDEF_(0x8002000C)\0"
	.byte	0x1
	.uleb128 0x968
	.ascii "DISP_E_ARRAYISLOCKED _HRESULT_TYPEDEF_(0x8002000D)\0"
	.byte	0x1
	.uleb128 0x969
	.ascii "DISP_E_BADPARAMCOUNT _HRESULT_TYPEDEF_(0x8002000E)\0"
	.byte	0x1
	.uleb128 0x96a
	.ascii "DISP_E_PARAMNOTOPTIONAL _HRESULT_TYPEDEF_(0x8002000F)\0"
	.byte	0x1
	.uleb128 0x96b
	.ascii "DISP_E_BADCALLEE _HRESULT_TYPEDEF_(0x80020010)\0"
	.byte	0x1
	.uleb128 0x96c
	.ascii "DISP_E_NOTACOLLECTION _HRESULT_TYPEDEF_(0x80020011)\0"
	.byte	0x1
	.uleb128 0x96d
	.ascii "DISP_E_DIVBYZERO _HRESULT_TYPEDEF_(0x80020012)\0"
	.byte	0x1
	.uleb128 0x96e
	.ascii "DISP_E_BUFFERTOOSMALL _HRESULT_TYPEDEF_(0x80020013)\0"
	.byte	0x1
	.uleb128 0x96f
	.ascii "TYPE_E_BUFFERTOOSMALL _HRESULT_TYPEDEF_(0x80028016)\0"
	.byte	0x1
	.uleb128 0x970
	.ascii "TYPE_E_FIELDNOTFOUND _HRESULT_TYPEDEF_(0x80028017)\0"
	.byte	0x1
	.uleb128 0x971
	.ascii "TYPE_E_INVDATAREAD _HRESULT_TYPEDEF_(0x80028018)\0"
	.byte	0x1
	.uleb128 0x972
	.ascii "TYPE_E_UNSUPFORMAT _HRESULT_TYPEDEF_(0x80028019)\0"
	.byte	0x1
	.uleb128 0x973
	.ascii "TYPE_E_REGISTRYACCESS _HRESULT_TYPEDEF_(0x8002801C)\0"
	.byte	0x1
	.uleb128 0x974
	.ascii "TYPE_E_LIBNOTREGISTERED _HRESULT_TYPEDEF_(0x8002801D)\0"
	.byte	0x1
	.uleb128 0x975
	.ascii "TYPE_E_UNDEFINEDTYPE _HRESULT_TYPEDEF_(0x80028027)\0"
	.byte	0x1
	.uleb128 0x976
	.ascii "TYPE_E_QUALIFIEDNAMEDISALLOWED _HRESULT_TYPEDEF_(0x80028028)\0"
	.byte	0x1
	.uleb128 0x977
	.ascii "TYPE_E_INVALIDSTATE _HRESULT_TYPEDEF_(0x80028029)\0"
	.byte	0x1
	.uleb128 0x978
	.ascii "TYPE_E_WRONGTYPEKIND _HRESULT_TYPEDEF_(0x8002802A)\0"
	.byte	0x1
	.uleb128 0x979
	.ascii "TYPE_E_ELEMENTNOTFOUND _HRESULT_TYPEDEF_(0x8002802B)\0"
	.byte	0x1
	.uleb128 0x97a
	.ascii "TYPE_E_AMBIGUOUSNAME _HRESULT_TYPEDEF_(0x8002802C)\0"
	.byte	0x1
	.uleb128 0x97b
	.ascii "TYPE_E_NAMECONFLICT _HRESULT_TYPEDEF_(0x8002802D)\0"
	.byte	0x1
	.uleb128 0x97c
	.ascii "TYPE_E_UNKNOWNLCID _HRESULT_TYPEDEF_(0x8002802E)\0"
	.byte	0x1
	.uleb128 0x97d
	.ascii "TYPE_E_DLLFUNCTIONNOTFOUND _HRESULT_TYPEDEF_(0x8002802F)\0"
	.byte	0x1
	.uleb128 0x97e
	.ascii "TYPE_E_BADMODULEKIND _HRESULT_TYPEDEF_(0x800288BD)\0"
	.byte	0x1
	.uleb128 0x97f
	.ascii "TYPE_E_SIZETOOBIG _HRESULT_TYPEDEF_(0x800288C5)\0"
	.byte	0x1
	.uleb128 0x980
	.ascii "TYPE_E_DUPLICATEID _HRESULT_TYPEDEF_(0x800288C6)\0"
	.byte	0x1
	.uleb128 0x981
	.ascii "TYPE_E_INVALIDID _HRESULT_TYPEDEF_(0x800288CF)\0"
	.byte	0x1
	.uleb128 0x982
	.ascii "TYPE_E_TYPEMISMATCH _HRESULT_TYPEDEF_(0x80028CA0)\0"
	.byte	0x1
	.uleb128 0x983
	.ascii "TYPE_E_OUTOFBOUNDS _HRESULT_TYPEDEF_(0x80028CA1)\0"
	.byte	0x1
	.uleb128 0x984
	.ascii "TYPE_E_IOERROR _HRESULT_TYPEDEF_(0x80028CA2)\0"
	.byte	0x1
	.uleb128 0x985
	.ascii "TYPE_E_CANTCREATETMPFILE _HRESULT_TYPEDEF_(0x80028CA3)\0"
	.byte	0x1
	.uleb128 0x986
	.ascii "TYPE_E_CANTLOADLIBRARY _HRESULT_TYPEDEF_(0x80029C4A)\0"
	.byte	0x1
	.uleb128 0x987
	.ascii "TYPE_E_INCONSISTENTPROPFUNCS _HRESULT_TYPEDEF_(0x80029C83)\0"
	.byte	0x1
	.uleb128 0x988
	.ascii "TYPE_E_CIRCULARTYPE _HRESULT_TYPEDEF_(0x80029C84)\0"
	.byte	0x1
	.uleb128 0x989
	.ascii "STG_E_INVALIDFUNCTION _HRESULT_TYPEDEF_(0x80030001)\0"
	.byte	0x1
	.uleb128 0x98a
	.ascii "STG_E_FILENOTFOUND _HRESULT_TYPEDEF_(0x80030002)\0"
	.byte	0x1
	.uleb128 0x98b
	.ascii "STG_E_PATHNOTFOUND _HRESULT_TYPEDEF_(0x80030003)\0"
	.byte	0x1
	.uleb128 0x98c
	.ascii "STG_E_TOOMANYOPENFILES _HRESULT_TYPEDEF_(0x80030004)\0"
	.byte	0x1
	.uleb128 0x98d
	.ascii "STG_E_ACCESSDENIED _HRESULT_TYPEDEF_(0x80030005)\0"
	.byte	0x1
	.uleb128 0x98e
	.ascii "STG_E_INVALIDHANDLE _HRESULT_TYPEDEF_(0x80030006)\0"
	.byte	0x1
	.uleb128 0x98f
	.ascii "STG_E_INSUFFICIENTMEMORY _HRESULT_TYPEDEF_(0x80030008)\0"
	.byte	0x1
	.uleb128 0x990
	.ascii "STG_E_INVALIDPOINTER _HRESULT_TYPEDEF_(0x80030009)\0"
	.byte	0x1
	.uleb128 0x991
	.ascii "STG_E_NOMOREFILES _HRESULT_TYPEDEF_(0x80030012)\0"
	.byte	0x1
	.uleb128 0x992
	.ascii "STG_E_DISKISWRITEPROTECTED _HRESULT_TYPEDEF_(0x80030013)\0"
	.byte	0x1
	.uleb128 0x993
	.ascii "STG_E_SEEKERROR _HRESULT_TYPEDEF_(0x80030019)\0"
	.byte	0x1
	.uleb128 0x994
	.ascii "STG_E_WRITEFAULT _HRESULT_TYPEDEF_(0x8003001D)\0"
	.byte	0x1
	.uleb128 0x995
	.ascii "STG_E_READFAULT _HRESULT_TYPEDEF_(0x8003001E)\0"
	.byte	0x1
	.uleb128 0x996
	.ascii "STG_E_SHAREVIOLATION _HRESULT_TYPEDEF_(0x80030020)\0"
	.byte	0x1
	.uleb128 0x997
	.ascii "STG_E_LOCKVIOLATION _HRESULT_TYPEDEF_(0x80030021)\0"
	.byte	0x1
	.uleb128 0x998
	.ascii "STG_E_FILEALREADYEXISTS _HRESULT_TYPEDEF_(0x80030050)\0"
	.byte	0x1
	.uleb128 0x999
	.ascii "STG_E_INVALIDPARAMETER _HRESULT_TYPEDEF_(0x80030057)\0"
	.byte	0x1
	.uleb128 0x99a
	.ascii "STG_E_MEDIUMFULL _HRESULT_TYPEDEF_(0x80030070)\0"
	.byte	0x1
	.uleb128 0x99b
	.ascii "STG_E_PROPSETMISMATCHED _HRESULT_TYPEDEF_(0x800300F0)\0"
	.byte	0x1
	.uleb128 0x99c
	.ascii "STG_E_ABNORMALAPIEXIT _HRESULT_TYPEDEF_(0x800300FA)\0"
	.byte	0x1
	.uleb128 0x99d
	.ascii "STG_E_INVALIDHEADER _HRESULT_TYPEDEF_(0x800300FB)\0"
	.byte	0x1
	.uleb128 0x99e
	.ascii "STG_E_INVALIDNAME _HRESULT_TYPEDEF_(0x800300FC)\0"
	.byte	0x1
	.uleb128 0x99f
	.ascii "STG_E_UNKNOWN _HRESULT_TYPEDEF_(0x800300FD)\0"
	.byte	0x1
	.uleb128 0x9a0
	.ascii "STG_E_UNIMPLEMENTEDFUNCTION _HRESULT_TYPEDEF_(0x800300FE)\0"
	.byte	0x1
	.uleb128 0x9a1
	.ascii "STG_E_INVALIDFLAG _HRESULT_TYPEDEF_(0x800300FF)\0"
	.byte	0x1
	.uleb128 0x9a2
	.ascii "STG_E_INUSE _HRESULT_TYPEDEF_(0x80030100)\0"
	.byte	0x1
	.uleb128 0x9a3
	.ascii "STG_E_NOTCURRENT _HRESULT_TYPEDEF_(0x80030101)\0"
	.byte	0x1
	.uleb128 0x9a4
	.ascii "STG_E_REVERTED _HRESULT_TYPEDEF_(0x80030102)\0"
	.byte	0x1
	.uleb128 0x9a5
	.ascii "STG_E_CANTSAVE _HRESULT_TYPEDEF_(0x80030103)\0"
	.byte	0x1
	.uleb128 0x9a6
	.ascii "STG_E_OLDFORMAT _HRESULT_TYPEDEF_(0x80030104)\0"
	.byte	0x1
	.uleb128 0x9a7
	.ascii "STG_E_OLDDLL _HRESULT_TYPEDEF_(0x80030105)\0"
	.byte	0x1
	.uleb128 0x9a8
	.ascii "STG_E_SHAREREQUIRED _HRESULT_TYPEDEF_(0x80030106)\0"
	.byte	0x1
	.uleb128 0x9a9
	.ascii "STG_E_NOTFILEBASEDSTORAGE _HRESULT_TYPEDEF_(0x80030107)\0"
	.byte	0x1
	.uleb128 0x9aa
	.ascii "STG_E_EXTANTMARSHALLINGS _HRESULT_TYPEDEF_(0x80030108)\0"
	.byte	0x1
	.uleb128 0x9ab
	.ascii "STG_E_DOCFILECORRUPT _HRESULT_TYPEDEF_(0x80030109)\0"
	.byte	0x1
	.uleb128 0x9ac
	.ascii "STG_E_BADBASEADDRESS _HRESULT_TYPEDEF_(0x80030110)\0"
	.byte	0x1
	.uleb128 0x9ad
	.ascii "STG_E_DOCFILETOOLARGE _HRESULT_TYPEDEF_(0x80030111)\0"
	.byte	0x1
	.uleb128 0x9ae
	.ascii "STG_E_NOTSIMPLEFORMAT _HRESULT_TYPEDEF_(0x80030112)\0"
	.byte	0x1
	.uleb128 0x9af
	.ascii "STG_E_INCOMPLETE _HRESULT_TYPEDEF_(0x80030201)\0"
	.byte	0x1
	.uleb128 0x9b0
	.ascii "STG_E_TERMINATED _HRESULT_TYPEDEF_(0x80030202)\0"
	.byte	0x1
	.uleb128 0x9b1
	.ascii "STG_S_CONVERTED _HRESULT_TYPEDEF_(0x00030200)\0"
	.byte	0x1
	.uleb128 0x9b2
	.ascii "STG_S_BLOCK _HRESULT_TYPEDEF_(0x00030201)\0"
	.byte	0x1
	.uleb128 0x9b3
	.ascii "STG_S_RETRYNOW _HRESULT_TYPEDEF_(0x00030202)\0"
	.byte	0x1
	.uleb128 0x9b4
	.ascii "STG_S_MONITORING _HRESULT_TYPEDEF_(0x00030203)\0"
	.byte	0x1
	.uleb128 0x9b5
	.ascii "STG_S_MULTIPLEOPENS _HRESULT_TYPEDEF_(0x00030204)\0"
	.byte	0x1
	.uleb128 0x9b6
	.ascii "STG_S_CONSOLIDATIONFAILED _HRESULT_TYPEDEF_(0x00030205)\0"
	.byte	0x1
	.uleb128 0x9b7
	.ascii "STG_S_CANNOTCONSOLIDATE _HRESULT_TYPEDEF_(0x00030206)\0"
	.byte	0x1
	.uleb128 0x9b8
	.ascii "STG_E_STATUS_COPY_PROTECTION_FAILURE _HRESULT_TYPEDEF_(0x80030305)\0"
	.byte	0x1
	.uleb128 0x9b9
	.ascii "STG_E_CSS_AUTHENTICATION_FAILURE _HRESULT_TYPEDEF_(0x80030306)\0"
	.byte	0x1
	.uleb128 0x9ba
	.ascii "STG_E_CSS_KEY_NOT_PRESENT _HRESULT_TYPEDEF_(0x80030307)\0"
	.byte	0x1
	.uleb128 0x9bb
	.ascii "STG_E_CSS_KEY_NOT_ESTABLISHED _HRESULT_TYPEDEF_(0x80030308)\0"
	.byte	0x1
	.uleb128 0x9bc
	.ascii "STG_E_CSS_SCRAMBLED_SECTOR _HRESULT_TYPEDEF_(0x80030309)\0"
	.byte	0x1
	.uleb128 0x9bd
	.ascii "STG_E_CSS_REGION_MISMATCH _HRESULT_TYPEDEF_(0x8003030A)\0"
	.byte	0x1
	.uleb128 0x9be
	.ascii "STG_E_RESETS_EXHAUSTED _HRESULT_TYPEDEF_(0x8003030B)\0"
	.byte	0x1
	.uleb128 0x9bf
	.ascii "RPC_E_CALL_REJECTED _HRESULT_TYPEDEF_(0x80010001)\0"
	.byte	0x1
	.uleb128 0x9c0
	.ascii "RPC_E_CALL_CANCELED _HRESULT_TYPEDEF_(0x80010002)\0"
	.byte	0x1
	.uleb128 0x9c1
	.ascii "RPC_E_CANTPOST_INSENDCALL _HRESULT_TYPEDEF_(0x80010003)\0"
	.byte	0x1
	.uleb128 0x9c2
	.ascii "RPC_E_CANTCALLOUT_INASYNCCALL _HRESULT_TYPEDEF_(0x80010004)\0"
	.byte	0x1
	.uleb128 0x9c3
	.ascii "RPC_E_CANTCALLOUT_INEXTERNALCALL _HRESULT_TYPEDEF_(0x80010005)\0"
	.byte	0x1
	.uleb128 0x9c4
	.ascii "RPC_E_CONNECTION_TERMINATED _HRESULT_TYPEDEF_(0x80010006)\0"
	.byte	0x1
	.uleb128 0x9c5
	.ascii "RPC_E_SERVER_DIED _HRESULT_TYPEDEF_(0x80010007)\0"
	.byte	0x1
	.uleb128 0x9c6
	.ascii "RPC_E_CLIENT_DIED _HRESULT_TYPEDEF_(0x80010008)\0"
	.byte	0x1
	.uleb128 0x9c7
	.ascii "RPC_E_INVALID_DATAPACKET _HRESULT_TYPEDEF_(0x80010009)\0"
	.byte	0x1
	.uleb128 0x9c8
	.ascii "RPC_E_CANTTRANSMIT_CALL _HRESULT_TYPEDEF_(0x8001000A)\0"
	.byte	0x1
	.uleb128 0x9c9
	.ascii "RPC_E_CLIENT_CANTMARSHAL_DATA _HRESULT_TYPEDEF_(0x8001000B)\0"
	.byte	0x1
	.uleb128 0x9ca
	.ascii "RPC_E_CLIENT_CANTUNMARSHAL_DATA _HRESULT_TYPEDEF_(0x8001000C)\0"
	.byte	0x1
	.uleb128 0x9cb
	.ascii "RPC_E_SERVER_CANTMARSHAL_DATA _HRESULT_TYPEDEF_(0x8001000D)\0"
	.byte	0x1
	.uleb128 0x9cc
	.ascii "RPC_E_SERVER_CANTUNMARSHAL_DATA _HRESULT_TYPEDEF_(0x8001000E)\0"
	.byte	0x1
	.uleb128 0x9cd
	.ascii "RPC_E_INVALID_DATA _HRESULT_TYPEDEF_(0x8001000F)\0"
	.byte	0x1
	.uleb128 0x9ce
	.ascii "RPC_E_INVALID_PARAMETER _HRESULT_TYPEDEF_(0x80010010)\0"
	.byte	0x1
	.uleb128 0x9cf
	.ascii "RPC_E_CANTCALLOUT_AGAIN _HRESULT_TYPEDEF_(0x80010011)\0"
	.byte	0x1
	.uleb128 0x9d0
	.ascii "RPC_E_SERVER_DIED_DNE _HRESULT_TYPEDEF_(0x80010012)\0"
	.byte	0x1
	.uleb128 0x9d1
	.ascii "RPC_E_SYS_CALL_FAILED _HRESULT_TYPEDEF_(0x80010100)\0"
	.byte	0x1
	.uleb128 0x9d2
	.ascii "RPC_E_OUT_OF_RESOURCES _HRESULT_TYPEDEF_(0x80010101)\0"
	.byte	0x1
	.uleb128 0x9d3
	.ascii "RPC_E_ATTEMPTED_MULTITHREAD _HRESULT_TYPEDEF_(0x80010102)\0"
	.byte	0x1
	.uleb128 0x9d4
	.ascii "RPC_E_NOT_REGISTERED _HRESULT_TYPEDEF_(0x80010103)\0"
	.byte	0x1
	.uleb128 0x9d5
	.ascii "RPC_E_FAULT _HRESULT_TYPEDEF_(0x80010104)\0"
	.byte	0x1
	.uleb128 0x9d6
	.ascii "RPC_E_SERVERFAULT _HRESULT_TYPEDEF_(0x80010105)\0"
	.byte	0x1
	.uleb128 0x9d7
	.ascii "RPC_E_CHANGED_MODE _HRESULT_TYPEDEF_(0x80010106)\0"
	.byte	0x1
	.uleb128 0x9d8
	.ascii "RPC_E_INVALIDMETHOD _HRESULT_TYPEDEF_(0x80010107)\0"
	.byte	0x1
	.uleb128 0x9d9
	.ascii "RPC_E_DISCONNECTED _HRESULT_TYPEDEF_(0x80010108)\0"
	.byte	0x1
	.uleb128 0x9da
	.ascii "RPC_E_RETRY _HRESULT_TYPEDEF_(0x80010109)\0"
	.byte	0x1
	.uleb128 0x9db
	.ascii "RPC_E_SERVERCALL_RETRYLATER _HRESULT_TYPEDEF_(0x8001010A)\0"
	.byte	0x1
	.uleb128 0x9dc
	.ascii "RPC_E_SERVERCALL_REJECTED _HRESULT_TYPEDEF_(0x8001010B)\0"
	.byte	0x1
	.uleb128 0x9dd
	.ascii "RPC_E_INVALID_CALLDATA _HRESULT_TYPEDEF_(0x8001010C)\0"
	.byte	0x1
	.uleb128 0x9de
	.ascii "RPC_E_CANTCALLOUT_ININPUTSYNCCALL _HRESULT_TYPEDEF_(0x8001010D)\0"
	.byte	0x1
	.uleb128 0x9df
	.ascii "RPC_E_WRONG_THREAD _HRESULT_TYPEDEF_(0x8001010E)\0"
	.byte	0x1
	.uleb128 0x9e0
	.ascii "RPC_E_THREAD_NOT_INIT _HRESULT_TYPEDEF_(0x8001010F)\0"
	.byte	0x1
	.uleb128 0x9e1
	.ascii "RPC_E_VERSION_MISMATCH _HRESULT_TYPEDEF_(0x80010110)\0"
	.byte	0x1
	.uleb128 0x9e2
	.ascii "RPC_E_INVALID_HEADER _HRESULT_TYPEDEF_(0x80010111)\0"
	.byte	0x1
	.uleb128 0x9e3
	.ascii "RPC_E_INVALID_EXTENSION _HRESULT_TYPEDEF_(0x80010112)\0"
	.byte	0x1
	.uleb128 0x9e4
	.ascii "RPC_E_INVALID_IPID _HRESULT_TYPEDEF_(0x80010113)\0"
	.byte	0x1
	.uleb128 0x9e5
	.ascii "RPC_E_INVALID_OBJECT _HRESULT_TYPEDEF_(0x80010114)\0"
	.byte	0x1
	.uleb128 0x9e6
	.ascii "RPC_S_CALLPENDING _HRESULT_TYPEDEF_(0x80010115)\0"
	.byte	0x1
	.uleb128 0x9e7
	.ascii "RPC_S_WAITONTIMER _HRESULT_TYPEDEF_(0x80010116)\0"
	.byte	0x1
	.uleb128 0x9e8
	.ascii "RPC_E_CALL_COMPLETE _HRESULT_TYPEDEF_(0x80010117)\0"
	.byte	0x1
	.uleb128 0x9e9
	.ascii "RPC_E_UNSECURE_CALL _HRESULT_TYPEDEF_(0x80010118)\0"
	.byte	0x1
	.uleb128 0x9ea
	.ascii "RPC_E_TOO_LATE _HRESULT_TYPEDEF_(0x80010119)\0"
	.byte	0x1
	.uleb128 0x9eb
	.ascii "RPC_E_NO_GOOD_SECURITY_PACKAGES _HRESULT_TYPEDEF_(0x8001011A)\0"
	.byte	0x1
	.uleb128 0x9ec
	.ascii "RPC_E_ACCESS_DENIED _HRESULT_TYPEDEF_(0x8001011B)\0"
	.byte	0x1
	.uleb128 0x9ed
	.ascii "RPC_E_REMOTE_DISABLED _HRESULT_TYPEDEF_(0x8001011C)\0"
	.byte	0x1
	.uleb128 0x9ee
	.ascii "RPC_E_INVALID_OBJREF _HRESULT_TYPEDEF_(0x8001011D)\0"
	.byte	0x1
	.uleb128 0x9ef
	.ascii "RPC_E_NO_CONTEXT _HRESULT_TYPEDEF_(0x8001011E)\0"
	.byte	0x1
	.uleb128 0x9f0
	.ascii "RPC_E_TIMEOUT _HRESULT_TYPEDEF_(0x8001011F)\0"
	.byte	0x1
	.uleb128 0x9f1
	.ascii "RPC_E_NO_SYNC _HRESULT_TYPEDEF_(0x80010120)\0"
	.byte	0x1
	.uleb128 0x9f2
	.ascii "RPC_E_FULLSIC_REQUIRED _HRESULT_TYPEDEF_(0x80010121)\0"
	.byte	0x1
	.uleb128 0x9f3
	.ascii "RPC_E_INVALID_STD_NAME _HRESULT_TYPEDEF_(0x80010122)\0"
	.byte	0x1
	.uleb128 0x9f4
	.ascii "CO_E_FAILEDTOIMPERSONATE _HRESULT_TYPEDEF_(0x80010123)\0"
	.byte	0x1
	.uleb128 0x9f5
	.ascii "CO_E_FAILEDTOGETSECCTX _HRESULT_TYPEDEF_(0x80010124)\0"
	.byte	0x1
	.uleb128 0x9f6
	.ascii "CO_E_FAILEDTOOPENTHREADTOKEN _HRESULT_TYPEDEF_(0x80010125)\0"
	.byte	0x1
	.uleb128 0x9f7
	.ascii "CO_E_FAILEDTOGETTOKENINFO _HRESULT_TYPEDEF_(0x80010126)\0"
	.byte	0x1
	.uleb128 0x9f8
	.ascii "CO_E_TRUSTEEDOESNTMATCHCLIENT _HRESULT_TYPEDEF_(0x80010127)\0"
	.byte	0x1
	.uleb128 0x9f9
	.ascii "CO_E_FAILEDTOQUERYCLIENTBLANKET _HRESULT_TYPEDEF_(0x80010128)\0"
	.byte	0x1
	.uleb128 0x9fa
	.ascii "CO_E_FAILEDTOSETDACL _HRESULT_TYPEDEF_(0x80010129)\0"
	.byte	0x1
	.uleb128 0x9fb
	.ascii "CO_E_ACCESSCHECKFAILED _HRESULT_TYPEDEF_(0x8001012A)\0"
	.byte	0x1
	.uleb128 0x9fc
	.ascii "CO_E_NETACCESSAPIFAILED _HRESULT_TYPEDEF_(0x8001012B)\0"
	.byte	0x1
	.uleb128 0x9fd
	.ascii "CO_E_WRONGTRUSTEENAMESYNTAX _HRESULT_TYPEDEF_(0x8001012C)\0"
	.byte	0x1
	.uleb128 0x9fe
	.ascii "CO_E_INVALIDSID _HRESULT_TYPEDEF_(0x8001012D)\0"
	.byte	0x1
	.uleb128 0x9ff
	.ascii "CO_E_CONVERSIONFAILED _HRESULT_TYPEDEF_(0x8001012E)\0"
	.byte	0x1
	.uleb128 0xa00
	.ascii "CO_E_NOMATCHINGSIDFOUND _HRESULT_TYPEDEF_(0x8001012F)\0"
	.byte	0x1
	.uleb128 0xa01
	.ascii "CO_E_LOOKUPACCSIDFAILED _HRESULT_TYPEDEF_(0x80010130)\0"
	.byte	0x1
	.uleb128 0xa02
	.ascii "CO_E_NOMATCHINGNAMEFOUND _HRESULT_TYPEDEF_(0x80010131)\0"
	.byte	0x1
	.uleb128 0xa03
	.ascii "CO_E_LOOKUPACCNAMEFAILED _HRESULT_TYPEDEF_(0x80010132)\0"
	.byte	0x1
	.uleb128 0xa04
	.ascii "CO_E_SETSERLHNDLFAILED _HRESULT_TYPEDEF_(0x80010133)\0"
	.byte	0x1
	.uleb128 0xa05
	.ascii "CO_E_FAILEDTOGETWINDIR _HRESULT_TYPEDEF_(0x80010134)\0"
	.byte	0x1
	.uleb128 0xa06
	.ascii "CO_E_PATHTOOLONG _HRESULT_TYPEDEF_(0x80010135)\0"
	.byte	0x1
	.uleb128 0xa07
	.ascii "CO_E_FAILEDTOGENUUID _HRESULT_TYPEDEF_(0x80010136)\0"
	.byte	0x1
	.uleb128 0xa08
	.ascii "CO_E_FAILEDTOCREATEFILE _HRESULT_TYPEDEF_(0x80010137)\0"
	.byte	0x1
	.uleb128 0xa09
	.ascii "CO_E_FAILEDTOCLOSEHANDLE _HRESULT_TYPEDEF_(0x80010138)\0"
	.byte	0x1
	.uleb128 0xa0a
	.ascii "CO_E_EXCEEDSYSACLLIMIT _HRESULT_TYPEDEF_(0x80010139)\0"
	.byte	0x1
	.uleb128 0xa0b
	.ascii "CO_E_ACESINWRONGORDER _HRESULT_TYPEDEF_(0x8001013A)\0"
	.byte	0x1
	.uleb128 0xa0c
	.ascii "CO_E_INCOMPATIBLESTREAMVERSION _HRESULT_TYPEDEF_(0x8001013B)\0"
	.byte	0x1
	.uleb128 0xa0d
	.ascii "CO_E_FAILEDTOOPENPROCESSTOKEN _HRESULT_TYPEDEF_(0x8001013C)\0"
	.byte	0x1
	.uleb128 0xa0e
	.ascii "CO_E_DECODEFAILED _HRESULT_TYPEDEF_(0x8001013D)\0"
	.byte	0x1
	.uleb128 0xa0f
	.ascii "CO_E_ACNOTINITIALIZED _HRESULT_TYPEDEF_(0x8001013F)\0"
	.byte	0x1
	.uleb128 0xa10
	.ascii "CO_E_CANCEL_DISABLED _HRESULT_TYPEDEF_(0x80010140)\0"
	.byte	0x1
	.uleb128 0xa11
	.ascii "RPC_E_UNEXPECTED _HRESULT_TYPEDEF_(0x8001FFFF)\0"
	.byte	0x1
	.uleb128 0xa12
	.ascii "ERROR_AUDITING_DISABLED _HRESULT_TYPEDEF_(0xC0090001)\0"
	.byte	0x1
	.uleb128 0xa13
	.ascii "ERROR_ALL_SIDS_FILTERED _HRESULT_TYPEDEF_(0xC0090002)\0"
	.byte	0x1
	.uleb128 0xa14
	.ascii "NTE_BAD_UID _HRESULT_TYPEDEF_(0x80090001)\0"
	.byte	0x1
	.uleb128 0xa15
	.ascii "NTE_BAD_HASH _HRESULT_TYPEDEF_(0x80090002)\0"
	.byte	0x1
	.uleb128 0xa16
	.ascii "NTE_BAD_KEY _HRESULT_TYPEDEF_(0x80090003)\0"
	.byte	0x1
	.uleb128 0xa17
	.ascii "NTE_BAD_LEN _HRESULT_TYPEDEF_(0x80090004)\0"
	.byte	0x1
	.uleb128 0xa18
	.ascii "NTE_BAD_DATA _HRESULT_TYPEDEF_(0x80090005)\0"
	.byte	0x1
	.uleb128 0xa19
	.ascii "NTE_BAD_SIGNATURE _HRESULT_TYPEDEF_(0x80090006)\0"
	.byte	0x1
	.uleb128 0xa1a
	.ascii "NTE_BAD_VER _HRESULT_TYPEDEF_(0x80090007)\0"
	.byte	0x1
	.uleb128 0xa1b
	.ascii "NTE_BAD_ALGID _HRESULT_TYPEDEF_(0x80090008)\0"
	.byte	0x1
	.uleb128 0xa1c
	.ascii "NTE_BAD_FLAGS _HRESULT_TYPEDEF_(0x80090009)\0"
	.byte	0x1
	.uleb128 0xa1d
	.ascii "NTE_BAD_TYPE _HRESULT_TYPEDEF_(0x8009000A)\0"
	.byte	0x1
	.uleb128 0xa1e
	.ascii "NTE_BAD_KEY_STATE _HRESULT_TYPEDEF_(0x8009000B)\0"
	.byte	0x1
	.uleb128 0xa1f
	.ascii "NTE_BAD_HASH_STATE _HRESULT_TYPEDEF_(0x8009000C)\0"
	.byte	0x1
	.uleb128 0xa20
	.ascii "NTE_NO_KEY _HRESULT_TYPEDEF_(0x8009000D)\0"
	.byte	0x1
	.uleb128 0xa21
	.ascii "NTE_NO_MEMORY _HRESULT_TYPEDEF_(0x8009000E)\0"
	.byte	0x1
	.uleb128 0xa22
	.ascii "NTE_EXISTS _HRESULT_TYPEDEF_(0x8009000F)\0"
	.byte	0x1
	.uleb128 0xa23
	.ascii "NTE_PERM _HRESULT_TYPEDEF_(0x80090010)\0"
	.byte	0x1
	.uleb128 0xa24
	.ascii "NTE_NOT_FOUND _HRESULT_TYPEDEF_(0x80090011)\0"
	.byte	0x1
	.uleb128 0xa25
	.ascii "NTE_DOUBLE_ENCRYPT _HRESULT_TYPEDEF_(0x80090012)\0"
	.byte	0x1
	.uleb128 0xa26
	.ascii "NTE_BAD_PROVIDER _HRESULT_TYPEDEF_(0x80090013)\0"
	.byte	0x1
	.uleb128 0xa27
	.ascii "NTE_BAD_PROV_TYPE _HRESULT_TYPEDEF_(0x80090014)\0"
	.byte	0x1
	.uleb128 0xa28
	.ascii "NTE_BAD_PUBLIC_KEY _HRESULT_TYPEDEF_(0x80090015)\0"
	.byte	0x1
	.uleb128 0xa29
	.ascii "NTE_BAD_KEYSET _HRESULT_TYPEDEF_(0x80090016)\0"
	.byte	0x1
	.uleb128 0xa2a
	.ascii "NTE_PROV_TYPE_NOT_DEF _HRESULT_TYPEDEF_(0x80090017)\0"
	.byte	0x1
	.uleb128 0xa2b
	.ascii "NTE_PROV_TYPE_ENTRY_BAD _HRESULT_TYPEDEF_(0x80090018)\0"
	.byte	0x1
	.uleb128 0xa2c
	.ascii "NTE_KEYSET_NOT_DEF _HRESULT_TYPEDEF_(0x80090019)\0"
	.byte	0x1
	.uleb128 0xa2d
	.ascii "NTE_KEYSET_ENTRY_BAD _HRESULT_TYPEDEF_(0x8009001A)\0"
	.byte	0x1
	.uleb128 0xa2e
	.ascii "NTE_PROV_TYPE_NO_MATCH _HRESULT_TYPEDEF_(0x8009001B)\0"
	.byte	0x1
	.uleb128 0xa2f
	.ascii "NTE_SIGNATURE_FILE_BAD _HRESULT_TYPEDEF_(0x8009001C)\0"
	.byte	0x1
	.uleb128 0xa30
	.ascii "NTE_PROVIDER_DLL_FAIL _HRESULT_TYPEDEF_(0x8009001D)\0"
	.byte	0x1
	.uleb128 0xa31
	.ascii "NTE_PROV_DLL_NOT_FOUND _HRESULT_TYPEDEF_(0x8009001E)\0"
	.byte	0x1
	.uleb128 0xa32
	.ascii "NTE_BAD_KEYSET_PARAM _HRESULT_TYPEDEF_(0x8009001F)\0"
	.byte	0x1
	.uleb128 0xa33
	.ascii "NTE_FAIL _HRESULT_TYPEDEF_(0x80090020)\0"
	.byte	0x1
	.uleb128 0xa34
	.ascii "NTE_SYS_ERR _HRESULT_TYPEDEF_(0x80090021)\0"
	.byte	0x1
	.uleb128 0xa35
	.ascii "NTE_SILENT_CONTEXT _HRESULT_TYPEDEF_(0x80090022)\0"
	.byte	0x1
	.uleb128 0xa36
	.ascii "NTE_TOKEN_KEYSET_STORAGE_FULL _HRESULT_TYPEDEF_(0x80090023)\0"
	.byte	0x1
	.uleb128 0xa37
	.ascii "NTE_TEMPORARY_PROFILE _HRESULT_TYPEDEF_(0x80090024)\0"
	.byte	0x1
	.uleb128 0xa38
	.ascii "NTE_FIXEDPARAMETER _HRESULT_TYPEDEF_(0x80090025)\0"
	.byte	0x1
	.uleb128 0xa39
	.ascii "SEC_E_INSUFFICIENT_MEMORY _HRESULT_TYPEDEF_(0x80090300)\0"
	.byte	0x1
	.uleb128 0xa3a
	.ascii "SEC_E_INVALID_HANDLE _HRESULT_TYPEDEF_(0x80090301)\0"
	.byte	0x1
	.uleb128 0xa3b
	.ascii "SEC_E_UNSUPPORTED_FUNCTION _HRESULT_TYPEDEF_(0x80090302)\0"
	.byte	0x1
	.uleb128 0xa3c
	.ascii "SEC_E_TARGET_UNKNOWN _HRESULT_TYPEDEF_(0x80090303)\0"
	.byte	0x1
	.uleb128 0xa3d
	.ascii "SEC_E_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x80090304)\0"
	.byte	0x1
	.uleb128 0xa3e
	.ascii "SEC_E_SECPKG_NOT_FOUND _HRESULT_TYPEDEF_(0x80090305)\0"
	.byte	0x1
	.uleb128 0xa3f
	.ascii "SEC_E_NOT_OWNER _HRESULT_TYPEDEF_(0x80090306)\0"
	.byte	0x1
	.uleb128 0xa40
	.ascii "SEC_E_CANNOT_INSTALL _HRESULT_TYPEDEF_(0x80090307)\0"
	.byte	0x1
	.uleb128 0xa41
	.ascii "SEC_E_INVALID_TOKEN _HRESULT_TYPEDEF_(0x80090308)\0"
	.byte	0x1
	.uleb128 0xa42
	.ascii "SEC_E_CANNOT_PACK _HRESULT_TYPEDEF_(0x80090309)\0"
	.byte	0x1
	.uleb128 0xa43
	.ascii "SEC_E_QOP_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8009030A)\0"
	.byte	0x1
	.uleb128 0xa44
	.ascii "SEC_E_NO_IMPERSONATION _HRESULT_TYPEDEF_(0x8009030B)\0"
	.byte	0x1
	.uleb128 0xa45
	.ascii "SEC_E_LOGON_DENIED _HRESULT_TYPEDEF_(0x8009030C)\0"
	.byte	0x1
	.uleb128 0xa46
	.ascii "SEC_E_UNKNOWN_CREDENTIALS _HRESULT_TYPEDEF_(0x8009030D)\0"
	.byte	0x1
	.uleb128 0xa47
	.ascii "SEC_E_NO_CREDENTIALS _HRESULT_TYPEDEF_(0x8009030E)\0"
	.byte	0x1
	.uleb128 0xa48
	.ascii "SEC_E_MESSAGE_ALTERED _HRESULT_TYPEDEF_(0x8009030F)\0"
	.byte	0x1
	.uleb128 0xa49
	.ascii "SEC_E_OUT_OF_SEQUENCE _HRESULT_TYPEDEF_(0x80090310)\0"
	.byte	0x1
	.uleb128 0xa4a
	.ascii "SEC_E_NO_AUTHENTICATING_AUTHORITY _HRESULT_TYPEDEF_(0x80090311)\0"
	.byte	0x1
	.uleb128 0xa4b
	.ascii "SEC_I_CONTINUE_NEEDED _HRESULT_TYPEDEF_(0x00090312)\0"
	.byte	0x1
	.uleb128 0xa4c
	.ascii "SEC_I_COMPLETE_NEEDED _HRESULT_TYPEDEF_(0x00090313)\0"
	.byte	0x1
	.uleb128 0xa4d
	.ascii "SEC_I_COMPLETE_AND_CONTINUE _HRESULT_TYPEDEF_(0x00090314)\0"
	.byte	0x1
	.uleb128 0xa4e
	.ascii "SEC_I_LOCAL_LOGON _HRESULT_TYPEDEF_(0x00090315)\0"
	.byte	0x1
	.uleb128 0xa4f
	.ascii "SEC_E_BAD_PKGID _HRESULT_TYPEDEF_(0x80090316)\0"
	.byte	0x1
	.uleb128 0xa50
	.ascii "SEC_E_CONTEXT_EXPIRED _HRESULT_TYPEDEF_(0x80090317)\0"
	.byte	0x1
	.uleb128 0xa51
	.ascii "SEC_I_CONTEXT_EXPIRED _HRESULT_TYPEDEF_(0x00090317)\0"
	.byte	0x1
	.uleb128 0xa52
	.ascii "SEC_E_INCOMPLETE_MESSAGE _HRESULT_TYPEDEF_(0x80090318)\0"
	.byte	0x1
	.uleb128 0xa53
	.ascii "SEC_E_INCOMPLETE_CREDENTIALS _HRESULT_TYPEDEF_(0x80090320)\0"
	.byte	0x1
	.uleb128 0xa54
	.ascii "SEC_E_BUFFER_TOO_SMALL _HRESULT_TYPEDEF_(0x80090321)\0"
	.byte	0x1
	.uleb128 0xa55
	.ascii "SEC_I_INCOMPLETE_CREDENTIALS _HRESULT_TYPEDEF_(0x00090320)\0"
	.byte	0x1
	.uleb128 0xa56
	.ascii "SEC_I_RENEGOTIATE _HRESULT_TYPEDEF_(0x00090321)\0"
	.byte	0x1
	.uleb128 0xa57
	.ascii "SEC_E_WRONG_PRINCIPAL _HRESULT_TYPEDEF_(0x80090322)\0"
	.byte	0x1
	.uleb128 0xa58
	.ascii "SEC_I_NO_LSA_CONTEXT _HRESULT_TYPEDEF_(0x00090323)\0"
	.byte	0x1
	.uleb128 0xa59
	.ascii "SEC_E_TIME_SKEW _HRESULT_TYPEDEF_(0x80090324)\0"
	.byte	0x1
	.uleb128 0xa5a
	.ascii "SEC_E_UNTRUSTED_ROOT _HRESULT_TYPEDEF_(0x80090325)\0"
	.byte	0x1
	.uleb128 0xa5b
	.ascii "SEC_E_ILLEGAL_MESSAGE _HRESULT_TYPEDEF_(0x80090326)\0"
	.byte	0x1
	.uleb128 0xa5c
	.ascii "SEC_E_CERT_UNKNOWN _HRESULT_TYPEDEF_(0x80090327)\0"
	.byte	0x1
	.uleb128 0xa5d
	.ascii "SEC_E_CERT_EXPIRED _HRESULT_TYPEDEF_(0x80090328)\0"
	.byte	0x1
	.uleb128 0xa5e
	.ascii "SEC_E_ENCRYPT_FAILURE _HRESULT_TYPEDEF_(0x80090329)\0"
	.byte	0x1
	.uleb128 0xa5f
	.ascii "SEC_E_DECRYPT_FAILURE _HRESULT_TYPEDEF_(0x80090330)\0"
	.byte	0x1
	.uleb128 0xa60
	.ascii "SEC_E_ALGORITHM_MISMATCH _HRESULT_TYPEDEF_(0x80090331)\0"
	.byte	0x1
	.uleb128 0xa61
	.ascii "SEC_E_SECURITY_QOS_FAILED _HRESULT_TYPEDEF_(0x80090332)\0"
	.byte	0x1
	.uleb128 0xa62
	.ascii "SEC_E_UNFINISHED_CONTEXT_DELETED _HRESULT_TYPEDEF_(0x80090333)\0"
	.byte	0x1
	.uleb128 0xa63
	.ascii "SEC_E_NO_TGT_REPLY _HRESULT_TYPEDEF_(0x80090334)\0"
	.byte	0x1
	.uleb128 0xa64
	.ascii "SEC_E_NO_IP_ADDRESSES _HRESULT_TYPEDEF_(0x80090335)\0"
	.byte	0x1
	.uleb128 0xa65
	.ascii "SEC_E_WRONG_CREDENTIAL_HANDLE _HRESULT_TYPEDEF_(0x80090336)\0"
	.byte	0x1
	.uleb128 0xa66
	.ascii "SEC_E_CRYPTO_SYSTEM_INVALID _HRESULT_TYPEDEF_(0x80090337)\0"
	.byte	0x1
	.uleb128 0xa67
	.ascii "SEC_E_MAX_REFERRALS_EXCEEDED _HRESULT_TYPEDEF_(0x80090338)\0"
	.byte	0x1
	.uleb128 0xa68
	.ascii "SEC_E_MUST_BE_KDC _HRESULT_TYPEDEF_(0x80090339)\0"
	.byte	0x1
	.uleb128 0xa69
	.ascii "SEC_E_STRONG_CRYPTO_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8009033A)\0"
	.byte	0x1
	.uleb128 0xa6a
	.ascii "SEC_E_TOO_MANY_PRINCIPALS _HRESULT_TYPEDEF_(0x8009033B)\0"
	.byte	0x1
	.uleb128 0xa6b
	.ascii "SEC_E_NO_PA_DATA _HRESULT_TYPEDEF_(0x8009033C)\0"
	.byte	0x1
	.uleb128 0xa6c
	.ascii "SEC_E_PKINIT_NAME_MISMATCH _HRESULT_TYPEDEF_(0x8009033D)\0"
	.byte	0x1
	.uleb128 0xa6d
	.ascii "SEC_E_SMARTCARD_LOGON_REQUIRED _HRESULT_TYPEDEF_(0x8009033E)\0"
	.byte	0x1
	.uleb128 0xa6e
	.ascii "SEC_E_SHUTDOWN_IN_PROGRESS _HRESULT_TYPEDEF_(0x8009033F)\0"
	.byte	0x1
	.uleb128 0xa6f
	.ascii "SEC_E_KDC_INVALID_REQUEST _HRESULT_TYPEDEF_(0x80090340)\0"
	.byte	0x1
	.uleb128 0xa70
	.ascii "SEC_E_KDC_UNABLE_TO_REFER _HRESULT_TYPEDEF_(0x80090341)\0"
	.byte	0x1
	.uleb128 0xa71
	.ascii "SEC_E_KDC_UNKNOWN_ETYPE _HRESULT_TYPEDEF_(0x80090342)\0"
	.byte	0x1
	.uleb128 0xa72
	.ascii "SEC_E_UNSUPPORTED_PREAUTH _HRESULT_TYPEDEF_(0x80090343)\0"
	.byte	0x1
	.uleb128 0xa73
	.ascii "SEC_E_DELEGATION_REQUIRED _HRESULT_TYPEDEF_(0x80090345)\0"
	.byte	0x1
	.uleb128 0xa74
	.ascii "SEC_E_BAD_BINDINGS _HRESULT_TYPEDEF_(0x80090346)\0"
	.byte	0x1
	.uleb128 0xa75
	.ascii "SEC_E_MULTIPLE_ACCOUNTS _HRESULT_TYPEDEF_(0x80090347)\0"
	.byte	0x1
	.uleb128 0xa76
	.ascii "SEC_E_NO_KERB_KEY _HRESULT_TYPEDEF_(0x80090348)\0"
	.byte	0x1
	.uleb128 0xa77
	.ascii "SEC_E_CERT_WRONG_USAGE _HRESULT_TYPEDEF_(0x80090349)\0"
	.byte	0x1
	.uleb128 0xa78
	.ascii "SEC_E_DOWNGRADE_DETECTED _HRESULT_TYPEDEF_(0x80090350)\0"
	.byte	0x1
	.uleb128 0xa79
	.ascii "SEC_E_SMARTCARD_CERT_REVOKED _HRESULT_TYPEDEF_(0x80090351)\0"
	.byte	0x1
	.uleb128 0xa7a
	.ascii "SEC_E_ISSUING_CA_UNTRUSTED _HRESULT_TYPEDEF_(0x80090352)\0"
	.byte	0x1
	.uleb128 0xa7b
	.ascii "SEC_E_REVOCATION_OFFLINE_C _HRESULT_TYPEDEF_(0x80090353)\0"
	.byte	0x1
	.uleb128 0xa7c
	.ascii "SEC_E_PKINIT_CLIENT_FAILURE _HRESULT_TYPEDEF_(0x80090354)\0"
	.byte	0x1
	.uleb128 0xa7d
	.ascii "SEC_E_SMARTCARD_CERT_EXPIRED _HRESULT_TYPEDEF_(0x80090355)\0"
	.byte	0x1
	.uleb128 0xa7e
	.ascii "SEC_E_NO_S4U_PROT_SUPPORT _HRESULT_TYPEDEF_(0x80090356)\0"
	.byte	0x1
	.uleb128 0xa7f
	.ascii "SEC_E_CROSSREALM_DELEGATION_FAILURE _HRESULT_TYPEDEF_(0x80090357)\0"
	.byte	0x1
	.uleb128 0xa80
	.ascii "SEC_E_REVOCATION_OFFLINE_KDC _HRESULT_TYPEDEF_(0x80090358)\0"
	.byte	0x1
	.uleb128 0xa81
	.ascii "SEC_E_ISSUING_CA_UNTRUSTED_KDC _HRESULT_TYPEDEF_(0x80090359)\0"
	.byte	0x1
	.uleb128 0xa82
	.ascii "SEC_E_KDC_CERT_EXPIRED _HRESULT_TYPEDEF_(0x8009035A)\0"
	.byte	0x1
	.uleb128 0xa83
	.ascii "SEC_E_KDC_CERT_REVOKED _HRESULT_TYPEDEF_(0x8009035B)\0"
	.byte	0x1
	.uleb128 0xa84
	.ascii "SEC_E_NO_SPM SEC_E_INTERNAL_ERROR\0"
	.byte	0x1
	.uleb128 0xa85
	.ascii "SEC_E_NOT_SUPPORTED SEC_E_UNSUPPORTED_FUNCTION\0"
	.byte	0x1
	.uleb128 0xa86
	.ascii "CRYPT_E_MSG_ERROR _HRESULT_TYPEDEF_(0x80091001)\0"
	.byte	0x1
	.uleb128 0xa87
	.ascii "CRYPT_E_UNKNOWN_ALGO _HRESULT_TYPEDEF_(0x80091002)\0"
	.byte	0x1
	.uleb128 0xa88
	.ascii "CRYPT_E_OID_FORMAT _HRESULT_TYPEDEF_(0x80091003)\0"
	.byte	0x1
	.uleb128 0xa89
	.ascii "CRYPT_E_INVALID_MSG_TYPE _HRESULT_TYPEDEF_(0x80091004)\0"
	.byte	0x1
	.uleb128 0xa8a
	.ascii "CRYPT_E_UNEXPECTED_ENCODING _HRESULT_TYPEDEF_(0x80091005)\0"
	.byte	0x1
	.uleb128 0xa8b
	.ascii "CRYPT_E_AUTH_ATTR_MISSING _HRESULT_TYPEDEF_(0x80091006)\0"
	.byte	0x1
	.uleb128 0xa8c
	.ascii "CRYPT_E_HASH_VALUE _HRESULT_TYPEDEF_(0x80091007)\0"
	.byte	0x1
	.uleb128 0xa8d
	.ascii "CRYPT_E_INVALID_INDEX _HRESULT_TYPEDEF_(0x80091008)\0"
	.byte	0x1
	.uleb128 0xa8e
	.ascii "CRYPT_E_ALREADY_DECRYPTED _HRESULT_TYPEDEF_(0x80091009)\0"
	.byte	0x1
	.uleb128 0xa8f
	.ascii "CRYPT_E_NOT_DECRYPTED _HRESULT_TYPEDEF_(0x8009100A)\0"
	.byte	0x1
	.uleb128 0xa90
	.ascii "CRYPT_E_RECIPIENT_NOT_FOUND _HRESULT_TYPEDEF_(0x8009100B)\0"
	.byte	0x1
	.uleb128 0xa91
	.ascii "CRYPT_E_CONTROL_TYPE _HRESULT_TYPEDEF_(0x8009100C)\0"
	.byte	0x1
	.uleb128 0xa92
	.ascii "CRYPT_E_ISSUER_SERIALNUMBER _HRESULT_TYPEDEF_(0x8009100D)\0"
	.byte	0x1
	.uleb128 0xa93
	.ascii "CRYPT_E_SIGNER_NOT_FOUND _HRESULT_TYPEDEF_(0x8009100E)\0"
	.byte	0x1
	.uleb128 0xa94
	.ascii "CRYPT_E_ATTRIBUTES_MISSING _HRESULT_TYPEDEF_(0x8009100F)\0"
	.byte	0x1
	.uleb128 0xa95
	.ascii "CRYPT_E_STREAM_MSG_NOT_READY _HRESULT_TYPEDEF_(0x80091010)\0"
	.byte	0x1
	.uleb128 0xa96
	.ascii "CRYPT_E_STREAM_INSUFFICIENT_DATA _HRESULT_TYPEDEF_(0x80091011)\0"
	.byte	0x1
	.uleb128 0xa97
	.ascii "CRYPT_I_NEW_PROTECTION_REQUIRED _HRESULT_TYPEDEF_(0x00091012)\0"
	.byte	0x1
	.uleb128 0xa98
	.ascii "CRYPT_E_BAD_LEN _HRESULT_TYPEDEF_(0x80092001)\0"
	.byte	0x1
	.uleb128 0xa99
	.ascii "CRYPT_E_BAD_ENCODE _HRESULT_TYPEDEF_(0x80092002)\0"
	.byte	0x1
	.uleb128 0xa9a
	.ascii "CRYPT_E_FILE_ERROR _HRESULT_TYPEDEF_(0x80092003)\0"
	.byte	0x1
	.uleb128 0xa9b
	.ascii "CRYPT_E_NOT_FOUND _HRESULT_TYPEDEF_(0x80092004)\0"
	.byte	0x1
	.uleb128 0xa9c
	.ascii "CRYPT_E_EXISTS _HRESULT_TYPEDEF_(0x80092005)\0"
	.byte	0x1
	.uleb128 0xa9d
	.ascii "CRYPT_E_NO_PROVIDER _HRESULT_TYPEDEF_(0x80092006)\0"
	.byte	0x1
	.uleb128 0xa9e
	.ascii "CRYPT_E_SELF_SIGNED _HRESULT_TYPEDEF_(0x80092007)\0"
	.byte	0x1
	.uleb128 0xa9f
	.ascii "CRYPT_E_DELETED_PREV _HRESULT_TYPEDEF_(0x80092008)\0"
	.byte	0x1
	.uleb128 0xaa0
	.ascii "CRYPT_E_NO_MATCH _HRESULT_TYPEDEF_(0x80092009)\0"
	.byte	0x1
	.uleb128 0xaa1
	.ascii "CRYPT_E_UNEXPECTED_MSG_TYPE _HRESULT_TYPEDEF_(0x8009200A)\0"
	.byte	0x1
	.uleb128 0xaa2
	.ascii "CRYPT_E_NO_KEY_PROPERTY _HRESULT_TYPEDEF_(0x8009200B)\0"
	.byte	0x1
	.uleb128 0xaa3
	.ascii "CRYPT_E_NO_DECRYPT_CERT _HRESULT_TYPEDEF_(0x8009200C)\0"
	.byte	0x1
	.uleb128 0xaa4
	.ascii "CRYPT_E_BAD_MSG _HRESULT_TYPEDEF_(0x8009200D)\0"
	.byte	0x1
	.uleb128 0xaa5
	.ascii "CRYPT_E_NO_SIGNER _HRESULT_TYPEDEF_(0x8009200E)\0"
	.byte	0x1
	.uleb128 0xaa6
	.ascii "CRYPT_E_PENDING_CLOSE _HRESULT_TYPEDEF_(0x8009200F)\0"
	.byte	0x1
	.uleb128 0xaa7
	.ascii "CRYPT_E_REVOKED _HRESULT_TYPEDEF_(0x80092010)\0"
	.byte	0x1
	.uleb128 0xaa8
	.ascii "CRYPT_E_NO_REVOCATION_DLL _HRESULT_TYPEDEF_(0x80092011)\0"
	.byte	0x1
	.uleb128 0xaa9
	.ascii "CRYPT_E_NO_REVOCATION_CHECK _HRESULT_TYPEDEF_(0x80092012)\0"
	.byte	0x1
	.uleb128 0xaaa
	.ascii "CRYPT_E_REVOCATION_OFFLINE _HRESULT_TYPEDEF_(0x80092013)\0"
	.byte	0x1
	.uleb128 0xaab
	.ascii "CRYPT_E_NOT_IN_REVOCATION_DATABASE _HRESULT_TYPEDEF_(0x80092014)\0"
	.byte	0x1
	.uleb128 0xaac
	.ascii "CRYPT_E_INVALID_NUMERIC_STRING _HRESULT_TYPEDEF_(0x80092020)\0"
	.byte	0x1
	.uleb128 0xaad
	.ascii "CRYPT_E_INVALID_PRINTABLE_STRING _HRESULT_TYPEDEF_(0x80092021)\0"
	.byte	0x1
	.uleb128 0xaae
	.ascii "CRYPT_E_INVALID_IA5_STRING _HRESULT_TYPEDEF_(0x80092022)\0"
	.byte	0x1
	.uleb128 0xaaf
	.ascii "CRYPT_E_INVALID_X500_STRING _HRESULT_TYPEDEF_(0x80092023)\0"
	.byte	0x1
	.uleb128 0xab0
	.ascii "CRYPT_E_NOT_CHAR_STRING _HRESULT_TYPEDEF_(0x80092024)\0"
	.byte	0x1
	.uleb128 0xab1
	.ascii "CRYPT_E_FILERESIZED _HRESULT_TYPEDEF_(0x80092025)\0"
	.byte	0x1
	.uleb128 0xab2
	.ascii "CRYPT_E_SECURITY_SETTINGS _HRESULT_TYPEDEF_(0x80092026)\0"
	.byte	0x1
	.uleb128 0xab3
	.ascii "CRYPT_E_NO_VERIFY_USAGE_DLL _HRESULT_TYPEDEF_(0x80092027)\0"
	.byte	0x1
	.uleb128 0xab4
	.ascii "CRYPT_E_NO_VERIFY_USAGE_CHECK _HRESULT_TYPEDEF_(0x80092028)\0"
	.byte	0x1
	.uleb128 0xab5
	.ascii "CRYPT_E_VERIFY_USAGE_OFFLINE _HRESULT_TYPEDEF_(0x80092029)\0"
	.byte	0x1
	.uleb128 0xab6
	.ascii "CRYPT_E_NOT_IN_CTL _HRESULT_TYPEDEF_(0x8009202A)\0"
	.byte	0x1
	.uleb128 0xab7
	.ascii "CRYPT_E_NO_TRUSTED_SIGNER _HRESULT_TYPEDEF_(0x8009202B)\0"
	.byte	0x1
	.uleb128 0xab8
	.ascii "CRYPT_E_MISSING_PUBKEY_PARA _HRESULT_TYPEDEF_(0x8009202C)\0"
	.byte	0x1
	.uleb128 0xab9
	.ascii "CRYPT_E_OSS_ERROR _HRESULT_TYPEDEF_(0x80093000)\0"
	.byte	0x1
	.uleb128 0xaba
	.ascii "OSS_MORE_BUF _HRESULT_TYPEDEF_(0x80093001)\0"
	.byte	0x1
	.uleb128 0xabb
	.ascii "OSS_NEGATIVE_UINTEGER _HRESULT_TYPEDEF_(0x80093002)\0"
	.byte	0x1
	.uleb128 0xabc
	.ascii "OSS_PDU_RANGE _HRESULT_TYPEDEF_(0x80093003)\0"
	.byte	0x1
	.uleb128 0xabd
	.ascii "OSS_MORE_INPUT _HRESULT_TYPEDEF_(0x80093004)\0"
	.byte	0x1
	.uleb128 0xabe
	.ascii "OSS_DATA_ERROR _HRESULT_TYPEDEF_(0x80093005)\0"
	.byte	0x1
	.uleb128 0xabf
	.ascii "OSS_BAD_ARG _HRESULT_TYPEDEF_(0x80093006)\0"
	.byte	0x1
	.uleb128 0xac0
	.ascii "OSS_BAD_VERSION _HRESULT_TYPEDEF_(0x80093007)\0"
	.byte	0x1
	.uleb128 0xac1
	.ascii "OSS_OUT_MEMORY _HRESULT_TYPEDEF_(0x80093008)\0"
	.byte	0x1
	.uleb128 0xac2
	.ascii "OSS_PDU_MISMATCH _HRESULT_TYPEDEF_(0x80093009)\0"
	.byte	0x1
	.uleb128 0xac3
	.ascii "OSS_LIMITED _HRESULT_TYPEDEF_(0x8009300A)\0"
	.byte	0x1
	.uleb128 0xac4
	.ascii "OSS_BAD_PTR _HRESULT_TYPEDEF_(0x8009300B)\0"
	.byte	0x1
	.uleb128 0xac5
	.ascii "OSS_BAD_TIME _HRESULT_TYPEDEF_(0x8009300C)\0"
	.byte	0x1
	.uleb128 0xac6
	.ascii "OSS_INDEFINITE_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8009300D)\0"
	.byte	0x1
	.uleb128 0xac7
	.ascii "OSS_MEM_ERROR _HRESULT_TYPEDEF_(0x8009300E)\0"
	.byte	0x1
	.uleb128 0xac8
	.ascii "OSS_BAD_TABLE _HRESULT_TYPEDEF_(0x8009300F)\0"
	.byte	0x1
	.uleb128 0xac9
	.ascii "OSS_TOO_LONG _HRESULT_TYPEDEF_(0x80093010)\0"
	.byte	0x1
	.uleb128 0xaca
	.ascii "OSS_CONSTRAINT_VIOLATED _HRESULT_TYPEDEF_(0x80093011)\0"
	.byte	0x1
	.uleb128 0xacb
	.ascii "OSS_FATAL_ERROR _HRESULT_TYPEDEF_(0x80093012)\0"
	.byte	0x1
	.uleb128 0xacc
	.ascii "OSS_ACCESS_SERIALIZATION_ERROR _HRESULT_TYPEDEF_(0x80093013)\0"
	.byte	0x1
	.uleb128 0xacd
	.ascii "OSS_NULL_TBL _HRESULT_TYPEDEF_(0x80093014)\0"
	.byte	0x1
	.uleb128 0xace
	.ascii "OSS_NULL_FCN _HRESULT_TYPEDEF_(0x80093015)\0"
	.byte	0x1
	.uleb128 0xacf
	.ascii "OSS_BAD_ENCRULES _HRESULT_TYPEDEF_(0x80093016)\0"
	.byte	0x1
	.uleb128 0xad0
	.ascii "OSS_UNAVAIL_ENCRULES _HRESULT_TYPEDEF_(0x80093017)\0"
	.byte	0x1
	.uleb128 0xad1
	.ascii "OSS_CANT_OPEN_TRACE_WINDOW _HRESULT_TYPEDEF_(0x80093018)\0"
	.byte	0x1
	.uleb128 0xad2
	.ascii "OSS_UNIMPLEMENTED _HRESULT_TYPEDEF_(0x80093019)\0"
	.byte	0x1
	.uleb128 0xad3
	.ascii "OSS_OID_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x8009301A)\0"
	.byte	0x1
	.uleb128 0xad4
	.ascii "OSS_CANT_OPEN_TRACE_FILE _HRESULT_TYPEDEF_(0x8009301B)\0"
	.byte	0x1
	.uleb128 0xad5
	.ascii "OSS_TRACE_FILE_ALREADY_OPEN _HRESULT_TYPEDEF_(0x8009301C)\0"
	.byte	0x1
	.uleb128 0xad6
	.ascii "OSS_TABLE_MISMATCH _HRESULT_TYPEDEF_(0x8009301D)\0"
	.byte	0x1
	.uleb128 0xad7
	.ascii "OSS_TYPE_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8009301E)\0"
	.byte	0x1
	.uleb128 0xad8
	.ascii "OSS_REAL_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x8009301F)\0"
	.byte	0x1
	.uleb128 0xad9
	.ascii "OSS_REAL_CODE_NOT_LINKED _HRESULT_TYPEDEF_(0x80093020)\0"
	.byte	0x1
	.uleb128 0xada
	.ascii "OSS_OUT_OF_RANGE _HRESULT_TYPEDEF_(0x80093021)\0"
	.byte	0x1
	.uleb128 0xadb
	.ascii "OSS_COPIER_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093022)\0"
	.byte	0x1
	.uleb128 0xadc
	.ascii "OSS_CONSTRAINT_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093023)\0"
	.byte	0x1
	.uleb128 0xadd
	.ascii "OSS_COMPARATOR_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093024)\0"
	.byte	0x1
	.uleb128 0xade
	.ascii "OSS_COMPARATOR_CODE_NOT_LINKED _HRESULT_TYPEDEF_(0x80093025)\0"
	.byte	0x1
	.uleb128 0xadf
	.ascii "OSS_MEM_MGR_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093026)\0"
	.byte	0x1
	.uleb128 0xae0
	.ascii "OSS_PDV_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093027)\0"
	.byte	0x1
	.uleb128 0xae1
	.ascii "OSS_PDV_CODE_NOT_LINKED _HRESULT_TYPEDEF_(0x80093028)\0"
	.byte	0x1
	.uleb128 0xae2
	.ascii "OSS_API_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093029)\0"
	.byte	0x1
	.uleb128 0xae3
	.ascii "OSS_BERDER_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x8009302A)\0"
	.byte	0x1
	.uleb128 0xae4
	.ascii "OSS_PER_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x8009302B)\0"
	.byte	0x1
	.uleb128 0xae5
	.ascii "OSS_OPEN_TYPE_ERROR _HRESULT_TYPEDEF_(0x8009302C)\0"
	.byte	0x1
	.uleb128 0xae6
	.ascii "OSS_MUTEX_NOT_CREATED _HRESULT_TYPEDEF_(0x8009302D)\0"
	.byte	0x1
	.uleb128 0xae7
	.ascii "OSS_CANT_CLOSE_TRACE_FILE _HRESULT_TYPEDEF_(0x8009302E)\0"
	.byte	0x1
	.uleb128 0xae8
	.ascii "CRYPT_E_ASN1_ERROR _HRESULT_TYPEDEF_(0x80093100)\0"
	.byte	0x1
	.uleb128 0xae9
	.ascii "CRYPT_E_ASN1_INTERNAL _HRESULT_TYPEDEF_(0x80093101)\0"
	.byte	0x1
	.uleb128 0xaea
	.ascii "CRYPT_E_ASN1_EOD _HRESULT_TYPEDEF_(0x80093102)\0"
	.byte	0x1
	.uleb128 0xaeb
	.ascii "CRYPT_E_ASN1_CORRUPT _HRESULT_TYPEDEF_(0x80093103)\0"
	.byte	0x1
	.uleb128 0xaec
	.ascii "CRYPT_E_ASN1_LARGE _HRESULT_TYPEDEF_(0x80093104)\0"
	.byte	0x1
	.uleb128 0xaed
	.ascii "CRYPT_E_ASN1_CONSTRAINT _HRESULT_TYPEDEF_(0x80093105)\0"
	.byte	0x1
	.uleb128 0xaee
	.ascii "CRYPT_E_ASN1_MEMORY _HRESULT_TYPEDEF_(0x80093106)\0"
	.byte	0x1
	.uleb128 0xaef
	.ascii "CRYPT_E_ASN1_OVERFLOW _HRESULT_TYPEDEF_(0x80093107)\0"
	.byte	0x1
	.uleb128 0xaf0
	.ascii "CRYPT_E_ASN1_BADPDU _HRESULT_TYPEDEF_(0x80093108)\0"
	.byte	0x1
	.uleb128 0xaf1
	.ascii "CRYPT_E_ASN1_BADARGS _HRESULT_TYPEDEF_(0x80093109)\0"
	.byte	0x1
	.uleb128 0xaf2
	.ascii "CRYPT_E_ASN1_BADREAL _HRESULT_TYPEDEF_(0x8009310A)\0"
	.byte	0x1
	.uleb128 0xaf3
	.ascii "CRYPT_E_ASN1_BADTAG _HRESULT_TYPEDEF_(0x8009310B)\0"
	.byte	0x1
	.uleb128 0xaf4
	.ascii "CRYPT_E_ASN1_CHOICE _HRESULT_TYPEDEF_(0x8009310C)\0"
	.byte	0x1
	.uleb128 0xaf5
	.ascii "CRYPT_E_ASN1_RULE _HRESULT_TYPEDEF_(0x8009310D)\0"
	.byte	0x1
	.uleb128 0xaf6
	.ascii "CRYPT_E_ASN1_UTF8 _HRESULT_TYPEDEF_(0x8009310E)\0"
	.byte	0x1
	.uleb128 0xaf7
	.ascii "CRYPT_E_ASN1_PDU_TYPE _HRESULT_TYPEDEF_(0x80093133)\0"
	.byte	0x1
	.uleb128 0xaf8
	.ascii "CRYPT_E_ASN1_NYI _HRESULT_TYPEDEF_(0x80093134)\0"
	.byte	0x1
	.uleb128 0xaf9
	.ascii "CRYPT_E_ASN1_EXTENDED _HRESULT_TYPEDEF_(0x80093201)\0"
	.byte	0x1
	.uleb128 0xafa
	.ascii "CRYPT_E_ASN1_NOEOD _HRESULT_TYPEDEF_(0x80093202)\0"
	.byte	0x1
	.uleb128 0xafb
	.ascii "CERTSRV_E_BAD_REQUESTSUBJECT _HRESULT_TYPEDEF_(0x80094001)\0"
	.byte	0x1
	.uleb128 0xafc
	.ascii "CERTSRV_E_NO_REQUEST _HRESULT_TYPEDEF_(0x80094002)\0"
	.byte	0x1
	.uleb128 0xafd
	.ascii "CERTSRV_E_BAD_REQUESTSTATUS _HRESULT_TYPEDEF_(0x80094003)\0"
	.byte	0x1
	.uleb128 0xafe
	.ascii "CERTSRV_E_PROPERTY_EMPTY _HRESULT_TYPEDEF_(0x80094004)\0"
	.byte	0x1
	.uleb128 0xaff
	.ascii "CERTSRV_E_INVALID_CA_CERTIFICATE _HRESULT_TYPEDEF_(0x80094005)\0"
	.byte	0x1
	.uleb128 0xb00
	.ascii "CERTSRV_E_SERVER_SUSPENDED _HRESULT_TYPEDEF_(0x80094006)\0"
	.byte	0x1
	.uleb128 0xb01
	.ascii "CERTSRV_E_ENCODING_LENGTH _HRESULT_TYPEDEF_(0x80094007)\0"
	.byte	0x1
	.uleb128 0xb02
	.ascii "CERTSRV_E_ROLECONFLICT _HRESULT_TYPEDEF_(0x80094008)\0"
	.byte	0x1
	.uleb128 0xb03
	.ascii "CERTSRV_E_RESTRICTEDOFFICER _HRESULT_TYPEDEF_(0x80094009)\0"
	.byte	0x1
	.uleb128 0xb04
	.ascii "CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED _HRESULT_TYPEDEF_(0x8009400A)\0"
	.byte	0x1
	.uleb128 0xb05
	.ascii "CERTSRV_E_NO_VALID_KRA _HRESULT_TYPEDEF_(0x8009400B)\0"
	.byte	0x1
	.uleb128 0xb06
	.ascii "CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL _HRESULT_TYPEDEF_(0x8009400C)\0"
	.byte	0x1
	.uleb128 0xb07
	.ascii "CERTSRV_E_NO_CAADMIN_DEFINED _HRESULT_TYPEDEF_(0x8009400D)\0"
	.byte	0x1
	.uleb128 0xb08
	.ascii "CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE _HRESULT_TYPEDEF_(0x8009400E)\0"
	.byte	0x1
	.uleb128 0xb09
	.ascii "CERTSRV_E_NO_DB_SESSIONS _HRESULT_TYPEDEF_(0x8009400F)\0"
	.byte	0x1
	.uleb128 0xb0a
	.ascii "CERTSRV_E_ALIGNMENT_FAULT _HRESULT_TYPEDEF_(0x80094010)\0"
	.byte	0x1
	.uleb128 0xb0b
	.ascii "CERTSRV_E_ENROLL_DENIED _HRESULT_TYPEDEF_(0x80094011)\0"
	.byte	0x1
	.uleb128 0xb0c
	.ascii "CERTSRV_E_TEMPLATE_DENIED _HRESULT_TYPEDEF_(0x80094012)\0"
	.byte	0x1
	.uleb128 0xb0d
	.ascii "CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE _HRESULT_TYPEDEF_(0x80094013)\0"
	.byte	0x1
	.uleb128 0xb0e
	.ascii "CERTSRV_E_UNSUPPORTED_CERT_TYPE _HRESULT_TYPEDEF_(0x80094800)\0"
	.byte	0x1
	.uleb128 0xb0f
	.ascii "CERTSRV_E_NO_CERT_TYPE _HRESULT_TYPEDEF_(0x80094801)\0"
	.byte	0x1
	.uleb128 0xb10
	.ascii "CERTSRV_E_TEMPLATE_CONFLICT _HRESULT_TYPEDEF_(0x80094802)\0"
	.byte	0x1
	.uleb128 0xb11
	.ascii "CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED _HRESULT_TYPEDEF_(0x80094803)\0"
	.byte	0x1
	.uleb128 0xb12
	.ascii "CERTSRV_E_ARCHIVED_KEY_REQUIRED _HRESULT_TYPEDEF_(0x80094804)\0"
	.byte	0x1
	.uleb128 0xb13
	.ascii "CERTSRV_E_SMIME_REQUIRED _HRESULT_TYPEDEF_(0x80094805)\0"
	.byte	0x1
	.uleb128 0xb14
	.ascii "CERTSRV_E_BAD_RENEWAL_SUBJECT _HRESULT_TYPEDEF_(0x80094806)\0"
	.byte	0x1
	.uleb128 0xb15
	.ascii "CERTSRV_E_BAD_TEMPLATE_VERSION _HRESULT_TYPEDEF_(0x80094807)\0"
	.byte	0x1
	.uleb128 0xb16
	.ascii "CERTSRV_E_TEMPLATE_POLICY_REQUIRED _HRESULT_TYPEDEF_(0x80094808)\0"
	.byte	0x1
	.uleb128 0xb17
	.ascii "CERTSRV_E_SIGNATURE_POLICY_REQUIRED _HRESULT_TYPEDEF_(0x80094809)\0"
	.byte	0x1
	.uleb128 0xb18
	.ascii "CERTSRV_E_SIGNATURE_COUNT _HRESULT_TYPEDEF_(0x8009480A)\0"
	.byte	0x1
	.uleb128 0xb19
	.ascii "CERTSRV_E_SIGNATURE_REJECTED _HRESULT_TYPEDEF_(0x8009480B)\0"
	.byte	0x1
	.uleb128 0xb1a
	.ascii "CERTSRV_E_ISSUANCE_POLICY_REQUIRED _HRESULT_TYPEDEF_(0x8009480C)\0"
	.byte	0x1
	.uleb128 0xb1b
	.ascii "CERTSRV_E_SUBJECT_UPN_REQUIRED _HRESULT_TYPEDEF_(0x8009480D)\0"
	.byte	0x1
	.uleb128 0xb1c
	.ascii "CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED _HRESULT_TYPEDEF_(0x8009480E)\0"
	.byte	0x1
	.uleb128 0xb1d
	.ascii "CERTSRV_E_SUBJECT_DNS_REQUIRED _HRESULT_TYPEDEF_(0x8009480F)\0"
	.byte	0x1
	.uleb128 0xb1e
	.ascii "CERTSRV_E_ARCHIVED_KEY_UNEXPECTED _HRESULT_TYPEDEF_(0x80094810)\0"
	.byte	0x1
	.uleb128 0xb1f
	.ascii "CERTSRV_E_KEY_LENGTH _HRESULT_TYPEDEF_(0x80094811)\0"
	.byte	0x1
	.uleb128 0xb20
	.ascii "CERTSRV_E_SUBJECT_EMAIL_REQUIRED _HRESULT_TYPEDEF_(0x80094812)\0"
	.byte	0x1
	.uleb128 0xb21
	.ascii "CERTSRV_E_UNKNOWN_CERT_TYPE _HRESULT_TYPEDEF_(0x80094813)\0"
	.byte	0x1
	.uleb128 0xb22
	.ascii "CERTSRV_E_CERT_TYPE_OVERLAP _HRESULT_TYPEDEF_(0x80094814)\0"
	.byte	0x1
	.uleb128 0xb23
	.ascii "XENROLL_E_KEY_NOT_EXPORTABLE _HRESULT_TYPEDEF_(0x80095000)\0"
	.byte	0x1
	.uleb128 0xb24
	.ascii "XENROLL_E_CANNOT_ADD_ROOT_CERT _HRESULT_TYPEDEF_(0x80095001)\0"
	.byte	0x1
	.uleb128 0xb25
	.ascii "XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND _HRESULT_TYPEDEF_(0x80095002)\0"
	.byte	0x1
	.uleb128 0xb26
	.ascii "XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH _HRESULT_TYPEDEF_(0x80095003)\0"
	.byte	0x1
	.uleb128 0xb27
	.ascii "XENROLL_E_RESPONSE_KA_HASH_MISMATCH _HRESULT_TYPEDEF_(0x80095004)\0"
	.byte	0x1
	.uleb128 0xb28
	.ascii "XENROLL_E_KEYSPEC_SMIME_MISMATCH _HRESULT_TYPEDEF_(0x80095005)\0"
	.byte	0x1
	.uleb128 0xb29
	.ascii "TRUST_E_SYSTEM_ERROR _HRESULT_TYPEDEF_(0x80096001)\0"
	.byte	0x1
	.uleb128 0xb2a
	.ascii "TRUST_E_NO_SIGNER_CERT _HRESULT_TYPEDEF_(0x80096002)\0"
	.byte	0x1
	.uleb128 0xb2b
	.ascii "TRUST_E_COUNTER_SIGNER _HRESULT_TYPEDEF_(0x80096003)\0"
	.byte	0x1
	.uleb128 0xb2c
	.ascii "TRUST_E_CERT_SIGNATURE _HRESULT_TYPEDEF_(0x80096004)\0"
	.byte	0x1
	.uleb128 0xb2d
	.ascii "TRUST_E_TIME_STAMP _HRESULT_TYPEDEF_(0x80096005)\0"
	.byte	0x1
	.uleb128 0xb2e
	.ascii "TRUST_E_BAD_DIGEST _HRESULT_TYPEDEF_(0x80096010)\0"
	.byte	0x1
	.uleb128 0xb2f
	.ascii "TRUST_E_BASIC_CONSTRAINTS _HRESULT_TYPEDEF_(0x80096019)\0"
	.byte	0x1
	.uleb128 0xb30
	.ascii "TRUST_E_FINANCIAL_CRITERIA _HRESULT_TYPEDEF_(0x8009601E)\0"
	.byte	0x1
	.uleb128 0xb31
	.ascii "MSSIPOTF_E_OUTOFMEMRANGE _HRESULT_TYPEDEF_(0x80097001)\0"
	.byte	0x1
	.uleb128 0xb32
	.ascii "MSSIPOTF_E_CANTGETOBJECT _HRESULT_TYPEDEF_(0x80097002)\0"
	.byte	0x1
	.uleb128 0xb33
	.ascii "MSSIPOTF_E_NOHEADTABLE _HRESULT_TYPEDEF_(0x80097003)\0"
	.byte	0x1
	.uleb128 0xb34
	.ascii "MSSIPOTF_E_BAD_MAGICNUMBER _HRESULT_TYPEDEF_(0x80097004)\0"
	.byte	0x1
	.uleb128 0xb35
	.ascii "MSSIPOTF_E_BAD_OFFSET_TABLE _HRESULT_TYPEDEF_(0x80097005)\0"
	.byte	0x1
	.uleb128 0xb36
	.ascii "MSSIPOTF_E_TABLE_TAGORDER _HRESULT_TYPEDEF_(0x80097006)\0"
	.byte	0x1
	.uleb128 0xb37
	.ascii "MSSIPOTF_E_TABLE_LONGWORD _HRESULT_TYPEDEF_(0x80097007)\0"
	.byte	0x1
	.uleb128 0xb38
	.ascii "MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT _HRESULT_TYPEDEF_(0x80097008)\0"
	.byte	0x1
	.uleb128 0xb39
	.ascii "MSSIPOTF_E_TABLES_OVERLAP _HRESULT_TYPEDEF_(0x80097009)\0"
	.byte	0x1
	.uleb128 0xb3a
	.ascii "MSSIPOTF_E_TABLE_PADBYTES _HRESULT_TYPEDEF_(0x8009700A)\0"
	.byte	0x1
	.uleb128 0xb3b
	.ascii "MSSIPOTF_E_FILETOOSMALL _HRESULT_TYPEDEF_(0x8009700B)\0"
	.byte	0x1
	.uleb128 0xb3c
	.ascii "MSSIPOTF_E_TABLE_CHECKSUM _HRESULT_TYPEDEF_(0x8009700C)\0"
	.byte	0x1
	.uleb128 0xb3d
	.ascii "MSSIPOTF_E_FILE_CHECKSUM _HRESULT_TYPEDEF_(0x8009700D)\0"
	.byte	0x1
	.uleb128 0xb3e
	.ascii "MSSIPOTF_E_FAILED_POLICY _HRESULT_TYPEDEF_(0x80097010)\0"
	.byte	0x1
	.uleb128 0xb3f
	.ascii "MSSIPOTF_E_FAILED_HINTS_CHECK _HRESULT_TYPEDEF_(0x80097011)\0"
	.byte	0x1
	.uleb128 0xb40
	.ascii "MSSIPOTF_E_NOT_OPENTYPE _HRESULT_TYPEDEF_(0x80097012)\0"
	.byte	0x1
	.uleb128 0xb41
	.ascii "MSSIPOTF_E_FILE _HRESULT_TYPEDEF_(0x80097013)\0"
	.byte	0x1
	.uleb128 0xb42
	.ascii "MSSIPOTF_E_CRYPT _HRESULT_TYPEDEF_(0x80097014)\0"
	.byte	0x1
	.uleb128 0xb43
	.ascii "MSSIPOTF_E_BADVERSION _HRESULT_TYPEDEF_(0x80097015)\0"
	.byte	0x1
	.uleb128 0xb44
	.ascii "MSSIPOTF_E_DSIG_STRUCTURE _HRESULT_TYPEDEF_(0x80097016)\0"
	.byte	0x1
	.uleb128 0xb45
	.ascii "MSSIPOTF_E_PCONST_CHECK _HRESULT_TYPEDEF_(0x80097017)\0"
	.byte	0x1
	.uleb128 0xb46
	.ascii "MSSIPOTF_E_STRUCTURE _HRESULT_TYPEDEF_(0x80097018)\0"
	.byte	0x1
	.uleb128 0xb47
	.ascii "NTE_OP_OK 0\0"
	.byte	0x1
	.uleb128 0xb48
	.ascii "TRUST_E_PROVIDER_UNKNOWN _HRESULT_TYPEDEF_(0x800B0001)\0"
	.byte	0x1
	.uleb128 0xb49
	.ascii "TRUST_E_ACTION_UNKNOWN _HRESULT_TYPEDEF_(0x800B0002)\0"
	.byte	0x1
	.uleb128 0xb4a
	.ascii "TRUST_E_SUBJECT_FORM_UNKNOWN _HRESULT_TYPEDEF_(0x800B0003)\0"
	.byte	0x1
	.uleb128 0xb4b
	.ascii "TRUST_E_SUBJECT_NOT_TRUSTED _HRESULT_TYPEDEF_(0x800B0004)\0"
	.byte	0x1
	.uleb128 0xb4c
	.ascii "DIGSIG_E_ENCODE _HRESULT_TYPEDEF_(0x800B0005)\0"
	.byte	0x1
	.uleb128 0xb4d
	.ascii "DIGSIG_E_DECODE _HRESULT_TYPEDEF_(0x800B0006)\0"
	.byte	0x1
	.uleb128 0xb4e
	.ascii "DIGSIG_E_EXTENSIBILITY _HRESULT_TYPEDEF_(0x800B0007)\0"
	.byte	0x1
	.uleb128 0xb4f
	.ascii "DIGSIG_E_CRYPTO _HRESULT_TYPEDEF_(0x800B0008)\0"
	.byte	0x1
	.uleb128 0xb50
	.ascii "PERSIST_E_SIZEDEFINITE _HRESULT_TYPEDEF_(0x800B0009)\0"
	.byte	0x1
	.uleb128 0xb51
	.ascii "PERSIST_E_SIZEINDEFINITE _HRESULT_TYPEDEF_(0x800B000A)\0"
	.byte	0x1
	.uleb128 0xb52
	.ascii "PERSIST_E_NOTSELFSIZING _HRESULT_TYPEDEF_(0x800B000B)\0"
	.byte	0x1
	.uleb128 0xb53
	.ascii "TRUST_E_NOSIGNATURE _HRESULT_TYPEDEF_(0x800B0100)\0"
	.byte	0x1
	.uleb128 0xb54
	.ascii "CERT_E_EXPIRED _HRESULT_TYPEDEF_(0x800B0101)\0"
	.byte	0x1
	.uleb128 0xb55
	.ascii "CERT_E_VALIDITYPERIODNESTING _HRESULT_TYPEDEF_(0x800B0102)\0"
	.byte	0x1
	.uleb128 0xb56
	.ascii "CERT_E_ROLE _HRESULT_TYPEDEF_(0x800B0103)\0"
	.byte	0x1
	.uleb128 0xb57
	.ascii "CERT_E_PATHLENCONST _HRESULT_TYPEDEF_(0x800B0104)\0"
	.byte	0x1
	.uleb128 0xb58
	.ascii "CERT_E_CRITICAL _HRESULT_TYPEDEF_(0x800B0105)\0"
	.byte	0x1
	.uleb128 0xb59
	.ascii "CERT_E_PURPOSE _HRESULT_TYPEDEF_(0x800B0106)\0"
	.byte	0x1
	.uleb128 0xb5a
	.ascii "CERT_E_ISSUERCHAINING _HRESULT_TYPEDEF_(0x800B0107)\0"
	.byte	0x1
	.uleb128 0xb5b
	.ascii "CERT_E_MALFORMED _HRESULT_TYPEDEF_(0x800B0108)\0"
	.byte	0x1
	.uleb128 0xb5c
	.ascii "CERT_E_UNTRUSTEDROOT _HRESULT_TYPEDEF_(0x800B0109)\0"
	.byte	0x1
	.uleb128 0xb5d
	.ascii "CERT_E_CHAINING _HRESULT_TYPEDEF_(0x800B010A)\0"
	.byte	0x1
	.uleb128 0xb5e
	.ascii "TRUST_E_FAIL _HRESULT_TYPEDEF_(0x800B010B)\0"
	.byte	0x1
	.uleb128 0xb5f
	.ascii "CERT_E_REVOKED _HRESULT_TYPEDEF_(0x800B010C)\0"
	.byte	0x1
	.uleb128 0xb60
	.ascii "CERT_E_UNTRUSTEDTESTROOT _HRESULT_TYPEDEF_(0x800B010D)\0"
	.byte	0x1
	.uleb128 0xb61
	.ascii "CERT_E_REVOCATION_FAILURE _HRESULT_TYPEDEF_(0x800B010E)\0"
	.byte	0x1
	.uleb128 0xb62
	.ascii "CERT_E_CN_NO_MATCH _HRESULT_TYPEDEF_(0x800B010F)\0"
	.byte	0x1
	.uleb128 0xb63
	.ascii "CERT_E_WRONG_USAGE _HRESULT_TYPEDEF_(0x800B0110)\0"
	.byte	0x1
	.uleb128 0xb64
	.ascii "TRUST_E_EXPLICIT_DISTRUST _HRESULT_TYPEDEF_(0x800B0111)\0"
	.byte	0x1
	.uleb128 0xb65
	.ascii "CERT_E_UNTRUSTEDCA _HRESULT_TYPEDEF_(0x800B0112)\0"
	.byte	0x1
	.uleb128 0xb66
	.ascii "CERT_E_INVALID_POLICY _HRESULT_TYPEDEF_(0x800B0113)\0"
	.byte	0x1
	.uleb128 0xb67
	.ascii "CERT_E_INVALID_NAME _HRESULT_TYPEDEF_(0x800B0114)\0"
	.byte	0x1
	.uleb128 0xb68
	.ascii "HRESULT_FROM_SETUPAPI(x) ((((x) & (APPLICATION_ERROR_MASK|ERROR_SEVERITY_ERROR))==(APPLICATION_ERROR_MASK|ERROR_SEVERITY_ERROR)) ? ((HRESULT) (((x) & 0x0000FFFF) | (FACILITY_SETUPAPI << 16) | 0x80000000)) : HRESULT_FROM_WIN32(x))\0"
	.byte	0x1
	.uleb128 0xb69
	.ascii "SPAPI_E_EXPECTED_SECTION_NAME _HRESULT_TYPEDEF_(0x800F0000)\0"
	.byte	0x1
	.uleb128 0xb6a
	.ascii "SPAPI_E_BAD_SECTION_NAME_LINE _HRESULT_TYPEDEF_(0x800F0001)\0"
	.byte	0x1
	.uleb128 0xb6b
	.ascii "SPAPI_E_SECTION_NAME_TOO_LONG _HRESULT_TYPEDEF_(0x800F0002)\0"
	.byte	0x1
	.uleb128 0xb6c
	.ascii "SPAPI_E_GENERAL_SYNTAX _HRESULT_TYPEDEF_(0x800F0003)\0"
	.byte	0x1
	.uleb128 0xb6d
	.ascii "SPAPI_E_WRONG_INF_STYLE _HRESULT_TYPEDEF_(0x800F0100)\0"
	.byte	0x1
	.uleb128 0xb6e
	.ascii "SPAPI_E_SECTION_NOT_FOUND _HRESULT_TYPEDEF_(0x800F0101)\0"
	.byte	0x1
	.uleb128 0xb6f
	.ascii "SPAPI_E_LINE_NOT_FOUND _HRESULT_TYPEDEF_(0x800F0102)\0"
	.byte	0x1
	.uleb128 0xb70
	.ascii "SPAPI_E_NO_BACKUP _HRESULT_TYPEDEF_(0x800F0103)\0"
	.byte	0x1
	.uleb128 0xb71
	.ascii "SPAPI_E_NO_ASSOCIATED_CLASS _HRESULT_TYPEDEF_(0x800F0200)\0"
	.byte	0x1
	.uleb128 0xb72
	.ascii "SPAPI_E_CLASS_MISMATCH _HRESULT_TYPEDEF_(0x800F0201)\0"
	.byte	0x1
	.uleb128 0xb73
	.ascii "SPAPI_E_DUPLICATE_FOUND _HRESULT_TYPEDEF_(0x800F0202)\0"
	.byte	0x1
	.uleb128 0xb74
	.ascii "SPAPI_E_NO_DRIVER_SELECTED _HRESULT_TYPEDEF_(0x800F0203)\0"
	.byte	0x1
	.uleb128 0xb75
	.ascii "SPAPI_E_KEY_DOES_NOT_EXIST _HRESULT_TYPEDEF_(0x800F0204)\0"
	.byte	0x1
	.uleb128 0xb76
	.ascii "SPAPI_E_INVALID_DEVINST_NAME _HRESULT_TYPEDEF_(0x800F0205)\0"
	.byte	0x1
	.uleb128 0xb77
	.ascii "SPAPI_E_INVALID_CLASS _HRESULT_TYPEDEF_(0x800F0206)\0"
	.byte	0x1
	.uleb128 0xb78
	.ascii "SPAPI_E_DEVINST_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x800F0207)\0"
	.byte	0x1
	.uleb128 0xb79
	.ascii "SPAPI_E_DEVINFO_NOT_REGISTERED _HRESULT_TYPEDEF_(0x800F0208)\0"
	.byte	0x1
	.uleb128 0xb7a
	.ascii "SPAPI_E_INVALID_REG_PROPERTY _HRESULT_TYPEDEF_(0x800F0209)\0"
	.byte	0x1
	.uleb128 0xb7b
	.ascii "SPAPI_E_NO_INF _HRESULT_TYPEDEF_(0x800F020A)\0"
	.byte	0x1
	.uleb128 0xb7c
	.ascii "SPAPI_E_NO_SUCH_DEVINST _HRESULT_TYPEDEF_(0x800F020B)\0"
	.byte	0x1
	.uleb128 0xb7d
	.ascii "SPAPI_E_CANT_LOAD_CLASS_ICON _HRESULT_TYPEDEF_(0x800F020C)\0"
	.byte	0x1
	.uleb128 0xb7e
	.ascii "SPAPI_E_INVALID_CLASS_INSTALLER _HRESULT_TYPEDEF_(0x800F020D)\0"
	.byte	0x1
	.uleb128 0xb7f
	.ascii "SPAPI_E_DI_DO_DEFAULT _HRESULT_TYPEDEF_(0x800F020E)\0"
	.byte	0x1
	.uleb128 0xb80
	.ascii "SPAPI_E_DI_NOFILECOPY _HRESULT_TYPEDEF_(0x800F020F)\0"
	.byte	0x1
	.uleb128 0xb81
	.ascii "SPAPI_E_INVALID_HWPROFILE _HRESULT_TYPEDEF_(0x800F0210)\0"
	.byte	0x1
	.uleb128 0xb82
	.ascii "SPAPI_E_NO_DEVICE_SELECTED _HRESULT_TYPEDEF_(0x800F0211)\0"
	.byte	0x1
	.uleb128 0xb83
	.ascii "SPAPI_E_DEVINFO_LIST_LOCKED _HRESULT_TYPEDEF_(0x800F0212)\0"
	.byte	0x1
	.uleb128 0xb84
	.ascii "SPAPI_E_DEVINFO_DATA_LOCKED _HRESULT_TYPEDEF_(0x800F0213)\0"
	.byte	0x1
	.uleb128 0xb85
	.ascii "SPAPI_E_DI_BAD_PATH _HRESULT_TYPEDEF_(0x800F0214)\0"
	.byte	0x1
	.uleb128 0xb86
	.ascii "SPAPI_E_NO_CLASSINSTALL_PARAMS _HRESULT_TYPEDEF_(0x800F0215)\0"
	.byte	0x1
	.uleb128 0xb87
	.ascii "SPAPI_E_FILEQUEUE_LOCKED _HRESULT_TYPEDEF_(0x800F0216)\0"
	.byte	0x1
	.uleb128 0xb88
	.ascii "SPAPI_E_BAD_SERVICE_INSTALLSECT _HRESULT_TYPEDEF_(0x800F0217)\0"
	.byte	0x1
	.uleb128 0xb89
	.ascii "SPAPI_E_NO_CLASS_DRIVER_LIST _HRESULT_TYPEDEF_(0x800F0218)\0"
	.byte	0x1
	.uleb128 0xb8a
	.ascii "SPAPI_E_NO_ASSOCIATED_SERVICE _HRESULT_TYPEDEF_(0x800F0219)\0"
	.byte	0x1
	.uleb128 0xb8b
	.ascii "SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE _HRESULT_TYPEDEF_(0x800F021A)\0"
	.byte	0x1
	.uleb128 0xb8c
	.ascii "SPAPI_E_DEVICE_INTERFACE_ACTIVE _HRESULT_TYPEDEF_(0x800F021B)\0"
	.byte	0x1
	.uleb128 0xb8d
	.ascii "SPAPI_E_DEVICE_INTERFACE_REMOVED _HRESULT_TYPEDEF_(0x800F021C)\0"
	.byte	0x1
	.uleb128 0xb8e
	.ascii "SPAPI_E_BAD_INTERFACE_INSTALLSECT _HRESULT_TYPEDEF_(0x800F021D)\0"
	.byte	0x1
	.uleb128 0xb8f
	.ascii "SPAPI_E_NO_SUCH_INTERFACE_CLASS _HRESULT_TYPEDEF_(0x800F021E)\0"
	.byte	0x1
	.uleb128 0xb90
	.ascii "SPAPI_E_INVALID_REFERENCE_STRING _HRESULT_TYPEDEF_(0x800F021F)\0"
	.byte	0x1
	.uleb128 0xb91
	.ascii "SPAPI_E_INVALID_MACHINENAME _HRESULT_TYPEDEF_(0x800F0220)\0"
	.byte	0x1
	.uleb128 0xb92
	.ascii "SPAPI_E_REMOTE_COMM_FAILURE _HRESULT_TYPEDEF_(0x800F0221)\0"
	.byte	0x1
	.uleb128 0xb93
	.ascii "SPAPI_E_MACHINE_UNAVAILABLE _HRESULT_TYPEDEF_(0x800F0222)\0"
	.byte	0x1
	.uleb128 0xb94
	.ascii "SPAPI_E_NO_CONFIGMGR_SERVICES _HRESULT_TYPEDEF_(0x800F0223)\0"
	.byte	0x1
	.uleb128 0xb95
	.ascii "SPAPI_E_INVALID_PROPPAGE_PROVIDER _HRESULT_TYPEDEF_(0x800F0224)\0"
	.byte	0x1
	.uleb128 0xb96
	.ascii "SPAPI_E_NO_SUCH_DEVICE_INTERFACE _HRESULT_TYPEDEF_(0x800F0225)\0"
	.byte	0x1
	.uleb128 0xb97
	.ascii "SPAPI_E_DI_POSTPROCESSING_REQUIRED _HRESULT_TYPEDEF_(0x800F0226)\0"
	.byte	0x1
	.uleb128 0xb98
	.ascii "SPAPI_E_INVALID_COINSTALLER _HRESULT_TYPEDEF_(0x800F0227)\0"
	.byte	0x1
	.uleb128 0xb99
	.ascii "SPAPI_E_NO_COMPAT_DRIVERS _HRESULT_TYPEDEF_(0x800F0228)\0"
	.byte	0x1
	.uleb128 0xb9a
	.ascii "SPAPI_E_NO_DEVICE_ICON _HRESULT_TYPEDEF_(0x800F0229)\0"
	.byte	0x1
	.uleb128 0xb9b
	.ascii "SPAPI_E_INVALID_INF_LOGCONFIG _HRESULT_TYPEDEF_(0x800F022A)\0"
	.byte	0x1
	.uleb128 0xb9c
	.ascii "SPAPI_E_DI_DONT_INSTALL _HRESULT_TYPEDEF_(0x800F022B)\0"
	.byte	0x1
	.uleb128 0xb9d
	.ascii "SPAPI_E_INVALID_FILTER_DRIVER _HRESULT_TYPEDEF_(0x800F022C)\0"
	.byte	0x1
	.uleb128 0xb9e
	.ascii "SPAPI_E_NON_WINDOWS_NT_DRIVER _HRESULT_TYPEDEF_(0x800F022D)\0"
	.byte	0x1
	.uleb128 0xb9f
	.ascii "SPAPI_E_NON_WINDOWS_DRIVER _HRESULT_TYPEDEF_(0x800F022E)\0"
	.byte	0x1
	.uleb128 0xba0
	.ascii "SPAPI_E_NO_CATALOG_FOR_OEM_INF _HRESULT_TYPEDEF_(0x800F022F)\0"
	.byte	0x1
	.uleb128 0xba1
	.ascii "SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE _HRESULT_TYPEDEF_(0x800F0230)\0"
	.byte	0x1
	.uleb128 0xba2
	.ascii "SPAPI_E_NOT_DISABLEABLE _HRESULT_TYPEDEF_(0x800F0231)\0"
	.byte	0x1
	.uleb128 0xba3
	.ascii "SPAPI_E_CANT_REMOVE_DEVINST _HRESULT_TYPEDEF_(0x800F0232)\0"
	.byte	0x1
	.uleb128 0xba4
	.ascii "SPAPI_E_INVALID_TARGET _HRESULT_TYPEDEF_(0x800F0233)\0"
	.byte	0x1
	.uleb128 0xba5
	.ascii "SPAPI_E_DRIVER_NONNATIVE _HRESULT_TYPEDEF_(0x800F0234)\0"
	.byte	0x1
	.uleb128 0xba6
	.ascii "SPAPI_E_IN_WOW64 _HRESULT_TYPEDEF_(0x800F0235)\0"
	.byte	0x1
	.uleb128 0xba7
	.ascii "SPAPI_E_SET_SYSTEM_RESTORE_POINT _HRESULT_TYPEDEF_(0x800F0236)\0"
	.byte	0x1
	.uleb128 0xba8
	.ascii "SPAPI_E_INCORRECTLY_COPIED_INF _HRESULT_TYPEDEF_(0x800F0237)\0"
	.byte	0x1
	.uleb128 0xba9
	.ascii "SPAPI_E_SCE_DISABLED _HRESULT_TYPEDEF_(0x800F0238)\0"
	.byte	0x1
	.uleb128 0xbaa
	.ascii "SPAPI_E_UNKNOWN_EXCEPTION _HRESULT_TYPEDEF_(0x800F0239)\0"
	.byte	0x1
	.uleb128 0xbab
	.ascii "SPAPI_E_PNP_REGISTRY_ERROR _HRESULT_TYPEDEF_(0x800F023A)\0"
	.byte	0x1
	.uleb128 0xbac
	.ascii "SPAPI_E_REMOTE_REQUEST_UNSUPPORTED _HRESULT_TYPEDEF_(0x800F023B)\0"
	.byte	0x1
	.uleb128 0xbad
	.ascii "SPAPI_E_NOT_AN_INSTALLED_OEM_INF _HRESULT_TYPEDEF_(0x800F023C)\0"
	.byte	0x1
	.uleb128 0xbae
	.ascii "SPAPI_E_INF_IN_USE_BY_DEVICES _HRESULT_TYPEDEF_(0x800F023D)\0"
	.byte	0x1
	.uleb128 0xbaf
	.ascii "SPAPI_E_DI_FUNCTION_OBSOLETE _HRESULT_TYPEDEF_(0x800F023E)\0"
	.byte	0x1
	.uleb128 0xbb0
	.ascii "SPAPI_E_NO_AUTHENTICODE_CATALOG _HRESULT_TYPEDEF_(0x800F023F)\0"
	.byte	0x1
	.uleb128 0xbb1
	.ascii "SPAPI_E_AUTHENTICODE_DISALLOWED _HRESULT_TYPEDEF_(0x800F0240)\0"
	.byte	0x1
	.uleb128 0xbb2
	.ascii "SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER _HRESULT_TYPEDEF_(0x800F0241)\0"
	.byte	0x1
	.uleb128 0xbb3
	.ascii "SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED _HRESULT_TYPEDEF_(0x800F0242)\0"
	.byte	0x1
	.uleb128 0xbb4
	.ascii "SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED _HRESULT_TYPEDEF_(0x800F0243)\0"
	.byte	0x1
	.uleb128 0xbb5
	.ascii "SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH _HRESULT_TYPEDEF_(0x800F0244)\0"
	.byte	0x1
	.uleb128 0xbb6
	.ascii "SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE _HRESULT_TYPEDEF_(0x800F0245)\0"
	.byte	0x1
	.uleb128 0xbb7
	.ascii "SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW _HRESULT_TYPEDEF_(0x800F0300)\0"
	.byte	0x1
	.uleb128 0xbb8
	.ascii "SPAPI_E_ERROR_NOT_INSTALLED _HRESULT_TYPEDEF_(0x800F1000)\0"
	.byte	0x1
	.uleb128 0xbb9
	.ascii "SCARD_S_SUCCESS NO_ERROR\0"
	.byte	0x1
	.uleb128 0xbba
	.ascii "SCARD_F_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x80100001)\0"
	.byte	0x1
	.uleb128 0xbbb
	.ascii "SCARD_E_CANCELLED _HRESULT_TYPEDEF_(0x80100002)\0"
	.byte	0x1
	.uleb128 0xbbc
	.ascii "SCARD_E_INVALID_HANDLE _HRESULT_TYPEDEF_(0x80100003)\0"
	.byte	0x1
	.uleb128 0xbbd
	.ascii "SCARD_E_INVALID_PARAMETER _HRESULT_TYPEDEF_(0x80100004)\0"
	.byte	0x1
	.uleb128 0xbbe
	.ascii "SCARD_E_INVALID_TARGET _HRESULT_TYPEDEF_(0x80100005)\0"
	.byte	0x1
	.uleb128 0xbbf
	.ascii "SCARD_E_NO_MEMORY _HRESULT_TYPEDEF_(0x80100006)\0"
	.byte	0x1
	.uleb128 0xbc0
	.ascii "SCARD_F_WAITED_TOO_LONG _HRESULT_TYPEDEF_(0x80100007)\0"
	.byte	0x1
	.uleb128 0xbc1
	.ascii "SCARD_E_INSUFFICIENT_BUFFER _HRESULT_TYPEDEF_(0x80100008)\0"
	.byte	0x1
	.uleb128 0xbc2
	.ascii "SCARD_E_UNKNOWN_READER _HRESULT_TYPEDEF_(0x80100009)\0"
	.byte	0x1
	.uleb128 0xbc3
	.ascii "SCARD_E_TIMEOUT _HRESULT_TYPEDEF_(0x8010000A)\0"
	.byte	0x1
	.uleb128 0xbc4
	.ascii "SCARD_E_SHARING_VIOLATION _HRESULT_TYPEDEF_(0x8010000B)\0"
	.byte	0x1
	.uleb128 0xbc5
	.ascii "SCARD_E_NO_SMARTCARD _HRESULT_TYPEDEF_(0x8010000C)\0"
	.byte	0x1
	.uleb128 0xbc6
	.ascii "SCARD_E_UNKNOWN_CARD _HRESULT_TYPEDEF_(0x8010000D)\0"
	.byte	0x1
	.uleb128 0xbc7
	.ascii "SCARD_E_CANT_DISPOSE _HRESULT_TYPEDEF_(0x8010000E)\0"
	.byte	0x1
	.uleb128 0xbc8
	.ascii "SCARD_E_PROTO_MISMATCH _HRESULT_TYPEDEF_(0x8010000F)\0"
	.byte	0x1
	.uleb128 0xbc9
	.ascii "SCARD_E_NOT_READY _HRESULT_TYPEDEF_(0x80100010)\0"
	.byte	0x1
	.uleb128 0xbca
	.ascii "SCARD_E_INVALID_VALUE _HRESULT_TYPEDEF_(0x80100011)\0"
	.byte	0x1
	.uleb128 0xbcb
	.ascii "SCARD_E_SYSTEM_CANCELLED _HRESULT_TYPEDEF_(0x80100012)\0"
	.byte	0x1
	.uleb128 0xbcc
	.ascii "SCARD_F_COMM_ERROR _HRESULT_TYPEDEF_(0x80100013)\0"
	.byte	0x1
	.uleb128 0xbcd
	.ascii "SCARD_F_UNKNOWN_ERROR _HRESULT_TYPEDEF_(0x80100014)\0"
	.byte	0x1
	.uleb128 0xbce
	.ascii "SCARD_E_INVALID_ATR _HRESULT_TYPEDEF_(0x80100015)\0"
	.byte	0x1
	.uleb128 0xbcf
	.ascii "SCARD_E_NOT_TRANSACTED _HRESULT_TYPEDEF_(0x80100016)\0"
	.byte	0x1
	.uleb128 0xbd0
	.ascii "SCARD_E_READER_UNAVAILABLE _HRESULT_TYPEDEF_(0x80100017)\0"
	.byte	0x1
	.uleb128 0xbd1
	.ascii "SCARD_P_SHUTDOWN _HRESULT_TYPEDEF_(0x80100018)\0"
	.byte	0x1
	.uleb128 0xbd2
	.ascii "SCARD_E_PCI_TOO_SMALL _HRESULT_TYPEDEF_(0x80100019)\0"
	.byte	0x1
	.uleb128 0xbd3
	.ascii "SCARD_E_READER_UNSUPPORTED _HRESULT_TYPEDEF_(0x8010001A)\0"
	.byte	0x1
	.uleb128 0xbd4
	.ascii "SCARD_E_DUPLICATE_READER _HRESULT_TYPEDEF_(0x8010001B)\0"
	.byte	0x1
	.uleb128 0xbd5
	.ascii "SCARD_E_CARD_UNSUPPORTED _HRESULT_TYPEDEF_(0x8010001C)\0"
	.byte	0x1
	.uleb128 0xbd6
	.ascii "SCARD_E_NO_SERVICE _HRESULT_TYPEDEF_(0x8010001D)\0"
	.byte	0x1
	.uleb128 0xbd7
	.ascii "SCARD_E_SERVICE_STOPPED _HRESULT_TYPEDEF_(0x8010001E)\0"
	.byte	0x1
	.uleb128 0xbd8
	.ascii "SCARD_E_UNEXPECTED _HRESULT_TYPEDEF_(0x8010001F)\0"
	.byte	0x1
	.uleb128 0xbd9
	.ascii "SCARD_E_ICC_INSTALLATION _HRESULT_TYPEDEF_(0x80100020)\0"
	.byte	0x1
	.uleb128 0xbda
	.ascii "SCARD_E_ICC_CREATEORDER _HRESULT_TYPEDEF_(0x80100021)\0"
	.byte	0x1
	.uleb128 0xbdb
	.ascii "SCARD_E_UNSUPPORTED_FEATURE _HRESULT_TYPEDEF_(0x80100022)\0"
	.byte	0x1
	.uleb128 0xbdc
	.ascii "SCARD_E_DIR_NOT_FOUND _HRESULT_TYPEDEF_(0x80100023)\0"
	.byte	0x1
	.uleb128 0xbdd
	.ascii "SCARD_E_FILE_NOT_FOUND _HRESULT_TYPEDEF_(0x80100024)\0"
	.byte	0x1
	.uleb128 0xbde
	.ascii "SCARD_E_NO_DIR _HRESULT_TYPEDEF_(0x80100025)\0"
	.byte	0x1
	.uleb128 0xbdf
	.ascii "SCARD_E_NO_FILE _HRESULT_TYPEDEF_(0x80100026)\0"
	.byte	0x1
	.uleb128 0xbe0
	.ascii "SCARD_E_NO_ACCESS _HRESULT_TYPEDEF_(0x80100027)\0"
	.byte	0x1
	.uleb128 0xbe1
	.ascii "SCARD_E_WRITE_TOO_MANY _HRESULT_TYPEDEF_(0x80100028)\0"
	.byte	0x1
	.uleb128 0xbe2
	.ascii "SCARD_E_BAD_SEEK _HRESULT_TYPEDEF_(0x80100029)\0"
	.byte	0x1
	.uleb128 0xbe3
	.ascii "SCARD_E_INVALID_CHV _HRESULT_TYPEDEF_(0x8010002A)\0"
	.byte	0x1
	.uleb128 0xbe4
	.ascii "SCARD_E_UNKNOWN_RES_MNG _HRESULT_TYPEDEF_(0x8010002B)\0"
	.byte	0x1
	.uleb128 0xbe5
	.ascii "SCARD_E_NO_SUCH_CERTIFICATE _HRESULT_TYPEDEF_(0x8010002C)\0"
	.byte	0x1
	.uleb128 0xbe6
	.ascii "SCARD_E_CERTIFICATE_UNAVAILABLE _HRESULT_TYPEDEF_(0x8010002D)\0"
	.byte	0x1
	.uleb128 0xbe7
	.ascii "SCARD_E_NO_READERS_AVAILABLE _HRESULT_TYPEDEF_(0x8010002E)\0"
	.byte	0x1
	.uleb128 0xbe8
	.ascii "SCARD_E_COMM_DATA_LOST _HRESULT_TYPEDEF_(0x8010002F)\0"
	.byte	0x1
	.uleb128 0xbe9
	.ascii "SCARD_E_NO_KEY_CONTAINER _HRESULT_TYPEDEF_(0x80100030)\0"
	.byte	0x1
	.uleb128 0xbea
	.ascii "SCARD_E_SERVER_TOO_BUSY _HRESULT_TYPEDEF_(0x80100031)\0"
	.byte	0x1
	.uleb128 0xbeb
	.ascii "SCARD_W_UNSUPPORTED_CARD _HRESULT_TYPEDEF_(0x80100065)\0"
	.byte	0x1
	.uleb128 0xbec
	.ascii "SCARD_W_UNRESPONSIVE_CARD _HRESULT_TYPEDEF_(0x80100066)\0"
	.byte	0x1
	.uleb128 0xbed
	.ascii "SCARD_W_UNPOWERED_CARD _HRESULT_TYPEDEF_(0x80100067)\0"
	.byte	0x1
	.uleb128 0xbee
	.ascii "SCARD_W_RESET_CARD _HRESULT_TYPEDEF_(0x80100068)\0"
	.byte	0x1
	.uleb128 0xbef
	.ascii "SCARD_W_REMOVED_CARD _HRESULT_TYPEDEF_(0x80100069)\0"
	.byte	0x1
	.uleb128 0xbf0
	.ascii "SCARD_W_SECURITY_VIOLATION _HRESULT_TYPEDEF_(0x8010006A)\0"
	.byte	0x1
	.uleb128 0xbf1
	.ascii "SCARD_W_WRONG_CHV _HRESULT_TYPEDEF_(0x8010006B)\0"
	.byte	0x1
	.uleb128 0xbf2
	.ascii "SCARD_W_CHV_BLOCKED _HRESULT_TYPEDEF_(0x8010006C)\0"
	.byte	0x1
	.uleb128 0xbf3
	.ascii "SCARD_W_EOF _HRESULT_TYPEDEF_(0x8010006D)\0"
	.byte	0x1
	.uleb128 0xbf4
	.ascii "SCARD_W_CANCELLED_BY_USER _HRESULT_TYPEDEF_(0x8010006E)\0"
	.byte	0x1
	.uleb128 0xbf5
	.ascii "SCARD_W_CARD_NOT_AUTHENTICATED _HRESULT_TYPEDEF_(0x8010006F)\0"
	.byte	0x1
	.uleb128 0xbf6
	.ascii "SCARD_W_CACHE_ITEM_NOT_FOUND _HRESULT_TYPEDEF_(0x80100070)\0"
	.byte	0x1
	.uleb128 0xbf7
	.ascii "SCARD_W_CACHE_ITEM_STALE _HRESULT_TYPEDEF_(0x80100071)\0"
	.byte	0x1
	.uleb128 0xbf8
	.ascii "COMADMIN_E_OBJECTERRORS _HRESULT_TYPEDEF_(0x80110401)\0"
	.byte	0x1
	.uleb128 0xbf9
	.ascii "COMADMIN_E_OBJECTINVALID _HRESULT_TYPEDEF_(0x80110402)\0"
	.byte	0x1
	.uleb128 0xbfa
	.ascii "COMADMIN_E_KEYMISSING _HRESULT_TYPEDEF_(0x80110403)\0"
	.byte	0x1
	.uleb128 0xbfb
	.ascii "COMADMIN_E_ALREADYINSTALLED _HRESULT_TYPEDEF_(0x80110404)\0"
	.byte	0x1
	.uleb128 0xbfc
	.ascii "COMADMIN_E_APP_FILE_WRITEFAIL _HRESULT_TYPEDEF_(0x80110407)\0"
	.byte	0x1
	.uleb128 0xbfd
	.ascii "COMADMIN_E_APP_FILE_READFAIL _HRESULT_TYPEDEF_(0x80110408)\0"
	.byte	0x1
	.uleb128 0xbfe
	.ascii "COMADMIN_E_APP_FILE_VERSION _HRESULT_TYPEDEF_(0x80110409)\0"
	.byte	0x1
	.uleb128 0xbff
	.ascii "COMADMIN_E_BADPATH _HRESULT_TYPEDEF_(0x8011040A)\0"
	.byte	0x1
	.uleb128 0xc00
	.ascii "COMADMIN_E_APPLICATIONEXISTS _HRESULT_TYPEDEF_(0x8011040B)\0"
	.byte	0x1
	.uleb128 0xc01
	.ascii "COMADMIN_E_ROLEEXISTS _HRESULT_TYPEDEF_(0x8011040C)\0"
	.byte	0x1
	.uleb128 0xc02
	.ascii "COMADMIN_E_CANTCOPYFILE _HRESULT_TYPEDEF_(0x8011040D)\0"
	.byte	0x1
	.uleb128 0xc03
	.ascii "COMADMIN_E_NOUSER _HRESULT_TYPEDEF_(0x8011040F)\0"
	.byte	0x1
	.uleb128 0xc04
	.ascii "COMADMIN_E_INVALIDUSERIDS _HRESULT_TYPEDEF_(0x80110410)\0"
	.byte	0x1
	.uleb128 0xc05
	.ascii "COMADMIN_E_NOREGISTRYCLSID _HRESULT_TYPEDEF_(0x80110411)\0"
	.byte	0x1
	.uleb128 0xc06
	.ascii "COMADMIN_E_BADREGISTRYPROGID _HRESULT_TYPEDEF_(0x80110412)\0"
	.byte	0x1
	.uleb128 0xc07
	.ascii "COMADMIN_E_AUTHENTICATIONLEVEL _HRESULT_TYPEDEF_(0x80110413)\0"
	.byte	0x1
	.uleb128 0xc08
	.ascii "COMADMIN_E_USERPASSWDNOTVALID _HRESULT_TYPEDEF_(0x80110414)\0"
	.byte	0x1
	.uleb128 0xc09
	.ascii "COMADMIN_E_CLSIDORIIDMISMATCH _HRESULT_TYPEDEF_(0x80110418)\0"
	.byte	0x1
	.uleb128 0xc0a
	.ascii "COMADMIN_E_REMOTEINTERFACE _HRESULT_TYPEDEF_(0x80110419)\0"
	.byte	0x1
	.uleb128 0xc0b
	.ascii "COMADMIN_E_DLLREGISTERSERVER _HRESULT_TYPEDEF_(0x8011041A)\0"
	.byte	0x1
	.uleb128 0xc0c
	.ascii "COMADMIN_E_NOSERVERSHARE _HRESULT_TYPEDEF_(0x8011041B)\0"
	.byte	0x1
	.uleb128 0xc0d
	.ascii "COMADMIN_E_DLLLOADFAILED _HRESULT_TYPEDEF_(0x8011041D)\0"
	.byte	0x1
	.uleb128 0xc0e
	.ascii "COMADMIN_E_BADREGISTRYLIBID _HRESULT_TYPEDEF_(0x8011041E)\0"
	.byte	0x1
	.uleb128 0xc0f
	.ascii "COMADMIN_E_APPDIRNOTFOUND _HRESULT_TYPEDEF_(0x8011041F)\0"
	.byte	0x1
	.uleb128 0xc10
	.ascii "COMADMIN_E_REGISTRARFAILED _HRESULT_TYPEDEF_(0x80110423)\0"
	.byte	0x1
	.uleb128 0xc11
	.ascii "COMADMIN_E_COMPFILE_DOESNOTEXIST _HRESULT_TYPEDEF_(0x80110424)\0"
	.byte	0x1
	.uleb128 0xc12
	.ascii "COMADMIN_E_COMPFILE_LOADDLLFAIL _HRESULT_TYPEDEF_(0x80110425)\0"
	.byte	0x1
	.uleb128 0xc13
	.ascii "COMADMIN_E_COMPFILE_GETCLASSOBJ _HRESULT_TYPEDEF_(0x80110426)\0"
	.byte	0x1
	.uleb128 0xc14
	.ascii "COMADMIN_E_COMPFILE_CLASSNOTAVAIL _HRESULT_TYPEDEF_(0x80110427)\0"
	.byte	0x1
	.uleb128 0xc15
	.ascii "COMADMIN_E_COMPFILE_BADTLB _HRESULT_TYPEDEF_(0x80110428)\0"
	.byte	0x1
	.uleb128 0xc16
	.ascii "COMADMIN_E_COMPFILE_NOTINSTALLABLE _HRESULT_TYPEDEF_(0x80110429)\0"
	.byte	0x1
	.uleb128 0xc17
	.ascii "COMADMIN_E_NOTCHANGEABLE _HRESULT_TYPEDEF_(0x8011042A)\0"
	.byte	0x1
	.uleb128 0xc18
	.ascii "COMADMIN_E_NOTDELETEABLE _HRESULT_TYPEDEF_(0x8011042B)\0"
	.byte	0x1
	.uleb128 0xc19
	.ascii "COMADMIN_E_SESSION _HRESULT_TYPEDEF_(0x8011042C)\0"
	.byte	0x1
	.uleb128 0xc1a
	.ascii "COMADMIN_E_COMP_MOVE_LOCKED _HRESULT_TYPEDEF_(0x8011042D)\0"
	.byte	0x1
	.uleb128 0xc1b
	.ascii "COMADMIN_E_COMP_MOVE_BAD_DEST _HRESULT_TYPEDEF_(0x8011042E)\0"
	.byte	0x1
	.uleb128 0xc1c
	.ascii "COMADMIN_E_REGISTERTLB _HRESULT_TYPEDEF_(0x80110430)\0"
	.byte	0x1
	.uleb128 0xc1d
	.ascii "COMADMIN_E_SYSTEMAPP _HRESULT_TYPEDEF_(0x80110433)\0"
	.byte	0x1
	.uleb128 0xc1e
	.ascii "COMADMIN_E_COMPFILE_NOREGISTRAR _HRESULT_TYPEDEF_(0x80110434)\0"
	.byte	0x1
	.uleb128 0xc1f
	.ascii "COMADMIN_E_COREQCOMPINSTALLED _HRESULT_TYPEDEF_(0x80110435)\0"
	.byte	0x1
	.uleb128 0xc20
	.ascii "COMADMIN_E_SERVICENOTINSTALLED _HRESULT_TYPEDEF_(0x80110436)\0"
	.byte	0x1
	.uleb128 0xc21
	.ascii "COMADMIN_E_PROPERTYSAVEFAILED _HRESULT_TYPEDEF_(0x80110437)\0"
	.byte	0x1
	.uleb128 0xc22
	.ascii "COMADMIN_E_OBJECTEXISTS _HRESULT_TYPEDEF_(0x80110438)\0"
	.byte	0x1
	.uleb128 0xc23
	.ascii "COMADMIN_E_COMPONENTEXISTS _HRESULT_TYPEDEF_(0x80110439)\0"
	.byte	0x1
	.uleb128 0xc24
	.ascii "COMADMIN_E_REGFILE_CORRUPT _HRESULT_TYPEDEF_(0x8011043B)\0"
	.byte	0x1
	.uleb128 0xc25
	.ascii "COMADMIN_E_PROPERTY_OVERFLOW _HRESULT_TYPEDEF_(0x8011043C)\0"
	.byte	0x1
	.uleb128 0xc26
	.ascii "COMADMIN_E_NOTINREGISTRY _HRESULT_TYPEDEF_(0x8011043E)\0"
	.byte	0x1
	.uleb128 0xc27
	.ascii "COMADMIN_E_OBJECTNOTPOOLABLE _HRESULT_TYPEDEF_(0x8011043F)\0"
	.byte	0x1
	.uleb128 0xc28
	.ascii "COMADMIN_E_APPLID_MATCHES_CLSID _HRESULT_TYPEDEF_(0x80110446)\0"
	.byte	0x1
	.uleb128 0xc29
	.ascii "COMADMIN_E_ROLE_DOES_NOT_EXIST _HRESULT_TYPEDEF_(0x80110447)\0"
	.byte	0x1
	.uleb128 0xc2a
	.ascii "COMADMIN_E_START_APP_NEEDS_COMPONENTS _HRESULT_TYPEDEF_(0x80110448)\0"
	.byte	0x1
	.uleb128 0xc2b
	.ascii "COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM _HRESULT_TYPEDEF_(0x80110449)\0"
	.byte	0x1
	.uleb128 0xc2c
	.ascii "COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY _HRESULT_TYPEDEF_(0x8011044A)\0"
	.byte	0x1
	.uleb128 0xc2d
	.ascii "COMADMIN_E_CAN_NOT_START_APP _HRESULT_TYPEDEF_(0x8011044B)\0"
	.byte	0x1
	.uleb128 0xc2e
	.ascii "COMADMIN_E_CAN_NOT_EXPORT_SYS_APP _HRESULT_TYPEDEF_(0x8011044C)\0"
	.byte	0x1
	.uleb128 0xc2f
	.ascii "COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT _HRESULT_TYPEDEF_(0x8011044D)\0"
	.byte	0x1
	.uleb128 0xc30
	.ascii "COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER _HRESULT_TYPEDEF_(0x8011044E)\0"
	.byte	0x1
	.uleb128 0xc31
	.ascii "COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE _HRESULT_TYPEDEF_(0x8011044F)\0"
	.byte	0x1
	.uleb128 0xc32
	.ascii "COMADMIN_E_BASE_PARTITION_ONLY _HRESULT_TYPEDEF_(0x80110450)\0"
	.byte	0x1
	.uleb128 0xc33
	.ascii "COMADMIN_E_START_APP_DISABLED _HRESULT_TYPEDEF_(0x80110451)\0"
	.byte	0x1
	.uleb128 0xc34
	.ascii "COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME _HRESULT_TYPEDEF_(0x80110457)\0"
	.byte	0x1
	.uleb128 0xc35
	.ascii "COMADMIN_E_CAT_INVALID_PARTITION_NAME _HRESULT_TYPEDEF_(0x80110458)\0"
	.byte	0x1
	.uleb128 0xc36
	.ascii "COMADMIN_E_CAT_PARTITION_IN_USE _HRESULT_TYPEDEF_(0x80110459)\0"
	.byte	0x1
	.uleb128 0xc37
	.ascii "COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES _HRESULT_TYPEDEF_(0x8011045A)\0"
	.byte	0x1
	.uleb128 0xc38
	.ascii "COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED _HRESULT_TYPEDEF_(0x8011045B)\0"
	.byte	0x1
	.uleb128 0xc39
	.ascii "COMADMIN_E_AMBIGUOUS_APPLICATION_NAME _HRESULT_TYPEDEF_(0x8011045C)\0"
	.byte	0x1
	.uleb128 0xc3a
	.ascii "COMADMIN_E_AMBIGUOUS_PARTITION_NAME _HRESULT_TYPEDEF_(0x8011045D)\0"
	.byte	0x1
	.uleb128 0xc3b
	.ascii "COMADMIN_E_REGDB_NOTINITIALIZED _HRESULT_TYPEDEF_(0x80110472)\0"
	.byte	0x1
	.uleb128 0xc3c
	.ascii "COMADMIN_E_REGDB_NOTOPEN _HRESULT_TYPEDEF_(0x80110473)\0"
	.byte	0x1
	.uleb128 0xc3d
	.ascii "COMADMIN_E_REGDB_SYSTEMERR _HRESULT_TYPEDEF_(0x80110474)\0"
	.byte	0x1
	.uleb128 0xc3e
	.ascii "COMADMIN_E_REGDB_ALREADYRUNNING _HRESULT_TYPEDEF_(0x80110475)\0"
	.byte	0x1
	.uleb128 0xc3f
	.ascii "COMADMIN_E_MIG_VERSIONNOTSUPPORTED _HRESULT_TYPEDEF_(0x80110480)\0"
	.byte	0x1
	.uleb128 0xc40
	.ascii "COMADMIN_E_MIG_SCHEMANOTFOUND _HRESULT_TYPEDEF_(0x80110481)\0"
	.byte	0x1
	.uleb128 0xc41
	.ascii "COMADMIN_E_CAT_BITNESSMISMATCH _HRESULT_TYPEDEF_(0x80110482)\0"
	.byte	0x1
	.uleb128 0xc42
	.ascii "COMADMIN_E_CAT_UNACCEPTABLEBITNESS _HRESULT_TYPEDEF_(0x80110483)\0"
	.byte	0x1
	.uleb128 0xc43
	.ascii "COMADMIN_E_CAT_WRONGAPPBITNESS _HRESULT_TYPEDEF_(0x80110484)\0"
	.byte	0x1
	.uleb128 0xc44
	.ascii "COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80110485)\0"
	.byte	0x1
	.uleb128 0xc45
	.ascii "COMADMIN_E_CAT_SERVERFAULT _HRESULT_TYPEDEF_(0x80110486)\0"
	.byte	0x1
	.uleb128 0xc46
	.ascii "COMQC_E_APPLICATION_NOT_QUEUED _HRESULT_TYPEDEF_(0x80110600)\0"
	.byte	0x1
	.uleb128 0xc47
	.ascii "COMQC_E_NO_QUEUEABLE_INTERFACES _HRESULT_TYPEDEF_(0x80110601)\0"
	.byte	0x1
	.uleb128 0xc48
	.ascii "COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x80110602)\0"
	.byte	0x1
	.uleb128 0xc49
	.ascii "COMQC_E_NO_IPERSISTSTREAM _HRESULT_TYPEDEF_(0x80110603)\0"
	.byte	0x1
	.uleb128 0xc4a
	.ascii "COMQC_E_BAD_MESSAGE _HRESULT_TYPEDEF_(0x80110604)\0"
	.byte	0x1
	.uleb128 0xc4b
	.ascii "COMQC_E_UNAUTHENTICATED _HRESULT_TYPEDEF_(0x80110605)\0"
	.byte	0x1
	.uleb128 0xc4c
	.ascii "COMQC_E_UNTRUSTED_ENQUEUER _HRESULT_TYPEDEF_(0x80110606)\0"
	.byte	0x1
	.uleb128 0xc4d
	.ascii "MSDTC_E_DUPLICATE_RESOURCE _HRESULT_TYPEDEF_(0x80110701)\0"
	.byte	0x1
	.uleb128 0xc4e
	.ascii "COMADMIN_E_OBJECT_PARENT_MISSING _HRESULT_TYPEDEF_(0x80110808)\0"
	.byte	0x1
	.uleb128 0xc4f
	.ascii "COMADMIN_E_OBJECT_DOES_NOT_EXIST _HRESULT_TYPEDEF_(0x80110809)\0"
	.byte	0x1
	.uleb128 0xc50
	.ascii "COMADMIN_E_APP_NOT_RUNNING _HRESULT_TYPEDEF_(0x8011080A)\0"
	.byte	0x1
	.uleb128 0xc51
	.ascii "COMADMIN_E_INVALID_PARTITION _HRESULT_TYPEDEF_(0x8011080B)\0"
	.byte	0x1
	.uleb128 0xc52
	.ascii "COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE _HRESULT_TYPEDEF_(0x8011080D)\0"
	.byte	0x1
	.uleb128 0xc53
	.ascii "COMADMIN_E_USER_IN_SET _HRESULT_TYPEDEF_(0x8011080E)\0"
	.byte	0x1
	.uleb128 0xc54
	.ascii "COMADMIN_E_CANTRECYCLELIBRARYAPPS _HRESULT_TYPEDEF_(0x8011080F)\0"
	.byte	0x1
	.uleb128 0xc55
	.ascii "COMADMIN_E_CANTRECYCLESERVICEAPPS _HRESULT_TYPEDEF_(0x80110811)\0"
	.byte	0x1
	.uleb128 0xc56
	.ascii "COMADMIN_E_PROCESSALREADYRECYCLED _HRESULT_TYPEDEF_(0x80110812)\0"
	.byte	0x1
	.uleb128 0xc57
	.ascii "COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED _HRESULT_TYPEDEF_(0x80110813)\0"
	.byte	0x1
	.uleb128 0xc58
	.ascii "COMADMIN_E_CANTMAKEINPROCSERVICE _HRESULT_TYPEDEF_(0x80110814)\0"
	.byte	0x1
	.uleb128 0xc59
	.ascii "COMADMIN_E_PROGIDINUSEBYCLSID _HRESULT_TYPEDEF_(0x80110815)\0"
	.byte	0x1
	.uleb128 0xc5a
	.ascii "COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET _HRESULT_TYPEDEF_(0x80110816)\0"
	.byte	0x1
	.uleb128 0xc5b
	.ascii "COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED _HRESULT_TYPEDEF_(0x80110817)\0"
	.byte	0x1
	.uleb128 0xc5c
	.ascii "COMADMIN_E_PARTITION_ACCESSDENIED _HRESULT_TYPEDEF_(0x80110818)\0"
	.byte	0x1
	.uleb128 0xc5d
	.ascii "COMADMIN_E_PARTITION_MSI_ONLY _HRESULT_TYPEDEF_(0x80110819)\0"
	.byte	0x1
	.uleb128 0xc5e
	.ascii "COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT _HRESULT_TYPEDEF_(0x8011081A)\0"
	.byte	0x1
	.uleb128 0xc5f
	.ascii "COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS _HRESULT_TYPEDEF_(0x8011081B)\0"
	.byte	0x1
	.uleb128 0xc60
	.ascii "COMADMIN_E_COMP_MOVE_SOURCE _HRESULT_TYPEDEF_(0x8011081C)\0"
	.byte	0x1
	.uleb128 0xc61
	.ascii "COMADMIN_E_COMP_MOVE_DEST _HRESULT_TYPEDEF_(0x8011081D)\0"
	.byte	0x1
	.uleb128 0xc62
	.ascii "COMADMIN_E_COMP_MOVE_PRIVATE _HRESULT_TYPEDEF_(0x8011081E)\0"
	.byte	0x1
	.uleb128 0xc63
	.ascii "COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET _HRESULT_TYPEDEF_(0x8011081F)\0"
	.byte	0x1
	.uleb128 0xc64
	.ascii "COMADMIN_E_CANNOT_ALIAS_EVENTCLASS _HRESULT_TYPEDEF_(0x80110820)\0"
	.byte	0x1
	.uleb128 0xc65
	.ascii "COMADMIN_E_PRIVATE_ACCESSDENIED _HRESULT_TYPEDEF_(0x80110821)\0"
	.byte	0x1
	.uleb128 0xc66
	.ascii "COMADMIN_E_SAFERINVALID _HRESULT_TYPEDEF_(0x80110822)\0"
	.byte	0x1
	.uleb128 0xc67
	.ascii "COMADMIN_E_REGISTRY_ACCESSDENIED _HRESULT_TYPEDEF_(0x80110823)\0"
	.byte	0x1
	.uleb128 0xc68
	.ascii "COMADMIN_E_PARTITIONS_DISABLED _HRESULT_TYPEDEF_(0x80110824)\0"
	.byte	0x1
	.uleb128 0xc6a
	.ascii "VSS_E_BAD_STATE _HRESULT_TYPEDEF_(0x80042301)\0"
	.byte	0x1
	.uleb128 0xc6b
	.ascii "VSS_E_LEGACY_PROVIDER _HRESULT_TYPEDEF_(0x800423F7)\0"
	.byte	0x1
	.uleb128 0xc6c
	.ascii "VSS_E_RESYNC_IN_PROGRESS _HRESULT_TYPEDEF_(0x800423FF)\0"
	.byte	0x1
	.uleb128 0xc6d
	.ascii "VSS_E_SNAPSHOT_NOT_IN_SET _HRESULT_TYPEDEF_(0x8004232B)\0"
	.byte	0x1
	.uleb128 0xc6e
	.ascii "VSS_E_MAXIMUM_NUMBER_OF_VOLUMES_REACHED _HRESULT_TYPEDEF_(0x80042312)\0"
	.byte	0x1
	.uleb128 0xc6f
	.ascii "VSS_E_MAXIMUM_NUMBER_OF_SNAPSHOTS_REACHED _HRESULT_TYPEDEF_(0x80042317)\0"
	.byte	0x1
	.uleb128 0xc70
	.ascii "VSS_E_NESTED_VOLUME_LIMIT _HRESULT_TYPEDEF_(0x8004232C)\0"
	.byte	0x1
	.uleb128 0xc71
	.ascii "VSS_E_OBJECT_NOT_FOUND _HRESULT_TYPEDEF_(0x80042308)\0"
	.byte	0x1
	.uleb128 0xc72
	.ascii "VSS_E_PROVIDER_NOT_REGISTERED _HRESULT_TYPEDEF_(0x80042304)\0"
	.byte	0x1
	.uleb128 0xc73
	.ascii "VSS_E_PROVIDER_VETO _HRESULT_TYPEDEF_(0x80042306)\0"
	.byte	0x1
	.uleb128 0xc74
	.ascii "VSS_E_VOLUME_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8004230C)\0"
	.byte	0x1
	.uleb128 0xc75
	.ascii "VSS_E_VOLUME_NOT_SUPPORTED_BY_PROVIDER _HRESULT_TYPEDEF_(0x8004230E)\0"
	.byte	0x1
	.uleb128 0xc76
	.ascii "VSS_E_UNEXPECTED _HRESULT_TYPEDEF_(0x80042302)\0"
	.byte	0x1
	.uleb128 0xc77
	.ascii "VSS_E_UNEXPECTED_PROVIDER_ERROR _HRESULT_TYPEDEF_(0x8004230F)\0"
	.byte	0x1
	.uleb128 0xc78
	.ascii "VSS_E_UNSELECTED_VOLUME _HRESULT_TYPEDEF_(0x8004232A)\0"
	.byte	0x1
	.uleb128 0xc79
	.ascii "VSS_E_CANNOT_REVERT_DISKID _HRESULT_TYPEDEF_(0x800423FE)\0"
	.byte	0x1
	.uleb128 0xc7a
	.ascii "VSS_E_INVALID_XML_DOCUMENT _HRESULT_TYPEDEF_(0x80042311)\0"
	.byte	0x1
	.uleb128 0xc7b
	.ascii "VSS_E_OBJECT_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x8004230D)\0"
	.file 359 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/fltwinerror.h"
	.byte	0x3
	.uleb128 0xcc9
	.uleb128 0x167
	.byte	0x1
	.uleb128 0x7
	.ascii "_FLT_WINERROR_ \0"
	.byte	0x1
	.uleb128 0xb
	.ascii "FILTER_HRESULT_FROM_FLT_NTSTATUS(x) (NT_ASSERT((x & 0xfff0000) == 0x001c0000),(HRESULT) (((x) & 0x8000ffff) | (FACILITY_USERMODE_FILTER_MANAGER << 16)))\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "FACILITY_USERMODE_FILTER_MANAGER 0x1f\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "ERROR_FLT_IO_COMPLETE ((HRESULT)0x001f0001)\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "ERROR_FLT_NO_HANDLER_DEFINED ((HRESULT)0x801f0001)\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "ERROR_FLT_CONTEXT_ALREADY_DEFINED ((HRESULT)0x801f0002)\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "ERROR_FLT_INVALID_ASYNCHRONOUS_REQUEST ((HRESULT)0x801f0003)\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "ERROR_FLT_DISALLOW_FAST_IO ((HRESULT)0x801f0004)\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "ERROR_FLT_INVALID_NAME_REQUEST ((HRESULT)0x801f0005)\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "ERROR_FLT_NOT_SAFE_TO_POST_OPERATION ((HRESULT)0x801f0006)\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "ERROR_FLT_NOT_INITIALIZED ((HRESULT)0x801f0007)\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "ERROR_FLT_FILTER_NOT_READY ((HRESULT)0x801f0008)\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "ERROR_FLT_POST_OPERATION_CLEANUP ((HRESULT)0x801f0009)\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "ERROR_FLT_INTERNAL_ERROR ((HRESULT)0x801f000a)\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "ERROR_FLT_DELETING_OBJECT ((HRESULT)0x801f000b)\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "ERROR_FLT_MUST_BE_NONPAGED_POOL ((HRESULT)0x801f000c)\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "ERROR_FLT_DUPLICATE_ENTRY ((HRESULT)0x801f000d)\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "ERROR_FLT_CBDQ_DISABLED ((HRESULT)0x801f000e)\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "ERROR_FLT_DO_NOT_ATTACH ((HRESULT)0x801f000f)\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "ERROR_FLT_DO_NOT_DETACH ((HRESULT)0x801f0010)\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "ERROR_FLT_INSTANCE_ALTITUDE_COLLISION ((HRESULT)0x801f0011)\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "ERROR_FLT_INSTANCE_NAME_COLLISION ((HRESULT)0x801f0012)\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "ERROR_FLT_FILTER_NOT_FOUND ((HRESULT)0x801f0013)\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "ERROR_FLT_VOLUME_NOT_FOUND ((HRESULT)0x801f0014)\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "ERROR_FLT_INSTANCE_NOT_FOUND ((HRESULT)0x801f0015)\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "ERROR_FLT_CONTEXT_ALLOCATION_NOT_FOUND ((HRESULT)0x801f0016)\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "ERROR_FLT_INVALID_CONTEXT_REGISTRATION ((HRESULT)0x801f0017)\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "ERROR_FLT_NAME_CACHE_MISS ((HRESULT)0x801f0018)\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "ERROR_FLT_NO_DEVICE_OBJECT ((HRESULT)0x801f0019)\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "ERROR_FLT_VOLUME_ALREADY_MOUNTED ((HRESULT)0x801f001a)\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "ERROR_FLT_ALREADY_ENLISTED ((HRESULT)0x801f001b)\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "ERROR_FLT_CONTEXT_ALREADY_LINKED ((HRESULT)0x801F001c)\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "ERROR_FLT_NO_WAITER_FOR_REPLY ((HRESULT)0x801f0020)\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "ERROR_FLT_REGISTRATION_BUSY ((HRESULT)0x801F0023)\0"
	.byte	0x4
	.byte	0x2
	.uleb128 0xccb
	.ascii "__IN__WINERROR_\0"
	.byte	0x4
	.file 360 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/timezoneapi.h"
	.byte	0x3
	.uleb128 0x946
	.uleb128 0x168
	.byte	0x1
	.uleb128 0x6
	.ascii "_TIMEZONEAPI_H_ \0"
	.byte	0x1
	.uleb128 0x13
	.ascii "TIME_ZONE_ID_INVALID ((DWORD)0xffffffff)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x94a
	.ascii "TC_NORMAL 0\0"
	.byte	0x1
	.uleb128 0x94b
	.ascii "TC_HARDERR 1\0"
	.byte	0x1
	.uleb128 0x94c
	.ascii "TC_GP_TRAP 2\0"
	.byte	0x1
	.uleb128 0x94d
	.ascii "TC_SIGNAL 3\0"
	.byte	0x1
	.uleb128 0x94f
	.ascii "AC_LINE_OFFLINE 0x00\0"
	.byte	0x1
	.uleb128 0x950
	.ascii "AC_LINE_ONLINE 0x01\0"
	.byte	0x1
	.uleb128 0x951
	.ascii "AC_LINE_BACKUP_POWER 0x02\0"
	.byte	0x1
	.uleb128 0x952
	.ascii "AC_LINE_UNKNOWN 0xff\0"
	.byte	0x1
	.uleb128 0x954
	.ascii "BATTERY_FLAG_HIGH 0x01\0"
	.byte	0x1
	.uleb128 0x955
	.ascii "BATTERY_FLAG_LOW 0x02\0"
	.byte	0x1
	.uleb128 0x956
	.ascii "BATTERY_FLAG_CRITICAL 0x04\0"
	.byte	0x1
	.uleb128 0x957
	.ascii "BATTERY_FLAG_CHARGING 0x08\0"
	.byte	0x1
	.uleb128 0x958
	.ascii "BATTERY_FLAG_NO_BATTERY 0x80\0"
	.byte	0x1
	.uleb128 0x959
	.ascii "BATTERY_FLAG_UNKNOWN 0xff\0"
	.byte	0x1
	.uleb128 0x95b
	.ascii "BATTERY_PERCENTAGE_UNKNOWN 0xff\0"
	.byte	0x1
	.uleb128 0x95d
	.ascii "BATTERY_LIFE_UNKNOWN 0xffffffff\0"
	.byte	0x1
	.uleb128 0x996
	.ascii "FindFirstVolume FindFirstVolumeA\0"
	.byte	0x1
	.uleb128 0x997
	.ascii "FindNextVolume FindNextVolumeA\0"
	.byte	0x1
	.uleb128 0x998
	.ascii "DeleteVolumeMountPoint DeleteVolumeMountPointA\0"
	.byte	0x1
	.uleb128 0x999
	.ascii "GetVolumeNameForVolumeMountPoint GetVolumeNameForVolumeMountPointA\0"
	.byte	0x1
	.uleb128 0x99a
	.ascii "GetVolumePathName GetVolumePathNameA\0"
	.byte	0x1
	.uleb128 0x99b
	.ascii "GetVolumePathNamesForVolumeName GetVolumePathNamesForVolumeNameA\0"
	.byte	0x1
	.uleb128 0x99e
	.ascii "CreateJobObject __MINGW_NAME_AW(CreateJobObject)\0"
	.byte	0x1
	.uleb128 0x99f
	.ascii "OpenJobObject __MINGW_NAME_AW(OpenJobObject)\0"
	.byte	0x1
	.uleb128 0x9a0
	.ascii "FindFirstVolumeMountPoint __MINGW_NAME_AW(FindFirstVolumeMountPoint)\0"
	.byte	0x1
	.uleb128 0x9a1
	.ascii "FindNextVolumeMountPoint __MINGW_NAME_AW(FindNextVolumeMountPoint)\0"
	.byte	0x1
	.uleb128 0x9a2
	.ascii "SetVolumeMountPoint __MINGW_NAME_AW(SetVolumeMountPoint)\0"
	.byte	0x1
	.uleb128 0x9a4
	.ascii "ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID (0x00000001)\0"
	.byte	0x1
	.uleb128 0x9a5
	.ascii "ACTCTX_FLAG_LANGID_VALID (0x00000002)\0"
	.byte	0x1
	.uleb128 0x9a6
	.ascii "ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID (0x00000004)\0"
	.byte	0x1
	.uleb128 0x9a7
	.ascii "ACTCTX_FLAG_RESOURCE_NAME_VALID (0x00000008)\0"
	.byte	0x1
	.uleb128 0x9a8
	.ascii "ACTCTX_FLAG_SET_PROCESS_DEFAULT (0x00000010)\0"
	.byte	0x1
	.uleb128 0x9a9
	.ascii "ACTCTX_FLAG_APPLICATION_NAME_VALID (0x00000020)\0"
	.byte	0x1
	.uleb128 0x9aa
	.ascii "ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF (0x00000040)\0"
	.byte	0x1
	.uleb128 0x9ab
	.ascii "ACTCTX_FLAG_HMODULE_VALID (0x00000080)\0"
	.byte	0x1
	.uleb128 0x9d6
	.ascii "CreateActCtx __MINGW_NAME_AW(CreateActCtx)\0"
	.byte	0x1
	.uleb128 0x9d7
	.ascii "DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION (0x00000001)\0"
	.byte	0x1
	.uleb128 0xa03
	.ascii "FIND_ACTCTX_SECTION_KEY_RETURN_HACTCTX (0x00000001)\0"
	.byte	0x1
	.uleb128 0xa04
	.ascii "FIND_ACTCTX_SECTION_KEY_RETURN_FLAGS (0x00000002)\0"
	.byte	0x1
	.uleb128 0xa05
	.ascii "FIND_ACTCTX_SECTION_KEY_RETURN_ASSEMBLY_METADATA (0x00000004)\0"
	.byte	0x1
	.uleb128 0xa0b
	.ascii "FindActCtxSectionString __MINGW_NAME_AW(FindActCtxSectionString)\0"
	.byte	0x1
	.uleb128 0xa15
	.ascii "ACTIVATION_CONTEXT_BASIC_INFORMATION_DEFINED 1\0"
	.byte	0x1
	.uleb128 0xa18
	.ascii "QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX (0x00000004)\0"
	.byte	0x1
	.uleb128 0xa19
	.ascii "QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE (0x00000008)\0"
	.byte	0x1
	.uleb128 0xa1a
	.ascii "QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS (0x00000010)\0"
	.byte	0x1
	.uleb128 0xa1b
	.ascii "QUERY_ACTCTX_FLAG_NO_ADDREF (0x80000000)\0"
	.byte	0x1
	.uleb128 0xa35
	.ascii "RESTART_MAX_CMD_LINE 1024\0"
	.byte	0x1
	.uleb128 0xa37
	.ascii "RESTART_NO_CRASH 1\0"
	.byte	0x1
	.uleb128 0xa38
	.ascii "RESTART_NO_HANG 2\0"
	.byte	0x1
	.uleb128 0xa39
	.ascii "RESTART_NO_PATCH 4\0"
	.byte	0x1
	.uleb128 0xa3a
	.ascii "RESTART_NO_REBOOT 8\0"
	.byte	0x1
	.uleb128 0xa3c
	.ascii "RECOVERY_DEFAULT_PING_INTERVAL 5000\0"
	.byte	0x1
	.uleb128 0xa3d
	.ascii "RECOVERY_MAX_PING_INTERVAL (5 *60 *1000)\0"
	.byte	0x1
	.uleb128 0xb67
	.ascii "MICROSOFT_WINDOWS_WINBASE_INTERLOCKED_CPLUSPLUS_H_INCLUDED \0"
	.byte	0x1
	.uleb128 0xb6a
	.ascii "MICROSOFT_WINDOWS_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS (_WIN32_WINNT >= 0x0502 || !defined (_WINBASE_))\0"
	.byte	0x2
	.uleb128 0xbe9
	.ascii "MICROSOFT_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS\0"
	.byte	0x1
	.uleb128 0xbea
	.ascii "MICROSOFT_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS 0\0"
	.byte	0x4
	.file 361 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/wingdi.h"
	.byte	0x3
	.uleb128 0x47
	.uleb128 0x169
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINGDI_ \0"
	.byte	0x1
	.uleb128 0xf
	.ascii "WINGDIAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "WINSPOOLAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "R2_BLACK 1\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "R2_NOTMERGEPEN 2\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "R2_MASKNOTPEN 3\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "R2_NOTCOPYPEN 4\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "R2_MASKPENNOT 5\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "R2_NOT 6\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "R2_XORPEN 7\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "R2_NOTMASKPEN 8\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "R2_MASKPEN 9\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "R2_NOTXORPEN 10\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "R2_NOP 11\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "R2_MERGENOTPEN 12\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "R2_COPYPEN 13\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "R2_MERGEPENNOT 14\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "R2_MERGEPEN 15\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "R2_WHITE 16\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "R2_LAST 16\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "SRCCOPY (DWORD)0x00CC0020\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "SRCPAINT (DWORD)0x00EE0086\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "SRCAND (DWORD)0x008800C6\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "SRCINVERT (DWORD)0x00660046\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "SRCERASE (DWORD)0x00440328\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "NOTSRCCOPY (DWORD)0x00330008\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "NOTSRCERASE (DWORD)0x001100A6\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "MERGECOPY (DWORD)0x00C000CA\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "MERGEPAINT (DWORD)0x00BB0226\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "PATCOPY (DWORD)0x00F00021\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "PATPAINT (DWORD)0x00FB0A09\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "PATINVERT (DWORD)0x005A0049\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "DSTINVERT (DWORD)0x00550009\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "BLACKNESS (DWORD)0x00000042\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "WHITENESS (DWORD)0x00FF0062\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "NOMIRRORBITMAP (DWORD)0x80000000\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "CAPTUREBLT (DWORD)0x40000000\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "MAKEROP4(fore,back) (DWORD)((((back) << 8) & 0xFF000000) | (fore))\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "GDI_ERROR (__MSABI_LONG(0xFFFFFFFF))\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "HGDI_ERROR (LongToHandle(0xFFFFFFFF))\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "ERROR 0\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "NULLREGION 1\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "SIMPLEREGION 2\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "COMPLEXREGION 3\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "RGN_ERROR ERROR\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "RGN_AND 1\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "RGN_OR 2\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "RGN_XOR 3\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "RGN_DIFF 4\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "RGN_COPY 5\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "RGN_MIN RGN_AND\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "RGN_MAX RGN_COPY\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "BLACKONWHITE 1\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "WHITEONBLACK 2\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "COLORONCOLOR 3\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "HALFTONE 4\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "MAXSTRETCHBLTMODE 4\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "STRETCH_ANDSCANS BLACKONWHITE\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "STRETCH_ORSCANS WHITEONBLACK\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "STRETCH_DELETESCANS COLORONCOLOR\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "STRETCH_HALFTONE HALFTONE\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "ALTERNATE 1\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "WINDING 2\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "POLYFILL_LAST 2\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "LAYOUT_RTL 0x00000001\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "LAYOUT_BTT 0x00000002\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "LAYOUT_VBH 0x00000004\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "LAYOUT_ORIENTATIONMASK (LAYOUT_RTL | LAYOUT_BTT | LAYOUT_VBH)\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "LAYOUT_BITMAPORIENTATIONPRESERVED 0x00000008\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "TA_NOUPDATECP 0\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "TA_UPDATECP 1\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "TA_LEFT 0\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "TA_RIGHT 2\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "TA_CENTER 6\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "TA_TOP 0\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "TA_BOTTOM 8\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "TA_BASELINE 24\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "TA_RTLREADING 256\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "TA_MASK (TA_BASELINE+TA_CENTER+TA_UPDATECP+TA_RTLREADING)\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "VTA_BASELINE TA_BASELINE\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "VTA_LEFT TA_BOTTOM\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "VTA_RIGHT TA_TOP\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "VTA_CENTER TA_CENTER\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "VTA_BOTTOM TA_RIGHT\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "VTA_TOP TA_LEFT\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "ETO_OPAQUE 0x0002\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "ETO_CLIPPED 0x0004\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "ETO_GLYPH_INDEX 0x0010\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "ETO_RTLREADING 0x0080\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "ETO_NUMERICSLOCAL 0x0400\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "ETO_NUMERICSLATIN 0x0800\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "ETO_IGNORELANGUAGE 0x1000\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "ETO_PDY 0x2000\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "ASPECT_FILTERING 0x0001\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "DCB_RESET 0x0001\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "DCB_ACCUMULATE 0x0002\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "DCB_DIRTY DCB_ACCUMULATE\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "DCB_SET (DCB_RESET | DCB_ACCUMULATE)\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "DCB_ENABLE 0x0004\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "DCB_DISABLE 0x0008\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "META_SETBKCOLOR 0x0201\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "META_SETBKMODE 0x0102\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "META_SETMAPMODE 0x0103\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "META_SETROP2 0x0104\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "META_SETRELABS 0x0105\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "META_SETPOLYFILLMODE 0x0106\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "META_SETSTRETCHBLTMODE 0x0107\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "META_SETTEXTCHAREXTRA 0x0108\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "META_SETTEXTCOLOR 0x0209\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "META_SETTEXTJUSTIFICATION 0x020A\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "META_SETWINDOWORG 0x020B\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "META_SETWINDOWEXT 0x020C\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "META_SETVIEWPORTORG 0x020D\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "META_SETVIEWPORTEXT 0x020E\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "META_OFFSETWINDOWORG 0x020F\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "META_SCALEWINDOWEXT 0x0410\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "META_OFFSETVIEWPORTORG 0x0211\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "META_SCALEVIEWPORTEXT 0x0412\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "META_LINETO 0x0213\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "META_MOVETO 0x0214\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "META_EXCLUDECLIPRECT 0x0415\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "META_INTERSECTCLIPRECT 0x0416\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "META_ARC 0x0817\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "META_ELLIPSE 0x0418\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "META_FLOODFILL 0x0419\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "META_PIE 0x081A\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "META_RECTANGLE 0x041B\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "META_ROUNDRECT 0x061C\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "META_PATBLT 0x061D\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "META_SAVEDC 0x001E\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "META_SETPIXEL 0x041F\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "META_OFFSETCLIPRGN 0x0220\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "META_TEXTOUT 0x0521\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "META_BITBLT 0x0922\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "META_STRETCHBLT 0x0B23\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "META_POLYGON 0x0324\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "META_POLYLINE 0x0325\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "META_ESCAPE 0x0626\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "META_RESTOREDC 0x0127\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "META_FILLREGION 0x0228\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "META_FRAMEREGION 0x0429\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "META_INVERTREGION 0x012A\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "META_PAINTREGION 0x012B\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "META_SELECTCLIPREGION 0x012C\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "META_SELECTOBJECT 0x012D\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "META_SETTEXTALIGN 0x012E\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "META_CHORD 0x0830\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "META_SETMAPPERFLAGS 0x0231\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "META_EXTTEXTOUT 0x0a32\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "META_SETDIBTODEV 0x0d33\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "META_SELECTPALETTE 0x0234\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "META_REALIZEPALETTE 0x0035\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "META_ANIMATEPALETTE 0x0436\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "META_SETPALENTRIES 0x0037\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "META_POLYPOLYGON 0x0538\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "META_RESIZEPALETTE 0x0139\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "META_DIBBITBLT 0x0940\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "META_DIBSTRETCHBLT 0x0b41\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "META_DIBCREATEPATTERNBRUSH 0x0142\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "META_STRETCHDIB 0x0f43\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "META_EXTFLOODFILL 0x0548\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "META_SETLAYOUT 0x0149\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "META_DELETEOBJECT 0x01f0\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "META_CREATEPALETTE 0x00f7\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "META_CREATEPATTERNBRUSH 0x01F9\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "META_CREATEPENINDIRECT 0x02FA\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "META_CREATEFONTINDIRECT 0x02FB\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "META_CREATEBRUSHINDIRECT 0x02FC\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "META_CREATEREGION 0x06FF\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "NEWFRAME 1\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "ABORTDOC 2\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "NEXTBAND 3\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "SETCOLORTABLE 4\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "GETCOLORTABLE 5\0"
	.byte	0x1
	.uleb128 0xef
	.ascii "FLUSHOUTPUT 6\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "DRAFTMODE 7\0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "QUERYESCSUPPORT 8\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "SETABORTPROC 9\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "STARTDOC 10\0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "ENDDOC 11\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "GETPHYSPAGESIZE 12\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "GETPRINTINGOFFSET 13\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "GETSCALINGFACTOR 14\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "MFCOMMENT 15\0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "GETPENWIDTH 16\0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "SETCOPYCOUNT 17\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "SELECTPAPERSOURCE 18\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "DEVICEDATA 19\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "PASSTHROUGH 19\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "GETTECHNOLGY 20\0"
	.byte	0x1
	.uleb128 0xff
	.ascii "GETTECHNOLOGY 20\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "SETLINECAP 21\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "SETLINEJOIN 22\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "SETMITERLIMIT 23\0"
	.byte	0x1
	.uleb128 0x103
	.ascii "BANDINFO 24\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "DRAWPATTERNRECT 25\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "GETVECTORPENSIZE 26\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "GETVECTORBRUSHSIZE 27\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "ENABLEDUPLEX 28\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "GETSETPAPERBINS 29\0"
	.byte	0x1
	.uleb128 0x109
	.ascii "GETSETPRINTORIENT 30\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "ENUMPAPERBINS 31\0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "SETDIBSCALING 32\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "EPSPRINTING 33\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "ENUMPAPERMETRICS 34\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "GETSETPAPERMETRICS 35\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "POSTSCRIPT_DATA 37\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "POSTSCRIPT_IGNORE 38\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "MOUSETRAILS 39\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "GETDEVICEUNITS 42\0"
	.byte	0x1
	.uleb128 0x114
	.ascii "GETEXTENDEDTEXTMETRICS 256\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "GETEXTENTTABLE 257\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "GETPAIRKERNTABLE 258\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "GETTRACKKERNTABLE 259\0"
	.byte	0x1
	.uleb128 0x118
	.ascii "EXTTEXTOUT 512\0"
	.byte	0x1
	.uleb128 0x119
	.ascii "GETFACENAME 513\0"
	.byte	0x1
	.uleb128 0x11a
	.ascii "DOWNLOADFACE 514\0"
	.byte	0x1
	.uleb128 0x11b
	.ascii "ENABLERELATIVEWIDTHS 768\0"
	.byte	0x1
	.uleb128 0x11c
	.ascii "ENABLEPAIRKERNING 769\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "SETKERNTRACK 770\0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "SETALLJUSTVALUES 771\0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "SETCHARSET 772\0"
	.byte	0x1
	.uleb128 0x121
	.ascii "STRETCHBLT 2048\0"
	.byte	0x1
	.uleb128 0x122
	.ascii "METAFILE_DRIVER 2049\0"
	.byte	0x1
	.uleb128 0x123
	.ascii "GETSETSCREENPARAMS 3072\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "QUERYDIBSUPPORT 3073\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "BEGIN_PATH 4096\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "CLIP_TO_PATH 4097\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "END_PATH 4098\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "EXT_DEVICE_CAPS 4099\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "RESTORE_CTM 4100\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "SAVE_CTM 4101\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "SET_ARC_DIRECTION 4102\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "SET_BACKGROUND_COLOR 4103\0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "SET_POLY_MODE 4104\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "SET_SCREEN_ANGLE 4105\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "SET_SPREAD 4106\0"
	.byte	0x1
	.uleb128 0x130
	.ascii "TRANSFORM_CTM 4107\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "SET_CLIP_BOX 4108\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "SET_BOUNDS 4109\0"
	.byte	0x1
	.uleb128 0x133
	.ascii "SET_MIRROR_MODE 4110\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "OPENCHANNEL 4110\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "DOWNLOADHEADER 4111\0"
	.byte	0x1
	.uleb128 0x136
	.ascii "CLOSECHANNEL 4112\0"
	.byte	0x1
	.uleb128 0x137
	.ascii "POSTSCRIPT_PASSTHROUGH 4115\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "ENCAPSULATED_POSTSCRIPT 4116\0"
	.byte	0x1
	.uleb128 0x13a
	.ascii "POSTSCRIPT_IDENTIFY 4117\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "POSTSCRIPT_INJECTION 4118\0"
	.byte	0x1
	.uleb128 0x13d
	.ascii "CHECKJPEGFORMAT 4119\0"
	.byte	0x1
	.uleb128 0x13e
	.ascii "CHECKPNGFORMAT 4120\0"
	.byte	0x1
	.uleb128 0x140
	.ascii "GET_PS_FEATURESETTING 4121\0"
	.byte	0x1
	.uleb128 0x141
	.ascii "GDIPLUS_TS_QUERYVER 4122\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "GDIPLUS_TS_RECORD 4123\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "SPCLPASSTHROUGH2 4568\0"
	.byte	0x1
	.uleb128 0x14b
	.ascii "PSIDENT_GDICENTRIC 0\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "PSIDENT_PSCENTRIC 1\0"
	.byte	0x1
	.uleb128 0x156
	.ascii "PSINJECT_BEGINSTREAM 1\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "PSINJECT_PSADOBE 2\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "PSINJECT_PAGESATEND 3\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "PSINJECT_PAGES 4\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "PSINJECT_DOCNEEDEDRES 5\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "PSINJECT_DOCSUPPLIEDRES 6\0"
	.byte	0x1
	.uleb128 0x15d
	.ascii "PSINJECT_PAGEORDER 7\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "PSINJECT_ORIENTATION 8\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "PSINJECT_BOUNDINGBOX 9\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "PSINJECT_DOCUMENTPROCESSCOLORS 10\0"
	.byte	0x1
	.uleb128 0x162
	.ascii "PSINJECT_COMMENTS 11\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "PSINJECT_BEGINDEFAULTS 12\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "PSINJECT_ENDDEFAULTS 13\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "PSINJECT_BEGINPROLOG 14\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "PSINJECT_ENDPROLOG 15\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "PSINJECT_BEGINSETUP 16\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "PSINJECT_ENDSETUP 17\0"
	.byte	0x1
	.uleb128 0x169
	.ascii "PSINJECT_TRAILER 18\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "PSINJECT_EOF 19\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "PSINJECT_ENDSTREAM 20\0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "PSINJECT_DOCUMENTPROCESSCOLORSATEND 21\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "PSINJECT_PAGENUMBER 100\0"
	.byte	0x1
	.uleb128 0x16f
	.ascii "PSINJECT_BEGINPAGESETUP 101\0"
	.byte	0x1
	.uleb128 0x170
	.ascii "PSINJECT_ENDPAGESETUP 102\0"
	.byte	0x1
	.uleb128 0x171
	.ascii "PSINJECT_PAGETRAILER 103\0"
	.byte	0x1
	.uleb128 0x172
	.ascii "PSINJECT_PLATECOLOR 104\0"
	.byte	0x1
	.uleb128 0x174
	.ascii "PSINJECT_SHOWPAGE 105\0"
	.byte	0x1
	.uleb128 0x175
	.ascii "PSINJECT_PAGEBBOX 106\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "PSINJECT_ENDPAGECOMMENTS 107\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "PSINJECT_VMSAVE 200\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "PSINJECT_VMRESTORE 201\0"
	.byte	0x1
	.uleb128 0x17b
	.ascii "FEATURESETTING_NUP 0\0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "FEATURESETTING_OUTPUT 1\0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "FEATURESETTING_PSLEVEL 2\0"
	.byte	0x1
	.uleb128 0x17e
	.ascii "FEATURESETTING_CUSTPAPER 3\0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "FEATURESETTING_MIRROR 4\0"
	.byte	0x1
	.uleb128 0x180
	.ascii "FEATURESETTING_NEGATIVE 5\0"
	.byte	0x1
	.uleb128 0x181
	.ascii "FEATURESETTING_PROTOCOL 6\0"
	.byte	0x1
	.uleb128 0x183
	.ascii "FEATURESETTING_PRIVATE_BEGIN 0x1000\0"
	.byte	0x1
	.uleb128 0x184
	.ascii "FEATURESETTING_PRIVATE_END 0x1FFF\0"
	.byte	0x1
	.uleb128 0x195
	.ascii "PSPROTOCOL_ASCII 0\0"
	.byte	0x1
	.uleb128 0x196
	.ascii "PSPROTOCOL_BCP 1\0"
	.byte	0x1
	.uleb128 0x197
	.ascii "PSPROTOCOL_TBCP 2\0"
	.byte	0x1
	.uleb128 0x198
	.ascii "PSPROTOCOL_BINARY 3\0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "QDI_SETDIBITS 1\0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "QDI_GETDIBITS 2\0"
	.byte	0x1
	.uleb128 0x19c
	.ascii "QDI_DIBTOSCREEN 4\0"
	.byte	0x1
	.uleb128 0x19d
	.ascii "QDI_STRETCHDIB 8\0"
	.byte	0x1
	.uleb128 0x19f
	.ascii "SP_NOTREPORTED 0x4000\0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "SP_ERROR (-1)\0"
	.byte	0x1
	.uleb128 0x1a1
	.ascii "SP_APPABORT (-2)\0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "SP_USERABORT (-3)\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "SP_OUTOFDISK (-4)\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "SP_OUTOFMEMORY (-5)\0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "PR_JOBSTATUS 0x0000\0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "OBJ_PEN 1\0"
	.byte	0x1
	.uleb128 0x1a9
	.ascii "OBJ_BRUSH 2\0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "OBJ_DC 3\0"
	.byte	0x1
	.uleb128 0x1ab
	.ascii "OBJ_METADC 4\0"
	.byte	0x1
	.uleb128 0x1ac
	.ascii "OBJ_PAL 5\0"
	.byte	0x1
	.uleb128 0x1ad
	.ascii "OBJ_FONT 6\0"
	.byte	0x1
	.uleb128 0x1ae
	.ascii "OBJ_BITMAP 7\0"
	.byte	0x1
	.uleb128 0x1af
	.ascii "OBJ_REGION 8\0"
	.byte	0x1
	.uleb128 0x1b0
	.ascii "OBJ_METAFILE 9\0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "OBJ_MEMDC 10\0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "OBJ_EXTPEN 11\0"
	.byte	0x1
	.uleb128 0x1b3
	.ascii "OBJ_ENHMETADC 12\0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "OBJ_ENHMETAFILE 13\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "OBJ_COLORSPACE 14\0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "GDI_OBJ_LAST OBJ_COLORSPACE\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "MWT_IDENTITY 1\0"
	.byte	0x1
	.uleb128 0x1ba
	.ascii "MWT_LEFTMULTIPLY 2\0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "MWT_RIGHTMULTIPLY 3\0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "MWT_MIN MWT_IDENTITY\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "MWT_MAX MWT_RIGHTMULTIPLY\0"
	.byte	0x1
	.uleb128 0x1c0
	.ascii "_XFORM_ \0"
	.file 362 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/pshpack1.h"
	.byte	0x3
	.uleb128 0x1d5
	.uleb128 0x16a
	.byte	0x4
	.byte	0x3
	.uleb128 0x1db
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x1e9
	.ascii "CS_ENABLE __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x1ea
	.ascii "CS_DISABLE __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "CS_DELETE_TRANSFORM __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0x1ed
	.ascii "LCS_SIGNATURE 'PSOC'\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "LCS_sRGB 'sRGB'\0"
	.byte	0x1
	.uleb128 0x1f0
	.ascii "LCS_WINDOWS_COLOR_SPACE 'Win '\0"
	.byte	0x1
	.uleb128 0x1f4
	.ascii "LCS_CALIBRATED_RGB __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x1f7
	.ascii "LCS_GM_BUSINESS __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x1f8
	.ascii "LCS_GM_GRAPHICS __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x1f9
	.ascii "LCS_GM_IMAGES __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x1fa
	.ascii "LCS_GM_ABS_COLORIMETRIC __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x1fc
	.ascii "CM_OUT_OF_GAMUT 255\0"
	.byte	0x1
	.uleb128 0x1fd
	.ascii "CM_IN_GAMUT 0\0"
	.byte	0x1
	.uleb128 0x1ff
	.ascii "ICM_ADDPROFILE 1\0"
	.byte	0x1
	.uleb128 0x200
	.ascii "ICM_DELETEPROFILE 2\0"
	.byte	0x1
	.uleb128 0x201
	.ascii "ICM_QUERYPROFILE 3\0"
	.byte	0x1
	.uleb128 0x202
	.ascii "ICM_SETDEFAULTPROFILE 4\0"
	.byte	0x1
	.uleb128 0x203
	.ascii "ICM_REGISTERICMATCHER 5\0"
	.byte	0x1
	.uleb128 0x204
	.ascii "ICM_UNREGISTERICMATCHER 6\0"
	.byte	0x1
	.uleb128 0x205
	.ascii "ICM_QUERYMATCH 7\0"
	.byte	0x1
	.uleb128 0x207
	.ascii "GetKValue(cmyk) ((BYTE)(cmyk))\0"
	.byte	0x1
	.uleb128 0x208
	.ascii "GetYValue(cmyk) ((BYTE)((cmyk)>> 8))\0"
	.byte	0x1
	.uleb128 0x209
	.ascii "GetMValue(cmyk) ((BYTE)((cmyk)>>16))\0"
	.byte	0x1
	.uleb128 0x20a
	.ascii "GetCValue(cmyk) ((BYTE)((cmyk)>>24))\0"
	.byte	0x1
	.uleb128 0x20c
	.ascii "CMYK(c,m,y,k) ((COLORREF)((((BYTE)(k)|((WORD)((BYTE)(y))<<8))|(((DWORD)(BYTE)(m))<<16))|(((DWORD)(BYTE)(c))<<24)))\0"
	.byte	0x1
	.uleb128 0x292
	.ascii "PROFILE_LINKED 'LINK'\0"
	.byte	0x1
	.uleb128 0x293
	.ascii "PROFILE_EMBEDDED 'MBED'\0"
	.byte	0x1
	.uleb128 0x295
	.ascii "BI_RGB __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0x296
	.ascii "BI_RLE8 __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x297
	.ascii "BI_RLE4 __MSABI_LONG(2)\0"
	.byte	0x1
	.uleb128 0x298
	.ascii "BI_BITFIELDS __MSABI_LONG(3)\0"
	.byte	0x1
	.uleb128 0x299
	.ascii "BI_JPEG __MSABI_LONG(4)\0"
	.byte	0x1
	.uleb128 0x29a
	.ascii "BI_PNG __MSABI_LONG(5)\0"
	.byte	0x3
	.uleb128 0x2a9
	.uleb128 0x144
	.byte	0x4
	.byte	0x3
	.uleb128 0x2b1
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x2b4
	.ascii "MAKEPOINTS(l) (*((POINTS *)&(l)))\0"
	.byte	0x1
	.uleb128 0x2c5
	.ascii "TCI_SRCCHARSET 1\0"
	.byte	0x1
	.uleb128 0x2c6
	.ascii "TCI_SRCCODEPAGE 2\0"
	.byte	0x1
	.uleb128 0x2c7
	.ascii "TCI_SRCFONTSIG 3\0"
	.byte	0x1
	.uleb128 0x2c8
	.ascii "TCI_SRCLOCALE 0x1000\0"
	.byte	0x3
	.uleb128 0x2ee
	.uleb128 0x144
	.byte	0x4
	.byte	0x3
	.uleb128 0x2fb
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x31e
	.ascii "TMPF_FIXED_PITCH 0x01\0"
	.byte	0x1
	.uleb128 0x31f
	.ascii "TMPF_VECTOR 0x02\0"
	.byte	0x1
	.uleb128 0x320
	.ascii "TMPF_DEVICE 0x08\0"
	.byte	0x1
	.uleb128 0x321
	.ascii "TMPF_TRUETYPE 0x04\0"
	.byte	0x1
	.uleb128 0x32c
	.ascii "_TEXTMETRIC_DEFINED \0"
	.byte	0x3
	.uleb128 0x32e
	.uleb128 0x142
	.byte	0x4
	.byte	0x3
	.uleb128 0x362
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x366
	.ascii "NTM_REGULAR __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0x367
	.ascii "NTM_BOLD __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0x368
	.ascii "NTM_ITALIC __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x36a
	.ascii "NTM_NONNEGATIVE_AC 0x00010000\0"
	.byte	0x1
	.uleb128 0x36b
	.ascii "NTM_PS_OPENTYPE 0x00020000\0"
	.byte	0x1
	.uleb128 0x36c
	.ascii "NTM_TT_OPENTYPE 0x00040000\0"
	.byte	0x1
	.uleb128 0x36d
	.ascii "NTM_MULTIPLEMASTER 0x00080000\0"
	.byte	0x1
	.uleb128 0x36e
	.ascii "NTM_TYPE1 0x00100000\0"
	.byte	0x1
	.uleb128 0x36f
	.ascii "NTM_DSIG 0x00200000\0"
	.byte	0x3
	.uleb128 0x372
	.uleb128 0x142
	.byte	0x4
	.byte	0x3
	.uleb128 0x3ae
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x3fb
	.ascii "_PALETTEENTRY_DEFINED \0"
	.byte	0x1
	.uleb128 0x405
	.ascii "_LOGPALETTE_DEFINED \0"
	.byte	0x1
	.uleb128 0x40e
	.ascii "LF_FACESIZE 32\0"
	.byte	0x1
	.uleb128 0x439
	.ascii "LF_FULLFACESIZE 64\0"
	.byte	0x1
	.uleb128 0x45d
	.ascii "OUT_DEFAULT_PRECIS 0\0"
	.byte	0x1
	.uleb128 0x45e
	.ascii "OUT_STRING_PRECIS 1\0"
	.byte	0x1
	.uleb128 0x45f
	.ascii "OUT_CHARACTER_PRECIS 2\0"
	.byte	0x1
	.uleb128 0x460
	.ascii "OUT_STROKE_PRECIS 3\0"
	.byte	0x1
	.uleb128 0x461
	.ascii "OUT_TT_PRECIS 4\0"
	.byte	0x1
	.uleb128 0x462
	.ascii "OUT_DEVICE_PRECIS 5\0"
	.byte	0x1
	.uleb128 0x463
	.ascii "OUT_RASTER_PRECIS 6\0"
	.byte	0x1
	.uleb128 0x464
	.ascii "OUT_TT_ONLY_PRECIS 7\0"
	.byte	0x1
	.uleb128 0x465
	.ascii "OUT_OUTLINE_PRECIS 8\0"
	.byte	0x1
	.uleb128 0x466
	.ascii "OUT_SCREEN_OUTLINE_PRECIS 9\0"
	.byte	0x1
	.uleb128 0x467
	.ascii "OUT_PS_ONLY_PRECIS 10\0"
	.byte	0x1
	.uleb128 0x469
	.ascii "CLIP_DEFAULT_PRECIS 0\0"
	.byte	0x1
	.uleb128 0x46a
	.ascii "CLIP_CHARACTER_PRECIS 1\0"
	.byte	0x1
	.uleb128 0x46b
	.ascii "CLIP_STROKE_PRECIS 2\0"
	.byte	0x1
	.uleb128 0x46c
	.ascii "CLIP_MASK 0xf\0"
	.byte	0x1
	.uleb128 0x46d
	.ascii "CLIP_LH_ANGLES (1<<4)\0"
	.byte	0x1
	.uleb128 0x46e
	.ascii "CLIP_TT_ALWAYS (2<<4)\0"
	.byte	0x1
	.uleb128 0x472
	.ascii "CLIP_EMBEDDED (8<<4)\0"
	.byte	0x1
	.uleb128 0x474
	.ascii "DEFAULT_QUALITY 0\0"
	.byte	0x1
	.uleb128 0x475
	.ascii "DRAFT_QUALITY 1\0"
	.byte	0x1
	.uleb128 0x476
	.ascii "PROOF_QUALITY 2\0"
	.byte	0x1
	.uleb128 0x477
	.ascii "NONANTIALIASED_QUALITY 3\0"
	.byte	0x1
	.uleb128 0x478
	.ascii "ANTIALIASED_QUALITY 4\0"
	.byte	0x1
	.uleb128 0x47a
	.ascii "CLEARTYPE_QUALITY 5\0"
	.byte	0x1
	.uleb128 0x47b
	.ascii "CLEARTYPE_NATURAL_QUALITY 6\0"
	.byte	0x1
	.uleb128 0x47d
	.ascii "DEFAULT_PITCH 0\0"
	.byte	0x1
	.uleb128 0x47e
	.ascii "FIXED_PITCH 1\0"
	.byte	0x1
	.uleb128 0x47f
	.ascii "VARIABLE_PITCH 2\0"
	.byte	0x1
	.uleb128 0x480
	.ascii "MONO_FONT 8\0"
	.byte	0x1
	.uleb128 0x482
	.ascii "ANSI_CHARSET 0\0"
	.byte	0x1
	.uleb128 0x483
	.ascii "DEFAULT_CHARSET 1\0"
	.byte	0x1
	.uleb128 0x484
	.ascii "SYMBOL_CHARSET 2\0"
	.byte	0x1
	.uleb128 0x485
	.ascii "SHIFTJIS_CHARSET 128\0"
	.byte	0x1
	.uleb128 0x486
	.ascii "HANGEUL_CHARSET 129\0"
	.byte	0x1
	.uleb128 0x487
	.ascii "HANGUL_CHARSET 129\0"
	.byte	0x1
	.uleb128 0x488
	.ascii "GB2312_CHARSET 134\0"
	.byte	0x1
	.uleb128 0x489
	.ascii "CHINESEBIG5_CHARSET 136\0"
	.byte	0x1
	.uleb128 0x48a
	.ascii "OEM_CHARSET 255\0"
	.byte	0x1
	.uleb128 0x48b
	.ascii "JOHAB_CHARSET 130\0"
	.byte	0x1
	.uleb128 0x48c
	.ascii "HEBREW_CHARSET 177\0"
	.byte	0x1
	.uleb128 0x48d
	.ascii "ARABIC_CHARSET 178\0"
	.byte	0x1
	.uleb128 0x48e
	.ascii "GREEK_CHARSET 161\0"
	.byte	0x1
	.uleb128 0x48f
	.ascii "TURKISH_CHARSET 162\0"
	.byte	0x1
	.uleb128 0x490
	.ascii "VIETNAMESE_CHARSET 163\0"
	.byte	0x1
	.uleb128 0x491
	.ascii "THAI_CHARSET 222\0"
	.byte	0x1
	.uleb128 0x492
	.ascii "EASTEUROPE_CHARSET 238\0"
	.byte	0x1
	.uleb128 0x493
	.ascii "RUSSIAN_CHARSET 204\0"
	.byte	0x1
	.uleb128 0x495
	.ascii "MAC_CHARSET 77\0"
	.byte	0x1
	.uleb128 0x496
	.ascii "BALTIC_CHARSET 186\0"
	.byte	0x1
	.uleb128 0x498
	.ascii "FS_LATIN1 __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x499
	.ascii "FS_LATIN2 __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x49a
	.ascii "FS_CYRILLIC __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x49b
	.ascii "FS_GREEK __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x49c
	.ascii "FS_TURKISH __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0x49d
	.ascii "FS_HEBREW __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0x49e
	.ascii "FS_ARABIC __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0x49f
	.ascii "FS_BALTIC __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0x4a0
	.ascii "FS_VIETNAMESE __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x4a1
	.ascii "FS_THAI __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x4a2
	.ascii "FS_JISJAPAN __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x4a3
	.ascii "FS_CHINESESIMP __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x4a4
	.ascii "FS_WANSUNG __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x4a5
	.ascii "FS_CHINESETRAD __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x4a6
	.ascii "FS_JOHAB __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0x4a7
	.ascii "FS_SYMBOL __MSABI_LONG(0x80000000)\0"
	.byte	0x1
	.uleb128 0x4a9
	.ascii "FF_DONTCARE (0<<4)\0"
	.byte	0x1
	.uleb128 0x4aa
	.ascii "FF_ROMAN (1<<4)\0"
	.byte	0x1
	.uleb128 0x4ac
	.ascii "FF_SWISS (2<<4)\0"
	.byte	0x1
	.uleb128 0x4ae
	.ascii "FF_MODERN (3<<4)\0"
	.byte	0x1
	.uleb128 0x4b0
	.ascii "FF_SCRIPT (4<<4)\0"
	.byte	0x1
	.uleb128 0x4b1
	.ascii "FF_DECORATIVE (5<<4)\0"
	.byte	0x1
	.uleb128 0x4b3
	.ascii "FW_DONTCARE 0\0"
	.byte	0x1
	.uleb128 0x4b4
	.ascii "FW_THIN 100\0"
	.byte	0x1
	.uleb128 0x4b5
	.ascii "FW_EXTRALIGHT 200\0"
	.byte	0x1
	.uleb128 0x4b6
	.ascii "FW_LIGHT 300\0"
	.byte	0x1
	.uleb128 0x4b7
	.ascii "FW_NORMAL 400\0"
	.byte	0x1
	.uleb128 0x4b8
	.ascii "FW_MEDIUM 500\0"
	.byte	0x1
	.uleb128 0x4b9
	.ascii "FW_SEMIBOLD 600\0"
	.byte	0x1
	.uleb128 0x4ba
	.ascii "FW_BOLD 700\0"
	.byte	0x1
	.uleb128 0x4bb
	.ascii "FW_EXTRABOLD 800\0"
	.byte	0x1
	.uleb128 0x4bc
	.ascii "FW_HEAVY 900\0"
	.byte	0x1
	.uleb128 0x4be
	.ascii "FW_ULTRALIGHT FW_EXTRALIGHT\0"
	.byte	0x1
	.uleb128 0x4bf
	.ascii "FW_REGULAR FW_NORMAL\0"
	.byte	0x1
	.uleb128 0x4c0
	.ascii "FW_DEMIBOLD FW_SEMIBOLD\0"
	.byte	0x1
	.uleb128 0x4c1
	.ascii "FW_ULTRABOLD FW_EXTRABOLD\0"
	.byte	0x1
	.uleb128 0x4c2
	.ascii "FW_BLACK FW_HEAVY\0"
	.byte	0x1
	.uleb128 0x4c4
	.ascii "PANOSE_COUNT 10\0"
	.byte	0x1
	.uleb128 0x4c5
	.ascii "PAN_FAMILYTYPE_INDEX 0\0"
	.byte	0x1
	.uleb128 0x4c6
	.ascii "PAN_SERIFSTYLE_INDEX 1\0"
	.byte	0x1
	.uleb128 0x4c7
	.ascii "PAN_WEIGHT_INDEX 2\0"
	.byte	0x1
	.uleb128 0x4c8
	.ascii "PAN_PROPORTION_INDEX 3\0"
	.byte	0x1
	.uleb128 0x4c9
	.ascii "PAN_CONTRAST_INDEX 4\0"
	.byte	0x1
	.uleb128 0x4ca
	.ascii "PAN_STROKEVARIATION_INDEX 5\0"
	.byte	0x1
	.uleb128 0x4cb
	.ascii "PAN_ARMSTYLE_INDEX 6\0"
	.byte	0x1
	.uleb128 0x4cc
	.ascii "PAN_LETTERFORM_INDEX 7\0"
	.byte	0x1
	.uleb128 0x4cd
	.ascii "PAN_MIDLINE_INDEX 8\0"
	.byte	0x1
	.uleb128 0x4ce
	.ascii "PAN_XHEIGHT_INDEX 9\0"
	.byte	0x1
	.uleb128 0x4d0
	.ascii "PAN_CULTURE_LATIN 0\0"
	.byte	0x1
	.uleb128 0x4e0
	.ascii "PAN_ANY 0\0"
	.byte	0x1
	.uleb128 0x4e1
	.ascii "PAN_NO_FIT 1\0"
	.byte	0x1
	.uleb128 0x4e3
	.ascii "PAN_FAMILY_TEXT_DISPLAY 2\0"
	.byte	0x1
	.uleb128 0x4e4
	.ascii "PAN_FAMILY_SCRIPT 3\0"
	.byte	0x1
	.uleb128 0x4e5
	.ascii "PAN_FAMILY_DECORATIVE 4\0"
	.byte	0x1
	.uleb128 0x4e6
	.ascii "PAN_FAMILY_PICTORIAL 5\0"
	.byte	0x1
	.uleb128 0x4e8
	.ascii "PAN_SERIF_COVE 2\0"
	.byte	0x1
	.uleb128 0x4e9
	.ascii "PAN_SERIF_OBTUSE_COVE 3\0"
	.byte	0x1
	.uleb128 0x4ea
	.ascii "PAN_SERIF_SQUARE_COVE 4\0"
	.byte	0x1
	.uleb128 0x4eb
	.ascii "PAN_SERIF_OBTUSE_SQUARE_COVE 5\0"
	.byte	0x1
	.uleb128 0x4ec
	.ascii "PAN_SERIF_SQUARE 6\0"
	.byte	0x1
	.uleb128 0x4ed
	.ascii "PAN_SERIF_THIN 7\0"
	.byte	0x1
	.uleb128 0x4ee
	.ascii "PAN_SERIF_BONE 8\0"
	.byte	0x1
	.uleb128 0x4ef
	.ascii "PAN_SERIF_EXAGGERATED 9\0"
	.byte	0x1
	.uleb128 0x4f0
	.ascii "PAN_SERIF_TRIANGLE 10\0"
	.byte	0x1
	.uleb128 0x4f1
	.ascii "PAN_SERIF_NORMAL_SANS 11\0"
	.byte	0x1
	.uleb128 0x4f2
	.ascii "PAN_SERIF_OBTUSE_SANS 12\0"
	.byte	0x1
	.uleb128 0x4f3
	.ascii "PAN_SERIF_PERP_SANS 13\0"
	.byte	0x1
	.uleb128 0x4f4
	.ascii "PAN_SERIF_FLARED 14\0"
	.byte	0x1
	.uleb128 0x4f5
	.ascii "PAN_SERIF_ROUNDED 15\0"
	.byte	0x1
	.uleb128 0x4f7
	.ascii "PAN_WEIGHT_VERY_LIGHT 2\0"
	.byte	0x1
	.uleb128 0x4f8
	.ascii "PAN_WEIGHT_LIGHT 3\0"
	.byte	0x1
	.uleb128 0x4f9
	.ascii "PAN_WEIGHT_THIN 4\0"
	.byte	0x1
	.uleb128 0x4fa
	.ascii "PAN_WEIGHT_BOOK 5\0"
	.byte	0x1
	.uleb128 0x4fb
	.ascii "PAN_WEIGHT_MEDIUM 6\0"
	.byte	0x1
	.uleb128 0x4fc
	.ascii "PAN_WEIGHT_DEMI 7\0"
	.byte	0x1
	.uleb128 0x4fd
	.ascii "PAN_WEIGHT_BOLD 8\0"
	.byte	0x1
	.uleb128 0x4fe
	.ascii "PAN_WEIGHT_HEAVY 9\0"
	.byte	0x1
	.uleb128 0x4ff
	.ascii "PAN_WEIGHT_BLACK 10\0"
	.byte	0x1
	.uleb128 0x500
	.ascii "PAN_WEIGHT_NORD 11\0"
	.byte	0x1
	.uleb128 0x502
	.ascii "PAN_PROP_OLD_STYLE 2\0"
	.byte	0x1
	.uleb128 0x503
	.ascii "PAN_PROP_MODERN 3\0"
	.byte	0x1
	.uleb128 0x504
	.ascii "PAN_PROP_EVEN_WIDTH 4\0"
	.byte	0x1
	.uleb128 0x505
	.ascii "PAN_PROP_EXPANDED 5\0"
	.byte	0x1
	.uleb128 0x506
	.ascii "PAN_PROP_CONDENSED 6\0"
	.byte	0x1
	.uleb128 0x507
	.ascii "PAN_PROP_VERY_EXPANDED 7\0"
	.byte	0x1
	.uleb128 0x508
	.ascii "PAN_PROP_VERY_CONDENSED 8\0"
	.byte	0x1
	.uleb128 0x509
	.ascii "PAN_PROP_MONOSPACED 9\0"
	.byte	0x1
	.uleb128 0x50b
	.ascii "PAN_CONTRAST_NONE 2\0"
	.byte	0x1
	.uleb128 0x50c
	.ascii "PAN_CONTRAST_VERY_LOW 3\0"
	.byte	0x1
	.uleb128 0x50d
	.ascii "PAN_CONTRAST_LOW 4\0"
	.byte	0x1
	.uleb128 0x50e
	.ascii "PAN_CONTRAST_MEDIUM_LOW 5\0"
	.byte	0x1
	.uleb128 0x50f
	.ascii "PAN_CONTRAST_MEDIUM 6\0"
	.byte	0x1
	.uleb128 0x510
	.ascii "PAN_CONTRAST_MEDIUM_HIGH 7\0"
	.byte	0x1
	.uleb128 0x511
	.ascii "PAN_CONTRAST_HIGH 8\0"
	.byte	0x1
	.uleb128 0x512
	.ascii "PAN_CONTRAST_VERY_HIGH 9\0"
	.byte	0x1
	.uleb128 0x514
	.ascii "PAN_STROKE_GRADUAL_DIAG 2\0"
	.byte	0x1
	.uleb128 0x515
	.ascii "PAN_STROKE_GRADUAL_TRAN 3\0"
	.byte	0x1
	.uleb128 0x516
	.ascii "PAN_STROKE_GRADUAL_VERT 4\0"
	.byte	0x1
	.uleb128 0x517
	.ascii "PAN_STROKE_GRADUAL_HORZ 5\0"
	.byte	0x1
	.uleb128 0x518
	.ascii "PAN_STROKE_RAPID_VERT 6\0"
	.byte	0x1
	.uleb128 0x519
	.ascii "PAN_STROKE_RAPID_HORZ 7\0"
	.byte	0x1
	.uleb128 0x51a
	.ascii "PAN_STROKE_INSTANT_VERT 8\0"
	.byte	0x1
	.uleb128 0x51c
	.ascii "PAN_STRAIGHT_ARMS_HORZ 2\0"
	.byte	0x1
	.uleb128 0x51d
	.ascii "PAN_STRAIGHT_ARMS_WEDGE 3\0"
	.byte	0x1
	.uleb128 0x51e
	.ascii "PAN_STRAIGHT_ARMS_VERT 4\0"
	.byte	0x1
	.uleb128 0x51f
	.ascii "PAN_STRAIGHT_ARMS_SINGLE_SERIF 5\0"
	.byte	0x1
	.uleb128 0x520
	.ascii "PAN_STRAIGHT_ARMS_DOUBLE_SERIF 6\0"
	.byte	0x1
	.uleb128 0x521
	.ascii "PAN_BENT_ARMS_HORZ 7\0"
	.byte	0x1
	.uleb128 0x522
	.ascii "PAN_BENT_ARMS_WEDGE 8\0"
	.byte	0x1
	.uleb128 0x523
	.ascii "PAN_BENT_ARMS_VERT 9\0"
	.byte	0x1
	.uleb128 0x524
	.ascii "PAN_BENT_ARMS_SINGLE_SERIF 10\0"
	.byte	0x1
	.uleb128 0x525
	.ascii "PAN_BENT_ARMS_DOUBLE_SERIF 11\0"
	.byte	0x1
	.uleb128 0x527
	.ascii "PAN_LETT_NORMAL_CONTACT 2\0"
	.byte	0x1
	.uleb128 0x528
	.ascii "PAN_LETT_NORMAL_WEIGHTED 3\0"
	.byte	0x1
	.uleb128 0x529
	.ascii "PAN_LETT_NORMAL_BOXED 4\0"
	.byte	0x1
	.uleb128 0x52a
	.ascii "PAN_LETT_NORMAL_FLATTENED 5\0"
	.byte	0x1
	.uleb128 0x52b
	.ascii "PAN_LETT_NORMAL_ROUNDED 6\0"
	.byte	0x1
	.uleb128 0x52c
	.ascii "PAN_LETT_NORMAL_OFF_CENTER 7\0"
	.byte	0x1
	.uleb128 0x52d
	.ascii "PAN_LETT_NORMAL_SQUARE 8\0"
	.byte	0x1
	.uleb128 0x52e
	.ascii "PAN_LETT_OBLIQUE_CONTACT 9\0"
	.byte	0x1
	.uleb128 0x52f
	.ascii "PAN_LETT_OBLIQUE_WEIGHTED 10\0"
	.byte	0x1
	.uleb128 0x530
	.ascii "PAN_LETT_OBLIQUE_BOXED 11\0"
	.byte	0x1
	.uleb128 0x531
	.ascii "PAN_LETT_OBLIQUE_FLATTENED 12\0"
	.byte	0x1
	.uleb128 0x532
	.ascii "PAN_LETT_OBLIQUE_ROUNDED 13\0"
	.byte	0x1
	.uleb128 0x533
	.ascii "PAN_LETT_OBLIQUE_OFF_CENTER 14\0"
	.byte	0x1
	.uleb128 0x534
	.ascii "PAN_LETT_OBLIQUE_SQUARE 15\0"
	.byte	0x1
	.uleb128 0x536
	.ascii "PAN_MIDLINE_STANDARD_TRIMMED 2\0"
	.byte	0x1
	.uleb128 0x537
	.ascii "PAN_MIDLINE_STANDARD_POINTED 3\0"
	.byte	0x1
	.uleb128 0x538
	.ascii "PAN_MIDLINE_STANDARD_SERIFED 4\0"
	.byte	0x1
	.uleb128 0x539
	.ascii "PAN_MIDLINE_HIGH_TRIMMED 5\0"
	.byte	0x1
	.uleb128 0x53a
	.ascii "PAN_MIDLINE_HIGH_POINTED 6\0"
	.byte	0x1
	.uleb128 0x53b
	.ascii "PAN_MIDLINE_HIGH_SERIFED 7\0"
	.byte	0x1
	.uleb128 0x53c
	.ascii "PAN_MIDLINE_CONSTANT_TRIMMED 8\0"
	.byte	0x1
	.uleb128 0x53d
	.ascii "PAN_MIDLINE_CONSTANT_POINTED 9\0"
	.byte	0x1
	.uleb128 0x53e
	.ascii "PAN_MIDLINE_CONSTANT_SERIFED 10\0"
	.byte	0x1
	.uleb128 0x53f
	.ascii "PAN_MIDLINE_LOW_TRIMMED 11\0"
	.byte	0x1
	.uleb128 0x540
	.ascii "PAN_MIDLINE_LOW_POINTED 12\0"
	.byte	0x1
	.uleb128 0x541
	.ascii "PAN_MIDLINE_LOW_SERIFED 13\0"
	.byte	0x1
	.uleb128 0x543
	.ascii "PAN_XHEIGHT_CONSTANT_SMALL 2\0"
	.byte	0x1
	.uleb128 0x544
	.ascii "PAN_XHEIGHT_CONSTANT_STD 3\0"
	.byte	0x1
	.uleb128 0x545
	.ascii "PAN_XHEIGHT_CONSTANT_LARGE 4\0"
	.byte	0x1
	.uleb128 0x546
	.ascii "PAN_XHEIGHT_DUCKING_SMALL 5\0"
	.byte	0x1
	.uleb128 0x547
	.ascii "PAN_XHEIGHT_DUCKING_STD 6\0"
	.byte	0x1
	.uleb128 0x548
	.ascii "PAN_XHEIGHT_DUCKING_LARGE 7\0"
	.byte	0x1
	.uleb128 0x54a
	.ascii "ELF_VENDOR_SIZE 4\0"
	.byte	0x1
	.uleb128 0x56c
	.ascii "ELF_VERSION 0\0"
	.byte	0x1
	.uleb128 0x56d
	.ascii "ELF_CULTURE_LATIN 0\0"
	.byte	0x1
	.uleb128 0x56f
	.ascii "RASTER_FONTTYPE 0x0001\0"
	.byte	0x1
	.uleb128 0x570
	.ascii "DEVICE_FONTTYPE 0x002\0"
	.byte	0x1
	.uleb128 0x571
	.ascii "TRUETYPE_FONTTYPE 0x004\0"
	.byte	0x1
	.uleb128 0x573
	.ascii "RGB(r,g,b) ((COLORREF)(((BYTE)(r)|((WORD)((BYTE)(g))<<8))|(((DWORD)(BYTE)(b))<<16)))\0"
	.byte	0x1
	.uleb128 0x574
	.ascii "PALETTERGB(r,g,b) (0x02000000 | RGB(r,g,b))\0"
	.byte	0x1
	.uleb128 0x575
	.ascii "PALETTEINDEX(i) ((COLORREF)(0x01000000 | (DWORD)(WORD)(i)))\0"
	.byte	0x1
	.uleb128 0x577
	.ascii "PC_RESERVED 0x01\0"
	.byte	0x1
	.uleb128 0x578
	.ascii "PC_EXPLICIT 0x02\0"
	.byte	0x1
	.uleb128 0x579
	.ascii "PC_NOCOLLAPSE 0x04\0"
	.byte	0x1
	.uleb128 0x57b
	.ascii "GetRValue(rgb) (LOBYTE(rgb))\0"
	.byte	0x1
	.uleb128 0x57c
	.ascii "GetGValue(rgb) (LOBYTE(((WORD)(rgb)) >> 8))\0"
	.byte	0x1
	.uleb128 0x57d
	.ascii "GetBValue(rgb) (LOBYTE((rgb)>>16))\0"
	.byte	0x1
	.uleb128 0x57f
	.ascii "TRANSPARENT 1\0"
	.byte	0x1
	.uleb128 0x580
	.ascii "OPAQUE 2\0"
	.byte	0x1
	.uleb128 0x581
	.ascii "BKMODE_LAST 2\0"
	.byte	0x1
	.uleb128 0x583
	.ascii "GM_COMPATIBLE 1\0"
	.byte	0x1
	.uleb128 0x584
	.ascii "GM_ADVANCED 2\0"
	.byte	0x1
	.uleb128 0x585
	.ascii "GM_LAST 2\0"
	.byte	0x1
	.uleb128 0x587
	.ascii "PT_CLOSEFIGURE 0x01\0"
	.byte	0x1
	.uleb128 0x588
	.ascii "PT_LINETO 0x02\0"
	.byte	0x1
	.uleb128 0x589
	.ascii "PT_BEZIERTO 0x04\0"
	.byte	0x1
	.uleb128 0x58a
	.ascii "PT_MOVETO 0x06\0"
	.byte	0x1
	.uleb128 0x58c
	.ascii "MM_TEXT 1\0"
	.byte	0x1
	.uleb128 0x58d
	.ascii "MM_LOMETRIC 2\0"
	.byte	0x1
	.uleb128 0x58e
	.ascii "MM_HIMETRIC 3\0"
	.byte	0x1
	.uleb128 0x58f
	.ascii "MM_LOENGLISH 4\0"
	.byte	0x1
	.uleb128 0x590
	.ascii "MM_HIENGLISH 5\0"
	.byte	0x1
	.uleb128 0x591
	.ascii "MM_TWIPS 6\0"
	.byte	0x1
	.uleb128 0x592
	.ascii "MM_ISOTROPIC 7\0"
	.byte	0x1
	.uleb128 0x593
	.ascii "MM_ANISOTROPIC 8\0"
	.byte	0x1
	.uleb128 0x595
	.ascii "MM_MIN MM_TEXT\0"
	.byte	0x1
	.uleb128 0x596
	.ascii "MM_MAX MM_ANISOTROPIC\0"
	.byte	0x1
	.uleb128 0x597
	.ascii "MM_MAX_FIXEDSCALE MM_TWIPS\0"
	.byte	0x1
	.uleb128 0x599
	.ascii "ABSOLUTE 1\0"
	.byte	0x1
	.uleb128 0x59a
	.ascii "RELATIVE 2\0"
	.byte	0x1
	.uleb128 0x59c
	.ascii "WHITE_BRUSH 0\0"
	.byte	0x1
	.uleb128 0x59d
	.ascii "LTGRAY_BRUSH 1\0"
	.byte	0x1
	.uleb128 0x59e
	.ascii "GRAY_BRUSH 2\0"
	.byte	0x1
	.uleb128 0x59f
	.ascii "DKGRAY_BRUSH 3\0"
	.byte	0x1
	.uleb128 0x5a0
	.ascii "BLACK_BRUSH 4\0"
	.byte	0x1
	.uleb128 0x5a1
	.ascii "NULL_BRUSH 5\0"
	.byte	0x1
	.uleb128 0x5a2
	.ascii "HOLLOW_BRUSH NULL_BRUSH\0"
	.byte	0x1
	.uleb128 0x5a3
	.ascii "WHITE_PEN 6\0"
	.byte	0x1
	.uleb128 0x5a4
	.ascii "BLACK_PEN 7\0"
	.byte	0x1
	.uleb128 0x5a5
	.ascii "NULL_PEN 8\0"
	.byte	0x1
	.uleb128 0x5a6
	.ascii "OEM_FIXED_FONT 10\0"
	.byte	0x1
	.uleb128 0x5a7
	.ascii "ANSI_FIXED_FONT 11\0"
	.byte	0x1
	.uleb128 0x5a8
	.ascii "ANSI_VAR_FONT 12\0"
	.byte	0x1
	.uleb128 0x5a9
	.ascii "SYSTEM_FONT 13\0"
	.byte	0x1
	.uleb128 0x5aa
	.ascii "DEVICE_DEFAULT_FONT 14\0"
	.byte	0x1
	.uleb128 0x5ab
	.ascii "DEFAULT_PALETTE 15\0"
	.byte	0x1
	.uleb128 0x5ac
	.ascii "SYSTEM_FIXED_FONT 16\0"
	.byte	0x1
	.uleb128 0x5ad
	.ascii "DEFAULT_GUI_FONT 17\0"
	.byte	0x1
	.uleb128 0x5ae
	.ascii "DC_BRUSH 18\0"
	.byte	0x1
	.uleb128 0x5af
	.ascii "DC_PEN 19\0"
	.byte	0x1
	.uleb128 0x5b1
	.ascii "STOCK_LAST 19\0"
	.byte	0x1
	.uleb128 0x5b3
	.ascii "CLR_INVALID 0xFFFFFFFF\0"
	.byte	0x1
	.uleb128 0x5b5
	.ascii "BS_SOLID 0\0"
	.byte	0x1
	.uleb128 0x5b6
	.ascii "BS_NULL 1\0"
	.byte	0x1
	.uleb128 0x5b7
	.ascii "BS_HOLLOW BS_NULL\0"
	.byte	0x1
	.uleb128 0x5b8
	.ascii "BS_HATCHED 2\0"
	.byte	0x1
	.uleb128 0x5b9
	.ascii "BS_PATTERN 3\0"
	.byte	0x1
	.uleb128 0x5ba
	.ascii "BS_INDEXED 4\0"
	.byte	0x1
	.uleb128 0x5bb
	.ascii "BS_DIBPATTERN 5\0"
	.byte	0x1
	.uleb128 0x5bc
	.ascii "BS_DIBPATTERNPT 6\0"
	.byte	0x1
	.uleb128 0x5bd
	.ascii "BS_PATTERN8X8 7\0"
	.byte	0x1
	.uleb128 0x5be
	.ascii "BS_DIBPATTERN8X8 8\0"
	.byte	0x1
	.uleb128 0x5bf
	.ascii "BS_MONOPATTERN 9\0"
	.byte	0x1
	.uleb128 0x5c1
	.ascii "HS_HORIZONTAL 0\0"
	.byte	0x1
	.uleb128 0x5c2
	.ascii "HS_VERTICAL 1\0"
	.byte	0x1
	.uleb128 0x5c3
	.ascii "HS_FDIAGONAL 2\0"
	.byte	0x1
	.uleb128 0x5c4
	.ascii "HS_BDIAGONAL 3\0"
	.byte	0x1
	.uleb128 0x5c5
	.ascii "HS_CROSS 4\0"
	.byte	0x1
	.uleb128 0x5c6
	.ascii "HS_DIAGCROSS 5\0"
	.byte	0x1
	.uleb128 0x5c7
	.ascii "HS_API_MAX 12\0"
	.byte	0x1
	.uleb128 0x5c9
	.ascii "PS_SOLID 0\0"
	.byte	0x1
	.uleb128 0x5ca
	.ascii "PS_DASH 1\0"
	.byte	0x1
	.uleb128 0x5cb
	.ascii "PS_DOT 2\0"
	.byte	0x1
	.uleb128 0x5cc
	.ascii "PS_DASHDOT 3\0"
	.byte	0x1
	.uleb128 0x5cd
	.ascii "PS_DASHDOTDOT 4\0"
	.byte	0x1
	.uleb128 0x5ce
	.ascii "PS_NULL 5\0"
	.byte	0x1
	.uleb128 0x5cf
	.ascii "PS_INSIDEFRAME 6\0"
	.byte	0x1
	.uleb128 0x5d0
	.ascii "PS_USERSTYLE 7\0"
	.byte	0x1
	.uleb128 0x5d1
	.ascii "PS_ALTERNATE 8\0"
	.byte	0x1
	.uleb128 0x5d2
	.ascii "PS_STYLE_MASK 0x0000000F\0"
	.byte	0x1
	.uleb128 0x5d4
	.ascii "PS_ENDCAP_ROUND 0x00000000\0"
	.byte	0x1
	.uleb128 0x5d5
	.ascii "PS_ENDCAP_SQUARE 0x00000100\0"
	.byte	0x1
	.uleb128 0x5d6
	.ascii "PS_ENDCAP_FLAT 0x00000200\0"
	.byte	0x1
	.uleb128 0x5d7
	.ascii "PS_ENDCAP_MASK 0x00000F00\0"
	.byte	0x1
	.uleb128 0x5d9
	.ascii "PS_JOIN_ROUND 0x00000000\0"
	.byte	0x1
	.uleb128 0x5da
	.ascii "PS_JOIN_BEVEL 0x00001000\0"
	.byte	0x1
	.uleb128 0x5db
	.ascii "PS_JOIN_MITER 0x00002000\0"
	.byte	0x1
	.uleb128 0x5dc
	.ascii "PS_JOIN_MASK 0x0000F000\0"
	.byte	0x1
	.uleb128 0x5de
	.ascii "PS_COSMETIC 0x00000000\0"
	.byte	0x1
	.uleb128 0x5df
	.ascii "PS_GEOMETRIC 0x00010000\0"
	.byte	0x1
	.uleb128 0x5e0
	.ascii "PS_TYPE_MASK 0x000F0000\0"
	.byte	0x1
	.uleb128 0x5e2
	.ascii "AD_COUNTERCLOCKWISE 1\0"
	.byte	0x1
	.uleb128 0x5e3
	.ascii "AD_CLOCKWISE 2\0"
	.byte	0x1
	.uleb128 0x5e5
	.ascii "DRIVERVERSION 0\0"
	.byte	0x1
	.uleb128 0x5e6
	.ascii "TECHNOLOGY 2\0"
	.byte	0x1
	.uleb128 0x5e7
	.ascii "HORZSIZE 4\0"
	.byte	0x1
	.uleb128 0x5e8
	.ascii "VERTSIZE 6\0"
	.byte	0x1
	.uleb128 0x5e9
	.ascii "HORZRES 8\0"
	.byte	0x1
	.uleb128 0x5ea
	.ascii "VERTRES 10\0"
	.byte	0x1
	.uleb128 0x5eb
	.ascii "BITSPIXEL 12\0"
	.byte	0x1
	.uleb128 0x5ec
	.ascii "PLANES 14\0"
	.byte	0x1
	.uleb128 0x5ed
	.ascii "NUMBRUSHES 16\0"
	.byte	0x1
	.uleb128 0x5ee
	.ascii "NUMPENS 18\0"
	.byte	0x1
	.uleb128 0x5ef
	.ascii "NUMMARKERS 20\0"
	.byte	0x1
	.uleb128 0x5f0
	.ascii "NUMFONTS 22\0"
	.byte	0x1
	.uleb128 0x5f1
	.ascii "NUMCOLORS 24\0"
	.byte	0x1
	.uleb128 0x5f2
	.ascii "PDEVICESIZE 26\0"
	.byte	0x1
	.uleb128 0x5f3
	.ascii "CURVECAPS 28\0"
	.byte	0x1
	.uleb128 0x5f4
	.ascii "LINECAPS 30\0"
	.byte	0x1
	.uleb128 0x5f5
	.ascii "POLYGONALCAPS 32\0"
	.byte	0x1
	.uleb128 0x5f6
	.ascii "TEXTCAPS 34\0"
	.byte	0x1
	.uleb128 0x5f7
	.ascii "CLIPCAPS 36\0"
	.byte	0x1
	.uleb128 0x5f8
	.ascii "RASTERCAPS 38\0"
	.byte	0x1
	.uleb128 0x5f9
	.ascii "ASPECTX 40\0"
	.byte	0x1
	.uleb128 0x5fa
	.ascii "ASPECTY 42\0"
	.byte	0x1
	.uleb128 0x5fb
	.ascii "ASPECTXY 44\0"
	.byte	0x1
	.uleb128 0x5fd
	.ascii "LOGPIXELSX 88\0"
	.byte	0x1
	.uleb128 0x5fe
	.ascii "LOGPIXELSY 90\0"
	.byte	0x1
	.uleb128 0x600
	.ascii "SIZEPALETTE 104\0"
	.byte	0x1
	.uleb128 0x601
	.ascii "NUMRESERVED 106\0"
	.byte	0x1
	.uleb128 0x602
	.ascii "COLORRES 108\0"
	.byte	0x1
	.uleb128 0x604
	.ascii "PHYSICALWIDTH 110\0"
	.byte	0x1
	.uleb128 0x605
	.ascii "PHYSICALHEIGHT 111\0"
	.byte	0x1
	.uleb128 0x606
	.ascii "PHYSICALOFFSETX 112\0"
	.byte	0x1
	.uleb128 0x607
	.ascii "PHYSICALOFFSETY 113\0"
	.byte	0x1
	.uleb128 0x608
	.ascii "SCALINGFACTORX 114\0"
	.byte	0x1
	.uleb128 0x609
	.ascii "SCALINGFACTORY 115\0"
	.byte	0x1
	.uleb128 0x60b
	.ascii "VREFRESH 116\0"
	.byte	0x1
	.uleb128 0x60c
	.ascii "DESKTOPVERTRES 117\0"
	.byte	0x1
	.uleb128 0x60d
	.ascii "DESKTOPHORZRES 118\0"
	.byte	0x1
	.uleb128 0x60e
	.ascii "BLTALIGNMENT 119\0"
	.byte	0x1
	.uleb128 0x610
	.ascii "SHADEBLENDCAPS 120\0"
	.byte	0x1
	.uleb128 0x611
	.ascii "COLORMGMTCAPS 121\0"
	.byte	0x1
	.uleb128 0x614
	.ascii "DT_PLOTTER 0\0"
	.byte	0x1
	.uleb128 0x615
	.ascii "DT_RASDISPLAY 1\0"
	.byte	0x1
	.uleb128 0x616
	.ascii "DT_RASPRINTER 2\0"
	.byte	0x1
	.uleb128 0x617
	.ascii "DT_RASCAMERA 3\0"
	.byte	0x1
	.uleb128 0x618
	.ascii "DT_CHARSTREAM 4\0"
	.byte	0x1
	.uleb128 0x619
	.ascii "DT_METAFILE 5\0"
	.byte	0x1
	.uleb128 0x61a
	.ascii "DT_DISPFILE 6\0"
	.byte	0x1
	.uleb128 0x61c
	.ascii "CC_NONE 0\0"
	.byte	0x1
	.uleb128 0x61d
	.ascii "CC_CIRCLES 1\0"
	.byte	0x1
	.uleb128 0x61e
	.ascii "CC_PIE 2\0"
	.byte	0x1
	.uleb128 0x61f
	.ascii "CC_CHORD 4\0"
	.byte	0x1
	.uleb128 0x620
	.ascii "CC_ELLIPSES 8\0"
	.byte	0x1
	.uleb128 0x621
	.ascii "CC_WIDE 16\0"
	.byte	0x1
	.uleb128 0x622
	.ascii "CC_STYLED 32\0"
	.byte	0x1
	.uleb128 0x623
	.ascii "CC_WIDESTYLED 64\0"
	.byte	0x1
	.uleb128 0x624
	.ascii "CC_INTERIORS 128\0"
	.byte	0x1
	.uleb128 0x625
	.ascii "CC_ROUNDRECT 256\0"
	.byte	0x1
	.uleb128 0x627
	.ascii "LC_NONE 0\0"
	.byte	0x1
	.uleb128 0x628
	.ascii "LC_POLYLINE 2\0"
	.byte	0x1
	.uleb128 0x629
	.ascii "LC_MARKER 4\0"
	.byte	0x1
	.uleb128 0x62a
	.ascii "LC_POLYMARKER 8\0"
	.byte	0x1
	.uleb128 0x62b
	.ascii "LC_WIDE 16\0"
	.byte	0x1
	.uleb128 0x62c
	.ascii "LC_STYLED 32\0"
	.byte	0x1
	.uleb128 0x62d
	.ascii "LC_WIDESTYLED 64\0"
	.byte	0x1
	.uleb128 0x62e
	.ascii "LC_INTERIORS 128\0"
	.byte	0x1
	.uleb128 0x630
	.ascii "PC_NONE 0\0"
	.byte	0x1
	.uleb128 0x631
	.ascii "PC_POLYGON 1\0"
	.byte	0x1
	.uleb128 0x632
	.ascii "PC_RECTANGLE 2\0"
	.byte	0x1
	.uleb128 0x633
	.ascii "PC_WINDPOLYGON 4\0"
	.byte	0x1
	.uleb128 0x634
	.ascii "PC_TRAPEZOID 4\0"
	.byte	0x1
	.uleb128 0x635
	.ascii "PC_SCANLINE 8\0"
	.byte	0x1
	.uleb128 0x636
	.ascii "PC_WIDE 16\0"
	.byte	0x1
	.uleb128 0x637
	.ascii "PC_STYLED 32\0"
	.byte	0x1
	.uleb128 0x638
	.ascii "PC_WIDESTYLED 64\0"
	.byte	0x1
	.uleb128 0x639
	.ascii "PC_INTERIORS 128\0"
	.byte	0x1
	.uleb128 0x63a
	.ascii "PC_POLYPOLYGON 256\0"
	.byte	0x1
	.uleb128 0x63b
	.ascii "PC_PATHS 512\0"
	.byte	0x1
	.uleb128 0x63d
	.ascii "CP_NONE 0\0"
	.byte	0x1
	.uleb128 0x63e
	.ascii "CP_RECTANGLE 1\0"
	.byte	0x1
	.uleb128 0x63f
	.ascii "CP_REGION 2\0"
	.byte	0x1
	.uleb128 0x641
	.ascii "TC_OP_CHARACTER 0x00000001\0"
	.byte	0x1
	.uleb128 0x642
	.ascii "TC_OP_STROKE 0x00000002\0"
	.byte	0x1
	.uleb128 0x643
	.ascii "TC_CP_STROKE 0x00000004\0"
	.byte	0x1
	.uleb128 0x644
	.ascii "TC_CR_90 0x00000008\0"
	.byte	0x1
	.uleb128 0x645
	.ascii "TC_CR_ANY 0x00000010\0"
	.byte	0x1
	.uleb128 0x646
	.ascii "TC_SF_X_YINDEP 0x00000020\0"
	.byte	0x1
	.uleb128 0x647
	.ascii "TC_SA_DOUBLE 0x00000040\0"
	.byte	0x1
	.uleb128 0x648
	.ascii "TC_SA_INTEGER 0x00000080\0"
	.byte	0x1
	.uleb128 0x649
	.ascii "TC_SA_CONTIN 0x00000100\0"
	.byte	0x1
	.uleb128 0x64a
	.ascii "TC_EA_DOUBLE 0x00000200\0"
	.byte	0x1
	.uleb128 0x64b
	.ascii "TC_IA_ABLE 0x00000400\0"
	.byte	0x1
	.uleb128 0x64c
	.ascii "TC_UA_ABLE 0x00000800\0"
	.byte	0x1
	.uleb128 0x64d
	.ascii "TC_SO_ABLE 0x00001000\0"
	.byte	0x1
	.uleb128 0x64e
	.ascii "TC_RA_ABLE 0x00002000\0"
	.byte	0x1
	.uleb128 0x64f
	.ascii "TC_VA_ABLE 0x00004000\0"
	.byte	0x1
	.uleb128 0x650
	.ascii "TC_RESERVED 0x00008000\0"
	.byte	0x1
	.uleb128 0x651
	.ascii "TC_SCROLLBLT 0x00010000\0"
	.byte	0x1
	.uleb128 0x654
	.ascii "RC_NONE \0"
	.byte	0x1
	.uleb128 0x655
	.ascii "RC_BITBLT 1\0"
	.byte	0x1
	.uleb128 0x656
	.ascii "RC_BANDING 2\0"
	.byte	0x1
	.uleb128 0x657
	.ascii "RC_SCALING 4\0"
	.byte	0x1
	.uleb128 0x658
	.ascii "RC_BITMAP64 8\0"
	.byte	0x1
	.uleb128 0x659
	.ascii "RC_GDI20_OUTPUT 0x0010\0"
	.byte	0x1
	.uleb128 0x65a
	.ascii "RC_GDI20_STATE 0x0020\0"
	.byte	0x1
	.uleb128 0x65b
	.ascii "RC_SAVEBITMAP 0x0040\0"
	.byte	0x1
	.uleb128 0x65c
	.ascii "RC_DI_BITMAP 0x0080\0"
	.byte	0x1
	.uleb128 0x65d
	.ascii "RC_PALETTE 0x0100\0"
	.byte	0x1
	.uleb128 0x65e
	.ascii "RC_DIBTODEV 0x0200\0"
	.byte	0x1
	.uleb128 0x65f
	.ascii "RC_BIGFONT 0x0400\0"
	.byte	0x1
	.uleb128 0x660
	.ascii "RC_STRETCHBLT 0x0800\0"
	.byte	0x1
	.uleb128 0x661
	.ascii "RC_FLOODFILL 0x1000\0"
	.byte	0x1
	.uleb128 0x662
	.ascii "RC_STRETCHDIB 0x2000\0"
	.byte	0x1
	.uleb128 0x663
	.ascii "RC_OP_DX_OUTPUT 0x4000\0"
	.byte	0x1
	.uleb128 0x664
	.ascii "RC_DEVBITS 0x8000\0"
	.byte	0x1
	.uleb128 0x666
	.ascii "SB_NONE 0x00000000\0"
	.byte	0x1
	.uleb128 0x667
	.ascii "SB_CONST_ALPHA 0x00000001\0"
	.byte	0x1
	.uleb128 0x668
	.ascii "SB_PIXEL_ALPHA 0x00000002\0"
	.byte	0x1
	.uleb128 0x669
	.ascii "SB_PREMULT_ALPHA 0x00000004\0"
	.byte	0x1
	.uleb128 0x66b
	.ascii "SB_GRAD_RECT 0x00000010\0"
	.byte	0x1
	.uleb128 0x66c
	.ascii "SB_GRAD_TRI 0x00000020\0"
	.byte	0x1
	.uleb128 0x66e
	.ascii "CM_NONE 0x00000000\0"
	.byte	0x1
	.uleb128 0x66f
	.ascii "CM_DEVICE_ICM 0x00000001\0"
	.byte	0x1
	.uleb128 0x670
	.ascii "CM_GAMMA_RAMP 0x00000002\0"
	.byte	0x1
	.uleb128 0x671
	.ascii "CM_CMYK_COLOR 0x00000004\0"
	.byte	0x1
	.uleb128 0x673
	.ascii "DIB_RGB_COLORS 0\0"
	.byte	0x1
	.uleb128 0x674
	.ascii "DIB_PAL_COLORS 1\0"
	.byte	0x1
	.uleb128 0x676
	.ascii "SYSPAL_ERROR 0\0"
	.byte	0x1
	.uleb128 0x677
	.ascii "SYSPAL_STATIC 1\0"
	.byte	0x1
	.uleb128 0x678
	.ascii "SYSPAL_NOSTATIC 2\0"
	.byte	0x1
	.uleb128 0x679
	.ascii "SYSPAL_NOSTATIC256 3\0"
	.byte	0x1
	.uleb128 0x67b
	.ascii "CBM_INIT __MSABI_LONG(0x04)\0"
	.byte	0x1
	.uleb128 0x67d
	.ascii "FLOODFILLBORDER 0\0"
	.byte	0x1
	.uleb128 0x67e
	.ascii "FLOODFILLSURFACE 1\0"
	.byte	0x1
	.uleb128 0x680
	.ascii "CCHDEVICENAME 32\0"
	.byte	0x1
	.uleb128 0x682
	.ascii "CCHFORMNAME 32\0"
	.byte	0x1
	.uleb128 0x6ed
	.ascii "DM_SPECVERSION 0x0401\0"
	.byte	0x1
	.uleb128 0x6ef
	.ascii "DM_ORIENTATION __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x6f0
	.ascii "DM_PAPERSIZE __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x6f1
	.ascii "DM_PAPERLENGTH __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x6f2
	.ascii "DM_PAPERWIDTH __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x6f3
	.ascii "DM_SCALE __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0x6f4
	.ascii "DM_POSITION __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0x6f5
	.ascii "DM_NUP __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0x6f6
	.ascii "DM_DISPLAYORIENTATION __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0x6f7
	.ascii "DM_COPIES __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x6f8
	.ascii "DM_DEFAULTSOURCE __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x6f9
	.ascii "DM_PRINTQUALITY __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0x6fa
	.ascii "DM_COLOR __MSABI_LONG(0x00000800)\0"
	.byte	0x1
	.uleb128 0x6fb
	.ascii "DM_DUPLEX __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0x6fc
	.ascii "DM_YRESOLUTION __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0x6fd
	.ascii "DM_TTOPTION __MSABI_LONG(0x00004000)\0"
	.byte	0x1
	.uleb128 0x6fe
	.ascii "DM_COLLATE __MSABI_LONG(0x00008000)\0"
	.byte	0x1
	.uleb128 0x6ff
	.ascii "DM_FORMNAME __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x700
	.ascii "DM_LOGPIXELS __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x701
	.ascii "DM_BITSPERPEL __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x702
	.ascii "DM_PELSWIDTH __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x703
	.ascii "DM_PELSHEIGHT __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x704
	.ascii "DM_DISPLAYFLAGS __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0x705
	.ascii "DM_DISPLAYFREQUENCY __MSABI_LONG(0x00400000)\0"
	.byte	0x1
	.uleb128 0x706
	.ascii "DM_ICMMETHOD __MSABI_LONG(0x00800000)\0"
	.byte	0x1
	.uleb128 0x707
	.ascii "DM_ICMINTENT __MSABI_LONG(0x01000000)\0"
	.byte	0x1
	.uleb128 0x708
	.ascii "DM_MEDIATYPE __MSABI_LONG(0x02000000)\0"
	.byte	0x1
	.uleb128 0x709
	.ascii "DM_DITHERTYPE __MSABI_LONG(0x04000000)\0"
	.byte	0x1
	.uleb128 0x70a
	.ascii "DM_PANNINGWIDTH __MSABI_LONG(0x08000000)\0"
	.byte	0x1
	.uleb128 0x70b
	.ascii "DM_PANNINGHEIGHT __MSABI_LONG(0x10000000)\0"
	.byte	0x1
	.uleb128 0x70c
	.ascii "DM_DISPLAYFIXEDOUTPUT __MSABI_LONG(0x20000000)\0"
	.byte	0x1
	.uleb128 0x70e
	.ascii "DMORIENT_PORTRAIT 1\0"
	.byte	0x1
	.uleb128 0x70f
	.ascii "DMORIENT_LANDSCAPE 2\0"
	.byte	0x1
	.uleb128 0x711
	.ascii "DMPAPER_FIRST DMPAPER_LETTER\0"
	.byte	0x1
	.uleb128 0x712
	.ascii "DMPAPER_LETTER 1\0"
	.byte	0x1
	.uleb128 0x713
	.ascii "DMPAPER_LETTERSMALL 2\0"
	.byte	0x1
	.uleb128 0x714
	.ascii "DMPAPER_TABLOID 3\0"
	.byte	0x1
	.uleb128 0x715
	.ascii "DMPAPER_LEDGER 4\0"
	.byte	0x1
	.uleb128 0x716
	.ascii "DMPAPER_LEGAL 5\0"
	.byte	0x1
	.uleb128 0x717
	.ascii "DMPAPER_STATEMENT 6\0"
	.byte	0x1
	.uleb128 0x718
	.ascii "DMPAPER_EXECUTIVE 7\0"
	.byte	0x1
	.uleb128 0x719
	.ascii "DMPAPER_A3 8\0"
	.byte	0x1
	.uleb128 0x71a
	.ascii "DMPAPER_A4 9\0"
	.byte	0x1
	.uleb128 0x71b
	.ascii "DMPAPER_A4SMALL 10\0"
	.byte	0x1
	.uleb128 0x71c
	.ascii "DMPAPER_A5 11\0"
	.byte	0x1
	.uleb128 0x71d
	.ascii "DMPAPER_B4 12\0"
	.byte	0x1
	.uleb128 0x71e
	.ascii "DMPAPER_B5 13\0"
	.byte	0x1
	.uleb128 0x71f
	.ascii "DMPAPER_FOLIO 14\0"
	.byte	0x1
	.uleb128 0x720
	.ascii "DMPAPER_QUARTO 15\0"
	.byte	0x1
	.uleb128 0x721
	.ascii "DMPAPER_10X14 16\0"
	.byte	0x1
	.uleb128 0x722
	.ascii "DMPAPER_11X17 17\0"
	.byte	0x1
	.uleb128 0x723
	.ascii "DMPAPER_NOTE 18\0"
	.byte	0x1
	.uleb128 0x724
	.ascii "DMPAPER_ENV_9 19\0"
	.byte	0x1
	.uleb128 0x725
	.ascii "DMPAPER_ENV_10 20\0"
	.byte	0x1
	.uleb128 0x726
	.ascii "DMPAPER_ENV_11 21\0"
	.byte	0x1
	.uleb128 0x727
	.ascii "DMPAPER_ENV_12 22\0"
	.byte	0x1
	.uleb128 0x728
	.ascii "DMPAPER_ENV_14 23\0"
	.byte	0x1
	.uleb128 0x729
	.ascii "DMPAPER_CSHEET 24\0"
	.byte	0x1
	.uleb128 0x72a
	.ascii "DMPAPER_DSHEET 25\0"
	.byte	0x1
	.uleb128 0x72b
	.ascii "DMPAPER_ESHEET 26\0"
	.byte	0x1
	.uleb128 0x72c
	.ascii "DMPAPER_ENV_DL 27\0"
	.byte	0x1
	.uleb128 0x72d
	.ascii "DMPAPER_ENV_C5 28\0"
	.byte	0x1
	.uleb128 0x72e
	.ascii "DMPAPER_ENV_C3 29\0"
	.byte	0x1
	.uleb128 0x72f
	.ascii "DMPAPER_ENV_C4 30\0"
	.byte	0x1
	.uleb128 0x730
	.ascii "DMPAPER_ENV_C6 31\0"
	.byte	0x1
	.uleb128 0x731
	.ascii "DMPAPER_ENV_C65 32\0"
	.byte	0x1
	.uleb128 0x732
	.ascii "DMPAPER_ENV_B4 33\0"
	.byte	0x1
	.uleb128 0x733
	.ascii "DMPAPER_ENV_B5 34\0"
	.byte	0x1
	.uleb128 0x734
	.ascii "DMPAPER_ENV_B6 35\0"
	.byte	0x1
	.uleb128 0x735
	.ascii "DMPAPER_ENV_ITALY 36\0"
	.byte	0x1
	.uleb128 0x736
	.ascii "DMPAPER_ENV_MONARCH 37\0"
	.byte	0x1
	.uleb128 0x737
	.ascii "DMPAPER_ENV_PERSONAL 38\0"
	.byte	0x1
	.uleb128 0x738
	.ascii "DMPAPER_FANFOLD_US 39\0"
	.byte	0x1
	.uleb128 0x739
	.ascii "DMPAPER_FANFOLD_STD_GERMAN 40\0"
	.byte	0x1
	.uleb128 0x73a
	.ascii "DMPAPER_FANFOLD_LGL_GERMAN 41\0"
	.byte	0x1
	.uleb128 0x73b
	.ascii "DMPAPER_ISO_B4 42\0"
	.byte	0x1
	.uleb128 0x73c
	.ascii "DMPAPER_JAPANESE_POSTCARD 43\0"
	.byte	0x1
	.uleb128 0x73d
	.ascii "DMPAPER_9X11 44\0"
	.byte	0x1
	.uleb128 0x73e
	.ascii "DMPAPER_10X11 45\0"
	.byte	0x1
	.uleb128 0x73f
	.ascii "DMPAPER_15X11 46\0"
	.byte	0x1
	.uleb128 0x740
	.ascii "DMPAPER_ENV_INVITE 47\0"
	.byte	0x1
	.uleb128 0x741
	.ascii "DMPAPER_RESERVED_48 48\0"
	.byte	0x1
	.uleb128 0x742
	.ascii "DMPAPER_RESERVED_49 49\0"
	.byte	0x1
	.uleb128 0x743
	.ascii "DMPAPER_LETTER_EXTRA 50\0"
	.byte	0x1
	.uleb128 0x744
	.ascii "DMPAPER_LEGAL_EXTRA 51\0"
	.byte	0x1
	.uleb128 0x745
	.ascii "DMPAPER_TABLOID_EXTRA 52\0"
	.byte	0x1
	.uleb128 0x746
	.ascii "DMPAPER_A4_EXTRA 53\0"
	.byte	0x1
	.uleb128 0x747
	.ascii "DMPAPER_LETTER_TRANSVERSE 54\0"
	.byte	0x1
	.uleb128 0x748
	.ascii "DMPAPER_A4_TRANSVERSE 55\0"
	.byte	0x1
	.uleb128 0x749
	.ascii "DMPAPER_LETTER_EXTRA_TRANSVERSE 56\0"
	.byte	0x1
	.uleb128 0x74a
	.ascii "DMPAPER_A_PLUS 57\0"
	.byte	0x1
	.uleb128 0x74b
	.ascii "DMPAPER_B_PLUS 58\0"
	.byte	0x1
	.uleb128 0x74c
	.ascii "DMPAPER_LETTER_PLUS 59\0"
	.byte	0x1
	.uleb128 0x74d
	.ascii "DMPAPER_A4_PLUS 60\0"
	.byte	0x1
	.uleb128 0x74e
	.ascii "DMPAPER_A5_TRANSVERSE 61\0"
	.byte	0x1
	.uleb128 0x74f
	.ascii "DMPAPER_B5_TRANSVERSE 62\0"
	.byte	0x1
	.uleb128 0x750
	.ascii "DMPAPER_A3_EXTRA 63\0"
	.byte	0x1
	.uleb128 0x751
	.ascii "DMPAPER_A5_EXTRA 64\0"
	.byte	0x1
	.uleb128 0x752
	.ascii "DMPAPER_B5_EXTRA 65\0"
	.byte	0x1
	.uleb128 0x753
	.ascii "DMPAPER_A2 66\0"
	.byte	0x1
	.uleb128 0x754
	.ascii "DMPAPER_A3_TRANSVERSE 67\0"
	.byte	0x1
	.uleb128 0x755
	.ascii "DMPAPER_A3_EXTRA_TRANSVERSE 68\0"
	.byte	0x1
	.uleb128 0x756
	.ascii "DMPAPER_DBL_JAPANESE_POSTCARD 69\0"
	.byte	0x1
	.uleb128 0x757
	.ascii "DMPAPER_A6 70\0"
	.byte	0x1
	.uleb128 0x758
	.ascii "DMPAPER_JENV_KAKU2 71\0"
	.byte	0x1
	.uleb128 0x759
	.ascii "DMPAPER_JENV_KAKU3 72\0"
	.byte	0x1
	.uleb128 0x75a
	.ascii "DMPAPER_JENV_CHOU3 73\0"
	.byte	0x1
	.uleb128 0x75b
	.ascii "DMPAPER_JENV_CHOU4 74\0"
	.byte	0x1
	.uleb128 0x75c
	.ascii "DMPAPER_LETTER_ROTATED 75\0"
	.byte	0x1
	.uleb128 0x75d
	.ascii "DMPAPER_A3_ROTATED 76\0"
	.byte	0x1
	.uleb128 0x75e
	.ascii "DMPAPER_A4_ROTATED 77\0"
	.byte	0x1
	.uleb128 0x75f
	.ascii "DMPAPER_A5_ROTATED 78\0"
	.byte	0x1
	.uleb128 0x760
	.ascii "DMPAPER_B4_JIS_ROTATED 79\0"
	.byte	0x1
	.uleb128 0x761
	.ascii "DMPAPER_B5_JIS_ROTATED 80\0"
	.byte	0x1
	.uleb128 0x762
	.ascii "DMPAPER_JAPANESE_POSTCARD_ROTATED 81\0"
	.byte	0x1
	.uleb128 0x763
	.ascii "DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED 82\0"
	.byte	0x1
	.uleb128 0x764
	.ascii "DMPAPER_A6_ROTATED 83\0"
	.byte	0x1
	.uleb128 0x765
	.ascii "DMPAPER_JENV_KAKU2_ROTATED 84\0"
	.byte	0x1
	.uleb128 0x766
	.ascii "DMPAPER_JENV_KAKU3_ROTATED 85\0"
	.byte	0x1
	.uleb128 0x767
	.ascii "DMPAPER_JENV_CHOU3_ROTATED 86\0"
	.byte	0x1
	.uleb128 0x768
	.ascii "DMPAPER_JENV_CHOU4_ROTATED 87\0"
	.byte	0x1
	.uleb128 0x769
	.ascii "DMPAPER_B6_JIS 88\0"
	.byte	0x1
	.uleb128 0x76a
	.ascii "DMPAPER_B6_JIS_ROTATED 89\0"
	.byte	0x1
	.uleb128 0x76b
	.ascii "DMPAPER_12X11 90\0"
	.byte	0x1
	.uleb128 0x76c
	.ascii "DMPAPER_JENV_YOU4 91\0"
	.byte	0x1
	.uleb128 0x76d
	.ascii "DMPAPER_JENV_YOU4_ROTATED 92\0"
	.byte	0x1
	.uleb128 0x76e
	.ascii "DMPAPER_P16K 93\0"
	.byte	0x1
	.uleb128 0x76f
	.ascii "DMPAPER_P32K 94\0"
	.byte	0x1
	.uleb128 0x770
	.ascii "DMPAPER_P32KBIG 95\0"
	.byte	0x1
	.uleb128 0x771
	.ascii "DMPAPER_PENV_1 96\0"
	.byte	0x1
	.uleb128 0x772
	.ascii "DMPAPER_PENV_2 97\0"
	.byte	0x1
	.uleb128 0x773
	.ascii "DMPAPER_PENV_3 98\0"
	.byte	0x1
	.uleb128 0x774
	.ascii "DMPAPER_PENV_4 99\0"
	.byte	0x1
	.uleb128 0x775
	.ascii "DMPAPER_PENV_5 100\0"
	.byte	0x1
	.uleb128 0x776
	.ascii "DMPAPER_PENV_6 101\0"
	.byte	0x1
	.uleb128 0x777
	.ascii "DMPAPER_PENV_7 102\0"
	.byte	0x1
	.uleb128 0x778
	.ascii "DMPAPER_PENV_8 103\0"
	.byte	0x1
	.uleb128 0x779
	.ascii "DMPAPER_PENV_9 104\0"
	.byte	0x1
	.uleb128 0x77a
	.ascii "DMPAPER_PENV_10 105\0"
	.byte	0x1
	.uleb128 0x77b
	.ascii "DMPAPER_P16K_ROTATED 106\0"
	.byte	0x1
	.uleb128 0x77c
	.ascii "DMPAPER_P32K_ROTATED 107\0"
	.byte	0x1
	.uleb128 0x77d
	.ascii "DMPAPER_P32KBIG_ROTATED 108\0"
	.byte	0x1
	.uleb128 0x77e
	.ascii "DMPAPER_PENV_1_ROTATED 109\0"
	.byte	0x1
	.uleb128 0x77f
	.ascii "DMPAPER_PENV_2_ROTATED 110\0"
	.byte	0x1
	.uleb128 0x780
	.ascii "DMPAPER_PENV_3_ROTATED 111\0"
	.byte	0x1
	.uleb128 0x781
	.ascii "DMPAPER_PENV_4_ROTATED 112\0"
	.byte	0x1
	.uleb128 0x782
	.ascii "DMPAPER_PENV_5_ROTATED 113\0"
	.byte	0x1
	.uleb128 0x783
	.ascii "DMPAPER_PENV_6_ROTATED 114\0"
	.byte	0x1
	.uleb128 0x784
	.ascii "DMPAPER_PENV_7_ROTATED 115\0"
	.byte	0x1
	.uleb128 0x785
	.ascii "DMPAPER_PENV_8_ROTATED 116\0"
	.byte	0x1
	.uleb128 0x786
	.ascii "DMPAPER_PENV_9_ROTATED 117\0"
	.byte	0x1
	.uleb128 0x787
	.ascii "DMPAPER_PENV_10_ROTATED 118\0"
	.byte	0x1
	.uleb128 0x789
	.ascii "DMPAPER_LAST DMPAPER_PENV_10_ROTATED\0"
	.byte	0x1
	.uleb128 0x78b
	.ascii "DMPAPER_USER 256\0"
	.byte	0x1
	.uleb128 0x78d
	.ascii "DMBIN_FIRST DMBIN_UPPER\0"
	.byte	0x1
	.uleb128 0x78e
	.ascii "DMBIN_UPPER 1\0"
	.byte	0x1
	.uleb128 0x78f
	.ascii "DMBIN_ONLYONE 1\0"
	.byte	0x1
	.uleb128 0x790
	.ascii "DMBIN_LOWER 2\0"
	.byte	0x1
	.uleb128 0x791
	.ascii "DMBIN_MIDDLE 3\0"
	.byte	0x1
	.uleb128 0x792
	.ascii "DMBIN_MANUAL 4\0"
	.byte	0x1
	.uleb128 0x793
	.ascii "DMBIN_ENVELOPE 5\0"
	.byte	0x1
	.uleb128 0x794
	.ascii "DMBIN_ENVMANUAL 6\0"
	.byte	0x1
	.uleb128 0x795
	.ascii "DMBIN_AUTO 7\0"
	.byte	0x1
	.uleb128 0x796
	.ascii "DMBIN_TRACTOR 8\0"
	.byte	0x1
	.uleb128 0x797
	.ascii "DMBIN_SMALLFMT 9\0"
	.byte	0x1
	.uleb128 0x798
	.ascii "DMBIN_LARGEFMT 10\0"
	.byte	0x1
	.uleb128 0x799
	.ascii "DMBIN_LARGECAPACITY 11\0"
	.byte	0x1
	.uleb128 0x79a
	.ascii "DMBIN_CASSETTE 14\0"
	.byte	0x1
	.uleb128 0x79b
	.ascii "DMBIN_FORMSOURCE 15\0"
	.byte	0x1
	.uleb128 0x79c
	.ascii "DMBIN_LAST DMBIN_FORMSOURCE\0"
	.byte	0x1
	.uleb128 0x79e
	.ascii "DMBIN_USER 256\0"
	.byte	0x1
	.uleb128 0x7a0
	.ascii "DMRES_DRAFT (-1)\0"
	.byte	0x1
	.uleb128 0x7a1
	.ascii "DMRES_LOW (-2)\0"
	.byte	0x1
	.uleb128 0x7a2
	.ascii "DMRES_MEDIUM (-3)\0"
	.byte	0x1
	.uleb128 0x7a3
	.ascii "DMRES_HIGH (-4)\0"
	.byte	0x1
	.uleb128 0x7a5
	.ascii "DMCOLOR_MONOCHROME 1\0"
	.byte	0x1
	.uleb128 0x7a6
	.ascii "DMCOLOR_COLOR 2\0"
	.byte	0x1
	.uleb128 0x7a8
	.ascii "DMDUP_SIMPLEX 1\0"
	.byte	0x1
	.uleb128 0x7a9
	.ascii "DMDUP_VERTICAL 2\0"
	.byte	0x1
	.uleb128 0x7aa
	.ascii "DMDUP_HORIZONTAL 3\0"
	.byte	0x1
	.uleb128 0x7ac
	.ascii "DMTT_BITMAP 1\0"
	.byte	0x1
	.uleb128 0x7ad
	.ascii "DMTT_DOWNLOAD 2\0"
	.byte	0x1
	.uleb128 0x7ae
	.ascii "DMTT_SUBDEV 3\0"
	.byte	0x1
	.uleb128 0x7af
	.ascii "DMTT_DOWNLOAD_OUTLINE 4\0"
	.byte	0x1
	.uleb128 0x7b1
	.ascii "DMCOLLATE_FALSE 0\0"
	.byte	0x1
	.uleb128 0x7b2
	.ascii "DMCOLLATE_TRUE 1\0"
	.byte	0x1
	.uleb128 0x7b4
	.ascii "DMDO_DEFAULT 0\0"
	.byte	0x1
	.uleb128 0x7b5
	.ascii "DMDO_90 1\0"
	.byte	0x1
	.uleb128 0x7b6
	.ascii "DMDO_180 2\0"
	.byte	0x1
	.uleb128 0x7b7
	.ascii "DMDO_270 3\0"
	.byte	0x1
	.uleb128 0x7b9
	.ascii "DMDFO_DEFAULT 0\0"
	.byte	0x1
	.uleb128 0x7ba
	.ascii "DMDFO_STRETCH 1\0"
	.byte	0x1
	.uleb128 0x7bb
	.ascii "DMDFO_CENTER 2\0"
	.byte	0x1
	.uleb128 0x7bd
	.ascii "DM_INTERLACED 0x00000002\0"
	.byte	0x1
	.uleb128 0x7be
	.ascii "DMDISPLAYFLAGS_TEXTMODE 0x00000004\0"
	.byte	0x1
	.uleb128 0x7c0
	.ascii "DMNUP_SYSTEM 1\0"
	.byte	0x1
	.uleb128 0x7c1
	.ascii "DMNUP_ONEUP 2\0"
	.byte	0x1
	.uleb128 0x7c3
	.ascii "DMICMMETHOD_NONE 1\0"
	.byte	0x1
	.uleb128 0x7c4
	.ascii "DMICMMETHOD_SYSTEM 2\0"
	.byte	0x1
	.uleb128 0x7c5
	.ascii "DMICMMETHOD_DRIVER 3\0"
	.byte	0x1
	.uleb128 0x7c6
	.ascii "DMICMMETHOD_DEVICE 4\0"
	.byte	0x1
	.uleb128 0x7c8
	.ascii "DMICMMETHOD_USER 256\0"
	.byte	0x1
	.uleb128 0x7ca
	.ascii "DMICM_SATURATE 1\0"
	.byte	0x1
	.uleb128 0x7cb
	.ascii "DMICM_CONTRAST 2\0"
	.byte	0x1
	.uleb128 0x7cc
	.ascii "DMICM_COLORIMETRIC 3\0"
	.byte	0x1
	.uleb128 0x7cd
	.ascii "DMICM_ABS_COLORIMETRIC 4\0"
	.byte	0x1
	.uleb128 0x7cf
	.ascii "DMICM_USER 256\0"
	.byte	0x1
	.uleb128 0x7d1
	.ascii "DMMEDIA_STANDARD 1\0"
	.byte	0x1
	.uleb128 0x7d2
	.ascii "DMMEDIA_TRANSPARENCY 2\0"
	.byte	0x1
	.uleb128 0x7d3
	.ascii "DMMEDIA_GLOSSY 3\0"
	.byte	0x1
	.uleb128 0x7d5
	.ascii "DMMEDIA_USER 256\0"
	.byte	0x1
	.uleb128 0x7d7
	.ascii "DMDITHER_NONE 1\0"
	.byte	0x1
	.uleb128 0x7d8
	.ascii "DMDITHER_COARSE 2\0"
	.byte	0x1
	.uleb128 0x7d9
	.ascii "DMDITHER_FINE 3\0"
	.byte	0x1
	.uleb128 0x7da
	.ascii "DMDITHER_LINEART 4\0"
	.byte	0x1
	.uleb128 0x7db
	.ascii "DMDITHER_ERRORDIFFUSION 5\0"
	.byte	0x1
	.uleb128 0x7dc
	.ascii "DMDITHER_RESERVED6 6\0"
	.byte	0x1
	.uleb128 0x7dd
	.ascii "DMDITHER_RESERVED7 7\0"
	.byte	0x1
	.uleb128 0x7de
	.ascii "DMDITHER_RESERVED8 8\0"
	.byte	0x1
	.uleb128 0x7df
	.ascii "DMDITHER_RESERVED9 9\0"
	.byte	0x1
	.uleb128 0x7e0
	.ascii "DMDITHER_GRAYSCALE 10\0"
	.byte	0x1
	.uleb128 0x7e2
	.ascii "DMDITHER_USER 256\0"
	.byte	0x1
	.uleb128 0x7fc
	.ascii "DISPLAY_DEVICE_ATTACHED_TO_DESKTOP 0x00000001\0"
	.byte	0x1
	.uleb128 0x7fd
	.ascii "DISPLAY_DEVICE_MULTI_DRIVER 0x00000002\0"
	.byte	0x1
	.uleb128 0x7fe
	.ascii "DISPLAY_DEVICE_PRIMARY_DEVICE 0x00000004\0"
	.byte	0x1
	.uleb128 0x7ff
	.ascii "DISPLAY_DEVICE_MIRRORING_DRIVER 0x00000008\0"
	.byte	0x1
	.uleb128 0x800
	.ascii "DISPLAY_DEVICE_VGA_COMPATIBLE 0x00000010\0"
	.byte	0x1
	.uleb128 0x801
	.ascii "DISPLAY_DEVICE_REMOVABLE 0x00000020\0"
	.byte	0x1
	.uleb128 0x805
	.ascii "DISPLAY_DEVICE_TS_COMPATIBLE 0x00200000\0"
	.byte	0x1
	.uleb128 0x809
	.ascii "DISPLAY_DEVICE_MODESPRUNED 0x08000000\0"
	.byte	0x1
	.uleb128 0x80a
	.ascii "DISPLAY_DEVICE_REMOTE 0x04000000\0"
	.byte	0x1
	.uleb128 0x80b
	.ascii "DISPLAY_DEVICE_DISCONNECT 0x02000000\0"
	.byte	0x1
	.uleb128 0x80d
	.ascii "DISPLAY_DEVICE_ACTIVE 0x00000001\0"
	.byte	0x1
	.uleb128 0x80e
	.ascii "DISPLAY_DEVICE_ATTACHED 0x00000002\0"
	.byte	0x1
	.uleb128 0x908
	.ascii "RDH_RECTANGLES 1\0"
	.byte	0x1
	.uleb128 0x919
	.ascii "SYSRGN 4\0"
	.byte	0x1
	.uleb128 0x9aa
	.ascii "GGO_METRICS 0\0"
	.byte	0x1
	.uleb128 0x9ab
	.ascii "GGO_BITMAP 1\0"
	.byte	0x1
	.uleb128 0x9ac
	.ascii "GGO_NATIVE 2\0"
	.byte	0x1
	.uleb128 0x9ad
	.ascii "GGO_BEZIER 3\0"
	.byte	0x1
	.uleb128 0x9ae
	.ascii "GGO_GRAY2_BITMAP 4\0"
	.byte	0x1
	.uleb128 0x9af
	.ascii "GGO_GRAY4_BITMAP 5\0"
	.byte	0x1
	.uleb128 0x9b0
	.ascii "GGO_GRAY8_BITMAP 6\0"
	.byte	0x1
	.uleb128 0x9b1
	.ascii "GGO_GLYPH_INDEX 0x0080\0"
	.byte	0x1
	.uleb128 0x9b2
	.ascii "GGO_UNHINTED 0x0100\0"
	.byte	0x1
	.uleb128 0x9b4
	.ascii "TT_POLYGON_TYPE 24\0"
	.byte	0x1
	.uleb128 0x9b6
	.ascii "TT_PRIM_LINE 1\0"
	.byte	0x1
	.uleb128 0x9b7
	.ascii "TT_PRIM_QSPLINE 2\0"
	.byte	0x1
	.uleb128 0x9b8
	.ascii "TT_PRIM_CSPLINE 3\0"
	.byte	0x1
	.uleb128 0x9cd
	.ascii "GCP_DBCS 0x0001\0"
	.byte	0x1
	.uleb128 0x9ce
	.ascii "GCP_REORDER 0x0002\0"
	.byte	0x1
	.uleb128 0x9cf
	.ascii "GCP_USEKERNING 0x0008\0"
	.byte	0x1
	.uleb128 0x9d0
	.ascii "GCP_GLYPHSHAPE 0x0010\0"
	.byte	0x1
	.uleb128 0x9d1
	.ascii "GCP_LIGATE 0x0020\0"
	.byte	0x1
	.uleb128 0x9d2
	.ascii "GCP_DIACRITIC 0x0100\0"
	.byte	0x1
	.uleb128 0x9d3
	.ascii "GCP_KASHIDA 0x0400\0"
	.byte	0x1
	.uleb128 0x9d4
	.ascii "GCP_ERROR 0x8000\0"
	.byte	0x1
	.uleb128 0x9d5
	.ascii "FLI_MASK 0x103B\0"
	.byte	0x1
	.uleb128 0x9d7
	.ascii "GCP_JUSTIFY __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x9d8
	.ascii "FLI_GLYPHS __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x9d9
	.ascii "GCP_CLASSIN __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x9da
	.ascii "GCP_MAXEXTENT __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x9db
	.ascii "GCP_JUSTIFYIN __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0x9dc
	.ascii "GCP_DISPLAYZWG __MSABI_LONG(0x00400000)\0"
	.byte	0x1
	.uleb128 0x9dd
	.ascii "GCP_SYMSWAPOFF __MSABI_LONG(0x00800000)\0"
	.byte	0x1
	.uleb128 0x9de
	.ascii "GCP_NUMERICOVERRIDE __MSABI_LONG(0x01000000)\0"
	.byte	0x1
	.uleb128 0x9df
	.ascii "GCP_NEUTRALOVERRIDE __MSABI_LONG(0x02000000)\0"
	.byte	0x1
	.uleb128 0x9e0
	.ascii "GCP_NUMERICSLATIN __MSABI_LONG(0x04000000)\0"
	.byte	0x1
	.uleb128 0x9e1
	.ascii "GCP_NUMERICSLOCAL __MSABI_LONG(0x08000000)\0"
	.byte	0x1
	.uleb128 0x9e3
	.ascii "GCPCLASS_LATIN 1\0"
	.byte	0x1
	.uleb128 0x9e4
	.ascii "GCPCLASS_HEBREW 2\0"
	.byte	0x1
	.uleb128 0x9e5
	.ascii "GCPCLASS_ARABIC 2\0"
	.byte	0x1
	.uleb128 0x9e6
	.ascii "GCPCLASS_NEUTRAL 3\0"
	.byte	0x1
	.uleb128 0x9e7
	.ascii "GCPCLASS_LOCALNUMBER 4\0"
	.byte	0x1
	.uleb128 0x9e8
	.ascii "GCPCLASS_LATINNUMBER 5\0"
	.byte	0x1
	.uleb128 0x9e9
	.ascii "GCPCLASS_LATINNUMERICTERMINATOR 6\0"
	.byte	0x1
	.uleb128 0x9ea
	.ascii "GCPCLASS_LATINNUMERICSEPARATOR 7\0"
	.byte	0x1
	.uleb128 0x9eb
	.ascii "GCPCLASS_NUMERICSEPARATOR 8\0"
	.byte	0x1
	.uleb128 0x9ec
	.ascii "GCPCLASS_PREBOUNDLTR 0x80\0"
	.byte	0x1
	.uleb128 0x9ed
	.ascii "GCPCLASS_PREBOUNDRTL 0x40\0"
	.byte	0x1
	.uleb128 0x9ee
	.ascii "GCPCLASS_POSTBOUNDLTR 0x20\0"
	.byte	0x1
	.uleb128 0x9ef
	.ascii "GCPCLASS_POSTBOUNDRTL 0x10\0"
	.byte	0x1
	.uleb128 0x9f1
	.ascii "GCPGLYPH_LINKBEFORE 0x8000\0"
	.byte	0x1
	.uleb128 0x9f2
	.ascii "GCPGLYPH_LINKAFTER 0x4000\0"
	.byte	0x1
	.uleb128 0xa16
	.ascii "TT_AVAILABLE 0x0001\0"
	.byte	0x1
	.uleb128 0xa17
	.ascii "TT_ENABLED 0x0002\0"
	.byte	0x1
	.uleb128 0xa38
	.ascii "PFD_TYPE_RGBA 0\0"
	.byte	0x1
	.uleb128 0xa39
	.ascii "PFD_TYPE_COLORINDEX 1\0"
	.byte	0x1
	.uleb128 0xa3b
	.ascii "PFD_MAIN_PLANE 0\0"
	.byte	0x1
	.uleb128 0xa3c
	.ascii "PFD_OVERLAY_PLANE 1\0"
	.byte	0x1
	.uleb128 0xa3d
	.ascii "PFD_UNDERLAY_PLANE (-1)\0"
	.byte	0x1
	.uleb128 0xa3f
	.ascii "PFD_DOUBLEBUFFER 0x00000001\0"
	.byte	0x1
	.uleb128 0xa40
	.ascii "PFD_STEREO 0x00000002\0"
	.byte	0x1
	.uleb128 0xa41
	.ascii "PFD_DRAW_TO_WINDOW 0x00000004\0"
	.byte	0x1
	.uleb128 0xa42
	.ascii "PFD_DRAW_TO_BITMAP 0x00000008\0"
	.byte	0x1
	.uleb128 0xa43
	.ascii "PFD_SUPPORT_GDI 0x00000010\0"
	.byte	0x1
	.uleb128 0xa44
	.ascii "PFD_SUPPORT_OPENGL 0x00000020\0"
	.byte	0x1
	.uleb128 0xa45
	.ascii "PFD_GENERIC_FORMAT 0x00000040\0"
	.byte	0x1
	.uleb128 0xa46
	.ascii "PFD_NEED_PALETTE 0x00000080\0"
	.byte	0x1
	.uleb128 0xa47
	.ascii "PFD_NEED_SYSTEM_PALETTE 0x00000100\0"
	.byte	0x1
	.uleb128 0xa48
	.ascii "PFD_SWAP_EXCHANGE 0x00000200\0"
	.byte	0x1
	.uleb128 0xa49
	.ascii "PFD_SWAP_COPY 0x00000400\0"
	.byte	0x1
	.uleb128 0xa4a
	.ascii "PFD_SWAP_LAYER_BUFFERS 0x00000800\0"
	.byte	0x1
	.uleb128 0xa4b
	.ascii "PFD_GENERIC_ACCELERATED 0x00001000\0"
	.byte	0x1
	.uleb128 0xa4c
	.ascii "PFD_SUPPORT_DIRECTDRAW 0x00002000\0"
	.byte	0x1
	.uleb128 0xa4d
	.ascii "PFD_DIRECT3D_ACCELERATED 0x00004000\0"
	.byte	0x1
	.uleb128 0xa4e
	.ascii "PFD_SUPPORT_COMPOSITION 0x00008000\0"
	.byte	0x1
	.uleb128 0xa50
	.ascii "PFD_DEPTH_DONTCARE 0x20000000\0"
	.byte	0x1
	.uleb128 0xa51
	.ascii "PFD_DOUBLEBUFFER_DONTCARE 0x40000000\0"
	.byte	0x1
	.uleb128 0xa52
	.ascii "PFD_STEREO_DONTCARE 0x80000000\0"
	.byte	0x1
	.uleb128 0xa59
	.ascii "OLDFONTENUMPROC __MINGW_NAME_AW(OLDFONTENUMPROC)\0"
	.byte	0x1
	.uleb128 0xa69
	.ascii "AddFontResource __MINGW_NAME_AW(AddFontResource)\0"
	.byte	0x1
	.uleb128 0xa6a
	.ascii "CopyMetaFile __MINGW_NAME_AW(CopyMetaFile)\0"
	.byte	0x1
	.uleb128 0xa6b
	.ascii "CreateDC __MINGW_NAME_AW(CreateDC)\0"
	.byte	0x1
	.uleb128 0xa6c
	.ascii "CreateFontIndirect __MINGW_NAME_AW(CreateFontIndirect)\0"
	.byte	0x1
	.uleb128 0xa6d
	.ascii "CreateFont __MINGW_NAME_AW(CreateFont)\0"
	.byte	0x1
	.uleb128 0xa6e
	.ascii "CreateIC __MINGW_NAME_AW(CreateIC)\0"
	.byte	0x1
	.uleb128 0xa6f
	.ascii "CreateMetaFile __MINGW_NAME_AW(CreateMetaFile)\0"
	.byte	0x1
	.uleb128 0xa70
	.ascii "CreateScalableFontResource __MINGW_NAME_AW(CreateScalableFontResource)\0"
	.byte	0x1
	.uleb128 0xaa9
	.ascii "DM_UPDATE 1\0"
	.byte	0x1
	.uleb128 0xaaa
	.ascii "DM_COPY 2\0"
	.byte	0x1
	.uleb128 0xaab
	.ascii "DM_PROMPT 4\0"
	.byte	0x1
	.uleb128 0xaac
	.ascii "DM_MODIFY 8\0"
	.byte	0x1
	.uleb128 0xaae
	.ascii "DM_IN_BUFFER DM_MODIFY\0"
	.byte	0x1
	.uleb128 0xaaf
	.ascii "DM_IN_PROMPT DM_PROMPT\0"
	.byte	0x1
	.uleb128 0xab0
	.ascii "DM_OUT_BUFFER DM_COPY\0"
	.byte	0x1
	.uleb128 0xab1
	.ascii "DM_OUT_DEFAULT DM_UPDATE\0"
	.byte	0x1
	.uleb128 0xab3
	.ascii "DC_FIELDS 1\0"
	.byte	0x1
	.uleb128 0xab4
	.ascii "DC_PAPERS 2\0"
	.byte	0x1
	.uleb128 0xab5
	.ascii "DC_PAPERSIZE 3\0"
	.byte	0x1
	.uleb128 0xab6
	.ascii "DC_MINEXTENT 4\0"
	.byte	0x1
	.uleb128 0xab7
	.ascii "DC_MAXEXTENT 5\0"
	.byte	0x1
	.uleb128 0xab8
	.ascii "DC_BINS 6\0"
	.byte	0x1
	.uleb128 0xab9
	.ascii "DC_DUPLEX 7\0"
	.byte	0x1
	.uleb128 0xaba
	.ascii "DC_SIZE 8\0"
	.byte	0x1
	.uleb128 0xabb
	.ascii "DC_EXTRA 9\0"
	.byte	0x1
	.uleb128 0xabc
	.ascii "DC_VERSION 10\0"
	.byte	0x1
	.uleb128 0xabd
	.ascii "DC_DRIVER 11\0"
	.byte	0x1
	.uleb128 0xabe
	.ascii "DC_BINNAMES 12\0"
	.byte	0x1
	.uleb128 0xabf
	.ascii "DC_ENUMRESOLUTIONS 13\0"
	.byte	0x1
	.uleb128 0xac0
	.ascii "DC_FILEDEPENDENCIES 14\0"
	.byte	0x1
	.uleb128 0xac1
	.ascii "DC_TRUETYPE 15\0"
	.byte	0x1
	.uleb128 0xac2
	.ascii "DC_PAPERNAMES 16\0"
	.byte	0x1
	.uleb128 0xac3
	.ascii "DC_ORIENTATION 17\0"
	.byte	0x1
	.uleb128 0xac4
	.ascii "DC_COPIES 18\0"
	.byte	0x1
	.uleb128 0xac5
	.ascii "DC_BINADJUST 19\0"
	.byte	0x1
	.uleb128 0xac6
	.ascii "DC_EMF_COMPLIANT 20\0"
	.byte	0x1
	.uleb128 0xac7
	.ascii "DC_DATATYPE_PRODUCED 21\0"
	.byte	0x1
	.uleb128 0xac8
	.ascii "DC_COLLATE 22\0"
	.byte	0x1
	.uleb128 0xac9
	.ascii "DC_MANUFACTURER 23\0"
	.byte	0x1
	.uleb128 0xaca
	.ascii "DC_MODEL 24\0"
	.byte	0x1
	.uleb128 0xacb
	.ascii "DC_PERSONALITY 25\0"
	.byte	0x1
	.uleb128 0xacc
	.ascii "DC_PRINTRATE 26\0"
	.byte	0x1
	.uleb128 0xacd
	.ascii "DC_PRINTRATEUNIT 27\0"
	.byte	0x1
	.uleb128 0xace
	.ascii "PRINTRATEUNIT_PPM 1\0"
	.byte	0x1
	.uleb128 0xacf
	.ascii "PRINTRATEUNIT_CPS 2\0"
	.byte	0x1
	.uleb128 0xad0
	.ascii "PRINTRATEUNIT_LPM 3\0"
	.byte	0x1
	.uleb128 0xad1
	.ascii "PRINTRATEUNIT_IPM 4\0"
	.byte	0x1
	.uleb128 0xad2
	.ascii "DC_PRINTERMEM 28\0"
	.byte	0x1
	.uleb128 0xad3
	.ascii "DC_MEDIAREADY 29\0"
	.byte	0x1
	.uleb128 0xad4
	.ascii "DC_STAPLE 30\0"
	.byte	0x1
	.uleb128 0xad5
	.ascii "DC_PRINTRATEPPM 31\0"
	.byte	0x1
	.uleb128 0xad6
	.ascii "DC_COLORDEVICE 32\0"
	.byte	0x1
	.uleb128 0xad7
	.ascii "DC_NUP 33\0"
	.byte	0x1
	.uleb128 0xad8
	.ascii "DC_MEDIATYPENAMES 34\0"
	.byte	0x1
	.uleb128 0xad9
	.ascii "DC_MEDIATYPES 35\0"
	.byte	0x1
	.uleb128 0xadb
	.ascii "DCTT_BITMAP __MSABI_LONG(0x0000001)\0"
	.byte	0x1
	.uleb128 0xadc
	.ascii "DCTT_DOWNLOAD __MSABI_LONG(0x0000002)\0"
	.byte	0x1
	.uleb128 0xadd
	.ascii "DCTT_SUBDEV __MSABI_LONG(0x0000004)\0"
	.byte	0x1
	.uleb128 0xade
	.ascii "DCTT_DOWNLOAD_OUTLINE __MSABI_LONG(0x0000008)\0"
	.byte	0x1
	.uleb128 0xae0
	.ascii "DCBA_FACEUPNONE 0x0000\0"
	.byte	0x1
	.uleb128 0xae1
	.ascii "DCBA_FACEUPCENTER 0x0001\0"
	.byte	0x1
	.uleb128 0xae2
	.ascii "DCBA_FACEUPLEFT 0x0002\0"
	.byte	0x1
	.uleb128 0xae3
	.ascii "DCBA_FACEUPRIGHT 0x0003\0"
	.byte	0x1
	.uleb128 0xae4
	.ascii "DCBA_FACEDOWNNONE 0x0100\0"
	.byte	0x1
	.uleb128 0xae5
	.ascii "DCBA_FACEDOWNCENTER 0x0101\0"
	.byte	0x1
	.uleb128 0xae6
	.ascii "DCBA_FACEDOWNLEFT 0x0102\0"
	.byte	0x1
	.uleb128 0xae7
	.ascii "DCBA_FACEDOWNRIGHT 0x0103\0"
	.byte	0x1
	.uleb128 0xaea
	.ascii "DeviceCapabilities __MINGW_NAME_AW(DeviceCapabilities)\0"
	.byte	0x1
	.uleb128 0xaeb
	.ascii "EnumFontFamiliesEx __MINGW_NAME_AW(EnumFontFamiliesEx)\0"
	.byte	0x1
	.uleb128 0xaec
	.ascii "EnumFontFamilies __MINGW_NAME_AW(EnumFontFamilies)\0"
	.byte	0x1
	.uleb128 0xaed
	.ascii "EnumFonts __MINGW_NAME_AW(EnumFonts)\0"
	.byte	0x1
	.uleb128 0xaee
	.ascii "GetCharWidth __MINGW_NAME_AW(GetCharWidth)\0"
	.byte	0x1
	.uleb128 0xaef
	.ascii "GetCharWidth32 __MINGW_NAME_AW(GetCharWidth32)\0"
	.byte	0x1
	.uleb128 0xaf0
	.ascii "GetCharWidthFloat __MINGW_NAME_AW(GetCharWidthFloat)\0"
	.byte	0x1
	.uleb128 0xaf1
	.ascii "GetCharABCWidths __MINGW_NAME_AW(GetCharABCWidths)\0"
	.byte	0x1
	.uleb128 0xaf2
	.ascii "GetCharABCWidthsFloat __MINGW_NAME_AW(GetCharABCWidthsFloat)\0"
	.byte	0x1
	.uleb128 0xaf3
	.ascii "GetGlyphOutline __MINGW_NAME_AW(GetGlyphOutline)\0"
	.byte	0x1
	.uleb128 0xaf4
	.ascii "GetMetaFile __MINGW_NAME_AW(GetMetaFile)\0"
	.byte	0x1
	.uleb128 0xb33
	.ascii "GetOutlineTextMetrics __MINGW_NAME_AW(GetOutlineTextMetrics)\0"
	.byte	0x1
	.uleb128 0xb39
	.ascii "GetTextExtentPoint __MINGW_NAME_AW(GetTextExtentPoint)\0"
	.byte	0x1
	.uleb128 0xb3a
	.ascii "GetTextExtentPoint32 __MINGW_NAME_AW(GetTextExtentPoint32)\0"
	.byte	0x1
	.uleb128 0xb3b
	.ascii "GetTextExtentExPoint __MINGW_NAME_AW(GetTextExtentExPoint)\0"
	.byte	0x1
	.uleb128 0xb3c
	.ascii "GetCharacterPlacement __MINGW_NAME_AW(GetCharacterPlacement)\0"
	.byte	0x1
	.uleb128 0xb67
	.ascii "GS_8BIT_INDICES 0x00000001\0"
	.byte	0x1
	.uleb128 0xb69
	.ascii "GGI_MARK_NONEXISTING_GLYPHS 0X0001\0"
	.byte	0x1
	.uleb128 0xb6b
	.ascii "GetGlyphIndices __MINGW_NAME_AW(GetGlyphIndices)\0"
	.byte	0x1
	.uleb128 0xb75
	.ascii "STAMP_DESIGNVECTOR (0x8000000 + 'd' + ('v' << 8))\0"
	.byte	0x1
	.uleb128 0xb76
	.ascii "STAMP_AXESLIST (0x8000000 + 'a' + ('l' << 8))\0"
	.byte	0x1
	.uleb128 0xb77
	.ascii "MM_MAX_NUMAXES 16\0"
	.byte	0x1
	.uleb128 0xb7f
	.ascii "AddFontResourceEx __MINGW_NAME_AW(AddFontResourceEx)\0"
	.byte	0x1
	.uleb128 0xb80
	.ascii "RemoveFontResourceEx __MINGW_NAME_AW(RemoveFontResourceEx)\0"
	.byte	0x1
	.uleb128 0xb89
	.ascii "FR_PRIVATE 0x10\0"
	.byte	0x1
	.uleb128 0xb8a
	.ascii "FR_NOT_ENUM 0x20\0"
	.byte	0x1
	.uleb128 0xb8c
	.ascii "MM_MAX_AXES_NAMELEN 16\0"
	.byte	0x1
	.uleb128 0xbbc
	.ascii "CreateFontIndirectEx __MINGW_NAME_AW(CreateFontIndirectEx)\0"
	.byte	0x1
	.uleb128 0xbd1
	.ascii "ResetDC __MINGW_NAME_AW(ResetDC)\0"
	.byte	0x1
	.uleb128 0xbd2
	.ascii "RemoveFontResource __MINGW_NAME_AW(RemoveFontResource)\0"
	.byte	0x1
	.uleb128 0xc54
	.ascii "AC_SRC_OVER 0x00\0"
	.byte	0x1
	.uleb128 0xc55
	.ascii "AC_SRC_ALPHA 0x01\0"
	.byte	0x1
	.uleb128 0xc5c
	.ascii "GRADIENT_FILL_RECT_H 0x00000000\0"
	.byte	0x1
	.uleb128 0xc5d
	.ascii "GRADIENT_FILL_RECT_V 0x00000001\0"
	.byte	0x1
	.uleb128 0xc5e
	.ascii "GRADIENT_FILL_TRIANGLE 0x00000002\0"
	.byte	0x1
	.uleb128 0xc5f
	.ascii "GRADIENT_FILL_OP_FLAG 0x000000ff\0"
	.byte	0x1
	.uleb128 0xc66
	.ascii "CopyEnhMetaFile __MINGW_NAME_AW(CopyEnhMetaFile)\0"
	.byte	0x1
	.uleb128 0xc67
	.ascii "CreateEnhMetaFile __MINGW_NAME_AW(CreateEnhMetaFile)\0"
	.byte	0x1
	.uleb128 0xc68
	.ascii "GetEnhMetaFile __MINGW_NAME_AW(GetEnhMetaFile)\0"
	.byte	0x1
	.uleb128 0xc69
	.ascii "GetEnhMetaFileDescription __MINGW_NAME_AW(GetEnhMetaFileDescription)\0"
	.byte	0x1
	.uleb128 0xc8b
	.ascii "GetTextMetrics __MINGW_NAME_AW(GetTextMetrics)\0"
	.byte	0x1
	.uleb128 0xca3
	.ascii "CA_NEGATIVE 0x0001\0"
	.byte	0x1
	.uleb128 0xca4
	.ascii "CA_LOG_FILTER 0x0002\0"
	.byte	0x1
	.uleb128 0xca6
	.ascii "ILLUMINANT_DEVICE_DEFAULT 0\0"
	.byte	0x1
	.uleb128 0xca7
	.ascii "ILLUMINANT_A 1\0"
	.byte	0x1
	.uleb128 0xca8
	.ascii "ILLUMINANT_B 2\0"
	.byte	0x1
	.uleb128 0xca9
	.ascii "ILLUMINANT_C 3\0"
	.byte	0x1
	.uleb128 0xcaa
	.ascii "ILLUMINANT_D50 4\0"
	.byte	0x1
	.uleb128 0xcab
	.ascii "ILLUMINANT_D55 5\0"
	.byte	0x1
	.uleb128 0xcac
	.ascii "ILLUMINANT_D65 6\0"
	.byte	0x1
	.uleb128 0xcad
	.ascii "ILLUMINANT_D75 7\0"
	.byte	0x1
	.uleb128 0xcae
	.ascii "ILLUMINANT_F2 8\0"
	.byte	0x1
	.uleb128 0xcaf
	.ascii "ILLUMINANT_MAX_INDEX ILLUMINANT_F2\0"
	.byte	0x1
	.uleb128 0xcb1
	.ascii "ILLUMINANT_TUNGSTEN ILLUMINANT_A\0"
	.byte	0x1
	.uleb128 0xcb2
	.ascii "ILLUMINANT_DAYLIGHT ILLUMINANT_C\0"
	.byte	0x1
	.uleb128 0xcb3
	.ascii "ILLUMINANT_FLUORESCENT ILLUMINANT_F2\0"
	.byte	0x1
	.uleb128 0xcb4
	.ascii "ILLUMINANT_NTSC ILLUMINANT_C\0"
	.byte	0x1
	.uleb128 0xcb6
	.ascii "RGB_GAMMA_MIN (WORD)02500\0"
	.byte	0x1
	.uleb128 0xcb7
	.ascii "RGB_GAMMA_MAX (WORD)65000\0"
	.byte	0x1
	.uleb128 0xcb9
	.ascii "REFERENCE_WHITE_MIN (WORD)6000\0"
	.byte	0x1
	.uleb128 0xcba
	.ascii "REFERENCE_WHITE_MAX (WORD)10000\0"
	.byte	0x1
	.uleb128 0xcbb
	.ascii "REFERENCE_BLACK_MIN (WORD)0\0"
	.byte	0x1
	.uleb128 0xcbc
	.ascii "REFERENCE_BLACK_MAX (WORD)4000\0"
	.byte	0x1
	.uleb128 0xcbe
	.ascii "COLOR_ADJ_MIN (SHORT)-100\0"
	.byte	0x1
	.uleb128 0xcbf
	.ascii "COLOR_ADJ_MAX (SHORT)100\0"
	.byte	0x1
	.uleb128 0xce9
	.ascii "DI_APPBANDING 0x00000001\0"
	.byte	0x1
	.uleb128 0xcea
	.ascii "DI_ROPS_READ_DESTINATION 0x00000002\0"
	.byte	0x1
	.uleb128 0xcec
	.ascii "StartDoc __MINGW_NAME_AW(StartDoc)\0"
	.byte	0x1
	.uleb128 0xced
	.ascii "GetObject __MINGW_NAME_AW(GetObject)\0"
	.byte	0x1
	.uleb128 0xcee
	.ascii "TextOut __MINGW_NAME_AW(TextOut)\0"
	.byte	0x1
	.uleb128 0xcef
	.ascii "ExtTextOut __MINGW_NAME_AW(ExtTextOut)\0"
	.byte	0x1
	.uleb128 0xcf0
	.ascii "PolyTextOut __MINGW_NAME_AW(PolyTextOut)\0"
	.byte	0x1
	.uleb128 0xcf1
	.ascii "GetTextFace __MINGW_NAME_AW(GetTextFace)\0"
	.byte	0x1
	.uleb128 0xd2b
	.ascii "FONTMAPPER_MAX 10\0"
	.byte	0x1
	.uleb128 0xd33
	.ascii "GetKerningPairs __MINGW_NAME_AW(GetKerningPairs)\0"
	.byte	0x1
	.uleb128 0xd3e
	.ascii "ICM_OFF 1\0"
	.byte	0x1
	.uleb128 0xd3f
	.ascii "ICM_ON 2\0"
	.byte	0x1
	.uleb128 0xd40
	.ascii "ICM_QUERY 3\0"
	.byte	0x1
	.uleb128 0xd41
	.ascii "ICM_DONE_OUTSIDEDC 4\0"
	.byte	0x1
	.uleb128 0xd46
	.ascii "ICMENUMPROC __MINGW_NAME_AW(ICMENUMPROC)\0"
	.byte	0x1
	.uleb128 0xd47
	.ascii "EnumICMProfiles __MINGW_NAME_AW(EnumICMProfiles)\0"
	.byte	0x1
	.uleb128 0xd48
	.ascii "UpdateICMRegKey __MINGW_NAME_AW(UpdateICMRegKey)\0"
	.byte	0x1
	.uleb128 0xd49
	.ascii "GetLogColorSpace __MINGW_NAME_AW(GetLogColorSpace)\0"
	.byte	0x1
	.uleb128 0xd4a
	.ascii "CreateColorSpace __MINGW_NAME_AW(CreateColorSpace)\0"
	.byte	0x1
	.uleb128 0xd4b
	.ascii "GetICMProfile __MINGW_NAME_AW(GetICMProfile)\0"
	.byte	0x1
	.uleb128 0xd4c
	.ascii "SetICMProfile __MINGW_NAME_AW(SetICMProfile)\0"
	.byte	0x1
	.uleb128 0xd66
	.ascii "ENHMETA_SIGNATURE 0x464D4520\0"
	.byte	0x1
	.uleb128 0xd67
	.ascii "ENHMETA_STOCK_OBJECT 0x80000000\0"
	.byte	0x1
	.uleb128 0xd69
	.ascii "EMR_HEADER 1\0"
	.byte	0x1
	.uleb128 0xd6a
	.ascii "EMR_POLYBEZIER 2\0"
	.byte	0x1
	.uleb128 0xd6b
	.ascii "EMR_POLYGON 3\0"
	.byte	0x1
	.uleb128 0xd6c
	.ascii "EMR_POLYLINE 4\0"
	.byte	0x1
	.uleb128 0xd6d
	.ascii "EMR_POLYBEZIERTO 5\0"
	.byte	0x1
	.uleb128 0xd6e
	.ascii "EMR_POLYLINETO 6\0"
	.byte	0x1
	.uleb128 0xd6f
	.ascii "EMR_POLYPOLYLINE 7\0"
	.byte	0x1
	.uleb128 0xd70
	.ascii "EMR_POLYPOLYGON 8\0"
	.byte	0x1
	.uleb128 0xd71
	.ascii "EMR_SETWINDOWEXTEX 9\0"
	.byte	0x1
	.uleb128 0xd72
	.ascii "EMR_SETWINDOWORGEX 10\0"
	.byte	0x1
	.uleb128 0xd73
	.ascii "EMR_SETVIEWPORTEXTEX 11\0"
	.byte	0x1
	.uleb128 0xd74
	.ascii "EMR_SETVIEWPORTORGEX 12\0"
	.byte	0x1
	.uleb128 0xd75
	.ascii "EMR_SETBRUSHORGEX 13\0"
	.byte	0x1
	.uleb128 0xd76
	.ascii "EMR_EOF 14\0"
	.byte	0x1
	.uleb128 0xd77
	.ascii "EMR_SETPIXELV 15\0"
	.byte	0x1
	.uleb128 0xd78
	.ascii "EMR_SETMAPPERFLAGS 16\0"
	.byte	0x1
	.uleb128 0xd79
	.ascii "EMR_SETMAPMODE 17\0"
	.byte	0x1
	.uleb128 0xd7a
	.ascii "EMR_SETBKMODE 18\0"
	.byte	0x1
	.uleb128 0xd7b
	.ascii "EMR_SETPOLYFILLMODE 19\0"
	.byte	0x1
	.uleb128 0xd7c
	.ascii "EMR_SETROP2 20\0"
	.byte	0x1
	.uleb128 0xd7d
	.ascii "EMR_SETSTRETCHBLTMODE 21\0"
	.byte	0x1
	.uleb128 0xd7e
	.ascii "EMR_SETTEXTALIGN 22\0"
	.byte	0x1
	.uleb128 0xd7f
	.ascii "EMR_SETCOLORADJUSTMENT 23\0"
	.byte	0x1
	.uleb128 0xd80
	.ascii "EMR_SETTEXTCOLOR 24\0"
	.byte	0x1
	.uleb128 0xd81
	.ascii "EMR_SETBKCOLOR 25\0"
	.byte	0x1
	.uleb128 0xd82
	.ascii "EMR_OFFSETCLIPRGN 26\0"
	.byte	0x1
	.uleb128 0xd83
	.ascii "EMR_MOVETOEX 27\0"
	.byte	0x1
	.uleb128 0xd84
	.ascii "EMR_SETMETARGN 28\0"
	.byte	0x1
	.uleb128 0xd85
	.ascii "EMR_EXCLUDECLIPRECT 29\0"
	.byte	0x1
	.uleb128 0xd86
	.ascii "EMR_INTERSECTCLIPRECT 30\0"
	.byte	0x1
	.uleb128 0xd87
	.ascii "EMR_SCALEVIEWPORTEXTEX 31\0"
	.byte	0x1
	.uleb128 0xd88
	.ascii "EMR_SCALEWINDOWEXTEX 32\0"
	.byte	0x1
	.uleb128 0xd89
	.ascii "EMR_SAVEDC 33\0"
	.byte	0x1
	.uleb128 0xd8a
	.ascii "EMR_RESTOREDC 34\0"
	.byte	0x1
	.uleb128 0xd8b
	.ascii "EMR_SETWORLDTRANSFORM 35\0"
	.byte	0x1
	.uleb128 0xd8c
	.ascii "EMR_MODIFYWORLDTRANSFORM 36\0"
	.byte	0x1
	.uleb128 0xd8d
	.ascii "EMR_SELECTOBJECT 37\0"
	.byte	0x1
	.uleb128 0xd8e
	.ascii "EMR_CREATEPEN 38\0"
	.byte	0x1
	.uleb128 0xd8f
	.ascii "EMR_CREATEBRUSHINDIRECT 39\0"
	.byte	0x1
	.uleb128 0xd90
	.ascii "EMR_DELETEOBJECT 40\0"
	.byte	0x1
	.uleb128 0xd91
	.ascii "EMR_ANGLEARC 41\0"
	.byte	0x1
	.uleb128 0xd92
	.ascii "EMR_ELLIPSE 42\0"
	.byte	0x1
	.uleb128 0xd93
	.ascii "EMR_RECTANGLE 43\0"
	.byte	0x1
	.uleb128 0xd94
	.ascii "EMR_ROUNDRECT 44\0"
	.byte	0x1
	.uleb128 0xd95
	.ascii "EMR_ARC 45\0"
	.byte	0x1
	.uleb128 0xd96
	.ascii "EMR_CHORD 46\0"
	.byte	0x1
	.uleb128 0xd97
	.ascii "EMR_PIE 47\0"
	.byte	0x1
	.uleb128 0xd98
	.ascii "EMR_SELECTPALETTE 48\0"
	.byte	0x1
	.uleb128 0xd99
	.ascii "EMR_CREATEPALETTE 49\0"
	.byte	0x1
	.uleb128 0xd9a
	.ascii "EMR_SETPALETTEENTRIES 50\0"
	.byte	0x1
	.uleb128 0xd9b
	.ascii "EMR_RESIZEPALETTE 51\0"
	.byte	0x1
	.uleb128 0xd9c
	.ascii "EMR_REALIZEPALETTE 52\0"
	.byte	0x1
	.uleb128 0xd9d
	.ascii "EMR_EXTFLOODFILL 53\0"
	.byte	0x1
	.uleb128 0xd9e
	.ascii "EMR_LINETO 54\0"
	.byte	0x1
	.uleb128 0xd9f
	.ascii "EMR_ARCTO 55\0"
	.byte	0x1
	.uleb128 0xda0
	.ascii "EMR_POLYDRAW 56\0"
	.byte	0x1
	.uleb128 0xda1
	.ascii "EMR_SETARCDIRECTION 57\0"
	.byte	0x1
	.uleb128 0xda2
	.ascii "EMR_SETMITERLIMIT 58\0"
	.byte	0x1
	.uleb128 0xda3
	.ascii "EMR_BEGINPATH 59\0"
	.byte	0x1
	.uleb128 0xda4
	.ascii "EMR_ENDPATH 60\0"
	.byte	0x1
	.uleb128 0xda5
	.ascii "EMR_CLOSEFIGURE 61\0"
	.byte	0x1
	.uleb128 0xda6
	.ascii "EMR_FILLPATH 62\0"
	.byte	0x1
	.uleb128 0xda7
	.ascii "EMR_STROKEANDFILLPATH 63\0"
	.byte	0x1
	.uleb128 0xda8
	.ascii "EMR_STROKEPATH 64\0"
	.byte	0x1
	.uleb128 0xda9
	.ascii "EMR_FLATTENPATH 65\0"
	.byte	0x1
	.uleb128 0xdaa
	.ascii "EMR_WIDENPATH 66\0"
	.byte	0x1
	.uleb128 0xdab
	.ascii "EMR_SELECTCLIPPATH 67\0"
	.byte	0x1
	.uleb128 0xdac
	.ascii "EMR_ABORTPATH 68\0"
	.byte	0x1
	.uleb128 0xdae
	.ascii "EMR_GDICOMMENT 70\0"
	.byte	0x1
	.uleb128 0xdaf
	.ascii "EMR_FILLRGN 71\0"
	.byte	0x1
	.uleb128 0xdb0
	.ascii "EMR_FRAMERGN 72\0"
	.byte	0x1
	.uleb128 0xdb1
	.ascii "EMR_INVERTRGN 73\0"
	.byte	0x1
	.uleb128 0xdb2
	.ascii "EMR_PAINTRGN 74\0"
	.byte	0x1
	.uleb128 0xdb3
	.ascii "EMR_EXTSELECTCLIPRGN 75\0"
	.byte	0x1
	.uleb128 0xdb4
	.ascii "EMR_BITBLT 76\0"
	.byte	0x1
	.uleb128 0xdb5
	.ascii "EMR_STRETCHBLT 77\0"
	.byte	0x1
	.uleb128 0xdb6
	.ascii "EMR_MASKBLT 78\0"
	.byte	0x1
	.uleb128 0xdb7
	.ascii "EMR_PLGBLT 79\0"
	.byte	0x1
	.uleb128 0xdb8
	.ascii "EMR_SETDIBITSTODEVICE 80\0"
	.byte	0x1
	.uleb128 0xdb9
	.ascii "EMR_STRETCHDIBITS 81\0"
	.byte	0x1
	.uleb128 0xdba
	.ascii "EMR_EXTCREATEFONTINDIRECTW 82\0"
	.byte	0x1
	.uleb128 0xdbb
	.ascii "EMR_EXTTEXTOUTA 83\0"
	.byte	0x1
	.uleb128 0xdbc
	.ascii "EMR_EXTTEXTOUTW 84\0"
	.byte	0x1
	.uleb128 0xdbd
	.ascii "EMR_POLYBEZIER16 85\0"
	.byte	0x1
	.uleb128 0xdbe
	.ascii "EMR_POLYGON16 86\0"
	.byte	0x1
	.uleb128 0xdbf
	.ascii "EMR_POLYLINE16 87\0"
	.byte	0x1
	.uleb128 0xdc0
	.ascii "EMR_POLYBEZIERTO16 88\0"
	.byte	0x1
	.uleb128 0xdc1
	.ascii "EMR_POLYLINETO16 89\0"
	.byte	0x1
	.uleb128 0xdc2
	.ascii "EMR_POLYPOLYLINE16 90\0"
	.byte	0x1
	.uleb128 0xdc3
	.ascii "EMR_POLYPOLYGON16 91\0"
	.byte	0x1
	.uleb128 0xdc4
	.ascii "EMR_POLYDRAW16 92\0"
	.byte	0x1
	.uleb128 0xdc5
	.ascii "EMR_CREATEMONOBRUSH 93\0"
	.byte	0x1
	.uleb128 0xdc6
	.ascii "EMR_CREATEDIBPATTERNBRUSHPT 94\0"
	.byte	0x1
	.uleb128 0xdc7
	.ascii "EMR_EXTCREATEPEN 95\0"
	.byte	0x1
	.uleb128 0xdc8
	.ascii "EMR_POLYTEXTOUTA 96\0"
	.byte	0x1
	.uleb128 0xdc9
	.ascii "EMR_POLYTEXTOUTW 97\0"
	.byte	0x1
	.uleb128 0xdcb
	.ascii "EMR_SETICMMODE 98\0"
	.byte	0x1
	.uleb128 0xdcc
	.ascii "EMR_CREATECOLORSPACE 99\0"
	.byte	0x1
	.uleb128 0xdcd
	.ascii "EMR_SETCOLORSPACE 100\0"
	.byte	0x1
	.uleb128 0xdce
	.ascii "EMR_DELETECOLORSPACE 101\0"
	.byte	0x1
	.uleb128 0xdcf
	.ascii "EMR_GLSRECORD 102\0"
	.byte	0x1
	.uleb128 0xdd0
	.ascii "EMR_GLSBOUNDEDRECORD 103\0"
	.byte	0x1
	.uleb128 0xdd1
	.ascii "EMR_PIXELFORMAT 104\0"
	.byte	0x1
	.uleb128 0xdd2
	.ascii "EMR_RESERVED_105 105\0"
	.byte	0x1
	.uleb128 0xdd3
	.ascii "EMR_RESERVED_106 106\0"
	.byte	0x1
	.uleb128 0xdd4
	.ascii "EMR_RESERVED_107 107\0"
	.byte	0x1
	.uleb128 0xdd5
	.ascii "EMR_RESERVED_108 108\0"
	.byte	0x1
	.uleb128 0xdd6
	.ascii "EMR_RESERVED_109 109\0"
	.byte	0x1
	.uleb128 0xdd7
	.ascii "EMR_RESERVED_110 110\0"
	.byte	0x1
	.uleb128 0xdd8
	.ascii "EMR_COLORCORRECTPALETTE 111\0"
	.byte	0x1
	.uleb128 0xdd9
	.ascii "EMR_SETICMPROFILEA 112\0"
	.byte	0x1
	.uleb128 0xdda
	.ascii "EMR_SETICMPROFILEW 113\0"
	.byte	0x1
	.uleb128 0xddb
	.ascii "EMR_ALPHABLEND 114\0"
	.byte	0x1
	.uleb128 0xddc
	.ascii "EMR_SETLAYOUT 115\0"
	.byte	0x1
	.uleb128 0xddd
	.ascii "EMR_TRANSPARENTBLT 116\0"
	.byte	0x1
	.uleb128 0xdde
	.ascii "EMR_RESERVED_117 117\0"
	.byte	0x1
	.uleb128 0xddf
	.ascii "EMR_GRADIENTFILL 118\0"
	.byte	0x1
	.uleb128 0xde0
	.ascii "EMR_RESERVED_119 119\0"
	.byte	0x1
	.uleb128 0xde1
	.ascii "EMR_RESERVED_120 120\0"
	.byte	0x1
	.uleb128 0xde2
	.ascii "EMR_COLORMATCHTOTARGETW 121\0"
	.byte	0x1
	.uleb128 0xde3
	.ascii "EMR_CREATECOLORSPACEW 122\0"
	.byte	0x1
	.uleb128 0xde5
	.ascii "EMR_MIN 1\0"
	.byte	0x1
	.uleb128 0xde7
	.ascii "EMR_MAX 122\0"
	.byte	0x1
	.uleb128 0xfe8
	.ascii "SETICMPROFILE_EMBEDED 0x00000001\0"
	.byte	0x1
	.uleb128 0xff2
	.ascii "CREATECOLORSPACE_EMBEDED 0x00000001\0"
	.byte	0x1
	.uleb128 0xffd
	.ascii "COLORMATCHTOTARGET_EMBEDED 0x00000001\0"
	.byte	0x1
	.uleb128 0x1043
	.ascii "GDICOMMENT_IDENTIFIER 0x43494447\0"
	.byte	0x1
	.uleb128 0x1044
	.ascii "GDICOMMENT_WINDOWS_METAFILE 0x80000001\0"
	.byte	0x1
	.uleb128 0x1045
	.ascii "GDICOMMENT_BEGINGROUP 0x00000002\0"
	.byte	0x1
	.uleb128 0x1046
	.ascii "GDICOMMENT_ENDGROUP 0x00000003\0"
	.byte	0x1
	.uleb128 0x1047
	.ascii "GDICOMMENT_MULTIFORMATS 0x40000004\0"
	.byte	0x1
	.uleb128 0x1048
	.ascii "EPS_SIGNATURE 0x46535045\0"
	.byte	0x1
	.uleb128 0x1049
	.ascii "GDICOMMENT_UNICODE_STRING 0x00000040\0"
	.byte	0x1
	.uleb128 0x104a
	.ascii "GDICOMMENT_UNICODE_END 0x00000080\0"
	.byte	0x1
	.uleb128 0x104d
	.ascii "wglUseFontBitmaps __MINGW_NAME_AW(wglUseFontBitmaps)\0"
	.byte	0x1
	.uleb128 0x1069
	.ascii "WGL_FONT_LINES 0\0"
	.byte	0x1
	.uleb128 0x106a
	.ascii "WGL_FONT_POLYGONS 1\0"
	.byte	0x1
	.uleb128 0x106c
	.ascii "wglUseFontOutlines __MINGW_NAME_AW(wglUseFontOutlines)\0"
	.byte	0x1
	.uleb128 0x108c
	.ascii "LPD_DOUBLEBUFFER 0x00000001\0"
	.byte	0x1
	.uleb128 0x108d
	.ascii "LPD_STEREO 0x00000002\0"
	.byte	0x1
	.uleb128 0x108e
	.ascii "LPD_SUPPORT_GDI 0x00000010\0"
	.byte	0x1
	.uleb128 0x108f
	.ascii "LPD_SUPPORT_OPENGL 0x00000020\0"
	.byte	0x1
	.uleb128 0x1090
	.ascii "LPD_SHARE_DEPTH 0x00000040\0"
	.byte	0x1
	.uleb128 0x1091
	.ascii "LPD_SHARE_STENCIL 0x00000080\0"
	.byte	0x1
	.uleb128 0x1092
	.ascii "LPD_SHARE_ACCUM 0x00000100\0"
	.byte	0x1
	.uleb128 0x1093
	.ascii "LPD_SWAP_EXCHANGE 0x00000200\0"
	.byte	0x1
	.uleb128 0x1094
	.ascii "LPD_SWAP_COPY 0x00000400\0"
	.byte	0x1
	.uleb128 0x1095
	.ascii "LPD_TRANSPARENT 0x00001000\0"
	.byte	0x1
	.uleb128 0x1097
	.ascii "LPD_TYPE_RGBA 0\0"
	.byte	0x1
	.uleb128 0x1098
	.ascii "LPD_TYPE_COLORINDEX 1\0"
	.byte	0x1
	.uleb128 0x109a
	.ascii "WGL_SWAP_MAIN_PLANE 0x00000001\0"
	.byte	0x1
	.uleb128 0x109b
	.ascii "WGL_SWAP_OVERLAY1 0x00000002\0"
	.byte	0x1
	.uleb128 0x109c
	.ascii "WGL_SWAP_OVERLAY2 0x00000004\0"
	.byte	0x1
	.uleb128 0x109d
	.ascii "WGL_SWAP_OVERLAY3 0x00000008\0"
	.byte	0x1
	.uleb128 0x109e
	.ascii "WGL_SWAP_OVERLAY4 0x00000010\0"
	.byte	0x1
	.uleb128 0x109f
	.ascii "WGL_SWAP_OVERLAY5 0x00000020\0"
	.byte	0x1
	.uleb128 0x10a0
	.ascii "WGL_SWAP_OVERLAY6 0x00000040\0"
	.byte	0x1
	.uleb128 0x10a1
	.ascii "WGL_SWAP_OVERLAY7 0x00000080\0"
	.byte	0x1
	.uleb128 0x10a2
	.ascii "WGL_SWAP_OVERLAY8 0x00000100\0"
	.byte	0x1
	.uleb128 0x10a3
	.ascii "WGL_SWAP_OVERLAY9 0x00000200\0"
	.byte	0x1
	.uleb128 0x10a4
	.ascii "WGL_SWAP_OVERLAY10 0x00000400\0"
	.byte	0x1
	.uleb128 0x10a5
	.ascii "WGL_SWAP_OVERLAY11 0x00000800\0"
	.byte	0x1
	.uleb128 0x10a6
	.ascii "WGL_SWAP_OVERLAY12 0x00001000\0"
	.byte	0x1
	.uleb128 0x10a7
	.ascii "WGL_SWAP_OVERLAY13 0x00002000\0"
	.byte	0x1
	.uleb128 0x10a8
	.ascii "WGL_SWAP_OVERLAY14 0x00004000\0"
	.byte	0x1
	.uleb128 0x10a9
	.ascii "WGL_SWAP_OVERLAY15 0x00008000\0"
	.byte	0x1
	.uleb128 0x10aa
	.ascii "WGL_SWAP_UNDERLAY1 0x00010000\0"
	.byte	0x1
	.uleb128 0x10ab
	.ascii "WGL_SWAP_UNDERLAY2 0x00020000\0"
	.byte	0x1
	.uleb128 0x10ac
	.ascii "WGL_SWAP_UNDERLAY3 0x00040000\0"
	.byte	0x1
	.uleb128 0x10ad
	.ascii "WGL_SWAP_UNDERLAY4 0x00080000\0"
	.byte	0x1
	.uleb128 0x10ae
	.ascii "WGL_SWAP_UNDERLAY5 0x00100000\0"
	.byte	0x1
	.uleb128 0x10af
	.ascii "WGL_SWAP_UNDERLAY6 0x00200000\0"
	.byte	0x1
	.uleb128 0x10b0
	.ascii "WGL_SWAP_UNDERLAY7 0x00400000\0"
	.byte	0x1
	.uleb128 0x10b1
	.ascii "WGL_SWAP_UNDERLAY8 0x00800000\0"
	.byte	0x1
	.uleb128 0x10b2
	.ascii "WGL_SWAP_UNDERLAY9 0x01000000\0"
	.byte	0x1
	.uleb128 0x10b3
	.ascii "WGL_SWAP_UNDERLAY10 0x02000000\0"
	.byte	0x1
	.uleb128 0x10b4
	.ascii "WGL_SWAP_UNDERLAY11 0x04000000\0"
	.byte	0x1
	.uleb128 0x10b5
	.ascii "WGL_SWAP_UNDERLAY12 0x08000000\0"
	.byte	0x1
	.uleb128 0x10b6
	.ascii "WGL_SWAP_UNDERLAY13 0x10000000\0"
	.byte	0x1
	.uleb128 0x10b7
	.ascii "WGL_SWAP_UNDERLAY14 0x20000000\0"
	.byte	0x1
	.uleb128 0x10b8
	.ascii "WGL_SWAP_UNDERLAY15 0x40000000\0"
	.byte	0x1
	.uleb128 0x10c5
	.ascii "WGL_SWAPMULTIPLE_MAX 16\0"
	.byte	0x4
	.file 363 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winuser.h"
	.byte	0x3
	.uleb128 0x48
	.uleb128 0x16b
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINUSER_ \0"
	.byte	0x3
	.uleb128 0x14
	.uleb128 0x8
	.byte	0x4
	.byte	0x3
	.uleb128 0x15
	.uleb128 0x6a
	.byte	0x3
	.uleb128 0x1
	.uleb128 0x6b
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x16
	.uleb128 0x141
	.byte	0x2
	.uleb128 0x33
	.ascii "DEFINE_GUID\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) EXTERN_C const GUID name\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "DEFINE_OLEGUID(name,l,w1,w2) DEFINE_GUID (name, l, w1, w2, 0xc0, 0, 0, 0, 0, 0, 0, 0x46)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x3f
	.ascii "IS_INTRESOURCE(_r) ((((ULONG_PTR)(_r)) >> 16)==0)\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "MAKEINTRESOURCEA(i) ((LPSTR)((ULONG_PTR)((WORD)(i))))\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "MAKEINTRESOURCEW(i) ((LPWSTR)((ULONG_PTR)((WORD)(i))))\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "MAKEINTRESOURCE __MINGW_NAME_AW(MAKEINTRESOURCE)\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "RT_CURSOR MAKEINTRESOURCE(1)\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "RT_BITMAP MAKEINTRESOURCE(2)\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "RT_ICON MAKEINTRESOURCE(3)\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "RT_MENU MAKEINTRESOURCE(4)\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "RT_DIALOG MAKEINTRESOURCE(5)\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "RT_STRING MAKEINTRESOURCE(6)\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "RT_FONTDIR MAKEINTRESOURCE(7)\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "RT_FONT MAKEINTRESOURCE(8)\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "RT_ACCELERATOR MAKEINTRESOURCE(9)\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "RT_RCDATA MAKEINTRESOURCE(10)\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "RT_MESSAGETABLE MAKEINTRESOURCE(11)\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "DIFFERENCE 11\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "RT_GROUP_CURSOR MAKEINTRESOURCE((ULONG_PTR)RT_CURSOR + DIFFERENCE)\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "RT_GROUP_ICON MAKEINTRESOURCE((ULONG_PTR)RT_ICON + DIFFERENCE)\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "RT_VERSION MAKEINTRESOURCE(16)\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "RT_DLGINCLUDE MAKEINTRESOURCE(17)\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "RT_PLUGPLAY MAKEINTRESOURCE(19)\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "RT_VXD MAKEINTRESOURCE(20)\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "RT_ANICURSOR MAKEINTRESOURCE(21)\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "RT_ANIICON MAKEINTRESOURCE(22)\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "RT_HTML MAKEINTRESOURCE(23)\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "RT_MANIFEST MAKEINTRESOURCE(24)\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "CREATEPROCESS_MANIFEST_RESOURCE_ID MAKEINTRESOURCE(1)\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "ISOLATIONAWARE_MANIFEST_RESOURCE_ID MAKEINTRESOURCE(2)\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID MAKEINTRESOURCE(3)\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "MINIMUM_RESERVED_MANIFEST_RESOURCE_ID MAKEINTRESOURCE(1)\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID MAKEINTRESOURCE(16)\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "wvsprintf __MINGW_NAME_AW(wvsprintf)\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "wsprintf __MINGW_NAME_AW(wsprintf)\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "SETWALLPAPER_DEFAULT ((LPWSTR)-1)\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "SB_HORZ 0\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "SB_VERT 1\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "SB_CTL 2\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "SB_BOTH 3\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "SB_LINEUP 0\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "SB_LINELEFT 0\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "SB_LINEDOWN 1\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "SB_LINERIGHT 1\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "SB_PAGEUP 2\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "SB_PAGELEFT 2\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "SB_PAGEDOWN 3\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "SB_PAGERIGHT 3\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "SB_THUMBPOSITION 4\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "SB_THUMBTRACK 5\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "SB_TOP 6\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "SB_LEFT 6\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "SB_BOTTOM 7\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "SB_RIGHT 7\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "SB_ENDSCROLL 8\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "SW_HIDE 0\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "SW_SHOWNORMAL 1\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "SW_NORMAL 1\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "SW_SHOWMINIMIZED 2\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "SW_SHOWMAXIMIZED 3\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "SW_MAXIMIZE 3\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "SW_SHOWNOACTIVATE 4\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "SW_SHOW 5\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "SW_MINIMIZE 6\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "SW_SHOWMINNOACTIVE 7\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "SW_SHOWNA 8\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "SW_RESTORE 9\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "SW_SHOWDEFAULT 10\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "SW_FORCEMINIMIZE 11\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "SW_MAX 11\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "HIDE_WINDOW 0\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "SHOW_OPENWINDOW 1\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "SHOW_ICONWINDOW 2\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "SHOW_FULLSCREEN 3\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "SHOW_OPENNOACTIVATE 4\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "SW_PARENTCLOSING 1\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "SW_OTHERZOOM 2\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "SW_PARENTOPENING 3\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "SW_OTHERUNZOOM 4\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "AW_HOR_POSITIVE 0x00000001\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "AW_HOR_NEGATIVE 0x00000002\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "AW_VER_POSITIVE 0x00000004\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "AW_VER_NEGATIVE 0x00000008\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "AW_CENTER 0x00000010\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "AW_HIDE 0x00010000\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "AW_ACTIVATE 0x00020000\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "AW_SLIDE 0x00040000\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "AW_BLEND 0x00080000\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "KF_EXTENDED 0x0100\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "KF_DLGMODE 0x0800\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "KF_MENUMODE 0x1000\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "KF_ALTDOWN 0x2000\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "KF_REPEAT 0x4000\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "KF_UP 0x8000\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "VK_LBUTTON 0x01\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "VK_RBUTTON 0x02\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "VK_CANCEL 0x03\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "VK_MBUTTON 0x04\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "VK_XBUTTON1 0x05\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "VK_XBUTTON2 0x06\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "VK_BACK 0x08\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "VK_TAB 0x09\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "VK_CLEAR 0x0C\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "VK_RETURN 0x0D\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "VK_SHIFT 0x10\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "VK_CONTROL 0x11\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "VK_MENU 0x12\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "VK_PAUSE 0x13\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "VK_CAPITAL 0x14\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "VK_KANA 0x15\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "VK_HANGEUL 0x15\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "VK_HANGUL 0x15\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "VK_JUNJA 0x17\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "VK_FINAL 0x18\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "VK_HANJA 0x19\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "VK_KANJI 0x19\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "VK_ESCAPE 0x1B\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "VK_CONVERT 0x1C\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "VK_NONCONVERT 0x1D\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "VK_ACCEPT 0x1E\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "VK_MODECHANGE 0x1F\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "VK_SPACE 0x20\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "VK_PRIOR 0x21\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "VK_NEXT 0x22\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "VK_END 0x23\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "VK_HOME 0x24\0"
	.byte	0x1
	.uleb128 0xde
	.ascii "VK_LEFT 0x25\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "VK_UP 0x26\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "VK_RIGHT 0x27\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "VK_DOWN 0x28\0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "VK_SELECT 0x29\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "VK_PRINT 0x2A\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "VK_EXECUTE 0x2B\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "VK_SNAPSHOT 0x2C\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "VK_INSERT 0x2D\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "VK_DELETE 0x2E\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "VK_HELP 0x2F\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "VK_LWIN 0x5B\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "VK_RWIN 0x5C\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "VK_APPS 0x5D\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "VK_SLEEP 0x5F\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "VK_NUMPAD0 0x60\0"
	.byte	0x1
	.uleb128 0xef
	.ascii "VK_NUMPAD1 0x61\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "VK_NUMPAD2 0x62\0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "VK_NUMPAD3 0x63\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "VK_NUMPAD4 0x64\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "VK_NUMPAD5 0x65\0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "VK_NUMPAD6 0x66\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "VK_NUMPAD7 0x67\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "VK_NUMPAD8 0x68\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "VK_NUMPAD9 0x69\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "VK_MULTIPLY 0x6A\0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "VK_ADD 0x6B\0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "VK_SEPARATOR 0x6C\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "VK_SUBTRACT 0x6D\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "VK_DECIMAL 0x6E\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "VK_DIVIDE 0x6F\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "VK_F1 0x70\0"
	.byte	0x1
	.uleb128 0xff
	.ascii "VK_F2 0x71\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "VK_F3 0x72\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "VK_F4 0x73\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "VK_F5 0x74\0"
	.byte	0x1
	.uleb128 0x103
	.ascii "VK_F6 0x75\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "VK_F7 0x76\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "VK_F8 0x77\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "VK_F9 0x78\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "VK_F10 0x79\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "VK_F11 0x7A\0"
	.byte	0x1
	.uleb128 0x109
	.ascii "VK_F12 0x7B\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "VK_F13 0x7C\0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "VK_F14 0x7D\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "VK_F15 0x7E\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "VK_F16 0x7F\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "VK_F17 0x80\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "VK_F18 0x81\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "VK_F19 0x82\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "VK_F20 0x83\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "VK_F21 0x84\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "VK_F22 0x85\0"
	.byte	0x1
	.uleb128 0x114
	.ascii "VK_F23 0x86\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "VK_F24 0x87\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "VK_NUMLOCK 0x90\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "VK_SCROLL 0x91\0"
	.byte	0x1
	.uleb128 0x118
	.ascii "VK_OEM_NEC_EQUAL 0x92\0"
	.byte	0x1
	.uleb128 0x119
	.ascii "VK_OEM_FJ_JISHO 0x92\0"
	.byte	0x1
	.uleb128 0x11a
	.ascii "VK_OEM_FJ_MASSHOU 0x93\0"
	.byte	0x1
	.uleb128 0x11b
	.ascii "VK_OEM_FJ_TOUROKU 0x94\0"
	.byte	0x1
	.uleb128 0x11c
	.ascii "VK_OEM_FJ_LOYA 0x95\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "VK_OEM_FJ_ROYA 0x96\0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "VK_LSHIFT 0xA0\0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "VK_RSHIFT 0xA1\0"
	.byte	0x1
	.uleb128 0x120
	.ascii "VK_LCONTROL 0xA2\0"
	.byte	0x1
	.uleb128 0x121
	.ascii "VK_RCONTROL 0xA3\0"
	.byte	0x1
	.uleb128 0x122
	.ascii "VK_LMENU 0xA4\0"
	.byte	0x1
	.uleb128 0x123
	.ascii "VK_RMENU 0xA5\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "VK_BROWSER_BACK 0xA6\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "VK_BROWSER_FORWARD 0xA7\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "VK_BROWSER_REFRESH 0xA8\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "VK_BROWSER_STOP 0xA9\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "VK_BROWSER_SEARCH 0xAA\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "VK_BROWSER_FAVORITES 0xAB\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "VK_BROWSER_HOME 0xAC\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "VK_VOLUME_MUTE 0xAD\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "VK_VOLUME_DOWN 0xAE\0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "VK_VOLUME_UP 0xAF\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "VK_MEDIA_NEXT_TRACK 0xB0\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "VK_MEDIA_PREV_TRACK 0xB1\0"
	.byte	0x1
	.uleb128 0x130
	.ascii "VK_MEDIA_STOP 0xB2\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "VK_MEDIA_PLAY_PAUSE 0xB3\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "VK_LAUNCH_MAIL 0xB4\0"
	.byte	0x1
	.uleb128 0x133
	.ascii "VK_LAUNCH_MEDIA_SELECT 0xB5\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "VK_LAUNCH_APP1 0xB6\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "VK_LAUNCH_APP2 0xB7\0"
	.byte	0x1
	.uleb128 0x136
	.ascii "VK_OEM_1 0xBA\0"
	.byte	0x1
	.uleb128 0x137
	.ascii "VK_OEM_PLUS 0xBB\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "VK_OEM_COMMA 0xBC\0"
	.byte	0x1
	.uleb128 0x139
	.ascii "VK_OEM_MINUS 0xBD\0"
	.byte	0x1
	.uleb128 0x13a
	.ascii "VK_OEM_PERIOD 0xBE\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "VK_OEM_2 0xBF\0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "VK_OEM_3 0xC0\0"
	.byte	0x1
	.uleb128 0x13d
	.ascii "VK_OEM_4 0xDB\0"
	.byte	0x1
	.uleb128 0x13e
	.ascii "VK_OEM_5 0xDC\0"
	.byte	0x1
	.uleb128 0x13f
	.ascii "VK_OEM_6 0xDD\0"
	.byte	0x1
	.uleb128 0x140
	.ascii "VK_OEM_7 0xDE\0"
	.byte	0x1
	.uleb128 0x141
	.ascii "VK_OEM_8 0xDF\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "VK_OEM_AX 0xE1\0"
	.byte	0x1
	.uleb128 0x143
	.ascii "VK_OEM_102 0xE2\0"
	.byte	0x1
	.uleb128 0x144
	.ascii "VK_ICO_HELP 0xE3\0"
	.byte	0x1
	.uleb128 0x145
	.ascii "VK_ICO_00 0xE4\0"
	.byte	0x1
	.uleb128 0x146
	.ascii "VK_PROCESSKEY 0xE5\0"
	.byte	0x1
	.uleb128 0x147
	.ascii "VK_ICO_CLEAR 0xE6\0"
	.byte	0x1
	.uleb128 0x148
	.ascii "VK_PACKET 0xE7\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "VK_OEM_RESET 0xE9\0"
	.byte	0x1
	.uleb128 0x14a
	.ascii "VK_OEM_JUMP 0xEA\0"
	.byte	0x1
	.uleb128 0x14b
	.ascii "VK_OEM_PA1 0xEB\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "VK_OEM_PA2 0xEC\0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "VK_OEM_PA3 0xED\0"
	.byte	0x1
	.uleb128 0x14e
	.ascii "VK_OEM_WSCTRL 0xEE\0"
	.byte	0x1
	.uleb128 0x14f
	.ascii "VK_OEM_CUSEL 0xEF\0"
	.byte	0x1
	.uleb128 0x150
	.ascii "VK_OEM_ATTN 0xF0\0"
	.byte	0x1
	.uleb128 0x151
	.ascii "VK_OEM_FINISH 0xF1\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "VK_OEM_COPY 0xF2\0"
	.byte	0x1
	.uleb128 0x153
	.ascii "VK_OEM_AUTO 0xF3\0"
	.byte	0x1
	.uleb128 0x154
	.ascii "VK_OEM_ENLW 0xF4\0"
	.byte	0x1
	.uleb128 0x155
	.ascii "VK_OEM_BACKTAB 0xF5\0"
	.byte	0x1
	.uleb128 0x156
	.ascii "VK_ATTN 0xF6\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "VK_CRSEL 0xF7\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "VK_EXSEL 0xF8\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "VK_EREOF 0xF9\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "VK_PLAY 0xFA\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "VK_ZOOM 0xFB\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "VK_NONAME 0xFC\0"
	.byte	0x1
	.uleb128 0x15d
	.ascii "VK_PA1 0xFD\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "VK_OEM_CLEAR 0xFE\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "WH_MIN (-1)\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "WH_MSGFILTER (-1)\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "WH_JOURNALRECORD 0\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "WH_JOURNALPLAYBACK 1\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "WH_KEYBOARD 2\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "WH_GETMESSAGE 3\0"
	.byte	0x1
	.uleb128 0x169
	.ascii "WH_CALLWNDPROC 4\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "WH_CBT 5\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "WH_SYSMSGFILTER 6\0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "WH_MOUSE 7\0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "WH_HARDWARE 8\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "WH_DEBUG 9\0"
	.byte	0x1
	.uleb128 0x16f
	.ascii "WH_SHELL 10\0"
	.byte	0x1
	.uleb128 0x170
	.ascii "WH_FOREGROUNDIDLE 11\0"
	.byte	0x1
	.uleb128 0x171
	.ascii "WH_CALLWNDPROCRET 12\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "WH_KEYBOARD_LL 13\0"
	.byte	0x1
	.uleb128 0x174
	.ascii "WH_MOUSE_LL 14\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "WH_MAX 14\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "WH_MINHOOK WH_MIN\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "WH_MAXHOOK WH_MAX\0"
	.byte	0x1
	.uleb128 0x17b
	.ascii "HC_ACTION 0\0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "HC_GETNEXT 1\0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "HC_SKIP 2\0"
	.byte	0x1
	.uleb128 0x17e
	.ascii "HC_NOREMOVE 3\0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "HC_NOREM HC_NOREMOVE\0"
	.byte	0x1
	.uleb128 0x180
	.ascii "HC_SYSMODALON 4\0"
	.byte	0x1
	.uleb128 0x181
	.ascii "HC_SYSMODALOFF 5\0"
	.byte	0x1
	.uleb128 0x183
	.ascii "HCBT_MOVESIZE 0\0"
	.byte	0x1
	.uleb128 0x184
	.ascii "HCBT_MINMAX 1\0"
	.byte	0x1
	.uleb128 0x185
	.ascii "HCBT_QS 2\0"
	.byte	0x1
	.uleb128 0x186
	.ascii "HCBT_CREATEWND 3\0"
	.byte	0x1
	.uleb128 0x187
	.ascii "HCBT_DESTROYWND 4\0"
	.byte	0x1
	.uleb128 0x188
	.ascii "HCBT_ACTIVATE 5\0"
	.byte	0x1
	.uleb128 0x189
	.ascii "HCBT_CLICKSKIPPED 6\0"
	.byte	0x1
	.uleb128 0x18a
	.ascii "HCBT_KEYSKIPPED 7\0"
	.byte	0x1
	.uleb128 0x18b
	.ascii "HCBT_SYSCOMMAND 8\0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "HCBT_SETFOCUS 9\0"
	.byte	0x1
	.uleb128 0x1a7
	.ascii "WTS_CONSOLE_CONNECT 0x1\0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "WTS_CONSOLE_DISCONNECT 0x2\0"
	.byte	0x1
	.uleb128 0x1a9
	.ascii "WTS_REMOTE_CONNECT 0x3\0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "WTS_REMOTE_DISCONNECT 0x4\0"
	.byte	0x1
	.uleb128 0x1ab
	.ascii "WTS_SESSION_LOGON 0x5\0"
	.byte	0x1
	.uleb128 0x1ac
	.ascii "WTS_SESSION_LOGOFF 0x6\0"
	.byte	0x1
	.uleb128 0x1ad
	.ascii "WTS_SESSION_LOCK 0x7\0"
	.byte	0x1
	.uleb128 0x1ae
	.ascii "WTS_SESSION_UNLOCK 0x8\0"
	.byte	0x1
	.uleb128 0x1af
	.ascii "WTS_SESSION_REMOTE_CONTROL 0x9\0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "MSGF_DIALOGBOX 0\0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "MSGF_MESSAGEBOX 1\0"
	.byte	0x1
	.uleb128 0x1b3
	.ascii "MSGF_MENU 2\0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "MSGF_SCROLLBAR 5\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "MSGF_NEXTWINDOW 6\0"
	.byte	0x1
	.uleb128 0x1b6
	.ascii "MSGF_MAX 8\0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "MSGF_USER 4096\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "HSHELL_WINDOWCREATED 1\0"
	.byte	0x1
	.uleb128 0x1ba
	.ascii "HSHELL_WINDOWDESTROYED 2\0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "HSHELL_ACTIVATESHELLWINDOW 3\0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "HSHELL_WINDOWACTIVATED 4\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "HSHELL_GETMINRECT 5\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "HSHELL_REDRAW 6\0"
	.byte	0x1
	.uleb128 0x1c0
	.ascii "HSHELL_TASKMAN 7\0"
	.byte	0x1
	.uleb128 0x1c1
	.ascii "HSHELL_LANGUAGE 8\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "HSHELL_SYSMENU 9\0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "HSHELL_ENDTASK 10\0"
	.byte	0x1
	.uleb128 0x1c4
	.ascii "HSHELL_ACCESSIBILITYSTATE 11\0"
	.byte	0x1
	.uleb128 0x1c5
	.ascii "HSHELL_APPCOMMAND 12\0"
	.byte	0x1
	.uleb128 0x1c6
	.ascii "HSHELL_WINDOWREPLACED 13\0"
	.byte	0x1
	.uleb128 0x1c7
	.ascii "HSHELL_WINDOWREPLACING 14\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "HSHELL_HIGHBIT 0x8000\0"
	.byte	0x1
	.uleb128 0x1c9
	.ascii "HSHELL_FLASH (HSHELL_REDRAW|HSHELL_HIGHBIT)\0"
	.byte	0x1
	.uleb128 0x1ca
	.ascii "HSHELL_RUDEAPPACTIVATED (HSHELL_WINDOWACTIVATED|HSHELL_HIGHBIT)\0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "ACCESS_STICKYKEYS 0x0001\0"
	.byte	0x1
	.uleb128 0x1cd
	.ascii "ACCESS_FILTERKEYS 0x0002\0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "ACCESS_MOUSEKEYS 0x0003\0"
	.byte	0x1
	.uleb128 0x1d0
	.ascii "APPCOMMAND_BROWSER_BACKWARD 1\0"
	.byte	0x1
	.uleb128 0x1d1
	.ascii "APPCOMMAND_BROWSER_FORWARD 2\0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "APPCOMMAND_BROWSER_REFRESH 3\0"
	.byte	0x1
	.uleb128 0x1d3
	.ascii "APPCOMMAND_BROWSER_STOP 4\0"
	.byte	0x1
	.uleb128 0x1d4
	.ascii "APPCOMMAND_BROWSER_SEARCH 5\0"
	.byte	0x1
	.uleb128 0x1d5
	.ascii "APPCOMMAND_BROWSER_FAVORITES 6\0"
	.byte	0x1
	.uleb128 0x1d6
	.ascii "APPCOMMAND_BROWSER_HOME 7\0"
	.byte	0x1
	.uleb128 0x1d7
	.ascii "APPCOMMAND_VOLUME_MUTE 8\0"
	.byte	0x1
	.uleb128 0x1d8
	.ascii "APPCOMMAND_VOLUME_DOWN 9\0"
	.byte	0x1
	.uleb128 0x1d9
	.ascii "APPCOMMAND_VOLUME_UP 10\0"
	.byte	0x1
	.uleb128 0x1da
	.ascii "APPCOMMAND_MEDIA_NEXTTRACK 11\0"
	.byte	0x1
	.uleb128 0x1db
	.ascii "APPCOMMAND_MEDIA_PREVIOUSTRACK 12\0"
	.byte	0x1
	.uleb128 0x1dc
	.ascii "APPCOMMAND_MEDIA_STOP 13\0"
	.byte	0x1
	.uleb128 0x1dd
	.ascii "APPCOMMAND_MEDIA_PLAY_PAUSE 14\0"
	.byte	0x1
	.uleb128 0x1de
	.ascii "APPCOMMAND_LAUNCH_MAIL 15\0"
	.byte	0x1
	.uleb128 0x1df
	.ascii "APPCOMMAND_LAUNCH_MEDIA_SELECT 16\0"
	.byte	0x1
	.uleb128 0x1e0
	.ascii "APPCOMMAND_LAUNCH_APP1 17\0"
	.byte	0x1
	.uleb128 0x1e1
	.ascii "APPCOMMAND_LAUNCH_APP2 18\0"
	.byte	0x1
	.uleb128 0x1e2
	.ascii "APPCOMMAND_BASS_DOWN 19\0"
	.byte	0x1
	.uleb128 0x1e3
	.ascii "APPCOMMAND_BASS_BOOST 20\0"
	.byte	0x1
	.uleb128 0x1e4
	.ascii "APPCOMMAND_BASS_UP 21\0"
	.byte	0x1
	.uleb128 0x1e5
	.ascii "APPCOMMAND_TREBLE_DOWN 22\0"
	.byte	0x1
	.uleb128 0x1e6
	.ascii "APPCOMMAND_TREBLE_UP 23\0"
	.byte	0x1
	.uleb128 0x1e7
	.ascii "APPCOMMAND_MICROPHONE_VOLUME_MUTE 24\0"
	.byte	0x1
	.uleb128 0x1e8
	.ascii "APPCOMMAND_MICROPHONE_VOLUME_DOWN 25\0"
	.byte	0x1
	.uleb128 0x1e9
	.ascii "APPCOMMAND_MICROPHONE_VOLUME_UP 26\0"
	.byte	0x1
	.uleb128 0x1ea
	.ascii "APPCOMMAND_HELP 27\0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "APPCOMMAND_FIND 28\0"
	.byte	0x1
	.uleb128 0x1ec
	.ascii "APPCOMMAND_NEW 29\0"
	.byte	0x1
	.uleb128 0x1ed
	.ascii "APPCOMMAND_OPEN 30\0"
	.byte	0x1
	.uleb128 0x1ee
	.ascii "APPCOMMAND_CLOSE 31\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "APPCOMMAND_SAVE 32\0"
	.byte	0x1
	.uleb128 0x1f0
	.ascii "APPCOMMAND_PRINT 33\0"
	.byte	0x1
	.uleb128 0x1f1
	.ascii "APPCOMMAND_UNDO 34\0"
	.byte	0x1
	.uleb128 0x1f2
	.ascii "APPCOMMAND_REDO 35\0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "APPCOMMAND_COPY 36\0"
	.byte	0x1
	.uleb128 0x1f4
	.ascii "APPCOMMAND_CUT 37\0"
	.byte	0x1
	.uleb128 0x1f5
	.ascii "APPCOMMAND_PASTE 38\0"
	.byte	0x1
	.uleb128 0x1f6
	.ascii "APPCOMMAND_REPLY_TO_MAIL 39\0"
	.byte	0x1
	.uleb128 0x1f7
	.ascii "APPCOMMAND_FORWARD_MAIL 40\0"
	.byte	0x1
	.uleb128 0x1f8
	.ascii "APPCOMMAND_SEND_MAIL 41\0"
	.byte	0x1
	.uleb128 0x1f9
	.ascii "APPCOMMAND_SPELL_CHECK 42\0"
	.byte	0x1
	.uleb128 0x1fa
	.ascii "APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE 43\0"
	.byte	0x1
	.uleb128 0x1fb
	.ascii "APPCOMMAND_MIC_ON_OFF_TOGGLE 44\0"
	.byte	0x1
	.uleb128 0x1fc
	.ascii "APPCOMMAND_CORRECTION_LIST 45\0"
	.byte	0x1
	.uleb128 0x1fd
	.ascii "APPCOMMAND_MEDIA_PLAY 46\0"
	.byte	0x1
	.uleb128 0x1fe
	.ascii "APPCOMMAND_MEDIA_PAUSE 47\0"
	.byte	0x1
	.uleb128 0x1ff
	.ascii "APPCOMMAND_MEDIA_RECORD 48\0"
	.byte	0x1
	.uleb128 0x200
	.ascii "APPCOMMAND_MEDIA_FAST_FORWARD 49\0"
	.byte	0x1
	.uleb128 0x201
	.ascii "APPCOMMAND_MEDIA_REWIND 50\0"
	.byte	0x1
	.uleb128 0x202
	.ascii "APPCOMMAND_MEDIA_CHANNEL_UP 51\0"
	.byte	0x1
	.uleb128 0x203
	.ascii "APPCOMMAND_MEDIA_CHANNEL_DOWN 52\0"
	.byte	0x1
	.uleb128 0x205
	.ascii "FAPPCOMMAND_MOUSE 0x8000\0"
	.byte	0x1
	.uleb128 0x206
	.ascii "FAPPCOMMAND_KEY 0\0"
	.byte	0x1
	.uleb128 0x207
	.ascii "FAPPCOMMAND_OEM 0x1000\0"
	.byte	0x1
	.uleb128 0x208
	.ascii "FAPPCOMMAND_MASK 0xF000\0"
	.byte	0x1
	.uleb128 0x20a
	.ascii "GET_APPCOMMAND_LPARAM(lParam) ((short)(HIWORD(lParam) & ~FAPPCOMMAND_MASK))\0"
	.byte	0x1
	.uleb128 0x20b
	.ascii "GET_DEVICE_LPARAM(lParam) ((WORD)(HIWORD(lParam) & FAPPCOMMAND_MASK))\0"
	.byte	0x1
	.uleb128 0x20c
	.ascii "GET_MOUSEORKEY_LPARAM GET_DEVICE_LPARAM\0"
	.byte	0x1
	.uleb128 0x20d
	.ascii "GET_FLAGS_LPARAM(lParam) (LOWORD(lParam))\0"
	.byte	0x1
	.uleb128 0x20e
	.ascii "GET_KEYSTATE_LPARAM(lParam) GET_FLAGS_LPARAM(lParam)\0"
	.byte	0x1
	.uleb128 0x22e
	.ascii "LLKHF_EXTENDED (KF_EXTENDED >> 8)\0"
	.byte	0x1
	.uleb128 0x22f
	.ascii "LLKHF_INJECTED 0x00000010\0"
	.byte	0x1
	.uleb128 0x230
	.ascii "LLKHF_ALTDOWN (KF_ALTDOWN >> 8)\0"
	.byte	0x1
	.uleb128 0x231
	.ascii "LLKHF_UP (KF_UP >> 8)\0"
	.byte	0x1
	.uleb128 0x233
	.ascii "LLMHF_INJECTED 0x00000001\0"
	.byte	0x1
	.uleb128 0x267
	.ascii "HKL_PREV 0\0"
	.byte	0x1
	.uleb128 0x268
	.ascii "HKL_NEXT 1\0"
	.byte	0x1
	.uleb128 0x26a
	.ascii "KLF_ACTIVATE 0x00000001\0"
	.byte	0x1
	.uleb128 0x26b
	.ascii "KLF_SUBSTITUTE_OK 0x00000002\0"
	.byte	0x1
	.uleb128 0x26c
	.ascii "KLF_REORDER 0x00000008\0"
	.byte	0x1
	.uleb128 0x26d
	.ascii "KLF_REPLACELANG 0x00000010\0"
	.byte	0x1
	.uleb128 0x26e
	.ascii "KLF_NOTELLSHELL 0x00000080\0"
	.byte	0x1
	.uleb128 0x26f
	.ascii "KLF_SETFORPROCESS 0x00000100\0"
	.byte	0x1
	.uleb128 0x270
	.ascii "KLF_SHIFTLOCK 0x00010000\0"
	.byte	0x1
	.uleb128 0x271
	.ascii "KLF_RESET 0x40000000\0"
	.byte	0x1
	.uleb128 0x273
	.ascii "INPUTLANGCHANGE_SYSCHARSET 0x0001\0"
	.byte	0x1
	.uleb128 0x274
	.ascii "INPUTLANGCHANGE_FORWARD 0x0002\0"
	.byte	0x1
	.uleb128 0x275
	.ascii "INPUTLANGCHANGE_BACKWARD 0x0004\0"
	.byte	0x1
	.uleb128 0x277
	.ascii "KL_NAMELENGTH 9\0"
	.byte	0x1
	.uleb128 0x279
	.ascii "LoadKeyboardLayout __MINGW_NAME_AW(LoadKeyboardLayout)\0"
	.byte	0x1
	.uleb128 0x27a
	.ascii "GetKeyboardLayoutName __MINGW_NAME_AW(GetKeyboardLayoutName)\0"
	.byte	0x1
	.uleb128 0x28d
	.ascii "GMMP_USE_DISPLAY_POINTS 1\0"
	.byte	0x1
	.uleb128 0x28e
	.ascii "GMMP_USE_HIGH_RESOLUTION_POINTS 2\0"
	.byte	0x1
	.uleb128 0x294
	.ascii "DESKTOP_READOBJECTS __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0x295
	.ascii "DESKTOP_CREATEWINDOW __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0x296
	.ascii "DESKTOP_CREATEMENU __MSABI_LONG(0x0004)\0"
	.byte	0x1
	.uleb128 0x297
	.ascii "DESKTOP_HOOKCONTROL __MSABI_LONG(0x0008)\0"
	.byte	0x1
	.uleb128 0x298
	.ascii "DESKTOP_JOURNALRECORD __MSABI_LONG(0x0010)\0"
	.byte	0x1
	.uleb128 0x299
	.ascii "DESKTOP_JOURNALPLAYBACK __MSABI_LONG(0x0020)\0"
	.byte	0x1
	.uleb128 0x29a
	.ascii "DESKTOP_ENUMERATE __MSABI_LONG(0x0040)\0"
	.byte	0x1
	.uleb128 0x29b
	.ascii "DESKTOP_WRITEOBJECTS __MSABI_LONG(0x0080)\0"
	.byte	0x1
	.uleb128 0x29c
	.ascii "DESKTOP_SWITCHDESKTOP __MSABI_LONG(0x0100)\0"
	.byte	0x1
	.uleb128 0x29e
	.ascii "DF_ALLOWOTHERACCOUNTHOOK __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0x2a2
	.ascii "CreateDesktop __MINGW_NAME_AW(CreateDesktop)\0"
	.byte	0x1
	.uleb128 0x2a9
	.ascii "OpenDesktop __MINGW_NAME_AW(OpenDesktop)\0"
	.byte	0x1
	.uleb128 0x2aa
	.ascii "EnumDesktops __MINGW_NAME_AW(EnumDesktops)\0"
	.byte	0x1
	.uleb128 0x2b9
	.ascii "WINSTA_ENUMDESKTOPS __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0x2ba
	.ascii "WINSTA_READATTRIBUTES __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0x2bb
	.ascii "WINSTA_ACCESSCLIPBOARD __MSABI_LONG(0x0004)\0"
	.byte	0x1
	.uleb128 0x2bc
	.ascii "WINSTA_CREATEDESKTOP __MSABI_LONG(0x0008)\0"
	.byte	0x1
	.uleb128 0x2bd
	.ascii "WINSTA_WRITEATTRIBUTES __MSABI_LONG(0x0010)\0"
	.byte	0x1
	.uleb128 0x2be
	.ascii "WINSTA_ACCESSGLOBALATOMS __MSABI_LONG(0x0020)\0"
	.byte	0x1
	.uleb128 0x2bf
	.ascii "WINSTA_EXITWINDOWS __MSABI_LONG(0x0040)\0"
	.byte	0x1
	.uleb128 0x2c0
	.ascii "WINSTA_ENUMERATE __MSABI_LONG(0x0100)\0"
	.byte	0x1
	.uleb128 0x2c1
	.ascii "WINSTA_READSCREEN __MSABI_LONG(0x0200)\0"
	.byte	0x1
	.uleb128 0x2c2
	.ascii "WINSTA_ALL_ACCESS (WINSTA_ENUMDESKTOPS | WINSTA_READATTRIBUTES | WINSTA_ACCESSCLIPBOARD | WINSTA_CREATEDESKTOP | WINSTA_WRITEATTRIBUTES | WINSTA_ACCESSGLOBALATOMS | WINSTA_EXITWINDOWS | WINSTA_ENUMERATE | WINSTA_READSCREEN)\0"
	.byte	0x1
	.uleb128 0x2c4
	.ascii "CWF_CREATE_ONLY __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0x2c6
	.ascii "WSF_VISIBLE __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0x2c8
	.ascii "CreateWindowStation __MINGW_NAME_AW(CreateWindowStation)\0"
	.byte	0x1
	.uleb128 0x2c9
	.ascii "OpenWindowStation __MINGW_NAME_AW(OpenWindowStation)\0"
	.byte	0x1
	.uleb128 0x2ca
	.ascii "EnumWindowStations __MINGW_NAME_AW(EnumWindowStations)\0"
	.byte	0x1
	.uleb128 0x2db
	.ascii "UOI_FLAGS 1\0"
	.byte	0x1
	.uleb128 0x2dc
	.ascii "UOI_NAME 2\0"
	.byte	0x1
	.uleb128 0x2dd
	.ascii "UOI_TYPE 3\0"
	.byte	0x1
	.uleb128 0x2de
	.ascii "UOI_USER_SID 4\0"
	.byte	0x1
	.uleb128 0x2e6
	.ascii "GetUserObjectInformation __MINGW_NAME_AW(GetUserObjectInformation)\0"
	.byte	0x1
	.uleb128 0x2e7
	.ascii "SetUserObjectInformation __MINGW_NAME_AW(SetUserObjectInformation)\0"
	.byte	0x1
	.uleb128 0x33f
	.ascii "POINTSTOPOINT(pt,pts) { (pt).x = (LONG)(SHORT)LOWORD(*(LONG*)&pts); (pt).y = (LONG)(SHORT)HIWORD(*(LONG*)&pts); }\0"
	.byte	0x1
	.uleb128 0x341
	.ascii "POINTTOPOINTS(pt) (MAKELONG((short)((pt).x),(short)((pt).y)))\0"
	.byte	0x1
	.uleb128 0x342
	.ascii "MAKEWPARAM(l,h) ((WPARAM)(DWORD)MAKELONG(l,h))\0"
	.byte	0x1
	.uleb128 0x343
	.ascii "MAKELPARAM(l,h) ((LPARAM)(DWORD)MAKELONG(l,h))\0"
	.byte	0x1
	.uleb128 0x344
	.ascii "MAKELRESULT(l,h) ((LRESULT)(DWORD)MAKELONG(l,h))\0"
	.byte	0x1
	.uleb128 0x348
	.ascii "GWL_WNDPROC (-4)\0"
	.byte	0x1
	.uleb128 0x349
	.ascii "GWL_HINSTANCE (-6)\0"
	.byte	0x1
	.uleb128 0x34a
	.ascii "GWL_HWNDPARENT (-8)\0"
	.byte	0x1
	.uleb128 0x34b
	.ascii "GWL_STYLE (-16)\0"
	.byte	0x1
	.uleb128 0x34c
	.ascii "GWL_EXSTYLE (-20)\0"
	.byte	0x1
	.uleb128 0x34d
	.ascii "GWL_USERDATA (-21)\0"
	.byte	0x1
	.uleb128 0x34e
	.ascii "GWL_ID (-12)\0"
	.byte	0x2
	.uleb128 0x351
	.ascii "GWL_WNDPROC\0"
	.byte	0x2
	.uleb128 0x352
	.ascii "GWL_HINSTANCE\0"
	.byte	0x2
	.uleb128 0x353
	.ascii "GWL_HWNDPARENT\0"
	.byte	0x2
	.uleb128 0x354
	.ascii "GWL_USERDATA\0"
	.byte	0x1
	.uleb128 0x357
	.ascii "GWLP_WNDPROC (-4)\0"
	.byte	0x1
	.uleb128 0x358
	.ascii "GWLP_HINSTANCE (-6)\0"
	.byte	0x1
	.uleb128 0x359
	.ascii "GWLP_HWNDPARENT (-8)\0"
	.byte	0x1
	.uleb128 0x35a
	.ascii "GWLP_USERDATA (-21)\0"
	.byte	0x1
	.uleb128 0x35b
	.ascii "GWLP_ID (-12)\0"
	.byte	0x1
	.uleb128 0x35d
	.ascii "GCL_MENUNAME (-8)\0"
	.byte	0x1
	.uleb128 0x35e
	.ascii "GCL_HBRBACKGROUND (-10)\0"
	.byte	0x1
	.uleb128 0x35f
	.ascii "GCL_HCURSOR (-12)\0"
	.byte	0x1
	.uleb128 0x360
	.ascii "GCL_HICON (-14)\0"
	.byte	0x1
	.uleb128 0x361
	.ascii "GCL_HMODULE (-16)\0"
	.byte	0x1
	.uleb128 0x362
	.ascii "GCL_CBWNDEXTRA (-18)\0"
	.byte	0x1
	.uleb128 0x363
	.ascii "GCL_CBCLSEXTRA (-20)\0"
	.byte	0x1
	.uleb128 0x364
	.ascii "GCL_WNDPROC (-24)\0"
	.byte	0x1
	.uleb128 0x365
	.ascii "GCL_STYLE (-26)\0"
	.byte	0x1
	.uleb128 0x366
	.ascii "GCW_ATOM (-32)\0"
	.byte	0x1
	.uleb128 0x367
	.ascii "GCL_HICONSM (-34)\0"
	.byte	0x2
	.uleb128 0x36b
	.ascii "GCL_MENUNAME\0"
	.byte	0x2
	.uleb128 0x36c
	.ascii "GCL_HBRBACKGROUND\0"
	.byte	0x2
	.uleb128 0x36d
	.ascii "GCL_HCURSOR\0"
	.byte	0x2
	.uleb128 0x36e
	.ascii "GCL_HICON\0"
	.byte	0x2
	.uleb128 0x36f
	.ascii "GCL_HMODULE\0"
	.byte	0x2
	.uleb128 0x370
	.ascii "GCL_WNDPROC\0"
	.byte	0x2
	.uleb128 0x371
	.ascii "GCL_HICONSM\0"
	.byte	0x1
	.uleb128 0x374
	.ascii "GCLP_MENUNAME (-8)\0"
	.byte	0x1
	.uleb128 0x375
	.ascii "GCLP_HBRBACKGROUND (-10)\0"
	.byte	0x1
	.uleb128 0x376
	.ascii "GCLP_HCURSOR (-12)\0"
	.byte	0x1
	.uleb128 0x377
	.ascii "GCLP_HICON (-14)\0"
	.byte	0x1
	.uleb128 0x378
	.ascii "GCLP_HMODULE (-16)\0"
	.byte	0x1
	.uleb128 0x379
	.ascii "GCLP_WNDPROC (-24)\0"
	.byte	0x1
	.uleb128 0x37a
	.ascii "GCLP_HICONSM (-34)\0"
	.byte	0x1
	.uleb128 0x37f
	.ascii "WM_NULL 0x0000\0"
	.byte	0x1
	.uleb128 0x380
	.ascii "WM_CREATE 0x0001\0"
	.byte	0x1
	.uleb128 0x381
	.ascii "WM_DESTROY 0x0002\0"
	.byte	0x1
	.uleb128 0x382
	.ascii "WM_MOVE 0x0003\0"
	.byte	0x1
	.uleb128 0x383
	.ascii "WM_SIZE 0x0005\0"
	.byte	0x1
	.uleb128 0x385
	.ascii "WM_ACTIVATE 0x0006\0"
	.byte	0x1
	.uleb128 0x387
	.ascii "WA_INACTIVE 0\0"
	.byte	0x1
	.uleb128 0x388
	.ascii "WA_ACTIVE 1\0"
	.byte	0x1
	.uleb128 0x389
	.ascii "WA_CLICKACTIVE 2\0"
	.byte	0x1
	.uleb128 0x38b
	.ascii "WM_SETFOCUS 0x0007\0"
	.byte	0x1
	.uleb128 0x38c
	.ascii "WM_KILLFOCUS 0x0008\0"
	.byte	0x1
	.uleb128 0x38d
	.ascii "WM_ENABLE 0x000A\0"
	.byte	0x1
	.uleb128 0x38e
	.ascii "WM_SETREDRAW 0x000B\0"
	.byte	0x1
	.uleb128 0x38f
	.ascii "WM_SETTEXT 0x000C\0"
	.byte	0x1
	.uleb128 0x390
	.ascii "WM_GETTEXT 0x000D\0"
	.byte	0x1
	.uleb128 0x391
	.ascii "WM_GETTEXTLENGTH 0x000E\0"
	.byte	0x1
	.uleb128 0x392
	.ascii "WM_PAINT 0x000F\0"
	.byte	0x1
	.uleb128 0x393
	.ascii "WM_CLOSE 0x0010\0"
	.byte	0x1
	.uleb128 0x395
	.ascii "WM_QUERYENDSESSION 0x0011\0"
	.byte	0x1
	.uleb128 0x396
	.ascii "WM_QUERYOPEN 0x0013\0"
	.byte	0x1
	.uleb128 0x397
	.ascii "WM_ENDSESSION 0x0016\0"
	.byte	0x1
	.uleb128 0x399
	.ascii "WM_QUIT 0x0012\0"
	.byte	0x1
	.uleb128 0x39a
	.ascii "WM_ERASEBKGND 0x0014\0"
	.byte	0x1
	.uleb128 0x39b
	.ascii "WM_SYSCOLORCHANGE 0x0015\0"
	.byte	0x1
	.uleb128 0x39c
	.ascii "WM_SHOWWINDOW 0x0018\0"
	.byte	0x1
	.uleb128 0x39d
	.ascii "WM_WININICHANGE 0x001A\0"
	.byte	0x1
	.uleb128 0x39e
	.ascii "WM_SETTINGCHANGE WM_WININICHANGE\0"
	.byte	0x1
	.uleb128 0x39f
	.ascii "WM_DEVMODECHANGE 0x001B\0"
	.byte	0x1
	.uleb128 0x3a0
	.ascii "WM_ACTIVATEAPP 0x001C\0"
	.byte	0x1
	.uleb128 0x3a1
	.ascii "WM_FONTCHANGE 0x001D\0"
	.byte	0x1
	.uleb128 0x3a2
	.ascii "WM_TIMECHANGE 0x001E\0"
	.byte	0x1
	.uleb128 0x3a3
	.ascii "WM_CANCELMODE 0x001F\0"
	.byte	0x1
	.uleb128 0x3a4
	.ascii "WM_SETCURSOR 0x0020\0"
	.byte	0x1
	.uleb128 0x3a5
	.ascii "WM_MOUSEACTIVATE 0x0021\0"
	.byte	0x1
	.uleb128 0x3a6
	.ascii "WM_CHILDACTIVATE 0x0022\0"
	.byte	0x1
	.uleb128 0x3a7
	.ascii "WM_QUEUESYNC 0x0023\0"
	.byte	0x1
	.uleb128 0x3a9
	.ascii "WM_GETMINMAXINFO 0x0024\0"
	.byte	0x1
	.uleb128 0x3b3
	.ascii "WM_PAINTICON 0x0026\0"
	.byte	0x1
	.uleb128 0x3b4
	.ascii "WM_ICONERASEBKGND 0x0027\0"
	.byte	0x1
	.uleb128 0x3b5
	.ascii "WM_NEXTDLGCTL 0x0028\0"
	.byte	0x1
	.uleb128 0x3b6
	.ascii "WM_SPOOLERSTATUS 0x002A\0"
	.byte	0x1
	.uleb128 0x3b7
	.ascii "WM_DRAWITEM 0x002B\0"
	.byte	0x1
	.uleb128 0x3b8
	.ascii "WM_MEASUREITEM 0x002C\0"
	.byte	0x1
	.uleb128 0x3b9
	.ascii "WM_DELETEITEM 0x002D\0"
	.byte	0x1
	.uleb128 0x3ba
	.ascii "WM_VKEYTOITEM 0x002E\0"
	.byte	0x1
	.uleb128 0x3bb
	.ascii "WM_CHARTOITEM 0x002F\0"
	.byte	0x1
	.uleb128 0x3bc
	.ascii "WM_SETFONT 0x0030\0"
	.byte	0x1
	.uleb128 0x3bd
	.ascii "WM_GETFONT 0x0031\0"
	.byte	0x1
	.uleb128 0x3be
	.ascii "WM_SETHOTKEY 0x0032\0"
	.byte	0x1
	.uleb128 0x3bf
	.ascii "WM_GETHOTKEY 0x0033\0"
	.byte	0x1
	.uleb128 0x3c0
	.ascii "WM_QUERYDRAGICON 0x0037\0"
	.byte	0x1
	.uleb128 0x3c1
	.ascii "WM_COMPAREITEM 0x0039\0"
	.byte	0x1
	.uleb128 0x3c3
	.ascii "WM_GETOBJECT 0x003D\0"
	.byte	0x1
	.uleb128 0x3c5
	.ascii "WM_COMPACTING 0x0041\0"
	.byte	0x1
	.uleb128 0x3c6
	.ascii "WM_COMMNOTIFY 0x0044\0"
	.byte	0x1
	.uleb128 0x3c7
	.ascii "WM_WINDOWPOSCHANGING 0x0046\0"
	.byte	0x1
	.uleb128 0x3c8
	.ascii "WM_WINDOWPOSCHANGED 0x0047\0"
	.byte	0x1
	.uleb128 0x3ca
	.ascii "WM_POWER 0x0048\0"
	.byte	0x1
	.uleb128 0x3cc
	.ascii "PWR_OK 1\0"
	.byte	0x1
	.uleb128 0x3cd
	.ascii "PWR_FAIL (-1)\0"
	.byte	0x1
	.uleb128 0x3ce
	.ascii "PWR_SUSPENDREQUEST 1\0"
	.byte	0x1
	.uleb128 0x3cf
	.ascii "PWR_SUSPENDRESUME 2\0"
	.byte	0x1
	.uleb128 0x3d0
	.ascii "PWR_CRITICALRESUME 3\0"
	.byte	0x1
	.uleb128 0x3d2
	.ascii "WM_COPYDATA 0x004A\0"
	.byte	0x1
	.uleb128 0x3d3
	.ascii "WM_CANCELJOURNAL 0x004B\0"
	.byte	0x1
	.uleb128 0x3e1
	.ascii "WM_NOTIFY 0x004E\0"
	.byte	0x1
	.uleb128 0x3e2
	.ascii "WM_INPUTLANGCHANGEREQUEST 0x0050\0"
	.byte	0x1
	.uleb128 0x3e3
	.ascii "WM_INPUTLANGCHANGE 0x0051\0"
	.byte	0x1
	.uleb128 0x3e4
	.ascii "WM_TCARD 0x0052\0"
	.byte	0x1
	.uleb128 0x3e5
	.ascii "WM_HELP 0x0053\0"
	.byte	0x1
	.uleb128 0x3e6
	.ascii "WM_USERCHANGED 0x0054\0"
	.byte	0x1
	.uleb128 0x3e7
	.ascii "WM_NOTIFYFORMAT 0x0055\0"
	.byte	0x1
	.uleb128 0x3e9
	.ascii "NFR_ANSI 1\0"
	.byte	0x1
	.uleb128 0x3ea
	.ascii "NFR_UNICODE 2\0"
	.byte	0x1
	.uleb128 0x3eb
	.ascii "NF_QUERY 3\0"
	.byte	0x1
	.uleb128 0x3ec
	.ascii "NF_REQUERY 4\0"
	.byte	0x1
	.uleb128 0x3ee
	.ascii "WM_CONTEXTMENU 0x007B\0"
	.byte	0x1
	.uleb128 0x3ef
	.ascii "WM_STYLECHANGING 0x007C\0"
	.byte	0x1
	.uleb128 0x3f0
	.ascii "WM_STYLECHANGED 0x007D\0"
	.byte	0x1
	.uleb128 0x3f1
	.ascii "WM_DISPLAYCHANGE 0x007E\0"
	.byte	0x1
	.uleb128 0x3f2
	.ascii "WM_GETICON 0x007F\0"
	.byte	0x1
	.uleb128 0x3f3
	.ascii "WM_SETICON 0x0080\0"
	.byte	0x1
	.uleb128 0x3f5
	.ascii "WM_NCCREATE 0x0081\0"
	.byte	0x1
	.uleb128 0x3f6
	.ascii "WM_NCDESTROY 0x0082\0"
	.byte	0x1
	.uleb128 0x3f7
	.ascii "WM_NCCALCSIZE 0x0083\0"
	.byte	0x1
	.uleb128 0x3f8
	.ascii "WM_NCHITTEST 0x0084\0"
	.byte	0x1
	.uleb128 0x3f9
	.ascii "WM_NCPAINT 0x0085\0"
	.byte	0x1
	.uleb128 0x3fa
	.ascii "WM_NCACTIVATE 0x0086\0"
	.byte	0x1
	.uleb128 0x3fb
	.ascii "WM_GETDLGCODE 0x0087\0"
	.byte	0x1
	.uleb128 0x3fd
	.ascii "WM_SYNCPAINT 0x0088\0"
	.byte	0x1
	.uleb128 0x3ff
	.ascii "WM_NCMOUSEMOVE 0x00A0\0"
	.byte	0x1
	.uleb128 0x400
	.ascii "WM_NCLBUTTONDOWN 0x00A1\0"
	.byte	0x1
	.uleb128 0x401
	.ascii "WM_NCLBUTTONUP 0x00A2\0"
	.byte	0x1
	.uleb128 0x402
	.ascii "WM_NCLBUTTONDBLCLK 0x00A3\0"
	.byte	0x1
	.uleb128 0x403
	.ascii "WM_NCRBUTTONDOWN 0x00A4\0"
	.byte	0x1
	.uleb128 0x404
	.ascii "WM_NCRBUTTONUP 0x00A5\0"
	.byte	0x1
	.uleb128 0x405
	.ascii "WM_NCRBUTTONDBLCLK 0x00A6\0"
	.byte	0x1
	.uleb128 0x406
	.ascii "WM_NCMBUTTONDOWN 0x00A7\0"
	.byte	0x1
	.uleb128 0x407
	.ascii "WM_NCMBUTTONUP 0x00A8\0"
	.byte	0x1
	.uleb128 0x408
	.ascii "WM_NCMBUTTONDBLCLK 0x00A9\0"
	.byte	0x1
	.uleb128 0x40a
	.ascii "WM_NCXBUTTONDOWN 0x00AB\0"
	.byte	0x1
	.uleb128 0x40b
	.ascii "WM_NCXBUTTONUP 0x00AC\0"
	.byte	0x1
	.uleb128 0x40c
	.ascii "WM_NCXBUTTONDBLCLK 0x00AD\0"
	.byte	0x1
	.uleb128 0x40d
	.ascii "WM_INPUT 0x00FF\0"
	.byte	0x1
	.uleb128 0x40e
	.ascii "WM_KEYFIRST 0x0100\0"
	.byte	0x1
	.uleb128 0x40f
	.ascii "WM_KEYDOWN 0x0100\0"
	.byte	0x1
	.uleb128 0x410
	.ascii "WM_KEYUP 0x0101\0"
	.byte	0x1
	.uleb128 0x411
	.ascii "WM_CHAR 0x0102\0"
	.byte	0x1
	.uleb128 0x412
	.ascii "WM_DEADCHAR 0x0103\0"
	.byte	0x1
	.uleb128 0x413
	.ascii "WM_SYSKEYDOWN 0x0104\0"
	.byte	0x1
	.uleb128 0x414
	.ascii "WM_SYSKEYUP 0x0105\0"
	.byte	0x1
	.uleb128 0x415
	.ascii "WM_SYSCHAR 0x0106\0"
	.byte	0x1
	.uleb128 0x416
	.ascii "WM_SYSDEADCHAR 0x0107\0"
	.byte	0x1
	.uleb128 0x417
	.ascii "WM_UNICHAR 0x0109\0"
	.byte	0x1
	.uleb128 0x418
	.ascii "WM_KEYLAST 0x0109\0"
	.byte	0x1
	.uleb128 0x419
	.ascii "UNICODE_NOCHAR 0xFFFF\0"
	.byte	0x1
	.uleb128 0x41a
	.ascii "WM_IME_STARTCOMPOSITION 0x010D\0"
	.byte	0x1
	.uleb128 0x41b
	.ascii "WM_IME_ENDCOMPOSITION 0x010E\0"
	.byte	0x1
	.uleb128 0x41c
	.ascii "WM_IME_COMPOSITION 0x010F\0"
	.byte	0x1
	.uleb128 0x41d
	.ascii "WM_IME_KEYLAST 0x010F\0"
	.byte	0x1
	.uleb128 0x41e
	.ascii "WM_INITDIALOG 0x0110\0"
	.byte	0x1
	.uleb128 0x41f
	.ascii "WM_COMMAND 0x0111\0"
	.byte	0x1
	.uleb128 0x420
	.ascii "WM_SYSCOMMAND 0x0112\0"
	.byte	0x1
	.uleb128 0x421
	.ascii "WM_TIMER 0x0113\0"
	.byte	0x1
	.uleb128 0x422
	.ascii "WM_HSCROLL 0x0114\0"
	.byte	0x1
	.uleb128 0x423
	.ascii "WM_VSCROLL 0x0115\0"
	.byte	0x1
	.uleb128 0x424
	.ascii "WM_INITMENU 0x0116\0"
	.byte	0x1
	.uleb128 0x425
	.ascii "WM_INITMENUPOPUP 0x0117\0"
	.byte	0x1
	.uleb128 0x426
	.ascii "WM_MENUSELECT 0x011F\0"
	.byte	0x1
	.uleb128 0x42b
	.ascii "WM_MENUCHAR 0x0120\0"
	.byte	0x1
	.uleb128 0x42c
	.ascii "WM_ENTERIDLE 0x0121\0"
	.byte	0x1
	.uleb128 0x42e
	.ascii "WM_MENURBUTTONUP 0x0122\0"
	.byte	0x1
	.uleb128 0x42f
	.ascii "WM_MENUDRAG 0x0123\0"
	.byte	0x1
	.uleb128 0x430
	.ascii "WM_MENUGETOBJECT 0x0124\0"
	.byte	0x1
	.uleb128 0x431
	.ascii "WM_UNINITMENUPOPUP 0x0125\0"
	.byte	0x1
	.uleb128 0x432
	.ascii "WM_MENUCOMMAND 0x0126\0"
	.byte	0x1
	.uleb128 0x435
	.ascii "WM_CHANGEUISTATE 0x0127\0"
	.byte	0x1
	.uleb128 0x436
	.ascii "WM_UPDATEUISTATE 0x0128\0"
	.byte	0x1
	.uleb128 0x437
	.ascii "WM_QUERYUISTATE 0x0129\0"
	.byte	0x1
	.uleb128 0x439
	.ascii "UIS_SET 1\0"
	.byte	0x1
	.uleb128 0x43a
	.ascii "UIS_CLEAR 2\0"
	.byte	0x1
	.uleb128 0x43b
	.ascii "UIS_INITIALIZE 3\0"
	.byte	0x1
	.uleb128 0x43d
	.ascii "UISF_HIDEFOCUS 0x1\0"
	.byte	0x1
	.uleb128 0x43e
	.ascii "UISF_HIDEACCEL 0x2\0"
	.byte	0x1
	.uleb128 0x43f
	.ascii "UISF_ACTIVE 0x4\0"
	.byte	0x1
	.uleb128 0x443
	.ascii "WM_CTLCOLORMSGBOX 0x0132\0"
	.byte	0x1
	.uleb128 0x444
	.ascii "WM_CTLCOLOREDIT 0x0133\0"
	.byte	0x1
	.uleb128 0x445
	.ascii "WM_CTLCOLORLISTBOX 0x0134\0"
	.byte	0x1
	.uleb128 0x446
	.ascii "WM_CTLCOLORBTN 0x0135\0"
	.byte	0x1
	.uleb128 0x447
	.ascii "WM_CTLCOLORDLG 0x0136\0"
	.byte	0x1
	.uleb128 0x448
	.ascii "WM_CTLCOLORSCROLLBAR 0x0137\0"
	.byte	0x1
	.uleb128 0x449
	.ascii "WM_CTLCOLORSTATIC 0x0138\0"
	.byte	0x1
	.uleb128 0x44a
	.ascii "MN_GETHMENU 0x01E1\0"
	.byte	0x1
	.uleb128 0x44c
	.ascii "WM_MOUSEFIRST 0x0200\0"
	.byte	0x1
	.uleb128 0x44d
	.ascii "WM_MOUSEMOVE 0x0200\0"
	.byte	0x1
	.uleb128 0x44e
	.ascii "WM_LBUTTONDOWN 0x0201\0"
	.byte	0x1
	.uleb128 0x44f
	.ascii "WM_LBUTTONUP 0x0202\0"
	.byte	0x1
	.uleb128 0x450
	.ascii "WM_LBUTTONDBLCLK 0x0203\0"
	.byte	0x1
	.uleb128 0x451
	.ascii "WM_RBUTTONDOWN 0x0204\0"
	.byte	0x1
	.uleb128 0x452
	.ascii "WM_RBUTTONUP 0x0205\0"
	.byte	0x1
	.uleb128 0x453
	.ascii "WM_RBUTTONDBLCLK 0x0206\0"
	.byte	0x1
	.uleb128 0x454
	.ascii "WM_MBUTTONDOWN 0x0207\0"
	.byte	0x1
	.uleb128 0x455
	.ascii "WM_MBUTTONUP 0x0208\0"
	.byte	0x1
	.uleb128 0x456
	.ascii "WM_MBUTTONDBLCLK 0x0209\0"
	.byte	0x1
	.uleb128 0x457
	.ascii "WM_MOUSEWHEEL 0x020A\0"
	.byte	0x1
	.uleb128 0x458
	.ascii "WM_XBUTTONDOWN 0x020B\0"
	.byte	0x1
	.uleb128 0x459
	.ascii "WM_XBUTTONUP 0x020C\0"
	.byte	0x1
	.uleb128 0x45a
	.ascii "WM_XBUTTONDBLCLK 0x020D\0"
	.byte	0x1
	.uleb128 0x45f
	.ascii "WM_MOUSELAST 0x020D\0"
	.byte	0x1
	.uleb128 0x462
	.ascii "WHEEL_DELTA 120\0"
	.byte	0x1
	.uleb128 0x463
	.ascii "GET_WHEEL_DELTA_WPARAM(wParam) ((short)HIWORD(wParam))\0"
	.byte	0x1
	.uleb128 0x465
	.ascii "WHEEL_PAGESCROLL (UINT_MAX)\0"
	.byte	0x1
	.uleb128 0x467
	.ascii "GET_KEYSTATE_WPARAM(wParam) (LOWORD(wParam))\0"
	.byte	0x1
	.uleb128 0x468
	.ascii "GET_NCHITTEST_WPARAM(wParam) ((short)LOWORD(wParam))\0"
	.byte	0x1
	.uleb128 0x469
	.ascii "GET_XBUTTON_WPARAM(wParam) (HIWORD(wParam))\0"
	.byte	0x1
	.uleb128 0x46b
	.ascii "XBUTTON1 0x0001\0"
	.byte	0x1
	.uleb128 0x46c
	.ascii "XBUTTON2 0x0002\0"
	.byte	0x1
	.uleb128 0x46e
	.ascii "WM_PARENTNOTIFY 0x0210\0"
	.byte	0x1
	.uleb128 0x46f
	.ascii "WM_ENTERMENULOOP 0x0211\0"
	.byte	0x1
	.uleb128 0x470
	.ascii "WM_EXITMENULOOP 0x0212\0"
	.byte	0x1
	.uleb128 0x472
	.ascii "WM_NEXTMENU 0x0213\0"
	.byte	0x1
	.uleb128 0x473
	.ascii "WM_SIZING 0x0214\0"
	.byte	0x1
	.uleb128 0x474
	.ascii "WM_CAPTURECHANGED 0x0215\0"
	.byte	0x1
	.uleb128 0x475
	.ascii "WM_MOVING 0x0216\0"
	.byte	0x1
	.uleb128 0x477
	.ascii "WM_POWERBROADCAST 0x0218\0"
	.byte	0x1
	.uleb128 0x47a
	.ascii "PBT_APMQUERYSUSPEND 0x0000\0"
	.byte	0x1
	.uleb128 0x47b
	.ascii "PBT_APMQUERYSTANDBY 0x0001\0"
	.byte	0x1
	.uleb128 0x47d
	.ascii "PBT_APMQUERYSUSPENDFAILED 0x0002\0"
	.byte	0x1
	.uleb128 0x47e
	.ascii "PBT_APMQUERYSTANDBYFAILED 0x0003\0"
	.byte	0x1
	.uleb128 0x480
	.ascii "PBT_APMSUSPEND 0x0004\0"
	.byte	0x1
	.uleb128 0x481
	.ascii "PBT_APMSTANDBY 0x0005\0"
	.byte	0x1
	.uleb128 0x483
	.ascii "PBT_APMRESUMECRITICAL 0x0006\0"
	.byte	0x1
	.uleb128 0x484
	.ascii "PBT_APMRESUMESUSPEND 0x0007\0"
	.byte	0x1
	.uleb128 0x485
	.ascii "PBT_APMRESUMESTANDBY 0x0008\0"
	.byte	0x1
	.uleb128 0x487
	.ascii "PBTF_APMRESUMEFROMFAILURE 0x00000001\0"
	.byte	0x1
	.uleb128 0x489
	.ascii "PBT_APMBATTERYLOW 0x0009\0"
	.byte	0x1
	.uleb128 0x48a
	.ascii "PBT_APMPOWERSTATUSCHANGE 0x000A\0"
	.byte	0x1
	.uleb128 0x48c
	.ascii "PBT_APMOEMEVENT 0x000B\0"
	.byte	0x1
	.uleb128 0x48d
	.ascii "PBT_APMRESUMEAUTOMATIC 0x0012\0"
	.byte	0x1
	.uleb128 0x491
	.ascii "PBT_POWERSETTINGCHANGE 32787\0"
	.byte	0x1
	.uleb128 0x494
	.ascii "WM_DEVICECHANGE 0x0219\0"
	.byte	0x1
	.uleb128 0x496
	.ascii "WM_MDICREATE 0x0220\0"
	.byte	0x1
	.uleb128 0x497
	.ascii "WM_MDIDESTROY 0x0221\0"
	.byte	0x1
	.uleb128 0x498
	.ascii "WM_MDIACTIVATE 0x0222\0"
	.byte	0x1
	.uleb128 0x499
	.ascii "WM_MDIRESTORE 0x0223\0"
	.byte	0x1
	.uleb128 0x49a
	.ascii "WM_MDINEXT 0x0224\0"
	.byte	0x1
	.uleb128 0x49b
	.ascii "WM_MDIMAXIMIZE 0x0225\0"
	.byte	0x1
	.uleb128 0x49c
	.ascii "WM_MDITILE 0x0226\0"
	.byte	0x1
	.uleb128 0x49d
	.ascii "WM_MDICASCADE 0x0227\0"
	.byte	0x1
	.uleb128 0x49e
	.ascii "WM_MDIICONARRANGE 0x0228\0"
	.byte	0x1
	.uleb128 0x49f
	.ascii "WM_MDIGETACTIVE 0x0229\0"
	.byte	0x1
	.uleb128 0x4a1
	.ascii "WM_MDISETMENU 0x0230\0"
	.byte	0x1
	.uleb128 0x4a2
	.ascii "WM_ENTERSIZEMOVE 0x0231\0"
	.byte	0x1
	.uleb128 0x4a3
	.ascii "WM_EXITSIZEMOVE 0x0232\0"
	.byte	0x1
	.uleb128 0x4a4
	.ascii "WM_DROPFILES 0x0233\0"
	.byte	0x1
	.uleb128 0x4a5
	.ascii "WM_MDIREFRESHMENU 0x0234\0"
	.byte	0x1
	.uleb128 0x4a7
	.ascii "WM_IME_SETCONTEXT 0x0281\0"
	.byte	0x1
	.uleb128 0x4a8
	.ascii "WM_IME_NOTIFY 0x0282\0"
	.byte	0x1
	.uleb128 0x4a9
	.ascii "WM_IME_CONTROL 0x0283\0"
	.byte	0x1
	.uleb128 0x4aa
	.ascii "WM_IME_COMPOSITIONFULL 0x0284\0"
	.byte	0x1
	.uleb128 0x4ab
	.ascii "WM_IME_SELECT 0x0285\0"
	.byte	0x1
	.uleb128 0x4ac
	.ascii "WM_IME_CHAR 0x0286\0"
	.byte	0x1
	.uleb128 0x4ad
	.ascii "WM_IME_REQUEST 0x0288\0"
	.byte	0x1
	.uleb128 0x4ae
	.ascii "WM_IME_KEYDOWN 0x0290\0"
	.byte	0x1
	.uleb128 0x4af
	.ascii "WM_IME_KEYUP 0x0291\0"
	.byte	0x1
	.uleb128 0x4b1
	.ascii "WM_MOUSEHOVER 0x02A1\0"
	.byte	0x1
	.uleb128 0x4b2
	.ascii "WM_MOUSELEAVE 0x02A3\0"
	.byte	0x1
	.uleb128 0x4b3
	.ascii "WM_NCMOUSEHOVER 0x02A0\0"
	.byte	0x1
	.uleb128 0x4b4
	.ascii "WM_NCMOUSELEAVE 0x02A2\0"
	.byte	0x1
	.uleb128 0x4b5
	.ascii "WM_WTSSESSION_CHANGE 0x02B1\0"
	.byte	0x1
	.uleb128 0x4b6
	.ascii "WM_TABLET_FIRST 0x02c0\0"
	.byte	0x1
	.uleb128 0x4b7
	.ascii "WM_TABLET_LAST 0x02df\0"
	.byte	0x1
	.uleb128 0x4b8
	.ascii "WM_CUT 0x0300\0"
	.byte	0x1
	.uleb128 0x4b9
	.ascii "WM_COPY 0x0301\0"
	.byte	0x1
	.uleb128 0x4ba
	.ascii "WM_PASTE 0x0302\0"
	.byte	0x1
	.uleb128 0x4bb
	.ascii "WM_CLEAR 0x0303\0"
	.byte	0x1
	.uleb128 0x4bc
	.ascii "WM_UNDO 0x0304\0"
	.byte	0x1
	.uleb128 0x4bd
	.ascii "WM_RENDERFORMAT 0x0305\0"
	.byte	0x1
	.uleb128 0x4be
	.ascii "WM_RENDERALLFORMATS 0x0306\0"
	.byte	0x1
	.uleb128 0x4bf
	.ascii "WM_DESTROYCLIPBOARD 0x0307\0"
	.byte	0x1
	.uleb128 0x4c0
	.ascii "WM_DRAWCLIPBOARD 0x0308\0"
	.byte	0x1
	.uleb128 0x4c1
	.ascii "WM_PAINTCLIPBOARD 0x0309\0"
	.byte	0x1
	.uleb128 0x4c2
	.ascii "WM_VSCROLLCLIPBOARD 0x030A\0"
	.byte	0x1
	.uleb128 0x4c3
	.ascii "WM_SIZECLIPBOARD 0x030B\0"
	.byte	0x1
	.uleb128 0x4c4
	.ascii "WM_ASKCBFORMATNAME 0x030C\0"
	.byte	0x1
	.uleb128 0x4c5
	.ascii "WM_CHANGECBCHAIN 0x030D\0"
	.byte	0x1
	.uleb128 0x4c6
	.ascii "WM_HSCROLLCLIPBOARD 0x030E\0"
	.byte	0x1
	.uleb128 0x4c7
	.ascii "WM_QUERYNEWPALETTE 0x030F\0"
	.byte	0x1
	.uleb128 0x4c8
	.ascii "WM_PALETTEISCHANGING 0x0310\0"
	.byte	0x1
	.uleb128 0x4c9
	.ascii "WM_PALETTECHANGED 0x0311\0"
	.byte	0x1
	.uleb128 0x4ca
	.ascii "WM_HOTKEY 0x0312\0"
	.byte	0x1
	.uleb128 0x4cb
	.ascii "WM_PRINT 0x0317\0"
	.byte	0x1
	.uleb128 0x4cc
	.ascii "WM_PRINTCLIENT 0x0318\0"
	.byte	0x1
	.uleb128 0x4cd
	.ascii "WM_APPCOMMAND 0x0319\0"
	.byte	0x1
	.uleb128 0x4ce
	.ascii "WM_THEMECHANGED 0x031A\0"
	.byte	0x1
	.uleb128 0x4cf
	.ascii "WM_HANDHELDFIRST 0x0358\0"
	.byte	0x1
	.uleb128 0x4d0
	.ascii "WM_HANDHELDLAST 0x035F\0"
	.byte	0x1
	.uleb128 0x4d1
	.ascii "WM_AFXFIRST 0x0360\0"
	.byte	0x1
	.uleb128 0x4d2
	.ascii "WM_AFXLAST 0x037F\0"
	.byte	0x1
	.uleb128 0x4d3
	.ascii "WM_PENWINFIRST 0x0380\0"
	.byte	0x1
	.uleb128 0x4d4
	.ascii "WM_PENWINLAST 0x038F\0"
	.byte	0x1
	.uleb128 0x4d5
	.ascii "WM_APP 0x8000\0"
	.byte	0x1
	.uleb128 0x4d6
	.ascii "WM_USER 0x0400\0"
	.byte	0x1
	.uleb128 0x4d8
	.ascii "WMSZ_LEFT 1\0"
	.byte	0x1
	.uleb128 0x4d9
	.ascii "WMSZ_RIGHT 2\0"
	.byte	0x1
	.uleb128 0x4da
	.ascii "WMSZ_TOP 3\0"
	.byte	0x1
	.uleb128 0x4db
	.ascii "WMSZ_TOPLEFT 4\0"
	.byte	0x1
	.uleb128 0x4dc
	.ascii "WMSZ_TOPRIGHT 5\0"
	.byte	0x1
	.uleb128 0x4dd
	.ascii "WMSZ_BOTTOM 6\0"
	.byte	0x1
	.uleb128 0x4de
	.ascii "WMSZ_BOTTOMLEFT 7\0"
	.byte	0x1
	.uleb128 0x4df
	.ascii "WMSZ_BOTTOMRIGHT 8\0"
	.byte	0x1
	.uleb128 0x4e3
	.ascii "HTERROR (-2)\0"
	.byte	0x1
	.uleb128 0x4e4
	.ascii "HTTRANSPARENT (-1)\0"
	.byte	0x1
	.uleb128 0x4e5
	.ascii "HTNOWHERE 0\0"
	.byte	0x1
	.uleb128 0x4e6
	.ascii "HTCLIENT 1\0"
	.byte	0x1
	.uleb128 0x4e7
	.ascii "HTCAPTION 2\0"
	.byte	0x1
	.uleb128 0x4e8
	.ascii "HTSYSMENU 3\0"
	.byte	0x1
	.uleb128 0x4e9
	.ascii "HTGROWBOX 4\0"
	.byte	0x1
	.uleb128 0x4ea
	.ascii "HTSIZE HTGROWBOX\0"
	.byte	0x1
	.uleb128 0x4eb
	.ascii "HTMENU 5\0"
	.byte	0x1
	.uleb128 0x4ec
	.ascii "HTHSCROLL 6\0"
	.byte	0x1
	.uleb128 0x4ed
	.ascii "HTVSCROLL 7\0"
	.byte	0x1
	.uleb128 0x4ee
	.ascii "HTMINBUTTON 8\0"
	.byte	0x1
	.uleb128 0x4ef
	.ascii "HTMAXBUTTON 9\0"
	.byte	0x1
	.uleb128 0x4f0
	.ascii "HTLEFT 10\0"
	.byte	0x1
	.uleb128 0x4f1
	.ascii "HTRIGHT 11\0"
	.byte	0x1
	.uleb128 0x4f2
	.ascii "HTTOP 12\0"
	.byte	0x1
	.uleb128 0x4f3
	.ascii "HTTOPLEFT 13\0"
	.byte	0x1
	.uleb128 0x4f4
	.ascii "HTTOPRIGHT 14\0"
	.byte	0x1
	.uleb128 0x4f5
	.ascii "HTBOTTOM 15\0"
	.byte	0x1
	.uleb128 0x4f6
	.ascii "HTBOTTOMLEFT 16\0"
	.byte	0x1
	.uleb128 0x4f7
	.ascii "HTBOTTOMRIGHT 17\0"
	.byte	0x1
	.uleb128 0x4f8
	.ascii "HTBORDER 18\0"
	.byte	0x1
	.uleb128 0x4f9
	.ascii "HTREDUCE HTMINBUTTON\0"
	.byte	0x1
	.uleb128 0x4fa
	.ascii "HTZOOM HTMAXBUTTON\0"
	.byte	0x1
	.uleb128 0x4fb
	.ascii "HTSIZEFIRST HTLEFT\0"
	.byte	0x1
	.uleb128 0x4fc
	.ascii "HTSIZELAST HTBOTTOMRIGHT\0"
	.byte	0x1
	.uleb128 0x4fd
	.ascii "HTOBJECT 19\0"
	.byte	0x1
	.uleb128 0x4fe
	.ascii "HTCLOSE 20\0"
	.byte	0x1
	.uleb128 0x4ff
	.ascii "HTHELP 21\0"
	.byte	0x1
	.uleb128 0x501
	.ascii "SMTO_NORMAL 0x0000\0"
	.byte	0x1
	.uleb128 0x502
	.ascii "SMTO_BLOCK 0x0001\0"
	.byte	0x1
	.uleb128 0x503
	.ascii "SMTO_ABORTIFHUNG 0x0002\0"
	.byte	0x1
	.uleb128 0x504
	.ascii "SMTO_NOTIMEOUTIFNOTHUNG 0x0008\0"
	.byte	0x1
	.uleb128 0x507
	.ascii "MA_ACTIVATE 1\0"
	.byte	0x1
	.uleb128 0x508
	.ascii "MA_ACTIVATEANDEAT 2\0"
	.byte	0x1
	.uleb128 0x509
	.ascii "MA_NOACTIVATE 3\0"
	.byte	0x1
	.uleb128 0x50a
	.ascii "MA_NOACTIVATEANDEAT 4\0"
	.byte	0x1
	.uleb128 0x50c
	.ascii "ICON_SMALL 0\0"
	.byte	0x1
	.uleb128 0x50d
	.ascii "ICON_BIG 1\0"
	.byte	0x1
	.uleb128 0x50e
	.ascii "ICON_SMALL2 2\0"
	.byte	0x1
	.uleb128 0x510
	.ascii "RegisterWindowMessage __MINGW_NAME_AW(RegisterWindowMessage)\0"
	.byte	0x1
	.uleb128 0x515
	.ascii "SIZE_RESTORED 0\0"
	.byte	0x1
	.uleb128 0x516
	.ascii "SIZE_MINIMIZED 1\0"
	.byte	0x1
	.uleb128 0x517
	.ascii "SIZE_MAXIMIZED 2\0"
	.byte	0x1
	.uleb128 0x518
	.ascii "SIZE_MAXSHOW 3\0"
	.byte	0x1
	.uleb128 0x519
	.ascii "SIZE_MAXHIDE 4\0"
	.byte	0x1
	.uleb128 0x51b
	.ascii "SIZENORMAL SIZE_RESTORED\0"
	.byte	0x1
	.uleb128 0x51c
	.ascii "SIZEICONIC SIZE_MINIMIZED\0"
	.byte	0x1
	.uleb128 0x51d
	.ascii "SIZEFULLSCREEN SIZE_MAXIMIZED\0"
	.byte	0x1
	.uleb128 0x51e
	.ascii "SIZEZOOMSHOW SIZE_MAXSHOW\0"
	.byte	0x1
	.uleb128 0x51f
	.ascii "SIZEZOOMHIDE SIZE_MAXHIDE\0"
	.byte	0x1
	.uleb128 0x530
	.ascii "WVR_ALIGNTOP 0x0010\0"
	.byte	0x1
	.uleb128 0x531
	.ascii "WVR_ALIGNLEFT 0x0020\0"
	.byte	0x1
	.uleb128 0x532
	.ascii "WVR_ALIGNBOTTOM 0x0040\0"
	.byte	0x1
	.uleb128 0x533
	.ascii "WVR_ALIGNRIGHT 0x0080\0"
	.byte	0x1
	.uleb128 0x534
	.ascii "WVR_HREDRAW 0x0100\0"
	.byte	0x1
	.uleb128 0x535
	.ascii "WVR_VREDRAW 0x0200\0"
	.byte	0x1
	.uleb128 0x536
	.ascii "WVR_REDRAW (WVR_HREDRAW | WVR_VREDRAW)\0"
	.byte	0x1
	.uleb128 0x537
	.ascii "WVR_VALIDRECTS 0x0400\0"
	.byte	0x1
	.uleb128 0x53b
	.ascii "MK_LBUTTON 0x0001\0"
	.byte	0x1
	.uleb128 0x53c
	.ascii "MK_RBUTTON 0x0002\0"
	.byte	0x1
	.uleb128 0x53d
	.ascii "MK_SHIFT 0x0004\0"
	.byte	0x1
	.uleb128 0x53e
	.ascii "MK_CONTROL 0x0008\0"
	.byte	0x1
	.uleb128 0x53f
	.ascii "MK_MBUTTON 0x0010\0"
	.byte	0x1
	.uleb128 0x540
	.ascii "MK_XBUTTON1 0x0020\0"
	.byte	0x1
	.uleb128 0x541
	.ascii "MK_XBUTTON2 0x0040\0"
	.byte	0x1
	.uleb128 0x545
	.ascii "TME_HOVER 0x00000001\0"
	.byte	0x1
	.uleb128 0x546
	.ascii "TME_LEAVE 0x00000002\0"
	.byte	0x1
	.uleb128 0x547
	.ascii "TME_NONCLIENT 0x00000010\0"
	.byte	0x1
	.uleb128 0x548
	.ascii "TME_QUERY 0x40000000\0"
	.byte	0x1
	.uleb128 0x549
	.ascii "TME_CANCEL 0x80000000\0"
	.byte	0x1
	.uleb128 0x54b
	.ascii "HOVER_DEFAULT 0xFFFFFFFF\0"
	.byte	0x1
	.uleb128 0x55a
	.ascii "WS_OVERLAPPED __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x55b
	.ascii "WS_POPUP __MSABI_LONG(0x80000000)\0"
	.byte	0x1
	.uleb128 0x55c
	.ascii "WS_CHILD __MSABI_LONG(0x40000000)\0"
	.byte	0x1
	.uleb128 0x55d
	.ascii "WS_MINIMIZE __MSABI_LONG(0x20000000)\0"
	.byte	0x1
	.uleb128 0x55e
	.ascii "WS_VISIBLE __MSABI_LONG(0x10000000)\0"
	.byte	0x1
	.uleb128 0x55f
	.ascii "WS_DISABLED __MSABI_LONG(0x08000000)\0"
	.byte	0x1
	.uleb128 0x560
	.ascii "WS_CLIPSIBLINGS __MSABI_LONG(0x04000000)\0"
	.byte	0x1
	.uleb128 0x561
	.ascii "WS_CLIPCHILDREN __MSABI_LONG(0x02000000)\0"
	.byte	0x1
	.uleb128 0x562
	.ascii "WS_MAXIMIZE __MSABI_LONG(0x01000000)\0"
	.byte	0x1
	.uleb128 0x563
	.ascii "WS_CAPTION __MSABI_LONG(0x00C00000)\0"
	.byte	0x1
	.uleb128 0x564
	.ascii "WS_BORDER __MSABI_LONG(0x00800000)\0"
	.byte	0x1
	.uleb128 0x565
	.ascii "WS_DLGFRAME __MSABI_LONG(0x00400000)\0"
	.byte	0x1
	.uleb128 0x566
	.ascii "WS_VSCROLL __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0x567
	.ascii "WS_HSCROLL __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x568
	.ascii "WS_SYSMENU __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x569
	.ascii "WS_THICKFRAME __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x56a
	.ascii "WS_GROUP __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x56b
	.ascii "WS_TABSTOP __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x56c
	.ascii "WS_MINIMIZEBOX __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x56d
	.ascii "WS_MAXIMIZEBOX __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x56e
	.ascii "WS_TILED WS_OVERLAPPED\0"
	.byte	0x1
	.uleb128 0x56f
	.ascii "WS_ICONIC WS_MINIMIZE\0"
	.byte	0x1
	.uleb128 0x570
	.ascii "WS_SIZEBOX WS_THICKFRAME\0"
	.byte	0x1
	.uleb128 0x571
	.ascii "WS_TILEDWINDOW WS_OVERLAPPEDWINDOW\0"
	.byte	0x1
	.uleb128 0x572
	.ascii "WS_OVERLAPPEDWINDOW (WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX)\0"
	.byte	0x1
	.uleb128 0x573
	.ascii "WS_POPUPWINDOW (WS_POPUP | WS_BORDER | WS_SYSMENU)\0"
	.byte	0x1
	.uleb128 0x574
	.ascii "WS_CHILDWINDOW (WS_CHILD)\0"
	.byte	0x1
	.uleb128 0x576
	.ascii "WS_EX_DLGMODALFRAME __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x577
	.ascii "WS_EX_NOPARENTNOTIFY __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x578
	.ascii "WS_EX_TOPMOST __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x579
	.ascii "WS_EX_ACCEPTFILES __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0x57a
	.ascii "WS_EX_TRANSPARENT __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0x57b
	.ascii "WS_EX_MDICHILD __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0x57c
	.ascii "WS_EX_TOOLWINDOW __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0x57d
	.ascii "WS_EX_WINDOWEDGE __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x57e
	.ascii "WS_EX_CLIENTEDGE __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x57f
	.ascii "WS_EX_CONTEXTHELP __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0x580
	.ascii "WS_EX_RIGHT __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0x581
	.ascii "WS_EX_LEFT __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x582
	.ascii "WS_EX_RTLREADING __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0x583
	.ascii "WS_EX_LTRREADING __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x584
	.ascii "WS_EX_LEFTSCROLLBAR __MSABI_LONG(0x00004000)\0"
	.byte	0x1
	.uleb128 0x585
	.ascii "WS_EX_RIGHTSCROLLBAR __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x586
	.ascii "WS_EX_CONTROLPARENT __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x587
	.ascii "WS_EX_STATICEDGE __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x588
	.ascii "WS_EX_APPWINDOW __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x589
	.ascii "WS_EX_OVERLAPPEDWINDOW (WS_EX_WINDOWEDGE | WS_EX_CLIENTEDGE)\0"
	.byte	0x1
	.uleb128 0x58a
	.ascii "WS_EX_PALETTEWINDOW (WS_EX_WINDOWEDGE | WS_EX_TOOLWINDOW | WS_EX_TOPMOST)\0"
	.byte	0x1
	.uleb128 0x58b
	.ascii "WS_EX_LAYERED 0x00080000\0"
	.byte	0x1
	.uleb128 0x58c
	.ascii "WS_EX_NOINHERITLAYOUT __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x58d
	.ascii "WS_EX_LAYOUTRTL __MSABI_LONG(0x00400000)\0"
	.byte	0x1
	.uleb128 0x58e
	.ascii "WS_EX_COMPOSITED __MSABI_LONG(0x02000000)\0"
	.byte	0x1
	.uleb128 0x58f
	.ascii "WS_EX_NOACTIVATE __MSABI_LONG(0x08000000)\0"
	.byte	0x1
	.uleb128 0x591
	.ascii "CS_VREDRAW 0x0001\0"
	.byte	0x1
	.uleb128 0x592
	.ascii "CS_HREDRAW 0x0002\0"
	.byte	0x1
	.uleb128 0x593
	.ascii "CS_DBLCLKS 0x0008\0"
	.byte	0x1
	.uleb128 0x594
	.ascii "CS_OWNDC 0x0020\0"
	.byte	0x1
	.uleb128 0x595
	.ascii "CS_CLASSDC 0x0040\0"
	.byte	0x1
	.uleb128 0x596
	.ascii "CS_PARENTDC 0x0080\0"
	.byte	0x1
	.uleb128 0x597
	.ascii "CS_NOCLOSE 0x0200\0"
	.byte	0x1
	.uleb128 0x598
	.ascii "CS_SAVEBITS 0x0800\0"
	.byte	0x1
	.uleb128 0x599
	.ascii "CS_BYTEALIGNCLIENT 0x1000\0"
	.byte	0x1
	.uleb128 0x59a
	.ascii "CS_BYTEALIGNWINDOW 0x2000\0"
	.byte	0x1
	.uleb128 0x59b
	.ascii "CS_GLOBALCLASS 0x4000\0"
	.byte	0x1
	.uleb128 0x59c
	.ascii "CS_IME 0x00010000\0"
	.byte	0x1
	.uleb128 0x59d
	.ascii "CS_DROPSHADOW 0x00020000\0"
	.byte	0x1
	.uleb128 0x5a0
	.ascii "PRF_CHECKVISIBLE __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x5a1
	.ascii "PRF_NONCLIENT __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x5a2
	.ascii "PRF_CLIENT __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x5a3
	.ascii "PRF_ERASEBKGND __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x5a4
	.ascii "PRF_CHILDREN __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0x5a5
	.ascii "PRF_OWNED __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0x5a7
	.ascii "BDR_RAISEDOUTER 0x0001\0"
	.byte	0x1
	.uleb128 0x5a8
	.ascii "BDR_SUNKENOUTER 0x0002\0"
	.byte	0x1
	.uleb128 0x5a9
	.ascii "BDR_RAISEDINNER 0x0004\0"
	.byte	0x1
	.uleb128 0x5aa
	.ascii "BDR_SUNKENINNER 0x0008\0"
	.byte	0x1
	.uleb128 0x5ac
	.ascii "BDR_OUTER (BDR_RAISEDOUTER | BDR_SUNKENOUTER)\0"
	.byte	0x1
	.uleb128 0x5ad
	.ascii "BDR_INNER (BDR_RAISEDINNER | BDR_SUNKENINNER)\0"
	.byte	0x1
	.uleb128 0x5ae
	.ascii "BDR_RAISED (BDR_RAISEDOUTER | BDR_RAISEDINNER)\0"
	.byte	0x1
	.uleb128 0x5af
	.ascii "BDR_SUNKEN (BDR_SUNKENOUTER | BDR_SUNKENINNER)\0"
	.byte	0x1
	.uleb128 0x5b1
	.ascii "EDGE_RAISED (BDR_RAISEDOUTER | BDR_RAISEDINNER)\0"
	.byte	0x1
	.uleb128 0x5b2
	.ascii "EDGE_SUNKEN (BDR_SUNKENOUTER | BDR_SUNKENINNER)\0"
	.byte	0x1
	.uleb128 0x5b3
	.ascii "EDGE_ETCHED (BDR_SUNKENOUTER | BDR_RAISEDINNER)\0"
	.byte	0x1
	.uleb128 0x5b4
	.ascii "EDGE_BUMP (BDR_RAISEDOUTER | BDR_SUNKENINNER)\0"
	.byte	0x1
	.uleb128 0x5b6
	.ascii "BF_LEFT 0x0001\0"
	.byte	0x1
	.uleb128 0x5b7
	.ascii "BF_TOP 0x0002\0"
	.byte	0x1
	.uleb128 0x5b8
	.ascii "BF_RIGHT 0x0004\0"
	.byte	0x1
	.uleb128 0x5b9
	.ascii "BF_BOTTOM 0x0008\0"
	.byte	0x1
	.uleb128 0x5bb
	.ascii "BF_TOPLEFT (BF_TOP | BF_LEFT)\0"
	.byte	0x1
	.uleb128 0x5bc
	.ascii "BF_TOPRIGHT (BF_TOP | BF_RIGHT)\0"
	.byte	0x1
	.uleb128 0x5bd
	.ascii "BF_BOTTOMLEFT (BF_BOTTOM | BF_LEFT)\0"
	.byte	0x1
	.uleb128 0x5be
	.ascii "BF_BOTTOMRIGHT (BF_BOTTOM | BF_RIGHT)\0"
	.byte	0x1
	.uleb128 0x5bf
	.ascii "BF_RECT (BF_LEFT | BF_TOP | BF_RIGHT | BF_BOTTOM)\0"
	.byte	0x1
	.uleb128 0x5c1
	.ascii "BF_DIAGONAL 0x0010\0"
	.byte	0x1
	.uleb128 0x5c3
	.ascii "BF_DIAGONAL_ENDTOPRIGHT (BF_DIAGONAL | BF_TOP | BF_RIGHT)\0"
	.byte	0x1
	.uleb128 0x5c4
	.ascii "BF_DIAGONAL_ENDTOPLEFT (BF_DIAGONAL | BF_TOP | BF_LEFT)\0"
	.byte	0x1
	.uleb128 0x5c5
	.ascii "BF_DIAGONAL_ENDBOTTOMLEFT (BF_DIAGONAL | BF_BOTTOM | BF_LEFT)\0"
	.byte	0x1
	.uleb128 0x5c6
	.ascii "BF_DIAGONAL_ENDBOTTOMRIGHT (BF_DIAGONAL | BF_BOTTOM | BF_RIGHT)\0"
	.byte	0x1
	.uleb128 0x5c8
	.ascii "BF_MIDDLE 0x0800\0"
	.byte	0x1
	.uleb128 0x5c9
	.ascii "BF_SOFT 0x1000\0"
	.byte	0x1
	.uleb128 0x5ca
	.ascii "BF_ADJUST 0x2000\0"
	.byte	0x1
	.uleb128 0x5cb
	.ascii "BF_FLAT 0x4000\0"
	.byte	0x1
	.uleb128 0x5cc
	.ascii "BF_MONO 0x8000\0"
	.byte	0x1
	.uleb128 0x5d0
	.ascii "DFC_CAPTION 1\0"
	.byte	0x1
	.uleb128 0x5d1
	.ascii "DFC_MENU 2\0"
	.byte	0x1
	.uleb128 0x5d2
	.ascii "DFC_SCROLL 3\0"
	.byte	0x1
	.uleb128 0x5d3
	.ascii "DFC_BUTTON 4\0"
	.byte	0x1
	.uleb128 0x5d4
	.ascii "DFC_POPUPMENU 5\0"
	.byte	0x1
	.uleb128 0x5d6
	.ascii "DFCS_CAPTIONCLOSE 0x0000\0"
	.byte	0x1
	.uleb128 0x5d7
	.ascii "DFCS_CAPTIONMIN 0x0001\0"
	.byte	0x1
	.uleb128 0x5d8
	.ascii "DFCS_CAPTIONMAX 0x0002\0"
	.byte	0x1
	.uleb128 0x5d9
	.ascii "DFCS_CAPTIONRESTORE 0x0003\0"
	.byte	0x1
	.uleb128 0x5da
	.ascii "DFCS_CAPTIONHELP 0x0004\0"
	.byte	0x1
	.uleb128 0x5dc
	.ascii "DFCS_MENUARROW 0x0000\0"
	.byte	0x1
	.uleb128 0x5dd
	.ascii "DFCS_MENUCHECK 0x0001\0"
	.byte	0x1
	.uleb128 0x5de
	.ascii "DFCS_MENUBULLET 0x0002\0"
	.byte	0x1
	.uleb128 0x5df
	.ascii "DFCS_MENUARROWRIGHT 0x0004\0"
	.byte	0x1
	.uleb128 0x5e0
	.ascii "DFCS_SCROLLUP 0x0000\0"
	.byte	0x1
	.uleb128 0x5e1
	.ascii "DFCS_SCROLLDOWN 0x0001\0"
	.byte	0x1
	.uleb128 0x5e2
	.ascii "DFCS_SCROLLLEFT 0x0002\0"
	.byte	0x1
	.uleb128 0x5e3
	.ascii "DFCS_SCROLLRIGHT 0x0003\0"
	.byte	0x1
	.uleb128 0x5e4
	.ascii "DFCS_SCROLLCOMBOBOX 0x0005\0"
	.byte	0x1
	.uleb128 0x5e5
	.ascii "DFCS_SCROLLSIZEGRIP 0x0008\0"
	.byte	0x1
	.uleb128 0x5e6
	.ascii "DFCS_SCROLLSIZEGRIPRIGHT 0x0010\0"
	.byte	0x1
	.uleb128 0x5e8
	.ascii "DFCS_BUTTONCHECK 0x0000\0"
	.byte	0x1
	.uleb128 0x5e9
	.ascii "DFCS_BUTTONRADIOIMAGE 0x0001\0"
	.byte	0x1
	.uleb128 0x5ea
	.ascii "DFCS_BUTTONRADIOMASK 0x0002\0"
	.byte	0x1
	.uleb128 0x5eb
	.ascii "DFCS_BUTTONRADIO 0x0004\0"
	.byte	0x1
	.uleb128 0x5ec
	.ascii "DFCS_BUTTON3STATE 0x0008\0"
	.byte	0x1
	.uleb128 0x5ed
	.ascii "DFCS_BUTTONPUSH 0x0010\0"
	.byte	0x1
	.uleb128 0x5ef
	.ascii "DFCS_INACTIVE 0x0100\0"
	.byte	0x1
	.uleb128 0x5f0
	.ascii "DFCS_PUSHED 0x0200\0"
	.byte	0x1
	.uleb128 0x5f1
	.ascii "DFCS_CHECKED 0x0400\0"
	.byte	0x1
	.uleb128 0x5f3
	.ascii "DFCS_TRANSPARENT 0x0800\0"
	.byte	0x1
	.uleb128 0x5f4
	.ascii "DFCS_HOT 0x1000\0"
	.byte	0x1
	.uleb128 0x5f6
	.ascii "DFCS_ADJUSTRECT 0x2000\0"
	.byte	0x1
	.uleb128 0x5f7
	.ascii "DFCS_FLAT 0x4000\0"
	.byte	0x1
	.uleb128 0x5f8
	.ascii "DFCS_MONO 0x8000\0"
	.byte	0x1
	.uleb128 0x5fc
	.ascii "DC_ACTIVE 0x0001\0"
	.byte	0x1
	.uleb128 0x5fd
	.ascii "DC_SMALLCAP 0x0002\0"
	.byte	0x1
	.uleb128 0x5fe
	.ascii "DC_ICON 0x0004\0"
	.byte	0x1
	.uleb128 0x5ff
	.ascii "DC_TEXT 0x0008\0"
	.byte	0x1
	.uleb128 0x600
	.ascii "DC_INBUTTON 0x0010\0"
	.byte	0x1
	.uleb128 0x601
	.ascii "DC_GRADIENT 0x0020\0"
	.byte	0x1
	.uleb128 0x602
	.ascii "DC_BUTTONS 0x1000\0"
	.byte	0x1
	.uleb128 0x606
	.ascii "IDANI_OPEN 1\0"
	.byte	0x1
	.uleb128 0x607
	.ascii "IDANI_CAPTION 3\0"
	.byte	0x1
	.uleb128 0x60d
	.ascii "CF_TEXT 1\0"
	.byte	0x1
	.uleb128 0x60e
	.ascii "CF_BITMAP 2\0"
	.byte	0x1
	.uleb128 0x60f
	.ascii "CF_METAFILEPICT 3\0"
	.byte	0x1
	.uleb128 0x610
	.ascii "CF_SYLK 4\0"
	.byte	0x1
	.uleb128 0x611
	.ascii "CF_DIF 5\0"
	.byte	0x1
	.uleb128 0x612
	.ascii "CF_TIFF 6\0"
	.byte	0x1
	.uleb128 0x613
	.ascii "CF_OEMTEXT 7\0"
	.byte	0x1
	.uleb128 0x614
	.ascii "CF_DIB 8\0"
	.byte	0x1
	.uleb128 0x615
	.ascii "CF_PALETTE 9\0"
	.byte	0x1
	.uleb128 0x616
	.ascii "CF_PENDATA 10\0"
	.byte	0x1
	.uleb128 0x617
	.ascii "CF_RIFF 11\0"
	.byte	0x1
	.uleb128 0x618
	.ascii "CF_WAVE 12\0"
	.byte	0x1
	.uleb128 0x619
	.ascii "CF_UNICODETEXT 13\0"
	.byte	0x1
	.uleb128 0x61a
	.ascii "CF_ENHMETAFILE 14\0"
	.byte	0x1
	.uleb128 0x61b
	.ascii "CF_HDROP 15\0"
	.byte	0x1
	.uleb128 0x61c
	.ascii "CF_LOCALE 16\0"
	.byte	0x1
	.uleb128 0x61d
	.ascii "CF_DIBV5 17\0"
	.byte	0x1
	.uleb128 0x61e
	.ascii "CF_MAX 18\0"
	.byte	0x1
	.uleb128 0x620
	.ascii "CF_OWNERDISPLAY 0x0080\0"
	.byte	0x1
	.uleb128 0x621
	.ascii "CF_DSPTEXT 0x0081\0"
	.byte	0x1
	.uleb128 0x622
	.ascii "CF_DSPBITMAP 0x0082\0"
	.byte	0x1
	.uleb128 0x623
	.ascii "CF_DSPMETAFILEPICT 0x0083\0"
	.byte	0x1
	.uleb128 0x624
	.ascii "CF_DSPENHMETAFILE 0x008E\0"
	.byte	0x1
	.uleb128 0x626
	.ascii "CF_PRIVATEFIRST 0x0200\0"
	.byte	0x1
	.uleb128 0x627
	.ascii "CF_PRIVATELAST 0x02FF\0"
	.byte	0x1
	.uleb128 0x629
	.ascii "CF_GDIOBJFIRST 0x0300\0"
	.byte	0x1
	.uleb128 0x62a
	.ascii "CF_GDIOBJLAST 0x03FF\0"
	.byte	0x1
	.uleb128 0x62d
	.ascii "FVIRTKEY TRUE\0"
	.byte	0x1
	.uleb128 0x62e
	.ascii "FNOINVERT 0x02\0"
	.byte	0x1
	.uleb128 0x62f
	.ascii "FSHIFT 0x04\0"
	.byte	0x1
	.uleb128 0x630
	.ascii "FCONTROL 0x08\0"
	.byte	0x1
	.uleb128 0x631
	.ascii "FALT 0x10\0"
	.byte	0x1
	.uleb128 0x66d
	.ascii "WPF_SETMINPOSITION 0x0001\0"
	.byte	0x1
	.uleb128 0x66e
	.ascii "WPF_RESTORETOMAXIMIZED 0x0002\0"
	.byte	0x1
	.uleb128 0x66f
	.ascii "WPF_ASYNCWINDOWPLACEMENT 0x0004\0"
	.byte	0x1
	.uleb128 0x67e
	.ascii "ODT_MENU 1\0"
	.byte	0x1
	.uleb128 0x67f
	.ascii "ODT_LISTBOX 2\0"
	.byte	0x1
	.uleb128 0x680
	.ascii "ODT_COMBOBOX 3\0"
	.byte	0x1
	.uleb128 0x681
	.ascii "ODT_BUTTON 4\0"
	.byte	0x1
	.uleb128 0x682
	.ascii "ODT_STATIC 5\0"
	.byte	0x1
	.uleb128 0x684
	.ascii "ODA_DRAWENTIRE 0x0001\0"
	.byte	0x1
	.uleb128 0x685
	.ascii "ODA_SELECT 0x0002\0"
	.byte	0x1
	.uleb128 0x686
	.ascii "ODA_FOCUS 0x0004\0"
	.byte	0x1
	.uleb128 0x688
	.ascii "ODS_SELECTED 0x0001\0"
	.byte	0x1
	.uleb128 0x689
	.ascii "ODS_GRAYED 0x0002\0"
	.byte	0x1
	.uleb128 0x68a
	.ascii "ODS_DISABLED 0x0004\0"
	.byte	0x1
	.uleb128 0x68b
	.ascii "ODS_CHECKED 0x0008\0"
	.byte	0x1
	.uleb128 0x68c
	.ascii "ODS_FOCUS 0x0010\0"
	.byte	0x1
	.uleb128 0x68d
	.ascii "ODS_DEFAULT 0x0020\0"
	.byte	0x1
	.uleb128 0x68e
	.ascii "ODS_COMBOBOXEDIT 0x1000\0"
	.byte	0x1
	.uleb128 0x68f
	.ascii "ODS_HOTLIGHT 0x0040\0"
	.byte	0x1
	.uleb128 0x690
	.ascii "ODS_INACTIVE 0x0080\0"
	.byte	0x1
	.uleb128 0x691
	.ascii "ODS_NOACCEL 0x0100\0"
	.byte	0x1
	.uleb128 0x692
	.ascii "ODS_NOFOCUSRECT 0x0200\0"
	.byte	0x1
	.uleb128 0x6bd
	.ascii "GetMessage __MINGW_NAME_AW(GetMessage)\0"
	.byte	0x1
	.uleb128 0x6be
	.ascii "DispatchMessage __MINGW_NAME_AW(DispatchMessage)\0"
	.byte	0x1
	.uleb128 0x6bf
	.ascii "PeekMessage __MINGW_NAME_AW(PeekMessage)\0"
	.byte	0x1
	.uleb128 0x6ca
	.ascii "PM_NOREMOVE 0x0000\0"
	.byte	0x1
	.uleb128 0x6cb
	.ascii "PM_REMOVE 0x0001\0"
	.byte	0x1
	.uleb128 0x6cc
	.ascii "PM_NOYIELD 0x0002\0"
	.byte	0x1
	.uleb128 0x6cd
	.ascii "PM_QS_INPUT (QS_INPUT << 16)\0"
	.byte	0x1
	.uleb128 0x6ce
	.ascii "PM_QS_POSTMESSAGE ((QS_POSTMESSAGE | QS_HOTKEY | QS_TIMER) << 16)\0"
	.byte	0x1
	.uleb128 0x6cf
	.ascii "PM_QS_PAINT (QS_PAINT << 16)\0"
	.byte	0x1
	.uleb128 0x6d0
	.ascii "PM_QS_SENDMESSAGE (QS_SENDMESSAGE << 16)\0"
	.byte	0x1
	.uleb128 0x6d6
	.ascii "MOD_ALT 0x0001\0"
	.byte	0x1
	.uleb128 0x6d7
	.ascii "MOD_CONTROL 0x0002\0"
	.byte	0x1
	.uleb128 0x6d8
	.ascii "MOD_SHIFT 0x0004\0"
	.byte	0x1
	.uleb128 0x6d9
	.ascii "MOD_WIN 0x0008\0"
	.byte	0x1
	.uleb128 0x6de
	.ascii "IDHOT_SNAPWINDOW (-1)\0"
	.byte	0x1
	.uleb128 0x6df
	.ascii "IDHOT_SNAPDESKTOP (-2)\0"
	.byte	0x1
	.uleb128 0x6ea
	.ascii "ENDSESSION_LOGOFF 0x80000000\0"
	.byte	0x1
	.uleb128 0x6ec
	.ascii "EWX_LOGOFF 0\0"
	.byte	0x1
	.uleb128 0x6ed
	.ascii "EWX_SHUTDOWN 0x00000001\0"
	.byte	0x1
	.uleb128 0x6ee
	.ascii "EWX_REBOOT 0x00000002\0"
	.byte	0x1
	.uleb128 0x6ef
	.ascii "EWX_FORCE 0x00000004\0"
	.byte	0x1
	.uleb128 0x6f0
	.ascii "EWX_POWEROFF 0x00000008\0"
	.byte	0x1
	.uleb128 0x6f1
	.ascii "EWX_FORCEIFHUNG 0x00000010\0"
	.byte	0x1
	.uleb128 0x6f3
	.ascii "ExitWindows(dwReserved,Code) ExitWindowsEx(EWX_LOGOFF,0xFFFFFFFF)\0"
	.byte	0x1
	.uleb128 0x6f5
	.ascii "SendMessage __MINGW_NAME_AW(SendMessage)\0"
	.byte	0x1
	.uleb128 0x6f6
	.ascii "SendMessageTimeout __MINGW_NAME_AW(SendMessageTimeout)\0"
	.byte	0x1
	.uleb128 0x6f7
	.ascii "SendNotifyMessage __MINGW_NAME_AW(SendNotifyMessage)\0"
	.byte	0x1
	.uleb128 0x6f8
	.ascii "SendMessageCallback __MINGW_NAME_AW(SendMessageCallback)\0"
	.byte	0x1
	.uleb128 0x711
	.ascii "BroadcastSystemMessageEx __MINGW_NAME_AW(BroadcastSystemMessageEx)\0"
	.byte	0x1
	.uleb128 0x712
	.ascii "BroadcastSystemMessage __MINGW_NAME_AW(BroadcastSystemMessage)\0"
	.byte	0x1
	.uleb128 0x719
	.ascii "BSM_ALLCOMPONENTS 0x00000000\0"
	.byte	0x1
	.uleb128 0x71a
	.ascii "BSM_VXDS 0x00000001\0"
	.byte	0x1
	.uleb128 0x71b
	.ascii "BSM_NETDRIVER 0x00000002\0"
	.byte	0x1
	.uleb128 0x71c
	.ascii "BSM_INSTALLABLEDRIVERS 0x00000004\0"
	.byte	0x1
	.uleb128 0x71d
	.ascii "BSM_APPLICATIONS 0x00000008\0"
	.byte	0x1
	.uleb128 0x71e
	.ascii "BSM_ALLDESKTOPS 0x00000010\0"
	.byte	0x1
	.uleb128 0x720
	.ascii "BSF_QUERY 0x00000001\0"
	.byte	0x1
	.uleb128 0x721
	.ascii "BSF_IGNORECURRENTTASK 0x00000002\0"
	.byte	0x1
	.uleb128 0x722
	.ascii "BSF_FLUSHDISK 0x00000004\0"
	.byte	0x1
	.uleb128 0x723
	.ascii "BSF_NOHANG 0x00000008\0"
	.byte	0x1
	.uleb128 0x724
	.ascii "BSF_POSTMESSAGE 0x00000010\0"
	.byte	0x1
	.uleb128 0x725
	.ascii "BSF_FORCEIFHUNG 0x00000020\0"
	.byte	0x1
	.uleb128 0x726
	.ascii "BSF_NOTIMEOUTIFNOTHUNG 0x00000040\0"
	.byte	0x1
	.uleb128 0x727
	.ascii "BSF_ALLOWSFW 0x00000080\0"
	.byte	0x1
	.uleb128 0x728
	.ascii "BSF_SENDNOTIFYMESSAGE 0x00000100\0"
	.byte	0x1
	.uleb128 0x729
	.ascii "BSF_RETURNHDESK 0x00000200\0"
	.byte	0x1
	.uleb128 0x72a
	.ascii "BSF_LUID 0x00000400\0"
	.byte	0x1
	.uleb128 0x72c
	.ascii "BROADCAST_QUERY_DENY 0x424D5144\0"
	.byte	0x1
	.uleb128 0x731
	.ascii "DEVICE_NOTIFY_WINDOW_HANDLE 0x00000000\0"
	.byte	0x1
	.uleb128 0x732
	.ascii "DEVICE_NOTIFY_SERVICE_HANDLE 0x00000001\0"
	.byte	0x1
	.uleb128 0x733
	.ascii "DEVICE_NOTIFY_ALL_INTERFACE_CLASSES 0x00000004\0"
	.byte	0x1
	.uleb128 0x735
	.ascii "RegisterDeviceNotification __MINGW_NAME_AW(RegisterDeviceNotification)\0"
	.byte	0x1
	.uleb128 0x736
	.ascii "PostMessage __MINGW_NAME_AW(PostMessage)\0"
	.byte	0x1
	.uleb128 0x737
	.ascii "PostThreadMessage __MINGW_NAME_AW(PostThreadMessage)\0"
	.byte	0x1
	.uleb128 0x738
	.ascii "PostAppMessage __MINGW_NAME_AW(PostAppMessage)\0"
	.byte	0x1
	.uleb128 0x739
	.ascii "DefWindowProc __MINGW_NAME_AW(DefWindowProc)\0"
	.byte	0x1
	.uleb128 0x73a
	.ascii "CallWindowProc __MINGW_NAME_AW(CallWindowProc)\0"
	.byte	0x1
	.uleb128 0x73b
	.ascii "RegisterClass __MINGW_NAME_AW(RegisterClass)\0"
	.byte	0x1
	.uleb128 0x73c
	.ascii "UnregisterClass __MINGW_NAME_AW(UnregisterClass)\0"
	.byte	0x1
	.uleb128 0x73d
	.ascii "GetClassInfo __MINGW_NAME_AW(GetClassInfo)\0"
	.byte	0x1
	.uleb128 0x73e
	.ascii "RegisterClassEx __MINGW_NAME_AW(RegisterClassEx)\0"
	.byte	0x1
	.uleb128 0x73f
	.ascii "GetClassInfoEx __MINGW_NAME_AW(GetClassInfoEx)\0"
	.byte	0x1
	.uleb128 0x761
	.ascii "PostAppMessageA(idThread,wMsg,wParam,lParam) PostThreadMessageA((DWORD)idThread,wMsg,wParam,lParam)\0"
	.byte	0x1
	.uleb128 0x762
	.ascii "PostAppMessageW(idThread,wMsg,wParam,lParam) PostThreadMessageW((DWORD)idThread,wMsg,wParam,lParam)\0"
	.byte	0x1
	.uleb128 0x764
	.ascii "HWND_BROADCAST ((HWND)0xffff)\0"
	.byte	0x1
	.uleb128 0x765
	.ascii "HWND_MESSAGE ((HWND)-3)\0"
	.byte	0x1
	.uleb128 0x773
	.ascii "ISMEX_NOSEND 0x00000000\0"
	.byte	0x1
	.uleb128 0x774
	.ascii "ISMEX_SEND 0x00000001\0"
	.byte	0x1
	.uleb128 0x775
	.ascii "ISMEX_NOTIFY 0x00000002\0"
	.byte	0x1
	.uleb128 0x776
	.ascii "ISMEX_CALLBACK 0x00000004\0"
	.byte	0x1
	.uleb128 0x777
	.ascii "ISMEX_REPLIED 0x00000008\0"
	.byte	0x1
	.uleb128 0x786
	.ascii "CW_USEDEFAULT ((int)0x80000000)\0"
	.byte	0x1
	.uleb128 0x788
	.ascii "HWND_DESKTOP ((HWND)0)\0"
	.byte	0x1
	.uleb128 0x78c
	.ascii "CreateWindowEx __MINGW_NAME_AW(CreateWindowEx)\0"
	.byte	0x1
	.uleb128 0x78d
	.ascii "CreateWindow __MINGW_NAME_AW(CreateWindow)\0"
	.byte	0x1
	.uleb128 0x791
	.ascii "CreateWindowA(lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam) CreateWindowExA((DWORD)0,lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam)\0"
	.byte	0x1
	.uleb128 0x792
	.ascii "CreateWindowW(lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam) CreateWindowExW((DWORD)0,lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam)\0"
	.byte	0x1
	.uleb128 0x7ae
	.ascii "PW_CLIENTONLY 0x00000001\0"
	.byte	0x1
	.uleb128 0x7b3
	.ascii "LWA_COLORKEY 0x00000001\0"
	.byte	0x1
	.uleb128 0x7b4
	.ascii "LWA_ALPHA 0x00000002\0"
	.byte	0x1
	.uleb128 0x7b6
	.ascii "ULW_COLORKEY 0x00000001\0"
	.byte	0x1
	.uleb128 0x7b7
	.ascii "ULW_ALPHA 0x00000002\0"
	.byte	0x1
	.uleb128 0x7b8
	.ascii "ULW_OPAQUE 0x00000004\0"
	.byte	0x1
	.uleb128 0x7ba
	.ascii "ULW_EX_NORESIZE 0x00000008\0"
	.byte	0x1
	.uleb128 0x7c9
	.ascii "FLASHW_STOP 0\0"
	.byte	0x1
	.uleb128 0x7ca
	.ascii "FLASHW_CAPTION 0x00000001\0"
	.byte	0x1
	.uleb128 0x7cb
	.ascii "FLASHW_TRAY 0x00000002\0"
	.byte	0x1
	.uleb128 0x7cc
	.ascii "FLASHW_ALL (FLASHW_CAPTION | FLASHW_TRAY)\0"
	.byte	0x1
	.uleb128 0x7cd
	.ascii "FLASHW_TIMER 0x00000004\0"
	.byte	0x1
	.uleb128 0x7ce
	.ascii "FLASHW_TIMERNOFG 0x0000000C\0"
	.byte	0x1
	.uleb128 0x7e4
	.ascii "SWP_NOSIZE 0x0001\0"
	.byte	0x1
	.uleb128 0x7e5
	.ascii "SWP_NOMOVE 0x0002\0"
	.byte	0x1
	.uleb128 0x7e6
	.ascii "SWP_NOZORDER 0x0004\0"
	.byte	0x1
	.uleb128 0x7e7
	.ascii "SWP_NOREDRAW 0x0008\0"
	.byte	0x1
	.uleb128 0x7e8
	.ascii "SWP_NOACTIVATE 0x0010\0"
	.byte	0x1
	.uleb128 0x7e9
	.ascii "SWP_FRAMECHANGED 0x0020\0"
	.byte	0x1
	.uleb128 0x7ea
	.ascii "SWP_SHOWWINDOW 0x0040\0"
	.byte	0x1
	.uleb128 0x7eb
	.ascii "SWP_HIDEWINDOW 0x0080\0"
	.byte	0x1
	.uleb128 0x7ec
	.ascii "SWP_NOCOPYBITS 0x0100\0"
	.byte	0x1
	.uleb128 0x7ed
	.ascii "SWP_NOOWNERZORDER 0x0200\0"
	.byte	0x1
	.uleb128 0x7ee
	.ascii "SWP_NOSENDCHANGING 0x0400\0"
	.byte	0x1
	.uleb128 0x7f0
	.ascii "SWP_DRAWFRAME SWP_FRAMECHANGED\0"
	.byte	0x1
	.uleb128 0x7f1
	.ascii "SWP_NOREPOSITION SWP_NOOWNERZORDER\0"
	.byte	0x1
	.uleb128 0x7f2
	.ascii "SWP_DEFERERASE 0x2000\0"
	.byte	0x1
	.uleb128 0x7f3
	.ascii "SWP_ASYNCWINDOWPOS 0x4000\0"
	.byte	0x1
	.uleb128 0x7f5
	.ascii "HWND_TOP ((HWND)0)\0"
	.byte	0x1
	.uleb128 0x7f6
	.ascii "HWND_BOTTOM ((HWND)1)\0"
	.byte	0x1
	.uleb128 0x7f7
	.ascii "HWND_TOPMOST ((HWND)-1)\0"
	.byte	0x1
	.uleb128 0x7f8
	.ascii "HWND_NOTOPMOST ((HWND)-2)\0"
	.byte	0x3
	.uleb128 0x7fc
	.uleb128 0x144
	.byte	0x4
	.byte	0x3
	.uleb128 0x826
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x828
	.ascii "CreateDialogParam __MINGW_NAME_AW(CreateDialogParam)\0"
	.byte	0x1
	.uleb128 0x829
	.ascii "CreateDialogIndirectParam __MINGW_NAME_AW(CreateDialogIndirectParam)\0"
	.byte	0x1
	.uleb128 0x82a
	.ascii "CreateDialog __MINGW_NAME_AW(CreateDialog)\0"
	.byte	0x1
	.uleb128 0x82b
	.ascii "CreateDialogIndirect __MINGW_NAME_AW(CreateDialogIndirect)\0"
	.byte	0x1
	.uleb128 0x82c
	.ascii "DialogBoxParam __MINGW_NAME_AW(DialogBoxParam)\0"
	.byte	0x1
	.uleb128 0x82d
	.ascii "DialogBoxIndirectParam __MINGW_NAME_AW(DialogBoxIndirectParam)\0"
	.byte	0x1
	.uleb128 0x82e
	.ascii "DialogBox __MINGW_NAME_AW(DialogBox)\0"
	.byte	0x1
	.uleb128 0x82f
	.ascii "DialogBoxIndirect __MINGW_NAME_AW(DialogBoxIndirect)\0"
	.byte	0x1
	.uleb128 0x830
	.ascii "SetDlgItemText __MINGW_NAME_AW(SetDlgItemText)\0"
	.byte	0x1
	.uleb128 0x831
	.ascii "GetDlgItemText __MINGW_NAME_AW(GetDlgItemText)\0"
	.byte	0x1
	.uleb128 0x832
	.ascii "SendDlgItemMessage __MINGW_NAME_AW(SendDlgItemMessage)\0"
	.byte	0x1
	.uleb128 0x833
	.ascii "DefDlgProc __MINGW_NAME_AW(DefDlgProc)\0"
	.byte	0x1
	.uleb128 0x839
	.ascii "CreateDialogA(hInstance,lpName,hWndParent,lpDialogFunc) CreateDialogParamA(hInstance,lpName,hWndParent,lpDialogFunc,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x83a
	.ascii "CreateDialogW(hInstance,lpName,hWndParent,lpDialogFunc) CreateDialogParamW(hInstance,lpName,hWndParent,lpDialogFunc,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x83b
	.ascii "CreateDialogIndirectA(hInstance,lpTemplate,hWndParent,lpDialogFunc) CreateDialogIndirectParamA(hInstance,lpTemplate,hWndParent,lpDialogFunc,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x83c
	.ascii "CreateDialogIndirectW(hInstance,lpTemplate,hWndParent,lpDialogFunc) CreateDialogIndirectParamW(hInstance,lpTemplate,hWndParent,lpDialogFunc,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x841
	.ascii "DialogBoxA(hInstance,lpTemplate,hWndParent,lpDialogFunc) DialogBoxParamA(hInstance,lpTemplate,hWndParent,lpDialogFunc,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x842
	.ascii "DialogBoxW(hInstance,lpTemplate,hWndParent,lpDialogFunc) DialogBoxParamW(hInstance,lpTemplate,hWndParent,lpDialogFunc,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x843
	.ascii "DialogBoxIndirectA(hInstance,lpTemplate,hWndParent,lpDialogFunc) DialogBoxIndirectParamA(hInstance,lpTemplate,hWndParent,lpDialogFunc,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x844
	.ascii "DialogBoxIndirectW(hInstance,lpTemplate,hWndParent,lpDialogFunc) DialogBoxIndirectParamW(hInstance,lpTemplate,hWndParent,lpDialogFunc,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x859
	.ascii "DLGWINDOWEXTRA 30\0"
	.byte	0x1
	.uleb128 0x85e
	.ascii "CallMsgFilter __MINGW_NAME_AW(CallMsgFilter)\0"
	.byte	0x1
	.uleb128 0x866
	.ascii "RegisterClipboardFormat __MINGW_NAME_AW(RegisterClipboardFormat)\0"
	.byte	0x1
	.uleb128 0x867
	.ascii "GetClipboardFormatName __MINGW_NAME_AW(GetClipboardFormatName)\0"
	.byte	0x1
	.uleb128 0x87e
	.ascii "CharToOem __MINGW_NAME_AW(CharToOem)\0"
	.byte	0x1
	.uleb128 0x87f
	.ascii "OemToChar __MINGW_NAME_AW(OemToChar)\0"
	.byte	0x1
	.uleb128 0x880
	.ascii "CharToOemBuff __MINGW_NAME_AW(CharToOemBuff)\0"
	.byte	0x1
	.uleb128 0x881
	.ascii "OemToCharBuff __MINGW_NAME_AW(OemToCharBuff)\0"
	.byte	0x1
	.uleb128 0x882
	.ascii "CharUpper __MINGW_NAME_AW(CharUpper)\0"
	.byte	0x1
	.uleb128 0x883
	.ascii "CharUpperBuff __MINGW_NAME_AW(CharUpperBuff)\0"
	.byte	0x1
	.uleb128 0x884
	.ascii "CharLower __MINGW_NAME_AW(CharLower)\0"
	.byte	0x1
	.uleb128 0x885
	.ascii "CharLowerBuff __MINGW_NAME_AW(CharLowerBuff)\0"
	.byte	0x1
	.uleb128 0x886
	.ascii "CharNext __MINGW_NAME_AW(CharNext)\0"
	.byte	0x1
	.uleb128 0x887
	.ascii "CharPrev __MINGW_NAME_AW(CharPrev)\0"
	.byte	0x1
	.uleb128 0x8a0
	.ascii "AnsiToOem CharToOemA\0"
	.byte	0x1
	.uleb128 0x8a1
	.ascii "OemToAnsi OemToCharA\0"
	.byte	0x1
	.uleb128 0x8a2
	.ascii "AnsiToOemBuff CharToOemBuffA\0"
	.byte	0x1
	.uleb128 0x8a3
	.ascii "OemToAnsiBuff OemToCharBuffA\0"
	.byte	0x1
	.uleb128 0x8a4
	.ascii "AnsiUpper CharUpperA\0"
	.byte	0x1
	.uleb128 0x8a5
	.ascii "AnsiUpperBuff CharUpperBuffA\0"
	.byte	0x1
	.uleb128 0x8a6
	.ascii "AnsiLower CharLowerA\0"
	.byte	0x1
	.uleb128 0x8a7
	.ascii "AnsiLowerBuff CharLowerBuffA\0"
	.byte	0x1
	.uleb128 0x8a8
	.ascii "AnsiNext CharNextA\0"
	.byte	0x1
	.uleb128 0x8a9
	.ascii "AnsiPrev CharPrevA\0"
	.byte	0x1
	.uleb128 0x8ad
	.ascii "IsCharAlpha __MINGW_NAME_AW(IsCharAlpha)\0"
	.byte	0x1
	.uleb128 0x8ae
	.ascii "IsCharAlphaNumeric __MINGW_NAME_AW(IsCharAlphaNumeric)\0"
	.byte	0x1
	.uleb128 0x8af
	.ascii "IsCharUpper __MINGW_NAME_AW(IsCharUpper)\0"
	.byte	0x1
	.uleb128 0x8b0
	.ascii "IsCharLower __MINGW_NAME_AW(IsCharLower)\0"
	.byte	0x1
	.uleb128 0x8bc
	.ascii "GetKeyNameText __MINGW_NAME_AW(GetKeyNameText)\0"
	.byte	0x1
	.uleb128 0x8bd
	.ascii "VkKeyScan __MINGW_NAME_AW(VkKeyScan)\0"
	.byte	0x1
	.uleb128 0x8be
	.ascii "VkKeyScanEx __MINGW_NAME_AW(VkKeyScanEx)\0"
	.byte	0x1
	.uleb128 0x8d4
	.ascii "KEYEVENTF_EXTENDEDKEY 0x0001\0"
	.byte	0x1
	.uleb128 0x8d5
	.ascii "KEYEVENTF_KEYUP 0x0002\0"
	.byte	0x1
	.uleb128 0x8d6
	.ascii "KEYEVENTF_UNICODE 0x0004\0"
	.byte	0x1
	.uleb128 0x8d7
	.ascii "KEYEVENTF_SCANCODE 0x0008\0"
	.byte	0x1
	.uleb128 0x8db
	.ascii "MOUSEEVENTF_MOVE 0x0001\0"
	.byte	0x1
	.uleb128 0x8dc
	.ascii "MOUSEEVENTF_LEFTDOWN 0x0002\0"
	.byte	0x1
	.uleb128 0x8dd
	.ascii "MOUSEEVENTF_LEFTUP 0x0004\0"
	.byte	0x1
	.uleb128 0x8de
	.ascii "MOUSEEVENTF_RIGHTDOWN 0x0008\0"
	.byte	0x1
	.uleb128 0x8df
	.ascii "MOUSEEVENTF_RIGHTUP 0x0010\0"
	.byte	0x1
	.uleb128 0x8e0
	.ascii "MOUSEEVENTF_MIDDLEDOWN 0x0020\0"
	.byte	0x1
	.uleb128 0x8e1
	.ascii "MOUSEEVENTF_MIDDLEUP 0x0040\0"
	.byte	0x1
	.uleb128 0x8e2
	.ascii "MOUSEEVENTF_XDOWN 0x0080\0"
	.byte	0x1
	.uleb128 0x8e3
	.ascii "MOUSEEVENTF_XUP 0x0100\0"
	.byte	0x1
	.uleb128 0x8e4
	.ascii "MOUSEEVENTF_WHEEL 0x0800\0"
	.byte	0x1
	.uleb128 0x8e5
	.ascii "MOUSEEVENTF_VIRTUALDESK 0x4000\0"
	.byte	0x1
	.uleb128 0x8e6
	.ascii "MOUSEEVENTF_ABSOLUTE 0x8000\0"
	.byte	0x1
	.uleb128 0x901
	.ascii "INPUT_MOUSE 0\0"
	.byte	0x1
	.uleb128 0x902
	.ascii "INPUT_KEYBOARD 1\0"
	.byte	0x1
	.uleb128 0x903
	.ascii "INPUT_HARDWARE 2\0"
	.byte	0x1
	.uleb128 0x915
	.ascii "MapVirtualKey __MINGW_NAME_AW(MapVirtualKey)\0"
	.byte	0x1
	.uleb128 0x916
	.ascii "MapVirtualKeyEx __MINGW_NAME_AW(MapVirtualKeyEx)\0"
	.byte	0x1
	.uleb128 0x925
	.ascii "MWMO_WAITALL 0x0001\0"
	.byte	0x1
	.uleb128 0x926
	.ascii "MWMO_ALERTABLE 0x0002\0"
	.byte	0x1
	.uleb128 0x927
	.ascii "MWMO_INPUTAVAILABLE 0x0004\0"
	.byte	0x1
	.uleb128 0x929
	.ascii "QS_KEY 0x0001\0"
	.byte	0x1
	.uleb128 0x92a
	.ascii "QS_MOUSEMOVE 0x0002\0"
	.byte	0x1
	.uleb128 0x92b
	.ascii "QS_MOUSEBUTTON 0x0004\0"
	.byte	0x1
	.uleb128 0x92c
	.ascii "QS_POSTMESSAGE 0x0008\0"
	.byte	0x1
	.uleb128 0x92d
	.ascii "QS_TIMER 0x0010\0"
	.byte	0x1
	.uleb128 0x92e
	.ascii "QS_PAINT 0x0020\0"
	.byte	0x1
	.uleb128 0x92f
	.ascii "QS_SENDMESSAGE 0x0040\0"
	.byte	0x1
	.uleb128 0x930
	.ascii "QS_HOTKEY 0x0080\0"
	.byte	0x1
	.uleb128 0x931
	.ascii "QS_ALLPOSTMESSAGE 0x0100\0"
	.byte	0x1
	.uleb128 0x932
	.ascii "QS_RAWINPUT 0x0400\0"
	.byte	0x1
	.uleb128 0x933
	.ascii "QS_MOUSE (QS_MOUSEMOVE | QS_MOUSEBUTTON)\0"
	.byte	0x1
	.uleb128 0x934
	.ascii "QS_INPUT (QS_MOUSE | QS_KEY | QS_RAWINPUT)\0"
	.byte	0x1
	.uleb128 0x935
	.ascii "QS_ALLEVENTS (QS_INPUT | QS_POSTMESSAGE | QS_TIMER | QS_PAINT | QS_HOTKEY)\0"
	.byte	0x1
	.uleb128 0x936
	.ascii "QS_ALLINPUT (QS_INPUT | QS_POSTMESSAGE | QS_TIMER | QS_PAINT | QS_HOTKEY | QS_SENDMESSAGE)\0"
	.byte	0x1
	.uleb128 0x938
	.ascii "USER_TIMER_MAXIMUM 0x7FFFFFFF\0"
	.byte	0x1
	.uleb128 0x939
	.ascii "USER_TIMER_MINIMUM 0x0000000A\0"
	.byte	0x1
	.uleb128 0x93b
	.ascii "LoadAccelerators __MINGW_NAME_AW(LoadAccelerators)\0"
	.byte	0x1
	.uleb128 0x93c
	.ascii "CreateAcceleratorTable __MINGW_NAME_AW(CreateAcceleratorTable)\0"
	.byte	0x1
	.uleb128 0x93d
	.ascii "CopyAcceleratorTable __MINGW_NAME_AW(CopyAcceleratorTable)\0"
	.byte	0x1
	.uleb128 0x94e
	.ascii "TranslateAccelerator __MINGW_NAME_AW(TranslateAccelerator)\0"
	.byte	0x1
	.uleb128 0x956
	.ascii "SM_CXSCREEN 0\0"
	.byte	0x1
	.uleb128 0x957
	.ascii "SM_CYSCREEN 1\0"
	.byte	0x1
	.uleb128 0x958
	.ascii "SM_CXVSCROLL 2\0"
	.byte	0x1
	.uleb128 0x959
	.ascii "SM_CYHSCROLL 3\0"
	.byte	0x1
	.uleb128 0x95a
	.ascii "SM_CYCAPTION 4\0"
	.byte	0x1
	.uleb128 0x95b
	.ascii "SM_CXBORDER 5\0"
	.byte	0x1
	.uleb128 0x95c
	.ascii "SM_CYBORDER 6\0"
	.byte	0x1
	.uleb128 0x95d
	.ascii "SM_CXDLGFRAME 7\0"
	.byte	0x1
	.uleb128 0x95e
	.ascii "SM_CYDLGFRAME 8\0"
	.byte	0x1
	.uleb128 0x95f
	.ascii "SM_CYVTHUMB 9\0"
	.byte	0x1
	.uleb128 0x960
	.ascii "SM_CXHTHUMB 10\0"
	.byte	0x1
	.uleb128 0x961
	.ascii "SM_CXICON 11\0"
	.byte	0x1
	.uleb128 0x962
	.ascii "SM_CYICON 12\0"
	.byte	0x1
	.uleb128 0x963
	.ascii "SM_CXCURSOR 13\0"
	.byte	0x1
	.uleb128 0x964
	.ascii "SM_CYCURSOR 14\0"
	.byte	0x1
	.uleb128 0x965
	.ascii "SM_CYMENU 15\0"
	.byte	0x1
	.uleb128 0x966
	.ascii "SM_CXFULLSCREEN 16\0"
	.byte	0x1
	.uleb128 0x967
	.ascii "SM_CYFULLSCREEN 17\0"
	.byte	0x1
	.uleb128 0x968
	.ascii "SM_CYKANJIWINDOW 18\0"
	.byte	0x1
	.uleb128 0x969
	.ascii "SM_MOUSEPRESENT 19\0"
	.byte	0x1
	.uleb128 0x96a
	.ascii "SM_CYVSCROLL 20\0"
	.byte	0x1
	.uleb128 0x96b
	.ascii "SM_CXHSCROLL 21\0"
	.byte	0x1
	.uleb128 0x96c
	.ascii "SM_DEBUG 22\0"
	.byte	0x1
	.uleb128 0x96d
	.ascii "SM_SWAPBUTTON 23\0"
	.byte	0x1
	.uleb128 0x96e
	.ascii "SM_RESERVED1 24\0"
	.byte	0x1
	.uleb128 0x96f
	.ascii "SM_RESERVED2 25\0"
	.byte	0x1
	.uleb128 0x970
	.ascii "SM_RESERVED3 26\0"
	.byte	0x1
	.uleb128 0x971
	.ascii "SM_RESERVED4 27\0"
	.byte	0x1
	.uleb128 0x972
	.ascii "SM_CXMIN 28\0"
	.byte	0x1
	.uleb128 0x973
	.ascii "SM_CYMIN 29\0"
	.byte	0x1
	.uleb128 0x974
	.ascii "SM_CXSIZE 30\0"
	.byte	0x1
	.uleb128 0x975
	.ascii "SM_CYSIZE 31\0"
	.byte	0x1
	.uleb128 0x976
	.ascii "SM_CXFRAME 32\0"
	.byte	0x1
	.uleb128 0x977
	.ascii "SM_CYFRAME 33\0"
	.byte	0x1
	.uleb128 0x978
	.ascii "SM_CXMINTRACK 34\0"
	.byte	0x1
	.uleb128 0x979
	.ascii "SM_CYMINTRACK 35\0"
	.byte	0x1
	.uleb128 0x97a
	.ascii "SM_CXDOUBLECLK 36\0"
	.byte	0x1
	.uleb128 0x97b
	.ascii "SM_CYDOUBLECLK 37\0"
	.byte	0x1
	.uleb128 0x97c
	.ascii "SM_CXICONSPACING 38\0"
	.byte	0x1
	.uleb128 0x97d
	.ascii "SM_CYICONSPACING 39\0"
	.byte	0x1
	.uleb128 0x97e
	.ascii "SM_MENUDROPALIGNMENT 40\0"
	.byte	0x1
	.uleb128 0x97f
	.ascii "SM_PENWINDOWS 41\0"
	.byte	0x1
	.uleb128 0x980
	.ascii "SM_DBCSENABLED 42\0"
	.byte	0x1
	.uleb128 0x981
	.ascii "SM_CMOUSEBUTTONS 43\0"
	.byte	0x1
	.uleb128 0x983
	.ascii "SM_CXFIXEDFRAME SM_CXDLGFRAME\0"
	.byte	0x1
	.uleb128 0x984
	.ascii "SM_CYFIXEDFRAME SM_CYDLGFRAME\0"
	.byte	0x1
	.uleb128 0x985
	.ascii "SM_CXSIZEFRAME SM_CXFRAME\0"
	.byte	0x1
	.uleb128 0x986
	.ascii "SM_CYSIZEFRAME SM_CYFRAME\0"
	.byte	0x1
	.uleb128 0x988
	.ascii "SM_SECURE 44\0"
	.byte	0x1
	.uleb128 0x989
	.ascii "SM_CXEDGE 45\0"
	.byte	0x1
	.uleb128 0x98a
	.ascii "SM_CYEDGE 46\0"
	.byte	0x1
	.uleb128 0x98b
	.ascii "SM_CXMINSPACING 47\0"
	.byte	0x1
	.uleb128 0x98c
	.ascii "SM_CYMINSPACING 48\0"
	.byte	0x1
	.uleb128 0x98d
	.ascii "SM_CXSMICON 49\0"
	.byte	0x1
	.uleb128 0x98e
	.ascii "SM_CYSMICON 50\0"
	.byte	0x1
	.uleb128 0x98f
	.ascii "SM_CYSMCAPTION 51\0"
	.byte	0x1
	.uleb128 0x990
	.ascii "SM_CXSMSIZE 52\0"
	.byte	0x1
	.uleb128 0x991
	.ascii "SM_CYSMSIZE 53\0"
	.byte	0x1
	.uleb128 0x992
	.ascii "SM_CXMENUSIZE 54\0"
	.byte	0x1
	.uleb128 0x993
	.ascii "SM_CYMENUSIZE 55\0"
	.byte	0x1
	.uleb128 0x994
	.ascii "SM_ARRANGE 56\0"
	.byte	0x1
	.uleb128 0x995
	.ascii "SM_CXMINIMIZED 57\0"
	.byte	0x1
	.uleb128 0x996
	.ascii "SM_CYMINIMIZED 58\0"
	.byte	0x1
	.uleb128 0x997
	.ascii "SM_CXMAXTRACK 59\0"
	.byte	0x1
	.uleb128 0x998
	.ascii "SM_CYMAXTRACK 60\0"
	.byte	0x1
	.uleb128 0x999
	.ascii "SM_CXMAXIMIZED 61\0"
	.byte	0x1
	.uleb128 0x99a
	.ascii "SM_CYMAXIMIZED 62\0"
	.byte	0x1
	.uleb128 0x99b
	.ascii "SM_NETWORK 63\0"
	.byte	0x1
	.uleb128 0x99c
	.ascii "SM_CLEANBOOT 67\0"
	.byte	0x1
	.uleb128 0x99d
	.ascii "SM_CXDRAG 68\0"
	.byte	0x1
	.uleb128 0x99e
	.ascii "SM_CYDRAG 69\0"
	.byte	0x1
	.uleb128 0x99f
	.ascii "SM_SHOWSOUNDS 70\0"
	.byte	0x1
	.uleb128 0x9a0
	.ascii "SM_CXMENUCHECK 71\0"
	.byte	0x1
	.uleb128 0x9a1
	.ascii "SM_CYMENUCHECK 72\0"
	.byte	0x1
	.uleb128 0x9a2
	.ascii "SM_SLOWMACHINE 73\0"
	.byte	0x1
	.uleb128 0x9a3
	.ascii "SM_MIDEASTENABLED 74\0"
	.byte	0x1
	.uleb128 0x9a4
	.ascii "SM_MOUSEWHEELPRESENT 75\0"
	.byte	0x1
	.uleb128 0x9a5
	.ascii "SM_XVIRTUALSCREEN 76\0"
	.byte	0x1
	.uleb128 0x9a6
	.ascii "SM_YVIRTUALSCREEN 77\0"
	.byte	0x1
	.uleb128 0x9a7
	.ascii "SM_CXVIRTUALSCREEN 78\0"
	.byte	0x1
	.uleb128 0x9a8
	.ascii "SM_CYVIRTUALSCREEN 79\0"
	.byte	0x1
	.uleb128 0x9a9
	.ascii "SM_CMONITORS 80\0"
	.byte	0x1
	.uleb128 0x9aa
	.ascii "SM_SAMEDISPLAYFORMAT 81\0"
	.byte	0x1
	.uleb128 0x9ab
	.ascii "SM_IMMENABLED 82\0"
	.byte	0x1
	.uleb128 0x9ac
	.ascii "SM_CXFOCUSBORDER 83\0"
	.byte	0x1
	.uleb128 0x9ad
	.ascii "SM_CYFOCUSBORDER 84\0"
	.byte	0x1
	.uleb128 0x9ae
	.ascii "SM_TABLETPC 86\0"
	.byte	0x1
	.uleb128 0x9af
	.ascii "SM_MEDIACENTER 87\0"
	.byte	0x1
	.uleb128 0x9b0
	.ascii "SM_STARTER 88\0"
	.byte	0x1
	.uleb128 0x9b1
	.ascii "SM_SERVERR2 89\0"
	.byte	0x1
	.uleb128 0x9b4
	.ascii "SM_CMETRICS 90\0"
	.byte	0x1
	.uleb128 0x9b7
	.ascii "SM_REMOTESESSION 0x1000\0"
	.byte	0x1
	.uleb128 0x9b8
	.ascii "SM_SHUTTINGDOWN 0x2000\0"
	.byte	0x1
	.uleb128 0x9b9
	.ascii "SM_REMOTECONTROL 0x2001\0"
	.byte	0x1
	.uleb128 0x9ba
	.ascii "SM_CARETBLINKINGENABLED 0x2002\0"
	.byte	0x1
	.uleb128 0x9da
	.ascii "LoadMenu __MINGW_NAME_AW(LoadMenu)\0"
	.byte	0x1
	.uleb128 0x9db
	.ascii "LoadMenuIndirect __MINGW_NAME_AW(LoadMenuIndirect)\0"
	.byte	0x1
	.uleb128 0x9dc
	.ascii "ChangeMenu __MINGW_NAME_AW(ChangeMenu)\0"
	.byte	0x1
	.uleb128 0x9dd
	.ascii "GetMenuString __MINGW_NAME_AW(GetMenuString)\0"
	.byte	0x1
	.uleb128 0x9de
	.ascii "InsertMenu __MINGW_NAME_AW(InsertMenu)\0"
	.byte	0x1
	.uleb128 0x9df
	.ascii "AppendMenu __MINGW_NAME_AW(AppendMenu)\0"
	.byte	0x1
	.uleb128 0x9e0
	.ascii "ModifyMenu __MINGW_NAME_AW(ModifyMenu)\0"
	.byte	0x1
	.uleb128 0x9f0
	.ascii "PMB_ACTIVE 0x00000001\0"
	.byte	0x1
	.uleb128 0xa07
	.ascii "MNC_IGNORE 0\0"
	.byte	0x1
	.uleb128 0xa08
	.ascii "MNC_CLOSE 1\0"
	.byte	0x1
	.uleb128 0xa09
	.ascii "MNC_EXECUTE 2\0"
	.byte	0x1
	.uleb128 0xa0a
	.ascii "MNC_SELECT 3\0"
	.byte	0x1
	.uleb128 0xa15
	.ascii "MNS_NOCHECK 0x80000000\0"
	.byte	0x1
	.uleb128 0xa16
	.ascii "MNS_MODELESS 0x40000000\0"
	.byte	0x1
	.uleb128 0xa17
	.ascii "MNS_DRAGDROP 0x20000000\0"
	.byte	0x1
	.uleb128 0xa18
	.ascii "MNS_AUTODISMISS 0x10000000\0"
	.byte	0x1
	.uleb128 0xa19
	.ascii "MNS_NOTIFYBYPOS 0x08000000\0"
	.byte	0x1
	.uleb128 0xa1a
	.ascii "MNS_CHECKORBMP 0x04000000\0"
	.byte	0x1
	.uleb128 0xa1c
	.ascii "MIM_MAXHEIGHT 0x00000001\0"
	.byte	0x1
	.uleb128 0xa1d
	.ascii "MIM_BACKGROUND 0x00000002\0"
	.byte	0x1
	.uleb128 0xa1e
	.ascii "MIM_HELPID 0x00000004\0"
	.byte	0x1
	.uleb128 0xa1f
	.ascii "MIM_MENUDATA 0x00000008\0"
	.byte	0x1
	.uleb128 0xa20
	.ascii "MIM_STYLE 0x00000010\0"
	.byte	0x1
	.uleb128 0xa21
	.ascii "MIM_APPLYTOSUBMENUS 0x80000000\0"
	.byte	0x1
	.uleb128 0xa33
	.ascii "MND_CONTINUE 0\0"
	.byte	0x1
	.uleb128 0xa34
	.ascii "MND_ENDMENU 1\0"
	.byte	0x1
	.uleb128 0xa3e
	.ascii "MNGOF_TOPGAP 0x00000001\0"
	.byte	0x1
	.uleb128 0xa3f
	.ascii "MNGOF_BOTTOMGAP 0x00000002\0"
	.byte	0x1
	.uleb128 0xa41
	.ascii "MNGO_NOINTERFACE 0x00000000\0"
	.byte	0x1
	.uleb128 0xa42
	.ascii "MNGO_NOERROR 0x00000001\0"
	.byte	0x1
	.uleb128 0xa44
	.ascii "MIIM_STATE 0x00000001\0"
	.byte	0x1
	.uleb128 0xa45
	.ascii "MIIM_ID 0x00000002\0"
	.byte	0x1
	.uleb128 0xa46
	.ascii "MIIM_SUBMENU 0x00000004\0"
	.byte	0x1
	.uleb128 0xa47
	.ascii "MIIM_CHECKMARKS 0x00000008\0"
	.byte	0x1
	.uleb128 0xa48
	.ascii "MIIM_TYPE 0x00000010\0"
	.byte	0x1
	.uleb128 0xa49
	.ascii "MIIM_DATA 0x00000020\0"
	.byte	0x1
	.uleb128 0xa4b
	.ascii "MIIM_STRING 0x00000040\0"
	.byte	0x1
	.uleb128 0xa4c
	.ascii "MIIM_BITMAP 0x00000080\0"
	.byte	0x1
	.uleb128 0xa4d
	.ascii "MIIM_FTYPE 0x00000100\0"
	.byte	0x1
	.uleb128 0xa4f
	.ascii "HBMMENU_CALLBACK ((HBITMAP) -1)\0"
	.byte	0x1
	.uleb128 0xa50
	.ascii "HBMMENU_SYSTEM ((HBITMAP) 1)\0"
	.byte	0x1
	.uleb128 0xa51
	.ascii "HBMMENU_MBAR_RESTORE ((HBITMAP) 2)\0"
	.byte	0x1
	.uleb128 0xa52
	.ascii "HBMMENU_MBAR_MINIMIZE ((HBITMAP) 3)\0"
	.byte	0x1
	.uleb128 0xa53
	.ascii "HBMMENU_MBAR_CLOSE ((HBITMAP) 5)\0"
	.byte	0x1
	.uleb128 0xa54
	.ascii "HBMMENU_MBAR_CLOSE_D ((HBITMAP) 6)\0"
	.byte	0x1
	.uleb128 0xa55
	.ascii "HBMMENU_MBAR_MINIMIZE_D ((HBITMAP) 7)\0"
	.byte	0x1
	.uleb128 0xa56
	.ascii "HBMMENU_POPUP_CLOSE ((HBITMAP) 8)\0"
	.byte	0x1
	.uleb128 0xa57
	.ascii "HBMMENU_POPUP_RESTORE ((HBITMAP) 9)\0"
	.byte	0x1
	.uleb128 0xa58
	.ascii "HBMMENU_POPUP_MAXIMIZE ((HBITMAP) 10)\0"
	.byte	0x1
	.uleb128 0xa59
	.ascii "HBMMENU_POPUP_MINIMIZE ((HBITMAP) 11)\0"
	.byte	0x1
	.uleb128 0xa81
	.ascii "InsertMenuItem __MINGW_NAME_AW(InsertMenuItem)\0"
	.byte	0x1
	.uleb128 0xa82
	.ascii "GetMenuItemInfo __MINGW_NAME_AW(GetMenuItemInfo)\0"
	.byte	0x1
	.uleb128 0xa83
	.ascii "SetMenuItemInfo __MINGW_NAME_AW(SetMenuItemInfo)\0"
	.byte	0x1
	.uleb128 0xa8c
	.ascii "GMDI_USEDISABLED __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0xa8d
	.ascii "GMDI_GOINTOPOPUPS __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0xa94
	.ascii "TPM_LEFTBUTTON __MSABI_LONG(0x0000)\0"
	.byte	0x1
	.uleb128 0xa95
	.ascii "TPM_RIGHTBUTTON __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0xa96
	.ascii "TPM_LEFTALIGN __MSABI_LONG(0x0000)\0"
	.byte	0x1
	.uleb128 0xa97
	.ascii "TPM_CENTERALIGN __MSABI_LONG(0x0004)\0"
	.byte	0x1
	.uleb128 0xa98
	.ascii "TPM_RIGHTALIGN __MSABI_LONG(0x0008)\0"
	.byte	0x1
	.uleb128 0xa99
	.ascii "TPM_TOPALIGN __MSABI_LONG(0x0000)\0"
	.byte	0x1
	.uleb128 0xa9a
	.ascii "TPM_VCENTERALIGN __MSABI_LONG(0x0010)\0"
	.byte	0x1
	.uleb128 0xa9b
	.ascii "TPM_BOTTOMALIGN __MSABI_LONG(0x0020)\0"
	.byte	0x1
	.uleb128 0xa9d
	.ascii "TPM_HORIZONTAL __MSABI_LONG(0x0000)\0"
	.byte	0x1
	.uleb128 0xa9e
	.ascii "TPM_VERTICAL __MSABI_LONG(0x0040)\0"
	.byte	0x1
	.uleb128 0xa9f
	.ascii "TPM_NONOTIFY __MSABI_LONG(0x0080)\0"
	.byte	0x1
	.uleb128 0xaa0
	.ascii "TPM_RETURNCMD __MSABI_LONG(0x0100)\0"
	.byte	0x1
	.uleb128 0xaa1
	.ascii "TPM_RECURSE __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0xaa2
	.ascii "TPM_HORPOSANIMATION __MSABI_LONG(0x0400)\0"
	.byte	0x1
	.uleb128 0xaa3
	.ascii "TPM_HORNEGANIMATION __MSABI_LONG(0x0800)\0"
	.byte	0x1
	.uleb128 0xaa4
	.ascii "TPM_VERPOSANIMATION __MSABI_LONG(0x1000)\0"
	.byte	0x1
	.uleb128 0xaa5
	.ascii "TPM_VERNEGANIMATION __MSABI_LONG(0x2000)\0"
	.byte	0x1
	.uleb128 0xaa6
	.ascii "TPM_NOANIMATION __MSABI_LONG(0x4000)\0"
	.byte	0x1
	.uleb128 0xaa7
	.ascii "TPM_LAYOUTRTL __MSABI_LONG(0x8000)\0"
	.byte	0x1
	.uleb128 0xab3
	.ascii "DOF_EXECUTABLE 0x8001\0"
	.byte	0x1
	.uleb128 0xab4
	.ascii "DOF_DOCUMENT 0x8002\0"
	.byte	0x1
	.uleb128 0xab5
	.ascii "DOF_DIRECTORY 0x8003\0"
	.byte	0x1
	.uleb128 0xab6
	.ascii "DOF_MULTIPLE 0x8004\0"
	.byte	0x1
	.uleb128 0xab7
	.ascii "DOF_PROGMAN 0x0001\0"
	.byte	0x1
	.uleb128 0xab8
	.ascii "DOF_SHELLDATA 0x0002\0"
	.byte	0x1
	.uleb128 0xaba
	.ascii "DO_DROPFILE __MSABI_LONG(0x454C4946)\0"
	.byte	0x1
	.uleb128 0xabb
	.ascii "DO_PRINTFILE __MSABI_LONG(0x544E5250)\0"
	.byte	0x1
	.uleb128 0xac3
	.ascii "DT_TOP 0x00000000\0"
	.byte	0x1
	.uleb128 0xac4
	.ascii "DT_LEFT 0x00000000\0"
	.byte	0x1
	.uleb128 0xac5
	.ascii "DT_CENTER 0x00000001\0"
	.byte	0x1
	.uleb128 0xac6
	.ascii "DT_RIGHT 0x00000002\0"
	.byte	0x1
	.uleb128 0xac7
	.ascii "DT_VCENTER 0x00000004\0"
	.byte	0x1
	.uleb128 0xac8
	.ascii "DT_BOTTOM 0x00000008\0"
	.byte	0x1
	.uleb128 0xac9
	.ascii "DT_WORDBREAK 0x00000010\0"
	.byte	0x1
	.uleb128 0xaca
	.ascii "DT_SINGLELINE 0x00000020\0"
	.byte	0x1
	.uleb128 0xacb
	.ascii "DT_EXPANDTABS 0x00000040\0"
	.byte	0x1
	.uleb128 0xacc
	.ascii "DT_TABSTOP 0x00000080\0"
	.byte	0x1
	.uleb128 0xacd
	.ascii "DT_NOCLIP 0x00000100\0"
	.byte	0x1
	.uleb128 0xace
	.ascii "DT_EXTERNALLEADING 0x00000200\0"
	.byte	0x1
	.uleb128 0xacf
	.ascii "DT_CALCRECT 0x00000400\0"
	.byte	0x1
	.uleb128 0xad0
	.ascii "DT_NOPREFIX 0x00000800\0"
	.byte	0x1
	.uleb128 0xad1
	.ascii "DT_INTERNAL 0x00001000\0"
	.byte	0x1
	.uleb128 0xad3
	.ascii "DT_EDITCONTROL 0x00002000\0"
	.byte	0x1
	.uleb128 0xad4
	.ascii "DT_PATH_ELLIPSIS 0x00004000\0"
	.byte	0x1
	.uleb128 0xad5
	.ascii "DT_END_ELLIPSIS 0x00008000\0"
	.byte	0x1
	.uleb128 0xad6
	.ascii "DT_MODIFYSTRING 0x00010000\0"
	.byte	0x1
	.uleb128 0xad7
	.ascii "DT_RTLREADING 0x00020000\0"
	.byte	0x1
	.uleb128 0xad8
	.ascii "DT_WORD_ELLIPSIS 0x00040000\0"
	.byte	0x1
	.uleb128 0xad9
	.ascii "DT_NOFULLWIDTHCHARBREAK 0x00080000\0"
	.byte	0x1
	.uleb128 0xada
	.ascii "DT_HIDEPREFIX 0x00100000\0"
	.byte	0x1
	.uleb128 0xadb
	.ascii "DT_PREFIXONLY 0x00200000\0"
	.byte	0x1
	.uleb128 0xae5
	.ascii "DrawText __MINGW_NAME_AW(DrawText)\0"
	.byte	0x1
	.uleb128 0xae6
	.ascii "DrawTextEx __MINGW_NAME_AW(DrawTextEx)\0"
	.byte	0x1
	.uleb128 0xaee
	.ascii "GrayString __MINGW_NAME_AW(GrayString)\0"
	.byte	0x1
	.uleb128 0xaef
	.ascii "DrawState __MINGW_NAME_AW(DrawState)\0"
	.byte	0x1
	.uleb128 0xaf0
	.ascii "TabbedTextOut __MINGW_NAME_AW(TabbedTextOut)\0"
	.byte	0x1
	.uleb128 0xaf1
	.ascii "GetTabbedTextExtent __MINGW_NAME_AW(GetTabbedTextExtent)\0"
	.byte	0x1
	.uleb128 0xaf6
	.ascii "DST_COMPLEX 0x0000\0"
	.byte	0x1
	.uleb128 0xaf7
	.ascii "DST_TEXT 0x0001\0"
	.byte	0x1
	.uleb128 0xaf8
	.ascii "DST_PREFIXTEXT 0x0002\0"
	.byte	0x1
	.uleb128 0xaf9
	.ascii "DST_ICON 0x0003\0"
	.byte	0x1
	.uleb128 0xafa
	.ascii "DST_BITMAP 0x0004\0"
	.byte	0x1
	.uleb128 0xafc
	.ascii "DSS_NORMAL 0x0000\0"
	.byte	0x1
	.uleb128 0xafd
	.ascii "DSS_UNION 0x0010\0"
	.byte	0x1
	.uleb128 0xafe
	.ascii "DSS_DISABLED 0x0020\0"
	.byte	0x1
	.uleb128 0xaff
	.ascii "DSS_MONO 0x0080\0"
	.byte	0x1
	.uleb128 0xb00
	.ascii "DSS_HIDEPREFIX 0x0200\0"
	.byte	0x1
	.uleb128 0xb01
	.ascii "DSS_PREFIXONLY 0x0400\0"
	.byte	0x1
	.uleb128 0xb02
	.ascii "DSS_RIGHT 0x8000\0"
	.byte	0x1
	.uleb128 0xb12
	.ascii "ASFW_ANY ((DWORD)-1)\0"
	.byte	0x1
	.uleb128 0xb16
	.ascii "LSFW_LOCK 1\0"
	.byte	0x1
	.uleb128 0xb17
	.ascii "LSFW_UNLOCK 2\0"
	.byte	0x1
	.uleb128 0xb1d
	.ascii "DCX_WINDOW __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0xb1e
	.ascii "DCX_CACHE __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0xb1f
	.ascii "DCX_NORESETATTRS __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0xb20
	.ascii "DCX_CLIPCHILDREN __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0xb21
	.ascii "DCX_CLIPSIBLINGS __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0xb22
	.ascii "DCX_PARENTCLIP __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0xb23
	.ascii "DCX_EXCLUDERGN __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0xb24
	.ascii "DCX_INTERSECTRGN __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0xb25
	.ascii "DCX_EXCLUDEUPDATE __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0xb26
	.ascii "DCX_INTERSECTUPDATE __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0xb27
	.ascii "DCX_LOCKWINDOWUPDATE __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0xb29
	.ascii "DCX_VALIDATE __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0xb3b
	.ascii "RDW_INVALIDATE 0x0001\0"
	.byte	0x1
	.uleb128 0xb3c
	.ascii "RDW_INTERNALPAINT 0x0002\0"
	.byte	0x1
	.uleb128 0xb3d
	.ascii "RDW_ERASE 0x0004\0"
	.byte	0x1
	.uleb128 0xb3f
	.ascii "RDW_VALIDATE 0x0008\0"
	.byte	0x1
	.uleb128 0xb40
	.ascii "RDW_NOINTERNALPAINT 0x0010\0"
	.byte	0x1
	.uleb128 0xb41
	.ascii "RDW_NOERASE 0x0020\0"
	.byte	0x1
	.uleb128 0xb43
	.ascii "RDW_NOCHILDREN 0x0040\0"
	.byte	0x1
	.uleb128 0xb44
	.ascii "RDW_ALLCHILDREN 0x0080\0"
	.byte	0x1
	.uleb128 0xb46
	.ascii "RDW_UPDATENOW 0x0100\0"
	.byte	0x1
	.uleb128 0xb47
	.ascii "RDW_ERASENOW 0x0200\0"
	.byte	0x1
	.uleb128 0xb49
	.ascii "RDW_FRAME 0x0400\0"
	.byte	0x1
	.uleb128 0xb4a
	.ascii "RDW_NOFRAME 0x0800\0"
	.byte	0x1
	.uleb128 0xb51
	.ascii "SW_SCROLLCHILDREN 0x0001\0"
	.byte	0x1
	.uleb128 0xb52
	.ascii "SW_INVALIDATE 0x0002\0"
	.byte	0x1
	.uleb128 0xb53
	.ascii "SW_ERASE 0x0004\0"
	.byte	0x1
	.uleb128 0xb54
	.ascii "SW_SMOOTHSCROLL 0x0010\0"
	.byte	0x1
	.uleb128 0xb5e
	.ascii "ESB_ENABLE_BOTH 0x0000\0"
	.byte	0x1
	.uleb128 0xb5f
	.ascii "ESB_DISABLE_BOTH 0x0003\0"
	.byte	0x1
	.uleb128 0xb61
	.ascii "ESB_DISABLE_LEFT 0x0001\0"
	.byte	0x1
	.uleb128 0xb62
	.ascii "ESB_DISABLE_RIGHT 0x0002\0"
	.byte	0x1
	.uleb128 0xb64
	.ascii "ESB_DISABLE_UP 0x0001\0"
	.byte	0x1
	.uleb128 0xb65
	.ascii "ESB_DISABLE_DOWN 0x0002\0"
	.byte	0x1
	.uleb128 0xb67
	.ascii "ESB_DISABLE_LTUP ESB_DISABLE_LEFT\0"
	.byte	0x1
	.uleb128 0xb68
	.ascii "ESB_DISABLE_RTDN ESB_DISABLE_RIGHT\0"
	.byte	0x1
	.uleb128 0xb6b
	.ascii "SetProp __MINGW_NAME_AW(SetProp)\0"
	.byte	0x1
	.uleb128 0xb6c
	.ascii "GetProp __MINGW_NAME_AW(GetProp)\0"
	.byte	0x1
	.uleb128 0xb6d
	.ascii "RemoveProp __MINGW_NAME_AW(RemoveProp)\0"
	.byte	0x1
	.uleb128 0xb6e
	.ascii "EnumPropsEx __MINGW_NAME_AW(EnumPropsEx)\0"
	.byte	0x1
	.uleb128 0xb6f
	.ascii "EnumProps __MINGW_NAME_AW(EnumProps)\0"
	.byte	0x1
	.uleb128 0xb70
	.ascii "SetWindowText __MINGW_NAME_AW(SetWindowText)\0"
	.byte	0x1
	.uleb128 0xb71
	.ascii "GetWindowText __MINGW_NAME_AW(GetWindowText)\0"
	.byte	0x1
	.uleb128 0xb72
	.ascii "GetWindowTextLength __MINGW_NAME_AW(GetWindowTextLength)\0"
	.byte	0x1
	.uleb128 0xb89
	.ascii "HELPINFO_WINDOW 0x0001\0"
	.byte	0x1
	.uleb128 0xb8a
	.ascii "HELPINFO_MENUITEM 0x0002\0"
	.byte	0x1
	.uleb128 0xb9c
	.ascii "MB_OK __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xb9d
	.ascii "MB_OKCANCEL __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0xb9e
	.ascii "MB_ABORTRETRYIGNORE __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0xb9f
	.ascii "MB_YESNOCANCEL __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0xba0
	.ascii "MB_YESNO __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0xba1
	.ascii "MB_RETRYCANCEL __MSABI_LONG(0x00000005)\0"
	.byte	0x1
	.uleb128 0xba2
	.ascii "MB_CANCELTRYCONTINUE __MSABI_LONG(0x00000006)\0"
	.byte	0x1
	.uleb128 0xba3
	.ascii "MB_ICONHAND __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0xba4
	.ascii "MB_ICONQUESTION __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0xba5
	.ascii "MB_ICONEXCLAMATION __MSABI_LONG(0x00000030)\0"
	.byte	0x1
	.uleb128 0xba6
	.ascii "MB_ICONASTERISK __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0xba7
	.ascii "MB_USERICON __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0xba8
	.ascii "MB_ICONWARNING MB_ICONEXCLAMATION\0"
	.byte	0x1
	.uleb128 0xba9
	.ascii "MB_ICONERROR MB_ICONHAND\0"
	.byte	0x1
	.uleb128 0xbaa
	.ascii "MB_ICONINFORMATION MB_ICONASTERISK\0"
	.byte	0x1
	.uleb128 0xbab
	.ascii "MB_ICONSTOP MB_ICONHAND\0"
	.byte	0x1
	.uleb128 0xbac
	.ascii "MB_DEFBUTTON1 __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xbad
	.ascii "MB_DEFBUTTON2 __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0xbae
	.ascii "MB_DEFBUTTON3 __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0xbaf
	.ascii "MB_DEFBUTTON4 __MSABI_LONG(0x00000300)\0"
	.byte	0x1
	.uleb128 0xbb0
	.ascii "MB_APPLMODAL __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xbb1
	.ascii "MB_SYSTEMMODAL __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0xbb2
	.ascii "MB_TASKMODAL __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0xbb3
	.ascii "MB_HELP __MSABI_LONG(0x00004000)\0"
	.byte	0x1
	.uleb128 0xbb4
	.ascii "MB_NOFOCUS __MSABI_LONG(0x00008000)\0"
	.byte	0x1
	.uleb128 0xbb5
	.ascii "MB_SETFOREGROUND __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0xbb6
	.ascii "MB_DEFAULT_DESKTOP_ONLY __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0xbb7
	.ascii "MB_TOPMOST __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0xbb8
	.ascii "MB_RIGHT __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0xbb9
	.ascii "MB_RTLREADING __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0xbba
	.ascii "MB_SERVICE_NOTIFICATION __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0xbbb
	.ascii "MB_SERVICE_NOTIFICATION_NT3X __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0xbbc
	.ascii "MB_TYPEMASK __MSABI_LONG(0x0000000F)\0"
	.byte	0x1
	.uleb128 0xbbd
	.ascii "MB_ICONMASK __MSABI_LONG(0x000000F0)\0"
	.byte	0x1
	.uleb128 0xbbe
	.ascii "MB_DEFMASK __MSABI_LONG(0x00000F00)\0"
	.byte	0x1
	.uleb128 0xbbf
	.ascii "MB_MODEMASK __MSABI_LONG(0x00003000)\0"
	.byte	0x1
	.uleb128 0xbc0
	.ascii "MB_MISCMASK __MSABI_LONG(0x0000C000)\0"
	.byte	0x1
	.uleb128 0xbc2
	.ascii "MessageBox __MINGW_NAME_AW(MessageBox)\0"
	.byte	0x1
	.uleb128 0xbc3
	.ascii "MessageBoxEx __MINGW_NAME_AW(MessageBoxEx)\0"
	.byte	0x1
	.uleb128 0xbea
	.ascii "MessageBoxIndirect __MINGW_NAME_AW(MessageBoxIndirect)\0"
	.byte	0x1
	.uleb128 0xc06
	.ascii "CWP_ALL 0x0000\0"
	.byte	0x1
	.uleb128 0xc07
	.ascii "CWP_SKIPINVISIBLE 0x0001\0"
	.byte	0x1
	.uleb128 0xc08
	.ascii "CWP_SKIPDISABLED 0x0002\0"
	.byte	0x1
	.uleb128 0xc09
	.ascii "CWP_SKIPTRANSPARENT 0x0004\0"
	.byte	0x1
	.uleb128 0xc0f
	.ascii "CTLCOLOR_MSGBOX 0\0"
	.byte	0x1
	.uleb128 0xc10
	.ascii "CTLCOLOR_EDIT 1\0"
	.byte	0x1
	.uleb128 0xc11
	.ascii "CTLCOLOR_LISTBOX 2\0"
	.byte	0x1
	.uleb128 0xc12
	.ascii "CTLCOLOR_BTN 3\0"
	.byte	0x1
	.uleb128 0xc13
	.ascii "CTLCOLOR_DLG 4\0"
	.byte	0x1
	.uleb128 0xc14
	.ascii "CTLCOLOR_SCROLLBAR 5\0"
	.byte	0x1
	.uleb128 0xc15
	.ascii "CTLCOLOR_STATIC 6\0"
	.byte	0x1
	.uleb128 0xc16
	.ascii "CTLCOLOR_MAX 7\0"
	.byte	0x1
	.uleb128 0xc18
	.ascii "COLOR_SCROLLBAR 0\0"
	.byte	0x1
	.uleb128 0xc19
	.ascii "COLOR_BACKGROUND 1\0"
	.byte	0x1
	.uleb128 0xc1a
	.ascii "COLOR_ACTIVECAPTION 2\0"
	.byte	0x1
	.uleb128 0xc1b
	.ascii "COLOR_INACTIVECAPTION 3\0"
	.byte	0x1
	.uleb128 0xc1c
	.ascii "COLOR_MENU 4\0"
	.byte	0x1
	.uleb128 0xc1d
	.ascii "COLOR_WINDOW 5\0"
	.byte	0x1
	.uleb128 0xc1e
	.ascii "COLOR_WINDOWFRAME 6\0"
	.byte	0x1
	.uleb128 0xc1f
	.ascii "COLOR_MENUTEXT 7\0"
	.byte	0x1
	.uleb128 0xc20
	.ascii "COLOR_WINDOWTEXT 8\0"
	.byte	0x1
	.uleb128 0xc21
	.ascii "COLOR_CAPTIONTEXT 9\0"
	.byte	0x1
	.uleb128 0xc22
	.ascii "COLOR_ACTIVEBORDER 10\0"
	.byte	0x1
	.uleb128 0xc23
	.ascii "COLOR_INACTIVEBORDER 11\0"
	.byte	0x1
	.uleb128 0xc24
	.ascii "COLOR_APPWORKSPACE 12\0"
	.byte	0x1
	.uleb128 0xc25
	.ascii "COLOR_HIGHLIGHT 13\0"
	.byte	0x1
	.uleb128 0xc26
	.ascii "COLOR_HIGHLIGHTTEXT 14\0"
	.byte	0x1
	.uleb128 0xc27
	.ascii "COLOR_BTNFACE 15\0"
	.byte	0x1
	.uleb128 0xc28
	.ascii "COLOR_BTNSHADOW 16\0"
	.byte	0x1
	.uleb128 0xc29
	.ascii "COLOR_GRAYTEXT 17\0"
	.byte	0x1
	.uleb128 0xc2a
	.ascii "COLOR_BTNTEXT 18\0"
	.byte	0x1
	.uleb128 0xc2b
	.ascii "COLOR_INACTIVECAPTIONTEXT 19\0"
	.byte	0x1
	.uleb128 0xc2c
	.ascii "COLOR_BTNHIGHLIGHT 20\0"
	.byte	0x1
	.uleb128 0xc2e
	.ascii "COLOR_3DDKSHADOW 21\0"
	.byte	0x1
	.uleb128 0xc2f
	.ascii "COLOR_3DLIGHT 22\0"
	.byte	0x1
	.uleb128 0xc30
	.ascii "COLOR_INFOTEXT 23\0"
	.byte	0x1
	.uleb128 0xc31
	.ascii "COLOR_INFOBK 24\0"
	.byte	0x1
	.uleb128 0xc33
	.ascii "COLOR_HOTLIGHT 26\0"
	.byte	0x1
	.uleb128 0xc34
	.ascii "COLOR_GRADIENTACTIVECAPTION 27\0"
	.byte	0x1
	.uleb128 0xc35
	.ascii "COLOR_GRADIENTINACTIVECAPTION 28\0"
	.byte	0x1
	.uleb128 0xc36
	.ascii "COLOR_MENUHILIGHT 29\0"
	.byte	0x1
	.uleb128 0xc37
	.ascii "COLOR_MENUBAR 30\0"
	.byte	0x1
	.uleb128 0xc39
	.ascii "COLOR_DESKTOP COLOR_BACKGROUND\0"
	.byte	0x1
	.uleb128 0xc3a
	.ascii "COLOR_3DFACE COLOR_BTNFACE\0"
	.byte	0x1
	.uleb128 0xc3b
	.ascii "COLOR_3DSHADOW COLOR_BTNSHADOW\0"
	.byte	0x1
	.uleb128 0xc3c
	.ascii "COLOR_3DHIGHLIGHT COLOR_BTNHIGHLIGHT\0"
	.byte	0x1
	.uleb128 0xc3d
	.ascii "COLOR_3DHILIGHT COLOR_BTNHIGHLIGHT\0"
	.byte	0x1
	.uleb128 0xc3e
	.ascii "COLOR_BTNHILIGHT COLOR_BTNHIGHLIGHT\0"
	.byte	0x1
	.uleb128 0xc57
	.ascii "GetWindowLong __MINGW_NAME_AW(GetWindowLong)\0"
	.byte	0x1
	.uleb128 0xc58
	.ascii "SetWindowLong __MINGW_NAME_AW(SetWindowLong)\0"
	.byte	0x1
	.uleb128 0xc63
	.ascii "GetWindowLongPtr __MINGW_NAME_AW(GetWindowLongPtr)\0"
	.byte	0x1
	.uleb128 0xc64
	.ascii "SetWindowLongPtr __MINGW_NAME_AW(SetWindowLongPtr)\0"
	.byte	0x1
	.uleb128 0xc75
	.ascii "GetClassLong __MINGW_NAME_AW(GetClassLong)\0"
	.byte	0x1
	.uleb128 0xc76
	.ascii "SetClassLong __MINGW_NAME_AW(SetClassLong)\0"
	.byte	0x1
	.uleb128 0xc81
	.ascii "GetClassLongPtr __MINGW_NAME_AW(GetClassLongPtr)\0"
	.byte	0x1
	.uleb128 0xc82
	.ascii "SetClassLongPtr __MINGW_NAME_AW(SetClassLongPtr)\0"
	.byte	0x1
	.uleb128 0xc93
	.ascii "FindWindow __MINGW_NAME_AW(FindWindow)\0"
	.byte	0x1
	.uleb128 0xc94
	.ascii "FindWindowEx __MINGW_NAME_AW(FindWindowEx)\0"
	.byte	0x1
	.uleb128 0xc95
	.ascii "GetClassName __MINGW_NAME_AW(GetClassName)\0"
	.byte	0x1
	.uleb128 0xca7
	.ascii "EnumTaskWindows(hTask,lpfn,lParam) EnumThreadWindows(HandleToUlong(hTask),lpfn,lParam)\0"
	.byte	0x1
	.uleb128 0xcad
	.ascii "GetNextWindow(hWnd,wCmd) GetWindow(hWnd,wCmd)\0"
	.byte	0x1
	.uleb128 0xcae
	.ascii "GetSysModalWindow() (NULL)\0"
	.byte	0x1
	.uleb128 0xcaf
	.ascii "SetSysModalWindow(hWnd) (NULL)\0"
	.byte	0x1
	.uleb128 0xcb4
	.ascii "GetWindowTask(hWnd) ((HANDLE)(DWORD_PTR)GetWindowThreadProcessId(hWnd,NULL))\0"
	.byte	0x1
	.uleb128 0xcb8
	.ascii "GW_HWNDFIRST 0\0"
	.byte	0x1
	.uleb128 0xcb9
	.ascii "GW_HWNDLAST 1\0"
	.byte	0x1
	.uleb128 0xcba
	.ascii "GW_HWNDNEXT 2\0"
	.byte	0x1
	.uleb128 0xcbb
	.ascii "GW_HWNDPREV 3\0"
	.byte	0x1
	.uleb128 0xcbc
	.ascii "GW_OWNER 4\0"
	.byte	0x1
	.uleb128 0xcbd
	.ascii "GW_CHILD 5\0"
	.byte	0x1
	.uleb128 0xcbe
	.ascii "GW_ENABLEDPOPUP 6\0"
	.byte	0x1
	.uleb128 0xcbf
	.ascii "GW_MAX 6\0"
	.byte	0x1
	.uleb128 0xcc5
	.ascii "SetWindowsHook __MINGW_NAME_AW(SetWindowsHook)\0"
	.byte	0x1
	.uleb128 0xcc6
	.ascii "SetWindowsHookEx __MINGW_NAME_AW(SetWindowsHookEx)\0"
	.byte	0x1
	.uleb128 0xccf
	.ascii "DefHookProc(nCode,wParam,lParam,phhk) CallNextHookEx(*phhk,nCode,wParam,lParam)\0"
	.byte	0x1
	.uleb128 0xcd4
	.ascii "MF_INSERT __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xcd5
	.ascii "MF_CHANGE __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0xcd6
	.ascii "MF_APPEND __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0xcd7
	.ascii "MF_DELETE __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0xcd8
	.ascii "MF_REMOVE __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0xcd9
	.ascii "MF_BYCOMMAND __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xcda
	.ascii "MF_BYPOSITION __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0xcdb
	.ascii "MF_SEPARATOR __MSABI_LONG(0x00000800)\0"
	.byte	0x1
	.uleb128 0xcdc
	.ascii "MF_ENABLED __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xcdd
	.ascii "MF_GRAYED __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0xcde
	.ascii "MF_DISABLED __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0xcdf
	.ascii "MF_UNCHECKED __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xce0
	.ascii "MF_CHECKED __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0xce1
	.ascii "MF_USECHECKBITMAPS __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0xce2
	.ascii "MF_STRING __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xce3
	.ascii "MF_BITMAP __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0xce4
	.ascii "MF_OWNERDRAW __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0xce5
	.ascii "MF_POPUP __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0xce6
	.ascii "MF_MENUBARBREAK __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0xce7
	.ascii "MF_MENUBREAK __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0xce8
	.ascii "MF_UNHILITE __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xce9
	.ascii "MF_HILITE __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0xcea
	.ascii "MF_DEFAULT __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0xceb
	.ascii "MF_SYSMENU __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0xcec
	.ascii "MF_HELP __MSABI_LONG(0x00004000)\0"
	.byte	0x1
	.uleb128 0xced
	.ascii "MF_RIGHTJUSTIFY __MSABI_LONG(0x00004000)\0"
	.byte	0x1
	.uleb128 0xcee
	.ascii "MF_MOUSESELECT __MSABI_LONG(0x00008000)\0"
	.byte	0x1
	.uleb128 0xcef
	.ascii "MF_END __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0xcf1
	.ascii "MFT_STRING MF_STRING\0"
	.byte	0x1
	.uleb128 0xcf2
	.ascii "MFT_BITMAP MF_BITMAP\0"
	.byte	0x1
	.uleb128 0xcf3
	.ascii "MFT_MENUBARBREAK MF_MENUBARBREAK\0"
	.byte	0x1
	.uleb128 0xcf4
	.ascii "MFT_MENUBREAK MF_MENUBREAK\0"
	.byte	0x1
	.uleb128 0xcf5
	.ascii "MFT_OWNERDRAW MF_OWNERDRAW\0"
	.byte	0x1
	.uleb128 0xcf6
	.ascii "MFT_RADIOCHECK __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0xcf7
	.ascii "MFT_SEPARATOR MF_SEPARATOR\0"
	.byte	0x1
	.uleb128 0xcf8
	.ascii "MFT_RIGHTORDER __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0xcf9
	.ascii "MFT_RIGHTJUSTIFY MF_RIGHTJUSTIFY\0"
	.byte	0x1
	.uleb128 0xcfb
	.ascii "MFS_GRAYED __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0xcfc
	.ascii "MFS_DISABLED MFS_GRAYED\0"
	.byte	0x1
	.uleb128 0xcfd
	.ascii "MFS_CHECKED MF_CHECKED\0"
	.byte	0x1
	.uleb128 0xcfe
	.ascii "MFS_HILITE MF_HILITE\0"
	.byte	0x1
	.uleb128 0xcff
	.ascii "MFS_ENABLED MF_ENABLED\0"
	.byte	0x1
	.uleb128 0xd00
	.ascii "MFS_UNCHECKED MF_UNCHECKED\0"
	.byte	0x1
	.uleb128 0xd01
	.ascii "MFS_UNHILITE MF_UNHILITE\0"
	.byte	0x1
	.uleb128 0xd02
	.ascii "MFS_DEFAULT MF_DEFAULT\0"
	.byte	0x1
	.uleb128 0xd10
	.ascii "MF_END __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0xd15
	.ascii "SC_SIZE 0xF000\0"
	.byte	0x1
	.uleb128 0xd16
	.ascii "SC_MOVE 0xF010\0"
	.byte	0x1
	.uleb128 0xd17
	.ascii "SC_MINIMIZE 0xF020\0"
	.byte	0x1
	.uleb128 0xd18
	.ascii "SC_MAXIMIZE 0xF030\0"
	.byte	0x1
	.uleb128 0xd19
	.ascii "SC_NEXTWINDOW 0xF040\0"
	.byte	0x1
	.uleb128 0xd1a
	.ascii "SC_PREVWINDOW 0xF050\0"
	.byte	0x1
	.uleb128 0xd1b
	.ascii "SC_CLOSE 0xF060\0"
	.byte	0x1
	.uleb128 0xd1c
	.ascii "SC_VSCROLL 0xF070\0"
	.byte	0x1
	.uleb128 0xd1d
	.ascii "SC_HSCROLL 0xF080\0"
	.byte	0x1
	.uleb128 0xd1e
	.ascii "SC_MOUSEMENU 0xF090\0"
	.byte	0x1
	.uleb128 0xd1f
	.ascii "SC_KEYMENU 0xF100\0"
	.byte	0x1
	.uleb128 0xd20
	.ascii "SC_ARRANGE 0xF110\0"
	.byte	0x1
	.uleb128 0xd21
	.ascii "SC_RESTORE 0xF120\0"
	.byte	0x1
	.uleb128 0xd22
	.ascii "SC_TASKLIST 0xF130\0"
	.byte	0x1
	.uleb128 0xd23
	.ascii "SC_SCREENSAVE 0xF140\0"
	.byte	0x1
	.uleb128 0xd24
	.ascii "SC_HOTKEY 0xF150\0"
	.byte	0x1
	.uleb128 0xd25
	.ascii "SC_DEFAULT 0xF160\0"
	.byte	0x1
	.uleb128 0xd26
	.ascii "SC_MONITORPOWER 0xF170\0"
	.byte	0x1
	.uleb128 0xd27
	.ascii "SC_CONTEXTHELP 0xF180\0"
	.byte	0x1
	.uleb128 0xd28
	.ascii "SC_SEPARATOR 0xF00F\0"
	.byte	0x1
	.uleb128 0xd29
	.ascii "SC_ICON SC_MINIMIZE\0"
	.byte	0x1
	.uleb128 0xd2a
	.ascii "SC_ZOOM SC_MAXIMIZE\0"
	.byte	0x1
	.uleb128 0xd2d
	.ascii "LoadBitmap __MINGW_NAME_AW(LoadBitmap)\0"
	.byte	0x1
	.uleb128 0xd2e
	.ascii "LoadCursor __MINGW_NAME_AW(LoadCursor)\0"
	.byte	0x1
	.uleb128 0xd2f
	.ascii "LoadCursorFromFile __MINGW_NAME_AW(LoadCursorFromFile)\0"
	.byte	0x1
	.uleb128 0xd3a
	.ascii "CopyCursor(pcur) ((HCURSOR)CopyIcon((HICON)(pcur)))\0"
	.byte	0x1
	.uleb128 0xd3c
	.ascii "IDC_ARROW MAKEINTRESOURCE(32512)\0"
	.byte	0x1
	.uleb128 0xd3d
	.ascii "IDC_IBEAM MAKEINTRESOURCE(32513)\0"
	.byte	0x1
	.uleb128 0xd3e
	.ascii "IDC_WAIT MAKEINTRESOURCE(32514)\0"
	.byte	0x1
	.uleb128 0xd3f
	.ascii "IDC_CROSS MAKEINTRESOURCE(32515)\0"
	.byte	0x1
	.uleb128 0xd40
	.ascii "IDC_UPARROW MAKEINTRESOURCE(32516)\0"
	.byte	0x1
	.uleb128 0xd41
	.ascii "IDC_SIZE MAKEINTRESOURCE(32640)\0"
	.byte	0x1
	.uleb128 0xd42
	.ascii "IDC_ICON MAKEINTRESOURCE(32641)\0"
	.byte	0x1
	.uleb128 0xd43
	.ascii "IDC_SIZENWSE MAKEINTRESOURCE(32642)\0"
	.byte	0x1
	.uleb128 0xd44
	.ascii "IDC_SIZENESW MAKEINTRESOURCE(32643)\0"
	.byte	0x1
	.uleb128 0xd45
	.ascii "IDC_SIZEWE MAKEINTRESOURCE(32644)\0"
	.byte	0x1
	.uleb128 0xd46
	.ascii "IDC_SIZENS MAKEINTRESOURCE(32645)\0"
	.byte	0x1
	.uleb128 0xd47
	.ascii "IDC_SIZEALL MAKEINTRESOURCE(32646)\0"
	.byte	0x1
	.uleb128 0xd48
	.ascii "IDC_NO MAKEINTRESOURCE(32648)\0"
	.byte	0x1
	.uleb128 0xd49
	.ascii "IDC_HAND MAKEINTRESOURCE(32649)\0"
	.byte	0x1
	.uleb128 0xd4a
	.ascii "IDC_APPSTARTING MAKEINTRESOURCE(32650)\0"
	.byte	0x1
	.uleb128 0xd4b
	.ascii "IDC_HELP MAKEINTRESOURCE(32651)\0"
	.byte	0x1
	.uleb128 0xd58
	.ascii "LoadIcon __MINGW_NAME_AW(LoadIcon)\0"
	.byte	0x1
	.uleb128 0xd59
	.ascii "PrivateExtractIcons __MINGW_NAME_AW(PrivateExtractIcons)\0"
	.byte	0x1
	.uleb128 0xd70
	.ascii "IMAGE_BITMAP 0\0"
	.byte	0x1
	.uleb128 0xd71
	.ascii "IMAGE_ICON 1\0"
	.byte	0x1
	.uleb128 0xd72
	.ascii "IMAGE_CURSOR 2\0"
	.byte	0x1
	.uleb128 0xd73
	.ascii "IMAGE_ENHMETAFILE 3\0"
	.byte	0x1
	.uleb128 0xd75
	.ascii "LR_DEFAULTCOLOR 0x0000\0"
	.byte	0x1
	.uleb128 0xd76
	.ascii "LR_MONOCHROME 0x0001\0"
	.byte	0x1
	.uleb128 0xd77
	.ascii "LR_COLOR 0x0002\0"
	.byte	0x1
	.uleb128 0xd78
	.ascii "LR_COPYRETURNORG 0x0004\0"
	.byte	0x1
	.uleb128 0xd79
	.ascii "LR_COPYDELETEORG 0x0008\0"
	.byte	0x1
	.uleb128 0xd7a
	.ascii "LR_LOADFROMFILE 0x0010\0"
	.byte	0x1
	.uleb128 0xd7b
	.ascii "LR_LOADTRANSPARENT 0x0020\0"
	.byte	0x1
	.uleb128 0xd7c
	.ascii "LR_DEFAULTSIZE 0x0040\0"
	.byte	0x1
	.uleb128 0xd7d
	.ascii "LR_VGACOLOR 0x0080\0"
	.byte	0x1
	.uleb128 0xd7e
	.ascii "LR_LOADMAP3DCOLORS 0x1000\0"
	.byte	0x1
	.uleb128 0xd7f
	.ascii "LR_CREATEDIBSECTION 0x2000\0"
	.byte	0x1
	.uleb128 0xd80
	.ascii "LR_COPYFROMRESOURCE 0x4000\0"
	.byte	0x1
	.uleb128 0xd81
	.ascii "LR_SHARED 0x8000\0"
	.byte	0x1
	.uleb128 0xd83
	.ascii "LoadImage __MINGW_NAME_AW(LoadImage)\0"
	.byte	0x1
	.uleb128 0xd89
	.ascii "DI_MASK 0x0001\0"
	.byte	0x1
	.uleb128 0xd8a
	.ascii "DI_IMAGE 0x0002\0"
	.byte	0x1
	.uleb128 0xd8b
	.ascii "DI_NORMAL 0x0003\0"
	.byte	0x1
	.uleb128 0xd8c
	.ascii "DI_COMPAT 0x0004\0"
	.byte	0x1
	.uleb128 0xd8d
	.ascii "DI_DEFAULTSIZE 0x0008\0"
	.byte	0x1
	.uleb128 0xd8e
	.ascii "DI_NOMIRROR 0x0010\0"
	.byte	0x1
	.uleb128 0xd95
	.ascii "RES_ICON 1\0"
	.byte	0x1
	.uleb128 0xd96
	.ascii "RES_CURSOR 2\0"
	.byte	0x1
	.uleb128 0xdda
	.ascii "ORD_LANGDRIVER 1\0"
	.byte	0x1
	.uleb128 0xde6
	.ascii "IDI_APPLICATION MAKEINTRESOURCE(32512)\0"
	.byte	0x1
	.uleb128 0xde7
	.ascii "IDI_HAND MAKEINTRESOURCE(32513)\0"
	.byte	0x1
	.uleb128 0xde8
	.ascii "IDI_QUESTION MAKEINTRESOURCE(32514)\0"
	.byte	0x1
	.uleb128 0xde9
	.ascii "IDI_EXCLAMATION MAKEINTRESOURCE(32515)\0"
	.byte	0x1
	.uleb128 0xdea
	.ascii "IDI_ASTERISK MAKEINTRESOURCE(32516)\0"
	.byte	0x1
	.uleb128 0xdeb
	.ascii "IDI_WINLOGO MAKEINTRESOURCE(32517)\0"
	.byte	0x1
	.uleb128 0xdee
	.ascii "IDI_WARNING IDI_EXCLAMATION\0"
	.byte	0x1
	.uleb128 0xdef
	.ascii "IDI_ERROR IDI_HAND\0"
	.byte	0x1
	.uleb128 0xdf0
	.ascii "IDI_INFORMATION IDI_ASTERISK\0"
	.byte	0x1
	.uleb128 0xdf3
	.ascii "IDOK 1\0"
	.byte	0x1
	.uleb128 0xdf4
	.ascii "IDCANCEL 2\0"
	.byte	0x1
	.uleb128 0xdf5
	.ascii "IDABORT 3\0"
	.byte	0x1
	.uleb128 0xdf6
	.ascii "IDRETRY 4\0"
	.byte	0x1
	.uleb128 0xdf7
	.ascii "IDIGNORE 5\0"
	.byte	0x1
	.uleb128 0xdf8
	.ascii "IDYES 6\0"
	.byte	0x1
	.uleb128 0xdf9
	.ascii "IDNO 7\0"
	.byte	0x1
	.uleb128 0xdfa
	.ascii "IDCLOSE 8\0"
	.byte	0x1
	.uleb128 0xdfb
	.ascii "IDHELP 9\0"
	.byte	0x1
	.uleb128 0xdfc
	.ascii "IDTRYAGAIN 10\0"
	.byte	0x1
	.uleb128 0xdfd
	.ascii "IDCONTINUE 11\0"
	.byte	0x1
	.uleb128 0xe00
	.ascii "IDTIMEOUT 32000\0"
	.byte	0x1
	.uleb128 0xe06
	.ascii "ES_LEFT __MSABI_LONG(0x0000)\0"
	.byte	0x1
	.uleb128 0xe07
	.ascii "ES_CENTER __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0xe08
	.ascii "ES_RIGHT __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0xe09
	.ascii "ES_MULTILINE __MSABI_LONG(0x0004)\0"
	.byte	0x1
	.uleb128 0xe0a
	.ascii "ES_UPPERCASE __MSABI_LONG(0x0008)\0"
	.byte	0x1
	.uleb128 0xe0b
	.ascii "ES_LOWERCASE __MSABI_LONG(0x0010)\0"
	.byte	0x1
	.uleb128 0xe0c
	.ascii "ES_PASSWORD __MSABI_LONG(0x0020)\0"
	.byte	0x1
	.uleb128 0xe0d
	.ascii "ES_AUTOVSCROLL __MSABI_LONG(0x0040)\0"
	.byte	0x1
	.uleb128 0xe0e
	.ascii "ES_AUTOHSCROLL __MSABI_LONG(0x0080)\0"
	.byte	0x1
	.uleb128 0xe0f
	.ascii "ES_NOHIDESEL __MSABI_LONG(0x0100)\0"
	.byte	0x1
	.uleb128 0xe10
	.ascii "ES_OEMCONVERT __MSABI_LONG(0x0400)\0"
	.byte	0x1
	.uleb128 0xe11
	.ascii "ES_READONLY __MSABI_LONG(0x0800)\0"
	.byte	0x1
	.uleb128 0xe12
	.ascii "ES_WANTRETURN __MSABI_LONG(0x1000)\0"
	.byte	0x1
	.uleb128 0xe13
	.ascii "ES_NUMBER __MSABI_LONG(0x2000)\0"
	.byte	0x1
	.uleb128 0xe16
	.ascii "EN_SETFOCUS 0x0100\0"
	.byte	0x1
	.uleb128 0xe17
	.ascii "EN_KILLFOCUS 0x0200\0"
	.byte	0x1
	.uleb128 0xe18
	.ascii "EN_CHANGE 0x0300\0"
	.byte	0x1
	.uleb128 0xe19
	.ascii "EN_UPDATE 0x0400\0"
	.byte	0x1
	.uleb128 0xe1a
	.ascii "EN_ERRSPACE 0x0500\0"
	.byte	0x1
	.uleb128 0xe1b
	.ascii "EN_MAXTEXT 0x0501\0"
	.byte	0x1
	.uleb128 0xe1c
	.ascii "EN_HSCROLL 0x0601\0"
	.byte	0x1
	.uleb128 0xe1d
	.ascii "EN_VSCROLL 0x0602\0"
	.byte	0x1
	.uleb128 0xe1e
	.ascii "EN_ALIGN_LTR_EC 0x0700\0"
	.byte	0x1
	.uleb128 0xe1f
	.ascii "EN_ALIGN_RTL_EC 0x0701\0"
	.byte	0x1
	.uleb128 0xe21
	.ascii "EC_LEFTMARGIN 0x0001\0"
	.byte	0x1
	.uleb128 0xe22
	.ascii "EC_RIGHTMARGIN 0x0002\0"
	.byte	0x1
	.uleb128 0xe23
	.ascii "EC_USEFONTINFO 0xffff\0"
	.byte	0x1
	.uleb128 0xe25
	.ascii "EMSIS_COMPOSITIONSTRING 0x0001\0"
	.byte	0x1
	.uleb128 0xe27
	.ascii "EIMES_GETCOMPSTRATONCE 0x0001\0"
	.byte	0x1
	.uleb128 0xe28
	.ascii "EIMES_CANCELCOMPSTRINFOCUS 0x0002\0"
	.byte	0x1
	.uleb128 0xe29
	.ascii "EIMES_COMPLETECOMPSTRKILLFOCUS 0x0004\0"
	.byte	0x1
	.uleb128 0xe2d
	.ascii "EM_GETSEL 0x00B0\0"
	.byte	0x1
	.uleb128 0xe2e
	.ascii "EM_SETSEL 0x00B1\0"
	.byte	0x1
	.uleb128 0xe2f
	.ascii "EM_GETRECT 0x00B2\0"
	.byte	0x1
	.uleb128 0xe30
	.ascii "EM_SETRECT 0x00B3\0"
	.byte	0x1
	.uleb128 0xe31
	.ascii "EM_SETRECTNP 0x00B4\0"
	.byte	0x1
	.uleb128 0xe32
	.ascii "EM_SCROLL 0x00B5\0"
	.byte	0x1
	.uleb128 0xe33
	.ascii "EM_LINESCROLL 0x00B6\0"
	.byte	0x1
	.uleb128 0xe34
	.ascii "EM_SCROLLCARET 0x00B7\0"
	.byte	0x1
	.uleb128 0xe35
	.ascii "EM_GETMODIFY 0x00B8\0"
	.byte	0x1
	.uleb128 0xe36
	.ascii "EM_SETMODIFY 0x00B9\0"
	.byte	0x1
	.uleb128 0xe37
	.ascii "EM_GETLINECOUNT 0x00BA\0"
	.byte	0x1
	.uleb128 0xe38
	.ascii "EM_LINEINDEX 0x00BB\0"
	.byte	0x1
	.uleb128 0xe39
	.ascii "EM_SETHANDLE 0x00BC\0"
	.byte	0x1
	.uleb128 0xe3a
	.ascii "EM_GETHANDLE 0x00BD\0"
	.byte	0x1
	.uleb128 0xe3b
	.ascii "EM_GETTHUMB 0x00BE\0"
	.byte	0x1
	.uleb128 0xe3c
	.ascii "EM_LINELENGTH 0x00C1\0"
	.byte	0x1
	.uleb128 0xe3d
	.ascii "EM_REPLACESEL 0x00C2\0"
	.byte	0x1
	.uleb128 0xe3e
	.ascii "EM_GETLINE 0x00C4\0"
	.byte	0x1
	.uleb128 0xe3f
	.ascii "EM_LIMITTEXT 0x00C5\0"
	.byte	0x1
	.uleb128 0xe40
	.ascii "EM_CANUNDO 0x00C6\0"
	.byte	0x1
	.uleb128 0xe41
	.ascii "EM_UNDO 0x00C7\0"
	.byte	0x1
	.uleb128 0xe42
	.ascii "EM_FMTLINES 0x00C8\0"
	.byte	0x1
	.uleb128 0xe43
	.ascii "EM_LINEFROMCHAR 0x00C9\0"
	.byte	0x1
	.uleb128 0xe44
	.ascii "EM_SETTABSTOPS 0x00CB\0"
	.byte	0x1
	.uleb128 0xe45
	.ascii "EM_SETPASSWORDCHAR 0x00CC\0"
	.byte	0x1
	.uleb128 0xe46
	.ascii "EM_EMPTYUNDOBUFFER 0x00CD\0"
	.byte	0x1
	.uleb128 0xe47
	.ascii "EM_GETFIRSTVISIBLELINE 0x00CE\0"
	.byte	0x1
	.uleb128 0xe48
	.ascii "EM_SETREADONLY 0x00CF\0"
	.byte	0x1
	.uleb128 0xe49
	.ascii "EM_SETWORDBREAKPROC 0x00D0\0"
	.byte	0x1
	.uleb128 0xe4a
	.ascii "EM_GETWORDBREAKPROC 0x00D1\0"
	.byte	0x1
	.uleb128 0xe4b
	.ascii "EM_GETPASSWORDCHAR 0x00D2\0"
	.byte	0x1
	.uleb128 0xe4c
	.ascii "EM_SETMARGINS 0x00D3\0"
	.byte	0x1
	.uleb128 0xe4d
	.ascii "EM_GETMARGINS 0x00D4\0"
	.byte	0x1
	.uleb128 0xe4e
	.ascii "EM_SETLIMITTEXT EM_LIMITTEXT\0"
	.byte	0x1
	.uleb128 0xe4f
	.ascii "EM_GETLIMITTEXT 0x00D5\0"
	.byte	0x1
	.uleb128 0xe50
	.ascii "EM_POSFROMCHAR 0x00D6\0"
	.byte	0x1
	.uleb128 0xe51
	.ascii "EM_CHARFROMPOS 0x00D7\0"
	.byte	0x1
	.uleb128 0xe52
	.ascii "EM_SETIMESTATUS 0x00D8\0"
	.byte	0x1
	.uleb128 0xe53
	.ascii "EM_GETIMESTATUS 0x00D9\0"
	.byte	0x1
	.uleb128 0xe56
	.ascii "WB_LEFT 0\0"
	.byte	0x1
	.uleb128 0xe57
	.ascii "WB_RIGHT 1\0"
	.byte	0x1
	.uleb128 0xe58
	.ascii "WB_ISDELIMITER 2\0"
	.byte	0x1
	.uleb128 0xe5a
	.ascii "BS_PUSHBUTTON __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xe5b
	.ascii "BS_DEFPUSHBUTTON __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0xe5c
	.ascii "BS_CHECKBOX __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0xe5d
	.ascii "BS_AUTOCHECKBOX __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0xe5e
	.ascii "BS_RADIOBUTTON __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0xe5f
	.ascii "BS_3STATE __MSABI_LONG(0x00000005)\0"
	.byte	0x1
	.uleb128 0xe60
	.ascii "BS_AUTO3STATE __MSABI_LONG(0x00000006)\0"
	.byte	0x1
	.uleb128 0xe61
	.ascii "BS_GROUPBOX __MSABI_LONG(0x00000007)\0"
	.byte	0x1
	.uleb128 0xe62
	.ascii "BS_USERBUTTON __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0xe63
	.ascii "BS_AUTORADIOBUTTON __MSABI_LONG(0x00000009)\0"
	.byte	0x1
	.uleb128 0xe64
	.ascii "BS_PUSHBOX __MSABI_LONG(0x0000000A)\0"
	.byte	0x1
	.uleb128 0xe65
	.ascii "BS_OWNERDRAW __MSABI_LONG(0x0000000B)\0"
	.byte	0x1
	.uleb128 0xe66
	.ascii "BS_TYPEMASK __MSABI_LONG(0x0000000F)\0"
	.byte	0x1
	.uleb128 0xe67
	.ascii "BS_LEFTTEXT __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0xe68
	.ascii "BS_TEXT __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xe69
	.ascii "BS_ICON __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0xe6a
	.ascii "BS_BITMAP __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0xe6b
	.ascii "BS_LEFT __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0xe6c
	.ascii "BS_RIGHT __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0xe6d
	.ascii "BS_CENTER __MSABI_LONG(0x00000300)\0"
	.byte	0x1
	.uleb128 0xe6e
	.ascii "BS_TOP __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0xe6f
	.ascii "BS_BOTTOM __MSABI_LONG(0x00000800)\0"
	.byte	0x1
	.uleb128 0xe70
	.ascii "BS_VCENTER __MSABI_LONG(0x00000C00)\0"
	.byte	0x1
	.uleb128 0xe71
	.ascii "BS_PUSHLIKE __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0xe72
	.ascii "BS_MULTILINE __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0xe73
	.ascii "BS_NOTIFY __MSABI_LONG(0x00004000)\0"
	.byte	0x1
	.uleb128 0xe74
	.ascii "BS_FLAT __MSABI_LONG(0x00008000)\0"
	.byte	0x1
	.uleb128 0xe75
	.ascii "BS_RIGHTBUTTON BS_LEFTTEXT\0"
	.byte	0x1
	.uleb128 0xe77
	.ascii "BN_CLICKED 0\0"
	.byte	0x1
	.uleb128 0xe78
	.ascii "BN_PAINT 1\0"
	.byte	0x1
	.uleb128 0xe79
	.ascii "BN_HILITE 2\0"
	.byte	0x1
	.uleb128 0xe7a
	.ascii "BN_UNHILITE 3\0"
	.byte	0x1
	.uleb128 0xe7b
	.ascii "BN_DISABLE 4\0"
	.byte	0x1
	.uleb128 0xe7c
	.ascii "BN_DOUBLECLICKED 5\0"
	.byte	0x1
	.uleb128 0xe7d
	.ascii "BN_PUSHED BN_HILITE\0"
	.byte	0x1
	.uleb128 0xe7e
	.ascii "BN_UNPUSHED BN_UNHILITE\0"
	.byte	0x1
	.uleb128 0xe7f
	.ascii "BN_DBLCLK BN_DOUBLECLICKED\0"
	.byte	0x1
	.uleb128 0xe80
	.ascii "BN_SETFOCUS 6\0"
	.byte	0x1
	.uleb128 0xe81
	.ascii "BN_KILLFOCUS 7\0"
	.byte	0x1
	.uleb128 0xe83
	.ascii "BM_GETCHECK 0x00F0\0"
	.byte	0x1
	.uleb128 0xe84
	.ascii "BM_SETCHECK 0x00F1\0"
	.byte	0x1
	.uleb128 0xe85
	.ascii "BM_GETSTATE 0x00F2\0"
	.byte	0x1
	.uleb128 0xe86
	.ascii "BM_SETSTATE 0x00F3\0"
	.byte	0x1
	.uleb128 0xe87
	.ascii "BM_SETSTYLE 0x00F4\0"
	.byte	0x1
	.uleb128 0xe88
	.ascii "BM_CLICK 0x00F5\0"
	.byte	0x1
	.uleb128 0xe89
	.ascii "BM_GETIMAGE 0x00F6\0"
	.byte	0x1
	.uleb128 0xe8a
	.ascii "BM_SETIMAGE 0x00F7\0"
	.byte	0x1
	.uleb128 0xe8c
	.ascii "BST_UNCHECKED 0x0000\0"
	.byte	0x1
	.uleb128 0xe8d
	.ascii "BST_CHECKED 0x0001\0"
	.byte	0x1
	.uleb128 0xe8e
	.ascii "BST_INDETERMINATE 0x0002\0"
	.byte	0x1
	.uleb128 0xe8f
	.ascii "BST_PUSHED 0x0004\0"
	.byte	0x1
	.uleb128 0xe90
	.ascii "BST_FOCUS 0x0008\0"
	.byte	0x1
	.uleb128 0xe92
	.ascii "SS_LEFT __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xe93
	.ascii "SS_CENTER __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0xe94
	.ascii "SS_RIGHT __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0xe95
	.ascii "SS_ICON __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0xe96
	.ascii "SS_BLACKRECT __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0xe97
	.ascii "SS_GRAYRECT __MSABI_LONG(0x00000005)\0"
	.byte	0x1
	.uleb128 0xe98
	.ascii "SS_WHITERECT __MSABI_LONG(0x00000006)\0"
	.byte	0x1
	.uleb128 0xe99
	.ascii "SS_BLACKFRAME __MSABI_LONG(0x00000007)\0"
	.byte	0x1
	.uleb128 0xe9a
	.ascii "SS_GRAYFRAME __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0xe9b
	.ascii "SS_WHITEFRAME __MSABI_LONG(0x00000009)\0"
	.byte	0x1
	.uleb128 0xe9c
	.ascii "SS_USERITEM __MSABI_LONG(0x0000000A)\0"
	.byte	0x1
	.uleb128 0xe9d
	.ascii "SS_SIMPLE __MSABI_LONG(0x0000000B)\0"
	.byte	0x1
	.uleb128 0xe9e
	.ascii "SS_LEFTNOWORDWRAP __MSABI_LONG(0x0000000C)\0"
	.byte	0x1
	.uleb128 0xe9f
	.ascii "SS_OWNERDRAW __MSABI_LONG(0x0000000D)\0"
	.byte	0x1
	.uleb128 0xea0
	.ascii "SS_BITMAP __MSABI_LONG(0x0000000E)\0"
	.byte	0x1
	.uleb128 0xea1
	.ascii "SS_ENHMETAFILE __MSABI_LONG(0x0000000F)\0"
	.byte	0x1
	.uleb128 0xea2
	.ascii "SS_ETCHEDHORZ __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0xea3
	.ascii "SS_ETCHEDVERT __MSABI_LONG(0x00000011)\0"
	.byte	0x1
	.uleb128 0xea4
	.ascii "SS_ETCHEDFRAME __MSABI_LONG(0x00000012)\0"
	.byte	0x1
	.uleb128 0xea5
	.ascii "SS_TYPEMASK __MSABI_LONG(0x0000001F)\0"
	.byte	0x1
	.uleb128 0xea6
	.ascii "SS_REALSIZECONTROL __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0xea7
	.ascii "SS_NOPREFIX __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0xea8
	.ascii "SS_NOTIFY __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0xea9
	.ascii "SS_CENTERIMAGE __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0xeaa
	.ascii "SS_RIGHTJUST __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0xeab
	.ascii "SS_REALSIZEIMAGE __MSABI_LONG(0x00000800)\0"
	.byte	0x1
	.uleb128 0xeac
	.ascii "SS_SUNKEN __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0xead
	.ascii "SS_EDITCONTROL __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0xeae
	.ascii "SS_ENDELLIPSIS __MSABI_LONG(0x00004000)\0"
	.byte	0x1
	.uleb128 0xeaf
	.ascii "SS_PATHELLIPSIS __MSABI_LONG(0x00008000)\0"
	.byte	0x1
	.uleb128 0xeb0
	.ascii "SS_WORDELLIPSIS __MSABI_LONG(0x0000C000)\0"
	.byte	0x1
	.uleb128 0xeb1
	.ascii "SS_ELLIPSISMASK __MSABI_LONG(0x0000C000)\0"
	.byte	0x1
	.uleb128 0xeb5
	.ascii "STM_SETICON 0x0170\0"
	.byte	0x1
	.uleb128 0xeb6
	.ascii "STM_GETICON 0x0171\0"
	.byte	0x1
	.uleb128 0xeb7
	.ascii "STM_SETIMAGE 0x0172\0"
	.byte	0x1
	.uleb128 0xeb8
	.ascii "STM_GETIMAGE 0x0173\0"
	.byte	0x1
	.uleb128 0xeb9
	.ascii "STN_CLICKED 0\0"
	.byte	0x1
	.uleb128 0xeba
	.ascii "STN_DBLCLK 1\0"
	.byte	0x1
	.uleb128 0xebb
	.ascii "STN_ENABLE 2\0"
	.byte	0x1
	.uleb128 0xebc
	.ascii "STN_DISABLE 3\0"
	.byte	0x1
	.uleb128 0xebd
	.ascii "STM_MSGMAX 0x0174\0"
	.byte	0x1
	.uleb128 0xec0
	.ascii "WC_DIALOG (MAKEINTATOM(0x8002))\0"
	.byte	0x1
	.uleb128 0xec2
	.ascii "DWL_MSGRESULT 0\0"
	.byte	0x1
	.uleb128 0xec3
	.ascii "DWL_DLGPROC 4\0"
	.byte	0x1
	.uleb128 0xec4
	.ascii "DWL_USER 8\0"
	.byte	0x2
	.uleb128 0xec8
	.ascii "DWL_MSGRESULT\0"
	.byte	0x2
	.uleb128 0xec9
	.ascii "DWL_DLGPROC\0"
	.byte	0x2
	.uleb128 0xeca
	.ascii "DWL_USER\0"
	.byte	0x1
	.uleb128 0xecd
	.ascii "DWLP_MSGRESULT 0\0"
	.byte	0x1
	.uleb128 0xece
	.ascii "DWLP_DLGPROC DWLP_MSGRESULT + sizeof(LRESULT)\0"
	.byte	0x1
	.uleb128 0xecf
	.ascii "DWLP_USER DWLP_DLGPROC + sizeof(DLGPROC)\0"
	.byte	0x1
	.uleb128 0xed3
	.ascii "IsDialogMessage __MINGW_NAME_AW(IsDialogMessage)\0"
	.byte	0x1
	.uleb128 0xed9
	.ascii "DlgDirList __MINGW_NAME_AW(DlgDirList)\0"
	.byte	0x1
	.uleb128 0xeda
	.ascii "DlgDirSelectEx __MINGW_NAME_AW(DlgDirSelectEx)\0"
	.byte	0x1
	.uleb128 0xedb
	.ascii "DlgDirListComboBox __MINGW_NAME_AW(DlgDirListComboBox)\0"
	.byte	0x1
	.uleb128 0xedc
	.ascii "DlgDirSelectComboBoxEx __MINGW_NAME_AW(DlgDirSelectComboBoxEx)\0"
	.byte	0x1
	.uleb128 0xee2
	.ascii "DDL_READWRITE 0x0000\0"
	.byte	0x1
	.uleb128 0xee3
	.ascii "DDL_READONLY 0x0001\0"
	.byte	0x1
	.uleb128 0xee4
	.ascii "DDL_HIDDEN 0x0002\0"
	.byte	0x1
	.uleb128 0xee5
	.ascii "DDL_SYSTEM 0x0004\0"
	.byte	0x1
	.uleb128 0xee6
	.ascii "DDL_DIRECTORY 0x0010\0"
	.byte	0x1
	.uleb128 0xee7
	.ascii "DDL_ARCHIVE 0x0020\0"
	.byte	0x1
	.uleb128 0xee9
	.ascii "DDL_POSTMSGS 0x2000\0"
	.byte	0x1
	.uleb128 0xeea
	.ascii "DDL_DRIVES 0x4000\0"
	.byte	0x1
	.uleb128 0xeeb
	.ascii "DDL_EXCLUSIVE 0x8000\0"
	.byte	0x1
	.uleb128 0xef4
	.ascii "DS_ABSALIGN __MSABI_LONG(0x01)\0"
	.byte	0x1
	.uleb128 0xef5
	.ascii "DS_SYSMODAL __MSABI_LONG(0x02)\0"
	.byte	0x1
	.uleb128 0xef6
	.ascii "DS_LOCALEDIT __MSABI_LONG(0x20)\0"
	.byte	0x1
	.uleb128 0xef7
	.ascii "DS_SETFONT __MSABI_LONG(0x40)\0"
	.byte	0x1
	.uleb128 0xef8
	.ascii "DS_MODALFRAME __MSABI_LONG(0x80)\0"
	.byte	0x1
	.uleb128 0xef9
	.ascii "DS_NOIDLEMSG __MSABI_LONG(0x100)\0"
	.byte	0x1
	.uleb128 0xefa
	.ascii "DS_SETFOREGROUND __MSABI_LONG(0x200)\0"
	.byte	0x1
	.uleb128 0xefc
	.ascii "DS_3DLOOK __MSABI_LONG(0x0004)\0"
	.byte	0x1
	.uleb128 0xefd
	.ascii "DS_FIXEDSYS __MSABI_LONG(0x0008)\0"
	.byte	0x1
	.uleb128 0xefe
	.ascii "DS_NOFAILCREATE __MSABI_LONG(0x0010)\0"
	.byte	0x1
	.uleb128 0xeff
	.ascii "DS_CONTROL __MSABI_LONG(0x0400)\0"
	.byte	0x1
	.uleb128 0xf00
	.ascii "DS_CENTER __MSABI_LONG(0x0800)\0"
	.byte	0x1
	.uleb128 0xf01
	.ascii "DS_CENTERMOUSE __MSABI_LONG(0x1000)\0"
	.byte	0x1
	.uleb128 0xf02
	.ascii "DS_CONTEXTHELP __MSABI_LONG(0x2000)\0"
	.byte	0x1
	.uleb128 0xf04
	.ascii "DS_SHELLFONT (DS_SETFONT | DS_FIXEDSYS)\0"
	.byte	0x1
	.uleb128 0xf0a
	.ascii "DM_GETDEFID (WM_USER+0)\0"
	.byte	0x1
	.uleb128 0xf0b
	.ascii "DM_SETDEFID (WM_USER+1)\0"
	.byte	0x1
	.uleb128 0xf0c
	.ascii "DM_REPOSITION (WM_USER+2)\0"
	.byte	0x1
	.uleb128 0xf0e
	.ascii "DC_HASDEFID 0x534B\0"
	.byte	0x1
	.uleb128 0xf10
	.ascii "DLGC_WANTARROWS 0x0001\0"
	.byte	0x1
	.uleb128 0xf11
	.ascii "DLGC_WANTTAB 0x0002\0"
	.byte	0x1
	.uleb128 0xf12
	.ascii "DLGC_WANTALLKEYS 0x0004\0"
	.byte	0x1
	.uleb128 0xf13
	.ascii "DLGC_WANTMESSAGE 0x0004\0"
	.byte	0x1
	.uleb128 0xf14
	.ascii "DLGC_HASSETSEL 0x0008\0"
	.byte	0x1
	.uleb128 0xf15
	.ascii "DLGC_DEFPUSHBUTTON 0x0010\0"
	.byte	0x1
	.uleb128 0xf16
	.ascii "DLGC_UNDEFPUSHBUTTON 0x0020\0"
	.byte	0x1
	.uleb128 0xf17
	.ascii "DLGC_RADIOBUTTON 0x0040\0"
	.byte	0x1
	.uleb128 0xf18
	.ascii "DLGC_WANTCHARS 0x0080\0"
	.byte	0x1
	.uleb128 0xf19
	.ascii "DLGC_STATIC 0x0100\0"
	.byte	0x1
	.uleb128 0xf1a
	.ascii "DLGC_BUTTON 0x2000\0"
	.byte	0x1
	.uleb128 0xf1c
	.ascii "LB_CTLCODE __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0xf1e
	.ascii "LB_OKAY 0\0"
	.byte	0x1
	.uleb128 0xf1f
	.ascii "LB_ERR (-1)\0"
	.byte	0x1
	.uleb128 0xf20
	.ascii "LB_ERRSPACE (-2)\0"
	.byte	0x1
	.uleb128 0xf22
	.ascii "LBN_ERRSPACE (-2)\0"
	.byte	0x1
	.uleb128 0xf23
	.ascii "LBN_SELCHANGE 1\0"
	.byte	0x1
	.uleb128 0xf24
	.ascii "LBN_DBLCLK 2\0"
	.byte	0x1
	.uleb128 0xf25
	.ascii "LBN_SELCANCEL 3\0"
	.byte	0x1
	.uleb128 0xf26
	.ascii "LBN_SETFOCUS 4\0"
	.byte	0x1
	.uleb128 0xf27
	.ascii "LBN_KILLFOCUS 5\0"
	.byte	0x1
	.uleb128 0xf2b
	.ascii "LB_ADDSTRING 0x0180\0"
	.byte	0x1
	.uleb128 0xf2c
	.ascii "LB_INSERTSTRING 0x0181\0"
	.byte	0x1
	.uleb128 0xf2d
	.ascii "LB_DELETESTRING 0x0182\0"
	.byte	0x1
	.uleb128 0xf2e
	.ascii "LB_SELITEMRANGEEX 0x0183\0"
	.byte	0x1
	.uleb128 0xf2f
	.ascii "LB_RESETCONTENT 0x0184\0"
	.byte	0x1
	.uleb128 0xf30
	.ascii "LB_SETSEL 0x0185\0"
	.byte	0x1
	.uleb128 0xf31
	.ascii "LB_SETCURSEL 0x0186\0"
	.byte	0x1
	.uleb128 0xf32
	.ascii "LB_GETSEL 0x0187\0"
	.byte	0x1
	.uleb128 0xf33
	.ascii "LB_GETCURSEL 0x0188\0"
	.byte	0x1
	.uleb128 0xf34
	.ascii "LB_GETTEXT 0x0189\0"
	.byte	0x1
	.uleb128 0xf35
	.ascii "LB_GETTEXTLEN 0x018A\0"
	.byte	0x1
	.uleb128 0xf36
	.ascii "LB_GETCOUNT 0x018B\0"
	.byte	0x1
	.uleb128 0xf37
	.ascii "LB_SELECTSTRING 0x018C\0"
	.byte	0x1
	.uleb128 0xf38
	.ascii "LB_DIR 0x018D\0"
	.byte	0x1
	.uleb128 0xf39
	.ascii "LB_GETTOPINDEX 0x018E\0"
	.byte	0x1
	.uleb128 0xf3a
	.ascii "LB_FINDSTRING 0x018F\0"
	.byte	0x1
	.uleb128 0xf3b
	.ascii "LB_GETSELCOUNT 0x0190\0"
	.byte	0x1
	.uleb128 0xf3c
	.ascii "LB_GETSELITEMS 0x0191\0"
	.byte	0x1
	.uleb128 0xf3d
	.ascii "LB_SETTABSTOPS 0x0192\0"
	.byte	0x1
	.uleb128 0xf3e
	.ascii "LB_GETHORIZONTALEXTENT 0x0193\0"
	.byte	0x1
	.uleb128 0xf3f
	.ascii "LB_SETHORIZONTALEXTENT 0x0194\0"
	.byte	0x1
	.uleb128 0xf40
	.ascii "LB_SETCOLUMNWIDTH 0x0195\0"
	.byte	0x1
	.uleb128 0xf41
	.ascii "LB_ADDFILE 0x0196\0"
	.byte	0x1
	.uleb128 0xf42
	.ascii "LB_SETTOPINDEX 0x0197\0"
	.byte	0x1
	.uleb128 0xf43
	.ascii "LB_GETITEMRECT 0x0198\0"
	.byte	0x1
	.uleb128 0xf44
	.ascii "LB_GETITEMDATA 0x0199\0"
	.byte	0x1
	.uleb128 0xf45
	.ascii "LB_SETITEMDATA 0x019A\0"
	.byte	0x1
	.uleb128 0xf46
	.ascii "LB_SELITEMRANGE 0x019B\0"
	.byte	0x1
	.uleb128 0xf47
	.ascii "LB_SETANCHORINDEX 0x019C\0"
	.byte	0x1
	.uleb128 0xf48
	.ascii "LB_GETANCHORINDEX 0x019D\0"
	.byte	0x1
	.uleb128 0xf49
	.ascii "LB_SETCARETINDEX 0x019E\0"
	.byte	0x1
	.uleb128 0xf4a
	.ascii "LB_GETCARETINDEX 0x019F\0"
	.byte	0x1
	.uleb128 0xf4b
	.ascii "LB_SETITEMHEIGHT 0x01A0\0"
	.byte	0x1
	.uleb128 0xf4c
	.ascii "LB_GETITEMHEIGHT 0x01A1\0"
	.byte	0x1
	.uleb128 0xf4d
	.ascii "LB_FINDSTRINGEXACT 0x01A2\0"
	.byte	0x1
	.uleb128 0xf4e
	.ascii "LB_SETLOCALE 0x01A5\0"
	.byte	0x1
	.uleb128 0xf4f
	.ascii "LB_GETLOCALE 0x01A6\0"
	.byte	0x1
	.uleb128 0xf50
	.ascii "LB_SETCOUNT 0x01A7\0"
	.byte	0x1
	.uleb128 0xf51
	.ascii "LB_INITSTORAGE 0x01A8\0"
	.byte	0x1
	.uleb128 0xf52
	.ascii "LB_ITEMFROMPOINT 0x01A9\0"
	.byte	0x1
	.uleb128 0xf56
	.ascii "LB_GETLISTBOXINFO 0x01B2\0"
	.byte	0x1
	.uleb128 0xf57
	.ascii "LB_MSGMAX 0x01B3\0"
	.byte	0x1
	.uleb128 0xf5c
	.ascii "LBS_NOTIFY __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0xf5d
	.ascii "LBS_SORT __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0xf5e
	.ascii "LBS_NOREDRAW __MSABI_LONG(0x0004)\0"
	.byte	0x1
	.uleb128 0xf5f
	.ascii "LBS_MULTIPLESEL __MSABI_LONG(0x0008)\0"
	.byte	0x1
	.uleb128 0xf60
	.ascii "LBS_OWNERDRAWFIXED __MSABI_LONG(0x0010)\0"
	.byte	0x1
	.uleb128 0xf61
	.ascii "LBS_OWNERDRAWVARIABLE __MSABI_LONG(0x0020)\0"
	.byte	0x1
	.uleb128 0xf62
	.ascii "LBS_HASSTRINGS __MSABI_LONG(0x0040)\0"
	.byte	0x1
	.uleb128 0xf63
	.ascii "LBS_USETABSTOPS __MSABI_LONG(0x0080)\0"
	.byte	0x1
	.uleb128 0xf64
	.ascii "LBS_NOINTEGRALHEIGHT __MSABI_LONG(0x0100)\0"
	.byte	0x1
	.uleb128 0xf65
	.ascii "LBS_MULTICOLUMN __MSABI_LONG(0x0200)\0"
	.byte	0x1
	.uleb128 0xf66
	.ascii "LBS_WANTKEYBOARDINPUT __MSABI_LONG(0x0400)\0"
	.byte	0x1
	.uleb128 0xf67
	.ascii "LBS_EXTENDEDSEL __MSABI_LONG(0x0800)\0"
	.byte	0x1
	.uleb128 0xf68
	.ascii "LBS_DISABLENOSCROLL __MSABI_LONG(0x1000)\0"
	.byte	0x1
	.uleb128 0xf69
	.ascii "LBS_NODATA __MSABI_LONG(0x2000)\0"
	.byte	0x1
	.uleb128 0xf6a
	.ascii "LBS_NOSEL __MSABI_LONG(0x4000)\0"
	.byte	0x1
	.uleb128 0xf6b
	.ascii "LBS_COMBOBOX __MSABI_LONG(0x8000)\0"
	.byte	0x1
	.uleb128 0xf6d
	.ascii "LBS_STANDARD (LBS_NOTIFY | LBS_SORT | WS_VSCROLL | WS_BORDER)\0"
	.byte	0x1
	.uleb128 0xf70
	.ascii "CB_OKAY 0\0"
	.byte	0x1
	.uleb128 0xf71
	.ascii "CB_ERR (-1)\0"
	.byte	0x1
	.uleb128 0xf72
	.ascii "CB_ERRSPACE (-2)\0"
	.byte	0x1
	.uleb128 0xf74
	.ascii "CBN_ERRSPACE (-1)\0"
	.byte	0x1
	.uleb128 0xf75
	.ascii "CBN_SELCHANGE 1\0"
	.byte	0x1
	.uleb128 0xf76
	.ascii "CBN_DBLCLK 2\0"
	.byte	0x1
	.uleb128 0xf77
	.ascii "CBN_SETFOCUS 3\0"
	.byte	0x1
	.uleb128 0xf78
	.ascii "CBN_KILLFOCUS 4\0"
	.byte	0x1
	.uleb128 0xf79
	.ascii "CBN_EDITCHANGE 5\0"
	.byte	0x1
	.uleb128 0xf7a
	.ascii "CBN_EDITUPDATE 6\0"
	.byte	0x1
	.uleb128 0xf7b
	.ascii "CBN_DROPDOWN 7\0"
	.byte	0x1
	.uleb128 0xf7c
	.ascii "CBN_CLOSEUP 8\0"
	.byte	0x1
	.uleb128 0xf7d
	.ascii "CBN_SELENDOK 9\0"
	.byte	0x1
	.uleb128 0xf7e
	.ascii "CBN_SELENDCANCEL 10\0"
	.byte	0x1
	.uleb128 0xf82
	.ascii "CBS_SIMPLE __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0xf83
	.ascii "CBS_DROPDOWN __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0xf84
	.ascii "CBS_DROPDOWNLIST __MSABI_LONG(0x0003)\0"
	.byte	0x1
	.uleb128 0xf85
	.ascii "CBS_OWNERDRAWFIXED __MSABI_LONG(0x0010)\0"
	.byte	0x1
	.uleb128 0xf86
	.ascii "CBS_OWNERDRAWVARIABLE __MSABI_LONG(0x0020)\0"
	.byte	0x1
	.uleb128 0xf87
	.ascii "CBS_AUTOHSCROLL __MSABI_LONG(0x0040)\0"
	.byte	0x1
	.uleb128 0xf88
	.ascii "CBS_OEMCONVERT __MSABI_LONG(0x0080)\0"
	.byte	0x1
	.uleb128 0xf89
	.ascii "CBS_SORT __MSABI_LONG(0x0100)\0"
	.byte	0x1
	.uleb128 0xf8a
	.ascii "CBS_HASSTRINGS __MSABI_LONG(0x0200)\0"
	.byte	0x1
	.uleb128 0xf8b
	.ascii "CBS_NOINTEGRALHEIGHT __MSABI_LONG(0x0400)\0"
	.byte	0x1
	.uleb128 0xf8c
	.ascii "CBS_DISABLENOSCROLL __MSABI_LONG(0x0800)\0"
	.byte	0x1
	.uleb128 0xf8d
	.ascii "CBS_UPPERCASE __MSABI_LONG(0x2000)\0"
	.byte	0x1
	.uleb128 0xf8e
	.ascii "CBS_LOWERCASE __MSABI_LONG(0x4000)\0"
	.byte	0x1
	.uleb128 0xf92
	.ascii "CB_GETEDITSEL 0x0140\0"
	.byte	0x1
	.uleb128 0xf93
	.ascii "CB_LIMITTEXT 0x0141\0"
	.byte	0x1
	.uleb128 0xf94
	.ascii "CB_SETEDITSEL 0x0142\0"
	.byte	0x1
	.uleb128 0xf95
	.ascii "CB_ADDSTRING 0x0143\0"
	.byte	0x1
	.uleb128 0xf96
	.ascii "CB_DELETESTRING 0x0144\0"
	.byte	0x1
	.uleb128 0xf97
	.ascii "CB_DIR 0x0145\0"
	.byte	0x1
	.uleb128 0xf98
	.ascii "CB_GETCOUNT 0x0146\0"
	.byte	0x1
	.uleb128 0xf99
	.ascii "CB_GETCURSEL 0x0147\0"
	.byte	0x1
	.uleb128 0xf9a
	.ascii "CB_GETLBTEXT 0x0148\0"
	.byte	0x1
	.uleb128 0xf9b
	.ascii "CB_GETLBTEXTLEN 0x0149\0"
	.byte	0x1
	.uleb128 0xf9c
	.ascii "CB_INSERTSTRING 0x014A\0"
	.byte	0x1
	.uleb128 0xf9d
	.ascii "CB_RESETCONTENT 0x014B\0"
	.byte	0x1
	.uleb128 0xf9e
	.ascii "CB_FINDSTRING 0x014C\0"
	.byte	0x1
	.uleb128 0xf9f
	.ascii "CB_SELECTSTRING 0x014D\0"
	.byte	0x1
	.uleb128 0xfa0
	.ascii "CB_SETCURSEL 0x014E\0"
	.byte	0x1
	.uleb128 0xfa1
	.ascii "CB_SHOWDROPDOWN 0x014F\0"
	.byte	0x1
	.uleb128 0xfa2
	.ascii "CB_GETITEMDATA 0x0150\0"
	.byte	0x1
	.uleb128 0xfa3
	.ascii "CB_SETITEMDATA 0x0151\0"
	.byte	0x1
	.uleb128 0xfa4
	.ascii "CB_GETDROPPEDCONTROLRECT 0x0152\0"
	.byte	0x1
	.uleb128 0xfa5
	.ascii "CB_SETITEMHEIGHT 0x0153\0"
	.byte	0x1
	.uleb128 0xfa6
	.ascii "CB_GETITEMHEIGHT 0x0154\0"
	.byte	0x1
	.uleb128 0xfa7
	.ascii "CB_SETEXTENDEDUI 0x0155\0"
	.byte	0x1
	.uleb128 0xfa8
	.ascii "CB_GETEXTENDEDUI 0x0156\0"
	.byte	0x1
	.uleb128 0xfa9
	.ascii "CB_GETDROPPEDSTATE 0x0157\0"
	.byte	0x1
	.uleb128 0xfaa
	.ascii "CB_FINDSTRINGEXACT 0x0158\0"
	.byte	0x1
	.uleb128 0xfab
	.ascii "CB_SETLOCALE 0x0159\0"
	.byte	0x1
	.uleb128 0xfac
	.ascii "CB_GETLOCALE 0x015A\0"
	.byte	0x1
	.uleb128 0xfad
	.ascii "CB_GETTOPINDEX 0x015b\0"
	.byte	0x1
	.uleb128 0xfae
	.ascii "CB_SETTOPINDEX 0x015c\0"
	.byte	0x1
	.uleb128 0xfaf
	.ascii "CB_GETHORIZONTALEXTENT 0x015d\0"
	.byte	0x1
	.uleb128 0xfb0
	.ascii "CB_SETHORIZONTALEXTENT 0x015e\0"
	.byte	0x1
	.uleb128 0xfb1
	.ascii "CB_GETDROPPEDWIDTH 0x015f\0"
	.byte	0x1
	.uleb128 0xfb2
	.ascii "CB_SETDROPPEDWIDTH 0x0160\0"
	.byte	0x1
	.uleb128 0xfb3
	.ascii "CB_INITSTORAGE 0x0161\0"
	.byte	0x1
	.uleb128 0xfb7
	.ascii "CB_GETCOMBOBOXINFO 0x0164\0"
	.byte	0x1
	.uleb128 0xfb8
	.ascii "CB_MSGMAX 0x0165\0"
	.byte	0x1
	.uleb128 0xfbd
	.ascii "SBS_HORZ __MSABI_LONG(0x0000)\0"
	.byte	0x1
	.uleb128 0xfbe
	.ascii "SBS_VERT __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0xfbf
	.ascii "SBS_TOPALIGN __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0xfc0
	.ascii "SBS_LEFTALIGN __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0xfc1
	.ascii "SBS_BOTTOMALIGN __MSABI_LONG(0x0004)\0"
	.byte	0x1
	.uleb128 0xfc2
	.ascii "SBS_RIGHTALIGN __MSABI_LONG(0x0004)\0"
	.byte	0x1
	.uleb128 0xfc3
	.ascii "SBS_SIZEBOXTOPLEFTALIGN __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0xfc4
	.ascii "SBS_SIZEBOXBOTTOMRIGHTALIGN __MSABI_LONG(0x0004)\0"
	.byte	0x1
	.uleb128 0xfc5
	.ascii "SBS_SIZEBOX __MSABI_LONG(0x0008)\0"
	.byte	0x1
	.uleb128 0xfc6
	.ascii "SBS_SIZEGRIP __MSABI_LONG(0x0010)\0"
	.byte	0x1
	.uleb128 0xfca
	.ascii "SBM_SETPOS 0x00E0\0"
	.byte	0x1
	.uleb128 0xfcb
	.ascii "SBM_GETPOS 0x00E1\0"
	.byte	0x1
	.uleb128 0xfcc
	.ascii "SBM_SETRANGE 0x00E2\0"
	.byte	0x1
	.uleb128 0xfcd
	.ascii "SBM_SETRANGEREDRAW 0x00E6\0"
	.byte	0x1
	.uleb128 0xfce
	.ascii "SBM_GETRANGE 0x00E3\0"
	.byte	0x1
	.uleb128 0xfcf
	.ascii "SBM_ENABLE_ARROWS 0x00E4\0"
	.byte	0x1
	.uleb128 0xfd0
	.ascii "SBM_SETSCROLLINFO 0x00E9\0"
	.byte	0x1
	.uleb128 0xfd1
	.ascii "SBM_GETSCROLLINFO 0x00EA\0"
	.byte	0x1
	.uleb128 0xfd2
	.ascii "SBM_GETSCROLLBARINFO 0x00EB\0"
	.byte	0x1
	.uleb128 0xfd4
	.ascii "SIF_RANGE 0x0001\0"
	.byte	0x1
	.uleb128 0xfd5
	.ascii "SIF_PAGE 0x0002\0"
	.byte	0x1
	.uleb128 0xfd6
	.ascii "SIF_POS 0x0004\0"
	.byte	0x1
	.uleb128 0xfd7
	.ascii "SIF_DISABLENOSCROLL 0x0008\0"
	.byte	0x1
	.uleb128 0xfd8
	.ascii "SIF_TRACKPOS 0x0010\0"
	.byte	0x1
	.uleb128 0xfd9
	.ascii "SIF_ALL (SIF_RANGE | SIF_PAGE | SIF_POS | SIF_TRACKPOS)\0"
	.byte	0x1
	.uleb128 0xfed
	.ascii "MDIS_ALLCHILDSTYLES 0x0001\0"
	.byte	0x1
	.uleb128 0xfef
	.ascii "MDITILE_VERTICAL 0x0000\0"
	.byte	0x1
	.uleb128 0xff0
	.ascii "MDITILE_HORIZONTAL 0x0001\0"
	.byte	0x1
	.uleb128 0xff1
	.ascii "MDITILE_SKIPDISABLED 0x0002\0"
	.byte	0x1
	.uleb128 0xff2
	.ascii "MDITILE_ZORDER 0x0004\0"
	.byte	0x1
	.uleb128 0x1014
	.ascii "DefFrameProc __MINGW_NAME_AW(DefFrameProc)\0"
	.byte	0x1
	.uleb128 0x1015
	.ascii "DefMDIChildProc __MINGW_NAME_AW(DefMDIChildProc)\0"
	.byte	0x1
	.uleb128 0x1016
	.ascii "CreateMDIWindow __MINGW_NAME_AW(CreateMDIWindow)\0"
	.byte	0x1
	.uleb128 0x1054
	.ascii "HELP_CONTEXT 0x0001\0"
	.byte	0x1
	.uleb128 0x1055
	.ascii "HELP_QUIT 0x0002\0"
	.byte	0x1
	.uleb128 0x1056
	.ascii "HELP_INDEX 0x0003\0"
	.byte	0x1
	.uleb128 0x1057
	.ascii "HELP_CONTENTS 0x0003\0"
	.byte	0x1
	.uleb128 0x1058
	.ascii "HELP_HELPONHELP 0x0004\0"
	.byte	0x1
	.uleb128 0x1059
	.ascii "HELP_SETINDEX 0x0005\0"
	.byte	0x1
	.uleb128 0x105a
	.ascii "HELP_SETCONTENTS 0x0005\0"
	.byte	0x1
	.uleb128 0x105b
	.ascii "HELP_CONTEXTPOPUP 0x0008\0"
	.byte	0x1
	.uleb128 0x105c
	.ascii "HELP_FORCEFILE 0x0009\0"
	.byte	0x1
	.uleb128 0x105d
	.ascii "HELP_KEY 0x0101\0"
	.byte	0x1
	.uleb128 0x105e
	.ascii "HELP_COMMAND 0x0102\0"
	.byte	0x1
	.uleb128 0x105f
	.ascii "HELP_PARTIALKEY 0x0105\0"
	.byte	0x1
	.uleb128 0x1060
	.ascii "HELP_MULTIKEY 0x0201\0"
	.byte	0x1
	.uleb128 0x1061
	.ascii "HELP_SETWINPOS 0x0203\0"
	.byte	0x1
	.uleb128 0x1062
	.ascii "HELP_CONTEXTMENU 0x000a\0"
	.byte	0x1
	.uleb128 0x1063
	.ascii "HELP_FINDER 0x000b\0"
	.byte	0x1
	.uleb128 0x1064
	.ascii "HELP_WM_HELP 0x000c\0"
	.byte	0x1
	.uleb128 0x1065
	.ascii "HELP_SETPOPUP_POS 0x000d\0"
	.byte	0x1
	.uleb128 0x1067
	.ascii "HELP_TCARD 0x8000\0"
	.byte	0x1
	.uleb128 0x1068
	.ascii "HELP_TCARD_DATA 0x0010\0"
	.byte	0x1
	.uleb128 0x1069
	.ascii "HELP_TCARD_OTHER_CALLER 0x0011\0"
	.byte	0x1
	.uleb128 0x106b
	.ascii "IDH_NO_HELP 28440\0"
	.byte	0x1
	.uleb128 0x106c
	.ascii "IDH_MISSING_CONTEXT 28441\0"
	.byte	0x1
	.uleb128 0x106d
	.ascii "IDH_GENERIC_HELP_BUTTON 28442\0"
	.byte	0x1
	.uleb128 0x106e
	.ascii "IDH_OK 28443\0"
	.byte	0x1
	.uleb128 0x106f
	.ascii "IDH_CANCEL 28444\0"
	.byte	0x1
	.uleb128 0x1070
	.ascii "IDH_HELP 28445\0"
	.byte	0x1
	.uleb128 0x1072
	.ascii "WinHelp __MINGW_NAME_AW(WinHelp)\0"
	.byte	0x1
	.uleb128 0x1078
	.ascii "GR_GDIOBJECTS 0\0"
	.byte	0x1
	.uleb128 0x1079
	.ascii "GR_USEROBJECTS 1\0"
	.byte	0x1
	.uleb128 0x107f
	.ascii "SPI_GETBEEP 0x0001\0"
	.byte	0x1
	.uleb128 0x1080
	.ascii "SPI_SETBEEP 0x0002\0"
	.byte	0x1
	.uleb128 0x1081
	.ascii "SPI_GETMOUSE 0x0003\0"
	.byte	0x1
	.uleb128 0x1082
	.ascii "SPI_SETMOUSE 0x0004\0"
	.byte	0x1
	.uleb128 0x1083
	.ascii "SPI_GETBORDER 0x0005\0"
	.byte	0x1
	.uleb128 0x1084
	.ascii "SPI_SETBORDER 0x0006\0"
	.byte	0x1
	.uleb128 0x1085
	.ascii "SPI_GETKEYBOARDSPEED 0x000A\0"
	.byte	0x1
	.uleb128 0x1086
	.ascii "SPI_SETKEYBOARDSPEED 0x000B\0"
	.byte	0x1
	.uleb128 0x1087
	.ascii "SPI_LANGDRIVER 0x000C\0"
	.byte	0x1
	.uleb128 0x1088
	.ascii "SPI_ICONHORIZONTALSPACING 0x000D\0"
	.byte	0x1
	.uleb128 0x1089
	.ascii "SPI_GETSCREENSAVETIMEOUT 0x000E\0"
	.byte	0x1
	.uleb128 0x108a
	.ascii "SPI_SETSCREENSAVETIMEOUT 0x000F\0"
	.byte	0x1
	.uleb128 0x108b
	.ascii "SPI_GETSCREENSAVEACTIVE 0x0010\0"
	.byte	0x1
	.uleb128 0x108c
	.ascii "SPI_SETSCREENSAVEACTIVE 0x0011\0"
	.byte	0x1
	.uleb128 0x108d
	.ascii "SPI_GETGRIDGRANULARITY 0x0012\0"
	.byte	0x1
	.uleb128 0x108e
	.ascii "SPI_SETGRIDGRANULARITY 0x0013\0"
	.byte	0x1
	.uleb128 0x108f
	.ascii "SPI_SETDESKWALLPAPER 0x0014\0"
	.byte	0x1
	.uleb128 0x1090
	.ascii "SPI_SETDESKPATTERN 0x0015\0"
	.byte	0x1
	.uleb128 0x1091
	.ascii "SPI_GETKEYBOARDDELAY 0x0016\0"
	.byte	0x1
	.uleb128 0x1092
	.ascii "SPI_SETKEYBOARDDELAY 0x0017\0"
	.byte	0x1
	.uleb128 0x1093
	.ascii "SPI_ICONVERTICALSPACING 0x0018\0"
	.byte	0x1
	.uleb128 0x1094
	.ascii "SPI_GETICONTITLEWRAP 0x0019\0"
	.byte	0x1
	.uleb128 0x1095
	.ascii "SPI_SETICONTITLEWRAP 0x001A\0"
	.byte	0x1
	.uleb128 0x1096
	.ascii "SPI_GETMENUDROPALIGNMENT 0x001B\0"
	.byte	0x1
	.uleb128 0x1097
	.ascii "SPI_SETMENUDROPALIGNMENT 0x001C\0"
	.byte	0x1
	.uleb128 0x1098
	.ascii "SPI_SETDOUBLECLKWIDTH 0x001D\0"
	.byte	0x1
	.uleb128 0x1099
	.ascii "SPI_SETDOUBLECLKHEIGHT 0x001E\0"
	.byte	0x1
	.uleb128 0x109a
	.ascii "SPI_GETICONTITLELOGFONT 0x001F\0"
	.byte	0x1
	.uleb128 0x109b
	.ascii "SPI_SETDOUBLECLICKTIME 0x0020\0"
	.byte	0x1
	.uleb128 0x109c
	.ascii "SPI_SETMOUSEBUTTONSWAP 0x0021\0"
	.byte	0x1
	.uleb128 0x109d
	.ascii "SPI_SETICONTITLELOGFONT 0x0022\0"
	.byte	0x1
	.uleb128 0x109e
	.ascii "SPI_GETFASTTASKSWITCH 0x0023\0"
	.byte	0x1
	.uleb128 0x109f
	.ascii "SPI_SETFASTTASKSWITCH 0x0024\0"
	.byte	0x1
	.uleb128 0x10a0
	.ascii "SPI_SETDRAGFULLWINDOWS 0x0025\0"
	.byte	0x1
	.uleb128 0x10a1
	.ascii "SPI_GETDRAGFULLWINDOWS 0x0026\0"
	.byte	0x1
	.uleb128 0x10a2
	.ascii "SPI_GETNONCLIENTMETRICS 0x0029\0"
	.byte	0x1
	.uleb128 0x10a3
	.ascii "SPI_SETNONCLIENTMETRICS 0x002A\0"
	.byte	0x1
	.uleb128 0x10a4
	.ascii "SPI_GETMINIMIZEDMETRICS 0x002B\0"
	.byte	0x1
	.uleb128 0x10a5
	.ascii "SPI_SETMINIMIZEDMETRICS 0x002C\0"
	.byte	0x1
	.uleb128 0x10a6
	.ascii "SPI_GETICONMETRICS 0x002D\0"
	.byte	0x1
	.uleb128 0x10a7
	.ascii "SPI_SETICONMETRICS 0x002E\0"
	.byte	0x1
	.uleb128 0x10a8
	.ascii "SPI_SETWORKAREA 0x002F\0"
	.byte	0x1
	.uleb128 0x10a9
	.ascii "SPI_GETWORKAREA 0x0030\0"
	.byte	0x1
	.uleb128 0x10aa
	.ascii "SPI_SETPENWINDOWS 0x0031\0"
	.byte	0x1
	.uleb128 0x10ac
	.ascii "SPI_GETHIGHCONTRAST 0x0042\0"
	.byte	0x1
	.uleb128 0x10ad
	.ascii "SPI_SETHIGHCONTRAST 0x0043\0"
	.byte	0x1
	.uleb128 0x10ae
	.ascii "SPI_GETKEYBOARDPREF 0x0044\0"
	.byte	0x1
	.uleb128 0x10af
	.ascii "SPI_SETKEYBOARDPREF 0x0045\0"
	.byte	0x1
	.uleb128 0x10b0
	.ascii "SPI_GETSCREENREADER 0x0046\0"
	.byte	0x1
	.uleb128 0x10b1
	.ascii "SPI_SETSCREENREADER 0x0047\0"
	.byte	0x1
	.uleb128 0x10b2
	.ascii "SPI_GETANIMATION 0x0048\0"
	.byte	0x1
	.uleb128 0x10b3
	.ascii "SPI_SETANIMATION 0x0049\0"
	.byte	0x1
	.uleb128 0x10b4
	.ascii "SPI_GETFONTSMOOTHING 0x004A\0"
	.byte	0x1
	.uleb128 0x10b5
	.ascii "SPI_SETFONTSMOOTHING 0x004B\0"
	.byte	0x1
	.uleb128 0x10b6
	.ascii "SPI_SETDRAGWIDTH 0x004C\0"
	.byte	0x1
	.uleb128 0x10b7
	.ascii "SPI_SETDRAGHEIGHT 0x004D\0"
	.byte	0x1
	.uleb128 0x10b8
	.ascii "SPI_SETHANDHELD 0x004E\0"
	.byte	0x1
	.uleb128 0x10b9
	.ascii "SPI_GETLOWPOWERTIMEOUT 0x004F\0"
	.byte	0x1
	.uleb128 0x10ba
	.ascii "SPI_GETPOWEROFFTIMEOUT 0x0050\0"
	.byte	0x1
	.uleb128 0x10bb
	.ascii "SPI_SETLOWPOWERTIMEOUT 0x0051\0"
	.byte	0x1
	.uleb128 0x10bc
	.ascii "SPI_SETPOWEROFFTIMEOUT 0x0052\0"
	.byte	0x1
	.uleb128 0x10bd
	.ascii "SPI_GETLOWPOWERACTIVE 0x0053\0"
	.byte	0x1
	.uleb128 0x10be
	.ascii "SPI_GETPOWEROFFACTIVE 0x0054\0"
	.byte	0x1
	.uleb128 0x10bf
	.ascii "SPI_SETLOWPOWERACTIVE 0x0055\0"
	.byte	0x1
	.uleb128 0x10c0
	.ascii "SPI_SETPOWEROFFACTIVE 0x0056\0"
	.byte	0x1
	.uleb128 0x10c1
	.ascii "SPI_SETCURSORS 0x0057\0"
	.byte	0x1
	.uleb128 0x10c2
	.ascii "SPI_SETICONS 0x0058\0"
	.byte	0x1
	.uleb128 0x10c3
	.ascii "SPI_GETDEFAULTINPUTLANG 0x0059\0"
	.byte	0x1
	.uleb128 0x10c4
	.ascii "SPI_SETDEFAULTINPUTLANG 0x005A\0"
	.byte	0x1
	.uleb128 0x10c5
	.ascii "SPI_SETLANGTOGGLE 0x005B\0"
	.byte	0x1
	.uleb128 0x10c6
	.ascii "SPI_GETWINDOWSEXTENSION 0x005C\0"
	.byte	0x1
	.uleb128 0x10c7
	.ascii "SPI_SETMOUSETRAILS 0x005D\0"
	.byte	0x1
	.uleb128 0x10c8
	.ascii "SPI_GETMOUSETRAILS 0x005E\0"
	.byte	0x1
	.uleb128 0x10c9
	.ascii "SPI_SETSCREENSAVERRUNNING 0x0061\0"
	.byte	0x1
	.uleb128 0x10ca
	.ascii "SPI_SCREENSAVERRUNNING SPI_SETSCREENSAVERRUNNING\0"
	.byte	0x1
	.uleb128 0x10cb
	.ascii "SPI_GETFILTERKEYS 0x0032\0"
	.byte	0x1
	.uleb128 0x10cc
	.ascii "SPI_SETFILTERKEYS 0x0033\0"
	.byte	0x1
	.uleb128 0x10cd
	.ascii "SPI_GETTOGGLEKEYS 0x0034\0"
	.byte	0x1
	.uleb128 0x10ce
	.ascii "SPI_SETTOGGLEKEYS 0x0035\0"
	.byte	0x1
	.uleb128 0x10cf
	.ascii "SPI_GETMOUSEKEYS 0x0036\0"
	.byte	0x1
	.uleb128 0x10d0
	.ascii "SPI_SETMOUSEKEYS 0x0037\0"
	.byte	0x1
	.uleb128 0x10d1
	.ascii "SPI_GETSHOWSOUNDS 0x0038\0"
	.byte	0x1
	.uleb128 0x10d2
	.ascii "SPI_SETSHOWSOUNDS 0x0039\0"
	.byte	0x1
	.uleb128 0x10d3
	.ascii "SPI_GETSTICKYKEYS 0x003A\0"
	.byte	0x1
	.uleb128 0x10d4
	.ascii "SPI_SETSTICKYKEYS 0x003B\0"
	.byte	0x1
	.uleb128 0x10d5
	.ascii "SPI_GETACCESSTIMEOUT 0x003C\0"
	.byte	0x1
	.uleb128 0x10d6
	.ascii "SPI_SETACCESSTIMEOUT 0x003D\0"
	.byte	0x1
	.uleb128 0x10d7
	.ascii "SPI_GETSERIALKEYS 0x003E\0"
	.byte	0x1
	.uleb128 0x10d8
	.ascii "SPI_SETSERIALKEYS 0x003F\0"
	.byte	0x1
	.uleb128 0x10d9
	.ascii "SPI_GETSOUNDSENTRY 0x0040\0"
	.byte	0x1
	.uleb128 0x10da
	.ascii "SPI_SETSOUNDSENTRY 0x0041\0"
	.byte	0x1
	.uleb128 0x10db
	.ascii "SPI_GETSNAPTODEFBUTTON 0x005F\0"
	.byte	0x1
	.uleb128 0x10dc
	.ascii "SPI_SETSNAPTODEFBUTTON 0x0060\0"
	.byte	0x1
	.uleb128 0x10dd
	.ascii "SPI_GETMOUSEHOVERWIDTH 0x0062\0"
	.byte	0x1
	.uleb128 0x10de
	.ascii "SPI_SETMOUSEHOVERWIDTH 0x0063\0"
	.byte	0x1
	.uleb128 0x10df
	.ascii "SPI_GETMOUSEHOVERHEIGHT 0x0064\0"
	.byte	0x1
	.uleb128 0x10e0
	.ascii "SPI_SETMOUSEHOVERHEIGHT 0x0065\0"
	.byte	0x1
	.uleb128 0x10e1
	.ascii "SPI_GETMOUSEHOVERTIME 0x0066\0"
	.byte	0x1
	.uleb128 0x10e2
	.ascii "SPI_SETMOUSEHOVERTIME 0x0067\0"
	.byte	0x1
	.uleb128 0x10e3
	.ascii "SPI_GETWHEELSCROLLLINES 0x0068\0"
	.byte	0x1
	.uleb128 0x10e4
	.ascii "SPI_SETWHEELSCROLLLINES 0x0069\0"
	.byte	0x1
	.uleb128 0x10e5
	.ascii "SPI_GETMENUSHOWDELAY 0x006A\0"
	.byte	0x1
	.uleb128 0x10e6
	.ascii "SPI_SETMENUSHOWDELAY 0x006B\0"
	.byte	0x1
	.uleb128 0x10e7
	.ascii "SPI_GETWHEELSCROLLCHARS 0x006C\0"
	.byte	0x1
	.uleb128 0x10e8
	.ascii "SPI_SETWHEELSCROLLCHARS 0x006D\0"
	.byte	0x1
	.uleb128 0x10e9
	.ascii "SPI_GETSHOWIMEUI 0x006E\0"
	.byte	0x1
	.uleb128 0x10ea
	.ascii "SPI_SETSHOWIMEUI 0x006F\0"
	.byte	0x1
	.uleb128 0x10eb
	.ascii "SPI_GETMOUSESPEED 0x0070\0"
	.byte	0x1
	.uleb128 0x10ec
	.ascii "SPI_SETMOUSESPEED 0x0071\0"
	.byte	0x1
	.uleb128 0x10ed
	.ascii "SPI_GETSCREENSAVERRUNNING 0x0072\0"
	.byte	0x1
	.uleb128 0x10ee
	.ascii "SPI_GETDESKWALLPAPER 0x0073\0"
	.byte	0x1
	.uleb128 0x10ef
	.ascii "SPI_GETAUDIODESCRIPTION 0x0074\0"
	.byte	0x1
	.uleb128 0x10f0
	.ascii "SPI_SETAUDIODESCRIPTION 0x0075\0"
	.byte	0x1
	.uleb128 0x10f1
	.ascii "SPI_GETSCREENSAVESECURE 0x0076\0"
	.byte	0x1
	.uleb128 0x10f2
	.ascii "SPI_SETSCREENSAVESECURE 0x0077\0"
	.byte	0x1
	.uleb128 0x10f3
	.ascii "SPI_GETHUNGAPPTIMEOUT 0x0078\0"
	.byte	0x1
	.uleb128 0x10f4
	.ascii "SPI_SETHUNGAPPTIMEOUT 0x0079\0"
	.byte	0x1
	.uleb128 0x10f5
	.ascii "SPI_GETWAITTOKILLTIMEOUT 0x007A\0"
	.byte	0x1
	.uleb128 0x10f6
	.ascii "SPI_SETWAITTOKILLTIMEOUT 0x007B\0"
	.byte	0x1
	.uleb128 0x10f7
	.ascii "SPI_GETWAITTOKILLSERVICETIMEOUT 0x007C\0"
	.byte	0x1
	.uleb128 0x10f8
	.ascii "SPI_SETWAITTOKILLSERVICETIMEOUT 0x007D\0"
	.byte	0x1
	.uleb128 0x10f9
	.ascii "SPI_GETMOUSEDOCKTHRESHOLD 0x007E\0"
	.byte	0x1
	.uleb128 0x10fa
	.ascii "SPI_SETMOUSEDOCKTHRESHOLD 0x007F\0"
	.byte	0x1
	.uleb128 0x10fb
	.ascii "SPI_GETPENDOCKTHRESHOLD 0x0080\0"
	.byte	0x1
	.uleb128 0x10fc
	.ascii "SPI_SETPENDOCKTHRESHOLD 0x0081\0"
	.byte	0x1
	.uleb128 0x10fd
	.ascii "SPI_GETWINARRANGING 0x0082\0"
	.byte	0x1
	.uleb128 0x10fe
	.ascii "SPI_SETWINARRANGING 0x0083\0"
	.byte	0x1
	.uleb128 0x10ff
	.ascii "SPI_GETMOUSEDRAGOUTTHRESHOLD 0x0084\0"
	.byte	0x1
	.uleb128 0x1100
	.ascii "SPI_SETMOUSEDRAGOUTTHRESHOLD 0x0085\0"
	.byte	0x1
	.uleb128 0x1101
	.ascii "SPI_GETPENDRAGOUTTHRESHOLD 0x0086\0"
	.byte	0x1
	.uleb128 0x1102
	.ascii "SPI_SETPENDRAGOUTTHRESHOLD 0x0087\0"
	.byte	0x1
	.uleb128 0x1103
	.ascii "SPI_GETMOUSESIDEMOVETHRESHOLD 0x0088\0"
	.byte	0x1
	.uleb128 0x1104
	.ascii "SPI_SETMOUSESIDEMOVETHRESHOLD 0x0089\0"
	.byte	0x1
	.uleb128 0x1105
	.ascii "SPI_GETPENSIDEMOVETHRESHOLD 0x008A\0"
	.byte	0x1
	.uleb128 0x1106
	.ascii "SPI_SETPENSIDEMOVETHRESHOLD 0x008B\0"
	.byte	0x1
	.uleb128 0x1107
	.ascii "SPI_GETDRAGFROMMAXIMIZE 0x008C\0"
	.byte	0x1
	.uleb128 0x1108
	.ascii "SPI_SETDRAGFROMMAXIMIZE 0x008D\0"
	.byte	0x1
	.uleb128 0x1109
	.ascii "SPI_GETSNAPSIZING 0x008E\0"
	.byte	0x1
	.uleb128 0x110a
	.ascii "SPI_GETDOCKMOVING 0x0090\0"
	.byte	0x1
	.uleb128 0x110b
	.ascii "SPI_SETDOCKMOVING 0x0091\0"
	.byte	0x1
	.uleb128 0x1112
	.ascii "SPI_GETACTIVEWINDOWTRACKING 0x1000\0"
	.byte	0x1
	.uleb128 0x1113
	.ascii "SPI_SETACTIVEWINDOWTRACKING 0x1001\0"
	.byte	0x1
	.uleb128 0x1114
	.ascii "SPI_GETMENUANIMATION 0x1002\0"
	.byte	0x1
	.uleb128 0x1115
	.ascii "SPI_SETMENUANIMATION 0x1003\0"
	.byte	0x1
	.uleb128 0x1116
	.ascii "SPI_GETCOMBOBOXANIMATION 0x1004\0"
	.byte	0x1
	.uleb128 0x1117
	.ascii "SPI_SETCOMBOBOXANIMATION 0x1005\0"
	.byte	0x1
	.uleb128 0x1118
	.ascii "SPI_GETLISTBOXSMOOTHSCROLLING 0x1006\0"
	.byte	0x1
	.uleb128 0x1119
	.ascii "SPI_SETLISTBOXSMOOTHSCROLLING 0x1007\0"
	.byte	0x1
	.uleb128 0x111a
	.ascii "SPI_GETGRADIENTCAPTIONS 0x1008\0"
	.byte	0x1
	.uleb128 0x111b
	.ascii "SPI_SETGRADIENTCAPTIONS 0x1009\0"
	.byte	0x1
	.uleb128 0x111c
	.ascii "SPI_GETKEYBOARDCUES 0x100A\0"
	.byte	0x1
	.uleb128 0x111d
	.ascii "SPI_SETKEYBOARDCUES 0x100B\0"
	.byte	0x1
	.uleb128 0x111e
	.ascii "SPI_GETMENUUNDERLINES SPI_GETKEYBOARDCUES\0"
	.byte	0x1
	.uleb128 0x111f
	.ascii "SPI_SETMENUUNDERLINES SPI_SETKEYBOARDCUES\0"
	.byte	0x1
	.uleb128 0x1120
	.ascii "SPI_GETACTIVEWNDTRKZORDER 0x100C\0"
	.byte	0x1
	.uleb128 0x1121
	.ascii "SPI_SETACTIVEWNDTRKZORDER 0x100D\0"
	.byte	0x1
	.uleb128 0x1122
	.ascii "SPI_GETHOTTRACKING 0x100E\0"
	.byte	0x1
	.uleb128 0x1123
	.ascii "SPI_SETHOTTRACKING 0x100F\0"
	.byte	0x1
	.uleb128 0x1124
	.ascii "SPI_GETMENUFADE 0x1012\0"
	.byte	0x1
	.uleb128 0x1125
	.ascii "SPI_SETMENUFADE 0x1013\0"
	.byte	0x1
	.uleb128 0x1126
	.ascii "SPI_GETSELECTIONFADE 0x1014\0"
	.byte	0x1
	.uleb128 0x1127
	.ascii "SPI_SETSELECTIONFADE 0x1015\0"
	.byte	0x1
	.uleb128 0x1128
	.ascii "SPI_GETTOOLTIPANIMATION 0x1016\0"
	.byte	0x1
	.uleb128 0x1129
	.ascii "SPI_SETTOOLTIPANIMATION 0x1017\0"
	.byte	0x1
	.uleb128 0x112a
	.ascii "SPI_GETTOOLTIPFADE 0x1018\0"
	.byte	0x1
	.uleb128 0x112b
	.ascii "SPI_SETTOOLTIPFADE 0x1019\0"
	.byte	0x1
	.uleb128 0x112c
	.ascii "SPI_GETCURSORSHADOW 0x101A\0"
	.byte	0x1
	.uleb128 0x112d
	.ascii "SPI_SETCURSORSHADOW 0x101B\0"
	.byte	0x1
	.uleb128 0x112e
	.ascii "SPI_GETMOUSESONAR 0x101C\0"
	.byte	0x1
	.uleb128 0x112f
	.ascii "SPI_SETMOUSESONAR 0x101D\0"
	.byte	0x1
	.uleb128 0x1130
	.ascii "SPI_GETMOUSECLICKLOCK 0x101E\0"
	.byte	0x1
	.uleb128 0x1131
	.ascii "SPI_SETMOUSECLICKLOCK 0x101F\0"
	.byte	0x1
	.uleb128 0x1132
	.ascii "SPI_GETMOUSEVANISH 0x1020\0"
	.byte	0x1
	.uleb128 0x1133
	.ascii "SPI_SETMOUSEVANISH 0x1021\0"
	.byte	0x1
	.uleb128 0x1134
	.ascii "SPI_GETFLATMENU 0x1022\0"
	.byte	0x1
	.uleb128 0x1135
	.ascii "SPI_SETFLATMENU 0x1023\0"
	.byte	0x1
	.uleb128 0x1136
	.ascii "SPI_GETDROPSHADOW 0x1024\0"
	.byte	0x1
	.uleb128 0x1137
	.ascii "SPI_SETDROPSHADOW 0x1025\0"
	.byte	0x1
	.uleb128 0x1138
	.ascii "SPI_GETBLOCKSENDINPUTRESETS 0x1026\0"
	.byte	0x1
	.uleb128 0x1139
	.ascii "SPI_SETBLOCKSENDINPUTRESETS 0x1027\0"
	.byte	0x1
	.uleb128 0x113a
	.ascii "SPI_GETUIEFFECTS 0x103E\0"
	.byte	0x1
	.uleb128 0x113b
	.ascii "SPI_SETUIEFFECTS 0x103F\0"
	.byte	0x1
	.uleb128 0x113c
	.ascii "SPI_GETDISABLEOVERLAPPEDCONTENT 0x1040\0"
	.byte	0x1
	.uleb128 0x113d
	.ascii "SPI_SETDISABLEOVERLAPPEDCONTENT 0x1041\0"
	.byte	0x1
	.uleb128 0x113e
	.ascii "SPI_GETCLIENTAREAANIMATION 0x1042\0"
	.byte	0x1
	.uleb128 0x113f
	.ascii "SPI_SETCLIENTAREAANIMATION 0x1043\0"
	.byte	0x1
	.uleb128 0x1140
	.ascii "SPI_GETCLEARTYPE 0x1048\0"
	.byte	0x1
	.uleb128 0x1141
	.ascii "SPI_SETCLEARTYPE 0x1049\0"
	.byte	0x1
	.uleb128 0x1142
	.ascii "SPI_GETFOREGROUNDLOCKTIMEOUT 0x2000\0"
	.byte	0x1
	.uleb128 0x1143
	.ascii "SPI_SETFOREGROUNDLOCKTIMEOUT 0x2001\0"
	.byte	0x1
	.uleb128 0x1144
	.ascii "SPI_GETACTIVEWNDTRKTIMEOUT 0x2002\0"
	.byte	0x1
	.uleb128 0x1145
	.ascii "SPI_SETACTIVEWNDTRKTIMEOUT 0x2003\0"
	.byte	0x1
	.uleb128 0x1146
	.ascii "SPI_GETFOREGROUNDFLASHCOUNT 0x2004\0"
	.byte	0x1
	.uleb128 0x1147
	.ascii "SPI_SETFOREGROUNDFLASHCOUNT 0x2005\0"
	.byte	0x1
	.uleb128 0x1148
	.ascii "SPI_GETCARETWIDTH 0x2006\0"
	.byte	0x1
	.uleb128 0x1149
	.ascii "SPI_SETCARETWIDTH 0x2007\0"
	.byte	0x1
	.uleb128 0x114a
	.ascii "SPI_GETMOUSECLICKLOCKTIME 0x2008\0"
	.byte	0x1
	.uleb128 0x114b
	.ascii "SPI_SETMOUSECLICKLOCKTIME 0x2009\0"
	.byte	0x1
	.uleb128 0x114c
	.ascii "SPI_GETFONTSMOOTHINGTYPE 0x200A\0"
	.byte	0x1
	.uleb128 0x114d
	.ascii "SPI_SETFONTSMOOTHINGTYPE 0x200B\0"
	.byte	0x1
	.uleb128 0x114f
	.ascii "FE_FONTSMOOTHINGSTANDARD 0x0001\0"
	.byte	0x1
	.uleb128 0x1150
	.ascii "FE_FONTSMOOTHINGCLEARTYPE 0x0002\0"
	.byte	0x1
	.uleb128 0x1151
	.ascii "FE_FONTSMOOTHINGDOCKING 0x8000\0"
	.byte	0x1
	.uleb128 0x1153
	.ascii "SPI_GETFONTSMOOTHINGCONTRAST 0x200C\0"
	.byte	0x1
	.uleb128 0x1154
	.ascii "SPI_SETFONTSMOOTHINGCONTRAST 0x200D\0"
	.byte	0x1
	.uleb128 0x1155
	.ascii "SPI_GETFOCUSBORDERWIDTH 0x200E\0"
	.byte	0x1
	.uleb128 0x1156
	.ascii "SPI_SETFOCUSBORDERWIDTH 0x200F\0"
	.byte	0x1
	.uleb128 0x1157
	.ascii "SPI_GETFOCUSBORDERHEIGHT 0x2010\0"
	.byte	0x1
	.uleb128 0x1158
	.ascii "SPI_SETFOCUSBORDERHEIGHT 0x2011\0"
	.byte	0x1
	.uleb128 0x1159
	.ascii "SPI_GETFONTSMOOTHINGORIENTATION 0x2012\0"
	.byte	0x1
	.uleb128 0x115a
	.ascii "SPI_SETFONTSMOOTHINGORIENTATION 0x2013\0"
	.byte	0x1
	.uleb128 0x115b
	.ascii "SPI_GETMESSAGEDURATION 0x2016\0"
	.byte	0x1
	.uleb128 0x115c
	.ascii "SPI_SETMESSAGEDURATION 0x2017\0"
	.byte	0x1
	.uleb128 0x115e
	.ascii "FE_FONTSMOOTHINGORIENTATIONBGR 0x0000\0"
	.byte	0x1
	.uleb128 0x115f
	.ascii "FE_FONTSMOOTHINGORIENTATIONRGB 0x0001\0"
	.byte	0x1
	.uleb128 0x1161
	.ascii "SPIF_UPDATEINIFILE 0x0001\0"
	.byte	0x1
	.uleb128 0x1162
	.ascii "SPIF_SENDWININICHANGE 0x0002\0"
	.byte	0x1
	.uleb128 0x1163
	.ascii "SPIF_SENDCHANGE SPIF_SENDWININICHANGE\0"
	.byte	0x1
	.uleb128 0x1165
	.ascii "METRICS_USEDEFAULT -1\0"
	.byte	0x1
	.uleb128 0x1192
	.ascii "ARW_BOTTOMLEFT __MSABI_LONG(0x0000)\0"
	.byte	0x1
	.uleb128 0x1193
	.ascii "ARW_BOTTOMRIGHT __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0x1194
	.ascii "ARW_TOPLEFT __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0x1195
	.ascii "ARW_TOPRIGHT __MSABI_LONG(0x0003)\0"
	.byte	0x1
	.uleb128 0x1196
	.ascii "ARW_STARTMASK __MSABI_LONG(0x0003)\0"
	.byte	0x1
	.uleb128 0x1197
	.ascii "ARW_STARTRIGHT __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0x1198
	.ascii "ARW_STARTTOP __MSABI_LONG(0x0002)\0"
	.byte	0x1
	.uleb128 0x119a
	.ascii "ARW_LEFT __MSABI_LONG(0x0000)\0"
	.byte	0x1
	.uleb128 0x119b
	.ascii "ARW_RIGHT __MSABI_LONG(0x0000)\0"
	.byte	0x1
	.uleb128 0x119c
	.ascii "ARW_UP __MSABI_LONG(0x0004)\0"
	.byte	0x1
	.uleb128 0x119d
	.ascii "ARW_DOWN __MSABI_LONG(0x0004)\0"
	.byte	0x1
	.uleb128 0x119e
	.ascii "ARW_HIDE __MSABI_LONG(0x0008)\0"
	.byte	0x1
	.uleb128 0x11dc
	.ascii "SERKF_SERIALKEYSON 0x00000001\0"
	.byte	0x1
	.uleb128 0x11dd
	.ascii "SERKF_AVAILABLE 0x00000002\0"
	.byte	0x1
	.uleb128 0x11de
	.ascii "SERKF_INDICATOR 0x00000004\0"
	.byte	0x1
	.uleb128 0x11ef
	.ascii "HCF_HIGHCONTRASTON 0x00000001\0"
	.byte	0x1
	.uleb128 0x11f0
	.ascii "HCF_AVAILABLE 0x00000002\0"
	.byte	0x1
	.uleb128 0x11f1
	.ascii "HCF_HOTKEYACTIVE 0x00000004\0"
	.byte	0x1
	.uleb128 0x11f2
	.ascii "HCF_CONFIRMHOTKEY 0x00000008\0"
	.byte	0x1
	.uleb128 0x11f3
	.ascii "HCF_HOTKEYSOUND 0x00000010\0"
	.byte	0x1
	.uleb128 0x11f4
	.ascii "HCF_INDICATOR 0x00000020\0"
	.byte	0x1
	.uleb128 0x11f5
	.ascii "HCF_HOTKEYAVAILABLE 0x00000040\0"
	.byte	0x1
	.uleb128 0x11f6
	.ascii "HCF_LOGONDESKTOP 0x00000100\0"
	.byte	0x1
	.uleb128 0x11f7
	.ascii "HCF_DEFAULTDESKTOP 0x00000200\0"
	.byte	0x1
	.uleb128 0x11f9
	.ascii "CDS_UPDATEREGISTRY 0x00000001\0"
	.byte	0x1
	.uleb128 0x11fa
	.ascii "CDS_TEST 0x00000002\0"
	.byte	0x1
	.uleb128 0x11fb
	.ascii "CDS_FULLSCREEN 0x00000004\0"
	.byte	0x1
	.uleb128 0x11fc
	.ascii "CDS_GLOBAL 0x00000008\0"
	.byte	0x1
	.uleb128 0x11fd
	.ascii "CDS_SET_PRIMARY 0x00000010\0"
	.byte	0x1
	.uleb128 0x11fe
	.ascii "CDS_VIDEOPARAMETERS 0x00000020\0"
	.byte	0x1
	.uleb128 0x11ff
	.ascii "CDS_RESET 0x40000000\0"
	.byte	0x1
	.uleb128 0x1200
	.ascii "CDS_NORESET 0x10000000\0"
	.file 364 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/tvout.h"
	.byte	0x3
	.uleb128 0x1202
	.uleb128 0x16c
	.byte	0x1
	.uleb128 0x7
	.ascii "__TVOUT__ \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x141
	.byte	0x2
	.uleb128 0x33
	.ascii "DEFINE_GUID\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) EXTERN_C const GUID name\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "DEFINE_OLEGUID(name,l,w1,w2) DEFINE_GUID (name, l, w1, w2, 0xc0, 0, 0, 0, 0, 0, 0, 0x46)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x25
	.ascii "VP_COMMAND_GET 0x0001\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "VP_COMMAND_SET 0x0002\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "VP_FLAGS_TV_MODE 0x0001\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "VP_FLAGS_TV_STANDARD 0x0002\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "VP_FLAGS_FLICKER 0x0004\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "VP_FLAGS_OVERSCAN 0x0008\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "VP_FLAGS_MAX_UNSCALED 0x0010\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "VP_FLAGS_POSITION 0x0020\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "VP_FLAGS_BRIGHTNESS 0x0040\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "VP_FLAGS_CONTRAST 0x0080\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "VP_FLAGS_COPYPROTECT 0x0100\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "VP_MODE_WIN_GRAPHICS 0x0001\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "VP_MODE_TV_PLAYBACK 0x0002\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "VP_TV_STANDARD_NTSC_M 0x0001\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "VP_TV_STANDARD_NTSC_M_J 0x0002\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "VP_TV_STANDARD_PAL_B 0x0004\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "VP_TV_STANDARD_PAL_D 0x0008\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "VP_TV_STANDARD_PAL_H 0x0010\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "VP_TV_STANDARD_PAL_I 0x0020\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "VP_TV_STANDARD_PAL_M 0x0040\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "VP_TV_STANDARD_PAL_N 0x0080\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "VP_TV_STANDARD_SECAM_B 0x0100\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "VP_TV_STANDARD_SECAM_D 0x0200\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "VP_TV_STANDARD_SECAM_G 0x0400\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "VP_TV_STANDARD_SECAM_H 0x0800\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "VP_TV_STANDARD_SECAM_K 0x1000\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "VP_TV_STANDARD_SECAM_K1 0x2000\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "VP_TV_STANDARD_SECAM_L 0x4000\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "VP_TV_STANDARD_WIN_VGA 0x8000\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "VP_TV_STANDARD_NTSC_433 0x00010000\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "VP_TV_STANDARD_PAL_G 0x00020000\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "VP_TV_STANDARD_PAL_60 0x00040000\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "VP_TV_STANDARD_SECAM_L1 0x00080000\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "VP_CP_TYPE_APS_TRIGGER 0x0001\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "VP_CP_TYPE_MACROVISION 0x0002\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "VP_CP_CMD_ACTIVATE 0x0001\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "VP_CP_CMD_DEACTIVATE 0x0002\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "VP_CP_CMD_CHANGE 0x0004\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x1204
	.ascii "DISP_CHANGE_SUCCESSFUL 0\0"
	.byte	0x1
	.uleb128 0x1205
	.ascii "DISP_CHANGE_RESTART 1\0"
	.byte	0x1
	.uleb128 0x1206
	.ascii "DISP_CHANGE_FAILED -1\0"
	.byte	0x1
	.uleb128 0x1207
	.ascii "DISP_CHANGE_BADMODE -2\0"
	.byte	0x1
	.uleb128 0x1208
	.ascii "DISP_CHANGE_NOTUPDATED -3\0"
	.byte	0x1
	.uleb128 0x1209
	.ascii "DISP_CHANGE_BADFLAGS -4\0"
	.byte	0x1
	.uleb128 0x120a
	.ascii "DISP_CHANGE_BADPARAM -5\0"
	.byte	0x1
	.uleb128 0x120b
	.ascii "DISP_CHANGE_BADDUALVIEW -6\0"
	.byte	0x1
	.uleb128 0x1210
	.ascii "ChangeDisplaySettings __MINGW_NAME_AW(ChangeDisplaySettings)\0"
	.byte	0x1
	.uleb128 0x1211
	.ascii "ChangeDisplaySettingsEx __MINGW_NAME_AW(ChangeDisplaySettingsEx)\0"
	.byte	0x1
	.uleb128 0x1212
	.ascii "EnumDisplaySettings __MINGW_NAME_AW(EnumDisplaySettings)\0"
	.byte	0x1
	.uleb128 0x1213
	.ascii "EnumDisplaySettingsEx __MINGW_NAME_AW(EnumDisplaySettingsEx)\0"
	.byte	0x1
	.uleb128 0x1214
	.ascii "EnumDisplayDevices __MINGW_NAME_AW(EnumDisplayDevices)\0"
	.byte	0x1
	.uleb128 0x121b
	.ascii "ENUM_CURRENT_SETTINGS ((DWORD)-1)\0"
	.byte	0x1
	.uleb128 0x121c
	.ascii "ENUM_REGISTRY_SETTINGS ((DWORD)-2)\0"
	.byte	0x1
	.uleb128 0x1223
	.ascii "EDS_RAWMODE 0x00000002\0"
	.byte	0x1
	.uleb128 0x122a
	.ascii "SystemParametersInfo __MINGW_NAME_AW(SystemParametersInfo)\0"
	.byte	0x1
	.uleb128 0x1239
	.ascii "FKF_FILTERKEYSON 0x00000001\0"
	.byte	0x1
	.uleb128 0x123a
	.ascii "FKF_AVAILABLE 0x00000002\0"
	.byte	0x1
	.uleb128 0x123b
	.ascii "FKF_HOTKEYACTIVE 0x00000004\0"
	.byte	0x1
	.uleb128 0x123c
	.ascii "FKF_CONFIRMHOTKEY 0x00000008\0"
	.byte	0x1
	.uleb128 0x123d
	.ascii "FKF_HOTKEYSOUND 0x00000010\0"
	.byte	0x1
	.uleb128 0x123e
	.ascii "FKF_INDICATOR 0x00000020\0"
	.byte	0x1
	.uleb128 0x123f
	.ascii "FKF_CLICKON 0x00000040\0"
	.byte	0x1
	.uleb128 0x1246
	.ascii "SKF_STICKYKEYSON 0x00000001\0"
	.byte	0x1
	.uleb128 0x1247
	.ascii "SKF_AVAILABLE 0x00000002\0"
	.byte	0x1
	.uleb128 0x1248
	.ascii "SKF_HOTKEYACTIVE 0x00000004\0"
	.byte	0x1
	.uleb128 0x1249
	.ascii "SKF_CONFIRMHOTKEY 0x00000008\0"
	.byte	0x1
	.uleb128 0x124a
	.ascii "SKF_HOTKEYSOUND 0x00000010\0"
	.byte	0x1
	.uleb128 0x124b
	.ascii "SKF_INDICATOR 0x00000020\0"
	.byte	0x1
	.uleb128 0x124c
	.ascii "SKF_AUDIBLEFEEDBACK 0x00000040\0"
	.byte	0x1
	.uleb128 0x124d
	.ascii "SKF_TRISTATE 0x00000080\0"
	.byte	0x1
	.uleb128 0x124e
	.ascii "SKF_TWOKEYSOFF 0x00000100\0"
	.byte	0x1
	.uleb128 0x124f
	.ascii "SKF_LALTLATCHED 0x10000000\0"
	.byte	0x1
	.uleb128 0x1250
	.ascii "SKF_LCTLLATCHED 0x04000000\0"
	.byte	0x1
	.uleb128 0x1251
	.ascii "SKF_LSHIFTLATCHED 0x01000000\0"
	.byte	0x1
	.uleb128 0x1252
	.ascii "SKF_RALTLATCHED 0x20000000\0"
	.byte	0x1
	.uleb128 0x1253
	.ascii "SKF_RCTLLATCHED 0x08000000\0"
	.byte	0x1
	.uleb128 0x1254
	.ascii "SKF_RSHIFTLATCHED 0x02000000\0"
	.byte	0x1
	.uleb128 0x1255
	.ascii "SKF_LWINLATCHED 0x40000000\0"
	.byte	0x1
	.uleb128 0x1256
	.ascii "SKF_RWINLATCHED 0x80000000\0"
	.byte	0x1
	.uleb128 0x1257
	.ascii "SKF_LALTLOCKED 0x00100000\0"
	.byte	0x1
	.uleb128 0x1258
	.ascii "SKF_LCTLLOCKED 0x00040000\0"
	.byte	0x1
	.uleb128 0x1259
	.ascii "SKF_LSHIFTLOCKED 0x00010000\0"
	.byte	0x1
	.uleb128 0x125a
	.ascii "SKF_RALTLOCKED 0x00200000\0"
	.byte	0x1
	.uleb128 0x125b
	.ascii "SKF_RCTLLOCKED 0x00080000\0"
	.byte	0x1
	.uleb128 0x125c
	.ascii "SKF_RSHIFTLOCKED 0x00020000\0"
	.byte	0x1
	.uleb128 0x125d
	.ascii "SKF_LWINLOCKED 0x00400000\0"
	.byte	0x1
	.uleb128 0x125e
	.ascii "SKF_RWINLOCKED 0x00800000\0"
	.byte	0x1
	.uleb128 0x126a
	.ascii "MKF_MOUSEKEYSON 0x00000001\0"
	.byte	0x1
	.uleb128 0x126b
	.ascii "MKF_AVAILABLE 0x00000002\0"
	.byte	0x1
	.uleb128 0x126c
	.ascii "MKF_HOTKEYACTIVE 0x00000004\0"
	.byte	0x1
	.uleb128 0x126d
	.ascii "MKF_CONFIRMHOTKEY 0x00000008\0"
	.byte	0x1
	.uleb128 0x126e
	.ascii "MKF_HOTKEYSOUND 0x00000010\0"
	.byte	0x1
	.uleb128 0x126f
	.ascii "MKF_INDICATOR 0x00000020\0"
	.byte	0x1
	.uleb128 0x1270
	.ascii "MKF_MODIFIERS 0x00000040\0"
	.byte	0x1
	.uleb128 0x1271
	.ascii "MKF_REPLACENUMBERS 0x00000080\0"
	.byte	0x1
	.uleb128 0x1272
	.ascii "MKF_LEFTBUTTONSEL 0x10000000\0"
	.byte	0x1
	.uleb128 0x1273
	.ascii "MKF_RIGHTBUTTONSEL 0x20000000\0"
	.byte	0x1
	.uleb128 0x1274
	.ascii "MKF_LEFTBUTTONDOWN 0x01000000\0"
	.byte	0x1
	.uleb128 0x1275
	.ascii "MKF_RIGHTBUTTONDOWN 0x02000000\0"
	.byte	0x1
	.uleb128 0x1276
	.ascii "MKF_MOUSEMODE 0x80000000\0"
	.byte	0x1
	.uleb128 0x127e
	.ascii "ATF_TIMEOUTON 0x00000001\0"
	.byte	0x1
	.uleb128 0x127f
	.ascii "ATF_ONOFFFEEDBACK 0x00000002\0"
	.byte	0x1
	.uleb128 0x1281
	.ascii "SSGF_NONE 0\0"
	.byte	0x1
	.uleb128 0x1282
	.ascii "SSGF_DISPLAY 3\0"
	.byte	0x1
	.uleb128 0x1284
	.ascii "SSTF_NONE 0\0"
	.byte	0x1
	.uleb128 0x1285
	.ascii "SSTF_CHARS 1\0"
	.byte	0x1
	.uleb128 0x1286
	.ascii "SSTF_BORDER 2\0"
	.byte	0x1
	.uleb128 0x1287
	.ascii "SSTF_DISPLAY 3\0"
	.byte	0x1
	.uleb128 0x1289
	.ascii "SSWF_NONE 0\0"
	.byte	0x1
	.uleb128 0x128a
	.ascii "SSWF_TITLE 1\0"
	.byte	0x1
	.uleb128 0x128b
	.ascii "SSWF_WINDOW 2\0"
	.byte	0x1
	.uleb128 0x128c
	.ascii "SSWF_DISPLAY 3\0"
	.byte	0x1
	.uleb128 0x128d
	.ascii "SSWF_CUSTOM 4\0"
	.byte	0x1
	.uleb128 0x12b0
	.ascii "SSF_SOUNDSENTRYON 0x00000001\0"
	.byte	0x1
	.uleb128 0x12b1
	.ascii "SSF_AVAILABLE 0x00000002\0"
	.byte	0x1
	.uleb128 0x12b2
	.ascii "SSF_INDICATOR 0x00000004\0"
	.byte	0x1
	.uleb128 0x12b9
	.ascii "TKF_TOGGLEKEYSON 0x00000001\0"
	.byte	0x1
	.uleb128 0x12ba
	.ascii "TKF_AVAILABLE 0x00000002\0"
	.byte	0x1
	.uleb128 0x12bb
	.ascii "TKF_HOTKEYACTIVE 0x00000004\0"
	.byte	0x1
	.uleb128 0x12bc
	.ascii "TKF_CONFIRMHOTKEY 0x00000008\0"
	.byte	0x1
	.uleb128 0x12bd
	.ascii "TKF_HOTKEYSOUND 0x00000010\0"
	.byte	0x1
	.uleb128 0x12be
	.ascii "TKF_INDICATOR 0x00000020\0"
	.byte	0x1
	.uleb128 0x12c2
	.ascii "SLE_ERROR 0x00000001\0"
	.byte	0x1
	.uleb128 0x12c3
	.ascii "SLE_MINORERROR 0x00000002\0"
	.byte	0x1
	.uleb128 0x12c4
	.ascii "SLE_WARNING 0x00000003\0"
	.byte	0x1
	.uleb128 0x12cd
	.ascii "MONITOR_DEFAULTTONULL 0x00000000\0"
	.byte	0x1
	.uleb128 0x12ce
	.ascii "MONITOR_DEFAULTTOPRIMARY 0x00000001\0"
	.byte	0x1
	.uleb128 0x12cf
	.ascii "MONITOR_DEFAULTTONEAREST 0x00000002\0"
	.byte	0x1
	.uleb128 0x12d5
	.ascii "MONITORINFOF_PRIMARY 0x00000001\0"
	.byte	0x1
	.uleb128 0x1306
	.ascii "GetMonitorInfo __MINGW_NAME_AW(GetMonitorInfo)\0"
	.byte	0x1
	.uleb128 0x1317
	.ascii "WINEVENT_OUTOFCONTEXT 0x0000\0"
	.byte	0x1
	.uleb128 0x1318
	.ascii "WINEVENT_SKIPOWNTHREAD 0x0001\0"
	.byte	0x1
	.uleb128 0x1319
	.ascii "WINEVENT_SKIPOWNPROCESS 0x0002\0"
	.byte	0x1
	.uleb128 0x131a
	.ascii "WINEVENT_INCONTEXT 0x0004\0"
	.byte	0x1
	.uleb128 0x131e
	.ascii "CHILDID_SELF 0\0"
	.byte	0x1
	.uleb128 0x131f
	.ascii "INDEXID_OBJECT 0\0"
	.byte	0x1
	.uleb128 0x1320
	.ascii "INDEXID_CONTAINER 0\0"
	.byte	0x1
	.uleb128 0x1322
	.ascii "OBJID_WINDOW ((LONG)0x00000000)\0"
	.byte	0x1
	.uleb128 0x1323
	.ascii "OBJID_SYSMENU ((LONG)0xFFFFFFFF)\0"
	.byte	0x1
	.uleb128 0x1324
	.ascii "OBJID_TITLEBAR ((LONG)0xFFFFFFFE)\0"
	.byte	0x1
	.uleb128 0x1325
	.ascii "OBJID_MENU ((LONG)0xFFFFFFFD)\0"
	.byte	0x1
	.uleb128 0x1326
	.ascii "OBJID_CLIENT ((LONG)0xFFFFFFFC)\0"
	.byte	0x1
	.uleb128 0x1327
	.ascii "OBJID_VSCROLL ((LONG)0xFFFFFFFB)\0"
	.byte	0x1
	.uleb128 0x1328
	.ascii "OBJID_HSCROLL ((LONG)0xFFFFFFFA)\0"
	.byte	0x1
	.uleb128 0x1329
	.ascii "OBJID_SIZEGRIP ((LONG)0xFFFFFFF9)\0"
	.byte	0x1
	.uleb128 0x132a
	.ascii "OBJID_CARET ((LONG)0xFFFFFFF8)\0"
	.byte	0x1
	.uleb128 0x132b
	.ascii "OBJID_CURSOR ((LONG)0xFFFFFFF7)\0"
	.byte	0x1
	.uleb128 0x132c
	.ascii "OBJID_ALERT ((LONG)0xFFFFFFF6)\0"
	.byte	0x1
	.uleb128 0x132d
	.ascii "OBJID_SOUND ((LONG)0xFFFFFFF5)\0"
	.byte	0x1
	.uleb128 0x132e
	.ascii "OBJID_QUERYCLASSNAMEIDX ((LONG)0xFFFFFFF4)\0"
	.byte	0x1
	.uleb128 0x132f
	.ascii "OBJID_NATIVEOM ((LONG)0xFFFFFFF0)\0"
	.byte	0x1
	.uleb128 0x1331
	.ascii "EVENT_MIN 0x00000001\0"
	.byte	0x1
	.uleb128 0x1332
	.ascii "EVENT_MAX 0x7FFFFFFF\0"
	.byte	0x1
	.uleb128 0x1334
	.ascii "EVENT_SYSTEM_SOUND 0x0001\0"
	.byte	0x1
	.uleb128 0x1335
	.ascii "EVENT_SYSTEM_ALERT 0x0002\0"
	.byte	0x1
	.uleb128 0x1336
	.ascii "EVENT_SYSTEM_FOREGROUND 0x0003\0"
	.byte	0x1
	.uleb128 0x1337
	.ascii "EVENT_SYSTEM_MENUSTART 0x0004\0"
	.byte	0x1
	.uleb128 0x1338
	.ascii "EVENT_SYSTEM_MENUEND 0x0005\0"
	.byte	0x1
	.uleb128 0x1339
	.ascii "EVENT_SYSTEM_MENUPOPUPSTART 0x0006\0"
	.byte	0x1
	.uleb128 0x133a
	.ascii "EVENT_SYSTEM_MENUPOPUPEND 0x0007\0"
	.byte	0x1
	.uleb128 0x133b
	.ascii "EVENT_SYSTEM_CAPTURESTART 0x0008\0"
	.byte	0x1
	.uleb128 0x133c
	.ascii "EVENT_SYSTEM_CAPTUREEND 0x0009\0"
	.byte	0x1
	.uleb128 0x133d
	.ascii "EVENT_SYSTEM_MOVESIZESTART 0x000A\0"
	.byte	0x1
	.uleb128 0x133e
	.ascii "EVENT_SYSTEM_MOVESIZEEND 0x000B\0"
	.byte	0x1
	.uleb128 0x133f
	.ascii "EVENT_SYSTEM_CONTEXTHELPSTART 0x000C\0"
	.byte	0x1
	.uleb128 0x1340
	.ascii "EVENT_SYSTEM_CONTEXTHELPEND 0x000D\0"
	.byte	0x1
	.uleb128 0x1341
	.ascii "EVENT_SYSTEM_DRAGDROPSTART 0x000E\0"
	.byte	0x1
	.uleb128 0x1342
	.ascii "EVENT_SYSTEM_DRAGDROPEND 0x000F\0"
	.byte	0x1
	.uleb128 0x1343
	.ascii "EVENT_SYSTEM_DIALOGSTART 0x0010\0"
	.byte	0x1
	.uleb128 0x1344
	.ascii "EVENT_SYSTEM_DIALOGEND 0x0011\0"
	.byte	0x1
	.uleb128 0x1345
	.ascii "EVENT_SYSTEM_SCROLLINGSTART 0x0012\0"
	.byte	0x1
	.uleb128 0x1346
	.ascii "EVENT_SYSTEM_SCROLLINGEND 0x0013\0"
	.byte	0x1
	.uleb128 0x1347
	.ascii "EVENT_SYSTEM_SWITCHSTART 0x0014\0"
	.byte	0x1
	.uleb128 0x1348
	.ascii "EVENT_SYSTEM_SWITCHEND 0x0015\0"
	.byte	0x1
	.uleb128 0x1349
	.ascii "EVENT_SYSTEM_MINIMIZESTART 0x0016\0"
	.byte	0x1
	.uleb128 0x134a
	.ascii "EVENT_SYSTEM_MINIMIZEEND 0x0017\0"
	.byte	0x1
	.uleb128 0x134c
	.ascii "EVENT_CONSOLE_CARET 0x4001\0"
	.byte	0x1
	.uleb128 0x134d
	.ascii "EVENT_CONSOLE_UPDATE_REGION 0x4002\0"
	.byte	0x1
	.uleb128 0x134e
	.ascii "EVENT_CONSOLE_UPDATE_SIMPLE 0x4003\0"
	.byte	0x1
	.uleb128 0x134f
	.ascii "EVENT_CONSOLE_UPDATE_SCROLL 0x4004\0"
	.byte	0x1
	.uleb128 0x1350
	.ascii "EVENT_CONSOLE_LAYOUT 0x4005\0"
	.byte	0x1
	.uleb128 0x1351
	.ascii "EVENT_CONSOLE_START_APPLICATION 0x4006\0"
	.byte	0x1
	.uleb128 0x1352
	.ascii "EVENT_CONSOLE_END_APPLICATION 0x4007\0"
	.byte	0x1
	.uleb128 0x1354
	.ascii "CONSOLE_APPLICATION_16BIT 0x0001\0"
	.byte	0x1
	.uleb128 0x1356
	.ascii "CONSOLE_CARET_SELECTION 0x0001\0"
	.byte	0x1
	.uleb128 0x1357
	.ascii "CONSOLE_CARET_VISIBLE 0x0002\0"
	.byte	0x1
	.uleb128 0x1359
	.ascii "EVENT_OBJECT_CREATE 0x8000\0"
	.byte	0x1
	.uleb128 0x135a
	.ascii "EVENT_OBJECT_DESTROY 0x8001\0"
	.byte	0x1
	.uleb128 0x135b
	.ascii "EVENT_OBJECT_SHOW 0x8002\0"
	.byte	0x1
	.uleb128 0x135c
	.ascii "EVENT_OBJECT_HIDE 0x8003\0"
	.byte	0x1
	.uleb128 0x135d
	.ascii "EVENT_OBJECT_REORDER 0x8004\0"
	.byte	0x1
	.uleb128 0x135f
	.ascii "EVENT_OBJECT_FOCUS 0x8005\0"
	.byte	0x1
	.uleb128 0x1360
	.ascii "EVENT_OBJECT_SELECTION 0x8006\0"
	.byte	0x1
	.uleb128 0x1361
	.ascii "EVENT_OBJECT_SELECTIONADD 0x8007\0"
	.byte	0x1
	.uleb128 0x1362
	.ascii "EVENT_OBJECT_SELECTIONREMOVE 0x8008\0"
	.byte	0x1
	.uleb128 0x1363
	.ascii "EVENT_OBJECT_SELECTIONWITHIN 0x8009\0"
	.byte	0x1
	.uleb128 0x1365
	.ascii "EVENT_OBJECT_STATECHANGE 0x800A\0"
	.byte	0x1
	.uleb128 0x1367
	.ascii "EVENT_OBJECT_LOCATIONCHANGE 0x800B\0"
	.byte	0x1
	.uleb128 0x1369
	.ascii "EVENT_OBJECT_NAMECHANGE 0x800C\0"
	.byte	0x1
	.uleb128 0x136a
	.ascii "EVENT_OBJECT_DESCRIPTIONCHANGE 0x800D\0"
	.byte	0x1
	.uleb128 0x136b
	.ascii "EVENT_OBJECT_VALUECHANGE 0x800E\0"
	.byte	0x1
	.uleb128 0x136c
	.ascii "EVENT_OBJECT_PARENTCHANGE 0x800F\0"
	.byte	0x1
	.uleb128 0x136d
	.ascii "EVENT_OBJECT_HELPCHANGE 0x8010\0"
	.byte	0x1
	.uleb128 0x136e
	.ascii "EVENT_OBJECT_DEFACTIONCHANGE 0x8011\0"
	.byte	0x1
	.uleb128 0x136f
	.ascii "EVENT_OBJECT_ACCELERATORCHANGE 0x8012\0"
	.byte	0x1
	.uleb128 0x1371
	.ascii "SOUND_SYSTEM_STARTUP 1\0"
	.byte	0x1
	.uleb128 0x1372
	.ascii "SOUND_SYSTEM_SHUTDOWN 2\0"
	.byte	0x1
	.uleb128 0x1373
	.ascii "SOUND_SYSTEM_BEEP 3\0"
	.byte	0x1
	.uleb128 0x1374
	.ascii "SOUND_SYSTEM_ERROR 4\0"
	.byte	0x1
	.uleb128 0x1375
	.ascii "SOUND_SYSTEM_QUESTION 5\0"
	.byte	0x1
	.uleb128 0x1376
	.ascii "SOUND_SYSTEM_WARNING 6\0"
	.byte	0x1
	.uleb128 0x1377
	.ascii "SOUND_SYSTEM_INFORMATION 7\0"
	.byte	0x1
	.uleb128 0x1378
	.ascii "SOUND_SYSTEM_MAXIMIZE 8\0"
	.byte	0x1
	.uleb128 0x1379
	.ascii "SOUND_SYSTEM_MINIMIZE 9\0"
	.byte	0x1
	.uleb128 0x137a
	.ascii "SOUND_SYSTEM_RESTOREUP 10\0"
	.byte	0x1
	.uleb128 0x137b
	.ascii "SOUND_SYSTEM_RESTOREDOWN 11\0"
	.byte	0x1
	.uleb128 0x137c
	.ascii "SOUND_SYSTEM_APPSTART 12\0"
	.byte	0x1
	.uleb128 0x137d
	.ascii "SOUND_SYSTEM_FAULT 13\0"
	.byte	0x1
	.uleb128 0x137e
	.ascii "SOUND_SYSTEM_APPEND 14\0"
	.byte	0x1
	.uleb128 0x137f
	.ascii "SOUND_SYSTEM_MENUCOMMAND 15\0"
	.byte	0x1
	.uleb128 0x1380
	.ascii "SOUND_SYSTEM_MENUPOPUP 16\0"
	.byte	0x1
	.uleb128 0x1381
	.ascii "CSOUND_SYSTEM 16\0"
	.byte	0x1
	.uleb128 0x1383
	.ascii "ALERT_SYSTEM_INFORMATIONAL 1\0"
	.byte	0x1
	.uleb128 0x1384
	.ascii "ALERT_SYSTEM_WARNING 2\0"
	.byte	0x1
	.uleb128 0x1385
	.ascii "ALERT_SYSTEM_ERROR 3\0"
	.byte	0x1
	.uleb128 0x1386
	.ascii "ALERT_SYSTEM_QUERY 4\0"
	.byte	0x1
	.uleb128 0x1387
	.ascii "ALERT_SYSTEM_CRITICAL 5\0"
	.byte	0x1
	.uleb128 0x1388
	.ascii "CALERT_SYSTEM 6\0"
	.byte	0x1
	.uleb128 0x1396
	.ascii "GUI_CARETBLINKING 0x00000001\0"
	.byte	0x1
	.uleb128 0x1397
	.ascii "GUI_INMOVESIZE 0x00000002\0"
	.byte	0x1
	.uleb128 0x1398
	.ascii "GUI_INMENUMODE 0x00000004\0"
	.byte	0x1
	.uleb128 0x1399
	.ascii "GUI_SYSTEMMENUMODE 0x00000008\0"
	.byte	0x1
	.uleb128 0x139a
	.ascii "GUI_POPUPMENUMODE 0x00000010\0"
	.byte	0x1
	.uleb128 0x139b
	.ascii "GUI_16BITTASK 0x00000020\0"
	.byte	0x1
	.uleb128 0x139d
	.ascii "GetWindowModuleFileName __MINGW_NAME_AW(GetWindowModuleFileName)\0"
	.byte	0x1
	.uleb128 0x13a4
	.ascii "STATE_SYSTEM_UNAVAILABLE 0x00000001\0"
	.byte	0x1
	.uleb128 0x13a5
	.ascii "STATE_SYSTEM_SELECTED 0x00000002\0"
	.byte	0x1
	.uleb128 0x13a6
	.ascii "STATE_SYSTEM_FOCUSED 0x00000004\0"
	.byte	0x1
	.uleb128 0x13a7
	.ascii "STATE_SYSTEM_PRESSED 0x00000008\0"
	.byte	0x1
	.uleb128 0x13a8
	.ascii "STATE_SYSTEM_CHECKED 0x00000010\0"
	.byte	0x1
	.uleb128 0x13a9
	.ascii "STATE_SYSTEM_MIXED 0x00000020\0"
	.byte	0x1
	.uleb128 0x13aa
	.ascii "STATE_SYSTEM_INDETERMINATE STATE_SYSTEM_MIXED\0"
	.byte	0x1
	.uleb128 0x13ab
	.ascii "STATE_SYSTEM_READONLY 0x00000040\0"
	.byte	0x1
	.uleb128 0x13ac
	.ascii "STATE_SYSTEM_HOTTRACKED 0x00000080\0"
	.byte	0x1
	.uleb128 0x13ad
	.ascii "STATE_SYSTEM_DEFAULT 0x00000100\0"
	.byte	0x1
	.uleb128 0x13ae
	.ascii "STATE_SYSTEM_EXPANDED 0x00000200\0"
	.byte	0x1
	.uleb128 0x13af
	.ascii "STATE_SYSTEM_COLLAPSED 0x00000400\0"
	.byte	0x1
	.uleb128 0x13b0
	.ascii "STATE_SYSTEM_BUSY 0x00000800\0"
	.byte	0x1
	.uleb128 0x13b1
	.ascii "STATE_SYSTEM_FLOATING 0x00001000\0"
	.byte	0x1
	.uleb128 0x13b2
	.ascii "STATE_SYSTEM_MARQUEED 0x00002000\0"
	.byte	0x1
	.uleb128 0x13b3
	.ascii "STATE_SYSTEM_ANIMATED 0x00004000\0"
	.byte	0x1
	.uleb128 0x13b4
	.ascii "STATE_SYSTEM_INVISIBLE 0x00008000\0"
	.byte	0x1
	.uleb128 0x13b5
	.ascii "STATE_SYSTEM_OFFSCREEN 0x00010000\0"
	.byte	0x1
	.uleb128 0x13b6
	.ascii "STATE_SYSTEM_SIZEABLE 0x00020000\0"
	.byte	0x1
	.uleb128 0x13b7
	.ascii "STATE_SYSTEM_MOVEABLE 0x00040000\0"
	.byte	0x1
	.uleb128 0x13b8
	.ascii "STATE_SYSTEM_SELFVOICING 0x00080000\0"
	.byte	0x1
	.uleb128 0x13b9
	.ascii "STATE_SYSTEM_FOCUSABLE 0x00100000\0"
	.byte	0x1
	.uleb128 0x13ba
	.ascii "STATE_SYSTEM_SELECTABLE 0x00200000\0"
	.byte	0x1
	.uleb128 0x13bb
	.ascii "STATE_SYSTEM_LINKED 0x00400000\0"
	.byte	0x1
	.uleb128 0x13bc
	.ascii "STATE_SYSTEM_TRAVERSED 0x00800000\0"
	.byte	0x1
	.uleb128 0x13bd
	.ascii "STATE_SYSTEM_MULTISELECTABLE 0x01000000\0"
	.byte	0x1
	.uleb128 0x13be
	.ascii "STATE_SYSTEM_EXTSELECTABLE 0x02000000\0"
	.byte	0x1
	.uleb128 0x13bf
	.ascii "STATE_SYSTEM_ALERT_LOW 0x04000000\0"
	.byte	0x1
	.uleb128 0x13c0
	.ascii "STATE_SYSTEM_ALERT_MEDIUM 0x08000000\0"
	.byte	0x1
	.uleb128 0x13c1
	.ascii "STATE_SYSTEM_ALERT_HIGH 0x10000000\0"
	.byte	0x1
	.uleb128 0x13c2
	.ascii "STATE_SYSTEM_PROTECTED 0x20000000\0"
	.byte	0x1
	.uleb128 0x13c3
	.ascii "STATE_SYSTEM_VALID 0x3FFFFFFF\0"
	.byte	0x1
	.uleb128 0x13c6
	.ascii "CCHILDREN_TITLEBAR 5\0"
	.byte	0x1
	.uleb128 0x13c7
	.ascii "CCHILDREN_SCROLLBAR 5\0"
	.byte	0x1
	.uleb128 0x13d0
	.ascii "CURSOR_SHOWING 0x00000001\0"
	.byte	0x1
	.uleb128 0x13e1
	.ascii "WS_ACTIVECAPTION 0x0001\0"
	.byte	0x1
	.uleb128 0x1410
	.ascii "GA_PARENT 1\0"
	.byte	0x1
	.uleb128 0x1411
	.ascii "GA_ROOT 2\0"
	.byte	0x1
	.uleb128 0x1412
	.ascii "GA_ROOTOWNER 3\0"
	.byte	0x1
	.uleb128 0x1419
	.ascii "RealGetWindowClass __MINGW_NAME_AW(RealGetWindowClass)\0"
	.byte	0x1
	.uleb128 0x1427
	.ascii "GetAltTabInfo __MINGW_NAME_AW(GetAltTabInfo)\0"
	.byte	0x1
	.uleb128 0x1433
	.ascii "GET_RAWINPUT_CODE_WPARAM(wParam) ((wParam) & 0xff)\0"
	.byte	0x1
	.uleb128 0x1435
	.ascii "RIM_INPUT 0\0"
	.byte	0x1
	.uleb128 0x1436
	.ascii "RIM_INPUTSINK 1\0"
	.byte	0x1
	.uleb128 0x143f
	.ascii "RIM_TYPEMOUSE 0\0"
	.byte	0x1
	.uleb128 0x1440
	.ascii "RIM_TYPEKEYBOARD 1\0"
	.byte	0x1
	.uleb128 0x1441
	.ascii "RIM_TYPEHID 2\0"
	.byte	0x1
	.uleb128 0x1452
	.ascii "RI_MOUSE_LEFT_BUTTON_DOWN 0x0001\0"
	.byte	0x1
	.uleb128 0x1453
	.ascii "RI_MOUSE_LEFT_BUTTON_UP 0x0002\0"
	.byte	0x1
	.uleb128 0x1454
	.ascii "RI_MOUSE_RIGHT_BUTTON_DOWN 0x0004\0"
	.byte	0x1
	.uleb128 0x1455
	.ascii "RI_MOUSE_RIGHT_BUTTON_UP 0x0008\0"
	.byte	0x1
	.uleb128 0x1456
	.ascii "RI_MOUSE_MIDDLE_BUTTON_DOWN 0x0010\0"
	.byte	0x1
	.uleb128 0x1457
	.ascii "RI_MOUSE_MIDDLE_BUTTON_UP 0x0020\0"
	.byte	0x1
	.uleb128 0x1459
	.ascii "RI_MOUSE_BUTTON_1_DOWN RI_MOUSE_LEFT_BUTTON_DOWN\0"
	.byte	0x1
	.uleb128 0x145a
	.ascii "RI_MOUSE_BUTTON_1_UP RI_MOUSE_LEFT_BUTTON_UP\0"
	.byte	0x1
	.uleb128 0x145b
	.ascii "RI_MOUSE_BUTTON_2_DOWN RI_MOUSE_RIGHT_BUTTON_DOWN\0"
	.byte	0x1
	.uleb128 0x145c
	.ascii "RI_MOUSE_BUTTON_2_UP RI_MOUSE_RIGHT_BUTTON_UP\0"
	.byte	0x1
	.uleb128 0x145d
	.ascii "RI_MOUSE_BUTTON_3_DOWN RI_MOUSE_MIDDLE_BUTTON_DOWN\0"
	.byte	0x1
	.uleb128 0x145e
	.ascii "RI_MOUSE_BUTTON_3_UP RI_MOUSE_MIDDLE_BUTTON_UP\0"
	.byte	0x1
	.uleb128 0x1460
	.ascii "RI_MOUSE_BUTTON_4_DOWN 0x0040\0"
	.byte	0x1
	.uleb128 0x1461
	.ascii "RI_MOUSE_BUTTON_4_UP 0x0080\0"
	.byte	0x1
	.uleb128 0x1462
	.ascii "RI_MOUSE_BUTTON_5_DOWN 0x0100\0"
	.byte	0x1
	.uleb128 0x1463
	.ascii "RI_MOUSE_BUTTON_5_UP 0x0200\0"
	.byte	0x1
	.uleb128 0x1465
	.ascii "RI_MOUSE_WHEEL 0x0400\0"
	.byte	0x1
	.uleb128 0x1467
	.ascii "MOUSE_MOVE_RELATIVE 0\0"
	.byte	0x1
	.uleb128 0x1468
	.ascii "MOUSE_MOVE_ABSOLUTE 1\0"
	.byte	0x1
	.uleb128 0x1469
	.ascii "MOUSE_VIRTUAL_DESKTOP 0x02\0"
	.byte	0x1
	.uleb128 0x146a
	.ascii "MOUSE_ATTRIBUTES_CHANGED 0x04\0"
	.byte	0x1
	.uleb128 0x1475
	.ascii "KEYBOARD_OVERRUN_MAKE_CODE 0xFF\0"
	.byte	0x1
	.uleb128 0x1477
	.ascii "RI_KEY_MAKE 0\0"
	.byte	0x1
	.uleb128 0x1478
	.ascii "RI_KEY_BREAK 1\0"
	.byte	0x1
	.uleb128 0x1479
	.ascii "RI_KEY_E0 2\0"
	.byte	0x1
	.uleb128 0x147a
	.ascii "RI_KEY_E1 4\0"
	.byte	0x1
	.uleb128 0x147b
	.ascii "RI_KEY_TERMSRV_SET_LED 8\0"
	.byte	0x1
	.uleb128 0x147c
	.ascii "RI_KEY_TERMSRV_SHADOW 0x10\0"
	.byte	0x1
	.uleb128 0x148e
	.ascii "RAWINPUT_ALIGN(x) (((x) + sizeof(QWORD) - 1) & ~(sizeof(QWORD) - 1))\0"
	.byte	0x1
	.uleb128 0x1493
	.ascii "NEXTRAWINPUTBLOCK(ptr) ((PRAWINPUT)RAWINPUT_ALIGN((ULONG_PTR)((PBYTE)(ptr) + (ptr)->header.dwSize)))\0"
	.byte	0x1
	.uleb128 0x1495
	.ascii "RID_INPUT 0x10000003\0"
	.byte	0x1
	.uleb128 0x1496
	.ascii "RID_HEADER 0x10000005\0"
	.byte	0x1
	.uleb128 0x149a
	.ascii "RIDI_PREPARSEDDATA 0x20000005\0"
	.byte	0x1
	.uleb128 0x149b
	.ascii "RIDI_DEVICENAME 0x20000007\0"
	.byte	0x1
	.uleb128 0x149c
	.ascii "RIDI_DEVICEINFO 0x2000000b\0"
	.byte	0x1
	.uleb128 0x14bf
	.ascii "GetRawInputDeviceInfo __MINGW_NAME_AW(GetRawInputDeviceInfo)\0"
	.byte	0x1
	.uleb128 0x14ce
	.ascii "RIDEV_REMOVE 0x00000001\0"
	.byte	0x1
	.uleb128 0x14cf
	.ascii "RIDEV_EXCLUDE 0x00000010\0"
	.byte	0x1
	.uleb128 0x14d0
	.ascii "RIDEV_PAGEONLY 0x00000020\0"
	.byte	0x1
	.uleb128 0x14d1
	.ascii "RIDEV_NOLEGACY 0x00000030\0"
	.byte	0x1
	.uleb128 0x14d2
	.ascii "RIDEV_INPUTSINK 0x00000100\0"
	.byte	0x1
	.uleb128 0x14d3
	.ascii "RIDEV_CAPTUREMOUSE 0x00000200\0"
	.byte	0x1
	.uleb128 0x14d4
	.ascii "RIDEV_NOHOTKEYS 0x00000200\0"
	.byte	0x1
	.uleb128 0x14d5
	.ascii "RIDEV_APPKEYS 0x00000400\0"
	.byte	0x1
	.uleb128 0x14d6
	.ascii "RIDEV_EXMODEMASK 0x000000F0\0"
	.byte	0x1
	.uleb128 0x14d7
	.ascii "RIDEV_EXMODE(mode) ((mode) & RIDEV_EXMODEMASK)\0"
	.byte	0x1
	.uleb128 0x14d9
	.ascii "MAPVK_VK_TO_VSC 0\0"
	.byte	0x1
	.uleb128 0x14da
	.ascii "MAPVK_VSC_TO_VK 1\0"
	.byte	0x1
	.uleb128 0x14db
	.ascii "MAPVK_VK_TO_CHAR 2\0"
	.byte	0x1
	.uleb128 0x14dc
	.ascii "MAPVK_VSC_TO_VK_EX 3\0"
	.byte	0x4
	.file 365 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winnls.h"
	.byte	0x3
	.uleb128 0x49
	.uleb128 0x16d
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINNLS_ \0"
	.file 366 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/datetimeapi.h"
	.byte	0x3
	.uleb128 0x10
	.uleb128 0x16e
	.byte	0x1
	.uleb128 0x7
	.ascii "_DATETIMEAPI_H_ \0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "GetDateFormat __MINGW_NAME_AW(GetDateFormat)\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "GetTimeFormat __MINGW_NAME_AW(GetTimeFormat)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x19
	.ascii "WINNORMALIZEAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "MAX_LEADBYTES 12\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "MAX_DEFAULTCHAR 2\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "HIGH_SURROGATE_START 0xd800\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "HIGH_SURROGATE_END 0xdbff\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "LOW_SURROGATE_START 0xdc00\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "LOW_SURROGATE_END 0xdfff\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "MB_PRECOMPOSED 0x00000001\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "MB_COMPOSITE 0x00000002\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "MB_USEGLYPHCHARS 0x00000004\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "MB_ERR_INVALID_CHARS 0x00000008\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "WC_DISCARDNS 0x00000010\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "WC_SEPCHARS 0x00000020\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "WC_DEFAULTCHAR 0x00000040\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "WC_COMPOSITECHECK 0x00000200\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "WC_NO_BEST_FIT_CHARS 0x00000400\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "CT_CTYPE1 0x00000001\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "CT_CTYPE2 0x00000002\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "CT_CTYPE3 0x00000004\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "C1_UPPER 0x0001\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "C1_LOWER 0x0002\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "C1_DIGIT 0x0004\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "C1_SPACE 0x0008\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "C1_PUNCT 0x0010\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "C1_CNTRL 0x0020\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "C1_BLANK 0x0040\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "C1_XDIGIT 0x0080\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "C1_ALPHA 0x0100\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "C1_DEFINED 0x0200\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "C2_LEFTTORIGHT 0x0001\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "C2_RIGHTTOLEFT 0x0002\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "C2_EUROPENUMBER 0x0003\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "C2_EUROPESEPARATOR 0x0004\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "C2_EUROPETERMINATOR 0x0005\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "C2_ARABICNUMBER 0x0006\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "C2_COMMONSEPARATOR 0x0007\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "C2_BLOCKSEPARATOR 0x0008\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "C2_SEGMENTSEPARATOR 0x0009\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "C2_WHITESPACE 0x000a\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "C2_OTHERNEUTRAL 0x000b\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "C2_NOTAPPLICABLE 0x0000\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "C3_NONSPACING 0x0001\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "C3_DIACRITIC 0x0002\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "C3_VOWELMARK 0x0004\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "C3_SYMBOL 0x0008\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "C3_KATAKANA 0x0010\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "C3_HIRAGANA 0x0020\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "C3_HALFWIDTH 0x0040\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "C3_FULLWIDTH 0x0080\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "C3_IDEOGRAPH 0x0100\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "C3_KASHIDA 0x0200\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "C3_LEXICAL 0x0400\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "C3_HIGHSURROGATE 0x0800\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "C3_LOWSURROGATE 0x1000\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "C3_ALPHA 0x8000\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "C3_NOTAPPLICABLE 0x0000\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "NORM_IGNORECASE 0x00000001\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "NORM_IGNORENONSPACE 0x00000002\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "NORM_IGNORESYMBOLS 0x00000004\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "LINGUISTIC_IGNORECASE 0x00000010\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "LINGUISTIC_IGNOREDIACRITIC 0x00000020\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "NORM_IGNOREKANATYPE 0x00010000\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "NORM_IGNOREWIDTH 0x00020000\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "NORM_LINGUISTIC_CASING 0x08000000\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "MAP_FOLDCZONE 0x00000010\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "MAP_PRECOMPOSED 0x00000020\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "MAP_COMPOSITE 0x00000040\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "MAP_FOLDDIGITS 0x00000080\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "MAP_EXPAND_LIGATURES 0x00002000\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "LCMAP_LOWERCASE 0x00000100\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "LCMAP_UPPERCASE 0x00000200\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "LCMAP_SORTKEY 0x00000400\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "LCMAP_BYTEREV 0x00000800\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "LCMAP_HIRAGANA 0x00100000\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "LCMAP_KATAKANA 0x00200000\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "LCMAP_HALFWIDTH 0x00400000\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "LCMAP_FULLWIDTH 0x00800000\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "LCMAP_LINGUISTIC_CASING 0x01000000\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "LCMAP_SIMPLIFIED_CHINESE 0x02000000\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "LCMAP_TRADITIONAL_CHINESE 0x04000000\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "FIND_STARTSWITH 0x00100000\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "FIND_ENDSWITH 0x00200000\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "FIND_FROMSTART 0x00400000\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "FIND_FROMEND 0x00800000\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "LGRPID_INSTALLED 0x00000001\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "LGRPID_SUPPORTED 0x00000002\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "LCID_INSTALLED 0x00000001\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "LCID_SUPPORTED 0x00000002\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "LCID_ALTERNATE_SORTS 0x00000004\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "CP_INSTALLED 0x00000001\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "CP_SUPPORTED 0x00000002\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "SORT_STRINGSORT 0x00001000\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "CSTR_LESS_THAN 1\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "CSTR_EQUAL 2\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "CSTR_GREATER_THAN 3\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "CP_ACP 0\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "CP_OEMCP 1\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "CP_MACCP 2\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "CP_THREAD_ACP 3\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "CP_SYMBOL 42\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "CP_UTF7 65000\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "CP_UTF8 65001\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "CTRY_DEFAULT 0\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "CTRY_ALBANIA 355\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "CTRY_ALGERIA 213\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "CTRY_ARGENTINA 54\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "CTRY_ARMENIA 374\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "CTRY_AUSTRALIA 61\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "CTRY_AUSTRIA 43\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "CTRY_AZERBAIJAN 994\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "CTRY_BAHRAIN 973\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "CTRY_BELARUS 375\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "CTRY_BELGIUM 32\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "CTRY_BELIZE 501\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "CTRY_BOLIVIA 591\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "CTRY_BRAZIL 55\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "CTRY_BRUNEI_DARUSSALAM 673\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "CTRY_BULGARIA 359\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "CTRY_CANADA 2\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "CTRY_CARIBBEAN 1\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "CTRY_CHILE 56\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "CTRY_COLOMBIA 57\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "CTRY_COSTA_RICA 506\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "CTRY_CROATIA 385\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "CTRY_CZECH 420\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "CTRY_DENMARK 45\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "CTRY_DOMINICAN_REPUBLIC 1\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "CTRY_ECUADOR 593\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "CTRY_EGYPT 20\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "CTRY_EL_SALVADOR 503\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "CTRY_ESTONIA 372\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "CTRY_FAEROE_ISLANDS 298\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "CTRY_FINLAND 358\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "CTRY_FRANCE 33\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "CTRY_GEORGIA 995\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "CTRY_GERMANY 49\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "CTRY_GREECE 30\0"
	.byte	0x1
	.uleb128 0xde
	.ascii "CTRY_GUATEMALA 502\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "CTRY_HONDURAS 504\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "CTRY_HONG_KONG 852\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "CTRY_HUNGARY 36\0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "CTRY_ICELAND 354\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "CTRY_INDIA 91\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "CTRY_INDONESIA 62\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "CTRY_IRAN 981\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "CTRY_IRAQ 964\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "CTRY_IRELAND 353\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "CTRY_ISRAEL 972\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "CTRY_ITALY 39\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "CTRY_JAMAICA 1\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "CTRY_JAPAN 81\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "CTRY_JORDAN 962\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "CTRY_KAZAKSTAN 7\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "CTRY_KENYA 254\0"
	.byte	0x1
	.uleb128 0xef
	.ascii "CTRY_KUWAIT 965\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "CTRY_KYRGYZSTAN 996\0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "CTRY_LATVIA 371\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "CTRY_LEBANON 961\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "CTRY_LIBYA 218\0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "CTRY_LIECHTENSTEIN 41\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "CTRY_LITHUANIA 370\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "CTRY_LUXEMBOURG 352\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "CTRY_MACAU 853\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "CTRY_MACEDONIA 389\0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "CTRY_MALAYSIA 60\0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "CTRY_MALDIVES 960\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "CTRY_MEXICO 52\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "CTRY_MONACO 33\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "CTRY_MONGOLIA 976\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "CTRY_MOROCCO 212\0"
	.byte	0x1
	.uleb128 0xff
	.ascii "CTRY_NETHERLANDS 31\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "CTRY_NEW_ZEALAND 64\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "CTRY_NICARAGUA 505\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "CTRY_NORWAY 47\0"
	.byte	0x1
	.uleb128 0x103
	.ascii "CTRY_OMAN 968\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "CTRY_PAKISTAN 92\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "CTRY_PANAMA 507\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "CTRY_PARAGUAY 595\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "CTRY_PERU 51\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "CTRY_PHILIPPINES 63\0"
	.byte	0x1
	.uleb128 0x109
	.ascii "CTRY_POLAND 48\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "CTRY_PORTUGAL 351\0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "CTRY_PRCHINA 86\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "CTRY_PUERTO_RICO 1\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "CTRY_QATAR 974\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "CTRY_ROMANIA 40\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "CTRY_RUSSIA 7\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "CTRY_SAUDI_ARABIA 966\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "CTRY_SERBIA 381\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "CTRY_SINGAPORE 65\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "CTRY_SLOVAK 421\0"
	.byte	0x1
	.uleb128 0x114
	.ascii "CTRY_SLOVENIA 386\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "CTRY_SOUTH_AFRICA 27\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "CTRY_SOUTH_KOREA 82\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "CTRY_SPAIN 34\0"
	.byte	0x1
	.uleb128 0x118
	.ascii "CTRY_SWEDEN 46\0"
	.byte	0x1
	.uleb128 0x119
	.ascii "CTRY_SWITZERLAND 41\0"
	.byte	0x1
	.uleb128 0x11a
	.ascii "CTRY_SYRIA 963\0"
	.byte	0x1
	.uleb128 0x11b
	.ascii "CTRY_TAIWAN 886\0"
	.byte	0x1
	.uleb128 0x11c
	.ascii "CTRY_TATARSTAN 7\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "CTRY_THAILAND 66\0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "CTRY_TRINIDAD_Y_TOBAGO 1\0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "CTRY_TUNISIA 216\0"
	.byte	0x1
	.uleb128 0x120
	.ascii "CTRY_TURKEY 90\0"
	.byte	0x1
	.uleb128 0x121
	.ascii "CTRY_UAE 971\0"
	.byte	0x1
	.uleb128 0x122
	.ascii "CTRY_UKRAINE 380\0"
	.byte	0x1
	.uleb128 0x123
	.ascii "CTRY_UNITED_KINGDOM 44\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "CTRY_UNITED_STATES 1\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "CTRY_URUGUAY 598\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "CTRY_UZBEKISTAN 7\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "CTRY_VENEZUELA 58\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "CTRY_VIET_NAM 84\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "CTRY_YEMEN 967\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "CTRY_ZIMBABWE 263\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "LOCALE_SLOCALIZEDDISPLAYNAME 0x00000002\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "LOCALE_RETURN_NUMBER 0x20000000\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "LOCALE_USE_CP_ACP 0x40000000\0"
	.byte	0x1
	.uleb128 0x133
	.ascii "LOCALE_NOUSEROVERRIDE 0x80000000\0"
	.byte	0x1
	.uleb128 0x13e
	.ascii "LOCALE_SENGLISHLANGUAGENAME 0x00001001\0"
	.byte	0x1
	.uleb128 0x13f
	.ascii "LOCALE_SNATIVELANGUAGENAME 0x00000004\0"
	.byte	0x1
	.uleb128 0x141
	.ascii "LOCALE_SLOCALIZEDCOUNTRYNAME 0x00000006\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "LOCALE_SENGLISHCOUNTRYNAME 0x00001002\0"
	.byte	0x1
	.uleb128 0x143
	.ascii "LOCALE_SNATIVECOUNTRYNAME 0x00000008\0"
	.byte	0x1
	.uleb128 0x145
	.ascii "LOCALE_SLANGUAGE 0x00000002\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "LOCALE_SENGLANGUAGE 0x00001001\0"
	.byte	0x1
	.uleb128 0x14a
	.ascii "LOCALE_SNATIVELANGNAME 0x00000004\0"
	.byte	0x1
	.uleb128 0x14b
	.ascii "LOCALE_SCOUNTRY 0x00000006\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "LOCALE_SENGCOUNTRY 0x00001002\0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "LOCALE_SNATIVECTRYNAME 0x00000008\0"
	.byte	0x1
	.uleb128 0x14f
	.ascii "LOCALE_ILANGUAGE 0x00000001\0"
	.byte	0x1
	.uleb128 0x151
	.ascii "LOCALE_SABBREVLANGNAME 0x00000003\0"
	.byte	0x1
	.uleb128 0x153
	.ascii "LOCALE_ICOUNTRY 0x00000005\0"
	.byte	0x1
	.uleb128 0x154
	.ascii "LOCALE_SABBREVCTRYNAME 0x00000007\0"
	.byte	0x1
	.uleb128 0x155
	.ascii "LOCALE_IGEOID 0x0000005b\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "LOCALE_IDEFAULTLANGUAGE 0x00000009\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "LOCALE_IDEFAULTCOUNTRY 0x0000000a\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "LOCALE_IDEFAULTCODEPAGE 0x0000000b\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "LOCALE_IDEFAULTANSICODEPAGE 0x00001004\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "LOCALE_IDEFAULTMACCODEPAGE 0x00001011\0"
	.byte	0x1
	.uleb128 0x15d
	.ascii "LOCALE_SLIST 0x0000000c\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "LOCALE_IMEASURE 0x0000000d\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "LOCALE_SDECIMAL 0x0000000e\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "LOCALE_STHOUSAND 0x0000000f\0"
	.byte	0x1
	.uleb128 0x162
	.ascii "LOCALE_SGROUPING 0x00000010\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "LOCALE_IDIGITS 0x00000011\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "LOCALE_ILZERO 0x00000012\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "LOCALE_INEGNUMBER 0x00001010\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "LOCALE_SNATIVEDIGITS 0x00000013\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "LOCALE_SCURRENCY 0x00000014\0"
	.byte	0x1
	.uleb128 0x169
	.ascii "LOCALE_SINTLSYMBOL 0x00000015\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "LOCALE_SMONDECIMALSEP 0x00000016\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "LOCALE_SMONTHOUSANDSEP 0x00000017\0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "LOCALE_SMONGROUPING 0x00000018\0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "LOCALE_ICURRDIGITS 0x00000019\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "LOCALE_IINTLCURRDIGITS 0x0000001a\0"
	.byte	0x1
	.uleb128 0x16f
	.ascii "LOCALE_ICURRENCY 0x0000001b\0"
	.byte	0x1
	.uleb128 0x170
	.ascii "LOCALE_INEGCURR 0x0000001c\0"
	.byte	0x1
	.uleb128 0x172
	.ascii "LOCALE_SDATE 0x0000001d\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "LOCALE_STIME 0x0000001e\0"
	.byte	0x1
	.uleb128 0x174
	.ascii "LOCALE_SSHORTDATE 0x0000001f\0"
	.byte	0x1
	.uleb128 0x175
	.ascii "LOCALE_SLONGDATE 0x00000020\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "LOCALE_STIMEFORMAT 0x00001003\0"
	.byte	0x1
	.uleb128 0x177
	.ascii "LOCALE_IDATE 0x00000021\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "LOCALE_ILDATE 0x00000022\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "LOCALE_ITIME 0x00000023\0"
	.byte	0x1
	.uleb128 0x17a
	.ascii "LOCALE_ITIMEMARKPOSN 0x00001005\0"
	.byte	0x1
	.uleb128 0x17b
	.ascii "LOCALE_ICENTURY 0x00000024\0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "LOCALE_ITLZERO 0x00000025\0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "LOCALE_IDAYLZERO 0x00000026\0"
	.byte	0x1
	.uleb128 0x17e
	.ascii "LOCALE_IMONLZERO 0x00000027\0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "LOCALE_S1159 0x00000028\0"
	.byte	0x1
	.uleb128 0x180
	.ascii "LOCALE_S2359 0x00000029\0"
	.byte	0x1
	.uleb128 0x182
	.ascii "LOCALE_ICALENDARTYPE 0x00001009\0"
	.byte	0x1
	.uleb128 0x183
	.ascii "LOCALE_IOPTIONALCALENDAR 0x0000100b\0"
	.byte	0x1
	.uleb128 0x184
	.ascii "LOCALE_IFIRSTDAYOFWEEK 0x0000100c\0"
	.byte	0x1
	.uleb128 0x185
	.ascii "LOCALE_IFIRSTWEEKOFYEAR 0x0000100d\0"
	.byte	0x1
	.uleb128 0x187
	.ascii "LOCALE_SDAYNAME1 0x0000002a\0"
	.byte	0x1
	.uleb128 0x188
	.ascii "LOCALE_SDAYNAME2 0x0000002b\0"
	.byte	0x1
	.uleb128 0x189
	.ascii "LOCALE_SDAYNAME3 0x0000002c\0"
	.byte	0x1
	.uleb128 0x18a
	.ascii "LOCALE_SDAYNAME4 0x0000002d\0"
	.byte	0x1
	.uleb128 0x18b
	.ascii "LOCALE_SDAYNAME5 0x0000002e\0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "LOCALE_SDAYNAME6 0x0000002f\0"
	.byte	0x1
	.uleb128 0x18d
	.ascii "LOCALE_SDAYNAME7 0x00000030\0"
	.byte	0x1
	.uleb128 0x18e
	.ascii "LOCALE_SABBREVDAYNAME1 0x00000031\0"
	.byte	0x1
	.uleb128 0x18f
	.ascii "LOCALE_SABBREVDAYNAME2 0x00000032\0"
	.byte	0x1
	.uleb128 0x190
	.ascii "LOCALE_SABBREVDAYNAME3 0x00000033\0"
	.byte	0x1
	.uleb128 0x191
	.ascii "LOCALE_SABBREVDAYNAME4 0x00000034\0"
	.byte	0x1
	.uleb128 0x192
	.ascii "LOCALE_SABBREVDAYNAME5 0x00000035\0"
	.byte	0x1
	.uleb128 0x193
	.ascii "LOCALE_SABBREVDAYNAME6 0x00000036\0"
	.byte	0x1
	.uleb128 0x194
	.ascii "LOCALE_SABBREVDAYNAME7 0x00000037\0"
	.byte	0x1
	.uleb128 0x195
	.ascii "LOCALE_SMONTHNAME1 0x00000038\0"
	.byte	0x1
	.uleb128 0x196
	.ascii "LOCALE_SMONTHNAME2 0x00000039\0"
	.byte	0x1
	.uleb128 0x197
	.ascii "LOCALE_SMONTHNAME3 0x0000003a\0"
	.byte	0x1
	.uleb128 0x198
	.ascii "LOCALE_SMONTHNAME4 0x0000003b\0"
	.byte	0x1
	.uleb128 0x199
	.ascii "LOCALE_SMONTHNAME5 0x0000003c\0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "LOCALE_SMONTHNAME6 0x0000003d\0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "LOCALE_SMONTHNAME7 0x0000003e\0"
	.byte	0x1
	.uleb128 0x19c
	.ascii "LOCALE_SMONTHNAME8 0x0000003f\0"
	.byte	0x1
	.uleb128 0x19d
	.ascii "LOCALE_SMONTHNAME9 0x00000040\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "LOCALE_SMONTHNAME10 0x00000041\0"
	.byte	0x1
	.uleb128 0x19f
	.ascii "LOCALE_SMONTHNAME11 0x00000042\0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "LOCALE_SMONTHNAME12 0x00000043\0"
	.byte	0x1
	.uleb128 0x1a1
	.ascii "LOCALE_SMONTHNAME13 0x0000100e\0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "LOCALE_SABBREVMONTHNAME1 0x00000044\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "LOCALE_SABBREVMONTHNAME2 0x00000045\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "LOCALE_SABBREVMONTHNAME3 0x00000046\0"
	.byte	0x1
	.uleb128 0x1a5
	.ascii "LOCALE_SABBREVMONTHNAME4 0x00000047\0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "LOCALE_SABBREVMONTHNAME5 0x00000048\0"
	.byte	0x1
	.uleb128 0x1a7
	.ascii "LOCALE_SABBREVMONTHNAME6 0x00000049\0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "LOCALE_SABBREVMONTHNAME7 0x0000004a\0"
	.byte	0x1
	.uleb128 0x1a9
	.ascii "LOCALE_SABBREVMONTHNAME8 0x0000004b\0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "LOCALE_SABBREVMONTHNAME9 0x0000004c\0"
	.byte	0x1
	.uleb128 0x1ab
	.ascii "LOCALE_SABBREVMONTHNAME10 0x0000004d\0"
	.byte	0x1
	.uleb128 0x1ac
	.ascii "LOCALE_SABBREVMONTHNAME11 0x0000004e\0"
	.byte	0x1
	.uleb128 0x1ad
	.ascii "LOCALE_SABBREVMONTHNAME12 0x0000004f\0"
	.byte	0x1
	.uleb128 0x1ae
	.ascii "LOCALE_SABBREVMONTHNAME13 0x0000100f\0"
	.byte	0x1
	.uleb128 0x1b0
	.ascii "LOCALE_SPOSITIVESIGN 0x00000050\0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "LOCALE_SNEGATIVESIGN 0x00000051\0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "LOCALE_IPOSSIGNPOSN 0x00000052\0"
	.byte	0x1
	.uleb128 0x1b3
	.ascii "LOCALE_INEGSIGNPOSN 0x00000053\0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "LOCALE_IPOSSYMPRECEDES 0x00000054\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "LOCALE_IPOSSEPBYSPACE 0x00000055\0"
	.byte	0x1
	.uleb128 0x1b6
	.ascii "LOCALE_INEGSYMPRECEDES 0x00000056\0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "LOCALE_INEGSEPBYSPACE 0x00000057\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "LOCALE_FONTSIGNATURE 0x00000058\0"
	.byte	0x1
	.uleb128 0x1ba
	.ascii "LOCALE_SISO639LANGNAME 0x00000059\0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "LOCALE_SISO3166CTRYNAME 0x0000005a\0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "LOCALE_IDEFAULTEBCDICCODEPAGE 0x00001012\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "LOCALE_IPAPERSIZE 0x0000100a\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "LOCALE_SENGCURRNAME 0x00001007\0"
	.byte	0x1
	.uleb128 0x1c0
	.ascii "LOCALE_SNATIVECURRNAME 0x00001008\0"
	.byte	0x1
	.uleb128 0x1c1
	.ascii "LOCALE_SYEARMONTH 0x00001006\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "LOCALE_SSORTNAME 0x00001013\0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "LOCALE_IDIGITSUBSTITUTION 0x00001014\0"
	.byte	0x1
	.uleb128 0x1e8
	.ascii "TIME_NOMINUTESORSECONDS 0x00000001\0"
	.byte	0x1
	.uleb128 0x1e9
	.ascii "TIME_NOSECONDS 0x00000002\0"
	.byte	0x1
	.uleb128 0x1ea
	.ascii "TIME_NOTIMEMARKER 0x00000004\0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "TIME_FORCE24HOURFORMAT 0x00000008\0"
	.byte	0x1
	.uleb128 0x1ed
	.ascii "DATE_SHORTDATE 0x00000001\0"
	.byte	0x1
	.uleb128 0x1ee
	.ascii "DATE_LONGDATE 0x00000002\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "DATE_USE_ALT_CALENDAR 0x00000004\0"
	.byte	0x1
	.uleb128 0x1f1
	.ascii "DATE_YEARMONTH 0x00000008\0"
	.byte	0x1
	.uleb128 0x1f2
	.ascii "DATE_LTRREADING 0x00000010\0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "DATE_RTLREADING 0x00000020\0"
	.byte	0x1
	.uleb128 0x1f8
	.ascii "CAL_NOUSEROVERRIDE LOCALE_NOUSEROVERRIDE\0"
	.byte	0x1
	.uleb128 0x1f9
	.ascii "CAL_USE_CP_ACP LOCALE_USE_CP_ACP\0"
	.byte	0x1
	.uleb128 0x1fa
	.ascii "CAL_RETURN_NUMBER LOCALE_RETURN_NUMBER\0"
	.byte	0x1
	.uleb128 0x1ff
	.ascii "CAL_ICALINTVALUE 0x00000001\0"
	.byte	0x1
	.uleb128 0x200
	.ascii "CAL_SCALNAME 0x00000002\0"
	.byte	0x1
	.uleb128 0x201
	.ascii "CAL_IYEAROFFSETRANGE 0x00000003\0"
	.byte	0x1
	.uleb128 0x202
	.ascii "CAL_SERASTRING 0x00000004\0"
	.byte	0x1
	.uleb128 0x203
	.ascii "CAL_SSHORTDATE 0x00000005\0"
	.byte	0x1
	.uleb128 0x204
	.ascii "CAL_SLONGDATE 0x00000006\0"
	.byte	0x1
	.uleb128 0x205
	.ascii "CAL_SDAYNAME1 0x00000007\0"
	.byte	0x1
	.uleb128 0x206
	.ascii "CAL_SDAYNAME2 0x00000008\0"
	.byte	0x1
	.uleb128 0x207
	.ascii "CAL_SDAYNAME3 0x00000009\0"
	.byte	0x1
	.uleb128 0x208
	.ascii "CAL_SDAYNAME4 0x0000000a\0"
	.byte	0x1
	.uleb128 0x209
	.ascii "CAL_SDAYNAME5 0x0000000b\0"
	.byte	0x1
	.uleb128 0x20a
	.ascii "CAL_SDAYNAME6 0x0000000c\0"
	.byte	0x1
	.uleb128 0x20b
	.ascii "CAL_SDAYNAME7 0x0000000d\0"
	.byte	0x1
	.uleb128 0x20c
	.ascii "CAL_SABBREVDAYNAME1 0x0000000e\0"
	.byte	0x1
	.uleb128 0x20d
	.ascii "CAL_SABBREVDAYNAME2 0x0000000f\0"
	.byte	0x1
	.uleb128 0x20e
	.ascii "CAL_SABBREVDAYNAME3 0x00000010\0"
	.byte	0x1
	.uleb128 0x20f
	.ascii "CAL_SABBREVDAYNAME4 0x00000011\0"
	.byte	0x1
	.uleb128 0x210
	.ascii "CAL_SABBREVDAYNAME5 0x00000012\0"
	.byte	0x1
	.uleb128 0x211
	.ascii "CAL_SABBREVDAYNAME6 0x00000013\0"
	.byte	0x1
	.uleb128 0x212
	.ascii "CAL_SABBREVDAYNAME7 0x00000014\0"
	.byte	0x1
	.uleb128 0x214
	.ascii "CAL_SMONTHNAME1 0x00000015\0"
	.byte	0x1
	.uleb128 0x215
	.ascii "CAL_SMONTHNAME2 0x00000016\0"
	.byte	0x1
	.uleb128 0x216
	.ascii "CAL_SMONTHNAME3 0x00000017\0"
	.byte	0x1
	.uleb128 0x217
	.ascii "CAL_SMONTHNAME4 0x00000018\0"
	.byte	0x1
	.uleb128 0x218
	.ascii "CAL_SMONTHNAME5 0x00000019\0"
	.byte	0x1
	.uleb128 0x219
	.ascii "CAL_SMONTHNAME6 0x0000001a\0"
	.byte	0x1
	.uleb128 0x21a
	.ascii "CAL_SMONTHNAME7 0x0000001b\0"
	.byte	0x1
	.uleb128 0x21b
	.ascii "CAL_SMONTHNAME8 0x0000001c\0"
	.byte	0x1
	.uleb128 0x21c
	.ascii "CAL_SMONTHNAME9 0x0000001d\0"
	.byte	0x1
	.uleb128 0x21d
	.ascii "CAL_SMONTHNAME10 0x0000001e\0"
	.byte	0x1
	.uleb128 0x21e
	.ascii "CAL_SMONTHNAME11 0x0000001f\0"
	.byte	0x1
	.uleb128 0x21f
	.ascii "CAL_SMONTHNAME12 0x00000020\0"
	.byte	0x1
	.uleb128 0x220
	.ascii "CAL_SMONTHNAME13 0x00000021\0"
	.byte	0x1
	.uleb128 0x221
	.ascii "CAL_SABBREVMONTHNAME1 0x00000022\0"
	.byte	0x1
	.uleb128 0x222
	.ascii "CAL_SABBREVMONTHNAME2 0x00000023\0"
	.byte	0x1
	.uleb128 0x223
	.ascii "CAL_SABBREVMONTHNAME3 0x00000024\0"
	.byte	0x1
	.uleb128 0x224
	.ascii "CAL_SABBREVMONTHNAME4 0x00000025\0"
	.byte	0x1
	.uleb128 0x225
	.ascii "CAL_SABBREVMONTHNAME5 0x00000026\0"
	.byte	0x1
	.uleb128 0x226
	.ascii "CAL_SABBREVMONTHNAME6 0x00000027\0"
	.byte	0x1
	.uleb128 0x227
	.ascii "CAL_SABBREVMONTHNAME7 0x00000028\0"
	.byte	0x1
	.uleb128 0x228
	.ascii "CAL_SABBREVMONTHNAME8 0x00000029\0"
	.byte	0x1
	.uleb128 0x229
	.ascii "CAL_SABBREVMONTHNAME9 0x0000002a\0"
	.byte	0x1
	.uleb128 0x22a
	.ascii "CAL_SABBREVMONTHNAME10 0x0000002b\0"
	.byte	0x1
	.uleb128 0x22b
	.ascii "CAL_SABBREVMONTHNAME11 0x0000002c\0"
	.byte	0x1
	.uleb128 0x22c
	.ascii "CAL_SABBREVMONTHNAME12 0x0000002d\0"
	.byte	0x1
	.uleb128 0x22d
	.ascii "CAL_SABBREVMONTHNAME13 0x0000002e\0"
	.byte	0x1
	.uleb128 0x22e
	.ascii "CAL_SYEARMONTH 0x0000002f\0"
	.byte	0x1
	.uleb128 0x22f
	.ascii "CAL_ITWODIGITYEARMAX 0x00000030\0"
	.byte	0x1
	.uleb128 0x23e
	.ascii "ENUM_ALL_CALENDARS 0xffffffff\0"
	.byte	0x1
	.uleb128 0x240
	.ascii "CAL_GREGORIAN 1\0"
	.byte	0x1
	.uleb128 0x241
	.ascii "CAL_GREGORIAN_US 2\0"
	.byte	0x1
	.uleb128 0x242
	.ascii "CAL_JAPAN 3\0"
	.byte	0x1
	.uleb128 0x243
	.ascii "CAL_TAIWAN 4\0"
	.byte	0x1
	.uleb128 0x244
	.ascii "CAL_KOREA 5\0"
	.byte	0x1
	.uleb128 0x245
	.ascii "CAL_HIJRI 6\0"
	.byte	0x1
	.uleb128 0x246
	.ascii "CAL_THAI 7\0"
	.byte	0x1
	.uleb128 0x247
	.ascii "CAL_HEBREW 8\0"
	.byte	0x1
	.uleb128 0x248
	.ascii "CAL_GREGORIAN_ME_FRENCH 9\0"
	.byte	0x1
	.uleb128 0x249
	.ascii "CAL_GREGORIAN_ARABIC 10\0"
	.byte	0x1
	.uleb128 0x24a
	.ascii "CAL_GREGORIAN_XLIT_ENGLISH 11\0"
	.byte	0x1
	.uleb128 0x24b
	.ascii "CAL_GREGORIAN_XLIT_FRENCH 12\0"
	.byte	0x1
	.uleb128 0x24c
	.ascii "CAL_UMALQURA 23\0"
	.byte	0x1
	.uleb128 0x24e
	.ascii "LGRPID_WESTERN_EUROPE 0x0001\0"
	.byte	0x1
	.uleb128 0x24f
	.ascii "LGRPID_CENTRAL_EUROPE 0x0002\0"
	.byte	0x1
	.uleb128 0x250
	.ascii "LGRPID_BALTIC 0x0003\0"
	.byte	0x1
	.uleb128 0x251
	.ascii "LGRPID_GREEK 0x0004\0"
	.byte	0x1
	.uleb128 0x252
	.ascii "LGRPID_CYRILLIC 0x0005\0"
	.byte	0x1
	.uleb128 0x253
	.ascii "LGRPID_TURKIC 0x0006\0"
	.byte	0x1
	.uleb128 0x254
	.ascii "LGRPID_TURKISH 0x0006\0"
	.byte	0x1
	.uleb128 0x255
	.ascii "LGRPID_JAPANESE 0x0007\0"
	.byte	0x1
	.uleb128 0x256
	.ascii "LGRPID_KOREAN 0x0008\0"
	.byte	0x1
	.uleb128 0x257
	.ascii "LGRPID_TRADITIONAL_CHINESE 0x0009\0"
	.byte	0x1
	.uleb128 0x258
	.ascii "LGRPID_SIMPLIFIED_CHINESE 0x000a\0"
	.byte	0x1
	.uleb128 0x259
	.ascii "LGRPID_THAI 0x000b\0"
	.byte	0x1
	.uleb128 0x25a
	.ascii "LGRPID_HEBREW 0x000c\0"
	.byte	0x1
	.uleb128 0x25b
	.ascii "LGRPID_ARABIC 0x000d\0"
	.byte	0x1
	.uleb128 0x25c
	.ascii "LGRPID_VIETNAMESE 0x000e\0"
	.byte	0x1
	.uleb128 0x25d
	.ascii "LGRPID_INDIC 0x000f\0"
	.byte	0x1
	.uleb128 0x25e
	.ascii "LGRPID_GEORGIAN 0x0010\0"
	.byte	0x1
	.uleb128 0x25f
	.ascii "LGRPID_ARMENIAN 0x0011\0"
	.byte	0x1
	.uleb128 0x2f2
	.ascii "GEOID_NOT_AVAILABLE -1\0"
	.byte	0x1
	.uleb128 0x359
	.ascii "LANGUAGEGROUP_ENUMPROC LANGUAGEGROUP_ENUMPROCA\0"
	.byte	0x1
	.uleb128 0x35a
	.ascii "LANGGROUPLOCALE_ENUMPROC LANGGROUPLOCALE_ENUMPROCA\0"
	.byte	0x1
	.uleb128 0x35b
	.ascii "UILANGUAGE_ENUMPROC UILANGUAGE_ENUMPROCA\0"
	.byte	0x1
	.uleb128 0x35c
	.ascii "CODEPAGE_ENUMPROC CODEPAGE_ENUMPROCA\0"
	.byte	0x1
	.uleb128 0x35d
	.ascii "DATEFMT_ENUMPROC DATEFMT_ENUMPROCA\0"
	.byte	0x1
	.uleb128 0x35e
	.ascii "DATEFMT_ENUMPROCEX DATEFMT_ENUMPROCEXA\0"
	.byte	0x1
	.uleb128 0x35f
	.ascii "TIMEFMT_ENUMPROC TIMEFMT_ENUMPROCA\0"
	.byte	0x1
	.uleb128 0x360
	.ascii "CALINFO_ENUMPROC CALINFO_ENUMPROCA\0"
	.byte	0x1
	.uleb128 0x361
	.ascii "CALINFO_ENUMPROCEX CALINFO_ENUMPROCEXA\0"
	.byte	0x1
	.uleb128 0x362
	.ascii "LOCALE_ENUMPROC LOCALE_ENUMPROCA\0"
	.file 367 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stringapiset.h"
	.byte	0x3
	.uleb128 0x376
	.uleb128 0x16f
	.byte	0x1
	.uleb128 0x7
	.ascii "_APISETSTRING_ \0"
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x16d
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x379
	.ascii "IS_HIGH_SURROGATE(wch) (((wch) >= HIGH_SURROGATE_START) && ((wch) <= HIGH_SURROGATE_END))\0"
	.byte	0x1
	.uleb128 0x37a
	.ascii "IS_LOW_SURROGATE(wch) (((wch) >= LOW_SURROGATE_START) && ((wch) <= LOW_SURROGATE_END))\0"
	.byte	0x1
	.uleb128 0x37b
	.ascii "IS_SURROGATE_PAIR(hs,ls) (IS_HIGH_SURROGATE (hs) && IS_LOW_SURROGATE (ls))\0"
	.byte	0x1
	.uleb128 0x37d
	.ascii "FILEMUIINFO_GET_CULTURE(pInfo) ((LPWSTR) ((pInfo->dwLanguageNameOffset>0)? (ULONG_PTR)pInfo+pInfo->dwLanguageNameOffset:NULL))\0"
	.byte	0x1
	.uleb128 0x37e
	.ascii "FILEMUIINFO_GET_MAIN_TYPEIDS(pInfo) ((DWORD *) ((pInfo->dwTypeIDMainOffset>0)? (ULONG_PTR)pInfo+pInfo->dwTypeIDMainOffset:NULL))\0"
	.byte	0x1
	.uleb128 0x37f
	.ascii "FILEMUIINFO_GET_MAIN_TYPEID(pInfo,iType) (((iType<pInfo->dwTypeIDMainSize)&& (pInfo->dwTypeIDMainOffset>0))? *((DWORD *) ((ULONG_PTR)pInfo+pInfo->dwTypeIDMainOffset)+iType):0)\0"
	.byte	0x1
	.uleb128 0x380
	.ascii "FILEMUIINFO_GET_MAIN_TYPENAMES(pInfo) ((LPWSTR) ((pInfo->dwTypeNameMainOffset>0)? (ULONG_PTR)pInfo+pInfo->dwTypeNameMainOffset:NULL))\0"
	.byte	0x1
	.uleb128 0x381
	.ascii "FILEMUIINFO_GET_MUI_TYPEIDS(pInfo) ((DWORD *) ((pInfo->dwTypeIDMUIOffset>0)? (ULONG_PTR)pInfo+pInfo->dwTypeIDMUIOffset:NULL))\0"
	.byte	0x1
	.uleb128 0x382
	.ascii "FILEMUIINFO_GET_MUI_TYPEID(pInfo,iType) (((iType<pInfo->dwTypeIDMUISize)&& (pInfo->dwTypeIDMUIOffset>0))? *((DWORD *) ((ULONG_PTR)pInfo+pInfo->dwTypeIDMUIOffset)+iType):0)\0"
	.byte	0x1
	.uleb128 0x383
	.ascii "FILEMUIINFO_GET_MUI_TYPENAMES(pInfo) ((LPWSTR) ((pInfo->dwTypeNameMUIOffset>0)? (ULONG_PTR)pInfo+pInfo->dwTypeNameMUIOffset:NULL))\0"
	.byte	0x1
	.uleb128 0x3b2
	.ascii "SetLocaleInfo __MINGW_NAME_AW(SetLocaleInfo)\0"
	.byte	0x1
	.uleb128 0x3b3
	.ascii "GetCalendarInfo __MINGW_NAME_AW(GetCalendarInfo)\0"
	.byte	0x1
	.uleb128 0x3b4
	.ascii "SetCalendarInfo __MINGW_NAME_AW(SetCalendarInfo)\0"
	.byte	0x1
	.uleb128 0x3bf
	.ascii "CompareString CompareStringA\0"
	.byte	0x1
	.uleb128 0x3c0
	.ascii "LCMapString LCMapStringA\0"
	.byte	0x1
	.uleb128 0x3c1
	.ascii "GetLocaleInfo GetLocaleInfoA\0"
	.byte	0x1
	.uleb128 0x3c7
	.ascii "GetNumberFormat __MINGW_NAME_AW(GetNumberFormat)\0"
	.byte	0x1
	.uleb128 0x3c8
	.ascii "GetCurrencyFormat __MINGW_NAME_AW(GetCurrencyFormat)\0"
	.byte	0x1
	.uleb128 0x3c9
	.ascii "EnumCalendarInfo __MINGW_NAME_AW(EnumCalendarInfo)\0"
	.byte	0x1
	.uleb128 0x3ca
	.ascii "EnumCalendarInfoEx __MINGW_NAME_AW(EnumCalendarInfoEx)\0"
	.byte	0x1
	.uleb128 0x3cb
	.ascii "EnumTimeFormats __MINGW_NAME_AW(EnumTimeFormats)\0"
	.byte	0x1
	.uleb128 0x3cc
	.ascii "EnumDateFormats __MINGW_NAME_AW(EnumDateFormats)\0"
	.byte	0x1
	.uleb128 0x3cd
	.ascii "EnumDateFormatsEx __MINGW_NAME_AW(EnumDateFormatsEx)\0"
	.byte	0x1
	.uleb128 0x3df
	.ascii "GetGeoInfo __MINGW_NAME_AW(GetGeoInfo)\0"
	.byte	0x1
	.uleb128 0x3e0
	.ascii "GetCPInfoEx __MINGW_NAME_AW(GetCPInfoEx)\0"
	.byte	0x1
	.uleb128 0x40a
	.ascii "FoldString FoldStringA\0"
	.byte	0x1
	.uleb128 0x40b
	.ascii "GetStringTypeEx GetStringTypeExA\0"
	.byte	0x1
	.uleb128 0x40e
	.ascii "EnumSystemLocales __MINGW_NAME_AW(EnumSystemLocales)\0"
	.byte	0x1
	.uleb128 0x40f
	.ascii "EnumSystemLanguageGroups __MINGW_NAME_AW(EnumSystemLanguageGroups)\0"
	.byte	0x1
	.uleb128 0x410
	.ascii "EnumLanguageGroupLocales __MINGW_NAME_AW(EnumLanguageGroupLocales)\0"
	.byte	0x1
	.uleb128 0x411
	.ascii "EnumUILanguages __MINGW_NAME_AW(EnumUILanguages)\0"
	.byte	0x1
	.uleb128 0x419
	.ascii "EnumSystemCodePages __MINGW_NAME_AW(EnumSystemCodePages)\0"
	.byte	0x4
	.file 368 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/wincon.h"
	.byte	0x3
	.uleb128 0x4a
	.uleb128 0x170
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINCON_ \0"
	.byte	0x1
	.uleb128 0x29
	.ascii "RIGHT_ALT_PRESSED 0x1\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "LEFT_ALT_PRESSED 0x2\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "RIGHT_CTRL_PRESSED 0x4\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "LEFT_CTRL_PRESSED 0x8\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "SHIFT_PRESSED 0x10\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "NUMLOCK_ON 0x20\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "SCROLLLOCK_ON 0x40\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "CAPSLOCK_ON 0x80\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "ENHANCED_KEY 0x100\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "NLS_DBCSCHAR 0x10000\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "NLS_ALPHANUMERIC 0x0\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "NLS_KATAKANA 0x20000\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "NLS_HIRAGANA 0x40000\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "NLS_ROMAN 0x400000\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "NLS_IME_CONVERSION 0x800000\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "NLS_IME_DISABLE 0x20000000\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "FROM_LEFT_1ST_BUTTON_PRESSED 0x1\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "RIGHTMOST_BUTTON_PRESSED 0x2\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "FROM_LEFT_2ND_BUTTON_PRESSED 0x4\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "FROM_LEFT_3RD_BUTTON_PRESSED 0x8\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "FROM_LEFT_4TH_BUTTON_PRESSED 0x10\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "MOUSE_MOVED 0x1\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "DOUBLE_CLICK 0x2\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "MOUSE_WHEELED 0x4\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "KEY_EVENT 0x1\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "MOUSE_EVENT 0x2\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "WINDOW_BUFFER_SIZE_EVENT 0x4\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "MENU_EVENT 0x8\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "FOCUS_EVENT 0x10\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "FOREGROUND_BLUE 0x1\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "FOREGROUND_GREEN 0x2\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "FOREGROUND_RED 0x4\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "FOREGROUND_INTENSITY 0x8\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "BACKGROUND_BLUE 0x10\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "BACKGROUND_GREEN 0x20\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "BACKGROUND_RED 0x40\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "BACKGROUND_INTENSITY 0x80\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "COMMON_LVB_LEADING_BYTE 0x100\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "COMMON_LVB_TRAILING_BYTE 0x200\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "COMMON_LVB_GRID_HORIZONTAL 0x400\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "COMMON_LVB_GRID_LVERTICAL 0x800\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "COMMON_LVB_GRID_RVERTICAL 0x1000\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "COMMON_LVB_REVERSE_VIDEO 0x4000\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "COMMON_LVB_UNDERSCORE 0x8000\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "COMMON_LVB_SBCSDBCS 0x300\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "CONSOLE_NO_SELECTION 0x0\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "CONSOLE_SELECTION_IN_PROGRESS 0x1\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "CONSOLE_SELECTION_NOT_EMPTY 0x2\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "CONSOLE_MOUSE_SELECTION 0x4\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "CONSOLE_MOUSE_DOWN 0x8\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "CTRL_C_EVENT 0\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "CTRL_BREAK_EVENT 1\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "CTRL_CLOSE_EVENT 2\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "CTRL_LOGOFF_EVENT 5\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "CTRL_SHUTDOWN_EVENT 6\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "ENABLE_PROCESSED_INPUT 0x1\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "ENABLE_LINE_INPUT 0x2\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "ENABLE_ECHO_INPUT 0x4\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "ENABLE_WINDOW_INPUT 0x8\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "ENABLE_MOUSE_INPUT 0x10\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "ENABLE_INSERT_MODE 0x20\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "ENABLE_QUICK_EDIT_MODE 0x40\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "ENABLE_EXTENDED_FLAGS 0x80\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "ENABLE_AUTO_POSITION 0x100\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "ENABLE_PROCESSED_OUTPUT 0x1\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "ENABLE_WRAP_AT_EOL_OUTPUT 0x2\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "PeekConsoleInput __MINGW_NAME_AW(PeekConsoleInput)\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "ReadConsoleInput __MINGW_NAME_AW(ReadConsoleInput)\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "WriteConsoleInput __MINGW_NAME_AW(WriteConsoleInput)\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "ReadConsoleOutput __MINGW_NAME_AW(ReadConsoleOutput)\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "WriteConsoleOutput __MINGW_NAME_AW(WriteConsoleOutput)\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "ReadConsoleOutputCharacter __MINGW_NAME_AW(ReadConsoleOutputCharacter)\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "WriteConsoleOutputCharacter __MINGW_NAME_AW(WriteConsoleOutputCharacter)\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "FillConsoleOutputCharacter __MINGW_NAME_AW(FillConsoleOutputCharacter)\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "ScrollConsoleScreenBuffer __MINGW_NAME_AW(ScrollConsoleScreenBuffer)\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "GetConsoleTitle __MINGW_NAME_AW(GetConsoleTitle)\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "SetConsoleTitle __MINGW_NAME_AW(SetConsoleTitle)\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "ReadConsole __MINGW_NAME_AW(ReadConsole)\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "WriteConsole __MINGW_NAME_AW(WriteConsole)\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "AddConsoleAlias __MINGW_NAME_AW(AddConsoleAlias)\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "GetConsoleAlias __MINGW_NAME_AW(GetConsoleAlias)\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "GetConsoleAliasesLength __MINGW_NAME_AW(GetConsoleAliasesLength)\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "GetConsoleAliasExesLength __MINGW_NAME_AW(GetConsoleAliasExesLength)\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "GetConsoleAliases __MINGW_NAME_AW(GetConsoleAliases)\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "GetConsoleAliasExes __MINGW_NAME_AW(GetConsoleAliasExes)\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "ATTACH_PARENT_PROCESS ((DWORD)-1)\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "CONSOLE_TEXTMODE_BUFFER 1\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "CONSOLE_FULLSCREEN 1\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "CONSOLE_FULLSCREEN_HARDWARE 2\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "CONSOLE_FULLSCREEN_MODE 1\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "CONSOLE_WINDOWED_MODE 2\0"
	.byte	0x4
	.file 369 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winver.h"
	.byte	0x3
	.uleb128 0x4b
	.uleb128 0x171
	.byte	0x1
	.uleb128 0x7
	.ascii "VER_H \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x8
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "VS_FILE_INFO RT_VERSION\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "VS_VERSION_INFO 1\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "VS_USER_DEFINED 100\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "VS_FFI_SIGNATURE __MSABI_LONG(0xFEEF04BD)\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "VS_FFI_STRUCVERSION __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "VS_FFI_FILEFLAGSMASK __MSABI_LONG(0x0000003F)\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "VS_FF_DEBUG __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "VS_FF_PRERELEASE __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "VS_FF_PATCHED __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "VS_FF_PRIVATEBUILD __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "VS_FF_INFOINFERRED __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "VS_FF_SPECIALBUILD __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "VOS_UNKNOWN __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "VOS_DOS __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "VOS_OS216 __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "VOS_OS232 __MSABI_LONG(0x00030000)\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "VOS_NT __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "VOS_WINCE __MSABI_LONG(0x00050000)\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "VOS__BASE __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "VOS__WINDOWS16 __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "VOS__PM16 __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "VOS__PM32 __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "VOS__WINDOWS32 __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "VOS_DOS_WINDOWS16 __MSABI_LONG(0x00010001)\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "VOS_DOS_WINDOWS32 __MSABI_LONG(0x00010004)\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "VOS_OS216_PM16 __MSABI_LONG(0x00020002)\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "VOS_OS232_PM32 __MSABI_LONG(0x00030003)\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "VOS_NT_WINDOWS32 __MSABI_LONG(0x00040004)\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "VFT_UNKNOWN __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "VFT_APP __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "VFT_DLL __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "VFT_DRV __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "VFT_FONT __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "VFT_VXD __MSABI_LONG(0x00000005)\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "VFT_STATIC_LIB __MSABI_LONG(0x00000007)\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "VFT2_UNKNOWN __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "VFT2_DRV_PRINTER __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "VFT2_DRV_KEYBOARD __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "VFT2_DRV_LANGUAGE __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "VFT2_DRV_DISPLAY __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "VFT2_DRV_MOUSE __MSABI_LONG(0x00000005)\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "VFT2_DRV_NETWORK __MSABI_LONG(0x00000006)\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "VFT2_DRV_SYSTEM __MSABI_LONG(0x00000007)\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "VFT2_DRV_INSTALLABLE __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "VFT2_DRV_SOUND __MSABI_LONG(0x00000009)\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "VFT2_DRV_COMM __MSABI_LONG(0x0000000A)\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "VFT2_DRV_INPUTMETHOD __MSABI_LONG(0x0000000B)\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "VFT2_DRV_VERSIONED_PRINTER __MSABI_LONG(0x0000000C)\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "VFT2_FONT_RASTER __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "VFT2_FONT_VECTOR __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "VFT2_FONT_TRUETYPE __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "VFFF_ISSHAREDFILE 0x0001\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "VFF_CURNEDEST 0x0001\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "VFF_FILEINUSE 0x0002\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "VFF_BUFFTOOSMALL 0x0004\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "VIFF_FORCEINSTALL 0x0001\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "VIFF_DONTDELETEOLD 0x0002\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "VIF_TEMPFILE __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "VIF_MISMATCH __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "VIF_SRCOLD __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "VIF_DIFFLANG __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "VIF_DIFFCODEPG __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "VIF_DIFFTYPE __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "VIF_WRITEPROT __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "VIF_FILEINUSE __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "VIF_OUTOFSPACE __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "VIF_ACCESSVIOLATION __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "VIF_SHARINGVIOLATION __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "VIF_CANNOTCREATE __MSABI_LONG(0x00000800)\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "VIF_CANNOTDELETE __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "VIF_CANNOTRENAME __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "VIF_CANNOTDELETECUR __MSABI_LONG(0x00004000)\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "VIF_OUTOFMEMORY __MSABI_LONG(0x00008000)\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "VIF_CANNOTREADSRC __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "VIF_CANNOTREADDST __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "VIF_BUFFTOOSMALL __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "VIF_CANNOTLOADLZ32 __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "VIF_CANNOTLOADCABINET __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "VerFindFile __MINGW_NAME_AW(VerFindFile)\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "VerInstallFile __MINGW_NAME_AW(VerInstallFile)\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "GetFileVersionInfoSize __MINGW_NAME_AW(GetFileVersionInfoSize)\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "GetFileVersionInfo __MINGW_NAME_AW(GetFileVersionInfo)\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "VerLanguageName __MINGW_NAME_AW(VerLanguageName)\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "VerQueryValue __MINGW_NAME_AW(VerQueryValue)\0"
	.byte	0x4
	.file 370 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winreg.h"
	.byte	0x3
	.uleb128 0x4c
	.uleb128 0x172
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINREG_ \0"
	.byte	0x1
	.uleb128 0x13
	.ascii "RRF_RT_REG_NONE 0x00000001\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "RRF_RT_REG_SZ 0x00000002\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "RRF_RT_REG_EXPAND_SZ 0x00000004\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "RRF_RT_REG_BINARY 0x00000008\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "RRF_RT_REG_DWORD 0x00000010\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "RRF_RT_REG_MULTI_SZ 0x00000020\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "RRF_RT_REG_QWORD 0x00000040\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "RRF_RT_DWORD (RRF_RT_REG_BINARY | RRF_RT_REG_DWORD)\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "RRF_RT_QWORD (RRF_RT_REG_BINARY | RRF_RT_REG_QWORD)\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "RRF_RT_ANY 0x0000ffff\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "RRF_NOEXPAND 0x10000000\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "RRF_ZEROONFAILURE 0x20000000\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "HKEY_CLASSES_ROOT ((HKEY) (ULONG_PTR)((LONG)0x80000000))\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "HKEY_CURRENT_USER ((HKEY) (ULONG_PTR)((LONG)0x80000001))\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "HKEY_LOCAL_MACHINE ((HKEY) (ULONG_PTR)((LONG)0x80000002))\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "HKEY_USERS ((HKEY) (ULONG_PTR)((LONG)0x80000003))\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "HKEY_PERFORMANCE_DATA ((HKEY) (ULONG_PTR)((LONG)0x80000004))\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "HKEY_PERFORMANCE_TEXT ((HKEY) (ULONG_PTR)((LONG)0x80000050))\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "HKEY_PERFORMANCE_NLSTEXT ((HKEY) (ULONG_PTR)((LONG)0x80000060))\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "HKEY_CURRENT_CONFIG ((HKEY) (ULONG_PTR)((LONG)0x80000005))\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "HKEY_DYN_DATA ((HKEY) (ULONG_PTR)((LONG)0x80000006))\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "REG_SECURE_CONNECTION 1\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "_PROVIDER_STRUCTS_DEFINED \0"
	.byte	0x1
	.uleb128 0x34
	.ascii "PROVIDER_KEEPS_VALUE_LENGTH 0x1\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "WIN31_CLASS NULL\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "RegConnectRegistry __MINGW_NAME_AW(RegConnectRegistry)\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "RegConnectRegistryEx __MINGW_NAME_AW(RegConnectRegistryEx)\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "RegCreateKey __MINGW_NAME_AW(RegCreateKey)\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "RegCreateKeyEx __MINGW_NAME_AW(RegCreateKeyEx)\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "RegDeleteKey __MINGW_NAME_AW(RegDeleteKey)\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "RegDeleteKeyEx __MINGW_NAME_AW(RegDeleteKeyEx)\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "RegDeleteValue __MINGW_NAME_AW(RegDeleteValue)\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "RegEnumKey __MINGW_NAME_AW(RegEnumKey)\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "RegEnumKeyEx __MINGW_NAME_AW(RegEnumKeyEx)\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "RegEnumValue __MINGW_NAME_AW(RegEnumValue)\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "RegLoadKey __MINGW_NAME_AW(RegLoadKey)\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "RegOpenKey __MINGW_NAME_AW(RegOpenKey)\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "RegOpenKeyEx __MINGW_NAME_AW(RegOpenKeyEx)\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "RegQueryInfoKey __MINGW_NAME_AW(RegQueryInfoKey)\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "RegQueryValue __MINGW_NAME_AW(RegQueryValue)\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "RegQueryMultipleValues __MINGW_NAME_AW(RegQueryMultipleValues)\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "RegQueryValueEx __MINGW_NAME_AW(RegQueryValueEx)\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "RegReplaceKey __MINGW_NAME_AW(RegReplaceKey)\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "RegRestoreKey __MINGW_NAME_AW(RegRestoreKey)\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "RegSaveKey __MINGW_NAME_AW(RegSaveKey)\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "RegSetValue __MINGW_NAME_AW(RegSetValue)\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "RegSetValueEx __MINGW_NAME_AW(RegSetValueEx)\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "RegUnLoadKey __MINGW_NAME_AW(RegUnLoadKey)\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "RegGetValue __MINGW_NAME_AW(RegGetValue)\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "InitiateSystemShutdown __MINGW_NAME_AW(InitiateSystemShutdown)\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "AbortSystemShutdown __MINGW_NAME_AW(AbortSystemShutdown)\0"
	.file 371 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/reason.h"
	.byte	0x3
	.uleb128 0xcd
	.uleb128 0x173
	.byte	0x1
	.uleb128 0x7
	.ascii "SENTINEL_Reason \0"
	.byte	0x1
	.uleb128 0x9
	.ascii "SHTDN_REASON_FLAG_COMMENT_REQUIRED 0x01000000\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "SHTDN_REASON_FLAG_DIRTY_PROBLEM_ID_REQUIRED 0x02000000\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "SHTDN_REASON_FLAG_CLEAN_UI 0x04000000\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "SHTDN_REASON_FLAG_DIRTY_UI 0x08000000\0"
	.byte	0x1
	.uleb128 0xd
	.ascii "SHTDN_REASON_FLAG_USER_DEFINED 0x40000000\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "SHTDN_REASON_FLAG_PLANNED 0x80000000\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "SHTDN_REASON_MAJOR_OTHER 0x00000000\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "SHTDN_REASON_MAJOR_NONE 0x00000000\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "SHTDN_REASON_MAJOR_HARDWARE 0x00010000\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "SHTDN_REASON_MAJOR_OPERATINGSYSTEM 0x00020000\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "SHTDN_REASON_MAJOR_SOFTWARE 0x00030000\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "SHTDN_REASON_MAJOR_APPLICATION 0x00040000\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "SHTDN_REASON_MAJOR_SYSTEM 0x00050000\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "SHTDN_REASON_MAJOR_POWER 0x00060000\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "SHTDN_REASON_MAJOR_LEGACY_API 0x00070000\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "SHTDN_REASON_MINOR_OTHER 0x00000000\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "SHTDN_REASON_MINOR_NONE 0x000000ff\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "SHTDN_REASON_MINOR_MAINTENANCE 0x00000001\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "SHTDN_REASON_MINOR_INSTALLATION 0x00000002\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "SHTDN_REASON_MINOR_UPGRADE 0x00000003\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "SHTDN_REASON_MINOR_RECONFIG 0x00000004\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "SHTDN_REASON_MINOR_HUNG 0x00000005\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "SHTDN_REASON_MINOR_UNSTABLE 0x00000006\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "SHTDN_REASON_MINOR_DISK 0x00000007\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "SHTDN_REASON_MINOR_PROCESSOR 0x00000008\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "SHTDN_REASON_MINOR_NETWORKCARD 0x00000009\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "SHTDN_REASON_MINOR_POWER_SUPPLY 0x0000000a\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "SHTDN_REASON_MINOR_CORDUNPLUGGED 0x0000000b\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "SHTDN_REASON_MINOR_ENVIRONMENT 0x0000000c\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "SHTDN_REASON_MINOR_HARDWARE_DRIVER 0x0000000d\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "SHTDN_REASON_MINOR_OTHERDRIVER 0x0000000e\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "SHTDN_REASON_MINOR_BLUESCREEN 0x0000000F\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "SHTDN_REASON_MINOR_SERVICEPACK 0x00000010\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "SHTDN_REASON_MINOR_HOTFIX 0x00000011\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "SHTDN_REASON_MINOR_SECURITYFIX 0x00000012\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "SHTDN_REASON_MINOR_SECURITY 0x00000013\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "SHTDN_REASON_MINOR_NETWORK_CONNECTIVITY 0x00000014\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "SHTDN_REASON_MINOR_WMI 0x00000015\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "SHTDN_REASON_MINOR_SERVICEPACK_UNINSTALL 0x00000016\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "SHTDN_REASON_MINOR_HOTFIX_UNINSTALL 0x00000017\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "SHTDN_REASON_MINOR_SECURITYFIX_UNINSTALL 0x00000018\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "SHTDN_REASON_MINOR_MMC 0x00000019\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "SHTDN_REASON_MINOR_SYSTEMRESTORE 0x0000001a\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "SHTDN_REASON_MINOR_TERMSRV 0x00000020\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "SHTDN_REASON_MINOR_DC_PROMOTION 0x00000021\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "SHTDN_REASON_MINOR_DC_DEMOTION 0x00000022\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "SHTDN_REASON_UNKNOWN SHTDN_REASON_MINOR_NONE\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "SHTDN_REASON_LEGACY_API (SHTDN_REASON_MAJOR_LEGACY_API | SHTDN_REASON_FLAG_PLANNED)\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "SHTDN_REASON_VALID_BIT_MASK 0xc0ffffff\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "PCLEANUI (SHTDN_REASON_FLAG_PLANNED | SHTDN_REASON_FLAG_CLEAN_UI)\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "UCLEANUI (SHTDN_REASON_FLAG_CLEAN_UI)\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "PDIRTYUI (SHTDN_REASON_FLAG_PLANNED | SHTDN_REASON_FLAG_DIRTY_UI)\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "UDIRTYUI (SHTDN_REASON_FLAG_DIRTY_UI)\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "MAX_REASON_NAME_LEN 64\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "MAX_REASON_DESC_LEN 256\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "MAX_REASON_BUGID_LEN 32\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "MAX_REASON_COMMENT_LEN 512\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "SHUTDOWN_TYPE_LEN 32\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "POLICY_SHOWREASONUI_NEVER 0\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "POLICY_SHOWREASONUI_ALWAYS 1\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "POLICY_SHOWREASONUI_WORKSTATIONONLY 2\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "POLICY_SHOWREASONUI_SERVERONLY 3\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "SNAPSHOT_POLICY_NEVER 0\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "SNAPSHOT_POLICY_ALWAYS 1\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "SNAPSHOT_POLICY_UNPLANNED 2\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "MAX_NUM_REASONS 256\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0xcf
	.ascii "REASON_SWINSTALL SHTDN_REASON_MAJOR_SOFTWARE|SHTDN_REASON_MINOR_INSTALLATION\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "REASON_HWINSTALL SHTDN_REASON_MAJOR_HARDWARE|SHTDN_REASON_MINOR_INSTALLATION\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "REASON_SERVICEHANG SHTDN_REASON_MAJOR_SOFTWARE|SHTDN_REASON_MINOR_HUNG\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "REASON_UNSTABLE SHTDN_REASON_MAJOR_SYSTEM|SHTDN_REASON_MINOR_UNSTABLE\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "REASON_SWHWRECONF SHTDN_REASON_MAJOR_SOFTWARE|SHTDN_REASON_MINOR_RECONFIG\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "REASON_OTHER SHTDN_REASON_MAJOR_OTHER|SHTDN_REASON_MINOR_OTHER\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "REASON_UNKNOWN SHTDN_REASON_UNKNOWN\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "REASON_LEGACY_API SHTDN_REASON_LEGACY_API\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "REASON_PLANNED_FLAG SHTDN_REASON_FLAG_PLANNED\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "MAX_SHUTDOWN_TIMEOUT (10*365*24*60*60)\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "InitiateSystemShutdownEx __MINGW_NAME_AW(InitiateSystemShutdownEx)\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "RegSaveKeyEx __MINGW_NAME_AW(RegSaveKeyEx)\0"
	.byte	0x4
	.file 372 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winnetwk.h"
	.byte	0x3
	.uleb128 0x4d
	.uleb128 0x174
	.byte	0x1
	.uleb128 0x6
	.ascii "_WINNETWK_ \0"
	.file 373 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/wnnc.h"
	.byte	0x3
	.uleb128 0x11
	.uleb128 0x175
	.byte	0x1
	.uleb128 0x7
	.ascii "_WNNC_ \0"
	.byte	0x1
	.uleb128 0xd
	.ascii "WNNC_NET_MSNET 0x00010000\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "WNNC_NET_LANMAN WNNC_NET_SMB\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "WNNC_NET_SMB 0x00020000\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "WNNC_NET_NETWARE 0x00030000\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "WNNC_NET_VINES 0x00040000\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "WNNC_NET_10NET 0x00050000\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "WNNC_NET_LOCUS 0x00060000\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "WNNC_NET_SUN_PC_NFS 0x00070000\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "WNNC_NET_LANSTEP 0x00080000\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "WNNC_NET_9TILES 0x00090000\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "WNNC_NET_LANTASTIC 0x000a0000\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "WNNC_NET_AS400 0x000b0000\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "WNNC_NET_FTP_NFS 0x000c0000\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "WNNC_NET_PATHWORKS 0x000d0000\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "WNNC_NET_LIFENET 0x000e0000\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "WNNC_NET_POWERLAN 0x000f0000\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "WNNC_NET_BWNFS 0x00100000\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "WNNC_NET_COGENT 0x00110000\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "WNNC_NET_FARALLON 0x00120000\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "WNNC_NET_APPLETALK 0x00130000\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "WNNC_NET_INTERGRAPH 0x00140000\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "WNNC_NET_SYMFONET 0x00150000\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "WNNC_NET_CLEARCASE 0x00160000\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "WNNC_NET_FRONTIER 0x00170000\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "WNNC_NET_BMC 0x00180000\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "WNNC_NET_DCE 0x00190000\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "WNNC_NET_AVID 0x001a0000\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "WNNC_NET_DOCUSPACE 0x001b0000\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "WNNC_NET_MANGOSOFT 0x001c0000\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "WNNC_NET_SERNET 0x001d0000\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "WNNC_NET_RIVERFRONT1 0x001e0000\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "WNNC_NET_RIVERFRONT2 0x001f0000\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "WNNC_NET_DECORB 0x00200000\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "WNNC_NET_PROTSTOR 0x00210000\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "WNNC_NET_FJ_REDIR 0x00220000\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "WNNC_NET_DISTINCT 0x00230000\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "WNNC_NET_TWINS 0x00240000\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "WNNC_NET_RDR2SAMPLE 0x00250000\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "WNNC_NET_CSC 0x00260000\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "WNNC_NET_3IN1 0x00270000\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "WNNC_NET_EXTENDNET 0x00290000\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "WNNC_NET_STAC 0x002a0000\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "WNNC_NET_FOXBAT 0x002b0000\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "WNNC_NET_YAHOO 0x002c0000\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "WNNC_NET_EXIFS 0x002d0000\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "WNNC_NET_DAV 0x002e0000\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "WNNC_NET_KNOWARE 0x002f0000\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "WNNC_NET_OBJECT_DIRE 0x00300000\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "WNNC_NET_MASFAX 0x00310000\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "WNNC_NET_HOB_NFS 0x00320000\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "WNNC_NET_SHIVA 0x00330000\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "WNNC_NET_IBMAL 0x00340000\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "WNNC_NET_LOCK 0x00350000\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "WNNC_NET_TERMSRV 0x00360000\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "WNNC_NET_SRT 0x00370000\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "WNNC_NET_QUINCY 0x00380000\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "WNNC_NET_OPENAFS 0x00390000\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "WNNC_NET_AVID1 0x003a0000\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "WNNC_NET_DFS 0x003b0000\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "WNNC_NET_KWNP 0x003c0000\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "WNNC_NET_ZENWORKS 0x003d0000\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "WNNC_NET_DRIVEONWEB 0x003e0000\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "WNNC_NET_VMWARE 0x003f0000\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "WNNC_NET_RSFX 0x00400000\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "WNNC_NET_MFILES 0x00410000\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "WNNC_NET_MS_NFS 0x00420000\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "WNNC_NET_GOOGLE 0x00430000\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "WNNC_NET_NDFS 0x00440000\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "WNNC_CRED_MANAGER 0xffff0000\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x13
	.ascii "RESOURCE_CONNECTED 0x00000001\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "RESOURCE_GLOBALNET 0x00000002\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "RESOURCE_REMEMBERED 0x00000003\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "RESOURCE_RECENT 0x00000004\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "RESOURCE_CONTEXT 0x00000005\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "RESOURCETYPE_ANY 0x00000000\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "RESOURCETYPE_DISK 0x00000001\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "RESOURCETYPE_PRINT 0x00000002\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "RESOURCETYPE_RESERVED 0x00000008\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "RESOURCETYPE_UNKNOWN 0xFFFFFFFF\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "RESOURCEUSAGE_CONNECTABLE 0x00000001\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "RESOURCEUSAGE_CONTAINER 0x00000002\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "RESOURCEUSAGE_NOLOCALDEVICE 0x00000004\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "RESOURCEUSAGE_SIBLING 0x00000008\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "RESOURCEUSAGE_ATTACHED 0x00000010\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "RESOURCEUSAGE_ALL (RESOURCEUSAGE_CONNECTABLE | RESOURCEUSAGE_CONTAINER | RESOURCEUSAGE_ATTACHED)\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "RESOURCEUSAGE_RESERVED 0x80000000\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "RESOURCEDISPLAYTYPE_GENERIC 0x00000000\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "RESOURCEDISPLAYTYPE_DOMAIN 0x00000001\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "RESOURCEDISPLAYTYPE_SERVER 0x00000002\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "RESOURCEDISPLAYTYPE_SHARE 0x00000003\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "RESOURCEDISPLAYTYPE_FILE 0x00000004\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "RESOURCEDISPLAYTYPE_GROUP 0x00000005\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "RESOURCEDISPLAYTYPE_NETWORK 0x00000006\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "RESOURCEDISPLAYTYPE_ROOT 0x00000007\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "RESOURCEDISPLAYTYPE_SHAREADMIN 0x00000008\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "RESOURCEDISPLAYTYPE_DIRECTORY 0x00000009\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "RESOURCEDISPLAYTYPE_TREE 0x0000000a\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "RESOURCEDISPLAYTYPE_NDSCONTAINER 0x0000000b\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "NETPROPERTY_PERSISTENT 1\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "CONNECT_UPDATE_PROFILE 0x00000001\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "CONNECT_UPDATE_RECENT 0x00000002\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "CONNECT_TEMPORARY 0x00000004\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "CONNECT_INTERACTIVE 0x00000008\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "CONNECT_PROMPT 0x00000010\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "CONNECT_NEED_DRIVE 0x00000020\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "CONNECT_REFCOUNT 0x00000040\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "CONNECT_REDIRECT 0x00000080\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "CONNECT_LOCALDRIVE 0x00000100\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "CONNECT_CURRENT_MEDIA 0x00000200\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "CONNECT_DEFERRED 0x00000400\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "CONNECT_RESERVED 0xFF000000\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "CONNECT_COMMANDLINE 0x00000800\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "CONNECT_CMD_SAVECRED 0x00001000\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "WNetAddConnection __MINGW_NAME_AW(WNetAddConnection)\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "WNetAddConnection2 __MINGW_NAME_AW(WNetAddConnection2)\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "WNetAddConnection3 __MINGW_NAME_AW(WNetAddConnection3)\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "WNetCancelConnection __MINGW_NAME_AW(WNetCancelConnection)\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "WNetCancelConnection2 __MINGW_NAME_AW(WNetCancelConnection2)\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "WNetGetConnection __MINGW_NAME_AW(WNetGetConnection)\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "WNetRestoreConnection __MINGW_NAME_AW(WNetRestoreConnection)\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "WNetUseConnection __MINGW_NAME_AW(WNetUseConnection)\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "CONNDLG_RO_PATH 0x00000001\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "CONNDLG_CONN_POINT 0x00000002\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "CONNDLG_USE_MRU 0x00000004\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "CONNDLG_HIDE_BOX 0x00000008\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "CONNDLG_PERSIST 0x00000010\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "CONNDLG_NOT_PERSIST 0x00000020\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "WNetConnectionDialog1 __MINGW_NAME_AW(WNetConnectionDialog1)\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "DISC_UPDATE_PROFILE 0x00000001\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "DISC_NO_FORCE 0x00000040\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "WNetDisconnectDialog1 __MINGW_NAME_AW(WNetDisconnectDialog1)\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "WNetOpenEnum __MINGW_NAME_AW(WNetOpenEnum)\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "WNetEnumResource __MINGW_NAME_AW(WNetEnumResource)\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "WNetGetResourceParent __MINGW_NAME_AW(WNetGetResourceParent)\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "WNetGetResourceInformation __MINGW_NAME_AW(WNetGetResourceInformation)\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "UNIVERSAL_NAME_INFO_LEVEL 0x00000001\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "REMOTE_NAME_INFO_LEVEL 0x00000002\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "WNetGetUniversalName __MINGW_NAME_AW(WNetGetUniversalName)\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "WNetGetUser __MINGW_NAME_AW(WNetGetUser)\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "WNetGetProviderName __MINGW_NAME_AW(WNetGetProviderName)\0"
	.byte	0x1
	.uleb128 0xef
	.ascii "WNFMT_MULTILINE 0x01\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "WNFMT_ABBREVIATED 0x02\0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "WNFMT_INENUM 0x10\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "WNFMT_CONNECTION 0x20\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "NETINFO_DLL16 0x00000001\0"
	.byte	0x1
	.uleb128 0x103
	.ascii "NETINFO_DISKRED 0x00000004\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "NETINFO_PRINTERRED 0x00000008\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "WNetGetNetworkInformation __MINGW_NAME_AW(WNetGetNetworkInformation)\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "PFNGETPROFILEPATH __MINGW_NAME_AW(PFNGETPROFILEPATH)\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "PFNRECONCILEPROFILE __MINGW_NAME_AW(PFNRECONCILEPROFILE)\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "RP_LOGON 0x01\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "RP_INIFILE 0x02\0"
	.byte	0x1
	.uleb128 0x11b
	.ascii "PFNPROCESSPOLICIES __MINGW_NAME_AW(PFNPROCESSPOLICIES)\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "PP_DISPLAYERRORS 0x01\0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "WNetGetLastError __MINGW_NAME_AW(WNetGetLastError)\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "WN_SUCCESS NO_ERROR\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "WN_NO_ERROR NO_ERROR\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "WN_NOT_SUPPORTED ERROR_NOT_SUPPORTED\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "WN_CANCEL ERROR_CANCELLED\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "WN_RETRY ERROR_RETRY\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "WN_NET_ERROR ERROR_UNEXP_NET_ERR\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "WN_MORE_DATA ERROR_MORE_DATA\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "WN_BAD_POINTER ERROR_INVALID_ADDRESS\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "WN_BAD_VALUE ERROR_INVALID_PARAMETER\0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "WN_BAD_USER ERROR_BAD_USERNAME\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "WN_BAD_PASSWORD ERROR_INVALID_PASSWORD\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "WN_ACCESS_DENIED ERROR_ACCESS_DENIED\0"
	.byte	0x1
	.uleb128 0x130
	.ascii "WN_FUNCTION_BUSY ERROR_BUSY\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "WN_WINDOWS_ERROR ERROR_UNEXP_NET_ERR\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "WN_OUT_OF_MEMORY ERROR_NOT_ENOUGH_MEMORY\0"
	.byte	0x1
	.uleb128 0x133
	.ascii "WN_NO_NETWORK ERROR_NO_NETWORK\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "WN_EXTENDED_ERROR ERROR_EXTENDED_ERROR\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "WN_BAD_LEVEL ERROR_INVALID_LEVEL\0"
	.byte	0x1
	.uleb128 0x136
	.ascii "WN_BAD_HANDLE ERROR_INVALID_HANDLE\0"
	.byte	0x1
	.uleb128 0x137
	.ascii "WN_NOT_INITIALIZING ERROR_ALREADY_INITIALIZED\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "WN_NO_MORE_DEVICES ERROR_NO_MORE_DEVICES\0"
	.byte	0x1
	.uleb128 0x139
	.ascii "WN_NOT_CONNECTED ERROR_NOT_CONNECTED\0"
	.byte	0x1
	.uleb128 0x13a
	.ascii "WN_OPEN_FILES ERROR_OPEN_FILES\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "WN_DEVICE_IN_USE ERROR_DEVICE_IN_USE\0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "WN_BAD_NETNAME ERROR_BAD_NET_NAME\0"
	.byte	0x1
	.uleb128 0x13d
	.ascii "WN_BAD_LOCALNAME ERROR_BAD_DEVICE\0"
	.byte	0x1
	.uleb128 0x13e
	.ascii "WN_ALREADY_CONNECTED ERROR_ALREADY_ASSIGNED\0"
	.byte	0x1
	.uleb128 0x13f
	.ascii "WN_DEVICE_ERROR ERROR_GEN_FAILURE\0"
	.byte	0x1
	.uleb128 0x140
	.ascii "WN_CONNECTION_CLOSED ERROR_CONNECTION_UNAVAIL\0"
	.byte	0x1
	.uleb128 0x141
	.ascii "WN_NO_NET_OR_BAD_PATH ERROR_NO_NET_OR_BAD_PATH\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "WN_BAD_PROVIDER ERROR_BAD_PROVIDER\0"
	.byte	0x1
	.uleb128 0x143
	.ascii "WN_CANNOT_OPEN_PROFILE ERROR_CANNOT_OPEN_PROFILE\0"
	.byte	0x1
	.uleb128 0x144
	.ascii "WN_BAD_PROFILE ERROR_BAD_PROFILE\0"
	.byte	0x1
	.uleb128 0x145
	.ascii "WN_BAD_DEV_TYPE ERROR_BAD_DEV_TYPE\0"
	.byte	0x1
	.uleb128 0x146
	.ascii "WN_DEVICE_ALREADY_REMEMBERED ERROR_DEVICE_ALREADY_REMEMBERED\0"
	.byte	0x1
	.uleb128 0x147
	.ascii "WN_CONNECTED_OTHER_PASSWORD ERROR_CONNECTED_OTHER_PASSWORD\0"
	.byte	0x1
	.uleb128 0x148
	.ascii "WN_CONNECTED_OTHER_PASSWORD_DEFAULT ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "WN_NO_MORE_ENTRIES ERROR_NO_MORE_ITEMS\0"
	.byte	0x1
	.uleb128 0x14a
	.ascii "WN_NOT_CONTAINER ERROR_NOT_CONTAINER\0"
	.byte	0x1
	.uleb128 0x14b
	.ascii "WN_NOT_AUTHENTICATED ERROR_NOT_AUTHENTICATED\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "WN_NOT_LOGGED_ON ERROR_NOT_LOGGED_ON\0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "WN_NOT_VALIDATED ERROR_NO_LOGON_SERVERS\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "WNCON_FORNETCARD 0x00000001\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "WNCON_NOTROUTED 0x00000002\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "WNCON_SLOWLINK 0x00000004\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "WNCON_DYNAMIC 0x00000008\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "MultinetGetConnectionPerformance __MINGW_NAME_AW(MultinetGetConnectionPerformance)\0"
	.byte	0x4
	.file 374 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/virtdisk.h"
	.byte	0x3
	.uleb128 0x4e
	.uleb128 0x176
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_VIRTDISK \0"
	.byte	0x4
	.file 375 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/cderr.h"
	.byte	0x3
	.uleb128 0x51
	.uleb128 0x177
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_CDERR \0"
	.byte	0x1
	.uleb128 0x9
	.ascii "CDERR_DIALOGFAILURE 0xFFFF\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "CDERR_GENERALCODES 0x0000\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "CDERR_STRUCTSIZE 0x0001\0"
	.byte	0x1
	.uleb128 0xd
	.ascii "CDERR_INITIALIZATION 0x0002\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "CDERR_NOTEMPLATE 0x0003\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "CDERR_NOHINSTANCE 0x0004\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "CDERR_LOADSTRFAILURE 0x0005\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "CDERR_FINDRESFAILURE 0x0006\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "CDERR_LOADRESFAILURE 0x0007\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "CDERR_LOCKRESFAILURE 0x0008\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "CDERR_MEMALLOCFAILURE 0x0009\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "CDERR_MEMLOCKFAILURE 0x000A\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "CDERR_NOHOOK 0x000B\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "CDERR_REGISTERMSGFAIL 0x000C\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "PDERR_PRINTERCODES 0x1000\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "PDERR_SETUPFAILURE 0x1001\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "PDERR_PARSEFAILURE 0x1002\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "PDERR_RETDEFFAILURE 0x1003\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "PDERR_LOADDRVFAILURE 0x1004\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "PDERR_GETDEVMODEFAIL 0x1005\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "PDERR_INITFAILURE 0x1006\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "PDERR_NODEVICES 0x1007\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "PDERR_NODEFAULTPRN 0x1008\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "PDERR_DNDMMISMATCH 0x1009\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "PDERR_CREATEICFAILURE 0x100A\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "PDERR_PRINTERNOTFOUND 0x100B\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "PDERR_DEFAULTDIFFERENT 0x100C\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "CFERR_CHOOSEFONTCODES 0x2000\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "CFERR_NOFONTS 0x2001\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "CFERR_MAXLESSTHANMIN 0x2002\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "FNERR_FILENAMECODES 0x3000\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "FNERR_SUBCLASSFAILURE 0x3001\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "FNERR_INVALIDFILENAME 0x3002\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "FNERR_BUFFERTOOSMALL 0x3003\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "FRERR_FINDREPLACECODES 0x4000\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "FRERR_BUFFERLENGTHZERO 0x4001\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "CCERR_CHOOSECOLORCODES 0x5000\0"
	.byte	0x4
	.file 376 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/dde.h"
	.byte	0x3
	.uleb128 0x52
	.uleb128 0x178
	.byte	0x1
	.uleb128 0x7
	.ascii "_DDEHEADER_INCLUDED_ \0"
	.byte	0x1
	.uleb128 0xf
	.ascii "WM_DDE_FIRST 0x03E0\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "WM_DDE_INITIATE (WM_DDE_FIRST)\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "WM_DDE_TERMINATE (WM_DDE_FIRST+1)\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "WM_DDE_ADVISE (WM_DDE_FIRST+2)\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "WM_DDE_UNADVISE (WM_DDE_FIRST+3)\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "WM_DDE_ACK (WM_DDE_FIRST+4)\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "WM_DDE_DATA (WM_DDE_FIRST+5)\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "WM_DDE_REQUEST (WM_DDE_FIRST+6)\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "WM_DDE_POKE (WM_DDE_FIRST+7)\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "WM_DDE_EXECUTE (WM_DDE_FIRST+8)\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "WM_DDE_LAST (WM_DDE_FIRST+8)\0"
	.byte	0x4
	.file 377 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/ddeml.h"
	.byte	0x3
	.uleb128 0x53
	.uleb128 0x179
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_DDEMLH \0"
	.byte	0x1
	.uleb128 0x13
	.ascii "EXPENTRY CALLBACK\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "XST_NULL 0\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "XST_INCOMPLETE 1\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "XST_CONNECTED 2\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "XST_INIT1 3\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "XST_INIT2 4\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "XST_REQSENT 5\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "XST_DATARCVD 6\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "XST_POKESENT 7\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "XST_POKEACKRCVD 8\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "XST_EXECSENT 9\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "XST_EXECACKRCVD 10\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "XST_ADVSENT 11\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "XST_UNADVSENT 12\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "XST_ADVACKRCVD 13\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "XST_UNADVACKRCVD 14\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "XST_ADVDATASENT 15\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "XST_ADVDATAACKRCVD 16\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "CADV_LATEACK 0xFFFF\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "ST_CONNECTED 0x0001\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "ST_ADVISE 0x0002\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "ST_ISLOCAL 0x0004\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "ST_BLOCKED 0x0008\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "ST_CLIENT 0x0010\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "ST_TERMINATED 0x0020\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "ST_INLIST 0x0040\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "ST_BLOCKNEXT 0x0080\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "ST_ISSELF 0x0100\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "DDE_FACK 0x8000\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "DDE_FBUSY 0x4000\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "DDE_FDEFERUPD 0x4000\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "DDE_FACKREQ 0x8000\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "DDE_FRELEASE 0x2000\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "DDE_FREQUESTED 0x1000\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "DDE_FAPPSTATUS 0x00ff\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "DDE_FNOTPROCESSED 0x0000\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "DDE_FACKRESERVED (~(DDE_FACK | DDE_FBUSY | DDE_FAPPSTATUS))\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "DDE_FADVRESERVED (~(DDE_FACKREQ | DDE_FDEFERUPD))\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "DDE_FDATRESERVED (~(DDE_FACKREQ | DDE_FRELEASE | DDE_FREQUESTED))\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "DDE_FPOKRESERVED (~(DDE_FRELEASE))\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "MSGF_DDEMGR 0x8001\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "CP_WINANSI 1004\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "CP_WINUNICODE 1200\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "XTYPF_NOBLOCK 0x0002\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "XTYPF_NODATA 0x0004\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "XTYPF_ACKREQ 0x0008\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "XCLASS_MASK 0xFC00\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "XCLASS_BOOL 0x1000\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "XCLASS_DATA 0x2000\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "XCLASS_FLAGS 0x4000\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "XCLASS_NOTIFICATION 0x8000\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "XTYP_ERROR (0x0000 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK)\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "XTYP_ADVDATA (0x0010 | XCLASS_FLAGS)\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "XTYP_ADVREQ (0x0020 | XCLASS_DATA | XTYPF_NOBLOCK)\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "XTYP_ADVSTART (0x0030 | XCLASS_BOOL)\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "XTYP_ADVSTOP (0x0040 | XCLASS_NOTIFICATION)\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "XTYP_EXECUTE (0x0050 | XCLASS_FLAGS)\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "XTYP_CONNECT (0x0060 | XCLASS_BOOL | XTYPF_NOBLOCK)\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "XTYP_CONNECT_CONFIRM (0x0070 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK)\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "XTYP_XACT_COMPLETE (0x0080 | XCLASS_NOTIFICATION)\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "XTYP_POKE (0x0090 | XCLASS_FLAGS)\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "XTYP_REGISTER (0x00A0 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK)\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "XTYP_REQUEST (0x00B0 | XCLASS_DATA)\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "XTYP_DISCONNECT (0x00C0 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK)\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "XTYP_UNREGISTER (0x00D0 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK)\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "XTYP_WILDCONNECT (0x00E0 | XCLASS_DATA | XTYPF_NOBLOCK)\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "XTYP_MASK 0x00F0\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "XTYP_SHIFT 4\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "TIMEOUT_ASYNC 0xFFFFFFFF\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "QID_SYNC 0xFFFFFFFF\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "CP_WINNEUTRAL CP_WINANSI\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "SZDDESYS_TOPIC __MINGW_STRING_AW(\"System\")\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "SZDDESYS_ITEM_TOPICS __MINGW_STRING_AW(\"Topics\")\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "SZDDESYS_ITEM_SYSITEMS __MINGW_STRING_AW(\"SysItems\")\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "SZDDESYS_ITEM_RTNMSG __MINGW_STRING_AW(\"ReturnMessage\")\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "SZDDESYS_ITEM_STATUS __MINGW_STRING_AW(\"Status\")\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "SZDDESYS_ITEM_FORMATS __MINGW_STRING_AW(\"Formats\")\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "SZDDESYS_ITEM_HELP __MINGW_STRING_AW(\"Help\")\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "SZDDE_ITEM_ITEMLIST __MINGW_STRING_AW(\"TopicItemList\")\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "DdeInitialize __MINGW_NAME_AW(DdeInitialize)\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "CBR_BLOCK ((HDDEDATA)-1)\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "CBF_FAIL_SELFCONNECTIONS 0x00001000\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "CBF_FAIL_CONNECTIONS 0x00002000\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "CBF_FAIL_ADVISES 0x00004000\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "CBF_FAIL_EXECUTES 0x00008000\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "CBF_FAIL_POKES 0x00010000\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "CBF_FAIL_REQUESTS 0x00020000\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "CBF_FAIL_ALLSVRXACTIONS 0x0003f000\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "CBF_SKIP_CONNECT_CONFIRMS 0x00040000\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "CBF_SKIP_REGISTRATIONS 0x00080000\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "CBF_SKIP_UNREGISTRATIONS 0x00100000\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "CBF_SKIP_DISCONNECTS 0x00200000\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "CBF_SKIP_ALLNOTIFICATIONS 0x003c0000\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "APPCMD_CLIENTONLY __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "APPCMD_FILTERINITS __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "APPCMD_MASK __MSABI_LONG(0x00000FF0)\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "APPCLASS_STANDARD __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "APPCLASS_MASK __MSABI_LONG(0x0000000F)\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "EC_ENABLEALL 0\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "EC_ENABLEONE ST_BLOCKNEXT\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "EC_DISABLE ST_BLOCKED\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "EC_QUERYWAITING 2\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "DNS_REGISTER 0x0001\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "DNS_UNREGISTER 0x0002\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "DNS_FILTERON 0x0004\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "DNS_FILTEROFF 0x0008\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "HDATA_APPOWNED 0x0001\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "DMLERR_NO_ERROR 0\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "DMLERR_FIRST 0x4000\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "DMLERR_ADVACKTIMEOUT 0x4000\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "DMLERR_BUSY 0x4001\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "DMLERR_DATAACKTIMEOUT 0x4002\0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "DMLERR_DLL_NOT_INITIALIZED 0x4003\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "DMLERR_DLL_USAGE 0x4004\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "DMLERR_EXECACKTIMEOUT 0x4005\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "DMLERR_INVALIDPARAMETER 0x4006\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "DMLERR_LOW_MEMORY 0x4007\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "DMLERR_MEMORY_ERROR 0x4008\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "DMLERR_NOTPROCESSED 0x4009\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "DMLERR_NO_CONV_ESTABLISHED 0x400a\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "DMLERR_POKEACKTIMEOUT 0x400b\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "DMLERR_POSTMSG_FAILED 0x400c\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "DMLERR_REENTRANCY 0x400d\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "DMLERR_SERVER_DIED 0x400e\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "DMLERR_SYS_ERROR 0x400f\0"
	.byte	0x1
	.uleb128 0xef
	.ascii "DMLERR_UNADVACKTIMEOUT 0x4010\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "DMLERR_UNFOUND_QUEUE_ID 0x4011\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "DMLERR_LAST 0x4011\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "DdeCreateStringHandle __MINGW_NAME_AW(DdeCreateStringHandle)\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "DdeQueryString __MINGW_NAME_AW(DdeQueryString)\0"
	.byte	0x1
	.uleb128 0x139
	.ascii "MH_CREATE 1\0"
	.byte	0x1
	.uleb128 0x13a
	.ascii "MH_KEEP 2\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "MH_DELETE 3\0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "MH_CLEANUP 4\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "MAX_MONITORS 4\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "APPCLASS_MONITOR __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "XTYP_MONITOR (0x00F0 | XCLASS_NOTIFICATION | XTYPF_NOBLOCK)\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "MF_HSZ_INFO 0x01000000\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "MF_SENDMSGS 0x02000000\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "MF_POSTMSGS 0x04000000\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "MF_CALLBACKS 0x08000000\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "MF_ERRORS 0x10000000\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "MF_LINKS 0x20000000\0"
	.byte	0x1
	.uleb128 0x169
	.ascii "MF_CONV 0x40000000\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "MF_MASK 0xFF000000\0"
	.byte	0x4
	.file 378 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/dlgs.h"
	.byte	0x3
	.uleb128 0x54
	.uleb128 0x17a
	.byte	0x1
	.uleb128 0x7
	.ascii "_DLGSH_INCLUDED_ \0"
	.byte	0x1
	.uleb128 0x9
	.ascii "ctlFirst 0x0400\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "ctlLast 0x04ff\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "psh1 0x0400\0"
	.byte	0x1
	.uleb128 0xd
	.ascii "psh2 0x0401\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "psh3 0x0402\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "psh4 0x0403\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "psh5 0x0404\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "psh6 0x0405\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "psh7 0x0406\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "psh8 0x0407\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "psh9 0x0408\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "psh10 0x0409\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "psh11 0x040a\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "psh12 0x040b\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "psh13 0x040c\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "psh14 0x040d\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "psh15 0x040e\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "pshHelp psh15\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "psh16 0x040f\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "chx1 0x0410\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "chx2 0x0411\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "chx3 0x0412\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "chx4 0x0413\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "chx5 0x0414\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "chx6 0x0415\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "chx7 0x0416\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "chx8 0x0417\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "chx9 0x0418\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "chx10 0x0419\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "chx11 0x041a\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "chx12 0x041b\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "chx13 0x041c\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "chx14 0x041d\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "chx15 0x041e\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "chx16 0x041f\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "rad1 0x0420\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "rad2 0x0421\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "rad3 0x0422\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "rad4 0x0423\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "rad5 0x0424\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "rad6 0x0425\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "rad7 0x0426\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "rad8 0x0427\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "rad9 0x0428\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "rad10 0x0429\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "rad11 0x042a\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "rad12 0x042b\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "rad13 0x042c\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "rad14 0x042d\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "rad15 0x042e\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "rad16 0x042f\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "grp1 0x0430\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "grp2 0x0431\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "grp3 0x0432\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "grp4 0x0433\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "frm1 0x0434\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "frm2 0x0435\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "frm3 0x0436\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "frm4 0x0437\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "rct1 0x0438\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "rct2 0x0439\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "rct3 0x043a\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "rct4 0x043b\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "ico1 0x043c\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "ico2 0x043d\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "ico3 0x043e\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "ico4 0x043f\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "stc1 0x0440\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "stc2 0x0441\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "stc3 0x0442\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "stc4 0x0443\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "stc5 0x0444\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "stc6 0x0445\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "stc7 0x0446\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "stc8 0x0447\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "stc9 0x0448\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "stc10 0x0449\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "stc11 0x044a\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "stc12 0x044b\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "stc13 0x044c\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "stc14 0x044d\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "stc15 0x044e\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "stc16 0x044f\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "stc17 0x0450\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "stc18 0x0451\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "stc19 0x0452\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "stc20 0x0453\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "stc21 0x0454\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "stc22 0x0455\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "stc23 0x0456\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "stc24 0x0457\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "stc25 0x0458\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "stc26 0x0459\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "stc27 0x045a\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "stc28 0x045b\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "stc29 0x045c\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "stc30 0x045d\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "stc31 0x045e\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "stc32 0x045f\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "lst1 0x0460\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "lst2 0x0461\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "lst3 0x0462\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "lst4 0x0463\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "lst5 0x0464\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "lst6 0x0465\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "lst7 0x0466\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "lst8 0x0467\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "lst9 0x0468\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "lst10 0x0469\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "lst11 0x046a\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "lst12 0x046b\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "lst13 0x046c\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "lst14 0x046d\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "lst15 0x046e\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "lst16 0x046f\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "cmb1 0x0470\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "cmb2 0x0471\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "cmb3 0x0472\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "cmb4 0x0473\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "cmb5 0x0474\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "cmb6 0x0475\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "cmb7 0x0476\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "cmb8 0x0477\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "cmb9 0x0478\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "cmb10 0x0479\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "cmb11 0x047a\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "cmb12 0x047b\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "cmb13 0x047c\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "cmb14 0x047d\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "cmb15 0x047e\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "cmb16 0x047f\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "edt1 0x0480\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "edt2 0x0481\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "edt3 0x0482\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "edt4 0x0483\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "edt5 0x0484\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "edt6 0x0485\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "edt7 0x0486\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "edt8 0x0487\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "edt9 0x0488\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "edt10 0x0489\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "edt11 0x048a\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "edt12 0x048b\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "edt13 0x048c\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "edt14 0x048d\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "edt15 0x048e\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "edt16 0x048f\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "scr1 0x0490\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "scr2 0x0491\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "scr3 0x0492\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "scr4 0x0493\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "scr5 0x0494\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "scr6 0x0495\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "scr7 0x0496\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "scr8 0x0497\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "ctl1 0x04A0\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "FILEOPENORD 1536\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "MULTIFILEOPENORD 1537\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "PRINTDLGORD 1538\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "PRNSETUPDLGORD 1539\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "FINDDLGORD 1540\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "REPLACEDLGORD 1541\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "FONTDLGORD 1542\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "FORMATDLGORD31 1543\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "FORMATDLGORD30 1544\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "RUNDLGORD 1545\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "PAGESETUPDLGORD 1546\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "NEWFILEOPENORD 1547\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "PRINTDLGEXORD 1549\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "PAGESETUPDLGORDMOTIF 1550\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "COLORMGMTDLGORD 1551\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "NEWFILEOPENV2ORD 1552\0"
	.byte	0x4
	.file 379 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/lzexpand.h"
	.byte	0x3
	.uleb128 0x55
	.uleb128 0x17b
	.byte	0x1
	.uleb128 0x7
	.ascii "_LZEXPAND_ \0"
	.byte	0x1
	.uleb128 0xf
	.ascii "LZERROR_BADINHANDLE (-1)\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "LZERROR_BADOUTHANDLE (-2)\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "LZERROR_READ (-3)\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "LZERROR_WRITE (-4)\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "LZERROR_GLOBALLOC (-5)\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "LZERROR_GLOBLOCK (-6)\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "LZERROR_BADVALUE (-7)\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "LZERROR_UNKNOWNALG (-8)\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "GetExpandedName __MINGW_NAME_AW(GetExpandedName)\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "LZOpenFile __MINGW_NAME_AW(LZOpenFile)\0"
	.byte	0x4
	.file 380 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/mmsystem.h"
	.byte	0x3
	.uleb128 0x56
	.uleb128 0x17c
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_MMSYSTEM \0"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x16a
	.byte	0x4
	.byte	0x1
	.uleb128 0x11
	.ascii "WINMMAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "_loadds \0"
	.byte	0x1
	.uleb128 0x16
	.ascii "_huge \0"
	.byte	0x1
	.uleb128 0x18
	.ascii "MAXPNAMELEN 32\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "MAXERRORLENGTH 256\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "MAX_JOYSTICKOEMVXDNAME 260\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "_MMRESULT_ \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "DEFINED_LPUINT \0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "TIME_MS 0x0001\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "TIME_SAMPLES 0x0002\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "TIME_BYTES 0x0004\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "TIME_SMPTE 0x0008\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "TIME_MIDI 0x0010\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "TIME_TICKS 0x0020\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "MAKEFOURCC(ch0,ch1,ch2,ch3) ((DWORD)(BYTE)(ch0) | ((DWORD)(BYTE)(ch1) << 8) | ((DWORD)(BYTE)(ch2) << 16) | ((DWORD)(BYTE)(ch3) << 24))\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "MM_JOY1MOVE 0x3A0\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "MM_JOY2MOVE 0x3A1\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "MM_JOY1ZMOVE 0x3A2\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "MM_JOY2ZMOVE 0x3A3\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "MM_JOY1BUTTONDOWN 0x3B5\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "MM_JOY2BUTTONDOWN 0x3B6\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "MM_JOY1BUTTONUP 0x3B7\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "MM_JOY2BUTTONUP 0x3B8\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "MM_MCINOTIFY 0x3B9\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "MM_WOM_OPEN 0x3BB\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "MM_WOM_CLOSE 0x3BC\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "MM_WOM_DONE 0x3BD\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "MM_WIM_OPEN 0x3BE\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "MM_WIM_CLOSE 0x3BF\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "MM_WIM_DATA 0x3C0\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "MM_MIM_OPEN 0x3C1\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "MM_MIM_CLOSE 0x3C2\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "MM_MIM_DATA 0x3C3\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "MM_MIM_LONGDATA 0x3C4\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "MM_MIM_ERROR 0x3C5\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "MM_MIM_LONGERROR 0x3C6\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "MM_MOM_OPEN 0x3C7\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "MM_MOM_CLOSE 0x3C8\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "MM_MOM_DONE 0x3C9\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "MM_DRVM_OPEN 0x3D0\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "MM_DRVM_CLOSE 0x3D1\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "MM_DRVM_DATA 0x3D2\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "MM_DRVM_ERROR 0x3D3\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "MM_STREAM_OPEN 0x3D4\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "MM_STREAM_CLOSE 0x3D5\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "MM_STREAM_DONE 0x3D6\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "MM_STREAM_ERROR 0x3D7\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "MM_MOM_POSITIONCB 0x3CA\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "MM_MCISIGNAL 0x3CB\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "MM_MIM_MOREDATA 0x3CC\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "MM_MIXM_LINE_CHANGE 0x3D0\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "MM_MIXM_CONTROL_CHANGE 0x3D1\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "MMSYSERR_BASE 0\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "WAVERR_BASE 32\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "MIDIERR_BASE 64\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "TIMERR_BASE 96\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "JOYERR_BASE 160\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "MCIERR_BASE 256\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "MIXERR_BASE 1024\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "MCI_STRING_OFFSET 512\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "MCI_VD_OFFSET 1024\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "MCI_CD_OFFSET 1088\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "MCI_WAVE_OFFSET 1152\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "MCI_SEQ_OFFSET 1216\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "MMSYSERR_NOERROR 0\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "MMSYSERR_ERROR (MMSYSERR_BASE + 1)\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "MMSYSERR_BADDEVICEID (MMSYSERR_BASE + 2)\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "MMSYSERR_NOTENABLED (MMSYSERR_BASE + 3)\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "MMSYSERR_ALLOCATED (MMSYSERR_BASE + 4)\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "MMSYSERR_INVALHANDLE (MMSYSERR_BASE + 5)\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "MMSYSERR_NODRIVER (MMSYSERR_BASE + 6)\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "MMSYSERR_NOMEM (MMSYSERR_BASE + 7)\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "MMSYSERR_NOTSUPPORTED (MMSYSERR_BASE + 8)\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "MMSYSERR_BADERRNUM (MMSYSERR_BASE + 9)\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "MMSYSERR_INVALFLAG (MMSYSERR_BASE + 10)\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "MMSYSERR_INVALPARAM (MMSYSERR_BASE + 11)\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "MMSYSERR_HANDLEBUSY (MMSYSERR_BASE + 12)\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "MMSYSERR_INVALIDALIAS (MMSYSERR_BASE + 13)\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "MMSYSERR_BADDB (MMSYSERR_BASE + 14)\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "MMSYSERR_KEYNOTFOUND (MMSYSERR_BASE + 15)\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "MMSYSERR_READERROR (MMSYSERR_BASE + 16)\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "MMSYSERR_WRITEERROR (MMSYSERR_BASE + 17)\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "MMSYSERR_DELETEERROR (MMSYSERR_BASE + 18)\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "MMSYSERR_VALNOTFOUND (MMSYSERR_BASE + 19)\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "MMSYSERR_NODRIVERCB (MMSYSERR_BASE + 20)\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "MMSYSERR_MOREDATA (MMSYSERR_BASE + 21)\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "MMSYSERR_LASTERROR (MMSYSERR_BASE + 21)\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "DRV_LOAD 0x0001\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "DRV_ENABLE 0x0002\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "DRV_OPEN 0x0003\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "DRV_CLOSE 0x0004\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "DRV_DISABLE 0x0005\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "DRV_FREE 0x0006\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "DRV_CONFIGURE 0x0007\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "DRV_QUERYCONFIGURE 0x0008\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "DRV_INSTALL 0x0009\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "DRV_REMOVE 0x000A\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "DRV_EXITSESSION 0x000B\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "DRV_POWER 0x000F\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "DRV_RESERVED 0x0800\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "DRV_USER 0x4000\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "DRVCNF_CANCEL 0x0000\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "DRVCNF_OK 0x0001\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "DRVCNF_RESTART 0x0002\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "DRV_CANCEL DRVCNF_CANCEL\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "DRV_OK DRVCNF_OK\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "DRV_RESTART DRVCNF_RESTART\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "DRV_MCI_FIRST DRV_RESERVED\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "DRV_MCI_LAST (DRV_RESERVED + 0xFFF)\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "CALLBACK_TYPEMASK __MSABI_LONG(0x00070000)\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "CALLBACK_NULL __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "CALLBACK_WINDOW __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0xde
	.ascii "CALLBACK_TASK __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "CALLBACK_FUNCTION __MSABI_LONG(0x00030000)\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "CALLBACK_THREAD (CALLBACK_TASK)\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "CALLBACK_EVENT __MSABI_LONG(0x00050000)\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "OutputDebugStr OutputDebugString\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "sndPlaySound __MINGW_NAME_AW(sndPlaySound)\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "SND_SYNC 0x0000\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "SND_ASYNC 0x0001\0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "SND_NODEFAULT 0x0002\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "SND_MEMORY 0x0004\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "SND_LOOP 0x0008\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "SND_NOSTOP 0x0010\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "SND_NOWAIT __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "SND_ALIAS __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "SND_ALIAS_ID __MSABI_LONG(0x00110000)\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "SND_FILENAME __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "SND_RESOURCE __MSABI_LONG(0x00040004)\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "SND_PURGE 0x0040\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "SND_APPLICATION 0x0080\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "SND_ALIAS_START 0\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "sndAlias(c0,c1) (SND_ALIAS_START+((DWORD)(BYTE)(c0)|((DWORD)(BYTE)(c1)<<8)))\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "SND_ALIAS_SYSTEMASTERISK sndAlias('S','*')\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "SND_ALIAS_SYSTEMQUESTION sndAlias('S','?')\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "SND_ALIAS_SYSTEMHAND sndAlias('S','H')\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "SND_ALIAS_SYSTEMEXIT sndAlias('S','E')\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "SND_ALIAS_SYSTEMSTART sndAlias('S','S')\0"
	.byte	0x1
	.uleb128 0x109
	.ascii "SND_ALIAS_SYSTEMWELCOME sndAlias('S','W')\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "SND_ALIAS_SYSTEMEXCLAMATION sndAlias('S','!')\0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "SND_ALIAS_SYSTEMDEFAULT sndAlias('S','D')\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "PlaySound __MINGW_NAME_AW(PlaySound)\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "WAVERR_BADFORMAT (WAVERR_BASE + 0)\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "WAVERR_STILLPLAYING (WAVERR_BASE + 1)\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "WAVERR_UNPREPARED (WAVERR_BASE + 2)\0"
	.byte	0x1
	.uleb128 0x118
	.ascii "WAVERR_SYNC (WAVERR_BASE + 3)\0"
	.byte	0x1
	.uleb128 0x119
	.ascii "WAVERR_LASTERROR (WAVERR_BASE + 3)\0"
	.byte	0x1
	.uleb128 0x123
	.ascii "WOM_OPEN MM_WOM_OPEN\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "WOM_CLOSE MM_WOM_CLOSE\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "WOM_DONE MM_WOM_DONE\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "WIM_OPEN MM_WIM_OPEN\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "WIM_CLOSE MM_WIM_CLOSE\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "WIM_DATA MM_WIM_DATA\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "WAVE_MAPPER ((UINT)-1)\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "WAVE_FORMAT_QUERY 0x0001\0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "WAVE_ALLOWSYNC 0x0002\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "WAVE_MAPPED 0x0004\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "WAVE_FORMAT_DIRECT 0x0008\0"
	.byte	0x1
	.uleb128 0x130
	.ascii "WAVE_FORMAT_DIRECT_QUERY (WAVE_FORMAT_QUERY | WAVE_FORMAT_DIRECT)\0"
	.byte	0x1
	.uleb128 0x13d
	.ascii "WHDR_DONE 0x00000001\0"
	.byte	0x1
	.uleb128 0x13e
	.ascii "WHDR_PREPARED 0x00000002\0"
	.byte	0x1
	.uleb128 0x13f
	.ascii "WHDR_BEGINLOOP 0x00000004\0"
	.byte	0x1
	.uleb128 0x140
	.ascii "WHDR_ENDLOOP 0x00000008\0"
	.byte	0x1
	.uleb128 0x141
	.ascii "WHDR_INQUEUE 0x00000010\0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "WAVECAPS_PITCH 0x0001\0"
	.byte	0x1
	.uleb128 0x180
	.ascii "WAVECAPS_PLAYBACKRATE 0x0002\0"
	.byte	0x1
	.uleb128 0x181
	.ascii "WAVECAPS_VOLUME 0x0004\0"
	.byte	0x1
	.uleb128 0x182
	.ascii "WAVECAPS_LRVOLUME 0x0008\0"
	.byte	0x1
	.uleb128 0x183
	.ascii "WAVECAPS_SYNC 0x0010\0"
	.byte	0x1
	.uleb128 0x184
	.ascii "WAVECAPS_SAMPLEACCURATE 0x0020\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "WAVE_INVALIDFORMAT 0x00000000\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "WAVE_FORMAT_1M08 0x00000001\0"
	.byte	0x1
	.uleb128 0x1c0
	.ascii "WAVE_FORMAT_1S08 0x00000002\0"
	.byte	0x1
	.uleb128 0x1c1
	.ascii "WAVE_FORMAT_1M16 0x00000004\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "WAVE_FORMAT_1S16 0x00000008\0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "WAVE_FORMAT_2M08 0x00000010\0"
	.byte	0x1
	.uleb128 0x1c4
	.ascii "WAVE_FORMAT_2S08 0x00000020\0"
	.byte	0x1
	.uleb128 0x1c5
	.ascii "WAVE_FORMAT_2M16 0x00000040\0"
	.byte	0x1
	.uleb128 0x1c6
	.ascii "WAVE_FORMAT_2S16 0x00000080\0"
	.byte	0x1
	.uleb128 0x1c7
	.ascii "WAVE_FORMAT_4M08 0x00000100\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "WAVE_FORMAT_4S08 0x00000200\0"
	.byte	0x1
	.uleb128 0x1c9
	.ascii "WAVE_FORMAT_4M16 0x00000400\0"
	.byte	0x1
	.uleb128 0x1ca
	.ascii "WAVE_FORMAT_4S16 0x00000800\0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "WAVE_FORMAT_44M08 0x00000100\0"
	.byte	0x1
	.uleb128 0x1cd
	.ascii "WAVE_FORMAT_44S08 0x00000200\0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "WAVE_FORMAT_44M16 0x00000400\0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "WAVE_FORMAT_44S16 0x00000800\0"
	.byte	0x1
	.uleb128 0x1d0
	.ascii "WAVE_FORMAT_48M08 0x00001000\0"
	.byte	0x1
	.uleb128 0x1d1
	.ascii "WAVE_FORMAT_48S08 0x00002000\0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "WAVE_FORMAT_48M16 0x00004000\0"
	.byte	0x1
	.uleb128 0x1d3
	.ascii "WAVE_FORMAT_48S16 0x00008000\0"
	.byte	0x1
	.uleb128 0x1d4
	.ascii "WAVE_FORMAT_96M08 0x00010000\0"
	.byte	0x1
	.uleb128 0x1d5
	.ascii "WAVE_FORMAT_96S08 0x00020000\0"
	.byte	0x1
	.uleb128 0x1d6
	.ascii "WAVE_FORMAT_96M16 0x00040000\0"
	.byte	0x1
	.uleb128 0x1d7
	.ascii "WAVE_FORMAT_96S16 0x00080000\0"
	.byte	0x1
	.uleb128 0x1e2
	.ascii "WAVE_FORMAT_PCM 1\0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "_WAVEFORMATEX_ \0"
	.byte	0x1
	.uleb128 0x1fd
	.ascii "waveOutGetDevCaps __MINGW_NAME_AW(waveOutGetDevCaps)\0"
	.byte	0x1
	.uleb128 0x204
	.ascii "waveOutGetErrorText __MINGW_NAME_AW(waveOutGetErrorText)\0"
	.byte	0x1
	.uleb128 0x21a
	.ascii "waveInGetDevCaps __MINGW_NAME_AW(waveInGetDevCaps)\0"
	.byte	0x1
	.uleb128 0x21f
	.ascii "waveInGetErrorText __MINGW_NAME_AW(waveInGetErrorText)\0"
	.byte	0x1
	.uleb128 0x230
	.ascii "MIDIERR_UNPREPARED (MIDIERR_BASE + 0)\0"
	.byte	0x1
	.uleb128 0x231
	.ascii "MIDIERR_STILLPLAYING (MIDIERR_BASE + 1)\0"
	.byte	0x1
	.uleb128 0x232
	.ascii "MIDIERR_NOMAP (MIDIERR_BASE + 2)\0"
	.byte	0x1
	.uleb128 0x233
	.ascii "MIDIERR_NOTREADY (MIDIERR_BASE + 3)\0"
	.byte	0x1
	.uleb128 0x234
	.ascii "MIDIERR_NODEVICE (MIDIERR_BASE + 4)\0"
	.byte	0x1
	.uleb128 0x235
	.ascii "MIDIERR_INVALIDSETUP (MIDIERR_BASE + 5)\0"
	.byte	0x1
	.uleb128 0x236
	.ascii "MIDIERR_BADOPENMODE (MIDIERR_BASE + 6)\0"
	.byte	0x1
	.uleb128 0x237
	.ascii "MIDIERR_DONT_CONTINUE (MIDIERR_BASE + 7)\0"
	.byte	0x1
	.uleb128 0x238
	.ascii "MIDIERR_LASTERROR (MIDIERR_BASE + 7)\0"
	.byte	0x1
	.uleb128 0x244
	.ascii "MIDIPATCHSIZE 128\0"
	.byte	0x1
	.uleb128 0x24a
	.ascii "MIM_OPEN MM_MIM_OPEN\0"
	.byte	0x1
	.uleb128 0x24b
	.ascii "MIM_CLOSE MM_MIM_CLOSE\0"
	.byte	0x1
	.uleb128 0x24c
	.ascii "MIM_DATA MM_MIM_DATA\0"
	.byte	0x1
	.uleb128 0x24d
	.ascii "MIM_LONGDATA MM_MIM_LONGDATA\0"
	.byte	0x1
	.uleb128 0x24e
	.ascii "MIM_ERROR MM_MIM_ERROR\0"
	.byte	0x1
	.uleb128 0x24f
	.ascii "MIM_LONGERROR MM_MIM_LONGERROR\0"
	.byte	0x1
	.uleb128 0x250
	.ascii "MOM_OPEN MM_MOM_OPEN\0"
	.byte	0x1
	.uleb128 0x251
	.ascii "MOM_CLOSE MM_MOM_CLOSE\0"
	.byte	0x1
	.uleb128 0x252
	.ascii "MOM_DONE MM_MOM_DONE\0"
	.byte	0x1
	.uleb128 0x254
	.ascii "MIM_MOREDATA MM_MIM_MOREDATA\0"
	.byte	0x1
	.uleb128 0x255
	.ascii "MOM_POSITIONCB MM_MOM_POSITIONCB\0"
	.byte	0x1
	.uleb128 0x257
	.ascii "MIDIMAPPER ((UINT)-1)\0"
	.byte	0x1
	.uleb128 0x258
	.ascii "MIDI_MAPPER ((UINT)-1)\0"
	.byte	0x1
	.uleb128 0x25a
	.ascii "MIDI_IO_STATUS __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0x25c
	.ascii "MIDI_CACHE_ALL 1\0"
	.byte	0x1
	.uleb128 0x25d
	.ascii "MIDI_CACHE_BESTFIT 2\0"
	.byte	0x1
	.uleb128 0x25e
	.ascii "MIDI_CACHE_QUERY 3\0"
	.byte	0x1
	.uleb128 0x25f
	.ascii "MIDI_UNCACHE 4\0"
	.byte	0x1
	.uleb128 0x2a1
	.ascii "MOD_MIDIPORT 1\0"
	.byte	0x1
	.uleb128 0x2a2
	.ascii "MOD_SYNTH 2\0"
	.byte	0x1
	.uleb128 0x2a3
	.ascii "MOD_SQSYNTH 3\0"
	.byte	0x1
	.uleb128 0x2a4
	.ascii "MOD_FMSYNTH 4\0"
	.byte	0x1
	.uleb128 0x2a5
	.ascii "MOD_MAPPER 5\0"
	.byte	0x1
	.uleb128 0x2a6
	.ascii "MOD_WAVETABLE 6\0"
	.byte	0x1
	.uleb128 0x2a7
	.ascii "MOD_SWSYNTH 7\0"
	.byte	0x1
	.uleb128 0x2a9
	.ascii "MIDICAPS_VOLUME 0x0001\0"
	.byte	0x1
	.uleb128 0x2aa
	.ascii "MIDICAPS_LRVOLUME 0x0002\0"
	.byte	0x1
	.uleb128 0x2ab
	.ascii "MIDICAPS_CACHE 0x0004\0"
	.byte	0x1
	.uleb128 0x2ac
	.ascii "MIDICAPS_STREAM 0x0008\0"
	.byte	0x1
	.uleb128 0x2f7
	.ascii "MHDR_DONE 0x00000001\0"
	.byte	0x1
	.uleb128 0x2f8
	.ascii "MHDR_PREPARED 0x00000002\0"
	.byte	0x1
	.uleb128 0x2f9
	.ascii "MHDR_INQUEUE 0x00000004\0"
	.byte	0x1
	.uleb128 0x2fa
	.ascii "MHDR_ISSTRM 0x00000008\0"
	.byte	0x1
	.uleb128 0x2fc
	.ascii "MEVT_F_SHORT __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x2fd
	.ascii "MEVT_F_LONG __MSABI_LONG(0x80000000)\0"
	.byte	0x1
	.uleb128 0x2fe
	.ascii "MEVT_F_CALLBACK __MSABI_LONG(0x40000000)\0"
	.byte	0x1
	.uleb128 0x300
	.ascii "MEVT_EVENTTYPE(x) ((BYTE)(((x)>>24)&0xFF))\0"
	.byte	0x1
	.uleb128 0x301
	.ascii "MEVT_EVENTPARM(x) ((DWORD)((x)&0x00FFFFFF))\0"
	.byte	0x1
	.uleb128 0x303
	.ascii "MEVT_SHORTMSG ((BYTE)0x00)\0"
	.byte	0x1
	.uleb128 0x304
	.ascii "MEVT_TEMPO ((BYTE)0x01)\0"
	.byte	0x1
	.uleb128 0x305
	.ascii "MEVT_NOP ((BYTE)0x02)\0"
	.byte	0x1
	.uleb128 0x307
	.ascii "MEVT_LONGMSG ((BYTE)0x80)\0"
	.byte	0x1
	.uleb128 0x308
	.ascii "MEVT_COMMENT ((BYTE)0x82)\0"
	.byte	0x1
	.uleb128 0x309
	.ascii "MEVT_VERSION ((BYTE)0x84)\0"
	.byte	0x1
	.uleb128 0x30b
	.ascii "MIDISTRM_ERROR (-2)\0"
	.byte	0x1
	.uleb128 0x30d
	.ascii "MIDIPROP_SET __MSABI_LONG(0x80000000)\0"
	.byte	0x1
	.uleb128 0x30e
	.ascii "MIDIPROP_GET __MSABI_LONG(0x40000000)\0"
	.byte	0x1
	.uleb128 0x310
	.ascii "MIDIPROP_TIMEDIV __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x311
	.ascii "MIDIPROP_TEMPO __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x32b
	.ascii "midiOutGetDevCaps __MINGW_NAME_AW(midiOutGetDevCaps)\0"
	.byte	0x1
	.uleb128 0x332
	.ascii "midiOutGetErrorText __MINGW_NAME_AW(midiOutGetErrorText)\0"
	.byte	0x1
	.uleb128 0x343
	.ascii "midiInGetDevCaps __MINGW_NAME_AW(midiInGetDevCaps)\0"
	.byte	0x1
	.uleb128 0x348
	.ascii "midiInGetErrorText __MINGW_NAME_AW(midiInGetErrorText)\0"
	.byte	0x1
	.uleb128 0x358
	.ascii "AUX_MAPPER ((UINT)-1)\0"
	.byte	0x1
	.uleb128 0x392
	.ascii "AUXCAPS_CDAUDIO 1\0"
	.byte	0x1
	.uleb128 0x393
	.ascii "AUXCAPS_AUXIN 2\0"
	.byte	0x1
	.uleb128 0x395
	.ascii "AUXCAPS_VOLUME 0x0001\0"
	.byte	0x1
	.uleb128 0x396
	.ascii "AUXCAPS_LRVOLUME 0x0002\0"
	.byte	0x1
	.uleb128 0x39c
	.ascii "auxGetDevCaps __MINGW_NAME_AW(auxGetDevCaps)\0"
	.byte	0x1
	.uleb128 0x3ab
	.ascii "MIXER_SHORT_NAME_CHARS 16\0"
	.byte	0x1
	.uleb128 0x3ac
	.ascii "MIXER_LONG_NAME_CHARS 64\0"
	.byte	0x1
	.uleb128 0x3ae
	.ascii "MIXERR_INVALLINE (MIXERR_BASE + 0)\0"
	.byte	0x1
	.uleb128 0x3af
	.ascii "MIXERR_INVALCONTROL (MIXERR_BASE + 1)\0"
	.byte	0x1
	.uleb128 0x3b0
	.ascii "MIXERR_INVALVALUE (MIXERR_BASE + 2)\0"
	.byte	0x1
	.uleb128 0x3b1
	.ascii "MIXERR_LASTERROR (MIXERR_BASE + 2)\0"
	.byte	0x1
	.uleb128 0x3b3
	.ascii "MIXER_OBJECTF_HANDLE __MSABI_LONG(0x80000000)\0"
	.byte	0x1
	.uleb128 0x3b4
	.ascii "MIXER_OBJECTF_MIXER __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x3b5
	.ascii "MIXER_OBJECTF_HMIXER (MIXER_OBJECTF_HANDLE|MIXER_OBJECTF_MIXER)\0"
	.byte	0x1
	.uleb128 0x3b6
	.ascii "MIXER_OBJECTF_WAVEOUT __MSABI_LONG(0x10000000)\0"
	.byte	0x1
	.uleb128 0x3b7
	.ascii "MIXER_OBJECTF_HWAVEOUT (MIXER_OBJECTF_HANDLE|MIXER_OBJECTF_WAVEOUT)\0"
	.byte	0x1
	.uleb128 0x3b8
	.ascii "MIXER_OBJECTF_WAVEIN __MSABI_LONG(0x20000000)\0"
	.byte	0x1
	.uleb128 0x3b9
	.ascii "MIXER_OBJECTF_HWAVEIN (MIXER_OBJECTF_HANDLE|MIXER_OBJECTF_WAVEIN)\0"
	.byte	0x1
	.uleb128 0x3ba
	.ascii "MIXER_OBJECTF_MIDIOUT __MSABI_LONG(0x30000000)\0"
	.byte	0x1
	.uleb128 0x3bb
	.ascii "MIXER_OBJECTF_HMIDIOUT (MIXER_OBJECTF_HANDLE|MIXER_OBJECTF_MIDIOUT)\0"
	.byte	0x1
	.uleb128 0x3bc
	.ascii "MIXER_OBJECTF_MIDIIN __MSABI_LONG(0x40000000)\0"
	.byte	0x1
	.uleb128 0x3bd
	.ascii "MIXER_OBJECTF_HMIDIIN (MIXER_OBJECTF_HANDLE|MIXER_OBJECTF_MIDIIN)\0"
	.byte	0x1
	.uleb128 0x3be
	.ascii "MIXER_OBJECTF_AUX __MSABI_LONG(0x50000000)\0"
	.byte	0x1
	.uleb128 0x3f7
	.ascii "mixerGetDevCaps __MINGW_NAME_AW(mixerGetDevCaps)\0"
	.byte	0x1
	.uleb128 0x42f
	.ascii "MIXERLINE_LINEF_ACTIVE __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x430
	.ascii "MIXERLINE_LINEF_DISCONNECTED __MSABI_LONG(0x00008000)\0"
	.byte	0x1
	.uleb128 0x431
	.ascii "MIXERLINE_LINEF_SOURCE __MSABI_LONG(0x80000000)\0"
	.byte	0x1
	.uleb128 0x433
	.ascii "MIXERLINE_COMPONENTTYPE_DST_FIRST __MSABI_LONG(0x0)\0"
	.byte	0x1
	.uleb128 0x434
	.ascii "MIXERLINE_COMPONENTTYPE_DST_UNDEFINED (MIXERLINE_COMPONENTTYPE_DST_FIRST + 0)\0"
	.byte	0x1
	.uleb128 0x435
	.ascii "MIXERLINE_COMPONENTTYPE_DST_DIGITAL (MIXERLINE_COMPONENTTYPE_DST_FIRST + 1)\0"
	.byte	0x1
	.uleb128 0x436
	.ascii "MIXERLINE_COMPONENTTYPE_DST_LINE (MIXERLINE_COMPONENTTYPE_DST_FIRST + 2)\0"
	.byte	0x1
	.uleb128 0x437
	.ascii "MIXERLINE_COMPONENTTYPE_DST_MONITOR (MIXERLINE_COMPONENTTYPE_DST_FIRST + 3)\0"
	.byte	0x1
	.uleb128 0x438
	.ascii "MIXERLINE_COMPONENTTYPE_DST_SPEAKERS (MIXERLINE_COMPONENTTYPE_DST_FIRST + 4)\0"
	.byte	0x1
	.uleb128 0x439
	.ascii "MIXERLINE_COMPONENTTYPE_DST_HEADPHONES (MIXERLINE_COMPONENTTYPE_DST_FIRST + 5)\0"
	.byte	0x1
	.uleb128 0x43a
	.ascii "MIXERLINE_COMPONENTTYPE_DST_TELEPHONE (MIXERLINE_COMPONENTTYPE_DST_FIRST + 6)\0"
	.byte	0x1
	.uleb128 0x43b
	.ascii "MIXERLINE_COMPONENTTYPE_DST_WAVEIN (MIXERLINE_COMPONENTTYPE_DST_FIRST + 7)\0"
	.byte	0x1
	.uleb128 0x43c
	.ascii "MIXERLINE_COMPONENTTYPE_DST_VOICEIN (MIXERLINE_COMPONENTTYPE_DST_FIRST + 8)\0"
	.byte	0x1
	.uleb128 0x43d
	.ascii "MIXERLINE_COMPONENTTYPE_DST_LAST (MIXERLINE_COMPONENTTYPE_DST_FIRST + 8)\0"
	.byte	0x1
	.uleb128 0x43e
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_FIRST __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0x43f
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 0)\0"
	.byte	0x1
	.uleb128 0x440
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_DIGITAL (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 1)\0"
	.byte	0x1
	.uleb128 0x441
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_LINE (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 2)\0"
	.byte	0x1
	.uleb128 0x442
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 3)\0"
	.byte	0x1
	.uleb128 0x443
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 4)\0"
	.byte	0x1
	.uleb128 0x444
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 5)\0"
	.byte	0x1
	.uleb128 0x445
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 6)\0"
	.byte	0x1
	.uleb128 0x446
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 7)\0"
	.byte	0x1
	.uleb128 0x447
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 8)\0"
	.byte	0x1
	.uleb128 0x448
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 9)\0"
	.byte	0x1
	.uleb128 0x449
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_ANALOG (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 10)\0"
	.byte	0x1
	.uleb128 0x44a
	.ascii "MIXERLINE_COMPONENTTYPE_SRC_LAST (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 10)\0"
	.byte	0x1
	.uleb128 0x44c
	.ascii "MIXERLINE_TARGETTYPE_UNDEFINED 0\0"
	.byte	0x1
	.uleb128 0x44d
	.ascii "MIXERLINE_TARGETTYPE_WAVEOUT 1\0"
	.byte	0x1
	.uleb128 0x44e
	.ascii "MIXERLINE_TARGETTYPE_WAVEIN 2\0"
	.byte	0x1
	.uleb128 0x44f
	.ascii "MIXERLINE_TARGETTYPE_MIDIOUT 3\0"
	.byte	0x1
	.uleb128 0x450
	.ascii "MIXERLINE_TARGETTYPE_MIDIIN 4\0"
	.byte	0x1
	.uleb128 0x451
	.ascii "MIXERLINE_TARGETTYPE_AUX 5\0"
	.byte	0x1
	.uleb128 0x456
	.ascii "mixerGetLineInfo __MINGW_NAME_AW(mixerGetLineInfo)\0"
	.byte	0x1
	.uleb128 0x458
	.ascii "MIXER_GETLINEINFOF_DESTINATION __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x459
	.ascii "MIXER_GETLINEINFOF_SOURCE __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x45a
	.ascii "MIXER_GETLINEINFOF_LINEID __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x45b
	.ascii "MIXER_GETLINEINFOF_COMPONENTTYPE __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0x45c
	.ascii "MIXER_GETLINEINFOF_TARGETTYPE __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x45e
	.ascii "MIXER_GETLINEINFOF_QUERYMASK __MSABI_LONG(0x0000000F)\0"
	.byte	0x1
	.uleb128 0x49a
	.ascii "MIXERCONTROL_CONTROLF_UNIFORM __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x49b
	.ascii "MIXERCONTROL_CONTROLF_MULTIPLE __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x49c
	.ascii "MIXERCONTROL_CONTROLF_DISABLED __MSABI_LONG(0x80000000)\0"
	.byte	0x1
	.uleb128 0x49e
	.ascii "MIXERCONTROL_CT_CLASS_MASK __MSABI_LONG(0xF0000000)\0"
	.byte	0x1
	.uleb128 0x49f
	.ascii "MIXERCONTROL_CT_CLASS_CUSTOM __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x4a0
	.ascii "MIXERCONTROL_CT_CLASS_METER __MSABI_LONG(0x10000000)\0"
	.byte	0x1
	.uleb128 0x4a1
	.ascii "MIXERCONTROL_CT_CLASS_SWITCH __MSABI_LONG(0x20000000)\0"
	.byte	0x1
	.uleb128 0x4a2
	.ascii "MIXERCONTROL_CT_CLASS_NUMBER __MSABI_LONG(0x30000000)\0"
	.byte	0x1
	.uleb128 0x4a3
	.ascii "MIXERCONTROL_CT_CLASS_SLIDER __MSABI_LONG(0x40000000)\0"
	.byte	0x1
	.uleb128 0x4a4
	.ascii "MIXERCONTROL_CT_CLASS_FADER __MSABI_LONG(0x50000000)\0"
	.byte	0x1
	.uleb128 0x4a5
	.ascii "MIXERCONTROL_CT_CLASS_TIME __MSABI_LONG(0x60000000)\0"
	.byte	0x1
	.uleb128 0x4a6
	.ascii "MIXERCONTROL_CT_CLASS_LIST __MSABI_LONG(0x70000000)\0"
	.byte	0x1
	.uleb128 0x4a8
	.ascii "MIXERCONTROL_CT_SUBCLASS_MASK __MSABI_LONG(0x0F000000)\0"
	.byte	0x1
	.uleb128 0x4aa
	.ascii "MIXERCONTROL_CT_SC_SWITCH_BOOLEAN __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x4ab
	.ascii "MIXERCONTROL_CT_SC_SWITCH_BUTTON __MSABI_LONG(0x01000000)\0"
	.byte	0x1
	.uleb128 0x4ad
	.ascii "MIXERCONTROL_CT_SC_METER_POLLED __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x4af
	.ascii "MIXERCONTROL_CT_SC_TIME_MICROSECS __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x4b0
	.ascii "MIXERCONTROL_CT_SC_TIME_MILLISECS __MSABI_LONG(0x01000000)\0"
	.byte	0x1
	.uleb128 0x4b2
	.ascii "MIXERCONTROL_CT_SC_LIST_SINGLE __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x4b3
	.ascii "MIXERCONTROL_CT_SC_LIST_MULTIPLE __MSABI_LONG(0x01000000)\0"
	.byte	0x1
	.uleb128 0x4b5
	.ascii "MIXERCONTROL_CT_UNITS_MASK __MSABI_LONG(0x00FF0000)\0"
	.byte	0x1
	.uleb128 0x4b6
	.ascii "MIXERCONTROL_CT_UNITS_CUSTOM __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x4b7
	.ascii "MIXERCONTROL_CT_UNITS_BOOLEAN __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x4b8
	.ascii "MIXERCONTROL_CT_UNITS_SIGNED __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x4b9
	.ascii "MIXERCONTROL_CT_UNITS_UNSIGNED __MSABI_LONG(0x00030000)\0"
	.byte	0x1
	.uleb128 0x4ba
	.ascii "MIXERCONTROL_CT_UNITS_DECIBELS __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x4bb
	.ascii "MIXERCONTROL_CT_UNITS_PERCENT __MSABI_LONG(0x00050000)\0"
	.byte	0x1
	.uleb128 0x4bd
	.ascii "MIXERCONTROL_CONTROLTYPE_CUSTOM (MIXERCONTROL_CT_CLASS_CUSTOM | MIXERCONTROL_CT_UNITS_CUSTOM)\0"
	.byte	0x1
	.uleb128 0x4be
	.ascii "MIXERCONTROL_CONTROLTYPE_BOOLEANMETER (MIXERCONTROL_CT_CLASS_METER | MIXERCONTROL_CT_SC_METER_POLLED | MIXERCONTROL_CT_UNITS_BOOLEAN)\0"
	.byte	0x1
	.uleb128 0x4bf
	.ascii "MIXERCONTROL_CONTROLTYPE_SIGNEDMETER (MIXERCONTROL_CT_CLASS_METER | MIXERCONTROL_CT_SC_METER_POLLED | MIXERCONTROL_CT_UNITS_SIGNED)\0"
	.byte	0x1
	.uleb128 0x4c0
	.ascii "MIXERCONTROL_CONTROLTYPE_PEAKMETER (MIXERCONTROL_CONTROLTYPE_SIGNEDMETER + 1)\0"
	.byte	0x1
	.uleb128 0x4c1
	.ascii "MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER (MIXERCONTROL_CT_CLASS_METER | MIXERCONTROL_CT_SC_METER_POLLED | MIXERCONTROL_CT_UNITS_UNSIGNED)\0"
	.byte	0x1
	.uleb128 0x4c2
	.ascii "MIXERCONTROL_CONTROLTYPE_BOOLEAN (MIXERCONTROL_CT_CLASS_SWITCH | MIXERCONTROL_CT_SC_SWITCH_BOOLEAN | MIXERCONTROL_CT_UNITS_BOOLEAN)\0"
	.byte	0x1
	.uleb128 0x4c3
	.ascii "MIXERCONTROL_CONTROLTYPE_ONOFF (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 1)\0"
	.byte	0x1
	.uleb128 0x4c4
	.ascii "MIXERCONTROL_CONTROLTYPE_MUTE (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 2)\0"
	.byte	0x1
	.uleb128 0x4c5
	.ascii "MIXERCONTROL_CONTROLTYPE_MONO (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 3)\0"
	.byte	0x1
	.uleb128 0x4c6
	.ascii "MIXERCONTROL_CONTROLTYPE_LOUDNESS (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 4)\0"
	.byte	0x1
	.uleb128 0x4c7
	.ascii "MIXERCONTROL_CONTROLTYPE_STEREOENH (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 5)\0"
	.byte	0x1
	.uleb128 0x4c8
	.ascii "MIXERCONTROL_CONTROLTYPE_BASS_BOOST (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 0x00002277)\0"
	.byte	0x1
	.uleb128 0x4c9
	.ascii "MIXERCONTROL_CONTROLTYPE_BUTTON (MIXERCONTROL_CT_CLASS_SWITCH | MIXERCONTROL_CT_SC_SWITCH_BUTTON | MIXERCONTROL_CT_UNITS_BOOLEAN)\0"
	.byte	0x1
	.uleb128 0x4ca
	.ascii "MIXERCONTROL_CONTROLTYPE_DECIBELS (MIXERCONTROL_CT_CLASS_NUMBER | MIXERCONTROL_CT_UNITS_DECIBELS)\0"
	.byte	0x1
	.uleb128 0x4cb
	.ascii "MIXERCONTROL_CONTROLTYPE_SIGNED (MIXERCONTROL_CT_CLASS_NUMBER | MIXERCONTROL_CT_UNITS_SIGNED)\0"
	.byte	0x1
	.uleb128 0x4cc
	.ascii "MIXERCONTROL_CONTROLTYPE_UNSIGNED (MIXERCONTROL_CT_CLASS_NUMBER | MIXERCONTROL_CT_UNITS_UNSIGNED)\0"
	.byte	0x1
	.uleb128 0x4cd
	.ascii "MIXERCONTROL_CONTROLTYPE_PERCENT (MIXERCONTROL_CT_CLASS_NUMBER | MIXERCONTROL_CT_UNITS_PERCENT)\0"
	.byte	0x1
	.uleb128 0x4ce
	.ascii "MIXERCONTROL_CONTROLTYPE_SLIDER (MIXERCONTROL_CT_CLASS_SLIDER | MIXERCONTROL_CT_UNITS_SIGNED)\0"
	.byte	0x1
	.uleb128 0x4cf
	.ascii "MIXERCONTROL_CONTROLTYPE_PAN (MIXERCONTROL_CONTROLTYPE_SLIDER + 1)\0"
	.byte	0x1
	.uleb128 0x4d0
	.ascii "MIXERCONTROL_CONTROLTYPE_QSOUNDPAN (MIXERCONTROL_CONTROLTYPE_SLIDER + 2)\0"
	.byte	0x1
	.uleb128 0x4d1
	.ascii "MIXERCONTROL_CONTROLTYPE_FADER (MIXERCONTROL_CT_CLASS_FADER | MIXERCONTROL_CT_UNITS_UNSIGNED)\0"
	.byte	0x1
	.uleb128 0x4d2
	.ascii "MIXERCONTROL_CONTROLTYPE_VOLUME (MIXERCONTROL_CONTROLTYPE_FADER + 1)\0"
	.byte	0x1
	.uleb128 0x4d3
	.ascii "MIXERCONTROL_CONTROLTYPE_BASS (MIXERCONTROL_CONTROLTYPE_FADER + 2)\0"
	.byte	0x1
	.uleb128 0x4d4
	.ascii "MIXERCONTROL_CONTROLTYPE_TREBLE (MIXERCONTROL_CONTROLTYPE_FADER + 3)\0"
	.byte	0x1
	.uleb128 0x4d5
	.ascii "MIXERCONTROL_CONTROLTYPE_EQUALIZER (MIXERCONTROL_CONTROLTYPE_FADER + 4)\0"
	.byte	0x1
	.uleb128 0x4d6
	.ascii "MIXERCONTROL_CONTROLTYPE_SINGLESELECT (MIXERCONTROL_CT_CLASS_LIST | MIXERCONTROL_CT_SC_LIST_SINGLE | MIXERCONTROL_CT_UNITS_BOOLEAN)\0"
	.byte	0x1
	.uleb128 0x4d7
	.ascii "MIXERCONTROL_CONTROLTYPE_MUX (MIXERCONTROL_CONTROLTYPE_SINGLESELECT + 1)\0"
	.byte	0x1
	.uleb128 0x4d8
	.ascii "MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT (MIXERCONTROL_CT_CLASS_LIST | MIXERCONTROL_CT_SC_LIST_MULTIPLE | MIXERCONTROL_CT_UNITS_BOOLEAN)\0"
	.byte	0x1
	.uleb128 0x4d9
	.ascii "MIXERCONTROL_CONTROLTYPE_MIXER (MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT + 1)\0"
	.byte	0x1
	.uleb128 0x4da
	.ascii "MIXERCONTROL_CONTROLTYPE_MICROTIME (MIXERCONTROL_CT_CLASS_TIME | MIXERCONTROL_CT_SC_TIME_MICROSECS | MIXERCONTROL_CT_UNITS_UNSIGNED)\0"
	.byte	0x1
	.uleb128 0x4db
	.ascii "MIXERCONTROL_CONTROLTYPE_MILLITIME (MIXERCONTROL_CT_CLASS_TIME | MIXERCONTROL_CT_SC_TIME_MILLISECS | MIXERCONTROL_CT_UNITS_UNSIGNED)\0"
	.byte	0x1
	.uleb128 0x4fc
	.ascii "mixerGetLineControls __MINGW_NAME_AW(mixerGetLineControls)\0"
	.byte	0x1
	.uleb128 0x4fe
	.ascii "MIXER_GETLINECONTROLSF_ALL __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x4ff
	.ascii "MIXER_GETLINECONTROLSF_ONEBYID __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x500
	.ascii "MIXER_GETLINECONTROLSF_ONEBYTYPE __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x502
	.ascii "MIXER_GETLINECONTROLSF_QUERYMASK __MSABI_LONG(0x0000000F)\0"
	.byte	0x1
	.uleb128 0x52e
	.ascii "mixerGetControlDetails __MINGW_NAME_AW(mixerGetControlDetails)\0"
	.byte	0x1
	.uleb128 0x530
	.ascii "MIXER_GETCONTROLDETAILSF_VALUE __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x531
	.ascii "MIXER_GETCONTROLDETAILSF_LISTTEXT __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x533
	.ascii "MIXER_GETCONTROLDETAILSF_QUERYMASK __MSABI_LONG(0x0000000F)\0"
	.byte	0x1
	.uleb128 0x537
	.ascii "MIXER_SETCONTROLDETAILSF_VALUE __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x538
	.ascii "MIXER_SETCONTROLDETAILSF_CUSTOM __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x53a
	.ascii "MIXER_SETCONTROLDETAILSF_QUERYMASK __MSABI_LONG(0x0000000F)\0"
	.byte	0x1
	.uleb128 0x53f
	.ascii "TIMERR_NOERROR (0)\0"
	.byte	0x1
	.uleb128 0x540
	.ascii "TIMERR_NOCANDO (TIMERR_BASE+1)\0"
	.byte	0x1
	.uleb128 0x541
	.ascii "TIMERR_STRUCT (TIMERR_BASE+33)\0"
	.byte	0x1
	.uleb128 0x546
	.ascii "TIME_ONESHOT 0x0000\0"
	.byte	0x1
	.uleb128 0x547
	.ascii "TIME_PERIODIC 0x0001\0"
	.byte	0x1
	.uleb128 0x549
	.ascii "TIME_CALLBACK_FUNCTION 0x0000\0"
	.byte	0x1
	.uleb128 0x54a
	.ascii "TIME_CALLBACK_EVENT_SET 0x0010\0"
	.byte	0x1
	.uleb128 0x54b
	.ascii "TIME_CALLBACK_EVENT_PULSE 0x0020\0"
	.byte	0x1
	.uleb128 0x54c
	.ascii "TIME_KILL_SYNCHRONOUS 0x0100\0"
	.byte	0x1
	.uleb128 0x55e
	.ascii "JOYERR_NOERROR (0)\0"
	.byte	0x1
	.uleb128 0x55f
	.ascii "JOYERR_PARMS (JOYERR_BASE+5)\0"
	.byte	0x1
	.uleb128 0x560
	.ascii "JOYERR_NOCANDO (JOYERR_BASE+6)\0"
	.byte	0x1
	.uleb128 0x561
	.ascii "JOYERR_UNPLUGGED (JOYERR_BASE+7)\0"
	.byte	0x1
	.uleb128 0x563
	.ascii "JOY_BUTTON1 0x0001\0"
	.byte	0x1
	.uleb128 0x564
	.ascii "JOY_BUTTON2 0x0002\0"
	.byte	0x1
	.uleb128 0x565
	.ascii "JOY_BUTTON3 0x0004\0"
	.byte	0x1
	.uleb128 0x566
	.ascii "JOY_BUTTON4 0x0008\0"
	.byte	0x1
	.uleb128 0x567
	.ascii "JOY_BUTTON1CHG 0x0100\0"
	.byte	0x1
	.uleb128 0x568
	.ascii "JOY_BUTTON2CHG 0x0200\0"
	.byte	0x1
	.uleb128 0x569
	.ascii "JOY_BUTTON3CHG 0x0400\0"
	.byte	0x1
	.uleb128 0x56a
	.ascii "JOY_BUTTON4CHG 0x0800\0"
	.byte	0x1
	.uleb128 0x56c
	.ascii "JOY_BUTTON5 __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0x56d
	.ascii "JOY_BUTTON6 __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0x56e
	.ascii "JOY_BUTTON7 __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0x56f
	.ascii "JOY_BUTTON8 __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0x570
	.ascii "JOY_BUTTON9 __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x571
	.ascii "JOY_BUTTON10 __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x572
	.ascii "JOY_BUTTON11 __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0x573
	.ascii "JOY_BUTTON12 __MSABI_LONG(0x00000800)\0"
	.byte	0x1
	.uleb128 0x574
	.ascii "JOY_BUTTON13 __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0x575
	.ascii "JOY_BUTTON14 __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0x576
	.ascii "JOY_BUTTON15 __MSABI_LONG(0x00004000)\0"
	.byte	0x1
	.uleb128 0x577
	.ascii "JOY_BUTTON16 __MSABI_LONG(0x00008000)\0"
	.byte	0x1
	.uleb128 0x578
	.ascii "JOY_BUTTON17 __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x579
	.ascii "JOY_BUTTON18 __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x57a
	.ascii "JOY_BUTTON19 __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x57b
	.ascii "JOY_BUTTON20 __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x57c
	.ascii "JOY_BUTTON21 __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x57d
	.ascii "JOY_BUTTON22 __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0x57e
	.ascii "JOY_BUTTON23 __MSABI_LONG(0x00400000)\0"
	.byte	0x1
	.uleb128 0x57f
	.ascii "JOY_BUTTON24 __MSABI_LONG(0x00800000)\0"
	.byte	0x1
	.uleb128 0x580
	.ascii "JOY_BUTTON25 __MSABI_LONG(0x01000000)\0"
	.byte	0x1
	.uleb128 0x581
	.ascii "JOY_BUTTON26 __MSABI_LONG(0x02000000)\0"
	.byte	0x1
	.uleb128 0x582
	.ascii "JOY_BUTTON27 __MSABI_LONG(0x04000000)\0"
	.byte	0x1
	.uleb128 0x583
	.ascii "JOY_BUTTON28 __MSABI_LONG(0x08000000)\0"
	.byte	0x1
	.uleb128 0x584
	.ascii "JOY_BUTTON29 __MSABI_LONG(0x10000000)\0"
	.byte	0x1
	.uleb128 0x585
	.ascii "JOY_BUTTON30 __MSABI_LONG(0x20000000)\0"
	.byte	0x1
	.uleb128 0x586
	.ascii "JOY_BUTTON31 __MSABI_LONG(0x40000000)\0"
	.byte	0x1
	.uleb128 0x587
	.ascii "JOY_BUTTON32 __MSABI_LONG(0x80000000)\0"
	.byte	0x1
	.uleb128 0x589
	.ascii "JOY_POVCENTERED (WORD) -1\0"
	.byte	0x1
	.uleb128 0x58a
	.ascii "JOY_POVFORWARD 0\0"
	.byte	0x1
	.uleb128 0x58b
	.ascii "JOY_POVRIGHT 9000\0"
	.byte	0x1
	.uleb128 0x58c
	.ascii "JOY_POVBACKWARD 18000\0"
	.byte	0x1
	.uleb128 0x58d
	.ascii "JOY_POVLEFT 27000\0"
	.byte	0x1
	.uleb128 0x58f
	.ascii "JOY_RETURNX __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x590
	.ascii "JOY_RETURNY __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x591
	.ascii "JOY_RETURNZ __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x592
	.ascii "JOY_RETURNR __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x593
	.ascii "JOY_RETURNU __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0x594
	.ascii "JOY_RETURNV __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0x595
	.ascii "JOY_RETURNPOV __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0x596
	.ascii "JOY_RETURNBUTTONS __MSABI_LONG(0x00000080)\0"
	.byte	0x1
	.uleb128 0x597
	.ascii "JOY_RETURNRAWDATA __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x598
	.ascii "JOY_RETURNPOVCTS __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x599
	.ascii "JOY_RETURNCENTERED __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0x59a
	.ascii "JOY_USEDEADZONE __MSABI_LONG(0x00000800)\0"
	.byte	0x1
	.uleb128 0x59b
	.ascii "JOY_RETURNALL (JOY_RETURNX | JOY_RETURNY | JOY_RETURNZ | JOY_RETURNR | JOY_RETURNU | JOY_RETURNV | JOY_RETURNPOV | JOY_RETURNBUTTONS)\0"
	.byte	0x1
	.uleb128 0x59c
	.ascii "JOY_CAL_READALWAYS __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x59d
	.ascii "JOY_CAL_READXYONLY __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x59e
	.ascii "JOY_CAL_READ3 __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x59f
	.ascii "JOY_CAL_READ4 __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x5a0
	.ascii "JOY_CAL_READXONLY __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x5a1
	.ascii "JOY_CAL_READYONLY __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0x5a2
	.ascii "JOY_CAL_READ5 __MSABI_LONG(0x00400000)\0"
	.byte	0x1
	.uleb128 0x5a3
	.ascii "JOY_CAL_READ6 __MSABI_LONG(0x00800000)\0"
	.byte	0x1
	.uleb128 0x5a4
	.ascii "JOY_CAL_READZONLY __MSABI_LONG(0x01000000)\0"
	.byte	0x1
	.uleb128 0x5a5
	.ascii "JOY_CAL_READRONLY __MSABI_LONG(0x02000000)\0"
	.byte	0x1
	.uleb128 0x5a6
	.ascii "JOY_CAL_READUONLY __MSABI_LONG(0x04000000)\0"
	.byte	0x1
	.uleb128 0x5a7
	.ascii "JOY_CAL_READVONLY __MSABI_LONG(0x08000000)\0"
	.byte	0x1
	.uleb128 0x5a9
	.ascii "JOYSTICKID1 0\0"
	.byte	0x1
	.uleb128 0x5aa
	.ascii "JOYSTICKID2 1\0"
	.byte	0x1
	.uleb128 0x5ac
	.ascii "JOYCAPS_HASZ 0x0001\0"
	.byte	0x1
	.uleb128 0x5ad
	.ascii "JOYCAPS_HASR 0x0002\0"
	.byte	0x1
	.uleb128 0x5ae
	.ascii "JOYCAPS_HASU 0x0004\0"
	.byte	0x1
	.uleb128 0x5af
	.ascii "JOYCAPS_HASV 0x0008\0"
	.byte	0x1
	.uleb128 0x5b0
	.ascii "JOYCAPS_HASPOV 0x0010\0"
	.byte	0x1
	.uleb128 0x5b1
	.ascii "JOYCAPS_POV4DIR 0x0020\0"
	.byte	0x1
	.uleb128 0x5b2
	.ascii "JOYCAPS_POVCTS 0x0040\0"
	.byte	0x1
	.uleb128 0x64b
	.ascii "joyGetDevCaps __MINGW_NAME_AW(joyGetDevCaps)\0"
	.byte	0x1
	.uleb128 0x657
	.ascii "MMIOERR_BASE 256\0"
	.byte	0x1
	.uleb128 0x658
	.ascii "MMIOERR_FILENOTFOUND (MMIOERR_BASE + 1)\0"
	.byte	0x1
	.uleb128 0x659
	.ascii "MMIOERR_OUTOFMEMORY (MMIOERR_BASE + 2)\0"
	.byte	0x1
	.uleb128 0x65a
	.ascii "MMIOERR_CANNOTOPEN (MMIOERR_BASE + 3)\0"
	.byte	0x1
	.uleb128 0x65b
	.ascii "MMIOERR_CANNOTCLOSE (MMIOERR_BASE + 4)\0"
	.byte	0x1
	.uleb128 0x65c
	.ascii "MMIOERR_CANNOTREAD (MMIOERR_BASE + 5)\0"
	.byte	0x1
	.uleb128 0x65d
	.ascii "MMIOERR_CANNOTWRITE (MMIOERR_BASE + 6)\0"
	.byte	0x1
	.uleb128 0x65e
	.ascii "MMIOERR_CANNOTSEEK (MMIOERR_BASE + 7)\0"
	.byte	0x1
	.uleb128 0x65f
	.ascii "MMIOERR_CANNOTEXPAND (MMIOERR_BASE + 8)\0"
	.byte	0x1
	.uleb128 0x660
	.ascii "MMIOERR_CHUNKNOTFOUND (MMIOERR_BASE + 9)\0"
	.byte	0x1
	.uleb128 0x661
	.ascii "MMIOERR_UNBUFFERED (MMIOERR_BASE + 10)\0"
	.byte	0x1
	.uleb128 0x662
	.ascii "MMIOERR_PATHNOTFOUND (MMIOERR_BASE + 11)\0"
	.byte	0x1
	.uleb128 0x663
	.ascii "MMIOERR_ACCESSDENIED (MMIOERR_BASE + 12)\0"
	.byte	0x1
	.uleb128 0x664
	.ascii "MMIOERR_SHARINGVIOLATION (MMIOERR_BASE + 13)\0"
	.byte	0x1
	.uleb128 0x665
	.ascii "MMIOERR_NETWORKERROR (MMIOERR_BASE + 14)\0"
	.byte	0x1
	.uleb128 0x666
	.ascii "MMIOERR_TOOMANYOPENFILES (MMIOERR_BASE + 15)\0"
	.byte	0x1
	.uleb128 0x667
	.ascii "MMIOERR_INVALIDFILE (MMIOERR_BASE + 16)\0"
	.byte	0x1
	.uleb128 0x669
	.ascii "CFSEPCHAR '+'\0"
	.byte	0x1
	.uleb128 0x690
	.ascii "MMIO_RWMODE 0x00000003\0"
	.byte	0x1
	.uleb128 0x691
	.ascii "MMIO_SHAREMODE 0x00000070\0"
	.byte	0x1
	.uleb128 0x693
	.ascii "MMIO_CREATE 0x00001000\0"
	.byte	0x1
	.uleb128 0x694
	.ascii "MMIO_PARSE 0x00000100\0"
	.byte	0x1
	.uleb128 0x695
	.ascii "MMIO_DELETE 0x00000200\0"
	.byte	0x1
	.uleb128 0x696
	.ascii "MMIO_EXIST 0x00004000\0"
	.byte	0x1
	.uleb128 0x697
	.ascii "MMIO_ALLOCBUF 0x00010000\0"
	.byte	0x1
	.uleb128 0x698
	.ascii "MMIO_GETTEMP 0x00020000\0"
	.byte	0x1
	.uleb128 0x69a
	.ascii "MMIO_DIRTY 0x10000000\0"
	.byte	0x1
	.uleb128 0x69c
	.ascii "MMIO_READ 0x00000000\0"
	.byte	0x1
	.uleb128 0x69d
	.ascii "MMIO_WRITE 0x00000001\0"
	.byte	0x1
	.uleb128 0x69e
	.ascii "MMIO_READWRITE 0x00000002\0"
	.byte	0x1
	.uleb128 0x6a0
	.ascii "MMIO_COMPAT 0x00000000\0"
	.byte	0x1
	.uleb128 0x6a1
	.ascii "MMIO_EXCLUSIVE 0x00000010\0"
	.byte	0x1
	.uleb128 0x6a2
	.ascii "MMIO_DENYWRITE 0x00000020\0"
	.byte	0x1
	.uleb128 0x6a3
	.ascii "MMIO_DENYREAD 0x00000030\0"
	.byte	0x1
	.uleb128 0x6a4
	.ascii "MMIO_DENYNONE 0x00000040\0"
	.byte	0x1
	.uleb128 0x6a6
	.ascii "MMIO_FHOPEN 0x0010\0"
	.byte	0x1
	.uleb128 0x6a7
	.ascii "MMIO_EMPTYBUF 0x0010\0"
	.byte	0x1
	.uleb128 0x6a8
	.ascii "MMIO_TOUPPER 0x0010\0"
	.byte	0x1
	.uleb128 0x6a9
	.ascii "MMIO_INSTALLPROC 0x00010000\0"
	.byte	0x1
	.uleb128 0x6aa
	.ascii "MMIO_GLOBALPROC 0x10000000\0"
	.byte	0x1
	.uleb128 0x6ab
	.ascii "MMIO_REMOVEPROC 0x00020000\0"
	.byte	0x1
	.uleb128 0x6ac
	.ascii "MMIO_UNICODEPROC 0x01000000\0"
	.byte	0x1
	.uleb128 0x6ad
	.ascii "MMIO_FINDPROC 0x00040000\0"
	.byte	0x1
	.uleb128 0x6ae
	.ascii "MMIO_FINDCHUNK 0x0010\0"
	.byte	0x1
	.uleb128 0x6af
	.ascii "MMIO_FINDRIFF 0x0020\0"
	.byte	0x1
	.uleb128 0x6b0
	.ascii "MMIO_FINDLIST 0x0040\0"
	.byte	0x1
	.uleb128 0x6b1
	.ascii "MMIO_CREATERIFF 0x0020\0"
	.byte	0x1
	.uleb128 0x6b2
	.ascii "MMIO_CREATELIST 0x0040\0"
	.byte	0x1
	.uleb128 0x6b4
	.ascii "MMIOM_READ MMIO_READ\0"
	.byte	0x1
	.uleb128 0x6b5
	.ascii "MMIOM_WRITE MMIO_WRITE\0"
	.byte	0x1
	.uleb128 0x6b6
	.ascii "MMIOM_SEEK 2\0"
	.byte	0x1
	.uleb128 0x6b7
	.ascii "MMIOM_OPEN 3\0"
	.byte	0x1
	.uleb128 0x6b8
	.ascii "MMIOM_CLOSE 4\0"
	.byte	0x1
	.uleb128 0x6b9
	.ascii "MMIOM_WRITEFLUSH 5\0"
	.byte	0x1
	.uleb128 0x6ba
	.ascii "MMIOM_RENAME 6\0"
	.byte	0x1
	.uleb128 0x6bc
	.ascii "MMIOM_USER 0x8000\0"
	.byte	0x1
	.uleb128 0x6be
	.ascii "FOURCC_RIFF mmioFOURCC('R','I','F','F')\0"
	.byte	0x1
	.uleb128 0x6bf
	.ascii "FOURCC_LIST mmioFOURCC('L','I','S','T')\0"
	.byte	0x1
	.uleb128 0x6c1
	.ascii "FOURCC_DOS mmioFOURCC('D','O','S',' ')\0"
	.byte	0x1
	.uleb128 0x6c2
	.ascii "FOURCC_MEM mmioFOURCC('M','E','M',' ')\0"
	.byte	0x1
	.uleb128 0x6ca
	.ascii "MMIO_DEFAULTBUFFER 8192\0"
	.byte	0x1
	.uleb128 0x6cc
	.ascii "mmioFOURCC(ch0,ch1,ch2,ch3) MAKEFOURCC(ch0,ch1,ch2,ch3)\0"
	.byte	0x1
	.uleb128 0x6d1
	.ascii "mmioStringToFOURCC __MINGW_NAME_AW(mmioStringToFOURCC)\0"
	.byte	0x1
	.uleb128 0x6d6
	.ascii "mmioInstallIOProc __MINGW_NAME_AW(mmioInstallIOProc)\0"
	.byte	0x1
	.uleb128 0x6db
	.ascii "mmioOpen __MINGW_NAME_AW(mmioOpen)\0"
	.byte	0x1
	.uleb128 0x6e0
	.ascii "mmioRename __MINGW_NAME_AW(mmioRename)\0"
	.byte	0x1
	.uleb128 0x6f4
	.ascii "_MCIERROR_ \0"
	.byte	0x1
	.uleb128 0x6f9
	.ascii "_MCIDEVICEID_ \0"
	.byte	0x1
	.uleb128 0x702
	.ascii "mciSendCommand __MINGW_NAME_AW(mciSendCommand)\0"
	.byte	0x1
	.uleb128 0x707
	.ascii "mciSendString __MINGW_NAME_AW(mciSendString)\0"
	.byte	0x1
	.uleb128 0x70c
	.ascii "mciGetDeviceID __MINGW_NAME_AW(mciGetDeviceID)\0"
	.byte	0x1
	.uleb128 0x711
	.ascii "mciGetDeviceIDFromElementID __MINGW_NAME_AW(mciGetDeviceIDFromElementID)\0"
	.byte	0x1
	.uleb128 0x716
	.ascii "mciGetErrorString __MINGW_NAME_AW(mciGetErrorString)\0"
	.byte	0x1
	.uleb128 0x71c
	.ascii "MCIERR_INVALID_DEVICE_ID (MCIERR_BASE + 1)\0"
	.byte	0x1
	.uleb128 0x71d
	.ascii "MCIERR_UNRECOGNIZED_KEYWORD (MCIERR_BASE + 3)\0"
	.byte	0x1
	.uleb128 0x71e
	.ascii "MCIERR_UNRECOGNIZED_COMMAND (MCIERR_BASE + 5)\0"
	.byte	0x1
	.uleb128 0x71f
	.ascii "MCIERR_HARDWARE (MCIERR_BASE + 6)\0"
	.byte	0x1
	.uleb128 0x720
	.ascii "MCIERR_INVALID_DEVICE_NAME (MCIERR_BASE + 7)\0"
	.byte	0x1
	.uleb128 0x721
	.ascii "MCIERR_OUT_OF_MEMORY (MCIERR_BASE + 8)\0"
	.byte	0x1
	.uleb128 0x722
	.ascii "MCIERR_DEVICE_OPEN (MCIERR_BASE + 9)\0"
	.byte	0x1
	.uleb128 0x723
	.ascii "MCIERR_CANNOT_LOAD_DRIVER (MCIERR_BASE + 10)\0"
	.byte	0x1
	.uleb128 0x724
	.ascii "MCIERR_MISSING_COMMAND_STRING (MCIERR_BASE + 11)\0"
	.byte	0x1
	.uleb128 0x725
	.ascii "MCIERR_PARAM_OVERFLOW (MCIERR_BASE + 12)\0"
	.byte	0x1
	.uleb128 0x726
	.ascii "MCIERR_MISSING_STRING_ARGUMENT (MCIERR_BASE + 13)\0"
	.byte	0x1
	.uleb128 0x727
	.ascii "MCIERR_BAD_INTEGER (MCIERR_BASE + 14)\0"
	.byte	0x1
	.uleb128 0x728
	.ascii "MCIERR_PARSER_INTERNAL (MCIERR_BASE + 15)\0"
	.byte	0x1
	.uleb128 0x729
	.ascii "MCIERR_DRIVER_INTERNAL (MCIERR_BASE + 16)\0"
	.byte	0x1
	.uleb128 0x72a
	.ascii "MCIERR_MISSING_PARAMETER (MCIERR_BASE + 17)\0"
	.byte	0x1
	.uleb128 0x72b
	.ascii "MCIERR_UNSUPPORTED_FUNCTION (MCIERR_BASE + 18)\0"
	.byte	0x1
	.uleb128 0x72c
	.ascii "MCIERR_FILE_NOT_FOUND (MCIERR_BASE + 19)\0"
	.byte	0x1
	.uleb128 0x72d
	.ascii "MCIERR_DEVICE_NOT_READY (MCIERR_BASE + 20)\0"
	.byte	0x1
	.uleb128 0x72e
	.ascii "MCIERR_INTERNAL (MCIERR_BASE + 21)\0"
	.byte	0x1
	.uleb128 0x72f
	.ascii "MCIERR_DRIVER (MCIERR_BASE + 22)\0"
	.byte	0x1
	.uleb128 0x730
	.ascii "MCIERR_CANNOT_USE_ALL (MCIERR_BASE + 23)\0"
	.byte	0x1
	.uleb128 0x731
	.ascii "MCIERR_MULTIPLE (MCIERR_BASE + 24)\0"
	.byte	0x1
	.uleb128 0x732
	.ascii "MCIERR_EXTENSION_NOT_FOUND (MCIERR_BASE + 25)\0"
	.byte	0x1
	.uleb128 0x733
	.ascii "MCIERR_OUTOFRANGE (MCIERR_BASE + 26)\0"
	.byte	0x1
	.uleb128 0x734
	.ascii "MCIERR_FLAGS_NOT_COMPATIBLE (MCIERR_BASE + 28)\0"
	.byte	0x1
	.uleb128 0x735
	.ascii "MCIERR_FILE_NOT_SAVED (MCIERR_BASE + 30)\0"
	.byte	0x1
	.uleb128 0x736
	.ascii "MCIERR_DEVICE_TYPE_REQUIRED (MCIERR_BASE + 31)\0"
	.byte	0x1
	.uleb128 0x737
	.ascii "MCIERR_DEVICE_LOCKED (MCIERR_BASE + 32)\0"
	.byte	0x1
	.uleb128 0x738
	.ascii "MCIERR_DUPLICATE_ALIAS (MCIERR_BASE + 33)\0"
	.byte	0x1
	.uleb128 0x739
	.ascii "MCIERR_BAD_CONSTANT (MCIERR_BASE + 34)\0"
	.byte	0x1
	.uleb128 0x73a
	.ascii "MCIERR_MUST_USE_SHAREABLE (MCIERR_BASE + 35)\0"
	.byte	0x1
	.uleb128 0x73b
	.ascii "MCIERR_MISSING_DEVICE_NAME (MCIERR_BASE + 36)\0"
	.byte	0x1
	.uleb128 0x73c
	.ascii "MCIERR_BAD_TIME_FORMAT (MCIERR_BASE + 37)\0"
	.byte	0x1
	.uleb128 0x73d
	.ascii "MCIERR_NO_CLOSING_QUOTE (MCIERR_BASE + 38)\0"
	.byte	0x1
	.uleb128 0x73e
	.ascii "MCIERR_DUPLICATE_FLAGS (MCIERR_BASE + 39)\0"
	.byte	0x1
	.uleb128 0x73f
	.ascii "MCIERR_INVALID_FILE (MCIERR_BASE + 40)\0"
	.byte	0x1
	.uleb128 0x740
	.ascii "MCIERR_NULL_PARAMETER_BLOCK (MCIERR_BASE + 41)\0"
	.byte	0x1
	.uleb128 0x741
	.ascii "MCIERR_UNNAMED_RESOURCE (MCIERR_BASE + 42)\0"
	.byte	0x1
	.uleb128 0x742
	.ascii "MCIERR_NEW_REQUIRES_ALIAS (MCIERR_BASE + 43)\0"
	.byte	0x1
	.uleb128 0x743
	.ascii "MCIERR_NOTIFY_ON_AUTO_OPEN (MCIERR_BASE + 44)\0"
	.byte	0x1
	.uleb128 0x744
	.ascii "MCIERR_NO_ELEMENT_ALLOWED (MCIERR_BASE + 45)\0"
	.byte	0x1
	.uleb128 0x745
	.ascii "MCIERR_NONAPPLICABLE_FUNCTION (MCIERR_BASE + 46)\0"
	.byte	0x1
	.uleb128 0x746
	.ascii "MCIERR_ILLEGAL_FOR_AUTO_OPEN (MCIERR_BASE + 47)\0"
	.byte	0x1
	.uleb128 0x747
	.ascii "MCIERR_FILENAME_REQUIRED (MCIERR_BASE + 48)\0"
	.byte	0x1
	.uleb128 0x748
	.ascii "MCIERR_EXTRA_CHARACTERS (MCIERR_BASE + 49)\0"
	.byte	0x1
	.uleb128 0x749
	.ascii "MCIERR_DEVICE_NOT_INSTALLED (MCIERR_BASE + 50)\0"
	.byte	0x1
	.uleb128 0x74a
	.ascii "MCIERR_GET_CD (MCIERR_BASE + 51)\0"
	.byte	0x1
	.uleb128 0x74b
	.ascii "MCIERR_SET_CD (MCIERR_BASE + 52)\0"
	.byte	0x1
	.uleb128 0x74c
	.ascii "MCIERR_SET_DRIVE (MCIERR_BASE + 53)\0"
	.byte	0x1
	.uleb128 0x74d
	.ascii "MCIERR_DEVICE_LENGTH (MCIERR_BASE + 54)\0"
	.byte	0x1
	.uleb128 0x74e
	.ascii "MCIERR_DEVICE_ORD_LENGTH (MCIERR_BASE + 55)\0"
	.byte	0x1
	.uleb128 0x74f
	.ascii "MCIERR_NO_INTEGER (MCIERR_BASE + 56)\0"
	.byte	0x1
	.uleb128 0x750
	.ascii "MCIERR_WAVE_OUTPUTSINUSE (MCIERR_BASE + 64)\0"
	.byte	0x1
	.uleb128 0x751
	.ascii "MCIERR_WAVE_SETOUTPUTINUSE (MCIERR_BASE + 65)\0"
	.byte	0x1
	.uleb128 0x752
	.ascii "MCIERR_WAVE_INPUTSINUSE (MCIERR_BASE + 66)\0"
	.byte	0x1
	.uleb128 0x753
	.ascii "MCIERR_WAVE_SETINPUTINUSE (MCIERR_BASE + 67)\0"
	.byte	0x1
	.uleb128 0x754
	.ascii "MCIERR_WAVE_OUTPUTUNSPECIFIED (MCIERR_BASE + 68)\0"
	.byte	0x1
	.uleb128 0x755
	.ascii "MCIERR_WAVE_INPUTUNSPECIFIED (MCIERR_BASE + 69)\0"
	.byte	0x1
	.uleb128 0x756
	.ascii "MCIERR_WAVE_OUTPUTSUNSUITABLE (MCIERR_BASE + 70)\0"
	.byte	0x1
	.uleb128 0x757
	.ascii "MCIERR_WAVE_SETOUTPUTUNSUITABLE (MCIERR_BASE + 71)\0"
	.byte	0x1
	.uleb128 0x758
	.ascii "MCIERR_WAVE_INPUTSUNSUITABLE (MCIERR_BASE + 72)\0"
	.byte	0x1
	.uleb128 0x759
	.ascii "MCIERR_WAVE_SETINPUTUNSUITABLE (MCIERR_BASE + 73)\0"
	.byte	0x1
	.uleb128 0x75a
	.ascii "MCIERR_SEQ_DIV_INCOMPATIBLE (MCIERR_BASE + 80)\0"
	.byte	0x1
	.uleb128 0x75b
	.ascii "MCIERR_SEQ_PORT_INUSE (MCIERR_BASE + 81)\0"
	.byte	0x1
	.uleb128 0x75c
	.ascii "MCIERR_SEQ_PORT_NONEXISTENT (MCIERR_BASE + 82)\0"
	.byte	0x1
	.uleb128 0x75d
	.ascii "MCIERR_SEQ_PORT_MAPNODEVICE (MCIERR_BASE + 83)\0"
	.byte	0x1
	.uleb128 0x75e
	.ascii "MCIERR_SEQ_PORT_MISCERROR (MCIERR_BASE + 84)\0"
	.byte	0x1
	.uleb128 0x75f
	.ascii "MCIERR_SEQ_TIMER (MCIERR_BASE + 85)\0"
	.byte	0x1
	.uleb128 0x760
	.ascii "MCIERR_SEQ_PORTUNSPECIFIED (MCIERR_BASE + 86)\0"
	.byte	0x1
	.uleb128 0x761
	.ascii "MCIERR_SEQ_NOMIDIPRESENT (MCIERR_BASE + 87)\0"
	.byte	0x1
	.uleb128 0x762
	.ascii "MCIERR_NO_WINDOW (MCIERR_BASE + 90)\0"
	.byte	0x1
	.uleb128 0x763
	.ascii "MCIERR_CREATEWINDOW (MCIERR_BASE + 91)\0"
	.byte	0x1
	.uleb128 0x764
	.ascii "MCIERR_FILE_READ (MCIERR_BASE + 92)\0"
	.byte	0x1
	.uleb128 0x765
	.ascii "MCIERR_FILE_WRITE (MCIERR_BASE + 93)\0"
	.byte	0x1
	.uleb128 0x766
	.ascii "MCIERR_NO_IDENTITY (MCIERR_BASE + 94)\0"
	.byte	0x1
	.uleb128 0x767
	.ascii "MCIERR_CUSTOM_DRIVER_BASE (MCIERR_BASE + 256)\0"
	.byte	0x1
	.uleb128 0x769
	.ascii "MCI_FIRST DRV_MCI_FIRST\0"
	.byte	0x1
	.uleb128 0x76b
	.ascii "MCI_OPEN 0x0803\0"
	.byte	0x1
	.uleb128 0x76c
	.ascii "MCI_CLOSE 0x0804\0"
	.byte	0x1
	.uleb128 0x76d
	.ascii "MCI_ESCAPE 0x0805\0"
	.byte	0x1
	.uleb128 0x76e
	.ascii "MCI_PLAY 0x0806\0"
	.byte	0x1
	.uleb128 0x76f
	.ascii "MCI_SEEK 0x0807\0"
	.byte	0x1
	.uleb128 0x770
	.ascii "MCI_STOP 0x0808\0"
	.byte	0x1
	.uleb128 0x771
	.ascii "MCI_PAUSE 0x0809\0"
	.byte	0x1
	.uleb128 0x772
	.ascii "MCI_INFO 0x080A\0"
	.byte	0x1
	.uleb128 0x773
	.ascii "MCI_GETDEVCAPS 0x080B\0"
	.byte	0x1
	.uleb128 0x774
	.ascii "MCI_SPIN 0x080C\0"
	.byte	0x1
	.uleb128 0x775
	.ascii "MCI_SET 0x080D\0"
	.byte	0x1
	.uleb128 0x776
	.ascii "MCI_STEP 0x080E\0"
	.byte	0x1
	.uleb128 0x777
	.ascii "MCI_RECORD 0x080F\0"
	.byte	0x1
	.uleb128 0x778
	.ascii "MCI_SYSINFO 0x0810\0"
	.byte	0x1
	.uleb128 0x779
	.ascii "MCI_BREAK 0x0811\0"
	.byte	0x1
	.uleb128 0x77a
	.ascii "MCI_SAVE 0x0813\0"
	.byte	0x1
	.uleb128 0x77b
	.ascii "MCI_STATUS 0x0814\0"
	.byte	0x1
	.uleb128 0x77c
	.ascii "MCI_CUE 0x0830\0"
	.byte	0x1
	.uleb128 0x77d
	.ascii "MCI_REALIZE 0x0840\0"
	.byte	0x1
	.uleb128 0x77e
	.ascii "MCI_WINDOW 0x0841\0"
	.byte	0x1
	.uleb128 0x77f
	.ascii "MCI_PUT 0x0842\0"
	.byte	0x1
	.uleb128 0x780
	.ascii "MCI_WHERE 0x0843\0"
	.byte	0x1
	.uleb128 0x781
	.ascii "MCI_FREEZE 0x0844\0"
	.byte	0x1
	.uleb128 0x782
	.ascii "MCI_UNFREEZE 0x0845\0"
	.byte	0x1
	.uleb128 0x783
	.ascii "MCI_LOAD 0x0850\0"
	.byte	0x1
	.uleb128 0x784
	.ascii "MCI_CUT 0x0851\0"
	.byte	0x1
	.uleb128 0x785
	.ascii "MCI_COPY 0x0852\0"
	.byte	0x1
	.uleb128 0x786
	.ascii "MCI_PASTE 0x0853\0"
	.byte	0x1
	.uleb128 0x787
	.ascii "MCI_UPDATE 0x0854\0"
	.byte	0x1
	.uleb128 0x788
	.ascii "MCI_RESUME 0x0855\0"
	.byte	0x1
	.uleb128 0x789
	.ascii "MCI_DELETE 0x0856\0"
	.byte	0x1
	.uleb128 0x78b
	.ascii "MCI_USER_MESSAGES (DRV_MCI_FIRST + 0x400)\0"
	.byte	0x1
	.uleb128 0x78c
	.ascii "MCI_LAST 0x0FFF\0"
	.byte	0x1
	.uleb128 0x78e
	.ascii "MCI_ALL_DEVICE_ID ((MCIDEVICEID)-1)\0"
	.byte	0x1
	.uleb128 0x790
	.ascii "MCI_DEVTYPE_VCR 513\0"
	.byte	0x1
	.uleb128 0x791
	.ascii "MCI_DEVTYPE_VIDEODISC 514\0"
	.byte	0x1
	.uleb128 0x792
	.ascii "MCI_DEVTYPE_OVERLAY 515\0"
	.byte	0x1
	.uleb128 0x793
	.ascii "MCI_DEVTYPE_CD_AUDIO 516\0"
	.byte	0x1
	.uleb128 0x794
	.ascii "MCI_DEVTYPE_DAT 517\0"
	.byte	0x1
	.uleb128 0x795
	.ascii "MCI_DEVTYPE_SCANNER 518\0"
	.byte	0x1
	.uleb128 0x796
	.ascii "MCI_DEVTYPE_ANIMATION 519\0"
	.byte	0x1
	.uleb128 0x797
	.ascii "MCI_DEVTYPE_DIGITAL_VIDEO 520\0"
	.byte	0x1
	.uleb128 0x798
	.ascii "MCI_DEVTYPE_OTHER 521\0"
	.byte	0x1
	.uleb128 0x799
	.ascii "MCI_DEVTYPE_WAVEFORM_AUDIO 522\0"
	.byte	0x1
	.uleb128 0x79a
	.ascii "MCI_DEVTYPE_SEQUENCER 523\0"
	.byte	0x1
	.uleb128 0x79c
	.ascii "MCI_DEVTYPE_FIRST MCI_DEVTYPE_VCR\0"
	.byte	0x1
	.uleb128 0x79d
	.ascii "MCI_DEVTYPE_LAST MCI_DEVTYPE_SEQUENCER\0"
	.byte	0x1
	.uleb128 0x79f
	.ascii "MCI_DEVTYPE_FIRST_USER 0x1000\0"
	.byte	0x1
	.uleb128 0x7a1
	.ascii "MCI_MODE_NOT_READY (MCI_STRING_OFFSET + 12)\0"
	.byte	0x1
	.uleb128 0x7a2
	.ascii "MCI_MODE_STOP (MCI_STRING_OFFSET + 13)\0"
	.byte	0x1
	.uleb128 0x7a3
	.ascii "MCI_MODE_PLAY (MCI_STRING_OFFSET + 14)\0"
	.byte	0x1
	.uleb128 0x7a4
	.ascii "MCI_MODE_RECORD (MCI_STRING_OFFSET + 15)\0"
	.byte	0x1
	.uleb128 0x7a5
	.ascii "MCI_MODE_SEEK (MCI_STRING_OFFSET + 16)\0"
	.byte	0x1
	.uleb128 0x7a6
	.ascii "MCI_MODE_PAUSE (MCI_STRING_OFFSET + 17)\0"
	.byte	0x1
	.uleb128 0x7a7
	.ascii "MCI_MODE_OPEN (MCI_STRING_OFFSET + 18)\0"
	.byte	0x1
	.uleb128 0x7a9
	.ascii "MCI_FORMAT_MILLISECONDS 0\0"
	.byte	0x1
	.uleb128 0x7aa
	.ascii "MCI_FORMAT_HMS 1\0"
	.byte	0x1
	.uleb128 0x7ab
	.ascii "MCI_FORMAT_MSF 2\0"
	.byte	0x1
	.uleb128 0x7ac
	.ascii "MCI_FORMAT_FRAMES 3\0"
	.byte	0x1
	.uleb128 0x7ad
	.ascii "MCI_FORMAT_SMPTE_24 4\0"
	.byte	0x1
	.uleb128 0x7ae
	.ascii "MCI_FORMAT_SMPTE_25 5\0"
	.byte	0x1
	.uleb128 0x7af
	.ascii "MCI_FORMAT_SMPTE_30 6\0"
	.byte	0x1
	.uleb128 0x7b0
	.ascii "MCI_FORMAT_SMPTE_30DROP 7\0"
	.byte	0x1
	.uleb128 0x7b1
	.ascii "MCI_FORMAT_BYTES 8\0"
	.byte	0x1
	.uleb128 0x7b2
	.ascii "MCI_FORMAT_SAMPLES 9\0"
	.byte	0x1
	.uleb128 0x7b3
	.ascii "MCI_FORMAT_TMSF 10\0"
	.byte	0x1
	.uleb128 0x7b5
	.ascii "MCI_MSF_MINUTE(msf) ((BYTE)(msf))\0"
	.byte	0x1
	.uleb128 0x7b6
	.ascii "MCI_MSF_SECOND(msf) ((BYTE)(((WORD)(msf)) >> 8))\0"
	.byte	0x1
	.uleb128 0x7b7
	.ascii "MCI_MSF_FRAME(msf) ((BYTE)((msf)>>16))\0"
	.byte	0x1
	.uleb128 0x7b9
	.ascii "MCI_MAKE_MSF(m,s,f) ((DWORD)(((BYTE)(m) | ((WORD)(s)<<8)) | (((DWORD)(BYTE)(f))<<16)))\0"
	.byte	0x1
	.uleb128 0x7bb
	.ascii "MCI_TMSF_TRACK(tmsf) ((BYTE)(tmsf))\0"
	.byte	0x1
	.uleb128 0x7bc
	.ascii "MCI_TMSF_MINUTE(tmsf) ((BYTE)(((WORD)(tmsf)) >> 8))\0"
	.byte	0x1
	.uleb128 0x7bd
	.ascii "MCI_TMSF_SECOND(tmsf) ((BYTE)((tmsf)>>16))\0"
	.byte	0x1
	.uleb128 0x7be
	.ascii "MCI_TMSF_FRAME(tmsf) ((BYTE)((tmsf)>>24))\0"
	.byte	0x1
	.uleb128 0x7c0
	.ascii "MCI_MAKE_TMSF(t,m,s,f) ((DWORD)(((BYTE)(t) | ((WORD)(m)<<8)) | (((DWORD)(BYTE)(s) | ((WORD)(f)<<8))<<16)))\0"
	.byte	0x1
	.uleb128 0x7c2
	.ascii "MCI_HMS_HOUR(hms) ((BYTE)(hms))\0"
	.byte	0x1
	.uleb128 0x7c3
	.ascii "MCI_HMS_MINUTE(hms) ((BYTE)(((WORD)(hms)) >> 8))\0"
	.byte	0x1
	.uleb128 0x7c4
	.ascii "MCI_HMS_SECOND(hms) ((BYTE)((hms)>>16))\0"
	.byte	0x1
	.uleb128 0x7c6
	.ascii "MCI_MAKE_HMS(h,m,s) ((DWORD)(((BYTE)(h) | ((WORD)(m)<<8)) | (((DWORD)(BYTE)(s))<<16)))\0"
	.byte	0x1
	.uleb128 0x7c8
	.ascii "MCI_NOTIFY_SUCCESSFUL 0x0001\0"
	.byte	0x1
	.uleb128 0x7c9
	.ascii "MCI_NOTIFY_SUPERSEDED 0x0002\0"
	.byte	0x1
	.uleb128 0x7ca
	.ascii "MCI_NOTIFY_ABORTED 0x0004\0"
	.byte	0x1
	.uleb128 0x7cb
	.ascii "MCI_NOTIFY_FAILURE 0x0008\0"
	.byte	0x1
	.uleb128 0x7cd
	.ascii "MCI_NOTIFY __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x7ce
	.ascii "MCI_WAIT __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x7cf
	.ascii "MCI_FROM __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x7d0
	.ascii "MCI_TO __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x7d1
	.ascii "MCI_TRACK __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0x7d3
	.ascii "MCI_OPEN_SHAREABLE __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x7d4
	.ascii "MCI_OPEN_ELEMENT __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x7d5
	.ascii "MCI_OPEN_ALIAS __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0x7d6
	.ascii "MCI_OPEN_ELEMENT_ID __MSABI_LONG(0x00000800)\0"
	.byte	0x1
	.uleb128 0x7d7
	.ascii "MCI_OPEN_TYPE_ID __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0x7d8
	.ascii "MCI_OPEN_TYPE __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0x7da
	.ascii "MCI_SEEK_TO_START __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x7db
	.ascii "MCI_SEEK_TO_END __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x7dd
	.ascii "MCI_STATUS_ITEM __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x7de
	.ascii "MCI_STATUS_START __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x7e0
	.ascii "MCI_STATUS_LENGTH __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x7e1
	.ascii "MCI_STATUS_POSITION __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x7e2
	.ascii "MCI_STATUS_NUMBER_OF_TRACKS __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0x7e3
	.ascii "MCI_STATUS_MODE __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x7e4
	.ascii "MCI_STATUS_MEDIA_PRESENT __MSABI_LONG(0x00000005)\0"
	.byte	0x1
	.uleb128 0x7e5
	.ascii "MCI_STATUS_TIME_FORMAT __MSABI_LONG(0x00000006)\0"
	.byte	0x1
	.uleb128 0x7e6
	.ascii "MCI_STATUS_READY __MSABI_LONG(0x00000007)\0"
	.byte	0x1
	.uleb128 0x7e7
	.ascii "MCI_STATUS_CURRENT_TRACK __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x7e9
	.ascii "MCI_INFO_PRODUCT __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x7ea
	.ascii "MCI_INFO_FILE __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x7eb
	.ascii "MCI_INFO_MEDIA_UPC __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0x7ec
	.ascii "MCI_INFO_MEDIA_IDENTITY __MSABI_LONG(0x00000800)\0"
	.byte	0x1
	.uleb128 0x7ed
	.ascii "MCI_INFO_NAME __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0x7ee
	.ascii "MCI_INFO_COPYRIGHT __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0x7f0
	.ascii "MCI_GETDEVCAPS_ITEM __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x7f2
	.ascii "MCI_GETDEVCAPS_CAN_RECORD __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x7f3
	.ascii "MCI_GETDEVCAPS_HAS_AUDIO __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x7f4
	.ascii "MCI_GETDEVCAPS_HAS_VIDEO __MSABI_LONG(0x00000003)\0"
	.byte	0x1
	.uleb128 0x7f5
	.ascii "MCI_GETDEVCAPS_DEVICE_TYPE __MSABI_LONG(0x00000004)\0"
	.byte	0x1
	.uleb128 0x7f6
	.ascii "MCI_GETDEVCAPS_USES_FILES __MSABI_LONG(0x00000005)\0"
	.byte	0x1
	.uleb128 0x7f7
	.ascii "MCI_GETDEVCAPS_COMPOUND_DEVICE __MSABI_LONG(0x00000006)\0"
	.byte	0x1
	.uleb128 0x7f8
	.ascii "MCI_GETDEVCAPS_CAN_EJECT __MSABI_LONG(0x00000007)\0"
	.byte	0x1
	.uleb128 0x7f9
	.ascii "MCI_GETDEVCAPS_CAN_PLAY __MSABI_LONG(0x00000008)\0"
	.byte	0x1
	.uleb128 0x7fa
	.ascii "MCI_GETDEVCAPS_CAN_SAVE __MSABI_LONG(0x00000009)\0"
	.byte	0x1
	.uleb128 0x7fc
	.ascii "MCI_SYSINFO_QUANTITY __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x7fd
	.ascii "MCI_SYSINFO_OPEN __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x7fe
	.ascii "MCI_SYSINFO_NAME __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0x7ff
	.ascii "MCI_SYSINFO_INSTALLNAME __MSABI_LONG(0x00000800)\0"
	.byte	0x1
	.uleb128 0x801
	.ascii "MCI_SET_DOOR_OPEN __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x802
	.ascii "MCI_SET_DOOR_CLOSED __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x803
	.ascii "MCI_SET_TIME_FORMAT __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0x804
	.ascii "MCI_SET_AUDIO __MSABI_LONG(0x00000800)\0"
	.byte	0x1
	.uleb128 0x805
	.ascii "MCI_SET_VIDEO __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0x806
	.ascii "MCI_SET_ON __MSABI_LONG(0x00002000)\0"
	.byte	0x1
	.uleb128 0x807
	.ascii "MCI_SET_OFF __MSABI_LONG(0x00004000)\0"
	.byte	0x1
	.uleb128 0x809
	.ascii "MCI_SET_AUDIO_ALL __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x80a
	.ascii "MCI_SET_AUDIO_LEFT __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x80b
	.ascii "MCI_SET_AUDIO_RIGHT __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x80d
	.ascii "MCI_BREAK_KEY __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x80e
	.ascii "MCI_BREAK_HWND __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x80f
	.ascii "MCI_BREAK_OFF __MSABI_LONG(0x00000400)\0"
	.byte	0x1
	.uleb128 0x811
	.ascii "MCI_RECORD_INSERT __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x812
	.ascii "MCI_RECORD_OVERWRITE __MSABI_LONG(0x00000200)\0"
	.byte	0x1
	.uleb128 0x814
	.ascii "MCI_SAVE_FILE __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x816
	.ascii "MCI_LOAD_FILE __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x898
	.ascii "MCI_VD_MODE_PARK (MCI_VD_OFFSET + 1)\0"
	.byte	0x1
	.uleb128 0x89a
	.ascii "MCI_VD_MEDIA_CLV (MCI_VD_OFFSET + 2)\0"
	.byte	0x1
	.uleb128 0x89b
	.ascii "MCI_VD_MEDIA_CAV (MCI_VD_OFFSET + 3)\0"
	.byte	0x1
	.uleb128 0x89c
	.ascii "MCI_VD_MEDIA_OTHER (MCI_VD_OFFSET + 4)\0"
	.byte	0x1
	.uleb128 0x89e
	.ascii "MCI_VD_FORMAT_TRACK 0x4001\0"
	.byte	0x1
	.uleb128 0x8a0
	.ascii "MCI_VD_PLAY_REVERSE __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x8a1
	.ascii "MCI_VD_PLAY_FAST __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x8a2
	.ascii "MCI_VD_PLAY_SPEED __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x8a3
	.ascii "MCI_VD_PLAY_SCAN __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x8a4
	.ascii "MCI_VD_PLAY_SLOW __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x8a6
	.ascii "MCI_VD_SEEK_REVERSE __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x8a8
	.ascii "MCI_VD_STATUS_SPEED __MSABI_LONG(0x00004002)\0"
	.byte	0x1
	.uleb128 0x8a9
	.ascii "MCI_VD_STATUS_FORWARD __MSABI_LONG(0x00004003)\0"
	.byte	0x1
	.uleb128 0x8aa
	.ascii "MCI_VD_STATUS_MEDIA_TYPE __MSABI_LONG(0x00004004)\0"
	.byte	0x1
	.uleb128 0x8ab
	.ascii "MCI_VD_STATUS_SIDE __MSABI_LONG(0x00004005)\0"
	.byte	0x1
	.uleb128 0x8ac
	.ascii "MCI_VD_STATUS_DISC_SIZE __MSABI_LONG(0x00004006)\0"
	.byte	0x1
	.uleb128 0x8ae
	.ascii "MCI_VD_GETDEVCAPS_CLV __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x8af
	.ascii "MCI_VD_GETDEVCAPS_CAV __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x8b1
	.ascii "MCI_VD_SPIN_UP __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x8b2
	.ascii "MCI_VD_SPIN_DOWN __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x8b4
	.ascii "MCI_VD_GETDEVCAPS_CAN_REVERSE __MSABI_LONG(0x00004002)\0"
	.byte	0x1
	.uleb128 0x8b5
	.ascii "MCI_VD_GETDEVCAPS_FAST_RATE __MSABI_LONG(0x00004003)\0"
	.byte	0x1
	.uleb128 0x8b6
	.ascii "MCI_VD_GETDEVCAPS_SLOW_RATE __MSABI_LONG(0x00004004)\0"
	.byte	0x1
	.uleb128 0x8b7
	.ascii "MCI_VD_GETDEVCAPS_NORMAL_RATE __MSABI_LONG(0x00004005)\0"
	.byte	0x1
	.uleb128 0x8b9
	.ascii "MCI_VD_STEP_FRAMES __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x8ba
	.ascii "MCI_VD_STEP_REVERSE __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x8bc
	.ascii "MCI_VD_ESCAPE_STRING __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x8d8
	.ascii "MCI_CDA_STATUS_TYPE_TRACK __MSABI_LONG(0x00004001)\0"
	.byte	0x1
	.uleb128 0x8d9
	.ascii "MCI_CDA_TRACK_AUDIO (MCI_CD_OFFSET + 0)\0"
	.byte	0x1
	.uleb128 0x8da
	.ascii "MCI_CDA_TRACK_OTHER (MCI_CD_OFFSET + 1)\0"
	.byte	0x1
	.uleb128 0x8dc
	.ascii "MCI_WAVE_PCM (MCI_WAVE_OFFSET + 0)\0"
	.byte	0x1
	.uleb128 0x8dd
	.ascii "MCI_WAVE_MAPPER (MCI_WAVE_OFFSET + 1)\0"
	.byte	0x1
	.uleb128 0x8df
	.ascii "MCI_WAVE_OPEN_BUFFER __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x8e1
	.ascii "MCI_WAVE_SET_FORMATTAG __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x8e2
	.ascii "MCI_WAVE_SET_CHANNELS __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x8e3
	.ascii "MCI_WAVE_SET_SAMPLESPERSEC __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x8e4
	.ascii "MCI_WAVE_SET_AVGBYTESPERSEC __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x8e5
	.ascii "MCI_WAVE_SET_BLOCKALIGN __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x8e6
	.ascii "MCI_WAVE_SET_BITSPERSAMPLE __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0x8e8
	.ascii "MCI_WAVE_INPUT __MSABI_LONG(0x00400000)\0"
	.byte	0x1
	.uleb128 0x8e9
	.ascii "MCI_WAVE_OUTPUT __MSABI_LONG(0x00800000)\0"
	.byte	0x1
	.uleb128 0x8eb
	.ascii "MCI_WAVE_STATUS_FORMATTAG __MSABI_LONG(0x00004001)\0"
	.byte	0x1
	.uleb128 0x8ec
	.ascii "MCI_WAVE_STATUS_CHANNELS __MSABI_LONG(0x00004002)\0"
	.byte	0x1
	.uleb128 0x8ed
	.ascii "MCI_WAVE_STATUS_SAMPLESPERSEC __MSABI_LONG(0x00004003)\0"
	.byte	0x1
	.uleb128 0x8ee
	.ascii "MCI_WAVE_STATUS_AVGBYTESPERSEC __MSABI_LONG(0x00004004)\0"
	.byte	0x1
	.uleb128 0x8ef
	.ascii "MCI_WAVE_STATUS_BLOCKALIGN __MSABI_LONG(0x00004005)\0"
	.byte	0x1
	.uleb128 0x8f0
	.ascii "MCI_WAVE_STATUS_BITSPERSAMPLE __MSABI_LONG(0x00004006)\0"
	.byte	0x1
	.uleb128 0x8f1
	.ascii "MCI_WAVE_STATUS_LEVEL __MSABI_LONG(0x00004007)\0"
	.byte	0x1
	.uleb128 0x8f3
	.ascii "MCI_WAVE_SET_ANYINPUT __MSABI_LONG(0x04000000)\0"
	.byte	0x1
	.uleb128 0x8f4
	.ascii "MCI_WAVE_SET_ANYOUTPUT __MSABI_LONG(0x08000000)\0"
	.byte	0x1
	.uleb128 0x8f6
	.ascii "MCI_WAVE_GETDEVCAPS_INPUTS __MSABI_LONG(0x00004001)\0"
	.byte	0x1
	.uleb128 0x8f7
	.ascii "MCI_WAVE_GETDEVCAPS_OUTPUTS __MSABI_LONG(0x00004002)\0"
	.byte	0x1
	.uleb128 0x927
	.ascii "MCI_SEQ_DIV_PPQN (0 + MCI_SEQ_OFFSET)\0"
	.byte	0x1
	.uleb128 0x928
	.ascii "MCI_SEQ_DIV_SMPTE_24 (1 + MCI_SEQ_OFFSET)\0"
	.byte	0x1
	.uleb128 0x929
	.ascii "MCI_SEQ_DIV_SMPTE_25 (2 + MCI_SEQ_OFFSET)\0"
	.byte	0x1
	.uleb128 0x92a
	.ascii "MCI_SEQ_DIV_SMPTE_30DROP (3 + MCI_SEQ_OFFSET)\0"
	.byte	0x1
	.uleb128 0x92b
	.ascii "MCI_SEQ_DIV_SMPTE_30 (4 + MCI_SEQ_OFFSET)\0"
	.byte	0x1
	.uleb128 0x92d
	.ascii "MCI_SEQ_FORMAT_SONGPTR 0x4001\0"
	.byte	0x1
	.uleb128 0x92e
	.ascii "MCI_SEQ_FILE 0x4002\0"
	.byte	0x1
	.uleb128 0x92f
	.ascii "MCI_SEQ_MIDI 0x4003\0"
	.byte	0x1
	.uleb128 0x930
	.ascii "MCI_SEQ_SMPTE 0x4004\0"
	.byte	0x1
	.uleb128 0x931
	.ascii "MCI_SEQ_NONE 65533\0"
	.byte	0x1
	.uleb128 0x932
	.ascii "MCI_SEQ_MAPPER 65535\0"
	.byte	0x1
	.uleb128 0x934
	.ascii "MCI_SEQ_STATUS_TEMPO __MSABI_LONG(0x00004002)\0"
	.byte	0x1
	.uleb128 0x935
	.ascii "MCI_SEQ_STATUS_PORT __MSABI_LONG(0x00004003)\0"
	.byte	0x1
	.uleb128 0x936
	.ascii "MCI_SEQ_STATUS_SLAVE __MSABI_LONG(0x00004007)\0"
	.byte	0x1
	.uleb128 0x937
	.ascii "MCI_SEQ_STATUS_MASTER __MSABI_LONG(0x00004008)\0"
	.byte	0x1
	.uleb128 0x938
	.ascii "MCI_SEQ_STATUS_OFFSET __MSABI_LONG(0x00004009)\0"
	.byte	0x1
	.uleb128 0x939
	.ascii "MCI_SEQ_STATUS_DIVTYPE __MSABI_LONG(0x0000400A)\0"
	.byte	0x1
	.uleb128 0x93a
	.ascii "MCI_SEQ_STATUS_NAME __MSABI_LONG(0x0000400B)\0"
	.byte	0x1
	.uleb128 0x93b
	.ascii "MCI_SEQ_STATUS_COPYRIGHT __MSABI_LONG(0x0000400C)\0"
	.byte	0x1
	.uleb128 0x93d
	.ascii "MCI_SEQ_SET_TEMPO __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x93e
	.ascii "MCI_SEQ_SET_PORT __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x93f
	.ascii "MCI_SEQ_SET_SLAVE __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x940
	.ascii "MCI_SEQ_SET_MASTER __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x941
	.ascii "MCI_SEQ_SET_OFFSET __MSABI_LONG(0x01000000)\0"
	.byte	0x1
	.uleb128 0x94e
	.ascii "MCI_ANIM_OPEN_WS __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x94f
	.ascii "MCI_ANIM_OPEN_PARENT __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x950
	.ascii "MCI_ANIM_OPEN_NOSTATIC __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x952
	.ascii "MCI_ANIM_PLAY_SPEED __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x953
	.ascii "MCI_ANIM_PLAY_REVERSE __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x954
	.ascii "MCI_ANIM_PLAY_FAST __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x955
	.ascii "MCI_ANIM_PLAY_SLOW __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x956
	.ascii "MCI_ANIM_PLAY_SCAN __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x958
	.ascii "MCI_ANIM_STEP_REVERSE __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x959
	.ascii "MCI_ANIM_STEP_FRAMES __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x95b
	.ascii "MCI_ANIM_STATUS_SPEED __MSABI_LONG(0x00004001)\0"
	.byte	0x1
	.uleb128 0x95c
	.ascii "MCI_ANIM_STATUS_FORWARD __MSABI_LONG(0x00004002)\0"
	.byte	0x1
	.uleb128 0x95d
	.ascii "MCI_ANIM_STATUS_HWND __MSABI_LONG(0x00004003)\0"
	.byte	0x1
	.uleb128 0x95e
	.ascii "MCI_ANIM_STATUS_HPAL __MSABI_LONG(0x00004004)\0"
	.byte	0x1
	.uleb128 0x95f
	.ascii "MCI_ANIM_STATUS_STRETCH __MSABI_LONG(0x00004005)\0"
	.byte	0x1
	.uleb128 0x961
	.ascii "MCI_ANIM_INFO_TEXT __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x963
	.ascii "MCI_ANIM_GETDEVCAPS_CAN_REVERSE __MSABI_LONG(0x00004001)\0"
	.byte	0x1
	.uleb128 0x964
	.ascii "MCI_ANIM_GETDEVCAPS_FAST_RATE __MSABI_LONG(0x00004002)\0"
	.byte	0x1
	.uleb128 0x965
	.ascii "MCI_ANIM_GETDEVCAPS_SLOW_RATE __MSABI_LONG(0x00004003)\0"
	.byte	0x1
	.uleb128 0x966
	.ascii "MCI_ANIM_GETDEVCAPS_NORMAL_RATE __MSABI_LONG(0x00004004)\0"
	.byte	0x1
	.uleb128 0x967
	.ascii "MCI_ANIM_GETDEVCAPS_PALETTES __MSABI_LONG(0x00004006)\0"
	.byte	0x1
	.uleb128 0x968
	.ascii "MCI_ANIM_GETDEVCAPS_CAN_STRETCH __MSABI_LONG(0x00004007)\0"
	.byte	0x1
	.uleb128 0x969
	.ascii "MCI_ANIM_GETDEVCAPS_MAX_WINDOWS __MSABI_LONG(0x00004008)\0"
	.byte	0x1
	.uleb128 0x96b
	.ascii "MCI_ANIM_REALIZE_NORM __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x96c
	.ascii "MCI_ANIM_REALIZE_BKGD __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x96e
	.ascii "MCI_ANIM_WINDOW_HWND __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x96f
	.ascii "MCI_ANIM_WINDOW_STATE __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x970
	.ascii "MCI_ANIM_WINDOW_TEXT __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x971
	.ascii "MCI_ANIM_WINDOW_ENABLE_STRETCH __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x972
	.ascii "MCI_ANIM_WINDOW_DISABLE_STRETCH __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0x974
	.ascii "MCI_ANIM_WINDOW_DEFAULT __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x976
	.ascii "MCI_ANIM_RECT __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x977
	.ascii "MCI_ANIM_PUT_SOURCE __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x978
	.ascii "MCI_ANIM_PUT_DESTINATION __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x97a
	.ascii "MCI_ANIM_WHERE_SOURCE __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x97b
	.ascii "MCI_ANIM_WHERE_DESTINATION __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x97d
	.ascii "MCI_ANIM_UPDATE_HDC __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x9c8
	.ascii "MCI_OVLY_OPEN_WS __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x9c9
	.ascii "MCI_OVLY_OPEN_PARENT __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x9cb
	.ascii "MCI_OVLY_STATUS_HWND __MSABI_LONG(0x00004001)\0"
	.byte	0x1
	.uleb128 0x9cc
	.ascii "MCI_OVLY_STATUS_STRETCH __MSABI_LONG(0x00004002)\0"
	.byte	0x1
	.uleb128 0x9ce
	.ascii "MCI_OVLY_INFO_TEXT __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x9d0
	.ascii "MCI_OVLY_GETDEVCAPS_CAN_STRETCH __MSABI_LONG(0x00004001)\0"
	.byte	0x1
	.uleb128 0x9d1
	.ascii "MCI_OVLY_GETDEVCAPS_CAN_FREEZE __MSABI_LONG(0x00004002)\0"
	.byte	0x1
	.uleb128 0x9d2
	.ascii "MCI_OVLY_GETDEVCAPS_MAX_WINDOWS __MSABI_LONG(0x00004003)\0"
	.byte	0x1
	.uleb128 0x9d4
	.ascii "MCI_OVLY_WINDOW_HWND __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x9d5
	.ascii "MCI_OVLY_WINDOW_STATE __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x9d6
	.ascii "MCI_OVLY_WINDOW_TEXT __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x9d7
	.ascii "MCI_OVLY_WINDOW_ENABLE_STRETCH __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x9d8
	.ascii "MCI_OVLY_WINDOW_DISABLE_STRETCH __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0x9da
	.ascii "MCI_OVLY_WINDOW_DEFAULT __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x9dc
	.ascii "MCI_OVLY_RECT __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x9dd
	.ascii "MCI_OVLY_PUT_SOURCE __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x9de
	.ascii "MCI_OVLY_PUT_DESTINATION __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x9df
	.ascii "MCI_OVLY_PUT_FRAME __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x9e0
	.ascii "MCI_OVLY_PUT_VIDEO __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x9e2
	.ascii "MCI_OVLY_WHERE_SOURCE __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x9e3
	.ascii "MCI_OVLY_WHERE_DESTINATION __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x9e4
	.ascii "MCI_OVLY_WHERE_FRAME __MSABI_LONG(0x00080000)\0"
	.byte	0x1
	.uleb128 0x9e5
	.ascii "MCI_OVLY_WHERE_VIDEO __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0xa3d
	.ascii "NEWTRANSPARENT 3\0"
	.byte	0x1
	.uleb128 0xa3e
	.ascii "QUERYROPSUPPORT 40\0"
	.byte	0x1
	.uleb128 0xa41
	.ascii "SELECTDIB 41\0"
	.byte	0x1
	.uleb128 0xa42
	.ascii "DIBINDEX(n) MAKELONG((n),0x10FF)\0"
	.byte	0x3
	.uleb128 0xa4c
	.uleb128 0x143
	.byte	0x4
	.byte	0x4
	.file 381 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/nb30.h"
	.byte	0x3
	.uleb128 0x57
	.uleb128 0x17d
	.byte	0x1
	.uleb128 0x7
	.ascii "NCB_INCLUDED \0"
	.byte	0x1
	.uleb128 0xd
	.ascii "NCBNAMSZ 16\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "MAX_LANA 254\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "NAME_FLAGS_MASK 0x87\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "GROUP_NAME 0x80\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "UNIQUE_NAME 0x00\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "REGISTERING 0x00\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "REGISTERED 0x04\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "DEREGISTERED 0x05\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "DUPLICATE 0x06\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "DUPLICATE_DEREG 0x07\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "LISTEN_OUTSTANDING 0x01\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "CALL_PENDING 0x02\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "SESSION_ESTABLISHED 0x03\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "HANGUP_PENDING 0x04\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "HANGUP_COMPLETE 0x05\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "SESSION_ABORTED 0x06\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "ALL_TRANSPORTS \"M\\0\\0\\0\"\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "MS_NBF \"MNBF\"\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "NCBCALL 0x10\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "NCBLISTEN 0x11\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "NCBHANGUP 0x12\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "NCBSEND 0x14\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "NCBRECV 0x15\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "NCBRECVANY 0x16\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "NCBCHAINSEND 0x17\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "NCBDGSEND 0x20\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "NCBDGRECV 0x21\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "NCBDGSENDBC 0x22\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "NCBDGRECVBC 0x23\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "NCBADDNAME 0x30\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "NCBDELNAME 0x31\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "NCBRESET 0x32\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "NCBASTAT 0x33\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "NCBSSTAT 0x34\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "NCBCANCEL 0x35\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "NCBADDGRNAME 0x36\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "NCBENUM 0x37\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "NCBUNLINK 0x70\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "NCBSENDNA 0x71\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "NCBCHAINSENDNA 0x72\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "NCBLANSTALERT 0x73\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "NCBACTION 0x77\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "NCBFINDNAME 0x78\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "NCBTRACE 0x79\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "ASYNCH 0x80\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "NRC_GOODRET 0x00\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "NRC_BUFLEN 0x01\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "NRC_ILLCMD 0x03\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "NRC_CMDTMO 0x05\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "NRC_INCOMP 0x06\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "NRC_BADDR 0x07\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "NRC_SNUMOUT 0x08\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "NRC_NORES 0x09\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "NRC_SCLOSED 0x0a\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "NRC_CMDCAN 0x0b\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "NRC_DUPNAME 0x0d\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "NRC_NAMTFUL 0x0e\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "NRC_ACTSES 0x0f\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "NRC_LOCTFUL 0x11\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "NRC_REMTFUL 0x12\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "NRC_ILLNN 0x13\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "NRC_NOCALL 0x14\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "NRC_NOWILD 0x15\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "NRC_INUSE 0x16\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "NRC_NAMERR 0x17\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "NRC_SABORT 0x18\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "NRC_NAMCONF 0x19\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "NRC_IFBUSY 0x21\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "NRC_TOOMANY 0x22\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "NRC_BRIDGE 0x23\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "NRC_CANOCCR 0x24\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "NRC_CANCEL 0x26\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "NRC_DUPENV 0x30\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "NRC_ENVNOTDEF 0x34\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "NRC_OSRESNOTAV 0x35\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "NRC_MAXAPPS 0x36\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "NRC_NOSAPS 0x37\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "NRC_NORESOURCES 0x38\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "NRC_INVADDRESS 0x39\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "NRC_INVDDID 0x3B\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "NRC_LOCKFAIL 0x3C\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "NRC_OPENERR 0x3f\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "NRC_SYSTEM 0x40\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "NRC_PENDING 0xff\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "NCB_POST void CALLBACK\0"
	.byte	0x4
	.file 382 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/rpc.h"
	.byte	0x3
	.uleb128 0x58
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x3
	.uleb128 0x10
	.uleb128 0x135
	.byte	0x4
	.byte	0x1
	.uleb128 0x14
	.ascii "__RPC_H__ \0"
	.byte	0x3
	.uleb128 0x1a
	.uleb128 0x140
	.byte	0x3
	.uleb128 0x5
	.uleb128 0x8
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x1d
	.ascii "__RPC_WIN64__ \0"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x145
	.byte	0x4
	.byte	0x1
	.uleb128 0x2b
	.ascii "__MIDL_USER_DEFINED \0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "midl_user_allocate MIDL_user_allocate\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "midl_user_free MIDL_user_free\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "RPC_UNICODE_SUPPORTED \0"
	.byte	0x1
	.uleb128 0x34
	.ascii "__RPC_FAR \0"
	.byte	0x1
	.uleb128 0x35
	.ascii "__RPC_API __stdcall\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "__RPC_USER __RPC_API\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "__RPC_STUB __RPC_API\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "RPC_ENTRY __RPC_API\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "RPCRTAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "RPCNSAPI DECLSPEC_IMPORT\0"
	.file 383 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/rpcdce.h"
	.byte	0x3
	.uleb128 0x4a
	.uleb128 0x17f
	.byte	0x1
	.uleb128 0x7
	.ascii "__RPCDCE_H__ \0"
	.byte	0x3
	.uleb128 0x1f
	.uleb128 0x13a
	.byte	0x1
	.uleb128 0x6
	.ascii "__specstrings \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "SAL__deref_in \0"
	.byte	0x1
	.uleb128 0x16
	.ascii "SAL__deref_in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x17
	.ascii "SAL__deref_in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x19
	.ascii "SAL__deref_in_opt \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "SAL__deref_in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "SAL__deref_in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "SAL__deref_opt_in \0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "SAL__deref_opt_in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "SAL__deref_opt_in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x21
	.ascii "SAL__deref_opt_in_opt \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "SAL__deref_opt_in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x23
	.ascii "SAL__deref_opt_in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x25
	.ascii "SAL__out_awcount(expr,size) \0"
	.byte	0x1
	.uleb128 0x26
	.ascii "SAL__in_awcount(expr,size) \0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "SAL__null \0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "SAL__notnull \0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "SAL__maybenull \0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "SAL__readonly \0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "SAL__notreadonly \0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "SAL__maybereadonly \0"
	.byte	0x1
	.uleb128 0x30
	.ascii "SAL__valid \0"
	.byte	0x1
	.uleb128 0x31
	.ascii "SAL__notvalid \0"
	.byte	0x1
	.uleb128 0x32
	.ascii "SAL__maybevalid \0"
	.byte	0x1
	.uleb128 0x33
	.ascii "SAL__readableTo(extent) \0"
	.byte	0x1
	.uleb128 0x34
	.ascii "SAL__elem_readableTo(size) \0"
	.byte	0x1
	.uleb128 0x35
	.ascii "SAL__byte_readableTo(size) \0"
	.byte	0x1
	.uleb128 0x36
	.ascii "SAL__writableTo(size) \0"
	.byte	0x1
	.uleb128 0x37
	.ascii "SAL__elem_writableTo(size) \0"
	.byte	0x1
	.uleb128 0x38
	.ascii "SAL__byte_writableTo(size) \0"
	.byte	0x1
	.uleb128 0x39
	.ascii "SAL__deref \0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "SAL__pre \0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "SAL__post \0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "SAL__precond(expr) \0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "SAL__postcond(expr) \0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "SAL__exceptthat \0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "SAL__execeptthat \0"
	.byte	0x1
	.uleb128 0x40
	.ascii "SAL__inner_success(expr) \0"
	.byte	0x1
	.uleb128 0x41
	.ascii "SAL__inner_checkReturn \0"
	.byte	0x1
	.uleb128 0x42
	.ascii "SAL__inner_typefix(ctype) \0"
	.byte	0x1
	.uleb128 0x43
	.ascii "SAL__inner_override \0"
	.byte	0x1
	.uleb128 0x44
	.ascii "SAL__inner_callback \0"
	.byte	0x1
	.uleb128 0x45
	.ascii "SAL__inner_blocksOn(resource) \0"
	.byte	0x1
	.uleb128 0x46
	.ascii "SAL__inner_fallthrough_dec \0"
	.byte	0x1
	.uleb128 0x47
	.ascii "SAL__inner_fallthrough \0"
	.byte	0x1
	.uleb128 0x48
	.ascii "__refparam \0"
	.byte	0x1
	.uleb128 0x49
	.ascii "SAL__inner_control_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "SAL__inner_data_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "SAL__ecount(size) \0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "SAL__bcount(size) \0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "SAL__in \0"
	.byte	0x1
	.uleb128 0x50
	.ascii "SAL__in_opt \0"
	.byte	0x1
	.uleb128 0x51
	.ascii "SAL__in_nz \0"
	.byte	0x1
	.uleb128 0x52
	.ascii "SAL__in_nz_opt \0"
	.byte	0x1
	.uleb128 0x53
	.ascii "SAL__in_z \0"
	.byte	0x1
	.uleb128 0x54
	.ascii "SAL__in_z_opt \0"
	.byte	0x1
	.uleb128 0x55
	.ascii "SAL__in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x56
	.ascii "SAL__in_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x57
	.ascii "SAL__in_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x58
	.ascii "SAL__in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x59
	.ascii "SAL__in_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "SAL__in_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "SAL__in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "SAL__in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "SAL__in_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "SAL__in_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "SAL__in_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x60
	.ascii "SAL__in_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x62
	.ascii "SAL__out \0"
	.byte	0x1
	.uleb128 0x63
	.ascii "SAL__out_ecount(size) \0"
	.byte	0x1
	.uleb128 0x64
	.ascii "SAL__out_z \0"
	.byte	0x1
	.uleb128 0x65
	.ascii "SAL__out_nz \0"
	.byte	0x1
	.uleb128 0x66
	.ascii "SAL__out_nz_opt \0"
	.byte	0x1
	.uleb128 0x67
	.ascii "SAL__out_z_opt \0"
	.byte	0x1
	.uleb128 0x68
	.ascii "SAL__out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x69
	.ascii "SAL__out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "SAL__out_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "SAL__out_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "SAL__out_ecount_part_z(size,length) \0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "SAL__out_ecount_full_z(size) \0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "SAL__out_bcount(size) \0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "SAL__out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x70
	.ascii "SAL__out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0x71
	.ascii "SAL__out_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x72
	.ascii "SAL__out_bcount_part_z(size,length) \0"
	.byte	0x1
	.uleb128 0x73
	.ascii "SAL__out_bcount_full_z(size) \0"
	.byte	0x1
	.uleb128 0x74
	.ascii "SAL__out_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x76
	.ascii "SAL__inout \0"
	.byte	0x1
	.uleb128 0x77
	.ascii "SAL__inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0x78
	.ascii "SAL__inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0x79
	.ascii "SAL__inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "SAL__inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "SAL__inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "SAL__inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "SAL__inout_z \0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "SAL__inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "SAL__inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x80
	.ascii "SAL__inout_nz \0"
	.byte	0x1
	.uleb128 0x81
	.ascii "SAL__inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x82
	.ascii "SAL__inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x83
	.ascii "SAL__ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x84
	.ascii "SAL__bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x85
	.ascii "SAL__out_opt \0"
	.byte	0x1
	.uleb128 0x86
	.ascii "SAL__out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x87
	.ascii "SAL__out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x88
	.ascii "SAL__out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x89
	.ascii "SAL__out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "SAL__out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "SAL__out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "SAL__out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "SAL__out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "SAL__out_ecount_part_z_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "SAL__out_bcount_part_z_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x90
	.ascii "SAL__out_ecount_full_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x91
	.ascii "SAL__out_bcount_full_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x92
	.ascii "SAL__out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x93
	.ascii "SAL__out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x94
	.ascii "SAL__inout_opt \0"
	.byte	0x1
	.uleb128 0x95
	.ascii "SAL__inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x96
	.ascii "SAL__inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x97
	.ascii "SAL__inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x98
	.ascii "SAL__inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x99
	.ascii "SAL__inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "SAL__inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "SAL__inout_z_opt \0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "SAL__inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "SAL__inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "SAL__inout_nz_opt \0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "SAL__inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "SAL__inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "SAL__deref_ecount(size) \0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "SAL__deref_bcount(size) \0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "SAL__deref_out \0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "SAL__deref_out_ecount(size) \0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "SAL__deref_out_bcount(size) \0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "SAL__deref_out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "SAL__deref_out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "SAL__deref_out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "SAL__deref_out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "SAL__deref_out_z \0"
	.byte	0x1
	.uleb128 0xab
	.ascii "SAL__deref_out_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xac
	.ascii "SAL__deref_out_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xad
	.ascii "SAL__deref_out_nz \0"
	.byte	0x1
	.uleb128 0xae
	.ascii "SAL__deref_out_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "SAL__deref_out_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "SAL__deref_inout \0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "SAL__deref_inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "SAL__deref_inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "SAL__deref_inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "SAL__deref_inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "SAL__deref_inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "SAL__deref_inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "SAL__deref_inout_z \0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "SAL__deref_inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "SAL__deref_inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xba
	.ascii "SAL__deref_inout_nz \0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "SAL__deref_inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "SAL__deref_inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "SAL__deref_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "SAL__deref_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "SAL__deref_out_opt \0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "SAL__deref_out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "SAL__deref_out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "SAL__deref_out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "SAL__deref_out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "SAL__deref_out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "SAL__deref_out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "SAL__deref_out_z_opt \0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "SAL__deref_out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "SAL__deref_out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "SAL__deref_out_nz_opt \0"
	.byte	0x1
	.uleb128 0xca
	.ascii "SAL__deref_out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "SAL__deref_out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "SAL__deref_inout_opt \0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "SAL__deref_inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xce
	.ascii "SAL__deref_inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "SAL__deref_inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "SAL__deref_inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "SAL__deref_inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "SAL__deref_inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "SAL__deref_inout_z_opt \0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "SAL__deref_inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "SAL__deref_inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "SAL__deref_inout_nz_opt \0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "SAL__deref_inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "SAL__deref_inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "SAL__deref_opt_ecount(size) \0"
	.byte	0x1
	.uleb128 0xda
	.ascii "SAL__deref_opt_bcount(size) \0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "SAL__deref_opt_out \0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "SAL__deref_opt_out_z \0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "SAL__deref_opt_out_ecount(size) \0"
	.byte	0x1
	.uleb128 0xde
	.ascii "SAL__deref_opt_out_bcount(size) \0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "SAL__deref_opt_out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "SAL__deref_opt_out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "SAL__deref_opt_out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "SAL__deref_opt_out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "SAL__deref_opt_inout \0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "SAL__deref_opt_inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "SAL__deref_opt_inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "SAL__deref_opt_inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "SAL__deref_opt_inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "SAL__deref_opt_inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "SAL__deref_opt_inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xea
	.ascii "SAL__deref_opt_inout_z \0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "SAL__deref_opt_inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xec
	.ascii "SAL__deref_opt_inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xed
	.ascii "SAL__deref_opt_inout_nz \0"
	.byte	0x1
	.uleb128 0xee
	.ascii "SAL__deref_opt_inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xef
	.ascii "SAL__deref_opt_inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "SAL__deref_opt_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "SAL__deref_opt_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "SAL__deref_opt_out_opt \0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "SAL__deref_opt_out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "SAL__deref_opt_out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "SAL__deref_opt_out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "SAL__deref_opt_out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "SAL__deref_opt_out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "SAL__deref_opt_out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "SAL__deref_opt_out_z_opt \0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "SAL__deref_opt_out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "SAL__deref_opt_out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "SAL__deref_opt_out_nz_opt \0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "SAL__deref_opt_out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "SAL__deref_opt_out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xff
	.ascii "SAL__deref_opt_inout_opt \0"
	.byte	0x1
	.uleb128 0x100
	.ascii "SAL__deref_opt_inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x101
	.ascii "SAL__deref_opt_inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x102
	.ascii "SAL__deref_opt_inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x103
	.ascii "SAL__deref_opt_inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x104
	.ascii "SAL__deref_opt_inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x105
	.ascii "SAL__deref_opt_inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x106
	.ascii "SAL__deref_opt_inout_z_opt \0"
	.byte	0x1
	.uleb128 0x107
	.ascii "SAL__deref_opt_inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x108
	.ascii "SAL__deref_opt_inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x109
	.ascii "SAL__deref_opt_inout_nz_opt \0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "SAL__deref_opt_inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "SAL__deref_opt_inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "SAL__success(expr) \0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "SAL__nullterminated \0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "SAL__nullnullterminated \0"
	.byte	0x1
	.uleb128 0x110
	.ascii "SAL__reserved \0"
	.byte	0x1
	.uleb128 0x111
	.ascii "SAL__checkReturn \0"
	.byte	0x1
	.uleb128 0x112
	.ascii "SAL__typefix(ctype) \0"
	.byte	0x1
	.uleb128 0x113
	.ascii "SAL__override \0"
	.byte	0x1
	.uleb128 0x114
	.ascii "SAL__callback \0"
	.byte	0x1
	.uleb128 0x115
	.ascii "SAL__format_string \0"
	.byte	0x1
	.uleb128 0x116
	.ascii "SAL__blocksOn(resource) \0"
	.byte	0x1
	.uleb128 0x117
	.ascii "SAL__control_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x118
	.ascii "SAL__data_entrypoint(category) \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x26
	.ascii "rpc_binding_handle_t RPC_BINDING_HANDLE\0"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x141
	.byte	0x2
	.uleb128 0x33
	.ascii "DEFINE_GUID\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) EXTERN_C const GUID name\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "DEFINE_OLEGUID(name,l,w1,w2) DEFINE_GUID (name, l, w1, w2, 0xc0, 0, 0, 0, 0, 0, 0, 0x46)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x2b
	.ascii "UUID_DEFINED \0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "uuid_t UUID\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "rpc_binding_vector_t RPC_BINDING_VECTOR\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "uuid_vector_t UUID_VECTOR\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "IFID_DEFINED \0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "RPC_C_BINDING_INFINITE_TIMEOUT 10\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "RPC_C_BINDING_MIN_TIMEOUT 0\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "RPC_C_BINDING_DEFAULT_TIMEOUT 5\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "RPC_C_BINDING_MAX_TIMEOUT 9\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "RPC_C_CANCEL_INFINITE_TIMEOUT -1\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "RPC_C_LISTEN_MAX_CALLS_DEFAULT 1234\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "RPC_C_PROTSEQ_MAX_REQS_DEFAULT 10\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "RPC_C_BIND_TO_ALL_NICS 1\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "RPC_C_USE_INTERNET_PORT 0x1\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "RPC_C_USE_INTRANET_PORT 0x2\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "RPC_C_DONT_FAIL 0x4\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "RPC_C_MQ_TEMPORARY 0x0000\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "RPC_C_MQ_PERMANENT 0x0001\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "RPC_C_MQ_CLEAR_ON_OPEN 0x0002\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "RPC_C_MQ_USE_EXISTING_SECURITY 0x0004\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "RPC_C_MQ_AUTHN_LEVEL_NONE 0x0000\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "RPC_C_MQ_AUTHN_LEVEL_PKT_INTEGRITY 0x0008\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "RPC_C_MQ_AUTHN_LEVEL_PKT_PRIVACY 0x0010\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "RPC_C_OPT_MQ_DELIVERY 1\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "RPC_C_OPT_MQ_PRIORITY 2\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "RPC_C_OPT_MQ_JOURNAL 3\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "RPC_C_OPT_MQ_ACKNOWLEDGE 4\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "RPC_C_OPT_MQ_AUTHN_SERVICE 5\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "RPC_C_OPT_MQ_AUTHN_LEVEL 6\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "RPC_C_OPT_MQ_TIME_TO_REACH_QUEUE 7\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "RPC_C_OPT_MQ_TIME_TO_BE_RECEIVED 8\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "RPC_C_OPT_BINDING_NONCAUSAL 9\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "RPC_C_OPT_SECURITY_CALLBACK 10\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "RPC_C_OPT_UNIQUE_BINDING 11\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "RPC_C_OPT_CALL_TIMEOUT 12\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "RPC_C_OPT_DONT_LINGER 13\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "RPC_C_OPT_MAX_OPTIONS 14\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "RPC_C_MQ_EXPRESS 0\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "RPC_C_MQ_RECOVERABLE 1\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "RPC_C_MQ_JOURNAL_NONE 0\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "RPC_C_MQ_JOURNAL_DEADLETTER 1\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "RPC_C_MQ_JOURNAL_ALWAYS 2\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "RPC_C_FULL_CERT_CHAIN 0x0001\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "RPC_PROTSEQ_VECTOR __MINGW_NAME_AW(RPC_PROTSEQ_VECTOR)\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "RPC_MGR_EPV void\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "RPC_C_STATS_CALLS_IN 0\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "RPC_C_STATS_CALLS_OUT 1\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "RPC_C_STATS_PKTS_IN 2\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "RPC_C_STATS_PKTS_OUT 3\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "RpcBindingFromStringBinding __MINGW_NAME_AW(RpcBindingFromStringBinding)\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "RpcBindingToStringBinding __MINGW_NAME_AW(RpcBindingToStringBinding)\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "RpcStringBindingCompose __MINGW_NAME_AW(RpcStringBindingCompose)\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "RpcStringBindingParse __MINGW_NAME_AW(RpcStringBindingParse)\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "RpcStringFree __MINGW_NAME_AW(RpcStringFree)\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "RpcNetworkIsProtseqValid __MINGW_NAME_AW(RpcNetworkIsProtseqValid)\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "RpcNetworkInqProtseqs __MINGW_NAME_AW(RpcNetworkInqProtseqs)\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "RpcProtseqVectorFree __MINGW_NAME_AW(RpcProtseqVectorFree)\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "RpcServerUseProtseq __MINGW_NAME_AW(RpcServerUseProtseq)\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "RpcServerUseProtseqEx __MINGW_NAME_AW(RpcServerUseProtseqEx)\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "RpcServerUseProtseqEp __MINGW_NAME_AW(RpcServerUseProtseqEp)\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "RpcServerUseProtseqEpEx __MINGW_NAME_AW(RpcServerUseProtseqEpEx)\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "RpcServerUseProtseqIf __MINGW_NAME_AW(RpcServerUseProtseqIf)\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "RpcServerUseProtseqIfEx __MINGW_NAME_AW(RpcServerUseProtseqIfEx)\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "RpcMgmtInqServerPrincName __MINGW_NAME_AW(RpcMgmtInqServerPrincName)\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "RpcServerInqDefaultPrincName __MINGW_NAME_AW(RpcServerInqDefaultPrincName)\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "RpcNsBindingInqEntryName __MINGW_NAME_AW(RpcNsBindingInqEntryName)\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "RPC_C_AUTHN_LEVEL_DEFAULT 0\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "RPC_C_AUTHN_LEVEL_NONE 1\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "RPC_C_AUTHN_LEVEL_CONNECT 2\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "RPC_C_AUTHN_LEVEL_CALL 3\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "RPC_C_AUTHN_LEVEL_PKT 4\0"
	.byte	0x1
	.uleb128 0x109
	.ascii "RPC_C_AUTHN_LEVEL_PKT_INTEGRITY 5\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "RPC_C_AUTHN_LEVEL_PKT_PRIVACY 6\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "RPC_C_IMP_LEVEL_DEFAULT 0\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "RPC_C_IMP_LEVEL_ANONYMOUS 1\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "RPC_C_IMP_LEVEL_IDENTIFY 2\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "RPC_C_IMP_LEVEL_IMPERSONATE 3\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "RPC_C_IMP_LEVEL_DELEGATE 4\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "RPC_C_QOS_IDENTITY_STATIC 0\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "RPC_C_QOS_IDENTITY_DYNAMIC 1\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "RPC_C_QOS_CAPABILITIES_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "RPC_C_QOS_CAPABILITIES_MUTUAL_AUTH 0x1\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "RPC_C_QOS_CAPABILITIES_MAKE_FULLSIC 0x2\0"
	.byte	0x1
	.uleb128 0x118
	.ascii "RPC_C_QOS_CAPABILITIES_ANY_AUTHORITY 0x4\0"
	.byte	0x1
	.uleb128 0x119
	.ascii "RPC_C_QOS_CAPABILITIES_IGNORE_DELEGATE_FAILURE 0x8\0"
	.byte	0x1
	.uleb128 0x11a
	.ascii "RPC_C_QOS_CAPABILITIES_LOCAL_MA_HINT 0x10\0"
	.byte	0x1
	.uleb128 0x11c
	.ascii "RPC_C_PROTECT_LEVEL_DEFAULT (RPC_C_AUTHN_LEVEL_DEFAULT)\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "RPC_C_PROTECT_LEVEL_NONE (RPC_C_AUTHN_LEVEL_NONE)\0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "RPC_C_PROTECT_LEVEL_CONNECT (RPC_C_AUTHN_LEVEL_CONNECT)\0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "RPC_C_PROTECT_LEVEL_CALL (RPC_C_AUTHN_LEVEL_CALL)\0"
	.byte	0x1
	.uleb128 0x120
	.ascii "RPC_C_PROTECT_LEVEL_PKT (RPC_C_AUTHN_LEVEL_PKT)\0"
	.byte	0x1
	.uleb128 0x121
	.ascii "RPC_C_PROTECT_LEVEL_PKT_INTEGRITY (RPC_C_AUTHN_LEVEL_PKT_INTEGRITY)\0"
	.byte	0x1
	.uleb128 0x122
	.ascii "RPC_C_PROTECT_LEVEL_PKT_PRIVACY (RPC_C_AUTHN_LEVEL_PKT_PRIVACY)\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "RPC_C_AUTHN_NONE 0\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "RPC_C_AUTHN_DCE_PRIVATE 1\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "RPC_C_AUTHN_DCE_PUBLIC 2\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "RPC_C_AUTHN_DEC_PUBLIC 4\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "RPC_C_AUTHN_GSS_NEGOTIATE 9\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "RPC_C_AUTHN_WINNT 10\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "RPC_C_AUTHN_GSS_SCHANNEL 14\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "RPC_C_AUTHN_GSS_KERBEROS 16\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "RPC_C_AUTHN_DPA 17\0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "RPC_C_AUTHN_MSN 18\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "RPC_C_AUTHN_DIGEST 21\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "RPC_C_AUTHN_MQ 100\0"
	.byte	0x1
	.uleb128 0x130
	.ascii "RPC_C_AUTHN_DEFAULT __MSABI_LONG(0xFFFFFFFF)\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "RPC_C_NO_CREDENTIALS ((RPC_AUTH_IDENTITY_HANDLE) MAXUINT_PTR)\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "RPC_C_SECURITY_QOS_VERSION __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "RPC_C_SECURITY_QOS_VERSION_1 __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x13f
	.ascii "_AUTH_IDENTITY_DEFINED \0"
	.byte	0x1
	.uleb128 0x141
	.ascii "SEC_WINNT_AUTH_IDENTITY_ANSI 0x1\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "SEC_WINNT_AUTH_IDENTITY_UNICODE 0x2\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "SEC_WINNT_AUTH_IDENTITY __MINGW_NAME_UAW(SEC_WINNT_AUTH_IDENTITY)\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "PSEC_WINNT_AUTH_IDENTITY __MINGW_NAME_UAW(PSEC_WINNT_AUTH_IDENTITY)\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "_SEC_WINNT_AUTH_IDENTITY __MINGW_NAME_UAW(_SEC_WINNT_AUTH_IDENTITY)\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "RPC_C_SECURITY_QOS_VERSION_2 __MSABI_LONG(2)\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "RPC_C_AUTHN_INFO_TYPE_HTTP 1\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "RPC_C_HTTP_AUTHN_TARGET_SERVER 1\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "RPC_C_HTTP_AUTHN_TARGET_PROXY 2\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "RPC_C_HTTP_AUTHN_SCHEME_BASIC 0x00000001\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "RPC_C_HTTP_AUTHN_SCHEME_NTLM 0x00000002\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "RPC_C_HTTP_AUTHN_SCHEME_PASSPORT 0x00000004\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "RPC_C_HTTP_AUTHN_SCHEME_DIGEST 0x00000008\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "RPC_C_HTTP_AUTHN_SCHEME_NEGOTIATE 0x00000010\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "RPC_C_HTTP_AUTHN_SCHEME_CERT 0x00010000\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "RPC_C_HTTP_FLAG_USE_SSL 1\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "RPC_C_HTTP_FLAG_USE_FIRST_AUTH_SCHEME 2\0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "RPC_C_HTTP_FLAG_IGNORE_CERT_CN_INVALID 8\0"
	.byte	0x1
	.uleb128 0x196
	.ascii "RPC_C_SECURITY_QOS_VERSION_3 __MSABI_LONG(3)\0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "RPC_SECURITY_QOS_V2 __MINGW_NAME_UAW(RPC_SECURITY_QOS_V2)\0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "PRPC_SECURITY_QOS_V2 __MINGW_NAME_UAW(PRPC_SECURITY_QOS_V2)\0"
	.byte	0x1
	.uleb128 0x1b3
	.ascii "_RPC_SECURITY_QOS_V2 __MINGW_NAME_UAW(_RPC_SECURITY_QOS_V2)\0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "RPC_HTTP_TRANSPORT_CREDENTIALS __MINGW_NAME_UAW(RPC_HTTP_TRANSPORT_CREDENTIALS)\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "PRPC_HTTP_TRANSPORT_CREDENTIALS __MINGW_NAME_UAW(PRPC_HTTP_TRANSPORT_CREDENTIALS)\0"
	.byte	0x1
	.uleb128 0x1b6
	.ascii "_RPC_HTTP_TRANSPORT_CREDENTIALS __MINGW_NAME_UAW(_RPC_HTTP_TRANSPORT_CREDENTIALS)\0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "RPC_SECURITY_QOS_V3 __MINGW_NAME_UAW(RPC_SECURITY_QOS_V3)\0"
	.byte	0x1
	.uleb128 0x1b8
	.ascii "PRPC_SECURITY_QOS_V3 __MINGW_NAME_UAW(PRPC_SECURITY_QOS_V3)\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "_RPC_SECURITY_QOS_V3 __MINGW_NAME_UAW(_RPC_SECURITY_QOS_V3)\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "RPC_C_AUTHZ_NONE 0\0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "RPC_C_AUTHZ_NAME 1\0"
	.byte	0x1
	.uleb128 0x1c4
	.ascii "RPC_C_AUTHZ_DCE 2\0"
	.byte	0x1
	.uleb128 0x1c5
	.ascii "RPC_C_AUTHZ_DEFAULT 0xffffffff\0"
	.byte	0x1
	.uleb128 0x1dc
	.ascii "RpcBindingInqAuthClient __MINGW_NAME_AW(RpcBindingInqAuthClient)\0"
	.byte	0x1
	.uleb128 0x1dd
	.ascii "RpcBindingInqAuthClientEx __MINGW_NAME_AW(RpcBindingInqAuthClientEx)\0"
	.byte	0x1
	.uleb128 0x1de
	.ascii "RpcBindingInqAuthInfo __MINGW_NAME_AW(RpcBindingInqAuthInfo)\0"
	.byte	0x1
	.uleb128 0x1df
	.ascii "RpcBindingSetAuthInfo __MINGW_NAME_AW(RpcBindingSetAuthInfo)\0"
	.byte	0x1
	.uleb128 0x1e0
	.ascii "RpcServerRegisterAuthInfo __MINGW_NAME_AW(RpcServerRegisterAuthInfo)\0"
	.byte	0x1
	.uleb128 0x1e1
	.ascii "RpcBindingInqAuthInfoEx __MINGW_NAME_AW(RpcBindingInqAuthInfoEx)\0"
	.byte	0x1
	.uleb128 0x1e2
	.ascii "RpcBindingSetAuthInfoEx __MINGW_NAME_AW(RpcBindingSetAuthInfoEx)\0"
	.byte	0x1
	.uleb128 0x1ed
	.ascii "UuidFromString __MINGW_NAME_AW(UuidFromString)\0"
	.byte	0x1
	.uleb128 0x1ee
	.ascii "UuidToString __MINGW_NAME_AW(UuidToString)\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "RpcEpRegisterNoReplace __MINGW_NAME_AW(RpcEpRegisterNoReplace)\0"
	.byte	0x1
	.uleb128 0x1f0
	.ascii "RpcEpRegister __MINGW_NAME_AW(RpcEpRegister)\0"
	.byte	0x1
	.uleb128 0x1f1
	.ascii "DceErrorInqText __MINGW_NAME_AW(DceErrorInqText)\0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "DCE_C_ERROR_STRING_LEN 256\0"
	.byte	0x1
	.uleb128 0x210
	.ascii "RPC_C_EP_ALL_ELTS 0\0"
	.byte	0x1
	.uleb128 0x211
	.ascii "RPC_C_EP_MATCH_BY_IF 1\0"
	.byte	0x1
	.uleb128 0x212
	.ascii "RPC_C_EP_MATCH_BY_OBJ 2\0"
	.byte	0x1
	.uleb128 0x213
	.ascii "RPC_C_EP_MATCH_BY_BOTH 3\0"
	.byte	0x1
	.uleb128 0x215
	.ascii "RPC_C_VERS_ALL 1\0"
	.byte	0x1
	.uleb128 0x216
	.ascii "RPC_C_VERS_COMPATIBLE 2\0"
	.byte	0x1
	.uleb128 0x217
	.ascii "RPC_C_VERS_EXACT 3\0"
	.byte	0x1
	.uleb128 0x218
	.ascii "RPC_C_VERS_MAJOR_ONLY 4\0"
	.byte	0x1
	.uleb128 0x219
	.ascii "RPC_C_VERS_UPTO 5\0"
	.byte	0x1
	.uleb128 0x21b
	.ascii "RpcMgmtEpEltInqNext __MINGW_NAME_AW(RpcMgmtEpEltInqNext)\0"
	.byte	0x1
	.uleb128 0x225
	.ascii "RPC_C_MGMT_INQ_IF_IDS 0\0"
	.byte	0x1
	.uleb128 0x226
	.ascii "RPC_C_MGMT_INQ_PRINC_NAME 1\0"
	.byte	0x1
	.uleb128 0x227
	.ascii "RPC_C_MGMT_INQ_STATS 2\0"
	.byte	0x1
	.uleb128 0x228
	.ascii "RPC_C_MGMT_IS_SERVER_LISTEN 3\0"
	.byte	0x1
	.uleb128 0x229
	.ascii "RPC_C_MGMT_STOP_SERVER_LISTEN 4\0"
	.byte	0x1
	.uleb128 0x22d
	.ascii "RPC_C_PARM_MAX_PACKET_LENGTH 1\0"
	.byte	0x1
	.uleb128 0x22e
	.ascii "RPC_C_PARM_BUFFER_LENGTH 2\0"
	.byte	0x1
	.uleb128 0x230
	.ascii "RPC_IF_AUTOLISTEN 0x0001\0"
	.byte	0x1
	.uleb128 0x231
	.ascii "RPC_IF_OLE 0x0002\0"
	.byte	0x1
	.uleb128 0x232
	.ascii "RPC_IF_ALLOW_UNKNOWN_AUTHORITY 0x0004\0"
	.byte	0x1
	.uleb128 0x233
	.ascii "RPC_IF_ALLOW_SECURE_ONLY 0x0008\0"
	.byte	0x1
	.uleb128 0x234
	.ascii "RPC_IF_ALLOW_CALLBACKS_WITH_NO_AUTH 0x0010\0"
	.byte	0x1
	.uleb128 0x235
	.ascii "RPC_IF_ALLOW_LOCAL_ONLY 0x0020\0"
	.byte	0x1
	.uleb128 0x236
	.ascii "RPC_IF_SEC_NO_CACHE 0x0040\0"
	.file 384 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/rpcdcep.h"
	.byte	0x3
	.uleb128 0x26f
	.uleb128 0x180
	.byte	0x1
	.uleb128 0x7
	.ascii "__RPCDCEP_H__ \0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "RPC_CONTEXT_HANDLE_DEFAULT_GUARD ((void *) -4083)\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "RPC_CONTEXT_HANDLE_DEFAULT_FLAGS __MSABI_LONG(0x00000000U)\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "RPC_CONTEXT_HANDLE_FLAGS __MSABI_LONG(0x30000000U)\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "RPC_CONTEXT_HANDLE_SERIALIZE __MSABI_LONG(0x10000000U)\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "RPC_CONTEXT_HANDLE_DONT_SERIALIZE __MSABI_LONG(0x20000000U)\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "RPC_NCA_FLAGS_DEFAULT 0x00000000\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "RPC_NCA_FLAGS_IDEMPOTENT 0x00000001\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "RPC_NCA_FLAGS_BROADCAST 0x00000002\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "RPC_NCA_FLAGS_MAYBE 0x00000004\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "RPC_BUFFER_COMPLETE 0x00001000\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "RPC_BUFFER_PARTIAL 0x00002000\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "RPC_BUFFER_EXTRA 0x00004000\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "RPC_BUFFER_ASYNC 0x00008000\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "RPC_BUFFER_NONOTIFY 0x00010000\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "RPCFLG_MESSAGE __MSABI_LONG(0x01000000U)\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "RPCFLG_AUTO_COMPLETE __MSABI_LONG(0x08000000U)\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "RPCFLG_LOCAL_CALL __MSABI_LONG(0x10000000U)\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "RPCFLG_INPUT_SYNCHRONOUS __MSABI_LONG(0x20000000U)\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "RPCFLG_ASYNCHRONOUS __MSABI_LONG(0x40000000U)\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "RPCFLG_NON_NDR __MSABI_LONG(0x80000000U)\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "RPCFLG_HAS_MULTI_SYNTAXES __MSABI_LONG(0x02000000U)\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "RPCFLG_HAS_CALLBACK __MSABI_LONG(0x04000000U)\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "RPC_FLAGS_VALID_BIT 0x00008000\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "NT351_INTERFACE_SIZE 0x40\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "RPC_INTERFACE_HAS_PIPES 0x0001\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "I_RpcNsBindingSetEntryName __MINGW_NAME_AW(I_RpcNsBindingSetEntryName)\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "I_RpcServerUseProtseqEp2 __MINGW_NAME_AW(I_RpcServerUseProtseqEp2)\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "I_RpcServerUseProtseq2 __MINGW_NAME_AW(I_RpcServerUseProtseq2)\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "I_RpcBindingInqDynamicEndpoint __MINGW_NAME_AW(I_RpcBindingInqDynamicEndpoint)\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "TRANSPORT_TYPE_CN 0x01\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "TRANSPORT_TYPE_DG 0x02\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "TRANSPORT_TYPE_LPC 0x04\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "TRANSPORT_TYPE_WMSG 0x08\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "RPC_P_ADDR_FORMAT_TCP_IPV4 1\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "RPC_P_ADDR_FORMAT_TCP_IPV6 2\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "I_RpcServerUnregisterEndpoint __MINGW_NAME_AW(I_RpcServerUnregisterEndpoint)\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "RPC_PROXY_CONNECTION_TYPE_IN_PROXY 0\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "RPC_PROXY_CONNECTION_TYPE_OUT_PROXY 1\0"
	.byte	0x4
	.byte	0x4
	.file 385 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/rpcnsi.h"
	.byte	0x3
	.uleb128 0x4c
	.uleb128 0x181
	.byte	0x1
	.uleb128 0x7
	.ascii "__RPCNSI_H__ \0"
	.byte	0x1
	.uleb128 0xd
	.ascii "RPC_C_NS_SYNTAX_DEFAULT 0\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "RPC_C_NS_SYNTAX_DCE 3\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "RPC_C_PROFILE_DEFAULT_ELT 0\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "RPC_C_PROFILE_ALL_ELT 1\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "RPC_C_PROFILE_ALL_ELTS RPC_C_PROFILE_ALL_ELT\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "RPC_C_PROFILE_MATCH_BY_IF 2\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "RPC_C_PROFILE_MATCH_BY_MBR 3\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "RPC_C_PROFILE_MATCH_BY_BOTH 4\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "RPC_C_NS_DEFAULT_EXP_AGE -1\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "RpcNsBindingLookupBegin __MINGW_NAME_AW(RpcNsBindingLookupBegin)\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "RpcNsBindingImportBegin __MINGW_NAME_AW(RpcNsBindingImportBegin)\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "RpcNsBindingExport __MINGW_NAME_AW(RpcNsBindingExport)\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "RpcNsBindingUnexport __MINGW_NAME_AW(RpcNsBindingUnexport)\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "RpcNsGroupDelete __MINGW_NAME_AW(RpcNsGroupDelete)\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "RpcNsGroupMbrAdd __MINGW_NAME_AW(RpcNsGroupMbrAdd)\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "RpcNsGroupMbrRemove __MINGW_NAME_AW(RpcNsGroupMbrRemove)\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "RpcNsGroupMbrInqBegin __MINGW_NAME_AW(RpcNsGroupMbrInqBegin)\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "RpcNsGroupMbrInqNext __MINGW_NAME_AW(RpcNsGroupMbrInqNext)\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "RpcNsEntryExpandName __MINGW_NAME_AW(RpcNsEntryExpandName)\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "RpcNsEntryObjectInqBegin __MINGW_NAME_AW(RpcNsEntryObjectInqBegin)\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "RpcNsMgmtBindingUnexport __MINGW_NAME_AW(RpcNsMgmtBindingUnexport)\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "RpcNsMgmtEntryCreate __MINGW_NAME_AW(RpcNsMgmtEntryCreate)\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "RpcNsMgmtEntryDelete __MINGW_NAME_AW(RpcNsMgmtEntryDelete)\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "RpcNsMgmtEntryInqIfIds __MINGW_NAME_AW(RpcNsMgmtEntryInqIfIds)\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "RpcNsProfileDelete __MINGW_NAME_AW(RpcNsProfileDelete)\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "RpcNsProfileEltAdd __MINGW_NAME_AW(RpcNsProfileEltAdd)\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "RpcNsProfileEltRemove __MINGW_NAME_AW(RpcNsProfileEltRemove)\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "RpcNsProfileEltInqBegin __MINGW_NAME_AW(RpcNsProfileEltInqBegin)\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "RpcNsProfileEltInqNext __MINGW_NAME_AW(RpcNsProfileEltInqNext)\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "RpcNsBindingExportPnP __MINGW_NAME_AW(RpcNsBindingExportPnP)\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "RpcNsBindingUnexportPnP __MINGW_NAME_AW(RpcNsBindingUnexportPnP)\0"
	.byte	0x4
	.file 386 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/rpcnterr.h"
	.byte	0x3
	.uleb128 0x4e
	.uleb128 0x182
	.byte	0x1
	.uleb128 0x7
	.ascii "__RPCNTERR_H__ \0"
	.byte	0x1
	.uleb128 0x9
	.ascii "RPC_S_OK ERROR_SUCCESS\0"
	.byte	0x1
	.uleb128 0xa
	.ascii "RPC_S_INVALID_ARG ERROR_INVALID_PARAMETER\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "RPC_S_OUT_OF_MEMORY ERROR_OUTOFMEMORY\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "RPC_S_OUT_OF_THREADS ERROR_MAX_THRDS_REACHED\0"
	.byte	0x1
	.uleb128 0xd
	.ascii "RPC_S_INVALID_LEVEL ERROR_INVALID_PARAMETER\0"
	.byte	0x1
	.uleb128 0xe
	.ascii "RPC_S_BUFFER_TOO_SMALL ERROR_INSUFFICIENT_BUFFER\0"
	.byte	0x1
	.uleb128 0xf
	.ascii "RPC_S_INVALID_SECURITY_DESC ERROR_INVALID_SECURITY_DESCR\0"
	.byte	0x1
	.uleb128 0x10
	.ascii "RPC_S_ACCESS_DENIED ERROR_ACCESS_DENIED\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "RPC_S_SERVER_OUT_OF_MEMORY ERROR_NOT_ENOUGH_SERVER_MEMORY\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "RPC_S_ASYNC_CALL_PENDING ERROR_IO_PENDING\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "RPC_S_UNKNOWN_PRINCIPAL ERROR_NONE_MAPPED\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "RPC_S_TIMEOUT ERROR_TIMEOUT\0"
	.byte	0x1
	.uleb128 0x16
	.ascii "RPC_X_NO_MEMORY RPC_S_OUT_OF_MEMORY\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "RPC_X_INVALID_BOUND RPC_S_INVALID_BOUND\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "RPC_X_INVALID_TAG RPC_S_INVALID_TAG\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "RPC_X_ENUM_VALUE_TOO_LARGE RPC_X_ENUM_VALUE_OUT_OF_RANGE\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "RPC_X_SS_CONTEXT_MISMATCH ERROR_INVALID_HANDLE\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "RPC_X_INVALID_BUFFER ERROR_INVALID_USER_BUFFER\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "RPC_X_PIPE_APP_MEMORY ERROR_OUTOFMEMORY\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "RPC_X_INVALID_PIPE_OPERATION RPC_X_WRONG_PIPE_ORDER\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x55
	.ascii "RpcTryExcept __try {\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "RpcExcept(expr) } __except(expr) {\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "RpcEndExcept }\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "RpcTryFinally __try {\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "RpcFinally } __finally {\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "RpcEndFinally }\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "RpcExceptionCode() GetExceptionCode()\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "RpcAbnormalTermination() AbnormalTermination()\0"
	.file 387 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/rpcasync.h"
	.byte	0x3
	.uleb128 0x60
	.uleb128 0x183
	.byte	0x1
	.uleb128 0x7
	.ascii "__RPCASYNC_H__ \0"
	.byte	0x3
	.uleb128 0xb
	.uleb128 0x145
	.byte	0x4
	.byte	0x1
	.uleb128 0x12
	.ascii "RPC_ASYNC_VERSION_1_0 sizeof(RPC_ASYNC_STATE)\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "RPC_C_NOTIFY_ON_SEND_COMPLETE 0x1\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "RPC_C_INFINITE_TIMEOUT INFINITE\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "RpcAsyncGetCallHandle(pAsync) (((PRPC_ASYNC_STATE) pAsync)->RuntimeInfo)\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "MaxNumberOfEEInfoParams 4\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "RPC_EEINFO_VERSION 1\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "EEInfoPreviousRecordsMissing 1\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "EEInfoNextRecordsMissing 2\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "EEInfoUseFileTime 4\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "EEInfoGCCOM 11\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "EEInfoGCFRS 12\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "RPC_CALL_ATTRIBUTES_VERSION (1)\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "RPC_QUERY_SERVER_PRINCIPAL_NAME (2)\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "RPC_QUERY_CLIENT_PRINCIPAL_NAME (4)\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "RPC_CALL_ATTRIBUTES_V1 __MINGW_NAME_UAW(RPC_CALL_ATTRIBUTES_V1)\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "RpcServerInqCallAttributes __MINGW_NAME_AW(RpcServerInqCallAttributes)\0"
	.byte	0x3
	.uleb128 0x14b
	.uleb128 0x143
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x64
	.uleb128 0x143
	.byte	0x4
	.byte	0x4
	.file 388 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/shellapi.h"
	.byte	0x3
	.uleb128 0x59
	.uleb128 0x184
	.byte	0x1
	.uleb128 0x8
	.ascii "_INC_SHELLAPI \0"
	.byte	0x3
	.uleb128 0xb
	.uleb128 0x13a
	.byte	0x1
	.uleb128 0x6
	.ascii "__specstrings \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "SAL__deref_in \0"
	.byte	0x1
	.uleb128 0x16
	.ascii "SAL__deref_in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x17
	.ascii "SAL__deref_in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x19
	.ascii "SAL__deref_in_opt \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "SAL__deref_in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "SAL__deref_in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "SAL__deref_opt_in \0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "SAL__deref_opt_in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "SAL__deref_opt_in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x21
	.ascii "SAL__deref_opt_in_opt \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "SAL__deref_opt_in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x23
	.ascii "SAL__deref_opt_in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x25
	.ascii "SAL__out_awcount(expr,size) \0"
	.byte	0x1
	.uleb128 0x26
	.ascii "SAL__in_awcount(expr,size) \0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "SAL__null \0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "SAL__notnull \0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "SAL__maybenull \0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "SAL__readonly \0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "SAL__notreadonly \0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "SAL__maybereadonly \0"
	.byte	0x1
	.uleb128 0x30
	.ascii "SAL__valid \0"
	.byte	0x1
	.uleb128 0x31
	.ascii "SAL__notvalid \0"
	.byte	0x1
	.uleb128 0x32
	.ascii "SAL__maybevalid \0"
	.byte	0x1
	.uleb128 0x33
	.ascii "SAL__readableTo(extent) \0"
	.byte	0x1
	.uleb128 0x34
	.ascii "SAL__elem_readableTo(size) \0"
	.byte	0x1
	.uleb128 0x35
	.ascii "SAL__byte_readableTo(size) \0"
	.byte	0x1
	.uleb128 0x36
	.ascii "SAL__writableTo(size) \0"
	.byte	0x1
	.uleb128 0x37
	.ascii "SAL__elem_writableTo(size) \0"
	.byte	0x1
	.uleb128 0x38
	.ascii "SAL__byte_writableTo(size) \0"
	.byte	0x1
	.uleb128 0x39
	.ascii "SAL__deref \0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "SAL__pre \0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "SAL__post \0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "SAL__precond(expr) \0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "SAL__postcond(expr) \0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "SAL__exceptthat \0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "SAL__execeptthat \0"
	.byte	0x1
	.uleb128 0x40
	.ascii "SAL__inner_success(expr) \0"
	.byte	0x1
	.uleb128 0x41
	.ascii "SAL__inner_checkReturn \0"
	.byte	0x1
	.uleb128 0x42
	.ascii "SAL__inner_typefix(ctype) \0"
	.byte	0x1
	.uleb128 0x43
	.ascii "SAL__inner_override \0"
	.byte	0x1
	.uleb128 0x44
	.ascii "SAL__inner_callback \0"
	.byte	0x1
	.uleb128 0x45
	.ascii "SAL__inner_blocksOn(resource) \0"
	.byte	0x1
	.uleb128 0x46
	.ascii "SAL__inner_fallthrough_dec \0"
	.byte	0x1
	.uleb128 0x47
	.ascii "SAL__inner_fallthrough \0"
	.byte	0x1
	.uleb128 0x48
	.ascii "__refparam \0"
	.byte	0x1
	.uleb128 0x49
	.ascii "SAL__inner_control_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "SAL__inner_data_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "SAL__ecount(size) \0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "SAL__bcount(size) \0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "SAL__in \0"
	.byte	0x1
	.uleb128 0x50
	.ascii "SAL__in_opt \0"
	.byte	0x1
	.uleb128 0x51
	.ascii "SAL__in_nz \0"
	.byte	0x1
	.uleb128 0x52
	.ascii "SAL__in_nz_opt \0"
	.byte	0x1
	.uleb128 0x53
	.ascii "SAL__in_z \0"
	.byte	0x1
	.uleb128 0x54
	.ascii "SAL__in_z_opt \0"
	.byte	0x1
	.uleb128 0x55
	.ascii "SAL__in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x56
	.ascii "SAL__in_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x57
	.ascii "SAL__in_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x58
	.ascii "SAL__in_bcount(size) \0"
	.byte	0x1
	.uleb128 0x59
	.ascii "SAL__in_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "SAL__in_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "SAL__in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "SAL__in_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "SAL__in_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "SAL__in_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "SAL__in_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x60
	.ascii "SAL__in_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x62
	.ascii "SAL__out \0"
	.byte	0x1
	.uleb128 0x63
	.ascii "SAL__out_ecount(size) \0"
	.byte	0x1
	.uleb128 0x64
	.ascii "SAL__out_z \0"
	.byte	0x1
	.uleb128 0x65
	.ascii "SAL__out_nz \0"
	.byte	0x1
	.uleb128 0x66
	.ascii "SAL__out_nz_opt \0"
	.byte	0x1
	.uleb128 0x67
	.ascii "SAL__out_z_opt \0"
	.byte	0x1
	.uleb128 0x68
	.ascii "SAL__out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x69
	.ascii "SAL__out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "SAL__out_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "SAL__out_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "SAL__out_ecount_part_z(size,length) \0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "SAL__out_ecount_full_z(size) \0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "SAL__out_bcount(size) \0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "SAL__out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x70
	.ascii "SAL__out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0x71
	.ascii "SAL__out_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x72
	.ascii "SAL__out_bcount_part_z(size,length) \0"
	.byte	0x1
	.uleb128 0x73
	.ascii "SAL__out_bcount_full_z(size) \0"
	.byte	0x1
	.uleb128 0x74
	.ascii "SAL__out_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x76
	.ascii "SAL__inout \0"
	.byte	0x1
	.uleb128 0x77
	.ascii "SAL__inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0x78
	.ascii "SAL__inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0x79
	.ascii "SAL__inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "SAL__inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "SAL__inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "SAL__inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "SAL__inout_z \0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "SAL__inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "SAL__inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0x80
	.ascii "SAL__inout_nz \0"
	.byte	0x1
	.uleb128 0x81
	.ascii "SAL__inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0x82
	.ascii "SAL__inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0x83
	.ascii "SAL__ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x84
	.ascii "SAL__bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x85
	.ascii "SAL__out_opt \0"
	.byte	0x1
	.uleb128 0x86
	.ascii "SAL__out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x87
	.ascii "SAL__out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x88
	.ascii "SAL__out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x89
	.ascii "SAL__out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "SAL__out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "SAL__out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "SAL__out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "SAL__out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "SAL__out_ecount_part_z_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "SAL__out_bcount_part_z_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x90
	.ascii "SAL__out_ecount_full_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x91
	.ascii "SAL__out_bcount_full_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x92
	.ascii "SAL__out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x93
	.ascii "SAL__out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x94
	.ascii "SAL__inout_opt \0"
	.byte	0x1
	.uleb128 0x95
	.ascii "SAL__inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x96
	.ascii "SAL__inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x97
	.ascii "SAL__inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x98
	.ascii "SAL__inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x99
	.ascii "SAL__inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "SAL__inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "SAL__inout_z_opt \0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "SAL__inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "SAL__inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "SAL__inout_nz_opt \0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "SAL__inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "SAL__inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "SAL__deref_ecount(size) \0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "SAL__deref_bcount(size) \0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "SAL__deref_out \0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "SAL__deref_out_ecount(size) \0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "SAL__deref_out_bcount(size) \0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "SAL__deref_out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "SAL__deref_out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "SAL__deref_out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "SAL__deref_out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "SAL__deref_out_z \0"
	.byte	0x1
	.uleb128 0xab
	.ascii "SAL__deref_out_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xac
	.ascii "SAL__deref_out_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xad
	.ascii "SAL__deref_out_nz \0"
	.byte	0x1
	.uleb128 0xae
	.ascii "SAL__deref_out_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "SAL__deref_out_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "SAL__deref_inout \0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "SAL__deref_inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "SAL__deref_inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "SAL__deref_inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "SAL__deref_inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "SAL__deref_inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "SAL__deref_inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "SAL__deref_inout_z \0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "SAL__deref_inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "SAL__deref_inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xba
	.ascii "SAL__deref_inout_nz \0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "SAL__deref_inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "SAL__deref_inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "SAL__deref_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "SAL__deref_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "SAL__deref_out_opt \0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "SAL__deref_out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "SAL__deref_out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "SAL__deref_out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "SAL__deref_out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "SAL__deref_out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "SAL__deref_out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "SAL__deref_out_z_opt \0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "SAL__deref_out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "SAL__deref_out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "SAL__deref_out_nz_opt \0"
	.byte	0x1
	.uleb128 0xca
	.ascii "SAL__deref_out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "SAL__deref_out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "SAL__deref_inout_opt \0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "SAL__deref_inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xce
	.ascii "SAL__deref_inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "SAL__deref_inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "SAL__deref_inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "SAL__deref_inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "SAL__deref_inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "SAL__deref_inout_z_opt \0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "SAL__deref_inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "SAL__deref_inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "SAL__deref_inout_nz_opt \0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "SAL__deref_inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "SAL__deref_inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "SAL__deref_opt_ecount(size) \0"
	.byte	0x1
	.uleb128 0xda
	.ascii "SAL__deref_opt_bcount(size) \0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "SAL__deref_opt_out \0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "SAL__deref_opt_out_z \0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "SAL__deref_opt_out_ecount(size) \0"
	.byte	0x1
	.uleb128 0xde
	.ascii "SAL__deref_opt_out_bcount(size) \0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "SAL__deref_opt_out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "SAL__deref_opt_out_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "SAL__deref_opt_out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "SAL__deref_opt_out_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "SAL__deref_opt_inout \0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "SAL__deref_opt_inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "SAL__deref_opt_inout_bcount(size) \0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "SAL__deref_opt_inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "SAL__deref_opt_inout_bcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "SAL__deref_opt_inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "SAL__deref_opt_inout_bcount_full(size) \0"
	.byte	0x1
	.uleb128 0xea
	.ascii "SAL__deref_opt_inout_z \0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "SAL__deref_opt_inout_ecount_z(size) \0"
	.byte	0x1
	.uleb128 0xec
	.ascii "SAL__deref_opt_inout_bcount_z(size) \0"
	.byte	0x1
	.uleb128 0xed
	.ascii "SAL__deref_opt_inout_nz \0"
	.byte	0x1
	.uleb128 0xee
	.ascii "SAL__deref_opt_inout_ecount_nz(size) \0"
	.byte	0x1
	.uleb128 0xef
	.ascii "SAL__deref_opt_inout_bcount_nz(size) \0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "SAL__deref_opt_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "SAL__deref_opt_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "SAL__deref_opt_out_opt \0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "SAL__deref_opt_out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "SAL__deref_opt_out_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "SAL__deref_opt_out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "SAL__deref_opt_out_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "SAL__deref_opt_out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "SAL__deref_opt_out_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "SAL__deref_opt_out_z_opt \0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "SAL__deref_opt_out_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "SAL__deref_opt_out_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "SAL__deref_opt_out_nz_opt \0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "SAL__deref_opt_out_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "SAL__deref_opt_out_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0xff
	.ascii "SAL__deref_opt_inout_opt \0"
	.byte	0x1
	.uleb128 0x100
	.ascii "SAL__deref_opt_inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x101
	.ascii "SAL__deref_opt_inout_bcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x102
	.ascii "SAL__deref_opt_inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x103
	.ascii "SAL__deref_opt_inout_bcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x104
	.ascii "SAL__deref_opt_inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x105
	.ascii "SAL__deref_opt_inout_bcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x106
	.ascii "SAL__deref_opt_inout_z_opt \0"
	.byte	0x1
	.uleb128 0x107
	.ascii "SAL__deref_opt_inout_ecount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x108
	.ascii "SAL__deref_opt_inout_bcount_z_opt(size) \0"
	.byte	0x1
	.uleb128 0x109
	.ascii "SAL__deref_opt_inout_nz_opt \0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "SAL__deref_opt_inout_ecount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "SAL__deref_opt_inout_bcount_nz_opt(size) \0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "SAL__success(expr) \0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "SAL__nullterminated \0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "SAL__nullnullterminated \0"
	.byte	0x1
	.uleb128 0x110
	.ascii "SAL__reserved \0"
	.byte	0x1
	.uleb128 0x111
	.ascii "SAL__checkReturn \0"
	.byte	0x1
	.uleb128 0x112
	.ascii "SAL__typefix(ctype) \0"
	.byte	0x1
	.uleb128 0x113
	.ascii "SAL__override \0"
	.byte	0x1
	.uleb128 0x114
	.ascii "SAL__callback \0"
	.byte	0x1
	.uleb128 0x115
	.ascii "SAL__format_string \0"
	.byte	0x1
	.uleb128 0x116
	.ascii "SAL__blocksOn(resource) \0"
	.byte	0x1
	.uleb128 0x117
	.ascii "SAL__control_entrypoint(category) \0"
	.byte	0x1
	.uleb128 0x118
	.ascii "SAL__data_entrypoint(category) \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0xf
	.ascii "WINSHELLAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "SHSTDAPI EXTERN_C DECLSPEC_IMPORT HRESULT STDAPICALLTYPE\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "SHSTDAPI_(type) EXTERN_C DECLSPEC_IMPORT type STDAPICALLTYPE\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "SHDOCAPI EXTERN_C DECLSPEC_IMPORT HRESULT STDAPICALLTYPE\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "SHDOCAPI_(type) EXTERN_C DECLSPEC_IMPORT type STDAPICALLTYPE\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "DragQueryFile __MINGW_NAME_AW(DragQueryFile)\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "ShellExecute __MINGW_NAME_AW(ShellExecute)\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "FindExecutable __MINGW_NAME_AW(FindExecutable)\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "ShellAbout __MINGW_NAME_AW(ShellAbout)\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "ExtractAssociatedIcon __MINGW_NAME_AW(ExtractAssociatedIcon)\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "ExtractAssociatedIconEx __MINGW_NAME_AW(ExtractAssociatedIconEx)\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "ExtractIcon __MINGW_NAME_AW(ExtractIcon)\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "ABM_NEW 0x00000000\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "ABM_REMOVE 0x00000001\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "ABM_QUERYPOS 0x00000002\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "ABM_SETPOS 0x00000003\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "ABM_GETSTATE 0x00000004\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "ABM_GETTASKBARPOS 0x00000005\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "ABM_ACTIVATE 0x00000006\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "ABM_GETAUTOHIDEBAR 0x00000007\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "ABM_SETAUTOHIDEBAR 0x00000008\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "ABM_WINDOWPOSCHANGED 0x0000009\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "ABM_SETSTATE 0x0000000a\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "ABN_STATECHANGE 0x0000000\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "ABN_POSCHANGED 0x0000001\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "ABN_FULLSCREENAPP 0x0000002\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "ABN_WINDOWARRANGE 0x0000003\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "ABS_AUTOHIDE 0x0000001\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "ABS_ALWAYSONTOP 0x0000002\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "ABE_LEFT 0\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "ABE_TOP 1\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "ABE_RIGHT 2\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "ABE_BOTTOM 3\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "DoEnvironmentSubst __MINGW_NAME_AW(DoEnvironmentSubst)\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "ExtractIconEx __MINGW_NAME_AW(ExtractIconEx)\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "EIRESID(x) (-1 * (int)(x))\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "FO_MOVE 0x1\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "FO_COPY 0x2\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "FO_DELETE 0x3\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "FO_RENAME 0x4\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "FOF_MULTIDESTFILES 0x1\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "FOF_CONFIRMMOUSE 0x2\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "FOF_SILENT 0x4\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "FOF_RENAMEONCOLLISION 0x8\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "FOF_NOCONFIRMATION 0x10\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "FOF_WANTMAPPINGHANDLE 0x20\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "FOF_ALLOWUNDO 0x40\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "FOF_FILESONLY 0x80\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "FOF_SIMPLEPROGRESS 0x100\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "FOF_NOCONFIRMMKDIR 0x200\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "FOF_NOERRORUI 0x400\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "FOF_NOCOPYSECURITYATTRIBS 0x800\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "FOF_NORECURSION 0x1000\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "FOF_NO_CONNECTED_ELEMENTS 0x2000\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "FOF_WANTNUKEWARNING 0x4000\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "FOF_NORECURSEREPARSE 0x8000\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "FOF_NO_UI (FOF_SILENT | FOF_NOCONFIRMATION | FOF_NOERRORUI | FOF_NOCONFIRMMKDIR)\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "PO_DELETE 0x0013\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "PO_RENAME 0x0014\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "PO_PORTCHANGE 0x0020\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "PO_REN_PORT 0x0034\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "SHFileOperation __MINGW_NAME_AW(SHFileOperation)\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "SE_ERR_FNF 2\0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "SE_ERR_PNF 3\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "SE_ERR_ACCESSDENIED 5\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "SE_ERR_OOM 8\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "SE_ERR_DLLNOTFOUND 32\0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "SE_ERR_SHARE 26\0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "SE_ERR_ASSOCINCOMPLETE 27\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "SE_ERR_DDETIMEOUT 28\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "SE_ERR_DDEFAIL 29\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "SE_ERR_DDEBUSY 30\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "SE_ERR_NOASSOC 31\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "SEE_MASK_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "SEE_MASK_CLASSNAME 0x1\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "SEE_MASK_CLASSKEY 0x3\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "SEE_MASK_IDLIST 0x4\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "SEE_MASK_INVOKEIDLIST 0xc\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "SEE_MASK_ICON 0x10\0"
	.byte	0x1
	.uleb128 0x109
	.ascii "SEE_MASK_HOTKEY 0x20\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "SEE_MASK_NOCLOSEPROCESS 0x40\0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "SEE_MASK_CONNECTNETDRV 0x80\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "SEE_MASK_NOASYNC 0x100\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "SEE_MASK_FLAG_DDEWAIT SEE_MASK_NOASYNC\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "SEE_MASK_DOENVSUBST 0x200\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "SEE_MASK_FLAG_NO_UI 0x400\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "SEE_MASK_UNICODE 0x4000\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "SEE_MASK_NO_CONSOLE 0x8000\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "SEE_MASK_ASYNCOK 0x100000\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "SEE_MASK_HMONITOR 0x200000\0"
	.byte	0x1
	.uleb128 0x114
	.ascii "SEE_MASK_NOZONECHECKS 0x800000\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "SEE_MASK_NOQUERYCLASSSTORE 0x1000000\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "SEE_MASK_WAITFORINPUTIDLE 0x2000000\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "SEE_MASK_FLAG_LOG_USAGE 0x4000000\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "ShellExecuteEx __MINGW_NAME_AW(ShellExecuteEx)\0"
	.byte	0x1
	.uleb128 0x193
	.ascii "SHERB_NOCONFIRMATION 0x00000001\0"
	.byte	0x1
	.uleb128 0x194
	.ascii "SHERB_NOPROGRESSUI 0x00000002\0"
	.byte	0x1
	.uleb128 0x195
	.ascii "SHERB_NOSOUND 0x00000004\0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "SHQueryRecycleBin __MINGW_NAME_AW(SHQueryRecycleBin)\0"
	.byte	0x1
	.uleb128 0x19f
	.ascii "SHEmptyRecycleBin __MINGW_NAME_AW(SHEmptyRecycleBin)\0"
	.byte	0x1
	.uleb128 0x1e8
	.ascii "NOTIFYICONDATAA_V1_SIZE FIELD_OFFSET (NOTIFYICONDATAA, szTip[64])\0"
	.byte	0x1
	.uleb128 0x1e9
	.ascii "NOTIFYICONDATAW_V1_SIZE FIELD_OFFSET (NOTIFYICONDATAW, szTip[64])\0"
	.byte	0x1
	.uleb128 0x1ea
	.ascii "NOTIFYICONDATAA_V2_SIZE FIELD_OFFSET (NOTIFYICONDATAA, guidItem)\0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "NOTIFYICONDATAW_V2_SIZE FIELD_OFFSET (NOTIFYICONDATAW, guidItem)\0"
	.byte	0x1
	.uleb128 0x1ec
	.ascii "NOTIFYICONDATAA_V3_SIZE FIELD_OFFSET (NOTIFYICONDATAA, hBalloonIcon)\0"
	.byte	0x1
	.uleb128 0x1ed
	.ascii "NOTIFYICONDATAW_V3_SIZE FIELD_OFFSET (NOTIFYICONDATAW, hBalloonIcon)\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "NOTIFYICONDATA_V1_SIZE __MINGW_NAME_AW_EXT(NOTIFYICONDATA,_V1_SIZE)\0"
	.byte	0x1
	.uleb128 0x1f0
	.ascii "NOTIFYICONDATA_V2_SIZE __MINGW_NAME_AW_EXT(NOTIFYICONDATA,_V2_SIZE)\0"
	.byte	0x1
	.uleb128 0x1f1
	.ascii "NOTIFYICONDATA_V3_SIZE __MINGW_NAME_AW_EXT(NOTIFYICONDATA,_V3_SIZE)\0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "NIN_SELECT (WM_USER + 0)\0"
	.byte	0x1
	.uleb128 0x1f4
	.ascii "NINF_KEY 0x1\0"
	.byte	0x1
	.uleb128 0x1f5
	.ascii "NIN_KEYSELECT (NIN_SELECT | NINF_KEY)\0"
	.byte	0x1
	.uleb128 0x1f7
	.ascii "NIN_BALLOONSHOW (WM_USER + 2)\0"
	.byte	0x1
	.uleb128 0x1f8
	.ascii "NIN_BALLOONHIDE (WM_USER + 3)\0"
	.byte	0x1
	.uleb128 0x1f9
	.ascii "NIN_BALLOONTIMEOUT (WM_USER + 4)\0"
	.byte	0x1
	.uleb128 0x1fa
	.ascii "NIN_BALLOONUSERCLICK (WM_USER + 5)\0"
	.byte	0x1
	.uleb128 0x200
	.ascii "NIM_ADD 0x00000000\0"
	.byte	0x1
	.uleb128 0x201
	.ascii "NIM_MODIFY 0x00000001\0"
	.byte	0x1
	.uleb128 0x202
	.ascii "NIM_DELETE 0x00000002\0"
	.byte	0x1
	.uleb128 0x203
	.ascii "NIM_SETFOCUS 0x00000003\0"
	.byte	0x1
	.uleb128 0x204
	.ascii "NIM_SETVERSION 0x00000004\0"
	.byte	0x1
	.uleb128 0x206
	.ascii "NOTIFYICON_VERSION 3\0"
	.byte	0x1
	.uleb128 0x20b
	.ascii "NIF_MESSAGE 0x00000001\0"
	.byte	0x1
	.uleb128 0x20c
	.ascii "NIF_ICON 0x00000002\0"
	.byte	0x1
	.uleb128 0x20d
	.ascii "NIF_TIP 0x00000004\0"
	.byte	0x1
	.uleb128 0x20e
	.ascii "NIF_STATE 0x00000008\0"
	.byte	0x1
	.uleb128 0x20f
	.ascii "NIF_INFO 0x00000010\0"
	.byte	0x1
	.uleb128 0x211
	.ascii "NIF_GUID 0x00000020\0"
	.byte	0x1
	.uleb128 0x218
	.ascii "NIS_HIDDEN 0x00000001\0"
	.byte	0x1
	.uleb128 0x219
	.ascii "NIS_SHAREDICON 0x00000002\0"
	.byte	0x1
	.uleb128 0x21b
	.ascii "NIIF_NONE 0x00000000\0"
	.byte	0x1
	.uleb128 0x21c
	.ascii "NIIF_INFO 0x00000001\0"
	.byte	0x1
	.uleb128 0x21d
	.ascii "NIIF_WARNING 0x00000002\0"
	.byte	0x1
	.uleb128 0x21e
	.ascii "NIIF_ERROR 0x00000003\0"
	.byte	0x1
	.uleb128 0x21f
	.ascii "NIIF_USER 0x00000004\0"
	.byte	0x1
	.uleb128 0x220
	.ascii "NIIF_ICON_MASK 0x0000000f\0"
	.byte	0x1
	.uleb128 0x221
	.ascii "NIIF_NOSOUND 0x00000010\0"
	.byte	0x1
	.uleb128 0x233
	.ascii "Shell_NotifyIcon __MINGW_NAME_AW(Shell_NotifyIcon)\0"
	.byte	0x1
	.uleb128 0x23a
	.ascii "SHFILEINFO_DEFINED \0"
	.byte	0x1
	.uleb128 0x24f
	.ascii "SHGFI_ICON 0x000000100\0"
	.byte	0x1
	.uleb128 0x250
	.ascii "SHGFI_DISPLAYNAME 0x000000200\0"
	.byte	0x1
	.uleb128 0x251
	.ascii "SHGFI_TYPENAME 0x000000400\0"
	.byte	0x1
	.uleb128 0x252
	.ascii "SHGFI_ATTRIBUTES 0x000000800\0"
	.byte	0x1
	.uleb128 0x253
	.ascii "SHGFI_ICONLOCATION 0x000001000\0"
	.byte	0x1
	.uleb128 0x254
	.ascii "SHGFI_EXETYPE 0x000002000\0"
	.byte	0x1
	.uleb128 0x255
	.ascii "SHGFI_SYSICONINDEX 0x000004000\0"
	.byte	0x1
	.uleb128 0x256
	.ascii "SHGFI_LINKOVERLAY 0x000008000\0"
	.byte	0x1
	.uleb128 0x257
	.ascii "SHGFI_SELECTED 0x000010000\0"
	.byte	0x1
	.uleb128 0x258
	.ascii "SHGFI_ATTR_SPECIFIED 0x000020000\0"
	.byte	0x1
	.uleb128 0x25a
	.ascii "SHGFI_LARGEICON 0x000000000\0"
	.byte	0x1
	.uleb128 0x25b
	.ascii "SHGFI_SMALLICON 0x000000001\0"
	.byte	0x1
	.uleb128 0x25c
	.ascii "SHGFI_OPENICON 0x000000002\0"
	.byte	0x1
	.uleb128 0x25d
	.ascii "SHGFI_SHELLICONSIZE 0x000000004\0"
	.byte	0x1
	.uleb128 0x25e
	.ascii "SHGFI_PIDL 0x000000008\0"
	.byte	0x1
	.uleb128 0x25f
	.ascii "SHGFI_USEFILEATTRIBUTES 0x000000010\0"
	.byte	0x1
	.uleb128 0x261
	.ascii "SHGFI_ADDOVERLAYS 0x000000020\0"
	.byte	0x1
	.uleb128 0x262
	.ascii "SHGFI_OVERLAYINDEX 0x000000040\0"
	.byte	0x1
	.uleb128 0x267
	.ascii "SHGetFileInfo __MINGW_NAME_AW(SHGetFileInfo)\0"
	.byte	0x1
	.uleb128 0x2e3
	.ascii "SHGetDiskFreeSpace SHGetDiskFreeSpaceEx\0"
	.byte	0x1
	.uleb128 0x2ea
	.ascii "SHGetDiskFreeSpaceEx __MINGW_NAME_AW(SHGetDiskFreeSpaceEx)\0"
	.byte	0x1
	.uleb128 0x2eb
	.ascii "SHGetNewLinkInfo __MINGW_NAME_AW(SHGetNewLinkInfo)\0"
	.byte	0x1
	.uleb128 0x2ed
	.ascii "SHGNLI_PIDL 0x000000001\0"
	.byte	0x1
	.uleb128 0x2ee
	.ascii "SHGNLI_PREFIXNAME 0x000000002\0"
	.byte	0x1
	.uleb128 0x2ef
	.ascii "SHGNLI_NOUNIQUE 0x000000004\0"
	.byte	0x1
	.uleb128 0x2f0
	.ascii "SHGNLI_NOLNK 0x000000008\0"
	.byte	0x1
	.uleb128 0x2f2
	.ascii "SHGNLI_NOLOCNAME 0x000000010\0"
	.byte	0x1
	.uleb128 0x2f8
	.ascii "PRINTACTION_OPEN 0\0"
	.byte	0x1
	.uleb128 0x2f9
	.ascii "PRINTACTION_PROPERTIES 1\0"
	.byte	0x1
	.uleb128 0x2fa
	.ascii "PRINTACTION_NETINSTALL 2\0"
	.byte	0x1
	.uleb128 0x2fb
	.ascii "PRINTACTION_NETINSTALLLINK 3\0"
	.byte	0x1
	.uleb128 0x2fc
	.ascii "PRINTACTION_TESTPAGE 4\0"
	.byte	0x1
	.uleb128 0x2fd
	.ascii "PRINTACTION_OPENNETPRN 5\0"
	.byte	0x1
	.uleb128 0x2fe
	.ascii "PRINTACTION_DOCUMENTDEFAULTS 6\0"
	.byte	0x1
	.uleb128 0x2ff
	.ascii "PRINTACTION_SERVERPROPERTIES 7\0"
	.byte	0x1
	.uleb128 0x304
	.ascii "SHInvokePrinterCommand __MINGW_NAME_AW(SHInvokePrinterCommand)\0"
	.byte	0x1
	.uleb128 0x31f
	.ascii "OFFLINE_STATUS_LOCAL 0x0001\0"
	.byte	0x1
	.uleb128 0x320
	.ascii "OFFLINE_STATUS_REMOTE 0x0002\0"
	.byte	0x1
	.uleb128 0x321
	.ascii "OFFLINE_STATUS_INCOMPLETE 0x0004\0"
	.byte	0x1
	.uleb128 0x32b
	.ascii "LWSTDAPIV_(type) EXTERN_C DECLSPEC_IMPORT type STDAPIVCALLTYPE\0"
	.byte	0x1
	.uleb128 0x333
	.ascii "ShellMessageBox __MINGW_NAME_AW(ShellMessageBox)\0"
	.byte	0x1
	.uleb128 0x338
	.ascii "IsLFNDrive __MINGW_NAME_AW(IsLFNDrive)\0"
	.byte	0x1
	.uleb128 0x342
	.ascii "SHEnumerateUnreadMailAccounts __MINGW_NAME_AW(SHEnumerateUnreadMailAccounts)\0"
	.byte	0x1
	.uleb128 0x343
	.ascii "SHGetUnreadMailCount __MINGW_NAME_AW(SHGetUnreadMailCount)\0"
	.byte	0x1
	.uleb128 0x344
	.ascii "SHSetUnreadMailCount __MINGW_NAME_AW(SHSetUnreadMailCount)\0"
	.byte	0x1
	.uleb128 0x34e
	.ascii "SHIL_LARGE 0\0"
	.byte	0x1
	.uleb128 0x34f
	.ascii "SHIL_SMALL 1\0"
	.byte	0x1
	.uleb128 0x350
	.ascii "SHIL_EXTRALARGE 2\0"
	.byte	0x1
	.uleb128 0x351
	.ascii "SHIL_SYSSMALL 3\0"
	.byte	0x1
	.uleb128 0x356
	.ascii "SHIL_LAST SHIL_SYSSMALL\0"
	.byte	0x4
	.file 389 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winperf.h"
	.byte	0x3
	.uleb128 0x5a
	.uleb128 0x185
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINPERF_ \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x145
	.byte	0x4
	.byte	0x1
	.uleb128 0xb
	.ascii "PERF_DATA_VERSION 1\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "PERF_DATA_REVISION 1\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "PERF_NO_INSTANCES -1\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "PERF_SIZE_DWORD 0x00000000\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "PERF_SIZE_LARGE 0x00000100\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "PERF_SIZE_ZERO 0x00000200\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "PERF_SIZE_VARIABLE_LEN 0x00000300\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "PERF_TYPE_NUMBER 0x00000000\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "PERF_TYPE_COUNTER 0x00000400\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "PERF_TYPE_TEXT 0x00000800\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "PERF_TYPE_ZERO 0x00000C00\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "PERF_NUMBER_HEX 0x00000000\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "PERF_NUMBER_DECIMAL 0x00010000\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "PERF_NUMBER_DEC_1000 0x00020000\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "PERF_COUNTER_VALUE 0x00000000\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "PERF_COUNTER_RATE 0x00010000\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "PERF_COUNTER_FRACTION 0x00020000\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "PERF_COUNTER_BASE 0x00030000\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "PERF_COUNTER_ELAPSED 0x00040000\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "PERF_COUNTER_QUEUELEN 0x00050000\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "PERF_COUNTER_HISTOGRAM 0x00060000\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "PERF_COUNTER_PRECISION 0x00070000\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "PERF_TEXT_UNICODE 0x00000000\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "PERF_TEXT_ASCII 0x00010000\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "PERF_TIMER_TICK 0x00000000\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "PERF_TIMER_100NS 0x00100000\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "PERF_OBJECT_TIMER 0x00200000\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "PERF_DELTA_COUNTER 0x00400000\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "PERF_DELTA_BASE 0x00800000\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "PERF_INVERSE_COUNTER 0x01000000\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "PERF_MULTI_COUNTER 0x02000000\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "PERF_DISPLAY_NO_SUFFIX 0x00000000\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "PERF_DISPLAY_PER_SEC 0x10000000\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "PERF_DISPLAY_PERCENT 0x20000000\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "PERF_DISPLAY_SECONDS 0x30000000\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "PERF_DISPLAY_NOSHOW 0x40000000\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "PERF_COUNTER_COUNTER (PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PER_SEC)\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "PERF_COUNTER_TIMER (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "PERF_COUNTER_QUEUELEN_TYPE (PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "PERF_COUNTER_LARGE_QUEUELEN_TYPE (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "PERF_COUNTER_100NS_QUEUELEN_TYPE (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_OBJECT_TIMER | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "PERF_COUNTER_BULK_COUNT (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PER_SEC)\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "PERF_COUNTER_TEXT (PERF_SIZE_VARIABLE_LEN | PERF_TYPE_TEXT | PERF_TEXT_UNICODE | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "PERF_COUNTER_RAWCOUNT (PERF_SIZE_DWORD | PERF_TYPE_NUMBER | PERF_NUMBER_DECIMAL | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "PERF_COUNTER_LARGE_RAWCOUNT (PERF_SIZE_LARGE | PERF_TYPE_NUMBER | PERF_NUMBER_DECIMAL | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "PERF_COUNTER_RAWCOUNT_HEX (PERF_SIZE_DWORD | PERF_TYPE_NUMBER | PERF_NUMBER_HEX | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "PERF_COUNTER_LARGE_RAWCOUNT_HEX (PERF_SIZE_LARGE | PERF_TYPE_NUMBER | PERF_NUMBER_HEX | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "PERF_SAMPLE_FRACTION (PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DELTA_COUNTER | PERF_DELTA_BASE | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "PERF_SAMPLE_COUNTER (PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "PERF_COUNTER_NODATA (PERF_SIZE_ZERO | PERF_DISPLAY_NOSHOW)\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "PERF_COUNTER_TIMER_INV (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "PERF_SAMPLE_BASE (PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW | 0x00000001)\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "PERF_AVERAGE_TIMER (PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DISPLAY_SECONDS)\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "PERF_AVERAGE_BASE (PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW | 0x00000002)\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "PERF_AVERAGE_BULK (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DISPLAY_NOSHOW)\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "PERF_OBJ_TIME_TIMER (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_OBJECT_TIMER | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "PERF_100NSEC_TIMER (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "PERF_100NSEC_TIMER_INV (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "PERF_COUNTER_MULTI_TIMER (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_DELTA_COUNTER | PERF_TIMER_TICK | PERF_MULTI_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "PERF_COUNTER_MULTI_TIMER_INV (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_DELTA_COUNTER | PERF_MULTI_COUNTER | PERF_TIMER_TICK | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "PERF_COUNTER_MULTI_BASE (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_MULTI_COUNTER | PERF_DISPLAY_NOSHOW)\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "PERF_100NSEC_MULTI_TIMER (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_DELTA_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_MULTI_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "PERF_100NSEC_MULTI_TIMER_INV (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_DELTA_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_MULTI_COUNTER | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "PERF_RAW_FRACTION (PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "PERF_LARGE_RAW_FRACTION (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "PERF_RAW_BASE (PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW | 0x00000003)\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "PERF_LARGE_RAW_BASE (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW)\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "PERF_ELAPSED_TIME (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_ELAPSED | PERF_OBJECT_TIMER | PERF_DISPLAY_SECONDS)\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "PERF_COUNTER_HISTOGRAM_TYPE 0x80000000\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "PERF_COUNTER_DELTA (PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_VALUE | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "PERF_COUNTER_LARGE_DELTA (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_VALUE | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "PERF_PRECISION_SYSTEM_TIMER (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_PRECISION | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "PERF_PRECISION_100NS_TIMER (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_PRECISION | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "PERF_PRECISION_OBJECT_TIMER (PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_PRECISION | PERF_OBJECT_TIMER | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT)\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "PERF_PRECISION_TIMESTAMP PERF_LARGE_RAW_BASE\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "PERF_DETAIL_NOVICE 100\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "PERF_DETAIL_ADVANCED 200\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "PERF_DETAIL_EXPERT 300\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "PERF_DETAIL_WIZARD 400\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "PERF_NO_UNIQUE_ID -1\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "PERF_QUERY_OBJECTS ((LONG)0x80000000)\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "PERF_QUERY_GLOBAL ((LONG)0x80000001)\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "PERF_QUERY_COSTLY ((LONG)0x80000002)\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "MAX_PERF_OBJECTS_IN_QUERY_FUNCTION (__MSABI_LONG(64))\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "WINPERF_LOG_NONE 0\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "WINPERF_LOG_USER 1\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "WINPERF_LOG_DEBUG 2\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "WINPERF_LOG_VERBOSE 3\0"
	.byte	0x3
	.uleb128 0xc0
	.uleb128 0x143
	.byte	0x4
	.byte	0x4
	.file 390 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winsock.h"
	.byte	0x3
	.uleb128 0x5c
	.uleb128 0x186
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINSOCKAPI_ \0"
	.byte	0x1
	.uleb128 0x11
	.ascii "UNDEF_WINSOCK_API_LINKAGE \0"
	.byte	0x1
	.uleb128 0x13
	.ascii "WINSOCK_API_LINKAGE DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "WSAAPI WINAPI\0"
	.file 391 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/_bsd_types.h"
	.byte	0x3
	.uleb128 0x21
	.uleb128 0x187
	.byte	0x1
	.uleb128 0x8
	.ascii "_BSDTYPES_DEFINED \0"
	.byte	0x3
	.uleb128 0xb
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0x11
	.ascii "u_long\0"
	.byte	0x4
	.file 392 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/inaddr.h"
	.byte	0x3
	.uleb128 0x22
	.uleb128 0x188
	.byte	0x3
	.uleb128 0xf
	.uleb128 0x187
	.byte	0x4
	.byte	0x1
	.uleb128 0x19
	.ascii "s_addr S_un.S_addr\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "s_host S_un.S_un_b.s_b2\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "s_net S_un.S_un_b.s_b1\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "s_imp S_un.S_un_w.s_w2\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "s_impno S_un.S_un_b.s_b4\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "s_lh S_un.S_un_b.s_b3\0"
	.byte	0x4
	.file 393 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/psdk_inc/_socket_types.h"
	.byte	0x3
	.uleb128 0x23
	.uleb128 0x189
	.byte	0x1
	.uleb128 0x8
	.ascii "___WSA_SOCKET_TYPES_H \0"
	.byte	0x1
	.uleb128 0x10
	.ascii "INVALID_SOCKET (SOCKET)(~0)\0"
	.byte	0x1
	.uleb128 0x11
	.ascii "SOCKET_ERROR (-1)\0"
	.byte	0x4
	.file 394 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/psdk_inc/_fd_types.h"
	.byte	0x3
	.uleb128 0x24
	.uleb128 0x18a
	.byte	0x1
	.uleb128 0x8
	.ascii "___WSA_FD_TYPES_H \0"
	.byte	0x1
	.uleb128 0xd
	.ascii "FD_SETSIZE 64\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "FD_CLR(fd,set) do { u_int __i; for(__i = 0; __i < ((fd_set *)(set))->fd_count; __i++) { if (((fd_set *)(set))->fd_array[__i] == fd) { while (__i < ((fd_set *)(set))->fd_count - 1) { ((fd_set *)(set))->fd_array[__i] = ((fd_set *)(set))->fd_array[__i + 1]; __i++; } ((fd_set *)(set))->fd_count--; break; } } } while(0)\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "FD_ZERO(set) (((fd_set *)(set))->fd_count = 0)\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "FD_ISSET(fd,set) __WSAFDIsSet((SOCKET)(fd),(fd_set *)(set))\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "_FD_SET_WINSOCK_DEFINED \0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "FD_SET(fd,set) do { if (((fd_set *)(set))->fd_count < FD_SETSIZE) ((fd_set *)(set))->fd_array[((fd_set *)(set))->fd_count++] = (fd); } while(0)\0"
	.byte	0x4
	.file 395 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/psdk_inc/_ip_types.h"
	.byte	0x3
	.uleb128 0x25
	.uleb128 0x18b
	.byte	0x1
	.uleb128 0x8
	.ascii "_MINGW_IP_TYPES_H \0"
	.byte	0x3
	.uleb128 0x10
	.uleb128 0x187
	.byte	0x4
	.byte	0x1
	.uleb128 0x17
	.ascii "h_addr h_addr_list[0]\0"
	.byte	0x4
	.file 396 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/psdk_inc/_ip_mreq1.h"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0x18c
	.byte	0x1
	.uleb128 0x8
	.ascii "_MINGW_IP_MREQ1_H \0"
	.byte	0x4
	.file 397 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/psdk_inc/_wsadata.h"
	.byte	0x3
	.uleb128 0x27
	.uleb128 0x18d
	.byte	0x1
	.uleb128 0x8
	.ascii "__MINGW_WSADATA_H \0"
	.byte	0x1
	.uleb128 0xa
	.ascii "WSADESCRIPTION_LEN 256\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "WSASYS_STATUS_LEN 128\0"
	.byte	0x4
	.file 398 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/psdk_inc/_xmitfile.h"
	.byte	0x3
	.uleb128 0x28
	.uleb128 0x18e
	.byte	0x1
	.uleb128 0x8
	.ascii "__MINGW_TRANSMIT_FILE_H \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x2e
	.ascii "IOCPARM_MASK 0x7f\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "IOC_VOID 0x20000000\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "IOC_OUT 0x40000000\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "IOC_IN 0x80000000\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "IOC_INOUT (IOC_IN|IOC_OUT)\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "_IO(x,y) (IOC_VOID|((x)<<8)|(y))\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "_IOR(x,y,t) (IOC_OUT|(((__LONG32)sizeof(t)&IOCPARM_MASK)<<16)|((x)<<8)|(y))\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "_IOW(x,y,t) (IOC_IN|(((__LONG32)sizeof(t)&IOCPARM_MASK)<<16)|((x)<<8)|(y))\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "FIONREAD _IOR('f',127,u_long)\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "FIONBIO _IOW('f',126,u_long)\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "FIOASYNC _IOW('f',125,u_long)\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "SIOCSHIWAT _IOW('s',0,u_long)\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "SIOCGHIWAT _IOR('s',1,u_long)\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "SIOCSLOWAT _IOW('s',2,u_long)\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "SIOCGLOWAT _IOR('s',3,u_long)\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "SIOCATMARK _IOR('s',7,u_long)\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "IPPROTO_IP 0\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "IPPROTO_ICMP 1\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "IPPROTO_IGMP 2\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "IPPROTO_GGP 3\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "IPPROTO_TCP 6\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "IPPROTO_PUP 12\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "IPPROTO_UDP 17\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "IPPROTO_IDP 22\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "IPPROTO_ND 77\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "IPPROTO_RAW 255\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "IPPROTO_MAX 256\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "IPPORT_ECHO 7\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "IPPORT_DISCARD 9\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "IPPORT_SYSTAT 11\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "IPPORT_DAYTIME 13\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "IPPORT_NETSTAT 15\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "IPPORT_FTP 21\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "IPPORT_TELNET 23\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "IPPORT_SMTP 25\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "IPPORT_TIMESERVER 37\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "IPPORT_NAMESERVER 42\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "IPPORT_WHOIS 43\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "IPPORT_MTP 57\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "IPPORT_TFTP 69\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "IPPORT_RJE 77\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "IPPORT_FINGER 79\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "IPPORT_TTYLINK 87\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "IPPORT_SUPDUP 95\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "IPPORT_EXECSERVER 512\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "IPPORT_LOGINSERVER 513\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "IPPORT_CMDSERVER 514\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "IPPORT_EFSSERVER 520\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "IPPORT_BIFFUDP 512\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "IPPORT_WHOSERVER 513\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "IPPORT_ROUTESERVER 520\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "IPPORT_RESERVED 1024\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "IMPLINK_IP 155\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "IMPLINK_LOWEXPER 156\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "IMPLINK_HIGHEXPER 158\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "IN_CLASSA(i) (((__LONG32)(i) & 0x80000000)==0)\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "IN_CLASSA_NET 0xff000000\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "IN_CLASSA_NSHIFT 24\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "IN_CLASSA_HOST 0x00ffffff\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "IN_CLASSA_MAX 128\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "IN_CLASSB(i) (((__LONG32)(i) & 0xc0000000)==0x80000000)\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "IN_CLASSB_NET 0xffff0000\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "IN_CLASSB_NSHIFT 16\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "IN_CLASSB_HOST 0x0000ffff\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "IN_CLASSB_MAX 65536\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "IN_CLASSC(i) (((__LONG32)(i) & 0xe0000000)==0xc0000000)\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "IN_CLASSC_NET 0xffffff00\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "IN_CLASSC_NSHIFT 8\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "IN_CLASSC_HOST 0x000000ff\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "INADDR_ANY (u_long)0x00000000\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "INADDR_LOOPBACK 0x7f000001\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "INADDR_BROADCAST (u_long)0xffffffff\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "INADDR_NONE 0xffffffff\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "IP_OPTIONS 1\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "IP_MULTICAST_IF 2\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "IP_MULTICAST_TTL 3\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "IP_MULTICAST_LOOP 4\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "IP_ADD_MEMBERSHIP 5\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "IP_DROP_MEMBERSHIP 6\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "IP_TTL 7\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "IP_TOS 8\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "IP_DONTFRAGMENT 9\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "IP_DEFAULT_MULTICAST_TTL 1\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "IP_DEFAULT_MULTICAST_LOOP 1\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "IP_MAX_MEMBERSHIPS 20\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "SOCK_STREAM 1\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "SOCK_DGRAM 2\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "SOCK_RAW 3\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "SOCK_RDM 4\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "SOCK_SEQPACKET 5\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "SO_DEBUG 0x0001\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "SO_ACCEPTCONN 0x0002\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "SO_REUSEADDR 0x0004\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "SO_KEEPALIVE 0x0008\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "SO_DONTROUTE 0x0010\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "SO_BROADCAST 0x0020\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "SO_USELOOPBACK 0x0040\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "SO_LINGER 0x0080\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "SO_OOBINLINE 0x0100\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "SO_DONTLINGER (u_int)(~SO_LINGER)\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "SO_SNDBUF 0x1001\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "SO_RCVBUF 0x1002\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "SO_SNDLOWAT 0x1003\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "SO_RCVLOWAT 0x1004\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "SO_SNDTIMEO 0x1005\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "SO_RCVTIMEO 0x1006\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "SO_ERROR 0x1007\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "SO_TYPE 0x1008\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "SO_CONNDATA 0x7000\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "SO_CONNOPT 0x7001\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "SO_DISCDATA 0x7002\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "SO_DISCOPT 0x7003\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "SO_CONNDATALEN 0x7004\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "SO_CONNOPTLEN 0x7005\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "SO_DISCDATALEN 0x7006\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "SO_DISCOPTLEN 0x7007\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "SO_OPENTYPE 0x7008\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "SO_SYNCHRONOUS_ALERT 0x10\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "SO_SYNCHRONOUS_NONALERT 0x20\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "SO_MAXDG 0x7009\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "SO_MAXPATHDG 0x700A\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "SO_UPDATE_ACCEPT_CONTEXT 0x700B\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "SO_CONNECT_TIME 0x700C\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "TCP_NODELAY 0x0001\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "TCP_BSDURGENT 0x7000\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "AF_UNSPEC 0\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "AF_UNIX 1\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "AF_INET 2\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "AF_IMPLINK 3\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "AF_PUP 4\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "AF_CHAOS 5\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "AF_IPX 6\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "AF_NS 6\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "AF_ISO 7\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "AF_OSI AF_ISO\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "AF_ECMA 8\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "AF_DATAKIT 9\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "AF_CCITT 10\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "AF_SNA 11\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "AF_DECnet 12\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "AF_DLI 13\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "AF_LAT 14\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "AF_HYLINK 15\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "AF_APPLETALK 16\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "AF_NETBIOS 17\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "AF_VOICEVIEW 18\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "AF_FIREFOX 19\0"
	.byte	0x1
	.uleb128 0xde
	.ascii "AF_UNKNOWN1 20\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "AF_BAN 21\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "AF_MAX 22\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "PF_UNSPEC AF_UNSPEC\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "PF_UNIX AF_UNIX\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "PF_INET AF_INET\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "PF_IMPLINK AF_IMPLINK\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "PF_PUP AF_PUP\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "PF_CHAOS AF_CHAOS\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "PF_NS AF_NS\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "PF_IPX AF_IPX\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "PF_ISO AF_ISO\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "PF_OSI AF_OSI\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "PF_ECMA AF_ECMA\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "PF_DATAKIT AF_DATAKIT\0"
	.byte	0x1
	.uleb128 0xef
	.ascii "PF_CCITT AF_CCITT\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "PF_SNA AF_SNA\0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "PF_DECnet AF_DECnet\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "PF_DLI AF_DLI\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "PF_LAT AF_LAT\0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "PF_HYLINK AF_HYLINK\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "PF_APPLETALK AF_APPLETALK\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "PF_VOICEVIEW AF_VOICEVIEW\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "PF_FIREFOX AF_FIREFOX\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "PF_UNKNOWN1 AF_UNKNOWN1\0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "PF_BAN AF_BAN\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "PF_MAX AF_MAX\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "SOL_SOCKET 0xffff\0"
	.byte	0x1
	.uleb128 0xff
	.ascii "SOMAXCONN 5\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "MSG_OOB 0x1\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "MSG_PEEK 0x2\0"
	.byte	0x1
	.uleb128 0x103
	.ascii "MSG_DONTROUTE 0x4\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "MSG_MAXIOVLEN 16\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "MSG_PARTIAL 0x8000\0"
	.byte	0x1
	.uleb128 0x109
	.ascii "MAXGETHOSTSTRUCT 1024\0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "FD_READ 0x01\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "FD_WRITE 0x02\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "FD_OOB 0x04\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "FD_ACCEPT 0x08\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "FD_CONNECT 0x10\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "FD_CLOSE 0x20\0"
	.file 399 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/psdk_inc/_wsa_errnos.h"
	.byte	0x3
	.uleb128 0x112
	.uleb128 0x18f
	.byte	0x1
	.uleb128 0xaf
	.ascii "__WSA_ERR_MACROS_DEFINED \0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "h_errno WSAGetLastError()\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "HOST_NOT_FOUND WSAHOST_NOT_FOUND\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "TRY_AGAIN WSATRY_AGAIN\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "NO_RECOVERY WSANO_RECOVERY\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "NO_DATA WSANO_DATA\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "WSANO_ADDRESS WSANO_DATA\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "NO_ADDRESS WSANO_ADDRESS\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x14b
	.ascii "__WINSOCK_WS1_SHARED \0"
	.byte	0x1
	.uleb128 0x150
	.ascii "TF_DISCONNECT 0x01\0"
	.byte	0x1
	.uleb128 0x151
	.ascii "TF_REUSE_SOCKET 0x02\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "TF_WRITE_BEHIND 0x04\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "__MSWSOCK_WS1_SHARED \0"
	.byte	0x1
	.uleb128 0x159
	.ascii "WSAMAKEASYNCREPLY(buflen,error) MAKELONG(buflen,error)\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "WSAMAKESELECTREPLY(event,error) MAKELONG(event,error)\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "WSAGETASYNCBUFLEN(lParam) LOWORD(lParam)\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "WSAGETASYNCERROR(lParam) HIWORD(lParam)\0"
	.byte	0x1
	.uleb128 0x15d
	.ascii "WSAGETSELECTEVENT(lParam) LOWORD(lParam)\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "WSAGETSELECTERROR(lParam) HIWORD(lParam)\0"
	.byte	0x2
	.uleb128 0x165
	.ascii "WINSOCK_API_LINKAGE\0"
	.byte	0x2
	.uleb128 0x166
	.ascii "UNDEF_WINSOCK_API_LINKAGE\0"
	.byte	0x2
	.uleb128 0x169
	.ascii "WSAAPI\0"
	.byte	0x4
	.file 400 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/wincrypt.h"
	.byte	0x3
	.uleb128 0x5f
	.uleb128 0x190
	.byte	0x1
	.uleb128 0x7
	.ascii "__WINCRYPT_H__ \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x8
	.byte	0x4
	.byte	0x3
	.uleb128 0xb
	.uleb128 0x141
	.byte	0x2
	.uleb128 0x33
	.ascii "DEFINE_GUID\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) EXTERN_C const GUID name\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "DEFINE_OLEGUID(name,l,w1,w2) DEFINE_GUID (name, l, w1, w2, 0xc0, 0, 0, 0, 0, 0, 0, 0x46)\0"
	.byte	0x4
	.file 401 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/bcrypt.h"
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x191
	.byte	0x1
	.uleb128 0x9
	.ascii "__BCRYPT_H__ \0"
	.byte	0x1
	.uleb128 0x16
	.ascii "_NTSTATUS_PSDK \0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "BCRYPT_SUCCESS(Status) (((NTSTATUS) (Status)) >= 0)\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "BCRYPT_OBJECT_ALIGNMENT 16\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "BCRYPT_STRUCT_ALIGNMENT \0"
	.byte	0x1
	.uleb128 0x32
	.ascii "BCRYPT_KDF_HASH L\"HASH\"\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "BCRYPT_KDF_HMAC L\"HMAC\"\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "BCRYPT_KDF_TLS_PRF L\"TLS_PRF\"\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "BCRYPT_KDF_SP80056A_CONCAT L\"SP800_56A_CONCAT\"\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "KDF_HASH_ALGORITHM 0x0\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "KDF_SECRET_PREPEND 0x1\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "KDF_SECRET_APPEND 0x2\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "KDF_HMAC_KEY 0x3\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "KDF_TLS_PRF_LABEL 0x4\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "KDF_TLS_PRF_SEED 0x5\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "KDF_SECRET_HANDLE 0x6\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "KDF_TLS_PRF_PROTOCOL 0x7\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "KDF_ALGORITHMID 0x8\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "KDF_PARTYUINFO 0x9\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "KDF_PARTYVINFO 0xa\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "KDF_SUPPPUBINFO 0xb\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "KDF_SUPPPRIVINFO 0xc\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "KDF_LABEL 0xd\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "KDF_CONTEXT 0xe\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "KDF_SALT 0xf\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "KDF_ITERATION_COUNT 0x10\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "KDF_GENERIC_PARAMETER 0x11\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "KDF_KEYBITLENGTH 0x12\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "KDF_USE_SECRET_AS_HMAC_KEY_FLAG 1\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION 1\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG 0x00000001\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG 0x00000002\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "BCRYPT_INIT_AUTH_MODE_INFO(_AUTH_INFO_STRUCT_) RtlZeroMemory ((&_AUTH_INFO_STRUCT_), sizeof (BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO)); (_AUTH_INFO_STRUCT_).cbSize = sizeof (BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO); (_AUTH_INFO_STRUCT_).dwInfoVersion = BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION;\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "BCRYPT_OPAQUE_KEY_BLOB L\"OpaqueKeyBlob\"\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "BCRYPT_KEY_DATA_BLOB L\"KeyDataBlob\"\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "BCRYPT_AES_WRAP_KEY_BLOB L\"Rfc3565KeyWrapBlob\"\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "BCRYPT_ALGORITHM_NAME L\"AlgorithmName\"\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "BCRYPT_AUTH_TAG_LENGTH L\"AuthTagLength\"\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "BCRYPT_BLOCK_LENGTH L\"BlockLength\"\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "BCRYPT_BLOCK_SIZE_LIST L\"BlockSizeList\"\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "BCRYPT_CHAINING_MODE L\"ChainingMode\"\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "BCRYPT_CHAIN_MODE_CBC L\"ChainingModeCBC\"\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "BCRYPT_CHAIN_MODE_CCM L\"ChainingModeCCM\"\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "BCRYPT_CHAIN_MODE_CFB L\"ChainingModeCFB\"\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "BCRYPT_CHAIN_MODE_ECB L\"ChainingModeECB\"\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "BCRYPT_CHAIN_MODE_GCM L\"ChainingModeGCM\"\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "BCRYPT_CHAIN_MODE_NA L\"ChainingModeN/A\"\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "BCRYPT_EFFECTIVE_KEY_LENGTH L\"EffectiveKeyLength\"\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "BCRYPT_HASH_BLOCK_LENGTH L\"HashBlockLength\"\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "BCRYPT_HASH_LENGTH L\"HashDigestLength\"\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "BCRYPT_HASH_OID_LIST L\"HashOIDList\"\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "BCRYPT_INITIALIZATION_VECTOR L\"IV\"\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "BCRYPT_IS_KEYED_HASH L\"IsKeyedHash\"\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "BCRYPT_IS_REUSABLE_HASH L\"IsReusableHash\"\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "BCRYPT_KEY_LENGTH L\"KeyLength\"\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "BCRYPT_KEY_LENGTHS L\"KeyLengths\"\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "BCRYPT_KEY_OBJECT_LENGTH L\"KeyObjectLength\"\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "BCRYPT_KEY_STRENGTH L\"KeyStrength\"\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "BCRYPT_MESSAGE_BLOCK_LENGTH L\"MessageBlockLength\"\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "BCRYPT_OBJECT_LENGTH L\"ObjectLength\"\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "BCRYPT_PADDING_SCHEMES L\"PaddingSchemes\"\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "BCRYPT_PCP_PLATFORM_TYPE_PROPERTY L\"PCP_PLATFORM_TYPE\"\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "BCRYPT_PCP_PROVIDER_VERSION_PROPERTY L\"PCP_PROVIDER_VERSION\"\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "BCRYPT_PRIMITIVE_TYPE L\"PrimitiveType\"\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "BCRYPT_PROVIDER_HANDLE L\"ProviderHandle\"\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "BCRYPT_SIGNATURE_LENGTH L\"SignatureLength\"\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "BCRYPT_SUPPORTED_PAD_ROUTER 0x00000001\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "BCRYPT_SUPPORTED_PAD_PKCS1_ENC 0x00000002\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "BCRYPT_SUPPORTED_PAD_PKCS1_SIG 0x00000004\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "BCRYPT_SUPPORTED_PAD_OAEP 0x00000008\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "BCRYPT_SUPPORTED_PAD_PSS 0x00000010\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "BCRYPT_PROV_DISPATCH 0x00000001\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "BCRYPT_BLOCK_PADDING 0x00000001\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "BCRYPT_PAD_NONE 0x00000001\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "BCRYPT_PAD_PKCS1 0x00000002\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "BCRYPT_PAD_OAEP 0x00000004\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "BCRYPT_PAD_PSS 0x00000008\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "BCRYPTBUFFER_VERSION 0\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "BCRYPT_PUBLIC_KEY_BLOB L\"PUBLICBLOB\"\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "BCRYPT_PRIVATE_KEY_BLOB L\"PRIVATEBLOB\"\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "BCRYPT_RSAPUBLIC_BLOB L\"RSAPUBLICBLOB\"\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "BCRYPT_RSAPRIVATE_BLOB L\"RSAPRIVATEBLOB\"\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "LEGACY_RSAPUBLIC_BLOB L\"CAPIPUBLICBLOB\"\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "LEGACY_RSAPRIVATE_BLOB L\"CAPIPRIVATEBLOB\"\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "BCRYPT_RSAPUBLIC_MAGIC 0x31415352\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "BCRYPT_RSAPRIVATE_MAGIC 0x32415352\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "BCRYPT_RSAFULLPRIVATE_BLOB L\"RSAFULLPRIVATEBLOB\"\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "BCRYPT_RSAFULLPRIVATE_MAGIC 0x33415352\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "BCRYPT_GLOBAL_PARAMETERS L\"SecretAgreementParam\"\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "BCRYPT_PRIVATE_KEY L\"PrivKeyVal\"\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "BCRYPT_ECCPUBLIC_BLOB L\"ECCPUBLICBLOB\"\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "BCRYPT_ECCPRIVATE_BLOB L\"ECCPRIVATEBLOB\"\0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "BCRYPT_ECDH_PUBLIC_P256_MAGIC 0x314b4345\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "BCRYPT_ECDH_PRIVATE_P256_MAGIC 0x324b4345\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "BCRYPT_ECDH_PUBLIC_P384_MAGIC 0x334b4345\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "BCRYPT_ECDH_PRIVATE_P384_MAGIC 0x344b4345\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "BCRYPT_ECDH_PUBLIC_P521_MAGIC 0x354b4345\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "BCRYPT_ECDH_PRIVATE_P521_MAGIC 0x364b4345\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "BCRYPT_ECDSA_PUBLIC_P256_MAGIC 0x31534345\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "BCRYPT_ECDSA_PRIVATE_P256_MAGIC 0x32534345\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "BCRYPT_ECDSA_PUBLIC_P384_MAGIC 0x33534345\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "BCRYPT_ECDSA_PRIVATE_P384_MAGIC 0x34534345\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "BCRYPT_ECDSA_PUBLIC_P521_MAGIC 0x35534345\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "BCRYPT_ECDSA_PRIVATE_P521_MAGIC 0x36534345\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "BCRYPT_DH_PUBLIC_BLOB L\"DHPUBLICBLOB\"\0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "BCRYPT_DH_PRIVATE_BLOB L\"DHPRIVATEBLOB\"\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "LEGACY_DH_PUBLIC_BLOB L\"CAPIDHPUBLICBLOB\"\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "LEGACY_DH_PRIVATE_BLOB L\"CAPIDHPRIVATEBLOB\"\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "BCRYPT_DH_PUBLIC_MAGIC 0x42504844\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "BCRYPT_DH_PRIVATE_MAGIC 0x56504844\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "BCRYPT_DH_PARAMETERS L\"DHParameters\"\0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "BCRYPT_DH_PARAMETERS_MAGIC 0x4d504844\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "BCRYPT_DSA_PUBLIC_BLOB L\"DSAPUBLICBLOB\"\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "BCRYPT_DSA_PRIVATE_BLOB L\"DSAPRIVATEBLOB\"\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "LEGACY_DSA_PUBLIC_BLOB L\"CAPIDSAPUBLICBLOB\"\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "LEGACY_DSA_PRIVATE_BLOB L\"CAPIDSAPRIVATEBLOB\"\0"
	.byte	0x1
	.uleb128 0xff
	.ascii "LEGACY_DSA_V2_PUBLIC_BLOB L\"V2CAPIDSAPUBLICBLOB\"\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "LEGACY_DSA_V2_PRIVATE_BLOB L\"V2CAPIDSAPRIVATEBLOB\"\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "BCRYPT_DSA_PUBLIC_MAGIC 0x42505344\0"
	.byte	0x1
	.uleb128 0x103
	.ascii "BCRYPT_DSA_PRIVATE_MAGIC 0x56505344\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "BCRYPT_DSA_PUBLIC_MAGIC_V2 0x32425044\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "BCRYPT_DSA_PRIVATE_MAGIC_V2 0x32565044\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "BCRYPT_KEY_DATA_BLOB_MAGIC 0x4d42444b\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "BCRYPT_KEY_DATA_BLOB_VERSION1 0x1\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "BCRYPT_DSA_PARAMETERS L\"DSAParameters\"\0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "BCRYPT_DSA_PARAMETERS_MAGIC 0x4d505344\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "BCRYPT_DSA_PARAMETERS_MAGIC_V2 0x324d5044\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "MS_PRIMITIVE_PROVIDER L\"Microsoft Primitive Provider\"\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "MS_PLATFORM_CRYPTO_PROVIDER L\"Microsoft Platform Crypto Provider\"\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "BCRYPT_RSA_ALGORITHM L\"RSA\"\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "BCRYPT_RSA_SIGN_ALGORITHM L\"RSA_SIGN\"\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "BCRYPT_DH_ALGORITHM L\"DH\"\0"
	.byte	0x1
	.uleb128 0x114
	.ascii "BCRYPT_DSA_ALGORITHM L\"DSA\"\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "BCRYPT_RC2_ALGORITHM L\"RC2\"\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "BCRYPT_RC4_ALGORITHM L\"RC4\"\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "BCRYPT_AES_ALGORITHM L\"AES\"\0"
	.byte	0x1
	.uleb128 0x118
	.ascii "BCRYPT_DES_ALGORITHM L\"DES\"\0"
	.byte	0x1
	.uleb128 0x119
	.ascii "BCRYPT_DESX_ALGORITHM L\"DESX\"\0"
	.byte	0x1
	.uleb128 0x11a
	.ascii "BCRYPT_3DES_ALGORITHM L\"3DES\"\0"
	.byte	0x1
	.uleb128 0x11b
	.ascii "BCRYPT_3DES_112_ALGORITHM L\"3DES_112\"\0"
	.byte	0x1
	.uleb128 0x11c
	.ascii "BCRYPT_MD2_ALGORITHM L\"MD2\"\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "BCRYPT_MD4_ALGORITHM L\"MD4\"\0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "BCRYPT_MD5_ALGORITHM L\"MD5\"\0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "BCRYPT_SHA1_ALGORITHM L\"SHA1\"\0"
	.byte	0x1
	.uleb128 0x120
	.ascii "BCRYPT_SHA256_ALGORITHM L\"SHA256\"\0"
	.byte	0x1
	.uleb128 0x121
	.ascii "BCRYPT_SHA384_ALGORITHM L\"SHA384\"\0"
	.byte	0x1
	.uleb128 0x122
	.ascii "BCRYPT_SHA512_ALGORITHM L\"SHA512\"\0"
	.byte	0x1
	.uleb128 0x123
	.ascii "BCRYPT_AES_GMAC_ALGORITHM L\"AES-GMAC\"\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "BCRYPT_AES_CMAC_ALGORITHM L\"AES-CMAC\"\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "BCRYPT_ECDSA_P256_ALGORITHM L\"ECDSA_P256\"\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "BCRYPT_ECDSA_P384_ALGORITHM L\"ECDSA_P384\"\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "BCRYPT_ECDSA_P521_ALGORITHM L\"ECDSA_P521\"\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "BCRYPT_ECDH_P256_ALGORITHM L\"ECDH_P256\"\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "BCRYPT_ECDH_P384_ALGORITHM L\"ECDH_P384\"\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "BCRYPT_ECDH_P521_ALGORITHM L\"ECDH_P521\"\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "BCRYPT_RNG_ALGORITHM L\"RNG\"\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "BCRYPT_RNG_FIPS186_DSA_ALGORITHM L\"FIPS186DSARNG\"\0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "BCRYPT_RNG_DUAL_EC_ALGORITHM L\"DUALECRNG\"\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "BCRYPT_SP800108_CTR_HMAC_ALGORITHM L\"SP800_108_CTR_HMAC\"\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "BCRYPT_SP80056A_CONCAT_ALGORITHM L\"SP800_56A_CONCAT\"\0"
	.byte	0x1
	.uleb128 0x130
	.ascii "BCRYPT_PBKDF2_ALGORITHM L\"PBKDF2\"\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "BCRYPT_CAPI_KDF_ALGORITHM L\"CAPI_KDF\"\0"
	.byte	0x1
	.uleb128 0x133
	.ascii "BCRYPT_CIPHER_INTERFACE 0x00000001\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "BCRYPT_HASH_INTERFACE 0x00000002\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE 0x00000003\0"
	.byte	0x1
	.uleb128 0x136
	.ascii "BCRYPT_SECRET_AGREEMENT_INTERFACE 0x00000004\0"
	.byte	0x1
	.uleb128 0x137
	.ascii "BCRYPT_SIGNATURE_INTERFACE 0x00000005\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "BCRYPT_RNG_INTERFACE 0x00000006\0"
	.byte	0x1
	.uleb128 0x139
	.ascii "BCRYPT_KEY_DERIVATION_INTERFACE 0x00000007\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "BCRYPT_ALG_HANDLE_HMAC_FLAG 0x00000008\0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "BCRYPT_CAPI_AES_FLAG 0x00000010\0"
	.byte	0x1
	.uleb128 0x13d
	.ascii "BCRYPT_HASH_REUSABLE_FLAG 0x00000020\0"
	.byte	0x1
	.uleb128 0x13f
	.ascii "BCRYPT_BUFFERS_LOCKED_FLAG 0x00000040\0"
	.byte	0x1
	.uleb128 0x141
	.ascii "BCRYPT_CIPHER_OPERATION 0x00000001\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "BCRYPT_HASH_OPERATION 0x00000002\0"
	.byte	0x1
	.uleb128 0x143
	.ascii "BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION 0x00000004\0"
	.byte	0x1
	.uleb128 0x144
	.ascii "BCRYPT_SECRET_AGREEMENT_OPERATION 0x00000008\0"
	.byte	0x1
	.uleb128 0x145
	.ascii "BCRYPT_SIGNATURE_OPERATION 0x00000010\0"
	.byte	0x1
	.uleb128 0x146
	.ascii "BCRYPT_RNG_OPERATION 0x00000020\0"
	.byte	0x1
	.uleb128 0x147
	.ascii "BCRYPT_KEY_DERIVATION_OPERATION 0x00000040\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "BCRYPT_PUBLIC_KEY_FLAG 0x00000001\0"
	.byte	0x1
	.uleb128 0x14a
	.ascii "BCRYPT_PRIVATE_KEY_FLAG 0x00000002\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "BCRYPT_NO_KEY_VALIDATION 0x00000008\0"
	.byte	0x1
	.uleb128 0x14e
	.ascii "BCRYPT_RNG_USE_ENTROPY_IN_BUFFER 0x00000001\0"
	.byte	0x1
	.uleb128 0x14f
	.ascii "BCRYPT_USE_SYSTEM_PREFERRED_RNG 0x00000002\0"
	.byte	0x1
	.uleb128 0x151
	.ascii "BCRYPT_MAKE_INTERFACE_VERSION(major,minor) { (USHORT)major,(USHORT)minor}\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "BCRYPT_IS_INTERFACE_VERSION_COMPATIBLE(loader,provider) ((loader).MajorVersion <= (provider).MajorVersion)\0"
	.byte	0x1
	.uleb128 0x154
	.ascii "BCRYPT_CIPHER_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION (1, 0)\0"
	.byte	0x1
	.uleb128 0x155
	.ascii "BCRYPT_HASH_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION (1, 0)\0"
	.byte	0x1
	.uleb128 0x156
	.ascii "BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION (1, 0)\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "BCRYPT_SECRET_AGREEMENT_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION (1, 0)\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "BCRYPT_SIGNATURE_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION (1, 0)\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "BCRYPT_RNG_INTERFACE_VERSION_1 BCRYPT_MAKE_INTERFACE_VERSION (1, 0)\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "CRYPT_MIN_DEPENDENCIES (0x00000001)\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "CRYPT_PROCESS_ISOLATE (0x00010000)\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "CRYPT_UM (0x00000001)\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "CRYPT_KM (0x00000002)\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "CRYPT_MM (0x00000003)\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "CRYPT_ANY (0x00000004)\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "CRYPT_OVERWRITE (0x00000001)\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "CRYPT_LOCAL (0x00000001)\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "CRYPT_DOMAIN (0x00000002)\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "CRYPT_EXCLUSIVE (0x00000001)\0"
	.byte	0x1
	.uleb128 0x169
	.ascii "CRYPT_OVERRIDE (0x00010000)\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "CRYPT_ALL_FUNCTIONS (0x00000001)\0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "CRYPT_ALL_PROVIDERS (0x00000002)\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "CRYPT_PRIORITY_TOP (0x00000000)\0"
	.byte	0x1
	.uleb128 0x16f
	.ascii "CRYPT_PRIORITY_BOTTOM (0xffffffff)\0"
	.byte	0x1
	.uleb128 0x171
	.ascii "CRYPT_DEFAULT_CONTEXT L\"Default\"\0"
	.byte	0x4
	.file 402 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/ncrypt.h"
	.byte	0x3
	.uleb128 0xd
	.uleb128 0x192
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_NCRYPT \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x1e
	.ascii "WINIMPM DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "WINCRYPT32API WINIMPM\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "WINCRYPT32STRINGAPI WINIMPM\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "GET_ALG_CLASS(x) (x & (7 << 13))\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "GET_ALG_TYPE(x) (x & (15 << 9))\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "GET_ALG_SID(x) (x & (511))\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "ALG_CLASS_ANY (0)\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "ALG_CLASS_SIGNATURE (1 << 13)\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "ALG_CLASS_MSG_ENCRYPT (2 << 13)\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "ALG_CLASS_DATA_ENCRYPT (3 << 13)\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "ALG_CLASS_HASH (4 << 13)\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "ALG_CLASS_KEY_EXCHANGE (5 << 13)\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "ALG_CLASS_ALL (7 << 13)\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "ALG_TYPE_ANY (0)\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "ALG_TYPE_DSS (1 << 9)\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "ALG_TYPE_RSA (2 << 9)\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "ALG_TYPE_BLOCK (3 << 9)\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "ALG_TYPE_STREAM (4 << 9)\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "ALG_TYPE_DH (5 << 9)\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "ALG_TYPE_SECURECHANNEL (6 << 9)\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "ALG_SID_ANY (0)\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "ALG_SID_RSA_ANY 0\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "ALG_SID_RSA_PKCS 1\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "ALG_SID_RSA_MSATWORK 2\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "ALG_SID_RSA_ENTRUST 3\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "ALG_SID_RSA_PGP 4\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "ALG_SID_DSS_ANY 0\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "ALG_SID_DSS_PKCS 1\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "ALG_SID_DSS_DMS 2\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "ALG_SID_DES 1\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "ALG_SID_3DES 3\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "ALG_SID_DESX 4\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "ALG_SID_IDEA 5\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "ALG_SID_CAST 6\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "ALG_SID_SAFERSK64 7\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "ALG_SID_SAFERSK128 8\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "ALG_SID_3DES_112 9\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "ALG_SID_CYLINK_MEK 12\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "ALG_SID_RC5 13\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "ALG_SID_AES_128 14\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "ALG_SID_AES_192 15\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "ALG_SID_AES_256 16\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "ALG_SID_AES 17\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "ALG_SID_SKIPJACK 10\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "ALG_SID_TEK 11\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "CRYPT_MODE_CBCI 6\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "CRYPT_MODE_CFBP 7\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "CRYPT_MODE_OFBP 8\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "CRYPT_MODE_CBCOFM 9\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "CRYPT_MODE_CBCOFMI 10\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "ALG_SID_RC2 2\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "ALG_SID_RC4 1\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "ALG_SID_SEAL 2\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "ALG_SID_DH_SANDF 1\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "ALG_SID_DH_EPHEM 2\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "ALG_SID_AGREED_KEY_ANY 3\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "ALG_SID_KEA 4\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "ALG_SID_MD2 1\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "ALG_SID_MD4 2\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "ALG_SID_MD5 3\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "ALG_SID_SHA 4\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "ALG_SID_SHA1 4\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "ALG_SID_MAC 5\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "ALG_SID_RIPEMD 6\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "ALG_SID_RIPEMD160 7\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "ALG_SID_SSL3SHAMD5 8\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "ALG_SID_HMAC 9\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "ALG_SID_TLS1PRF 10\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "ALG_SID_HASH_REPLACE_OWF 11\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "ALG_SID_SHA_256 12\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "ALG_SID_SHA_384 13\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "ALG_SID_SHA_512 14\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "ALG_SID_SSL3_MASTER 1\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "ALG_SID_SCHANNEL_MASTER_HASH 2\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "ALG_SID_SCHANNEL_MAC_KEY 3\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "ALG_SID_PCT1_MASTER 4\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "ALG_SID_SSL2_MASTER 5\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "ALG_SID_TLS1_MASTER 6\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "ALG_SID_SCHANNEL_ENC_KEY 7\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "ALG_SID_EXAMPLE 80\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "ALGIDDEF \0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "CALG_MD2 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_MD2)\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "CALG_MD4 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_MD4)\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "CALG_MD5 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_MD5)\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "CALG_SHA (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA)\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "CALG_SHA1 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA1)\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "CALG_MAC (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_MAC)\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "CALG_RSA_SIGN (ALG_CLASS_SIGNATURE | ALG_TYPE_RSA | ALG_SID_RSA_ANY)\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "CALG_DSS_SIGN (ALG_CLASS_SIGNATURE | ALG_TYPE_DSS | ALG_SID_DSS_ANY)\0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "CALG_NO_SIGN (ALG_CLASS_SIGNATURE | ALG_TYPE_ANY | ALG_SID_ANY)\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "CALG_RSA_KEYX (ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_RSA|ALG_SID_RSA_ANY)\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "CALG_DES (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_DES)\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "CALG_3DES_112 (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_3DES_112)\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "CALG_3DES (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_3DES)\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "CALG_DESX (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_DESX)\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "CALG_RC2 (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_RC2)\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "CALG_RC4 (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_STREAM|ALG_SID_RC4)\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "CALG_SEAL (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_STREAM|ALG_SID_SEAL)\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "CALG_DH_SF (ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_DH|ALG_SID_DH_SANDF)\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "CALG_DH_EPHEM (ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_DH|ALG_SID_DH_EPHEM)\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "CALG_AGREEDKEY_ANY (ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_DH|ALG_SID_AGREED_KEY_ANY)\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "CALG_KEA_KEYX (ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_DH|ALG_SID_KEA)\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "CALG_HUGHES_MD5 (ALG_CLASS_KEY_EXCHANGE|ALG_TYPE_ANY|ALG_SID_MD5)\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "CALG_SKIPJACK (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_SKIPJACK)\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "CALG_TEK (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_TEK)\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "CALG_CYLINK_MEK (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_CYLINK_MEK)\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "CALG_SSL3_SHAMD5 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SSL3SHAMD5)\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "CALG_SSL3_MASTER (ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_SSL3_MASTER)\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "CALG_SCHANNEL_MASTER_HASH (ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_SCHANNEL_MASTER_HASH)\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "CALG_SCHANNEL_MAC_KEY (ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_SCHANNEL_MAC_KEY)\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "CALG_SCHANNEL_ENC_KEY (ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_SCHANNEL_ENC_KEY)\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "CALG_PCT1_MASTER (ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_PCT1_MASTER)\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "CALG_SSL2_MASTER (ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_SSL2_MASTER)\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "CALG_TLS1_MASTER (ALG_CLASS_MSG_ENCRYPT|ALG_TYPE_SECURECHANNEL|ALG_SID_TLS1_MASTER)\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "CALG_RC5 (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_RC5)\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "CALG_HMAC (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_HMAC)\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "CALG_TLS1PRF (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_TLS1PRF)\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "CALG_HASH_REPLACE_OWF (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_HASH_REPLACE_OWF)\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "CALG_AES_128 (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_AES_128)\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "CALG_AES_192 (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_AES_192)\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "CALG_AES_256 (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_AES_256)\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "CALG_AES (ALG_CLASS_DATA_ENCRYPT|ALG_TYPE_BLOCK|ALG_SID_AES)\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "CALG_SHA_256 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA_256)\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "CALG_SHA_384 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA_384)\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "CALG_SHA_512 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_SHA_512)\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "__HCRYPTKEY__ \0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "CRYPT_VERIFYCONTEXT 0xF0000000\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "CRYPT_NEWKEYSET 0x8\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "CRYPT_DELETEKEYSET 0x10\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "CRYPT_MACHINE_KEYSET 0x20\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "CRYPT_SILENT 0x40\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "CRYPT_EXPORTABLE 0x1\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "CRYPT_USER_PROTECTED 0x2\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "CRYPT_CREATE_SALT 0x4\0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "CRYPT_UPDATE_KEY 0x8\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "CRYPT_NO_SALT 0x10\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "CRYPT_PREGEN 0x40\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "CRYPT_RECIPIENT 0x10\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "CRYPT_INITIATOR 0x40\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "CRYPT_ONLINE 0x80\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "CRYPT_SF 0x100\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "CRYPT_CREATE_IV 0x200\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "CRYPT_KEK 0x400\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "CRYPT_DATA_KEY 0x800\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "CRYPT_VOLATILE 0x1000\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "CRYPT_SGCKEY 0x2000\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "CRYPT_ARCHIVABLE 0x4000\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "RSA1024BIT_KEY 0x4000000\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "CRYPT_SERVER 0x400\0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "KEY_LENGTH_MASK 0xFFFF0000\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "CRYPT_Y_ONLY 0x1\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "CRYPT_SSL2_FALLBACK 0x2\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "CRYPT_DESTROYKEY 0x4\0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "CRYPT_OAEP 0x40\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "CRYPT_BLOB_VER3 0x80\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "CRYPT_IPSEC_HMAC_KEY 0x100\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "CRYPT_DECRYPT_RSA_NO_PADDING_CHECK 0x20\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "CRYPT_SECRETDIGEST 0x1\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "CRYPT_OWF_REPL_LM_HASH 0x1\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "CRYPT_LITTLE_ENDIAN 0x1\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "CRYPT_NOHASHOID 0x1\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "CRYPT_TYPE2_FORMAT 0x2\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "CRYPT_X931_FORMAT 0x4\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "CRYPT_MACHINE_DEFAULT 0x1\0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "CRYPT_USER_DEFAULT 0x2\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "CRYPT_DELETE_DEFAULT 0x4\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "SIMPLEBLOB 0x1\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "PUBLICKEYBLOB 0x6\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "PRIVATEKEYBLOB 0x7\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "PLAINTEXTKEYBLOB 0x8\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "OPAQUEKEYBLOB 0x9\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "PUBLICKEYBLOBEX 0xa\0"
	.byte	0x1
	.uleb128 0x114
	.ascii "SYMMETRICWRAPKEYBLOB 0xb\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "KEYSTATEBLOB 0xc\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "AT_KEYEXCHANGE 1\0"
	.byte	0x1
	.uleb128 0x118
	.ascii "AT_SIGNATURE 2\0"
	.byte	0x1
	.uleb128 0x11a
	.ascii "CRYPT_USERDATA 1\0"
	.byte	0x1
	.uleb128 0x11c
	.ascii "KP_IV 1\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "KP_SALT 2\0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "KP_PADDING 3\0"
	.byte	0x1
	.uleb128 0x11f
	.ascii "KP_MODE 4\0"
	.byte	0x1
	.uleb128 0x120
	.ascii "KP_MODE_BITS 5\0"
	.byte	0x1
	.uleb128 0x121
	.ascii "KP_PERMISSIONS 6\0"
	.byte	0x1
	.uleb128 0x122
	.ascii "KP_ALGID 7\0"
	.byte	0x1
	.uleb128 0x123
	.ascii "KP_BLOCKLEN 8\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "KP_KEYLEN 9\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "KP_SALT_EX 10\0"
	.byte	0x1
	.uleb128 0x126
	.ascii "KP_P 11\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "KP_G 12\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "KP_Q 13\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "KP_X 14\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "KP_Y 15\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "KP_RA 16\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "KP_RB 17\0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "KP_INFO 18\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "KP_EFFECTIVE_KEYLEN 19\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "KP_SCHANNEL_ALG 20\0"
	.byte	0x1
	.uleb128 0x130
	.ascii "KP_CLIENT_RANDOM 21\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "KP_SERVER_RANDOM 22\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "KP_RP 23\0"
	.byte	0x1
	.uleb128 0x133
	.ascii "KP_PRECOMP_MD5 24\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "KP_PRECOMP_SHA 25\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "KP_CERTIFICATE 26\0"
	.byte	0x1
	.uleb128 0x136
	.ascii "KP_CLEAR_KEY 27\0"
	.byte	0x1
	.uleb128 0x137
	.ascii "KP_PUB_EX_LEN 28\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "KP_PUB_EX_VAL 29\0"
	.byte	0x1
	.uleb128 0x139
	.ascii "KP_KEYVAL 30\0"
	.byte	0x1
	.uleb128 0x13a
	.ascii "KP_ADMIN_PIN 31\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "KP_KEYEXCHANGE_PIN 32\0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "KP_SIGNATURE_PIN 33\0"
	.byte	0x1
	.uleb128 0x13d
	.ascii "KP_PREHASH 34\0"
	.byte	0x1
	.uleb128 0x13e
	.ascii "KP_ROUNDS 35\0"
	.byte	0x1
	.uleb128 0x13f
	.ascii "KP_OAEP_PARAMS 36\0"
	.byte	0x1
	.uleb128 0x140
	.ascii "KP_CMS_KEY_INFO 37\0"
	.byte	0x1
	.uleb128 0x141
	.ascii "KP_CMS_DH_KEY_INFO 38\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "KP_PUB_PARAMS 39\0"
	.byte	0x1
	.uleb128 0x143
	.ascii "KP_VERIFY_PARAMS 40\0"
	.byte	0x1
	.uleb128 0x144
	.ascii "KP_HIGHEST_VERSION 41\0"
	.byte	0x1
	.uleb128 0x145
	.ascii "KP_GET_USE_COUNT 42\0"
	.byte	0x1
	.uleb128 0x147
	.ascii "PKCS5_PADDING 1\0"
	.byte	0x1
	.uleb128 0x148
	.ascii "RANDOM_PADDING 2\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "ZERO_PADDING 3\0"
	.byte	0x1
	.uleb128 0x14b
	.ascii "CRYPT_MODE_CBC 1\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "CRYPT_MODE_ECB 2\0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "CRYPT_MODE_OFB 3\0"
	.byte	0x1
	.uleb128 0x14e
	.ascii "CRYPT_MODE_CFB 4\0"
	.byte	0x1
	.uleb128 0x14f
	.ascii "CRYPT_MODE_CTS 5\0"
	.byte	0x1
	.uleb128 0x151
	.ascii "CRYPT_ENCRYPT 0x1\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "CRYPT_DECRYPT 0x2\0"
	.byte	0x1
	.uleb128 0x153
	.ascii "CRYPT_EXPORT 0x4\0"
	.byte	0x1
	.uleb128 0x154
	.ascii "CRYPT_READ 0x8\0"
	.byte	0x1
	.uleb128 0x155
	.ascii "CRYPT_WRITE 0x10\0"
	.byte	0x1
	.uleb128 0x156
	.ascii "CRYPT_MAC 0x20\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "CRYPT_EXPORT_KEY 0x40\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "CRYPT_IMPORT_KEY 0x80\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "CRYPT_ARCHIVE 0x100\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "HP_ALGID 0x1\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "HP_HASHVAL 0x2\0"
	.byte	0x1
	.uleb128 0x15d
	.ascii "HP_HASHSIZE 0x4\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "HP_HMAC_INFO 0x5\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "HP_TLS1PRF_LABEL 0x6\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "HP_TLS1PRF_SEED 0x7\0"
	.byte	0x1
	.uleb128 0x162
	.ascii "CRYPT_FAILED FALSE\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "CRYPT_SUCCEED TRUE\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "RCRYPT_SUCCEEDED(RT) ((RT) == CRYPT_SUCCEED)\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "RCRYPT_FAILED(RT) ((RT) == CRYPT_FAILED)\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "PP_ENUMALGS 1\0"
	.byte	0x1
	.uleb128 0x169
	.ascii "PP_ENUMCONTAINERS 2\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "PP_IMPTYPE 3\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "PP_NAME 4\0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "PP_VERSION 5\0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "PP_CONTAINER 6\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "PP_CHANGE_PASSWORD 7\0"
	.byte	0x1
	.uleb128 0x16f
	.ascii "PP_KEYSET_SEC_DESCR 8\0"
	.byte	0x1
	.uleb128 0x170
	.ascii "PP_CERTCHAIN 9\0"
	.byte	0x1
	.uleb128 0x171
	.ascii "PP_KEY_TYPE_SUBTYPE 10\0"
	.byte	0x1
	.uleb128 0x172
	.ascii "PP_PROVTYPE 16\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "PP_KEYSTORAGE 17\0"
	.byte	0x1
	.uleb128 0x174
	.ascii "PP_APPLI_CERT 18\0"
	.byte	0x1
	.uleb128 0x175
	.ascii "PP_SYM_KEYSIZE 19\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "PP_SESSION_KEYSIZE 20\0"
	.byte	0x1
	.uleb128 0x177
	.ascii "PP_UI_PROMPT 21\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "PP_ENUMALGS_EX 22\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "PP_ENUMMANDROOTS 25\0"
	.byte	0x1
	.uleb128 0x17a
	.ascii "PP_ENUMELECTROOTS 26\0"
	.byte	0x1
	.uleb128 0x17b
	.ascii "PP_KEYSET_TYPE 27\0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "PP_ADMIN_PIN 31\0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "PP_KEYEXCHANGE_PIN 32\0"
	.byte	0x1
	.uleb128 0x17e
	.ascii "PP_SIGNATURE_PIN 33\0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "PP_SIG_KEYSIZE_INC 34\0"
	.byte	0x1
	.uleb128 0x180
	.ascii "PP_KEYX_KEYSIZE_INC 35\0"
	.byte	0x1
	.uleb128 0x181
	.ascii "PP_UNIQUE_CONTAINER 36\0"
	.byte	0x1
	.uleb128 0x182
	.ascii "PP_SGC_INFO 37\0"
	.byte	0x1
	.uleb128 0x183
	.ascii "PP_USE_HARDWARE_RNG 38\0"
	.byte	0x1
	.uleb128 0x184
	.ascii "PP_KEYSPEC 39\0"
	.byte	0x1
	.uleb128 0x185
	.ascii "PP_ENUMEX_SIGNING_PROT 40\0"
	.byte	0x1
	.uleb128 0x186
	.ascii "PP_CRYPT_COUNT_KEY_USE 41\0"
	.byte	0x1
	.uleb128 0x188
	.ascii "CRYPT_FIRST 1\0"
	.byte	0x1
	.uleb128 0x189
	.ascii "CRYPT_NEXT 2\0"
	.byte	0x1
	.uleb128 0x18a
	.ascii "CRYPT_SGC_ENUM 4\0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "CRYPT_IMPL_HARDWARE 1\0"
	.byte	0x1
	.uleb128 0x18d
	.ascii "CRYPT_IMPL_SOFTWARE 2\0"
	.byte	0x1
	.uleb128 0x18e
	.ascii "CRYPT_IMPL_MIXED 3\0"
	.byte	0x1
	.uleb128 0x18f
	.ascii "CRYPT_IMPL_UNKNOWN 4\0"
	.byte	0x1
	.uleb128 0x190
	.ascii "CRYPT_IMPL_REMOVABLE 8\0"
	.byte	0x1
	.uleb128 0x192
	.ascii "CRYPT_SEC_DESCR 0x1\0"
	.byte	0x1
	.uleb128 0x193
	.ascii "CRYPT_PSTORE 0x2\0"
	.byte	0x1
	.uleb128 0x194
	.ascii "CRYPT_UI_PROMPT 0x4\0"
	.byte	0x1
	.uleb128 0x196
	.ascii "CRYPT_FLAG_PCT1 0x1\0"
	.byte	0x1
	.uleb128 0x197
	.ascii "CRYPT_FLAG_SSL2 0x2\0"
	.byte	0x1
	.uleb128 0x198
	.ascii "CRYPT_FLAG_SSL3 0x4\0"
	.byte	0x1
	.uleb128 0x199
	.ascii "CRYPT_FLAG_TLS1 0x8\0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "CRYPT_FLAG_IPSEC 0x10\0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "CRYPT_FLAG_SIGNING 0x20\0"
	.byte	0x1
	.uleb128 0x19d
	.ascii "CRYPT_SGC 0x1\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "CRYPT_FASTSGC 0x2\0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "PP_CLIENT_HWND 1\0"
	.byte	0x1
	.uleb128 0x1a1
	.ascii "PP_CONTEXT_INFO 11\0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "PP_KEYEXCHANGE_KEYSIZE 12\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "PP_SIGNATURE_KEYSIZE 13\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "PP_KEYEXCHANGE_ALG 14\0"
	.byte	0x1
	.uleb128 0x1a5
	.ascii "PP_SIGNATURE_ALG 15\0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "PP_DELETEKEY 24\0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "PROV_RSA_FULL 1\0"
	.byte	0x1
	.uleb128 0x1a9
	.ascii "PROV_RSA_SIG 2\0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "PROV_DSS 3\0"
	.byte	0x1
	.uleb128 0x1ab
	.ascii "PROV_FORTEZZA 4\0"
	.byte	0x1
	.uleb128 0x1ac
	.ascii "PROV_MS_EXCHANGE 5\0"
	.byte	0x1
	.uleb128 0x1ad
	.ascii "PROV_SSL 6\0"
	.byte	0x1
	.uleb128 0x1ae
	.ascii "PROV_RSA_SCHANNEL 12\0"
	.byte	0x1
	.uleb128 0x1af
	.ascii "PROV_DSS_DH 13\0"
	.byte	0x1
	.uleb128 0x1b0
	.ascii "PROV_EC_ECDSA_SIG 14\0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "PROV_EC_ECNRA_SIG 15\0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "PROV_EC_ECDSA_FULL 16\0"
	.byte	0x1
	.uleb128 0x1b3
	.ascii "PROV_EC_ECNRA_FULL 17\0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "PROV_DH_SCHANNEL 18\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "PROV_SPYRUS_LYNKS 20\0"
	.byte	0x1
	.uleb128 0x1b6
	.ascii "PROV_RNG 21\0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "PROV_INTEL_SEC 22\0"
	.byte	0x1
	.uleb128 0x1b8
	.ascii "PROV_REPLACE_OWF 23\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "PROV_RSA_AES 24\0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "MS_DEF_PROV __MINGW_NAME_UAW(MS_DEF_PROV)\0"
	.byte	0x1
	.uleb128 0x1bc
	.ascii "MS_ENHANCED_PROV __MINGW_NAME_UAW(MS_ENHANCED_PROV)\0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "MS_STRONG_PROV __MINGW_NAME_UAW(MS_STRONG_PROV)\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "MS_DEF_RSA_SIG_PROV __MINGW_NAME_UAW(MS_DEF_RSA_SIG_PROV)\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "MS_DEF_RSA_SCHANNEL_PROV __MINGW_NAME_UAW(MS_DEF_RSA_SCHANNEL_PROV)\0"
	.byte	0x1
	.uleb128 0x1c0
	.ascii "MS_DEF_DSS_PROV __MINGW_NAME_UAW(MS_DEF_DSS_PROV)\0"
	.byte	0x1
	.uleb128 0x1c1
	.ascii "MS_DEF_DSS_DH_PROV __MINGW_NAME_UAW(MS_DEF_DSS_DH_PROV)\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "MS_ENH_DSS_DH_PROV __MINGW_NAME_UAW(MS_ENH_DSS_DH_PROV)\0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "MS_DEF_DH_SCHANNEL_PROV __MINGW_NAME_UAW(MS_DEF_DH_SCHANNEL_PROV)\0"
	.byte	0x1
	.uleb128 0x1c5
	.ascii "MS_DEF_PROV_A \"Microsoft Base Cryptographic Provider v1.0\"\0"
	.byte	0x1
	.uleb128 0x1c6
	.ascii "MS_DEF_PROV_W L\"Microsoft Base Cryptographic Provider v1.0\"\0"
	.byte	0x1
	.uleb128 0x1c7
	.ascii "MS_ENHANCED_PROV_A \"Microsoft Enhanced Cryptographic Provider v1.0\"\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "MS_ENHANCED_PROV_W L\"Microsoft Enhanced Cryptographic Provider v1.0\"\0"
	.byte	0x1
	.uleb128 0x1c9
	.ascii "MS_STRONG_PROV_A \"Microsoft Strong Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1ca
	.ascii "MS_STRONG_PROV_W L\"Microsoft Strong Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1cb
	.ascii "MS_DEF_RSA_SIG_PROV_A \"Microsoft RSA Signature Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "MS_DEF_RSA_SIG_PROV_W L\"Microsoft RSA Signature Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1cd
	.ascii "MS_DEF_RSA_SCHANNEL_PROV_A \"Microsoft RSA SChannel Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "MS_DEF_RSA_SCHANNEL_PROV_W L\"Microsoft RSA SChannel Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "MS_DEF_DSS_PROV_A \"Microsoft Base DSS Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1d0
	.ascii "MS_DEF_DSS_PROV_W L\"Microsoft Base DSS Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1d1
	.ascii "MS_DEF_DSS_DH_PROV_A \"Microsoft Base DSS and Diffie-Hellman Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "MS_DEF_DSS_DH_PROV_W L\"Microsoft Base DSS and Diffie-Hellman Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1d3
	.ascii "MS_ENH_DSS_DH_PROV_A \"Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1d4
	.ascii "MS_ENH_DSS_DH_PROV_W L\"Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1d5
	.ascii "MS_DEF_DH_SCHANNEL_PROV_A \"Microsoft DH SChannel Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1d6
	.ascii "MS_DEF_DH_SCHANNEL_PROV_W L\"Microsoft DH SChannel Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1d8
	.ascii "MS_SCARD_PROV __MINGW_NAME_UAW(MS_SCARD_PROV)\0"
	.byte	0x1
	.uleb128 0x1d9
	.ascii "MS_ENH_RSA_AES_PROV __MINGW_NAME_UAW(MS_ENH_RSA_AES_PROV)\0"
	.byte	0x1
	.uleb128 0x1da
	.ascii "MS_ENH_RSA_AES_PROV_XP __MINGW_NAME_UAW(MS_ENH_RSA_AES_PROV_XP)\0"
	.byte	0x1
	.uleb128 0x1dc
	.ascii "MS_SCARD_PROV_A \"Microsoft Base Smart Card Crypto Provider\"\0"
	.byte	0x1
	.uleb128 0x1dd
	.ascii "MS_SCARD_PROV_W L\"Microsoft Base Smart Card Crypto Provider\"\0"
	.byte	0x1
	.uleb128 0x1df
	.ascii "MS_ENH_RSA_AES_PROV_A \"Microsoft Enhanced RSA and AES Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1e0
	.ascii "MS_ENH_RSA_AES_PROV_W L\"Microsoft Enhanced RSA and AES Cryptographic Provider\"\0"
	.byte	0x1
	.uleb128 0x1e1
	.ascii "MS_ENH_RSA_AES_PROV_XP_A \"Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)\"\0"
	.byte	0x1
	.uleb128 0x1e2
	.ascii "MS_ENH_RSA_AES_PROV_XP_W L\"Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)\"\0"
	.byte	0x1
	.uleb128 0x1e4
	.ascii "MAXUIDLEN 64\0"
	.byte	0x1
	.uleb128 0x1e6
	.ascii "EXPO_OFFLOAD_REG_VALUE \"ExpoOffload\"\0"
	.byte	0x1
	.uleb128 0x1e7
	.ascii "EXPO_OFFLOAD_FUNC_NAME \"OffloadModExpo\"\0"
	.byte	0x1
	.uleb128 0x1e9
	.ascii "szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS \"Software\\\\Policies\\\\Microsoft\\\\Cryptography\"\0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "szFORCE_KEY_PROTECTION \"ForceKeyProtection\"\0"
	.byte	0x1
	.uleb128 0x1ed
	.ascii "dwFORCE_KEY_PROTECTION_DISABLED 0x0\0"
	.byte	0x1
	.uleb128 0x1ee
	.ascii "dwFORCE_KEY_PROTECTION_USER_SELECT 0x1\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "dwFORCE_KEY_PROTECTION_HIGH 0x2\0"
	.byte	0x1
	.uleb128 0x1f1
	.ascii "szKEY_CACHE_ENABLED \"CachePrivateKeys\"\0"
	.byte	0x1
	.uleb128 0x1f2
	.ascii "szKEY_CACHE_SECONDS \"PrivateKeyLifetimeSeconds\"\0"
	.byte	0x1
	.uleb128 0x1f4
	.ascii "szPRIV_KEY_CACHE_MAX_ITEMS \"PrivKeyCacheMaxItems\"\0"
	.byte	0x1
	.uleb128 0x1f5
	.ascii "cPRIV_KEY_CACHE_MAX_ITEMS_DEFAULT 20\0"
	.byte	0x1
	.uleb128 0x1f7
	.ascii "szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS \"PrivKeyCachePurgeIntervalSeconds\"\0"
	.byte	0x1
	.uleb128 0x1f8
	.ascii "cPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS_DEFAULT 86400\0"
	.byte	0x1
	.uleb128 0x1fa
	.ascii "CUR_BLOB_VERSION 2\0"
	.byte	0x1
	.uleb128 0x213
	.ascii "SCHANNEL_MAC_KEY 0x0\0"
	.byte	0x1
	.uleb128 0x214
	.ascii "SCHANNEL_ENC_KEY 0x1\0"
	.byte	0x1
	.uleb128 0x216
	.ascii "INTERNATIONAL_USAGE 0x1\0"
	.byte	0x1
	.uleb128 0x282
	.ascii "CryptAcquireContext __MINGW_NAME_AW(CryptAcquireContext)\0"
	.byte	0x1
	.uleb128 0x283
	.ascii "CryptSignHash __MINGW_NAME_AW(CryptSignHash)\0"
	.byte	0x1
	.uleb128 0x284
	.ascii "CryptVerifySignature __MINGW_NAME_AW(CryptVerifySignature)\0"
	.byte	0x1
	.uleb128 0x2a3
	.ascii "CryptSetProvider __MINGW_NAME_AW(CryptSetProvider)\0"
	.byte	0x1
	.uleb128 0x2a4
	.ascii "CryptSetProviderEx __MINGW_NAME_AW(CryptSetProviderEx)\0"
	.byte	0x1
	.uleb128 0x2a5
	.ascii "CryptGetDefaultProvider __MINGW_NAME_AW(CryptGetDefaultProvider)\0"
	.byte	0x1
	.uleb128 0x2a6
	.ascii "CryptEnumProviderTypes __MINGW_NAME_AW(CryptEnumProviderTypes)\0"
	.byte	0x1
	.uleb128 0x2a7
	.ascii "CryptEnumProviders __MINGW_NAME_AW(CryptEnumProviders)\0"
	.byte	0x1
	.uleb128 0x2c3
	.ascii "szOID_RSA \"1.2.840.113549\"\0"
	.byte	0x1
	.uleb128 0x2c4
	.ascii "szOID_PKCS \"1.2.840.113549.1\"\0"
	.byte	0x1
	.uleb128 0x2c5
	.ascii "szOID_RSA_HASH \"1.2.840.113549.2\"\0"
	.byte	0x1
	.uleb128 0x2c6
	.ascii "szOID_RSA_ENCRYPT \"1.2.840.113549.3\"\0"
	.byte	0x1
	.uleb128 0x2c7
	.ascii "szOID_PKCS_1 \"1.2.840.113549.1.1\"\0"
	.byte	0x1
	.uleb128 0x2c8
	.ascii "szOID_PKCS_2 \"1.2.840.113549.1.2\"\0"
	.byte	0x1
	.uleb128 0x2c9
	.ascii "szOID_PKCS_3 \"1.2.840.113549.1.3\"\0"
	.byte	0x1
	.uleb128 0x2ca
	.ascii "szOID_PKCS_4 \"1.2.840.113549.1.4\"\0"
	.byte	0x1
	.uleb128 0x2cb
	.ascii "szOID_PKCS_5 \"1.2.840.113549.1.5\"\0"
	.byte	0x1
	.uleb128 0x2cc
	.ascii "szOID_PKCS_6 \"1.2.840.113549.1.6\"\0"
	.byte	0x1
	.uleb128 0x2cd
	.ascii "szOID_PKCS_7 \"1.2.840.113549.1.7\"\0"
	.byte	0x1
	.uleb128 0x2ce
	.ascii "szOID_PKCS_8 \"1.2.840.113549.1.8\"\0"
	.byte	0x1
	.uleb128 0x2cf
	.ascii "szOID_PKCS_9 \"1.2.840.113549.1.9\"\0"
	.byte	0x1
	.uleb128 0x2d0
	.ascii "szOID_PKCS_10 \"1.2.840.113549.1.10\"\0"
	.byte	0x1
	.uleb128 0x2d1
	.ascii "szOID_PKCS_12 \"1.2.840.113549.1.12\"\0"
	.byte	0x1
	.uleb128 0x2d2
	.ascii "szOID_RSA_RSA \"1.2.840.113549.1.1.1\"\0"
	.byte	0x1
	.uleb128 0x2d3
	.ascii "szOID_RSA_MD2RSA \"1.2.840.113549.1.1.2\"\0"
	.byte	0x1
	.uleb128 0x2d4
	.ascii "szOID_RSA_MD4RSA \"1.2.840.113549.1.1.3\"\0"
	.byte	0x1
	.uleb128 0x2d5
	.ascii "szOID_RSA_MD5RSA \"1.2.840.113549.1.1.4\"\0"
	.byte	0x1
	.uleb128 0x2d6
	.ascii "szOID_RSA_SHA1RSA \"1.2.840.113549.1.1.5\"\0"
	.byte	0x1
	.uleb128 0x2d7
	.ascii "szOID_RSA_SETOAEP_RSA \"1.2.840.113549.1.1.6\"\0"
	.byte	0x1
	.uleb128 0x2d8
	.ascii "szOID_RSA_DH \"1.2.840.113549.1.3.1\"\0"
	.byte	0x1
	.uleb128 0x2d9
	.ascii "szOID_RSA_data \"1.2.840.113549.1.7.1\"\0"
	.byte	0x1
	.uleb128 0x2da
	.ascii "szOID_RSA_signedData \"1.2.840.113549.1.7.2\"\0"
	.byte	0x1
	.uleb128 0x2db
	.ascii "szOID_RSA_envelopedData \"1.2.840.113549.1.7.3\"\0"
	.byte	0x1
	.uleb128 0x2dc
	.ascii "szOID_RSA_signEnvData \"1.2.840.113549.1.7.4\"\0"
	.byte	0x1
	.uleb128 0x2dd
	.ascii "szOID_RSA_digestedData \"1.2.840.113549.1.7.5\"\0"
	.byte	0x1
	.uleb128 0x2de
	.ascii "szOID_RSA_hashedData \"1.2.840.113549.1.7.5\"\0"
	.byte	0x1
	.uleb128 0x2df
	.ascii "szOID_RSA_encryptedData \"1.2.840.113549.1.7.6\"\0"
	.byte	0x1
	.uleb128 0x2e0
	.ascii "szOID_RSA_emailAddr \"1.2.840.113549.1.9.1\"\0"
	.byte	0x1
	.uleb128 0x2e1
	.ascii "szOID_RSA_unstructName \"1.2.840.113549.1.9.2\"\0"
	.byte	0x1
	.uleb128 0x2e2
	.ascii "szOID_RSA_contentType \"1.2.840.113549.1.9.3\"\0"
	.byte	0x1
	.uleb128 0x2e3
	.ascii "szOID_RSA_messageDigest \"1.2.840.113549.1.9.4\"\0"
	.byte	0x1
	.uleb128 0x2e4
	.ascii "szOID_RSA_signingTime \"1.2.840.113549.1.9.5\"\0"
	.byte	0x1
	.uleb128 0x2e5
	.ascii "szOID_RSA_counterSign \"1.2.840.113549.1.9.6\"\0"
	.byte	0x1
	.uleb128 0x2e6
	.ascii "szOID_RSA_challengePwd \"1.2.840.113549.1.9.7\"\0"
	.byte	0x1
	.uleb128 0x2e7
	.ascii "szOID_RSA_unstructAddr \"1.2.840.113549.1.9.8\"\0"
	.byte	0x1
	.uleb128 0x2e8
	.ascii "szOID_RSA_extCertAttrs \"1.2.840.113549.1.9.9\"\0"
	.byte	0x1
	.uleb128 0x2e9
	.ascii "szOID_RSA_certExtensions \"1.2.840.113549.1.9.14\"\0"
	.byte	0x1
	.uleb128 0x2ea
	.ascii "szOID_RSA_SMIMECapabilities \"1.2.840.113549.1.9.15\"\0"
	.byte	0x1
	.uleb128 0x2eb
	.ascii "szOID_RSA_preferSignedData \"1.2.840.113549.1.9.15.1\"\0"
	.byte	0x1
	.uleb128 0x2ec
	.ascii "szOID_RSA_SMIMEalg \"1.2.840.113549.1.9.16.3\"\0"
	.byte	0x1
	.uleb128 0x2ed
	.ascii "szOID_RSA_SMIMEalgESDH \"1.2.840.113549.1.9.16.3.5\"\0"
	.byte	0x1
	.uleb128 0x2ee
	.ascii "szOID_RSA_SMIMEalgCMS3DESwrap \"1.2.840.113549.1.9.16.3.6\"\0"
	.byte	0x1
	.uleb128 0x2ef
	.ascii "szOID_RSA_SMIMEalgCMSRC2wrap \"1.2.840.113549.1.9.16.3.7\"\0"
	.byte	0x1
	.uleb128 0x2f0
	.ascii "szOID_RSA_MD2 \"1.2.840.113549.2.2\"\0"
	.byte	0x1
	.uleb128 0x2f1
	.ascii "szOID_RSA_MD4 \"1.2.840.113549.2.4\"\0"
	.byte	0x1
	.uleb128 0x2f2
	.ascii "szOID_RSA_MD5 \"1.2.840.113549.2.5\"\0"
	.byte	0x1
	.uleb128 0x2f4
	.ascii "szOID_RSA_RC2CBC \"1.2.840.113549.3.2\"\0"
	.byte	0x1
	.uleb128 0x2f5
	.ascii "szOID_RSA_RC4 \"1.2.840.113549.3.4\"\0"
	.byte	0x1
	.uleb128 0x2f6
	.ascii "szOID_RSA_DES_EDE3_CBC \"1.2.840.113549.3.7\"\0"
	.byte	0x1
	.uleb128 0x2f7
	.ascii "szOID_RSA_RC5_CBCPad \"1.2.840.113549.3.9\"\0"
	.byte	0x1
	.uleb128 0x2f9
	.ascii "szOID_ANSI_X942 \"1.2.840.10046\"\0"
	.byte	0x1
	.uleb128 0x2fa
	.ascii "szOID_ANSI_X942_DH \"1.2.840.10046.2.1\"\0"
	.byte	0x1
	.uleb128 0x2fc
	.ascii "szOID_X957 \"1.2.840.10040\"\0"
	.byte	0x1
	.uleb128 0x2fd
	.ascii "szOID_X957_DSA \"1.2.840.10040.4.1\"\0"
	.byte	0x1
	.uleb128 0x2fe
	.ascii "szOID_X957_SHA1DSA \"1.2.840.10040.4.3\"\0"
	.byte	0x1
	.uleb128 0x300
	.ascii "szOID_DS \"2.5\"\0"
	.byte	0x1
	.uleb128 0x301
	.ascii "szOID_DSALG \"2.5.8\"\0"
	.byte	0x1
	.uleb128 0x302
	.ascii "szOID_DSALG_CRPT \"2.5.8.1\"\0"
	.byte	0x1
	.uleb128 0x303
	.ascii "szOID_DSALG_HASH \"2.5.8.2\"\0"
	.byte	0x1
	.uleb128 0x304
	.ascii "szOID_DSALG_SIGN \"2.5.8.3\"\0"
	.byte	0x1
	.uleb128 0x305
	.ascii "szOID_DSALG_RSA \"2.5.8.1.1\"\0"
	.byte	0x1
	.uleb128 0x307
	.ascii "szOID_OIW \"1.3.14\"\0"
	.byte	0x1
	.uleb128 0x309
	.ascii "szOID_OIWSEC \"1.3.14.3.2\"\0"
	.byte	0x1
	.uleb128 0x30a
	.ascii "szOID_OIWSEC_md4RSA \"1.3.14.3.2.2\"\0"
	.byte	0x1
	.uleb128 0x30b
	.ascii "szOID_OIWSEC_md5RSA \"1.3.14.3.2.3\"\0"
	.byte	0x1
	.uleb128 0x30c
	.ascii "szOID_OIWSEC_md4RSA2 \"1.3.14.3.2.4\"\0"
	.byte	0x1
	.uleb128 0x30d
	.ascii "szOID_OIWSEC_desECB \"1.3.14.3.2.6\"\0"
	.byte	0x1
	.uleb128 0x30e
	.ascii "szOID_OIWSEC_desCBC \"1.3.14.3.2.7\"\0"
	.byte	0x1
	.uleb128 0x30f
	.ascii "szOID_OIWSEC_desOFB \"1.3.14.3.2.8\"\0"
	.byte	0x1
	.uleb128 0x310
	.ascii "szOID_OIWSEC_desCFB \"1.3.14.3.2.9\"\0"
	.byte	0x1
	.uleb128 0x311
	.ascii "szOID_OIWSEC_desMAC \"1.3.14.3.2.10\"\0"
	.byte	0x1
	.uleb128 0x312
	.ascii "szOID_OIWSEC_rsaSign \"1.3.14.3.2.11\"\0"
	.byte	0x1
	.uleb128 0x313
	.ascii "szOID_OIWSEC_dsa \"1.3.14.3.2.12\"\0"
	.byte	0x1
	.uleb128 0x314
	.ascii "szOID_OIWSEC_shaDSA \"1.3.14.3.2.13\"\0"
	.byte	0x1
	.uleb128 0x315
	.ascii "szOID_OIWSEC_mdc2RSA \"1.3.14.3.2.14\"\0"
	.byte	0x1
	.uleb128 0x316
	.ascii "szOID_OIWSEC_shaRSA \"1.3.14.3.2.15\"\0"
	.byte	0x1
	.uleb128 0x317
	.ascii "szOID_OIWSEC_dhCommMod \"1.3.14.3.2.16\"\0"
	.byte	0x1
	.uleb128 0x318
	.ascii "szOID_OIWSEC_desEDE \"1.3.14.3.2.17\"\0"
	.byte	0x1
	.uleb128 0x319
	.ascii "szOID_OIWSEC_sha \"1.3.14.3.2.18\"\0"
	.byte	0x1
	.uleb128 0x31a
	.ascii "szOID_OIWSEC_mdc2 \"1.3.14.3.2.19\"\0"
	.byte	0x1
	.uleb128 0x31b
	.ascii "szOID_OIWSEC_dsaComm \"1.3.14.3.2.20\"\0"
	.byte	0x1
	.uleb128 0x31c
	.ascii "szOID_OIWSEC_dsaCommSHA \"1.3.14.3.2.21\"\0"
	.byte	0x1
	.uleb128 0x31d
	.ascii "szOID_OIWSEC_rsaXchg \"1.3.14.3.2.22\"\0"
	.byte	0x1
	.uleb128 0x31e
	.ascii "szOID_OIWSEC_keyHashSeal \"1.3.14.3.2.23\"\0"
	.byte	0x1
	.uleb128 0x31f
	.ascii "szOID_OIWSEC_md2RSASign \"1.3.14.3.2.24\"\0"
	.byte	0x1
	.uleb128 0x320
	.ascii "szOID_OIWSEC_md5RSASign \"1.3.14.3.2.25\"\0"
	.byte	0x1
	.uleb128 0x321
	.ascii "szOID_OIWSEC_sha1 \"1.3.14.3.2.26\"\0"
	.byte	0x1
	.uleb128 0x322
	.ascii "szOID_OIWSEC_dsaSHA1 \"1.3.14.3.2.27\"\0"
	.byte	0x1
	.uleb128 0x323
	.ascii "szOID_OIWSEC_dsaCommSHA1 \"1.3.14.3.2.28\"\0"
	.byte	0x1
	.uleb128 0x324
	.ascii "szOID_OIWSEC_sha1RSASign \"1.3.14.3.2.29\"\0"
	.byte	0x1
	.uleb128 0x326
	.ascii "szOID_OIWDIR \"1.3.14.7.2\"\0"
	.byte	0x1
	.uleb128 0x327
	.ascii "szOID_OIWDIR_CRPT \"1.3.14.7.2.1\"\0"
	.byte	0x1
	.uleb128 0x328
	.ascii "szOID_OIWDIR_HASH \"1.3.14.7.2.2\"\0"
	.byte	0x1
	.uleb128 0x329
	.ascii "szOID_OIWDIR_SIGN \"1.3.14.7.2.3\"\0"
	.byte	0x1
	.uleb128 0x32a
	.ascii "szOID_OIWDIR_md2 \"1.3.14.7.2.2.1\"\0"
	.byte	0x1
	.uleb128 0x32b
	.ascii "szOID_OIWDIR_md2RSA \"1.3.14.7.2.3.1\"\0"
	.byte	0x1
	.uleb128 0x32d
	.ascii "szOID_INFOSEC \"2.16.840.1.101.2.1\"\0"
	.byte	0x1
	.uleb128 0x32e
	.ascii "szOID_INFOSEC_sdnsSignature \"2.16.840.1.101.2.1.1.1\"\0"
	.byte	0x1
	.uleb128 0x32f
	.ascii "szOID_INFOSEC_mosaicSignature \"2.16.840.1.101.2.1.1.2\"\0"
	.byte	0x1
	.uleb128 0x330
	.ascii "szOID_INFOSEC_sdnsConfidentiality \"2.16.840.1.101.2.1.1.3\"\0"
	.byte	0x1
	.uleb128 0x331
	.ascii "szOID_INFOSEC_mosaicConfidentiality \"2.16.840.1.101.2.1.1.4\"\0"
	.byte	0x1
	.uleb128 0x332
	.ascii "szOID_INFOSEC_sdnsIntegrity \"2.16.840.1.101.2.1.1.5\"\0"
	.byte	0x1
	.uleb128 0x333
	.ascii "szOID_INFOSEC_mosaicIntegrity \"2.16.840.1.101.2.1.1.6\"\0"
	.byte	0x1
	.uleb128 0x334
	.ascii "szOID_INFOSEC_sdnsTokenProtection \"2.16.840.1.101.2.1.1.7\"\0"
	.byte	0x1
	.uleb128 0x335
	.ascii "szOID_INFOSEC_mosaicTokenProtection \"2.16.840.1.101.2.1.1.8\"\0"
	.byte	0x1
	.uleb128 0x336
	.ascii "szOID_INFOSEC_sdnsKeyManagement \"2.16.840.1.101.2.1.1.9\"\0"
	.byte	0x1
	.uleb128 0x337
	.ascii "szOID_INFOSEC_mosaicKeyManagement \"2.16.840.1.101.2.1.1.10\"\0"
	.byte	0x1
	.uleb128 0x338
	.ascii "szOID_INFOSEC_sdnsKMandSig \"2.16.840.1.101.2.1.1.11\"\0"
	.byte	0x1
	.uleb128 0x339
	.ascii "szOID_INFOSEC_mosaicKMandSig \"2.16.840.1.101.2.1.1.12\"\0"
	.byte	0x1
	.uleb128 0x33a
	.ascii "szOID_INFOSEC_SuiteASignature \"2.16.840.1.101.2.1.1.13\"\0"
	.byte	0x1
	.uleb128 0x33b
	.ascii "szOID_INFOSEC_SuiteAConfidentiality \"2.16.840.1.101.2.1.1.14\"\0"
	.byte	0x1
	.uleb128 0x33c
	.ascii "szOID_INFOSEC_SuiteAIntegrity \"2.16.840.1.101.2.1.1.15\"\0"
	.byte	0x1
	.uleb128 0x33d
	.ascii "szOID_INFOSEC_SuiteATokenProtection \"2.16.840.1.101.2.1.1.16\"\0"
	.byte	0x1
	.uleb128 0x33e
	.ascii "szOID_INFOSEC_SuiteAKeyManagement \"2.16.840.1.101.2.1.1.17\"\0"
	.byte	0x1
	.uleb128 0x33f
	.ascii "szOID_INFOSEC_SuiteAKMandSig \"2.16.840.1.101.2.1.1.18\"\0"
	.byte	0x1
	.uleb128 0x340
	.ascii "szOID_INFOSEC_mosaicUpdatedSig \"2.16.840.1.101.2.1.1.19\"\0"
	.byte	0x1
	.uleb128 0x341
	.ascii "szOID_INFOSEC_mosaicKMandUpdSig \"2.16.840.1.101.2.1.1.20\"\0"
	.byte	0x1
	.uleb128 0x342
	.ascii "szOID_INFOSEC_mosaicUpdatedInteg \"2.16.840.1.101.2.1.1.21\"\0"
	.byte	0x1
	.uleb128 0x344
	.ascii "szOID_NIST_AES128_CBC \"2.16.840.1.101.3.4.1.2\"\0"
	.byte	0x1
	.uleb128 0x345
	.ascii "szOID_NIST_AES192_CBC \"2.16.840.1.101.3.4.1.22\"\0"
	.byte	0x1
	.uleb128 0x346
	.ascii "szOID_NIST_AES256_CBC \"2.16.840.1.101.3.4.1.42\"\0"
	.byte	0x1
	.uleb128 0x36e
	.ascii "szOID_COMMON_NAME \"2.5.4.3\"\0"
	.byte	0x1
	.uleb128 0x36f
	.ascii "szOID_SUR_NAME \"2.5.4.4\"\0"
	.byte	0x1
	.uleb128 0x370
	.ascii "szOID_DEVICE_SERIAL_NUMBER \"2.5.4.5\"\0"
	.byte	0x1
	.uleb128 0x371
	.ascii "szOID_COUNTRY_NAME \"2.5.4.6\"\0"
	.byte	0x1
	.uleb128 0x372
	.ascii "szOID_LOCALITY_NAME \"2.5.4.7\"\0"
	.byte	0x1
	.uleb128 0x373
	.ascii "szOID_STATE_OR_PROVINCE_NAME \"2.5.4.8\"\0"
	.byte	0x1
	.uleb128 0x374
	.ascii "szOID_STREET_ADDRESS \"2.5.4.9\"\0"
	.byte	0x1
	.uleb128 0x375
	.ascii "szOID_ORGANIZATION_NAME \"2.5.4.10\"\0"
	.byte	0x1
	.uleb128 0x376
	.ascii "szOID_ORGANIZATIONAL_UNIT_NAME \"2.5.4.11\"\0"
	.byte	0x1
	.uleb128 0x377
	.ascii "szOID_TITLE \"2.5.4.12\"\0"
	.byte	0x1
	.uleb128 0x378
	.ascii "szOID_DESCRIPTION \"2.5.4.13\"\0"
	.byte	0x1
	.uleb128 0x379
	.ascii "szOID_SEARCH_GUIDE \"2.5.4.14\"\0"
	.byte	0x1
	.uleb128 0x37a
	.ascii "szOID_BUSINESS_CATEGORY \"2.5.4.15\"\0"
	.byte	0x1
	.uleb128 0x37b
	.ascii "szOID_POSTAL_ADDRESS \"2.5.4.16\"\0"
	.byte	0x1
	.uleb128 0x37c
	.ascii "szOID_POSTAL_CODE \"2.5.4.17\"\0"
	.byte	0x1
	.uleb128 0x37d
	.ascii "szOID_POST_OFFICE_BOX \"2.5.4.18\"\0"
	.byte	0x1
	.uleb128 0x37e
	.ascii "szOID_PHYSICAL_DELIVERY_OFFICE_NAME \"2.5.4.19\"\0"
	.byte	0x1
	.uleb128 0x37f
	.ascii "szOID_TELEPHONE_NUMBER \"2.5.4.20\"\0"
	.byte	0x1
	.uleb128 0x380
	.ascii "szOID_TELEX_NUMBER \"2.5.4.21\"\0"
	.byte	0x1
	.uleb128 0x381
	.ascii "szOID_TELETEXT_TERMINAL_IDENTIFIER \"2.5.4.22\"\0"
	.byte	0x1
	.uleb128 0x382
	.ascii "szOID_FACSIMILE_TELEPHONE_NUMBER \"2.5.4.23\"\0"
	.byte	0x1
	.uleb128 0x383
	.ascii "szOID_X21_ADDRESS \"2.5.4.24\"\0"
	.byte	0x1
	.uleb128 0x384
	.ascii "szOID_INTERNATIONAL_ISDN_NUMBER \"2.5.4.25\"\0"
	.byte	0x1
	.uleb128 0x385
	.ascii "szOID_REGISTERED_ADDRESS \"2.5.4.26\"\0"
	.byte	0x1
	.uleb128 0x386
	.ascii "szOID_DESTINATION_INDICATOR \"2.5.4.27\"\0"
	.byte	0x1
	.uleb128 0x387
	.ascii "szOID_PREFERRED_DELIVERY_METHOD \"2.5.4.28\"\0"
	.byte	0x1
	.uleb128 0x388
	.ascii "szOID_PRESENTATION_ADDRESS \"2.5.4.29\"\0"
	.byte	0x1
	.uleb128 0x389
	.ascii "szOID_SUPPORTED_APPLICATION_CONTEXT \"2.5.4.30\"\0"
	.byte	0x1
	.uleb128 0x38a
	.ascii "szOID_MEMBER \"2.5.4.31\"\0"
	.byte	0x1
	.uleb128 0x38b
	.ascii "szOID_OWNER \"2.5.4.32\"\0"
	.byte	0x1
	.uleb128 0x38c
	.ascii "szOID_ROLE_OCCUPANT \"2.5.4.33\"\0"
	.byte	0x1
	.uleb128 0x38d
	.ascii "szOID_SEE_ALSO \"2.5.4.34\"\0"
	.byte	0x1
	.uleb128 0x38e
	.ascii "szOID_USER_PASSWORD \"2.5.4.35\"\0"
	.byte	0x1
	.uleb128 0x38f
	.ascii "szOID_USER_CERTIFICATE \"2.5.4.36\"\0"
	.byte	0x1
	.uleb128 0x390
	.ascii "szOID_CA_CERTIFICATE \"2.5.4.37\"\0"
	.byte	0x1
	.uleb128 0x391
	.ascii "szOID_AUTHORITY_REVOCATION_LIST \"2.5.4.38\"\0"
	.byte	0x1
	.uleb128 0x392
	.ascii "szOID_CERTIFICATE_REVOCATION_LIST \"2.5.4.39\"\0"
	.byte	0x1
	.uleb128 0x393
	.ascii "szOID_CROSS_CERTIFICATE_PAIR \"2.5.4.40\"\0"
	.byte	0x1
	.uleb128 0x394
	.ascii "szOID_GIVEN_NAME \"2.5.4.42\"\0"
	.byte	0x1
	.uleb128 0x395
	.ascii "szOID_INITIALS \"2.5.4.43\"\0"
	.byte	0x1
	.uleb128 0x396
	.ascii "szOID_DN_QUALIFIER \"2.5.4.46\"\0"
	.byte	0x1
	.uleb128 0x397
	.ascii "szOID_DOMAIN_COMPONENT \"0.9.2342.19200300.100.1.25\"\0"
	.byte	0x1
	.uleb128 0x398
	.ascii "szOID_PKCS_12_FRIENDLY_NAME_ATTR \"1.2.840.113549.1.9.20\"\0"
	.byte	0x1
	.uleb128 0x399
	.ascii "szOID_PKCS_12_LOCAL_KEY_ID \"1.2.840.113549.1.9.21\"\0"
	.byte	0x1
	.uleb128 0x39a
	.ascii "szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR \"1.3.6.1.4.1.311.17.1\"\0"
	.byte	0x1
	.uleb128 0x39b
	.ascii "szOID_LOCAL_MACHINE_KEYSET \"1.3.6.1.4.1.311.17.2\"\0"
	.byte	0x1
	.uleb128 0x39c
	.ascii "szOID_KEYID_RDN \"1.3.6.1.4.1.311.10.7.1\"\0"
	.byte	0x1
	.uleb128 0x39e
	.ascii "CERT_RDN_ANY_TYPE 0\0"
	.byte	0x1
	.uleb128 0x39f
	.ascii "CERT_RDN_ENCODED_BLOB 1\0"
	.byte	0x1
	.uleb128 0x3a0
	.ascii "CERT_RDN_OCTET_STRING 2\0"
	.byte	0x1
	.uleb128 0x3a1
	.ascii "CERT_RDN_NUMERIC_STRING 3\0"
	.byte	0x1
	.uleb128 0x3a2
	.ascii "CERT_RDN_PRINTABLE_STRING 4\0"
	.byte	0x1
	.uleb128 0x3a3
	.ascii "CERT_RDN_TELETEX_STRING 5\0"
	.byte	0x1
	.uleb128 0x3a4
	.ascii "CERT_RDN_T61_STRING 5\0"
	.byte	0x1
	.uleb128 0x3a5
	.ascii "CERT_RDN_VIDEOTEX_STRING 6\0"
	.byte	0x1
	.uleb128 0x3a6
	.ascii "CERT_RDN_IA5_STRING 7\0"
	.byte	0x1
	.uleb128 0x3a7
	.ascii "CERT_RDN_GRAPHIC_STRING 8\0"
	.byte	0x1
	.uleb128 0x3a8
	.ascii "CERT_RDN_VISIBLE_STRING 9\0"
	.byte	0x1
	.uleb128 0x3a9
	.ascii "CERT_RDN_ISO646_STRING 9\0"
	.byte	0x1
	.uleb128 0x3aa
	.ascii "CERT_RDN_GENERAL_STRING 10\0"
	.byte	0x1
	.uleb128 0x3ab
	.ascii "CERT_RDN_UNIVERSAL_STRING 11\0"
	.byte	0x1
	.uleb128 0x3ac
	.ascii "CERT_RDN_INT4_STRING 11\0"
	.byte	0x1
	.uleb128 0x3ad
	.ascii "CERT_RDN_BMP_STRING 12\0"
	.byte	0x1
	.uleb128 0x3ae
	.ascii "CERT_RDN_UNICODE_STRING 12\0"
	.byte	0x1
	.uleb128 0x3af
	.ascii "CERT_RDN_UTF8_STRING 13\0"
	.byte	0x1
	.uleb128 0x3b0
	.ascii "CERT_RDN_TYPE_MASK 0xff\0"
	.byte	0x1
	.uleb128 0x3b1
	.ascii "CERT_RDN_FLAGS_MASK 0xff000000\0"
	.byte	0x1
	.uleb128 0x3b2
	.ascii "CERT_RDN_ENABLE_T61_UNICODE_FLAG 0x80000000\0"
	.byte	0x1
	.uleb128 0x3b3
	.ascii "CERT_RDN_ENABLE_UTF8_UNICODE_FLAG 0x20000000\0"
	.byte	0x1
	.uleb128 0x3b4
	.ascii "CERT_RDN_FORCE_UTF8_UNICODE_FLAG 0x10000000\0"
	.byte	0x1
	.uleb128 0x3b5
	.ascii "CERT_RDN_DISABLE_CHECK_TYPE_FLAG 0x40000000\0"
	.byte	0x1
	.uleb128 0x3b6
	.ascii "CERT_RDN_DISABLE_IE4_UTF8_FLAG 0x1000000\0"
	.byte	0x1
	.uleb128 0x3b8
	.ascii "IS_CERT_RDN_CHAR_STRING(X) (((X) & CERT_RDN_TYPE_MASK) >= CERT_RDN_NUMERIC_STRING)\0"
	.byte	0x1
	.uleb128 0x3ce
	.ascii "CERT_RSA_PUBLIC_KEY_OBJID szOID_RSA_RSA\0"
	.byte	0x1
	.uleb128 0x3cf
	.ascii "CERT_DEFAULT_OID_PUBLIC_KEY_SIGN szOID_RSA_RSA\0"
	.byte	0x1
	.uleb128 0x3d0
	.ascii "CERT_DEFAULT_OID_PUBLIC_KEY_XCHG szOID_RSA_RSA\0"
	.byte	0x1
	.uleb128 0x401
	.ascii "CERT_V1 0\0"
	.byte	0x1
	.uleb128 0x402
	.ascii "CERT_V2 1\0"
	.byte	0x1
	.uleb128 0x403
	.ascii "CERT_V3 2\0"
	.byte	0x1
	.uleb128 0x405
	.ascii "CERT_INFO_VERSION_FLAG 1\0"
	.byte	0x1
	.uleb128 0x406
	.ascii "CERT_INFO_SERIAL_NUMBER_FLAG 2\0"
	.byte	0x1
	.uleb128 0x407
	.ascii "CERT_INFO_SIGNATURE_ALGORITHM_FLAG 3\0"
	.byte	0x1
	.uleb128 0x408
	.ascii "CERT_INFO_ISSUER_FLAG 4\0"
	.byte	0x1
	.uleb128 0x409
	.ascii "CERT_INFO_NOT_BEFORE_FLAG 5\0"
	.byte	0x1
	.uleb128 0x40a
	.ascii "CERT_INFO_NOT_AFTER_FLAG 6\0"
	.byte	0x1
	.uleb128 0x40b
	.ascii "CERT_INFO_SUBJECT_FLAG 7\0"
	.byte	0x1
	.uleb128 0x40c
	.ascii "CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG 8\0"
	.byte	0x1
	.uleb128 0x40d
	.ascii "CERT_INFO_ISSUER_UNIQUE_ID_FLAG 9\0"
	.byte	0x1
	.uleb128 0x40e
	.ascii "CERT_INFO_SUBJECT_UNIQUE_ID_FLAG 10\0"
	.byte	0x1
	.uleb128 0x40f
	.ascii "CERT_INFO_EXTENSION_FLAG 11\0"
	.byte	0x1
	.uleb128 0x424
	.ascii "CRL_V1 0\0"
	.byte	0x1
	.uleb128 0x425
	.ascii "CRL_V2 1\0"
	.byte	0x1
	.uleb128 0x42f
	.ascii "CERT_REQUEST_V1 0\0"
	.byte	0x1
	.uleb128 0x437
	.ascii "CERT_KEYGEN_REQUEST_V1 0\0"
	.byte	0x1
	.uleb128 0x458
	.ascii "CTL_V1 0\0"
	.byte	0x1
	.uleb128 0x46d
	.ascii "CERT_ENCODING_TYPE_MASK 0xffff\0"
	.byte	0x1
	.uleb128 0x46e
	.ascii "CMSG_ENCODING_TYPE_MASK 0xffff0000\0"
	.byte	0x1
	.uleb128 0x46f
	.ascii "GET_CERT_ENCODING_TYPE(T) ((T) & CERT_ENCODING_TYPE_MASK)\0"
	.byte	0x1
	.uleb128 0x470
	.ascii "GET_CMSG_ENCODING_TYPE(T) ((T) & CMSG_ENCODING_TYPE_MASK)\0"
	.byte	0x1
	.uleb128 0x472
	.ascii "CRYPT_ASN_ENCODING 0x1\0"
	.byte	0x1
	.uleb128 0x473
	.ascii "CRYPT_NDR_ENCODING 0x2\0"
	.byte	0x1
	.uleb128 0x474
	.ascii "X509_ASN_ENCODING 0x1\0"
	.byte	0x1
	.uleb128 0x475
	.ascii "X509_NDR_ENCODING 0x2\0"
	.byte	0x1
	.uleb128 0x476
	.ascii "PKCS_7_ASN_ENCODING 0x10000\0"
	.byte	0x1
	.uleb128 0x477
	.ascii "PKCS_7_NDR_ENCODING 0x20000\0"
	.byte	0x1
	.uleb128 0x47b
	.ascii "CRYPT_FORMAT_STR_MULTI_LINE 0x1\0"
	.byte	0x1
	.uleb128 0x47c
	.ascii "CRYPT_FORMAT_STR_NO_HEX 0x10\0"
	.byte	0x1
	.uleb128 0x47d
	.ascii "CRYPT_FORMAT_SIMPLE 0x1\0"
	.byte	0x1
	.uleb128 0x47e
	.ascii "CRYPT_FORMAT_X509 0x2\0"
	.byte	0x1
	.uleb128 0x47f
	.ascii "CRYPT_FORMAT_OID 0x4\0"
	.byte	0x1
	.uleb128 0x480
	.ascii "CRYPT_FORMAT_RDN_SEMICOLON 0x100\0"
	.byte	0x1
	.uleb128 0x481
	.ascii "CRYPT_FORMAT_RDN_CRLF 0x200\0"
	.byte	0x1
	.uleb128 0x482
	.ascii "CRYPT_FORMAT_RDN_UNQUOTE 0x400\0"
	.byte	0x1
	.uleb128 0x483
	.ascii "CRYPT_FORMAT_RDN_REVERSE 0x800\0"
	.byte	0x1
	.uleb128 0x484
	.ascii "CRYPT_FORMAT_COMMA 0x1000\0"
	.byte	0x1
	.uleb128 0x485
	.ascii "CRYPT_FORMAT_SEMICOLON CRYPT_FORMAT_RDN_SEMICOLON\0"
	.byte	0x1
	.uleb128 0x486
	.ascii "CRYPT_FORMAT_CRLF CRYPT_FORMAT_RDN_CRLF\0"
	.byte	0x1
	.uleb128 0x494
	.ascii "CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0x495
	.ascii "CRYPT_ENCODE_ALLOC_FLAG 0x8000\0"
	.byte	0x1
	.uleb128 0x496
	.ascii "CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG CERT_RDN_ENABLE_T61_UNICODE_FLAG\0"
	.byte	0x1
	.uleb128 0x497
	.ascii "CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG CERT_RDN_ENABLE_UTF8_UNICODE_FLAG\0"
	.byte	0x1
	.uleb128 0x498
	.ascii "CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG CERT_RDN_FORCE_UTF8_UNICODE_FLAG\0"
	.byte	0x1
	.uleb128 0x499
	.ascii "CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG CERT_RDN_DISABLE_CHECK_TYPE_FLAG\0"
	.byte	0x1
	.uleb128 0x49a
	.ascii "CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG 0x10000\0"
	.byte	0x1
	.uleb128 0x4a5
	.ascii "CRYPT_DECODE_NOCOPY_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0x4a6
	.ascii "CRYPT_DECODE_TO_BE_SIGNED_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0x4a7
	.ascii "CRYPT_DECODE_SHARE_OID_STRING_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0x4a8
	.ascii "CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0x4a9
	.ascii "CRYPT_DECODE_ALLOC_FLAG 0x8000\0"
	.byte	0x1
	.uleb128 0x4aa
	.ascii "CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG CERT_RDN_DISABLE_IE4_UTF8_FLAG\0"
	.byte	0x1
	.uleb128 0x4ab
	.ascii "CRYPT_ENCODE_DECODE_NONE 0\0"
	.byte	0x1
	.uleb128 0x4ac
	.ascii "X509_CERT ((LPCSTR) 1)\0"
	.byte	0x1
	.uleb128 0x4ad
	.ascii "X509_CERT_TO_BE_SIGNED ((LPCSTR) 2)\0"
	.byte	0x1
	.uleb128 0x4ae
	.ascii "X509_CERT_CRL_TO_BE_SIGNED ((LPCSTR) 3)\0"
	.byte	0x1
	.uleb128 0x4af
	.ascii "X509_CERT_REQUEST_TO_BE_SIGNED ((LPCSTR) 4)\0"
	.byte	0x1
	.uleb128 0x4b0
	.ascii "X509_EXTENSIONS ((LPCSTR) 5)\0"
	.byte	0x1
	.uleb128 0x4b1
	.ascii "X509_NAME_VALUE ((LPCSTR) 6)\0"
	.byte	0x1
	.uleb128 0x4b2
	.ascii "X509_NAME ((LPCSTR) 7)\0"
	.byte	0x1
	.uleb128 0x4b3
	.ascii "X509_PUBLIC_KEY_INFO ((LPCSTR) 8)\0"
	.byte	0x1
	.uleb128 0x4b4
	.ascii "X509_AUTHORITY_KEY_ID ((LPCSTR) 9)\0"
	.byte	0x1
	.uleb128 0x4b5
	.ascii "X509_KEY_ATTRIBUTES ((LPCSTR) 10)\0"
	.byte	0x1
	.uleb128 0x4b6
	.ascii "X509_KEY_USAGE_RESTRICTION ((LPCSTR) 11)\0"
	.byte	0x1
	.uleb128 0x4b7
	.ascii "X509_ALTERNATE_NAME ((LPCSTR) 12)\0"
	.byte	0x1
	.uleb128 0x4b8
	.ascii "X509_BASIC_CONSTRAINTS ((LPCSTR) 13)\0"
	.byte	0x1
	.uleb128 0x4b9
	.ascii "X509_KEY_USAGE ((LPCSTR) 14)\0"
	.byte	0x1
	.uleb128 0x4ba
	.ascii "X509_BASIC_CONSTRAINTS2 ((LPCSTR) 15)\0"
	.byte	0x1
	.uleb128 0x4bb
	.ascii "X509_CERT_POLICIES ((LPCSTR) 16)\0"
	.byte	0x1
	.uleb128 0x4bc
	.ascii "PKCS_UTC_TIME ((LPCSTR) 17)\0"
	.byte	0x1
	.uleb128 0x4bd
	.ascii "PKCS_TIME_REQUEST ((LPCSTR) 18)\0"
	.byte	0x1
	.uleb128 0x4be
	.ascii "RSA_CSP_PUBLICKEYBLOB ((LPCSTR) 19)\0"
	.byte	0x1
	.uleb128 0x4bf
	.ascii "X509_UNICODE_NAME ((LPCSTR) 20)\0"
	.byte	0x1
	.uleb128 0x4c0
	.ascii "X509_KEYGEN_REQUEST_TO_BE_SIGNED ((LPCSTR) 21)\0"
	.byte	0x1
	.uleb128 0x4c1
	.ascii "PKCS_ATTRIBUTE ((LPCSTR) 22)\0"
	.byte	0x1
	.uleb128 0x4c2
	.ascii "PKCS_CONTENT_INFO_SEQUENCE_OF_ANY ((LPCSTR) 23)\0"
	.byte	0x1
	.uleb128 0x4c3
	.ascii "X509_UNICODE_NAME_VALUE ((LPCSTR) 24)\0"
	.byte	0x1
	.uleb128 0x4c4
	.ascii "X509_ANY_STRING X509_NAME_VALUE\0"
	.byte	0x1
	.uleb128 0x4c5
	.ascii "X509_UNICODE_ANY_STRING X509_UNICODE_NAME_VALUE\0"
	.byte	0x1
	.uleb128 0x4c6
	.ascii "X509_OCTET_STRING ((LPCSTR) 25)\0"
	.byte	0x1
	.uleb128 0x4c7
	.ascii "X509_BITS ((LPCSTR) 26)\0"
	.byte	0x1
	.uleb128 0x4c8
	.ascii "X509_INTEGER ((LPCSTR) 27)\0"
	.byte	0x1
	.uleb128 0x4c9
	.ascii "X509_MULTI_BYTE_INTEGER ((LPCSTR) 28)\0"
	.byte	0x1
	.uleb128 0x4ca
	.ascii "X509_ENUMERATED ((LPCSTR) 29)\0"
	.byte	0x1
	.uleb128 0x4cb
	.ascii "X509_CHOICE_OF_TIME ((LPCSTR) 30)\0"
	.byte	0x1
	.uleb128 0x4cc
	.ascii "X509_AUTHORITY_KEY_ID2 ((LPCSTR) 31)\0"
	.byte	0x1
	.uleb128 0x4cd
	.ascii "X509_AUTHORITY_INFO_ACCESS ((LPCSTR) 32)\0"
	.byte	0x1
	.uleb128 0x4ce
	.ascii "X509_CRL_REASON_CODE X509_ENUMERATED\0"
	.byte	0x1
	.uleb128 0x4cf
	.ascii "PKCS_CONTENT_INFO ((LPCSTR) 33)\0"
	.byte	0x1
	.uleb128 0x4d0
	.ascii "X509_SEQUENCE_OF_ANY ((LPCSTR) 34)\0"
	.byte	0x1
	.uleb128 0x4d1
	.ascii "X509_CRL_DIST_POINTS ((LPCSTR) 35)\0"
	.byte	0x1
	.uleb128 0x4d2
	.ascii "X509_ENHANCED_KEY_USAGE ((LPCSTR) 36)\0"
	.byte	0x1
	.uleb128 0x4d3
	.ascii "PKCS_CTL ((LPCSTR) 37)\0"
	.byte	0x1
	.uleb128 0x4d4
	.ascii "X509_MULTI_BYTE_UINT ((LPCSTR) 38)\0"
	.byte	0x1
	.uleb128 0x4d5
	.ascii "X509_DSS_PUBLICKEY X509_MULTI_BYTE_UINT\0"
	.byte	0x1
	.uleb128 0x4d6
	.ascii "X509_DSS_PARAMETERS ((LPCSTR) 39)\0"
	.byte	0x1
	.uleb128 0x4d7
	.ascii "X509_DSS_SIGNATURE ((LPCSTR) 40)\0"
	.byte	0x1
	.uleb128 0x4d8
	.ascii "PKCS_RC2_CBC_PARAMETERS ((LPCSTR) 41)\0"
	.byte	0x1
	.uleb128 0x4d9
	.ascii "PKCS_SMIME_CAPABILITIES ((LPCSTR) 42)\0"
	.byte	0x1
	.uleb128 0x4da
	.ascii "PKCS_RSA_PRIVATE_KEY ((LPCSTR) 43)\0"
	.byte	0x1
	.uleb128 0x4db
	.ascii "PKCS_PRIVATE_KEY_INFO ((LPCSTR) 44)\0"
	.byte	0x1
	.uleb128 0x4dc
	.ascii "PKCS_ENCRYPTED_PRIVATE_KEY_INFO ((LPCSTR) 45)\0"
	.byte	0x1
	.uleb128 0x4dd
	.ascii "X509_PKIX_POLICY_QUALIFIER_USERNOTICE ((LPCSTR) 46)\0"
	.byte	0x1
	.uleb128 0x4de
	.ascii "X509_DH_PUBLICKEY X509_MULTI_BYTE_UINT\0"
	.byte	0x1
	.uleb128 0x4df
	.ascii "X509_DH_PARAMETERS ((LPCSTR) 47)\0"
	.byte	0x1
	.uleb128 0x4e0
	.ascii "PKCS_ATTRIBUTES ((LPCSTR) 48)\0"
	.byte	0x1
	.uleb128 0x4e1
	.ascii "PKCS_SORTED_CTL ((LPCSTR) 49)\0"
	.byte	0x1
	.uleb128 0x4e3
	.ascii "X509_ECC_SIGNATURE ((LPCSTR) 47)\0"
	.byte	0x1
	.uleb128 0x4e5
	.ascii "X942_DH_PARAMETERS ((LPCSTR) 50)\0"
	.byte	0x1
	.uleb128 0x4e6
	.ascii "X509_BITS_WITHOUT_TRAILING_ZEROES ((LPCSTR) 51)\0"
	.byte	0x1
	.uleb128 0x4e7
	.ascii "X942_OTHER_INFO ((LPCSTR) 52)\0"
	.byte	0x1
	.uleb128 0x4e8
	.ascii "X509_CERT_PAIR ((LPCSTR) 53)\0"
	.byte	0x1
	.uleb128 0x4e9
	.ascii "X509_ISSUING_DIST_POINT ((LPCSTR) 54)\0"
	.byte	0x1
	.uleb128 0x4ea
	.ascii "X509_NAME_CONSTRAINTS ((LPCSTR) 55)\0"
	.byte	0x1
	.uleb128 0x4eb
	.ascii "X509_POLICY_MAPPINGS ((LPCSTR) 56)\0"
	.byte	0x1
	.uleb128 0x4ec
	.ascii "X509_POLICY_CONSTRAINTS ((LPCSTR) 57)\0"
	.byte	0x1
	.uleb128 0x4ed
	.ascii "X509_CROSS_CERT_DIST_POINTS ((LPCSTR) 58)\0"
	.byte	0x1
	.uleb128 0x4ee
	.ascii "CMC_DATA ((LPCSTR) 59)\0"
	.byte	0x1
	.uleb128 0x4ef
	.ascii "CMC_RESPONSE ((LPCSTR) 60)\0"
	.byte	0x1
	.uleb128 0x4f0
	.ascii "CMC_STATUS ((LPCSTR) 61)\0"
	.byte	0x1
	.uleb128 0x4f1
	.ascii "CMC_ADD_EXTENSIONS ((LPCSTR) 62)\0"
	.byte	0x1
	.uleb128 0x4f2
	.ascii "CMC_ADD_ATTRIBUTES ((LPCSTR) 63)\0"
	.byte	0x1
	.uleb128 0x4f3
	.ascii "X509_CERTIFICATE_TEMPLATE ((LPCSTR) 64)\0"
	.byte	0x1
	.uleb128 0x4f4
	.ascii "OCSP_SIGNED_REQUEST ((LPCSTR) 65)\0"
	.byte	0x1
	.uleb128 0x4f5
	.ascii "OCSP_REQUEST ((LPCSTR) 66)\0"
	.byte	0x1
	.uleb128 0x4f6
	.ascii "OCSP_RESPONSE ((LPCSTR) 67)\0"
	.byte	0x1
	.uleb128 0x4f7
	.ascii "OCSP_BASIC_SIGNED_RESPONSE ((LPCSTR) 68)\0"
	.byte	0x1
	.uleb128 0x4f8
	.ascii "OCSP_BASIC_RESPONSE ((LPCSTR) 69)\0"
	.byte	0x1
	.uleb128 0x4f9
	.ascii "X509_LOGOTYPE_EXT ((LPCSTR) 70)\0"
	.byte	0x1
	.uleb128 0x4fa
	.ascii "X509_BIOMETRIC_EXT ((LPCSTR) 71)\0"
	.byte	0x1
	.uleb128 0x4fb
	.ascii "CNG_RSA_PUBLIC_KEY_BLOB ((LPCSTR) 72)\0"
	.byte	0x1
	.uleb128 0x4fc
	.ascii "X509_OBJECT_IDENTIFIER ((LPCSTR) 73)\0"
	.byte	0x1
	.uleb128 0x4fd
	.ascii "X509_ALGORITHM_IDENTIFIER ((LPCSTR) 74)\0"
	.byte	0x1
	.uleb128 0x4fe
	.ascii "PKCS_RSA_SSA_PSS_PARAMETERS ((LPCSTR) 75)\0"
	.byte	0x1
	.uleb128 0x4ff
	.ascii "PKCS_RSAES_OAEP_PARAMETERS ((LPCSTR) 76)\0"
	.byte	0x1
	.uleb128 0x500
	.ascii "ECC_CMS_SHARED_INFO ((LPCSTR) 77)\0"
	.byte	0x1
	.uleb128 0x501
	.ascii "PKCS7_SIGNER_INFO ((LPCSTR) 500)\0"
	.byte	0x1
	.uleb128 0x502
	.ascii "CMS_SIGNER_INFO ((LPCSTR) 501)\0"
	.byte	0x1
	.uleb128 0x503
	.ascii "szOID_AUTHORITY_KEY_IDENTIFIER \"2.5.29.1\"\0"
	.byte	0x1
	.uleb128 0x504
	.ascii "szOID_KEY_ATTRIBUTES \"2.5.29.2\"\0"
	.byte	0x1
	.uleb128 0x505
	.ascii "szOID_CERT_POLICIES_95 \"2.5.29.3\"\0"
	.byte	0x1
	.uleb128 0x506
	.ascii "szOID_KEY_USAGE_RESTRICTION \"2.5.29.4\"\0"
	.byte	0x1
	.uleb128 0x507
	.ascii "szOID_SUBJECT_ALT_NAME \"2.5.29.7\"\0"
	.byte	0x1
	.uleb128 0x508
	.ascii "szOID_ISSUER_ALT_NAME \"2.5.29.8\"\0"
	.byte	0x1
	.uleb128 0x509
	.ascii "szOID_BASIC_CONSTRAINTS \"2.5.29.10\"\0"
	.byte	0x1
	.uleb128 0x50c
	.ascii "szOID_KEY_USAGE \"2.5.29.15\"\0"
	.byte	0x1
	.uleb128 0x50d
	.ascii "szOID_PRIVATEKEY_USAGE_PERIOD \"2.5.29.16\"\0"
	.byte	0x1
	.uleb128 0x50e
	.ascii "szOID_BASIC_CONSTRAINTS2 \"2.5.29.19\"\0"
	.byte	0x1
	.uleb128 0x50f
	.ascii "szOID_CERT_POLICIES \"2.5.29.32\"\0"
	.byte	0x1
	.uleb128 0x510
	.ascii "szOID_ANY_CERT_POLICY \"2.5.29.32.0\"\0"
	.byte	0x1
	.uleb128 0x511
	.ascii "szOID_AUTHORITY_KEY_IDENTIFIER2 \"2.5.29.35\"\0"
	.byte	0x1
	.uleb128 0x512
	.ascii "szOID_SUBJECT_KEY_IDENTIFIER \"2.5.29.14\"\0"
	.byte	0x1
	.uleb128 0x513
	.ascii "szOID_SUBJECT_ALT_NAME2 \"2.5.29.17\"\0"
	.byte	0x1
	.uleb128 0x514
	.ascii "szOID_ISSUER_ALT_NAME2 \"2.5.29.18\"\0"
	.byte	0x1
	.uleb128 0x515
	.ascii "szOID_CRL_REASON_CODE \"2.5.29.21\"\0"
	.byte	0x1
	.uleb128 0x516
	.ascii "szOID_REASON_CODE_HOLD \"2.5.29.23\"\0"
	.byte	0x1
	.uleb128 0x517
	.ascii "szOID_CRL_DIST_POINTS \"2.5.29.31\"\0"
	.byte	0x1
	.uleb128 0x518
	.ascii "szOID_ENHANCED_KEY_USAGE \"2.5.29.37\"\0"
	.byte	0x1
	.uleb128 0x519
	.ascii "szOID_CRL_NUMBER \"2.5.29.20\"\0"
	.byte	0x1
	.uleb128 0x51a
	.ascii "szOID_DELTA_CRL_INDICATOR \"2.5.29.27\"\0"
	.byte	0x1
	.uleb128 0x51b
	.ascii "szOID_ISSUING_DIST_POINT \"2.5.29.28\"\0"
	.byte	0x1
	.uleb128 0x51c
	.ascii "szOID_FRESHEST_CRL \"2.5.29.46\"\0"
	.byte	0x1
	.uleb128 0x51d
	.ascii "szOID_NAME_CONSTRAINTS \"2.5.29.30\"\0"
	.byte	0x1
	.uleb128 0x51e
	.ascii "szOID_POLICY_MAPPINGS \"2.5.29.33\"\0"
	.byte	0x1
	.uleb128 0x51f
	.ascii "szOID_LEGACY_POLICY_MAPPINGS \"2.5.29.5\"\0"
	.byte	0x1
	.uleb128 0x520
	.ascii "szOID_POLICY_CONSTRAINTS \"2.5.29.36\"\0"
	.byte	0x1
	.uleb128 0x521
	.ascii "szOID_ECC_PUBLIC_KEY \"1.2.840.10045.2.1\"\0"
	.byte	0x1
	.uleb128 0x522
	.ascii "szOID_ECDSA_SPECIFIED \"1.2.840.10045.4.3\"\0"
	.byte	0x1
	.uleb128 0x523
	.ascii "szOID_RSA_SSA_PSS \"1.2.840.113549.1.1.10\"\0"
	.byte	0x1
	.uleb128 0x524
	.ascii "szOID_RSAES_OAEP \"1.2.840.113549.1.1.7\"\0"
	.byte	0x1
	.uleb128 0x525
	.ascii "szOID_RENEWAL_CERTIFICATE \"1.3.6.1.4.1.311.13.1\"\0"
	.byte	0x1
	.uleb128 0x526
	.ascii "szOID_ENROLLMENT_NAME_VALUE_PAIR \"1.3.6.1.4.1.311.13.2.1\"\0"
	.byte	0x1
	.uleb128 0x527
	.ascii "szOID_ENROLLMENT_CSP_PROVIDER \"1.3.6.1.4.1.311.13.2.2\"\0"
	.byte	0x1
	.uleb128 0x528
	.ascii "szOID_OS_VERSION \"1.3.6.1.4.1.311.13.2.3\"\0"
	.byte	0x1
	.uleb128 0x529
	.ascii "szOID_ENROLLMENT_AGENT \"1.3.6.1.4.1.311.20.2.1\"\0"
	.byte	0x1
	.uleb128 0x52a
	.ascii "szOID_PKIX \"1.3.6.1.5.5.7\"\0"
	.byte	0x1
	.uleb128 0x52b
	.ascii "szOID_PKIX_PE \"1.3.6.1.5.5.7.1\"\0"
	.byte	0x1
	.uleb128 0x52c
	.ascii "szOID_AUTHORITY_INFO_ACCESS \"1.3.6.1.5.5.7.1.1\"\0"
	.byte	0x1
	.uleb128 0x52d
	.ascii "szOID_BIOMETRIC_EXT \"1.3.6.1.5.5.7.1.2\"\0"
	.byte	0x1
	.uleb128 0x52e
	.ascii "szOID_LOGOTYPE_EXT \"1.3.6.1.5.5.7.1.12\"\0"
	.byte	0x1
	.uleb128 0x52f
	.ascii "szOID_CERT_EXTENSIONS \"1.3.6.1.4.1.311.2.1.14\"\0"
	.byte	0x1
	.uleb128 0x530
	.ascii "szOID_NEXT_UPDATE_LOCATION \"1.3.6.1.4.1.311.10.2\"\0"
	.byte	0x1
	.uleb128 0x531
	.ascii "szOID_REMOVE_CERTIFICATE \"1.3.6.1.4.1.311.10.8.1\"\0"
	.byte	0x1
	.uleb128 0x532
	.ascii "szOID_CROSS_CERT_DIST_POINTS \"1.3.6.1.4.1.311.10.9.1\"\0"
	.byte	0x1
	.uleb128 0x533
	.ascii "szOID_CTL \"1.3.6.1.4.1.311.10.1\"\0"
	.byte	0x1
	.uleb128 0x534
	.ascii "szOID_SORTED_CTL \"1.3.6.1.4.1.311.10.1.1\"\0"
	.byte	0x1
	.uleb128 0x537
	.ascii "szOID_SERIALIZED \"1.3.6.1.4.1.311.10.3.3.1\"\0"
	.byte	0x1
	.uleb128 0x53b
	.ascii "szOID_NT_PRINCIPAL_NAME \"1.3.6.1.4.1.311.20.2.3\"\0"
	.byte	0x1
	.uleb128 0x53f
	.ascii "szOID_PRODUCT_UPDATE \"1.3.6.1.4.1.311.31.1\"\0"
	.byte	0x1
	.uleb128 0x542
	.ascii "szOID_ANY_APPLICATION_POLICY \"1.3.6.1.4.1.311.10.12.1\"\0"
	.byte	0x1
	.uleb128 0x544
	.ascii "szOID_AUTO_ENROLL_CTL_USAGE \"1.3.6.1.4.1.311.20.1\"\0"
	.byte	0x1
	.uleb128 0x546
	.ascii "szOID_ENROLL_CERTTYPE_EXTENSION \"1.3.6.1.4.1.311.20.2\"\0"
	.byte	0x1
	.uleb128 0x548
	.ascii "szOID_CERT_MANIFOLD \"1.3.6.1.4.1.311.20.3\"\0"
	.byte	0x1
	.uleb128 0x54b
	.ascii "szOID_CERTSRV_CA_VERSION \"1.3.6.1.4.1.311.21.1\"\0"
	.byte	0x1
	.uleb128 0x54e
	.ascii "szOID_CERTSRV_PREVIOUS_CERT_HASH \"1.3.6.1.4.1.311.21.2\"\0"
	.byte	0x1
	.uleb128 0x54f
	.ascii "szOID_CRL_VIRTUAL_BASE \"1.3.6.1.4.1.311.21.3\"\0"
	.byte	0x1
	.uleb128 0x550
	.ascii "szOID_CRL_NEXT_PUBLISH \"1.3.6.1.4.1.311.21.4\"\0"
	.byte	0x1
	.uleb128 0x551
	.ascii "szOID_KP_CA_EXCHANGE \"1.3.6.1.4.1.311.21.5\"\0"
	.byte	0x1
	.uleb128 0x552
	.ascii "szOID_KP_KEY_RECOVERY_AGENT \"1.3.6.1.4.1.311.21.6\"\0"
	.byte	0x1
	.uleb128 0x553
	.ascii "szOID_CERTIFICATE_TEMPLATE \"1.3.6.1.4.1.311.21.7\"\0"
	.byte	0x1
	.uleb128 0x554
	.ascii "szOID_ENTERPRISE_OID_ROOT \"1.3.6.1.4.1.311.21.8\"\0"
	.byte	0x1
	.uleb128 0x555
	.ascii "szOID_RDN_DUMMY_SIGNER \"1.3.6.1.4.1.311.21.9\"\0"
	.byte	0x1
	.uleb128 0x556
	.ascii "szOID_APPLICATION_CERT_POLICIES \"1.3.6.1.4.1.311.21.10\"\0"
	.byte	0x1
	.uleb128 0x557
	.ascii "szOID_APPLICATION_POLICY_MAPPINGS \"1.3.6.1.4.1.311.21.11\"\0"
	.byte	0x1
	.uleb128 0x558
	.ascii "szOID_APPLICATION_POLICY_CONSTRAINTS \"1.3.6.1.4.1.311.21.12\"\0"
	.byte	0x1
	.uleb128 0x559
	.ascii "szOID_ARCHIVED_KEY_ATTR \"1.3.6.1.4.1.311.21.13\"\0"
	.byte	0x1
	.uleb128 0x55a
	.ascii "szOID_CRL_SELF_CDP \"1.3.6.1.4.1.311.21.14\"\0"
	.byte	0x1
	.uleb128 0x55b
	.ascii "szOID_REQUIRE_CERT_CHAIN_POLICY \"1.3.6.1.4.1.311.21.15\"\0"
	.byte	0x1
	.uleb128 0x55c
	.ascii "szOID_ARCHIVED_KEY_CERT_HASH \"1.3.6.1.4.1.311.21.16\"\0"
	.byte	0x1
	.uleb128 0x55d
	.ascii "szOID_ISSUED_CERT_HASH \"1.3.6.1.4.1.311.21.17\"\0"
	.byte	0x1
	.uleb128 0x55e
	.ascii "szOID_DS_EMAIL_REPLICATION \"1.3.6.1.4.1.311.21.19\"\0"
	.byte	0x1
	.uleb128 0x55f
	.ascii "szOID_REQUEST_CLIENT_INFO \"1.3.6.1.4.1.311.21.20\"\0"
	.byte	0x1
	.uleb128 0x560
	.ascii "szOID_ENCRYPTED_KEY_HASH \"1.3.6.1.4.1.311.21.21\"\0"
	.byte	0x1
	.uleb128 0x561
	.ascii "szOID_CERTSRV_CROSSCA_VERSION \"1.3.6.1.4.1.311.21.22\"\0"
	.byte	0x1
	.uleb128 0x562
	.ascii "szOID_NTDS_REPLICATION \"1.3.6.1.4.1.311.25.1\"\0"
	.byte	0x1
	.uleb128 0x563
	.ascii "szOID_SUBJECT_DIR_ATTRS \"2.5.29.9\"\0"
	.byte	0x1
	.uleb128 0x564
	.ascii "szOID_PKIX_KP \"1.3.6.1.5.5.7.3\"\0"
	.byte	0x1
	.uleb128 0x565
	.ascii "szOID_PKIX_KP_SERVER_AUTH \"1.3.6.1.5.5.7.3.1\"\0"
	.byte	0x1
	.uleb128 0x566
	.ascii "szOID_PKIX_KP_CLIENT_AUTH \"1.3.6.1.5.5.7.3.2\"\0"
	.byte	0x1
	.uleb128 0x567
	.ascii "szOID_PKIX_KP_CODE_SIGNING \"1.3.6.1.5.5.7.3.3\"\0"
	.byte	0x1
	.uleb128 0x568
	.ascii "szOID_PKIX_KP_EMAIL_PROTECTION \"1.3.6.1.5.5.7.3.4\"\0"
	.byte	0x1
	.uleb128 0x569
	.ascii "szOID_PKIX_KP_IPSEC_END_SYSTEM \"1.3.6.1.5.5.7.3.5\"\0"
	.byte	0x1
	.uleb128 0x56a
	.ascii "szOID_PKIX_KP_IPSEC_TUNNEL \"1.3.6.1.5.5.7.3.6\"\0"
	.byte	0x1
	.uleb128 0x56b
	.ascii "szOID_PKIX_KP_IPSEC_USER \"1.3.6.1.5.5.7.3.7\"\0"
	.byte	0x1
	.uleb128 0x56c
	.ascii "szOID_PKIX_KP_TIMESTAMP_SIGNING \"1.3.6.1.5.5.7.3.8\"\0"
	.byte	0x1
	.uleb128 0x56d
	.ascii "szOID_IPSEC_KP_IKE_INTERMEDIATE \"1.3.6.1.5.5.8.2.2\"\0"
	.byte	0x1
	.uleb128 0x56e
	.ascii "szOID_KP_CTL_USAGE_SIGNING \"1.3.6.1.4.1.311.10.3.1\"\0"
	.byte	0x1
	.uleb128 0x56f
	.ascii "szOID_KP_TIME_STAMP_SIGNING \"1.3.6.1.4.1.311.10.3.2\"\0"
	.byte	0x1
	.uleb128 0x572
	.ascii "szOID_SERVER_GATED_CRYPTO \"1.3.6.1.4.1.311.10.3.3\"\0"
	.byte	0x1
	.uleb128 0x576
	.ascii "szOID_SGC_NETSCAPE \"2.16.840.1.113730.4.1\"\0"
	.byte	0x1
	.uleb128 0x578
	.ascii "szOID_KP_EFS \"1.3.6.1.4.1.311.10.3.4\"\0"
	.byte	0x1
	.uleb128 0x579
	.ascii "szOID_EFS_RECOVERY \"1.3.6.1.4.1.311.10.3.4.1\"\0"
	.byte	0x1
	.uleb128 0x57a
	.ascii "szOID_WHQL_CRYPTO \"1.3.6.1.4.1.311.10.3.5\"\0"
	.byte	0x1
	.uleb128 0x57b
	.ascii "szOID_NT5_CRYPTO \"1.3.6.1.4.1.311.10.3.6\"\0"
	.byte	0x1
	.uleb128 0x57c
	.ascii "szOID_OEM_WHQL_CRYPTO \"1.3.6.1.4.1.311.10.3.7\"\0"
	.byte	0x1
	.uleb128 0x57d
	.ascii "szOID_EMBEDDED_NT_CRYPTO \"1.3.6.1.4.1.311.10.3.8\"\0"
	.byte	0x1
	.uleb128 0x57e
	.ascii "szOID_ROOT_LIST_SIGNER \"1.3.6.1.4.1.311.10.3.9\"\0"
	.byte	0x1
	.uleb128 0x57f
	.ascii "szOID_KP_QUALIFIED_SUBORDINATION \"1.3.6.1.4.1.311.10.3.10\"\0"
	.byte	0x1
	.uleb128 0x580
	.ascii "szOID_KP_KEY_RECOVERY \"1.3.6.1.4.1.311.10.3.11\"\0"
	.byte	0x1
	.uleb128 0x581
	.ascii "szOID_KP_DOCUMENT_SIGNING \"1.3.6.1.4.1.311.10.3.12\"\0"
	.byte	0x1
	.uleb128 0x582
	.ascii "szOID_KP_LIFETIME_SIGNING \"1.3.6.1.4.1.311.10.3.13\"\0"
	.byte	0x1
	.uleb128 0x583
	.ascii "szOID_KP_MOBILE_DEVICE_SOFTWARE \"1.3.6.1.4.1.311.10.3.14\"\0"
	.byte	0x1
	.uleb128 0x586
	.ascii "szOID_DRM \"1.3.6.1.4.1.311.10.5.1\"\0"
	.byte	0x1
	.uleb128 0x58a
	.ascii "szOID_DRM_INDIVIDUALIZATION \"1.3.6.1.4.1.311.10.5.2\"\0"
	.byte	0x1
	.uleb128 0x58e
	.ascii "szOID_LICENSES \"1.3.6.1.4.1.311.10.6.1\"\0"
	.byte	0x1
	.uleb128 0x592
	.ascii "szOID_LICENSE_SERVER \"1.3.6.1.4.1.311.10.6.2\"\0"
	.byte	0x1
	.uleb128 0x596
	.ascii "szOID_KP_SMARTCARD_LOGON \"1.3.6.1.4.1.311.20.2.2\"\0"
	.byte	0x1
	.uleb128 0x599
	.ascii "szOID_YESNO_TRUST_ATTR \"1.3.6.1.4.1.311.10.4.1\"\0"
	.byte	0x1
	.uleb128 0x59b
	.ascii "szOID_PKIX_POLICY_QUALIFIER_CPS \"1.3.6.1.5.5.7.2.1\"\0"
	.byte	0x1
	.uleb128 0x59c
	.ascii "szOID_PKIX_POLICY_QUALIFIER_USERNOTICE \"1.3.6.1.5.5.7.2.2\"\0"
	.byte	0x1
	.uleb128 0x59e
	.ascii "szOID_CERT_POLICIES_95_QUALIFIER1 \"2.16.840.1.113733.1.7.1.1\"\0"
	.byte	0x1
	.uleb128 0x5a5
	.ascii "CERT_UNICODE_RDN_ERR_INDEX_MASK 0x3FF\0"
	.byte	0x1
	.uleb128 0x5a6
	.ascii "CERT_UNICODE_RDN_ERR_INDEX_SHIFT 22\0"
	.byte	0x1
	.uleb128 0x5a7
	.ascii "CERT_UNICODE_ATTR_ERR_INDEX_MASK 0x3f\0"
	.byte	0x1
	.uleb128 0x5a8
	.ascii "CERT_UNICODE_ATTR_ERR_INDEX_SHIFT 16\0"
	.byte	0x1
	.uleb128 0x5a9
	.ascii "CERT_UNICODE_VALUE_ERR_INDEX_MASK 0xffff\0"
	.byte	0x1
	.uleb128 0x5aa
	.ascii "CERT_UNICODE_VALUE_ERR_INDEX_SHIFT 0\0"
	.byte	0x1
	.uleb128 0x5ac
	.ascii "GET_CERT_UNICODE_RDN_ERR_INDEX(X) (((X) >> CERT_UNICODE_RDN_ERR_INDEX_SHIFT) & CERT_UNICODE_RDN_ERR_INDEX_MASK)\0"
	.byte	0x1
	.uleb128 0x5ad
	.ascii "GET_CERT_UNICODE_ATTR_ERR_INDEX(X) (((X) >> CERT_UNICODE_ATTR_ERR_INDEX_SHIFT) & CERT_UNICODE_ATTR_ERR_INDEX_MASK)\0"
	.byte	0x1
	.uleb128 0x5ae
	.ascii "GET_CERT_UNICODE_VALUE_ERR_INDEX(X) ((X) & CERT_UNICODE_VALUE_ERR_INDEX_MASK)\0"
	.byte	0x1
	.uleb128 0x5c1
	.ascii "CERT_DIGITAL_SIGNATURE_KEY_USAGE 0x80\0"
	.byte	0x1
	.uleb128 0x5c2
	.ascii "CERT_NON_REPUDIATION_KEY_USAGE 0x40\0"
	.byte	0x1
	.uleb128 0x5c3
	.ascii "CERT_KEY_ENCIPHERMENT_KEY_USAGE 0x20\0"
	.byte	0x1
	.uleb128 0x5c4
	.ascii "CERT_DATA_ENCIPHERMENT_KEY_USAGE 0x10\0"
	.byte	0x1
	.uleb128 0x5c5
	.ascii "CERT_KEY_AGREEMENT_KEY_USAGE 0x8\0"
	.byte	0x1
	.uleb128 0x5c6
	.ascii "CERT_KEY_CERT_SIGN_KEY_USAGE 0x4\0"
	.byte	0x1
	.uleb128 0x5c7
	.ascii "CERT_OFFLINE_CRL_SIGN_KEY_USAGE 0x2\0"
	.byte	0x1
	.uleb128 0x5c8
	.ascii "CERT_CRL_SIGN_KEY_USAGE 0x2\0"
	.byte	0x1
	.uleb128 0x5c9
	.ascii "CERT_ENCIPHER_ONLY_KEY_USAGE 0x1\0"
	.byte	0x1
	.uleb128 0x5cb
	.ascii "CERT_DECIPHER_ONLY_KEY_USAGE 0x80\0"
	.byte	0x1
	.uleb128 0x5f5
	.ascii "CERT_ALT_NAME_OTHER_NAME 1\0"
	.byte	0x1
	.uleb128 0x5f6
	.ascii "CERT_ALT_NAME_RFC822_NAME 2\0"
	.byte	0x1
	.uleb128 0x5f7
	.ascii "CERT_ALT_NAME_DNS_NAME 3\0"
	.byte	0x1
	.uleb128 0x5f8
	.ascii "CERT_ALT_NAME_X400_ADDRESS 4\0"
	.byte	0x1
	.uleb128 0x5f9
	.ascii "CERT_ALT_NAME_DIRECTORY_NAME 5\0"
	.byte	0x1
	.uleb128 0x5fa
	.ascii "CERT_ALT_NAME_EDI_PARTY_NAME 6\0"
	.byte	0x1
	.uleb128 0x5fb
	.ascii "CERT_ALT_NAME_URL 7\0"
	.byte	0x1
	.uleb128 0x5fc
	.ascii "CERT_ALT_NAME_IP_ADDRESS 8\0"
	.byte	0x1
	.uleb128 0x5fd
	.ascii "CERT_ALT_NAME_REGISTERED_ID 9\0"
	.byte	0x1
	.uleb128 0x604
	.ascii "CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK 0xFF\0"
	.byte	0x1
	.uleb128 0x605
	.ascii "CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT 16\0"
	.byte	0x1
	.uleb128 0x606
	.ascii "CERT_ALT_NAME_VALUE_ERR_INDEX_MASK 0xffff\0"
	.byte	0x1
	.uleb128 0x607
	.ascii "CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT 0\0"
	.byte	0x1
	.uleb128 0x609
	.ascii "GET_CERT_ALT_NAME_ENTRY_ERR_INDEX(X) (((X) >> CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT) & CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK)\0"
	.byte	0x1
	.uleb128 0x60a
	.ascii "GET_CERT_ALT_NAME_VALUE_ERR_INDEX(X) ((X) & CERT_ALT_NAME_VALUE_ERR_INDEX_MASK)\0"
	.byte	0x1
	.uleb128 0x614
	.ascii "CERT_CA_SUBJECT_FLAG 0x80\0"
	.byte	0x1
	.uleb128 0x615
	.ascii "CERT_END_ENTITY_SUBJECT_FLAG 0x40\0"
	.byte	0x1
	.uleb128 0x678
	.ascii "szOID_PKIX_ACC_DESCR \"1.3.6.1.5.5.7.48\"\0"
	.byte	0x1
	.uleb128 0x679
	.ascii "szOID_PKIX_OCSP \"1.3.6.1.5.5.7.48.1\"\0"
	.byte	0x1
	.uleb128 0x67a
	.ascii "szOID_PKIX_CA_ISSUERS \"1.3.6.1.5.5.7.48.2\"\0"
	.byte	0x1
	.uleb128 0x67c
	.ascii "CRL_REASON_UNSPECIFIED 0\0"
	.byte	0x1
	.uleb128 0x67d
	.ascii "CRL_REASON_KEY_COMPROMISE 1\0"
	.byte	0x1
	.uleb128 0x67e
	.ascii "CRL_REASON_CA_COMPROMISE 2\0"
	.byte	0x1
	.uleb128 0x67f
	.ascii "CRL_REASON_AFFILIATION_CHANGED 3\0"
	.byte	0x1
	.uleb128 0x680
	.ascii "CRL_REASON_SUPERSEDED 4\0"
	.byte	0x1
	.uleb128 0x681
	.ascii "CRL_REASON_CESSATION_OF_OPERATION 5\0"
	.byte	0x1
	.uleb128 0x682
	.ascii "CRL_REASON_CERTIFICATE_HOLD 6\0"
	.byte	0x1
	.uleb128 0x683
	.ascii "CRL_REASON_REMOVE_FROM_CRL 8\0"
	.byte	0x1
	.uleb128 0x68c
	.ascii "CRL_DIST_POINT_NO_NAME 0\0"
	.byte	0x1
	.uleb128 0x68d
	.ascii "CRL_DIST_POINT_FULL_NAME 1\0"
	.byte	0x1
	.uleb128 0x68e
	.ascii "CRL_DIST_POINT_ISSUER_RDN_NAME 2\0"
	.byte	0x1
	.uleb128 0x696
	.ascii "CRL_REASON_UNUSED_FLAG 0x80\0"
	.byte	0x1
	.uleb128 0x697
	.ascii "CRL_REASON_KEY_COMPROMISE_FLAG 0x40\0"
	.byte	0x1
	.uleb128 0x698
	.ascii "CRL_REASON_CA_COMPROMISE_FLAG 0x20\0"
	.byte	0x1
	.uleb128 0x699
	.ascii "CRL_REASON_AFFILIATION_CHANGED_FLAG 0x10\0"
	.byte	0x1
	.uleb128 0x69a
	.ascii "CRL_REASON_SUPERSEDED_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0x69b
	.ascii "CRL_REASON_CESSATION_OF_OPERATION_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0x69c
	.ascii "CRL_REASON_CERTIFICATE_HOLD_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0x6a3
	.ascii "CRL_DIST_POINT_ERR_INDEX_MASK 0x7F\0"
	.byte	0x1
	.uleb128 0x6a4
	.ascii "CRL_DIST_POINT_ERR_INDEX_SHIFT 24\0"
	.byte	0x1
	.uleb128 0x6a5
	.ascii "GET_CRL_DIST_POINT_ERR_INDEX(X) ((X >> CRL_DIST_POINT_ERR_INDEX_SHIFT) & CRL_DIST_POINT_ERR_INDEX_MASK)\0"
	.byte	0x1
	.uleb128 0x6a7
	.ascii "CRL_DIST_POINT_ERR_CRL_ISSUER_BIT __MSABI_LONG(0x80000000)\0"
	.byte	0x1
	.uleb128 0x6a8
	.ascii "IS_CRL_DIST_POINT_ERR_CRL_ISSUER(X) (0!=(X & CRL_DIST_POINT_ERR_CRL_ISSUER_BIT))\0"
	.byte	0x1
	.uleb128 0x6b0
	.ascii "CROSS_CERT_DIST_POINT_ERR_INDEX_MASK 0xFF\0"
	.byte	0x1
	.uleb128 0x6b1
	.ascii "CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT 24\0"
	.byte	0x1
	.uleb128 0x6b2
	.ascii "GET_CROSS_CERT_DIST_POINT_ERR_INDEX(X) ((X >> CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT) & CROSS_CERT_DIST_POINT_ERR_INDEX_MASK)\0"
	.byte	0x1
	.uleb128 0x6cf
	.ascii "CERT_EXCLUDED_SUBTREE_BIT __MSABI_LONG(0x80000000)\0"
	.byte	0x1
	.uleb128 0x6d0
	.ascii "IS_CERT_EXCLUDED_SUBTREE(X) (0!=(X & CERT_EXCLUDED_SUBTREE_BIT))\0"
	.byte	0x1
	.uleb128 0x6d2
	.ascii "SORTED_CTL_EXT_FLAGS_OFFSET (0*4)\0"
	.byte	0x1
	.uleb128 0x6d3
	.ascii "SORTED_CTL_EXT_COUNT_OFFSET (1*4)\0"
	.byte	0x1
	.uleb128 0x6d4
	.ascii "SORTED_CTL_EXT_MAX_COLLISION_OFFSET (2*4)\0"
	.byte	0x1
	.uleb128 0x6d5
	.ascii "SORTED_CTL_EXT_HASH_BUCKET_OFFSET (3*4)\0"
	.byte	0x1
	.uleb128 0x6d7
	.ascii "SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0x6df
	.ascii "CERT_DSS_R_LEN 20\0"
	.byte	0x1
	.uleb128 0x6e0
	.ascii "CERT_DSS_S_LEN 20\0"
	.byte	0x1
	.uleb128 0x6e1
	.ascii "CERT_DSS_SIGNATURE_LEN (CERT_DSS_R_LEN + CERT_DSS_S_LEN)\0"
	.byte	0x1
	.uleb128 0x6e3
	.ascii "CERT_MAX_ASN_ENCODED_DSS_SIGNATURE_LEN (2 + 2*(2 + 20 +1))\0"
	.byte	0x1
	.uleb128 0x6f7
	.ascii "CRYPT_X942_COUNTER_BYTE_LENGTH 4\0"
	.byte	0x1
	.uleb128 0x6f8
	.ascii "CRYPT_X942_KEY_LENGTH_BYTE_LENGTH 4\0"
	.byte	0x1
	.uleb128 0x6f9
	.ascii "CRYPT_X942_PUB_INFO_BYTE_LENGTH (512/8)\0"
	.byte	0x1
	.uleb128 0x707
	.ascii "CRYPT_RC2_40BIT_VERSION 160\0"
	.byte	0x1
	.uleb128 0x708
	.ascii "CRYPT_RC2_56BIT_VERSION 52\0"
	.byte	0x1
	.uleb128 0x709
	.ascii "CRYPT_RC2_64BIT_VERSION 120\0"
	.byte	0x1
	.uleb128 0x70a
	.ascii "CRYPT_RC2_128BIT_VERSION 58\0"
	.byte	0x1
	.uleb128 0x716
	.ascii "szOID_VERISIGN_PRIVATE_6_9 \"2.16.840.1.113733.1.6.9\"\0"
	.byte	0x1
	.uleb128 0x717
	.ascii "szOID_VERISIGN_ONSITE_JURISDICTION_HASH \"2.16.840.1.113733.1.6.11\"\0"
	.byte	0x1
	.uleb128 0x718
	.ascii "szOID_VERISIGN_BITSTRING_6_13 \"2.16.840.1.113733.1.6.13\"\0"
	.byte	0x1
	.uleb128 0x719
	.ascii "szOID_VERISIGN_ISS_STRONG_CRYPTO \"2.16.840.1.113733.1.8.1\"\0"
	.byte	0x1
	.uleb128 0x71a
	.ascii "szOID_NETSCAPE \"2.16.840.1.113730\"\0"
	.byte	0x1
	.uleb128 0x71b
	.ascii "szOID_NETSCAPE_CERT_EXTENSION \"2.16.840.1.113730.1\"\0"
	.byte	0x1
	.uleb128 0x71c
	.ascii "szOID_NETSCAPE_CERT_TYPE \"2.16.840.1.113730.1.1\"\0"
	.byte	0x1
	.uleb128 0x71d
	.ascii "szOID_NETSCAPE_BASE_URL \"2.16.840.1.113730.1.2\"\0"
	.byte	0x1
	.uleb128 0x71e
	.ascii "szOID_NETSCAPE_REVOCATION_URL \"2.16.840.1.113730.1.3\"\0"
	.byte	0x1
	.uleb128 0x71f
	.ascii "szOID_NETSCAPE_CA_REVOCATION_URL \"2.16.840.1.113730.1.4\"\0"
	.byte	0x1
	.uleb128 0x720
	.ascii "szOID_NETSCAPE_CERT_RENEWAL_URL \"2.16.840.1.113730.1.7\"\0"
	.byte	0x1
	.uleb128 0x721
	.ascii "szOID_NETSCAPE_CA_POLICY_URL \"2.16.840.1.113730.1.8\"\0"
	.byte	0x1
	.uleb128 0x722
	.ascii "szOID_NETSCAPE_SSL_SERVER_NAME \"2.16.840.1.113730.1.12\"\0"
	.byte	0x1
	.uleb128 0x723
	.ascii "szOID_NETSCAPE_COMMENT \"2.16.840.1.113730.1.13\"\0"
	.byte	0x1
	.uleb128 0x724
	.ascii "szOID_NETSCAPE_DATA_TYPE \"2.16.840.1.113730.2\"\0"
	.byte	0x1
	.uleb128 0x725
	.ascii "szOID_NETSCAPE_CERT_SEQUENCE \"2.16.840.1.113730.2.5\"\0"
	.byte	0x1
	.uleb128 0x727
	.ascii "NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE 0x80\0"
	.byte	0x1
	.uleb128 0x728
	.ascii "NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE 0x40\0"
	.byte	0x1
	.uleb128 0x729
	.ascii "NETSCAPE_SMIME_CERT_TYPE 0x20\0"
	.byte	0x1
	.uleb128 0x72a
	.ascii "NETSCAPE_SIGN_CERT_TYPE 0x10\0"
	.byte	0x1
	.uleb128 0x72b
	.ascii "NETSCAPE_SSL_CA_CERT_TYPE 0x4\0"
	.byte	0x1
	.uleb128 0x72c
	.ascii "NETSCAPE_SMIME_CA_CERT_TYPE 0x2\0"
	.byte	0x1
	.uleb128 0x72d
	.ascii "NETSCAPE_SIGN_CA_CERT_TYPE 0x1\0"
	.byte	0x1
	.uleb128 0x72f
	.ascii "szOID_CT_PKI_DATA \"1.3.6.1.5.5.7.12.2\"\0"
	.byte	0x1
	.uleb128 0x730
	.ascii "szOID_CT_PKI_RESPONSE \"1.3.6.1.5.5.7.12.3\"\0"
	.byte	0x1
	.uleb128 0x731
	.ascii "szOID_PKIX_NO_SIGNATURE \"1.3.6.1.5.5.7.6.2\"\0"
	.byte	0x1
	.uleb128 0x732
	.ascii "szOID_CMC \"1.3.6.1.5.5.7.7\"\0"
	.byte	0x1
	.uleb128 0x733
	.ascii "szOID_CMC_STATUS_INFO \"1.3.6.1.5.5.7.7.1\"\0"
	.byte	0x1
	.uleb128 0x734
	.ascii "szOID_CMC_IDENTIFICATION \"1.3.6.1.5.5.7.7.2\"\0"
	.byte	0x1
	.uleb128 0x735
	.ascii "szOID_CMC_IDENTITY_PROOF \"1.3.6.1.5.5.7.7.3\"\0"
	.byte	0x1
	.uleb128 0x736
	.ascii "szOID_CMC_DATA_RETURN \"1.3.6.1.5.5.7.7.4\"\0"
	.byte	0x1
	.uleb128 0x737
	.ascii "szOID_CMC_TRANSACTION_ID \"1.3.6.1.5.5.7.7.5\"\0"
	.byte	0x1
	.uleb128 0x738
	.ascii "szOID_CMC_SENDER_NONCE \"1.3.6.1.5.5.7.7.6\"\0"
	.byte	0x1
	.uleb128 0x739
	.ascii "szOID_CMC_RECIPIENT_NONCE \"1.3.6.1.5.5.7.7.7\"\0"
	.byte	0x1
	.uleb128 0x73a
	.ascii "szOID_CMC_ADD_EXTENSIONS \"1.3.6.1.5.5.7.7.8\"\0"
	.byte	0x1
	.uleb128 0x73b
	.ascii "szOID_CMC_ENCRYPTED_POP \"1.3.6.1.5.5.7.7.9\"\0"
	.byte	0x1
	.uleb128 0x73c
	.ascii "szOID_CMC_DECRYPTED_POP \"1.3.6.1.5.5.7.7.10\"\0"
	.byte	0x1
	.uleb128 0x73d
	.ascii "szOID_CMC_LRA_POP_WITNESS \"1.3.6.1.5.5.7.7.11\"\0"
	.byte	0x1
	.uleb128 0x73e
	.ascii "szOID_CMC_GET_CERT \"1.3.6.1.5.5.7.7.15\"\0"
	.byte	0x1
	.uleb128 0x73f
	.ascii "szOID_CMC_GET_CRL \"1.3.6.1.5.5.7.7.16\"\0"
	.byte	0x1
	.uleb128 0x740
	.ascii "szOID_CMC_REVOKE_REQUEST \"1.3.6.1.5.5.7.7.17\"\0"
	.byte	0x1
	.uleb128 0x741
	.ascii "szOID_CMC_REG_INFO \"1.3.6.1.5.5.7.7.18\"\0"
	.byte	0x1
	.uleb128 0x742
	.ascii "szOID_CMC_RESPONSE_INFO \"1.3.6.1.5.5.7.7.19\"\0"
	.byte	0x1
	.uleb128 0x743
	.ascii "szOID_CMC_QUERY_PENDING \"1.3.6.1.5.5.7.7.21\"\0"
	.byte	0x1
	.uleb128 0x744
	.ascii "szOID_CMC_ID_POP_LINK_RANDOM \"1.3.6.1.5.5.7.7.22\"\0"
	.byte	0x1
	.uleb128 0x745
	.ascii "szOID_CMC_ID_POP_LINK_WITNESS \"1.3.6.1.5.5.7.7.23\"\0"
	.byte	0x1
	.uleb128 0x746
	.ascii "szOID_CMC_ID_CONFIRM_CERT_ACCEPTANCE \"1.3.6.1.5.5.7.7.24\"\0"
	.byte	0x1
	.uleb128 0x748
	.ascii "szOID_CMC_ADD_ATTRIBUTES \"1.3.6.1.4.1.311.10.10.1\"\0"
	.byte	0x1
	.uleb128 0x75b
	.ascii "CMC_TAGGED_CERT_REQUEST_CHOICE 1\0"
	.byte	0x1
	.uleb128 0x78d
	.ascii "CMC_OTHER_INFO_NO_CHOICE 0\0"
	.byte	0x1
	.uleb128 0x78e
	.ascii "CMC_OTHER_INFO_FAIL_CHOICE 1\0"
	.byte	0x1
	.uleb128 0x78f
	.ascii "CMC_OTHER_INFO_PEND_CHOICE 2\0"
	.byte	0x1
	.uleb128 0x791
	.ascii "CMC_STATUS_SUCCESS 0\0"
	.byte	0x1
	.uleb128 0x792
	.ascii "CMC_STATUS_FAILED 2\0"
	.byte	0x1
	.uleb128 0x793
	.ascii "CMC_STATUS_PENDING 3\0"
	.byte	0x1
	.uleb128 0x794
	.ascii "CMC_STATUS_NO_SUPPORT 4\0"
	.byte	0x1
	.uleb128 0x795
	.ascii "CMC_STATUS_CONFIRM_REQUIRED 5\0"
	.byte	0x1
	.uleb128 0x796
	.ascii "CMC_FAIL_BAD_ALG 0\0"
	.byte	0x1
	.uleb128 0x797
	.ascii "CMC_FAIL_BAD_MESSAGE_CHECK 1\0"
	.byte	0x1
	.uleb128 0x798
	.ascii "CMC_FAIL_BAD_REQUEST 2\0"
	.byte	0x1
	.uleb128 0x799
	.ascii "CMC_FAIL_BAD_TIME 3\0"
	.byte	0x1
	.uleb128 0x79a
	.ascii "CMC_FAIL_BAD_CERT_ID 4\0"
	.byte	0x1
	.uleb128 0x79b
	.ascii "CMC_FAIL_UNSUPORTED_EXT 5\0"
	.byte	0x1
	.uleb128 0x79c
	.ascii "CMC_FAIL_MUST_ARCHIVE_KEYS 6\0"
	.byte	0x1
	.uleb128 0x79d
	.ascii "CMC_FAIL_BAD_IDENTITY 7\0"
	.byte	0x1
	.uleb128 0x79e
	.ascii "CMC_FAIL_POP_REQUIRED 8\0"
	.byte	0x1
	.uleb128 0x79f
	.ascii "CMC_FAIL_POP_FAILED 9\0"
	.byte	0x1
	.uleb128 0x7a0
	.ascii "CMC_FAIL_NO_KEY_REUSE 10\0"
	.byte	0x1
	.uleb128 0x7a1
	.ascii "CMC_FAIL_INTERNAL_CA_ERROR 11\0"
	.byte	0x1
	.uleb128 0x7a2
	.ascii "CMC_FAIL_TRY_LATER 12\0"
	.byte	0x1
	.uleb128 0x7be
	.ascii "CRYPT_OID_ENCODE_OBJECT_FUNC \"CryptDllEncodeObject\"\0"
	.byte	0x1
	.uleb128 0x7bf
	.ascii "CRYPT_OID_DECODE_OBJECT_FUNC \"CryptDllDecodeObject\"\0"
	.byte	0x1
	.uleb128 0x7c0
	.ascii "CRYPT_OID_ENCODE_OBJECT_EX_FUNC \"CryptDllEncodeObjectEx\"\0"
	.byte	0x1
	.uleb128 0x7c1
	.ascii "CRYPT_OID_DECODE_OBJECT_EX_FUNC \"CryptDllDecodeObjectEx\"\0"
	.byte	0x1
	.uleb128 0x7c2
	.ascii "CRYPT_OID_CREATE_COM_OBJECT_FUNC \"CryptDllCreateCOMObject\"\0"
	.byte	0x1
	.uleb128 0x7c3
	.ascii "CRYPT_OID_VERIFY_REVOCATION_FUNC \"CertDllVerifyRevocation\"\0"
	.byte	0x1
	.uleb128 0x7c4
	.ascii "CRYPT_OID_VERIFY_CTL_USAGE_FUNC \"CertDllVerifyCTLUsage\"\0"
	.byte	0x1
	.uleb128 0x7c5
	.ascii "CRYPT_OID_FORMAT_OBJECT_FUNC \"CryptDllFormatObject\"\0"
	.byte	0x1
	.uleb128 0x7c6
	.ascii "CRYPT_OID_FIND_OID_INFO_FUNC \"CryptDllFindOIDInfo\"\0"
	.byte	0x1
	.uleb128 0x7c7
	.ascii "CRYPT_OID_FIND_LOCALIZED_NAME_FUNC \"CryptDllFindLocalizedName\"\0"
	.byte	0x1
	.uleb128 0x7c9
	.ascii "CRYPT_OID_REGPATH \"Software\\\\Microsoft\\\\Cryptography\\\\OID\"\0"
	.byte	0x1
	.uleb128 0x7ca
	.ascii "CRYPT_OID_REG_ENCODING_TYPE_PREFIX \"EncodingType \"\0"
	.byte	0x1
	.uleb128 0x7cb
	.ascii "CRYPT_OID_REG_DLL_VALUE_NAME L\"Dll\"\0"
	.byte	0x1
	.uleb128 0x7cc
	.ascii "CRYPT_OID_REG_FUNC_NAME_VALUE_NAME L\"FuncName\"\0"
	.byte	0x1
	.uleb128 0x7cd
	.ascii "CRYPT_OID_REG_FUNC_NAME_VALUE_NAME_A \"FuncName\"\0"
	.byte	0x1
	.uleb128 0x7cf
	.ascii "CRYPT_OID_REG_FLAGS_VALUE_NAME L\"CryptFlags\"\0"
	.byte	0x1
	.uleb128 0x7d1
	.ascii "CRYPT_DEFAULT_OID \"DEFAULT\"\0"
	.byte	0x1
	.uleb128 0x7d8
	.ascii "CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG 1\0"
	.byte	0x1
	.uleb128 0x7de
	.ascii "CRYPT_GET_INSTALLED_OID_FUNC_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0x7e7
	.ascii "CRYPT_REGISTER_FIRST_INDEX 0\0"
	.byte	0x1
	.uleb128 0x7e8
	.ascii "CRYPT_REGISTER_LAST_INDEX 0xFFFFFFFF\0"
	.byte	0x1
	.uleb128 0x7f2
	.ascii "CRYPT_MATCH_ANY_ENCODING_TYPE 0xFFFFFFFF\0"
	.byte	0x1
	.uleb128 0x802
	.ascii "CRYPT_HASH_ALG_OID_GROUP_ID 1\0"
	.byte	0x1
	.uleb128 0x803
	.ascii "CRYPT_ENCRYPT_ALG_OID_GROUP_ID 2\0"
	.byte	0x1
	.uleb128 0x804
	.ascii "CRYPT_PUBKEY_ALG_OID_GROUP_ID 3\0"
	.byte	0x1
	.uleb128 0x805
	.ascii "CRYPT_SIGN_ALG_OID_GROUP_ID 4\0"
	.byte	0x1
	.uleb128 0x806
	.ascii "CRYPT_RDN_ATTR_OID_GROUP_ID 5\0"
	.byte	0x1
	.uleb128 0x807
	.ascii "CRYPT_EXT_OR_ATTR_OID_GROUP_ID 6\0"
	.byte	0x1
	.uleb128 0x808
	.ascii "CRYPT_ENHKEY_USAGE_OID_GROUP_ID 7\0"
	.byte	0x1
	.uleb128 0x809
	.ascii "CRYPT_POLICY_OID_GROUP_ID 8\0"
	.byte	0x1
	.uleb128 0x80a
	.ascii "CRYPT_TEMPLATE_OID_GROUP_ID 9\0"
	.byte	0x1
	.uleb128 0x80b
	.ascii "CRYPT_LAST_OID_GROUP_ID 9\0"
	.byte	0x1
	.uleb128 0x80c
	.ascii "CRYPT_FIRST_ALG_OID_GROUP_ID CRYPT_HASH_ALG_OID_GROUP_ID\0"
	.byte	0x1
	.uleb128 0x80d
	.ascii "CRYPT_LAST_ALG_OID_GROUP_ID CRYPT_SIGN_ALG_OID_GROUP_ID\0"
	.byte	0x1
	.uleb128 0x80f
	.ascii "CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0x810
	.ascii "CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0x811
	.ascii "CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0x815
	.ascii "CRYPT_OID_INFO_OID_KEY 1\0"
	.byte	0x1
	.uleb128 0x816
	.ascii "CRYPT_OID_INFO_NAME_KEY 2\0"
	.byte	0x1
	.uleb128 0x817
	.ascii "CRYPT_OID_INFO_ALGID_KEY 3\0"
	.byte	0x1
	.uleb128 0x818
	.ascii "CRYPT_OID_INFO_SIGN_KEY 4\0"
	.byte	0x1
	.uleb128 0x81c
	.ascii "CRYPT_INSTALL_OID_INFO_BEFORE_FLAG 1\0"
	.byte	0x1
	.uleb128 0x825
	.ascii "CRYPT_LOCALIZED_NAME_ENCODING_TYPE 0\0"
	.byte	0x1
	.uleb128 0x826
	.ascii "CRYPT_LOCALIZED_NAME_OID \"LocalizedNames\"\0"
	.byte	0x1
	.uleb128 0x82a
	.ascii "szOID_PKCS_7_DATA \"1.2.840.113549.1.7.1\"\0"
	.byte	0x1
	.uleb128 0x82b
	.ascii "szOID_PKCS_7_SIGNED \"1.2.840.113549.1.7.2\"\0"
	.byte	0x1
	.uleb128 0x82c
	.ascii "szOID_PKCS_7_ENVELOPED \"1.2.840.113549.1.7.3\"\0"
	.byte	0x1
	.uleb128 0x82d
	.ascii "szOID_PKCS_7_SIGNEDANDENVELOPED \"1.2.840.113549.1.7.4\"\0"
	.byte	0x1
	.uleb128 0x82e
	.ascii "szOID_PKCS_7_DIGESTED \"1.2.840.113549.1.7.5\"\0"
	.byte	0x1
	.uleb128 0x82f
	.ascii "szOID_PKCS_7_ENCRYPTED \"1.2.840.113549.1.7.6\"\0"
	.byte	0x1
	.uleb128 0x831
	.ascii "szOID_PKCS_9_CONTENT_TYPE \"1.2.840.113549.1.9.3\"\0"
	.byte	0x1
	.uleb128 0x832
	.ascii "szOID_PKCS_9_MESSAGE_DIGEST \"1.2.840.113549.1.9.4\"\0"
	.byte	0x1
	.uleb128 0x834
	.ascii "CMSG_DATA 1\0"
	.byte	0x1
	.uleb128 0x835
	.ascii "CMSG_SIGNED 2\0"
	.byte	0x1
	.uleb128 0x836
	.ascii "CMSG_ENVELOPED 3\0"
	.byte	0x1
	.uleb128 0x837
	.ascii "CMSG_SIGNED_AND_ENVELOPED 4\0"
	.byte	0x1
	.uleb128 0x838
	.ascii "CMSG_HASHED 5\0"
	.byte	0x1
	.uleb128 0x839
	.ascii "CMSG_ENCRYPTED 6\0"
	.byte	0x1
	.uleb128 0x83b
	.ascii "CMSG_ALL_FLAGS (~__MSABI_LONG(0U))\0"
	.byte	0x1
	.uleb128 0x83c
	.ascii "CMSG_DATA_FLAG (1 << CMSG_DATA)\0"
	.byte	0x1
	.uleb128 0x83d
	.ascii "CMSG_SIGNED_FLAG (1 << CMSG_SIGNED)\0"
	.byte	0x1
	.uleb128 0x83e
	.ascii "CMSG_ENVELOPED_FLAG (1 << CMSG_ENVELOPED)\0"
	.byte	0x1
	.uleb128 0x83f
	.ascii "CMSG_SIGNED_AND_ENVELOPED_FLAG (1 << CMSG_SIGNED_AND_ENVELOPED)\0"
	.byte	0x1
	.uleb128 0x840
	.ascii "CMSG_HASHED_FLAG (1 << CMSG_HASHED)\0"
	.byte	0x1
	.uleb128 0x841
	.ascii "CMSG_ENCRYPTED_FLAG (1 << CMSG_ENCRYPTED)\0"
	.byte	0x1
	.uleb128 0x851
	.ascii "CERT_ID_ISSUER_SERIAL_NUMBER 1\0"
	.byte	0x1
	.uleb128 0x852
	.ascii "CERT_ID_KEY_IDENTIFIER 2\0"
	.byte	0x1
	.uleb128 0x853
	.ascii "CERT_ID_SHA1_HASH 3\0"
	.byte	0x1
	.uleb128 0x8ae
	.ascii "CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE 1\0"
	.byte	0x1
	.uleb128 0x8af
	.ascii "CMSG_KEY_AGREE_STATIC_KEY_CHOICE 2\0"
	.byte	0x1
	.uleb128 0x8c1
	.ascii "CMSG_MAIL_LIST_HANDLE_KEY_CHOICE 1\0"
	.byte	0x1
	.uleb128 0x8cc
	.ascii "CMSG_KEY_TRANS_RECIPIENT 1\0"
	.byte	0x1
	.uleb128 0x8cd
	.ascii "CMSG_KEY_AGREE_RECIPIENT 2\0"
	.byte	0x1
	.uleb128 0x8ce
	.ascii "CMSG_MAIL_LIST_RECIPIENT 3\0"
	.byte	0x1
	.uleb128 0x8da
	.ascii "CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG 0x80000000\0"
	.byte	0x1
	.uleb128 0x8e1
	.ascii "CMSG_RC4_NO_SALT_FLAG 0x40000000\0"
	.byte	0x1
	.uleb128 0x8f8
	.ascii "CMSG_INDEFINITE_LENGTH (0xFFFFFFFF)\0"
	.byte	0x1
	.uleb128 0x900
	.ascii "CMSG_BARE_CONTENT_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0x901
	.ascii "CMSG_LENGTH_ONLY_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0x902
	.ascii "CMSG_DETACHED_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0x903
	.ascii "CMSG_AUTHENTICATED_ATTRIBUTES_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0x904
	.ascii "CMSG_CONTENTS_OCTETS_FLAG 0x10\0"
	.byte	0x1
	.uleb128 0x905
	.ascii "CMSG_MAX_LENGTH_FLAG 0x20\0"
	.byte	0x1
	.uleb128 0x907
	.ascii "CMSG_CMS_ENCAPSULATED_CONTENT_FLAG 0x40\0"
	.byte	0x1
	.uleb128 0x909
	.ascii "CMSG_CRYPT_RELEASE_CONTEXT_FLAG 0x8000\0"
	.byte	0x1
	.uleb128 0x913
	.ascii "CMSG_TYPE_PARAM 1\0"
	.byte	0x1
	.uleb128 0x914
	.ascii "CMSG_CONTENT_PARAM 2\0"
	.byte	0x1
	.uleb128 0x915
	.ascii "CMSG_BARE_CONTENT_PARAM 3\0"
	.byte	0x1
	.uleb128 0x916
	.ascii "CMSG_INNER_CONTENT_TYPE_PARAM 4\0"
	.byte	0x1
	.uleb128 0x917
	.ascii "CMSG_SIGNER_COUNT_PARAM 5\0"
	.byte	0x1
	.uleb128 0x918
	.ascii "CMSG_SIGNER_INFO_PARAM 6\0"
	.byte	0x1
	.uleb128 0x919
	.ascii "CMSG_SIGNER_CERT_INFO_PARAM 7\0"
	.byte	0x1
	.uleb128 0x91a
	.ascii "CMSG_SIGNER_HASH_ALGORITHM_PARAM 8\0"
	.byte	0x1
	.uleb128 0x91b
	.ascii "CMSG_SIGNER_AUTH_ATTR_PARAM 9\0"
	.byte	0x1
	.uleb128 0x91c
	.ascii "CMSG_SIGNER_UNAUTH_ATTR_PARAM 10\0"
	.byte	0x1
	.uleb128 0x91d
	.ascii "CMSG_CERT_COUNT_PARAM 11\0"
	.byte	0x1
	.uleb128 0x91e
	.ascii "CMSG_CERT_PARAM 12\0"
	.byte	0x1
	.uleb128 0x91f
	.ascii "CMSG_CRL_COUNT_PARAM 13\0"
	.byte	0x1
	.uleb128 0x920
	.ascii "CMSG_CRL_PARAM 14\0"
	.byte	0x1
	.uleb128 0x921
	.ascii "CMSG_ENVELOPE_ALGORITHM_PARAM 15\0"
	.byte	0x1
	.uleb128 0x922
	.ascii "CMSG_RECIPIENT_COUNT_PARAM 17\0"
	.byte	0x1
	.uleb128 0x923
	.ascii "CMSG_RECIPIENT_INDEX_PARAM 18\0"
	.byte	0x1
	.uleb128 0x924
	.ascii "CMSG_RECIPIENT_INFO_PARAM 19\0"
	.byte	0x1
	.uleb128 0x925
	.ascii "CMSG_HASH_ALGORITHM_PARAM 20\0"
	.byte	0x1
	.uleb128 0x926
	.ascii "CMSG_HASH_DATA_PARAM 21\0"
	.byte	0x1
	.uleb128 0x927
	.ascii "CMSG_COMPUTED_HASH_PARAM 22\0"
	.byte	0x1
	.uleb128 0x928
	.ascii "CMSG_ENCRYPT_PARAM 26\0"
	.byte	0x1
	.uleb128 0x929
	.ascii "CMSG_ENCRYPTED_DIGEST 27\0"
	.byte	0x1
	.uleb128 0x92a
	.ascii "CMSG_ENCODED_SIGNER 28\0"
	.byte	0x1
	.uleb128 0x92b
	.ascii "CMSG_ENCODED_MESSAGE 29\0"
	.byte	0x1
	.uleb128 0x92c
	.ascii "CMSG_VERSION_PARAM 30\0"
	.byte	0x1
	.uleb128 0x92d
	.ascii "CMSG_ATTR_CERT_COUNT_PARAM 31\0"
	.byte	0x1
	.uleb128 0x92e
	.ascii "CMSG_ATTR_CERT_PARAM 32\0"
	.byte	0x1
	.uleb128 0x92f
	.ascii "CMSG_CMS_RECIPIENT_COUNT_PARAM 33\0"
	.byte	0x1
	.uleb128 0x930
	.ascii "CMSG_CMS_RECIPIENT_INDEX_PARAM 34\0"
	.byte	0x1
	.uleb128 0x931
	.ascii "CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM 35\0"
	.byte	0x1
	.uleb128 0x932
	.ascii "CMSG_CMS_RECIPIENT_INFO_PARAM 36\0"
	.byte	0x1
	.uleb128 0x933
	.ascii "CMSG_UNPROTECTED_ATTR_PARAM 37\0"
	.byte	0x1
	.uleb128 0x934
	.ascii "CMSG_SIGNER_CERT_ID_PARAM 38\0"
	.byte	0x1
	.uleb128 0x935
	.ascii "CMSG_CMS_SIGNER_INFO_PARAM 39\0"
	.byte	0x1
	.uleb128 0x94f
	.ascii "CMSG_SIGNED_DATA_V1 1\0"
	.byte	0x1
	.uleb128 0x950
	.ascii "CMSG_SIGNED_DATA_V3 3\0"
	.byte	0x1
	.uleb128 0x951
	.ascii "CMSG_SIGNED_DATA_PKCS_1_5_VERSION CMSG_SIGNED_DATA_V1\0"
	.byte	0x1
	.uleb128 0x952
	.ascii "CMSG_SIGNED_DATA_CMS_VERSION CMSG_SIGNED_DATA_V3\0"
	.byte	0x1
	.uleb128 0x954
	.ascii "CMSG_SIGNER_INFO_V1 1\0"
	.byte	0x1
	.uleb128 0x955
	.ascii "CMSG_SIGNER_INFO_V3 3\0"
	.byte	0x1
	.uleb128 0x956
	.ascii "CMSG_SIGNER_INFO_PKCS_1_5_VERSION CMSG_SIGNER_INFO_V1\0"
	.byte	0x1
	.uleb128 0x957
	.ascii "CMSG_SIGNER_INFO_CMS_VERSION CMSG_SIGNER_INFO_V3\0"
	.byte	0x1
	.uleb128 0x959
	.ascii "CMSG_HASHED_DATA_V0 0\0"
	.byte	0x1
	.uleb128 0x95a
	.ascii "CMSG_HASHED_DATA_V2 2\0"
	.byte	0x1
	.uleb128 0x95b
	.ascii "CMSG_HASHED_DATA_PKCS_1_5_VERSION CMSG_HASHED_DATA_V0\0"
	.byte	0x1
	.uleb128 0x95c
	.ascii "CMSG_HASHED_DATA_CMS_VERSION CMSG_HASHED_DATA_V2\0"
	.byte	0x1
	.uleb128 0x95e
	.ascii "CMSG_ENVELOPED_DATA_V0 0\0"
	.byte	0x1
	.uleb128 0x95f
	.ascii "CMSG_ENVELOPED_DATA_V2 2\0"
	.byte	0x1
	.uleb128 0x960
	.ascii "CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION CMSG_ENVELOPED_DATA_V0\0"
	.byte	0x1
	.uleb128 0x961
	.ascii "CMSG_ENVELOPED_DATA_CMS_VERSION CMSG_ENVELOPED_DATA_V2\0"
	.byte	0x1
	.uleb128 0x97e
	.ascii "CMSG_KEY_AGREE_ORIGINATOR_CERT 1\0"
	.byte	0x1
	.uleb128 0x97f
	.ascii "CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY 2\0"
	.byte	0x1
	.uleb128 0x993
	.ascii "CMSG_ENVELOPED_RECIPIENT_V0 0\0"
	.byte	0x1
	.uleb128 0x994
	.ascii "CMSG_ENVELOPED_RECIPIENT_V2 2\0"
	.byte	0x1
	.uleb128 0x995
	.ascii "CMSG_ENVELOPED_RECIPIENT_V3 3\0"
	.byte	0x1
	.uleb128 0x996
	.ascii "CMSG_ENVELOPED_RECIPIENT_V4 4\0"
	.byte	0x1
	.uleb128 0x997
	.ascii "CMSG_KEY_TRANS_PKCS_1_5_VERSION CMSG_ENVELOPED_RECIPIENT_V0\0"
	.byte	0x1
	.uleb128 0x998
	.ascii "CMSG_KEY_TRANS_CMS_VERSION CMSG_ENVELOPED_RECIPIENT_V2\0"
	.byte	0x1
	.uleb128 0x999
	.ascii "CMSG_KEY_AGREE_VERSION CMSG_ENVELOPED_RECIPIENT_V3\0"
	.byte	0x1
	.uleb128 0x99a
	.ascii "CMSG_MAIL_LIST_VERSION CMSG_ENVELOPED_RECIPIENT_V4\0"
	.byte	0x1
	.uleb128 0x99e
	.ascii "CMSG_CTRL_VERIFY_SIGNATURE 1\0"
	.byte	0x1
	.uleb128 0x99f
	.ascii "CMSG_CTRL_DECRYPT 2\0"
	.byte	0x1
	.uleb128 0x9a0
	.ascii "CMSG_CTRL_VERIFY_HASH 5\0"
	.byte	0x1
	.uleb128 0x9a1
	.ascii "CMSG_CTRL_ADD_SIGNER 6\0"
	.byte	0x1
	.uleb128 0x9a2
	.ascii "CMSG_CTRL_DEL_SIGNER 7\0"
	.byte	0x1
	.uleb128 0x9a3
	.ascii "CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR 8\0"
	.byte	0x1
	.uleb128 0x9a4
	.ascii "CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR 9\0"
	.byte	0x1
	.uleb128 0x9a5
	.ascii "CMSG_CTRL_ADD_CERT 10\0"
	.byte	0x1
	.uleb128 0x9a6
	.ascii "CMSG_CTRL_DEL_CERT 11\0"
	.byte	0x1
	.uleb128 0x9a7
	.ascii "CMSG_CTRL_ADD_CRL 12\0"
	.byte	0x1
	.uleb128 0x9a8
	.ascii "CMSG_CTRL_DEL_CRL 13\0"
	.byte	0x1
	.uleb128 0x9a9
	.ascii "CMSG_CTRL_ADD_ATTR_CERT 14\0"
	.byte	0x1
	.uleb128 0x9aa
	.ascii "CMSG_CTRL_DEL_ATTR_CERT 15\0"
	.byte	0x1
	.uleb128 0x9ab
	.ascii "CMSG_CTRL_KEY_TRANS_DECRYPT 16\0"
	.byte	0x1
	.uleb128 0x9ac
	.ascii "CMSG_CTRL_KEY_AGREE_DECRYPT 17\0"
	.byte	0x1
	.uleb128 0x9ad
	.ascii "CMSG_CTRL_MAIL_LIST_DECRYPT 18\0"
	.byte	0x1
	.uleb128 0x9ae
	.ascii "CMSG_CTRL_VERIFY_SIGNATURE_EX 19\0"
	.byte	0x1
	.uleb128 0x9af
	.ascii "CMSG_CTRL_ADD_CMS_SIGNER_INFO 20\0"
	.byte	0x1
	.uleb128 0x9b9
	.ascii "CMSG_VERIFY_SIGNER_PUBKEY 1\0"
	.byte	0x1
	.uleb128 0x9ba
	.ascii "CMSG_VERIFY_SIGNER_CERT 2\0"
	.byte	0x1
	.uleb128 0x9bb
	.ascii "CMSG_VERIFY_SIGNER_CHAIN 3\0"
	.byte	0x1
	.uleb128 0x9bc
	.ascii "CMSG_VERIFY_SIGNER_NULL 4\0"
	.byte	0x1
	.uleb128 0x9f7
	.ascii "CMSG_OID_GEN_ENCRYPT_KEY_FUNC \"CryptMsgDllGenEncryptKey\"\0"
	.byte	0x1
	.uleb128 0x9fa
	.ascii "CMSG_OID_EXPORT_ENCRYPT_KEY_FUNC \"CryptMsgDllExportEncryptKey\"\0"
	.byte	0x1
	.uleb128 0x9fd
	.ascii "CMSG_OID_IMPORT_ENCRYPT_KEY_FUNC \"CryptMsgDllImportEncryptKey\"\0"
	.byte	0x1
	.uleb128 0xa00
	.ascii "CMSG_DEFAULT_INSTALLABLE_FUNC_OID ((LPCSTR) 1)\0"
	.byte	0x1
	.uleb128 0xa10
	.ascii "CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xa12
	.ascii "CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xa13
	.ascii "CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG 0x8000\0"
	.byte	0x1
	.uleb128 0xa15
	.ascii "CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC \"CryptMsgDllGenContentEncryptKey\"\0"
	.byte	0x1
	.uleb128 0xa20
	.ascii "CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xa22
	.ascii "CMSG_OID_EXPORT_KEY_TRANS_FUNC \"CryptMsgDllExportKeyTrans\"\0"
	.byte	0x1
	.uleb128 0xa39
	.ascii "CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xa3a
	.ascii "CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xa3b
	.ascii "CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xa3c
	.ascii "CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0xa3d
	.ascii "CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG 0x10\0"
	.byte	0x1
	.uleb128 0xa3f
	.ascii "CMSG_OID_EXPORT_KEY_AGREE_FUNC \"CryptMsgDllExportKeyAgree\"\0"
	.byte	0x1
	.uleb128 0xa4b
	.ascii "CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xa4d
	.ascii "CMSG_OID_EXPORT_MAIL_LIST_FUNC \"CryptMsgDllExportMailList\"\0"
	.byte	0x1
	.uleb128 0xa50
	.ascii "CMSG_OID_IMPORT_KEY_TRANS_FUNC \"CryptMsgDllImportKeyTrans\"\0"
	.byte	0x1
	.uleb128 0xa53
	.ascii "CMSG_OID_IMPORT_KEY_AGREE_FUNC \"CryptMsgDllImportKeyAgree\"\0"
	.byte	0x1
	.uleb128 0xa56
	.ascii "CMSG_OID_IMPORT_MAIL_LIST_FUNC \"CryptMsgDllImportMailList\"\0"
	.byte	0x1
	.uleb128 0xa7c
	.ascii "CERT_KEY_PROV_HANDLE_PROP_ID 1\0"
	.byte	0x1
	.uleb128 0xa7d
	.ascii "CERT_KEY_PROV_INFO_PROP_ID 2\0"
	.byte	0x1
	.uleb128 0xa7e
	.ascii "CERT_SHA1_HASH_PROP_ID 3\0"
	.byte	0x1
	.uleb128 0xa7f
	.ascii "CERT_MD5_HASH_PROP_ID 4\0"
	.byte	0x1
	.uleb128 0xa80
	.ascii "CERT_HASH_PROP_ID CERT_SHA1_HASH_PROP_ID\0"
	.byte	0x1
	.uleb128 0xa81
	.ascii "CERT_KEY_CONTEXT_PROP_ID 5\0"
	.byte	0x1
	.uleb128 0xa82
	.ascii "CERT_KEY_SPEC_PROP_ID 6\0"
	.byte	0x1
	.uleb128 0xa83
	.ascii "CERT_IE30_RESERVED_PROP_ID 7\0"
	.byte	0x1
	.uleb128 0xa84
	.ascii "CERT_PUBKEY_HASH_RESERVED_PROP_ID 8\0"
	.byte	0x1
	.uleb128 0xa85
	.ascii "CERT_ENHKEY_USAGE_PROP_ID 9\0"
	.byte	0x1
	.uleb128 0xa86
	.ascii "CERT_CTL_USAGE_PROP_ID CERT_ENHKEY_USAGE_PROP_ID\0"
	.byte	0x1
	.uleb128 0xa87
	.ascii "CERT_NEXT_UPDATE_LOCATION_PROP_ID 10\0"
	.byte	0x1
	.uleb128 0xa88
	.ascii "CERT_FRIENDLY_NAME_PROP_ID 11\0"
	.byte	0x1
	.uleb128 0xa89
	.ascii "CERT_PVK_FILE_PROP_ID 12\0"
	.byte	0x1
	.uleb128 0xa8a
	.ascii "CERT_DESCRIPTION_PROP_ID 13\0"
	.byte	0x1
	.uleb128 0xa8b
	.ascii "CERT_ACCESS_STATE_PROP_ID 14\0"
	.byte	0x1
	.uleb128 0xa8c
	.ascii "CERT_SIGNATURE_HASH_PROP_ID 15\0"
	.byte	0x1
	.uleb128 0xa8d
	.ascii "CERT_SMART_CARD_DATA_PROP_ID 16\0"
	.byte	0x1
	.uleb128 0xa8e
	.ascii "CERT_EFS_PROP_ID 17\0"
	.byte	0x1
	.uleb128 0xa8f
	.ascii "CERT_FORTEZZA_DATA_PROP_ID 18\0"
	.byte	0x1
	.uleb128 0xa90
	.ascii "CERT_ARCHIVED_PROP_ID 19\0"
	.byte	0x1
	.uleb128 0xa91
	.ascii "CERT_KEY_IDENTIFIER_PROP_ID 20\0"
	.byte	0x1
	.uleb128 0xa92
	.ascii "CERT_AUTO_ENROLL_PROP_ID 21\0"
	.byte	0x1
	.uleb128 0xa93
	.ascii "CERT_PUBKEY_ALG_PARA_PROP_ID 22\0"
	.byte	0x1
	.uleb128 0xa94
	.ascii "CERT_CROSS_CERT_DIST_POINTS_PROP_ID 23\0"
	.byte	0x1
	.uleb128 0xa95
	.ascii "CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID 24\0"
	.byte	0x1
	.uleb128 0xa96
	.ascii "CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID 25\0"
	.byte	0x1
	.uleb128 0xa97
	.ascii "CERT_ENROLLMENT_PROP_ID 26\0"
	.byte	0x1
	.uleb128 0xa98
	.ascii "CERT_DATE_STAMP_PROP_ID 27\0"
	.byte	0x1
	.uleb128 0xa99
	.ascii "CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID 28\0"
	.byte	0x1
	.uleb128 0xa9a
	.ascii "CERT_SUBJECT_NAME_MD5_HASH_PROP_ID 29\0"
	.byte	0x1
	.uleb128 0xa9b
	.ascii "CERT_EXTENDED_ERROR_INFO_PROP_ID 30\0"
	.byte	0x1
	.uleb128 0xa9c
	.ascii "CERT_RENEWAL_PROP_ID 64\0"
	.byte	0x1
	.uleb128 0xa9d
	.ascii "CERT_ARCHIVED_KEY_HASH_PROP_ID 65\0"
	.byte	0x1
	.uleb128 0xa9e
	.ascii "CERT_AUTO_ENROLL_RETRY_PROP_ID 66\0"
	.byte	0x1
	.uleb128 0xa9f
	.ascii "CERT_AIA_URL_RETRIEVED_PROP_ID 67\0"
	.byte	0x1
	.uleb128 0xaa0
	.ascii "CERT_REQUEST_ORIGINATOR_PROP_ID 71\0"
	.byte	0x1
	.uleb128 0xaa1
	.ascii "CERT_FIRST_RESERVED_PROP_ID 72\0"
	.byte	0x1
	.uleb128 0xaa2
	.ascii "CERT_LAST_RESERVED_PROP_ID 0x7fff\0"
	.byte	0x1
	.uleb128 0xaa3
	.ascii "CERT_FIRST_USER_PROP_ID 0x8000\0"
	.byte	0x1
	.uleb128 0xaa4
	.ascii "CERT_LAST_USER_PROP_ID 0xffff\0"
	.byte	0x1
	.uleb128 0xaa6
	.ascii "IS_CERT_HASH_PROP_ID(X) (CERT_SHA1_HASH_PROP_ID==(X) || CERT_MD5_HASH_PROP_ID==(X) || CERT_SIGNATURE_HASH_PROP_ID==(X))\0"
	.byte	0x1
	.uleb128 0xaa7
	.ascii "IS_PUBKEY_HASH_PROP_ID(X) (CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID==(X) || CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID==(X))\0"
	.byte	0x1
	.uleb128 0xaa8
	.ascii "IS_CHAIN_HASH_PROP_ID(X) (CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID==(X) || CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID==(X) || CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID==(X) || CERT_SUBJECT_NAME_MD5_HASH_PROP_ID==(X))\0"
	.byte	0x1
	.uleb128 0xaaa
	.ascii "szOID_CERT_PROP_ID_PREFIX \"1.3.6.1.4.1.311.10.11.\"\0"
	.byte	0x1
	.uleb128 0xaab
	.ascii "szOID_CERT_KEY_IDENTIFIER_PROP_ID \"1.3.6.1.4.1.311.10.11.20\"\0"
	.byte	0x1
	.uleb128 0xaac
	.ascii "szOID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID \"1.3.6.1.4.1.311.10.11.28\"\0"
	.byte	0x1
	.uleb128 0xaad
	.ascii "szOID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID \"1.3.6.1.4.1.311.10.11.29\"\0"
	.byte	0x1
	.uleb128 0xaaf
	.ascii "CERT_ACCESS_STATE_WRITE_PERSIST_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xab1
	.ascii "CERT_ACCESS_STATE_SYSTEM_STORE_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xab3
	.ascii "CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xac6
	.ascii "CERT_SET_KEY_PROV_HANDLE_PROP_ID 0x1\0"
	.byte	0x1
	.uleb128 0xac7
	.ascii "CERT_SET_KEY_CONTEXT_PROP_ID 0x1\0"
	.byte	0x1
	.uleb128 0xacf
	.ascii "CERT_STORE_PROV_MSG ((LPCSTR) 1)\0"
	.byte	0x1
	.uleb128 0xad0
	.ascii "CERT_STORE_PROV_MEMORY ((LPCSTR) 2)\0"
	.byte	0x1
	.uleb128 0xad1
	.ascii "CERT_STORE_PROV_FILE ((LPCSTR) 3)\0"
	.byte	0x1
	.uleb128 0xad2
	.ascii "CERT_STORE_PROV_REG ((LPCSTR) 4)\0"
	.byte	0x1
	.uleb128 0xad4
	.ascii "CERT_STORE_PROV_PKCS7 ((LPCSTR) 5)\0"
	.byte	0x1
	.uleb128 0xad5
	.ascii "CERT_STORE_PROV_SERIALIZED ((LPCSTR) 6)\0"
	.byte	0x1
	.uleb128 0xad6
	.ascii "CERT_STORE_PROV_FILENAME_A ((LPCSTR) 7)\0"
	.byte	0x1
	.uleb128 0xad7
	.ascii "CERT_STORE_PROV_FILENAME_W ((LPCSTR) 8)\0"
	.byte	0x1
	.uleb128 0xad8
	.ascii "CERT_STORE_PROV_FILENAME CERT_STORE_PROV_FILENAME_W\0"
	.byte	0x1
	.uleb128 0xad9
	.ascii "CERT_STORE_PROV_SYSTEM_A ((LPCSTR) 9)\0"
	.byte	0x1
	.uleb128 0xada
	.ascii "CERT_STORE_PROV_SYSTEM_W ((LPCSTR) 10)\0"
	.byte	0x1
	.uleb128 0xadb
	.ascii "CERT_STORE_PROV_SYSTEM CERT_STORE_PROV_SYSTEM_W\0"
	.byte	0x1
	.uleb128 0xadd
	.ascii "CERT_STORE_PROV_COLLECTION ((LPCSTR) 11)\0"
	.byte	0x1
	.uleb128 0xade
	.ascii "CERT_STORE_PROV_SYSTEM_REGISTRY_A ((LPCSTR) 12)\0"
	.byte	0x1
	.uleb128 0xadf
	.ascii "CERT_STORE_PROV_SYSTEM_REGISTRY_W ((LPCSTR) 13)\0"
	.byte	0x1
	.uleb128 0xae0
	.ascii "CERT_STORE_PROV_SYSTEM_REGISTRY CERT_STORE_PROV_SYSTEM_REGISTRY_W\0"
	.byte	0x1
	.uleb128 0xae1
	.ascii "CERT_STORE_PROV_PHYSICAL_W ((LPCSTR) 14)\0"
	.byte	0x1
	.uleb128 0xae2
	.ascii "CERT_STORE_PROV_PHYSICAL CERT_STORE_PROV_PHYSICAL_W\0"
	.byte	0x1
	.uleb128 0xae3
	.ascii "CERT_STORE_PROV_SMART_CARD_W ((LPCSTR) 15)\0"
	.byte	0x1
	.uleb128 0xae4
	.ascii "CERT_STORE_PROV_SMART_CARD CERT_STORE_PROV_SMART_CARD_W\0"
	.byte	0x1
	.uleb128 0xae5
	.ascii "CERT_STORE_PROV_LDAP_W ((LPCSTR) 16)\0"
	.byte	0x1
	.uleb128 0xae6
	.ascii "CERT_STORE_PROV_LDAP CERT_STORE_PROV_LDAP_W\0"
	.byte	0x1
	.uleb128 0xae7
	.ascii "sz_CERT_STORE_PROV_MEMORY \"Memory\"\0"
	.byte	0x1
	.uleb128 0xae8
	.ascii "sz_CERT_STORE_PROV_FILENAME_W \"File\"\0"
	.byte	0x1
	.uleb128 0xae9
	.ascii "sz_CERT_STORE_PROV_FILENAME sz_CERT_STORE_PROV_FILENAME_W\0"
	.byte	0x1
	.uleb128 0xaea
	.ascii "sz_CERT_STORE_PROV_SYSTEM_W \"System\"\0"
	.byte	0x1
	.uleb128 0xaeb
	.ascii "sz_CERT_STORE_PROV_SYSTEM sz_CERT_STORE_PROV_SYSTEM_W\0"
	.byte	0x1
	.uleb128 0xaec
	.ascii "sz_CERT_STORE_PROV_PKCS7 \"PKCS7\"\0"
	.byte	0x1
	.uleb128 0xaed
	.ascii "sz_CERT_STORE_PROV_SERIALIZED \"Serialized\"\0"
	.byte	0x1
	.uleb128 0xaee
	.ascii "sz_CERT_STORE_PROV_COLLECTION \"Collection\"\0"
	.byte	0x1
	.uleb128 0xaef
	.ascii "sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W \"SystemRegistry\"\0"
	.byte	0x1
	.uleb128 0xaf0
	.ascii "sz_CERT_STORE_PROV_SYSTEM_REGISTRY sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W\0"
	.byte	0x1
	.uleb128 0xaf1
	.ascii "sz_CERT_STORE_PROV_PHYSICAL_W \"Physical\"\0"
	.byte	0x1
	.uleb128 0xaf2
	.ascii "sz_CERT_STORE_PROV_PHYSICAL sz_CERT_STORE_PROV_PHYSICAL_W\0"
	.byte	0x1
	.uleb128 0xaf3
	.ascii "sz_CERT_STORE_PROV_SMART_CARD_W \"SmartCard\"\0"
	.byte	0x1
	.uleb128 0xaf4
	.ascii "sz_CERT_STORE_PROV_SMART_CARD sz_CERT_STORE_PROV_SMART_CARD_W\0"
	.byte	0x1
	.uleb128 0xaf5
	.ascii "sz_CERT_STORE_PROV_LDAP_W \"Ldap\"\0"
	.byte	0x1
	.uleb128 0xaf6
	.ascii "sz_CERT_STORE_PROV_LDAP sz_CERT_STORE_PROV_LDAP_W\0"
	.byte	0x1
	.uleb128 0xaf7
	.ascii "CERT_STORE_SIGNATURE_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xaf8
	.ascii "CERT_STORE_TIME_VALIDITY_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xaf9
	.ascii "CERT_STORE_REVOCATION_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xafa
	.ascii "CERT_STORE_NO_CRL_FLAG 0x10000\0"
	.byte	0x1
	.uleb128 0xafb
	.ascii "CERT_STORE_NO_ISSUER_FLAG 0x20000\0"
	.byte	0x1
	.uleb128 0xafc
	.ascii "CERT_STORE_BASE_CRL_FLAG 0x100\0"
	.byte	0x1
	.uleb128 0xafd
	.ascii "CERT_STORE_DELTA_CRL_FLAG 0x200\0"
	.byte	0x1
	.uleb128 0xafe
	.ascii "CERT_STORE_NO_CRYPT_RELEASE_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xaff
	.ascii "CERT_STORE_SET_LOCALIZED_NAME_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xb00
	.ascii "CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xb01
	.ascii "CERT_STORE_DELETE_FLAG 0x10\0"
	.byte	0x1
	.uleb128 0xb02
	.ascii "CERT_STORE_UNSAFE_PHYSICAL_FLAG 0x20\0"
	.byte	0x1
	.uleb128 0xb03
	.ascii "CERT_STORE_SHARE_STORE_FLAG 0x40\0"
	.byte	0x1
	.uleb128 0xb04
	.ascii "CERT_STORE_SHARE_CONTEXT_FLAG 0x80\0"
	.byte	0x1
	.uleb128 0xb05
	.ascii "CERT_STORE_MANIFOLD_FLAG 0x100\0"
	.byte	0x1
	.uleb128 0xb06
	.ascii "CERT_STORE_ENUM_ARCHIVED_FLAG 0x200\0"
	.byte	0x1
	.uleb128 0xb07
	.ascii "CERT_STORE_UPDATE_KEYID_FLAG 0x400\0"
	.byte	0x1
	.uleb128 0xb08
	.ascii "CERT_STORE_BACKUP_RESTORE_FLAG 0x800\0"
	.byte	0x1
	.uleb128 0xb09
	.ascii "CERT_STORE_READONLY_FLAG 0x8000\0"
	.byte	0x1
	.uleb128 0xb0a
	.ascii "CERT_STORE_OPEN_EXISTING_FLAG 0x4000\0"
	.byte	0x1
	.uleb128 0xb0b
	.ascii "CERT_STORE_CREATE_NEW_FLAG 0x2000\0"
	.byte	0x1
	.uleb128 0xb0c
	.ascii "CERT_STORE_MAXIMUM_ALLOWED_FLAG 0x1000\0"
	.byte	0x1
	.uleb128 0xb0e
	.ascii "CERT_SYSTEM_STORE_MASK 0xFFFF0000\0"
	.byte	0x1
	.uleb128 0xb0f
	.ascii "CERT_SYSTEM_STORE_RELOCATE_FLAG 0x80000000\0"
	.byte	0x1
	.uleb128 0xb1d
	.ascii "CERT_SYSTEM_STORE_UNPROTECTED_FLAG 0x40000000\0"
	.byte	0x1
	.uleb128 0xb1e
	.ascii "CERT_SYSTEM_STORE_LOCATION_MASK 0xff0000\0"
	.byte	0x1
	.uleb128 0xb1f
	.ascii "CERT_SYSTEM_STORE_LOCATION_SHIFT 16\0"
	.byte	0x1
	.uleb128 0xb20
	.ascii "CERT_SYSTEM_STORE_CURRENT_USER_ID 1\0"
	.byte	0x1
	.uleb128 0xb21
	.ascii "CERT_SYSTEM_STORE_LOCAL_MACHINE_ID 2\0"
	.byte	0x1
	.uleb128 0xb22
	.ascii "CERT_SYSTEM_STORE_CURRENT_SERVICE_ID 4\0"
	.byte	0x1
	.uleb128 0xb23
	.ascii "CERT_SYSTEM_STORE_SERVICES_ID 5\0"
	.byte	0x1
	.uleb128 0xb24
	.ascii "CERT_SYSTEM_STORE_USERS_ID 6\0"
	.byte	0x1
	.uleb128 0xb25
	.ascii "CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID 7\0"
	.byte	0x1
	.uleb128 0xb26
	.ascii "CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID 8\0"
	.byte	0x1
	.uleb128 0xb27
	.ascii "CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID 9\0"
	.byte	0x1
	.uleb128 0xb28
	.ascii "CERT_SYSTEM_STORE_CURRENT_USER (CERT_SYSTEM_STORE_CURRENT_USER_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT)\0"
	.byte	0x1
	.uleb128 0xb29
	.ascii "CERT_SYSTEM_STORE_LOCAL_MACHINE (CERT_SYSTEM_STORE_LOCAL_MACHINE_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT)\0"
	.byte	0x1
	.uleb128 0xb2a
	.ascii "CERT_SYSTEM_STORE_CURRENT_SERVICE (CERT_SYSTEM_STORE_CURRENT_SERVICE_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT)\0"
	.byte	0x1
	.uleb128 0xb2b
	.ascii "CERT_SYSTEM_STORE_SERVICES (CERT_SYSTEM_STORE_SERVICES_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT)\0"
	.byte	0x1
	.uleb128 0xb2c
	.ascii "CERT_SYSTEM_STORE_USERS (CERT_SYSTEM_STORE_USERS_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT)\0"
	.byte	0x1
	.uleb128 0xb2d
	.ascii "CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY (CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT)\0"
	.byte	0x1
	.uleb128 0xb2e
	.ascii "CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY (CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT)\0"
	.byte	0x1
	.uleb128 0xb2f
	.ascii "CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE (CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID << CERT_SYSTEM_STORE_LOCATION_SHIFT)\0"
	.byte	0x1
	.uleb128 0xb31
	.ascii "CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH L\"Software\\\\Policies\\\\Microsoft\\\\SystemCertificates\"\0"
	.byte	0x1
	.uleb128 0xb33
	.ascii "CERT_EFSBLOB_REGPATH CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH L\"\\\\EFS\"\0"
	.byte	0x1
	.uleb128 0xb34
	.ascii "CERT_EFSBLOB_VALUE_NAME L\"EFSBlob\"\0"
	.byte	0x1
	.uleb128 0xb36
	.ascii "CERT_PROT_ROOT_FLAGS_REGPATH CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH L\"\\\\Root\\\\ProtectedRoots\"\0"
	.byte	0x1
	.uleb128 0xb37
	.ascii "CERT_PROT_ROOT_FLAGS_VALUE_NAME L\"Flags\"\0"
	.byte	0x1
	.uleb128 0xb38
	.ascii "CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xb39
	.ascii "CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xb3a
	.ascii "CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xb3b
	.ascii "CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0xb3c
	.ascii "CERT_PROT_ROOT_ONLY_LM_GPT_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0xb3d
	.ascii "CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG 0x10\0"
	.byte	0x1
	.uleb128 0xb3e
	.ascii "CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG 0x20\0"
	.byte	0x1
	.uleb128 0xb40
	.ascii "CERT_TRUST_PUB_SAFER_GROUP_POLICY_REGPATH CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH L\"\\\\TrustedPublisher\\\\Safer\"\0"
	.byte	0x1
	.uleb128 0xb41
	.ascii "CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH L\"Software\\\\Microsoft\\\\SystemCertificates\"\0"
	.byte	0x1
	.uleb128 0xb42
	.ascii "CERT_TRUST_PUB_SAFER_LOCAL_MACHINE_REGPATH CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH L\"\\\\TrustedPublisher\\\\Safer\"\0"
	.byte	0x1
	.uleb128 0xb43
	.ascii "CERT_TRUST_PUB_AUTHENTICODE_FLAGS_VALUE_NAME L\"AuthenticodeFlags\"\0"
	.byte	0x1
	.uleb128 0xb44
	.ascii "CERT_TRUST_PUB_ALLOW_TRUST_MASK 0x3\0"
	.byte	0x1
	.uleb128 0xb45
	.ascii "CERT_TRUST_PUB_ALLOW_END_USER_TRUST 0x0\0"
	.byte	0x1
	.uleb128 0xb46
	.ascii "CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST 0x1\0"
	.byte	0x1
	.uleb128 0xb47
	.ascii "CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST 0x2\0"
	.byte	0x1
	.uleb128 0xb48
	.ascii "CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG 0x100\0"
	.byte	0x1
	.uleb128 0xb49
	.ascii "CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG 0x200\0"
	.byte	0x1
	.uleb128 0xb4b
	.ascii "CERT_OCM_SUBCOMPONENTS_LOCAL_MACHINE_REGPATH L\"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Setup\\\\OC Manager\\\\Subcomponents\"\0"
	.byte	0x1
	.uleb128 0xb4c
	.ascii "CERT_OCM_SUBCOMPONENTS_ROOT_AUTO_UPDATE_VALUE_NAME L\"RootAutoUpdate\"\0"
	.byte	0x1
	.uleb128 0xb4e
	.ascii "CERT_AUTH_ROOT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH L\"\\\\AuthRoot\\\\AutoUpdate\"\0"
	.byte	0x1
	.uleb128 0xb4f
	.ascii "CERT_AUTH_ROOT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME L\"RootDirUrl\"\0"
	.byte	0x1
	.uleb128 0xb50
	.ascii "CERT_AUTH_ROOT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME L\"SyncDeltaTime\"\0"
	.byte	0x1
	.uleb128 0xb51
	.ascii "CERT_AUTH_ROOT_AUTO_UPDATE_FLAGS_VALUE_NAME L\"Flags\"\0"
	.byte	0x1
	.uleb128 0xb52
	.ascii "CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xb53
	.ascii "CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xb54
	.ascii "CERT_AUTH_ROOT_CTL_FILENAME L\"authroot.stl\"\0"
	.byte	0x1
	.uleb128 0xb55
	.ascii "CERT_AUTH_ROOT_CTL_FILENAME_A \"authroot.stl\"\0"
	.byte	0x1
	.uleb128 0xb56
	.ascii "CERT_AUTH_ROOT_CAB_FILENAME L\"authrootstl.cab\"\0"
	.byte	0x1
	.uleb128 0xb57
	.ascii "CERT_AUTH_ROOT_SEQ_FILENAME L\"authrootseq.txt\"\0"
	.byte	0x1
	.uleb128 0xb58
	.ascii "CERT_AUTH_ROOT_CERT_EXT L\".crt\"\0"
	.byte	0x1
	.uleb128 0xb5a
	.ascii "CERT_REGISTRY_STORE_REMOTE_FLAG 0x10000\0"
	.byte	0x1
	.uleb128 0xb5b
	.ascii "CERT_REGISTRY_STORE_SERIALIZED_FLAG 0x20000\0"
	.byte	0x1
	.uleb128 0xb5c
	.ascii "CERT_REGISTRY_STORE_CLIENT_GPT_FLAG 0x80000000\0"
	.byte	0x1
	.uleb128 0xb5d
	.ascii "CERT_REGISTRY_STORE_LM_GPT_FLAG 0x1000000\0"
	.byte	0x1
	.uleb128 0xb64
	.ascii "CERT_REGISTRY_STORE_ROAMING_FLAG 0x40000\0"
	.byte	0x1
	.uleb128 0xb6b
	.ascii "CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG 0x80000\0"
	.byte	0x1
	.uleb128 0xb6c
	.ascii "CERT_IE_DIRTY_FLAGS_REGPATH L\"Software\\\\Microsoft\\\\Cryptography\\\\IEDirtyFlags\"\0"
	.byte	0x1
	.uleb128 0xb6d
	.ascii "CERT_FILE_STORE_COMMIT_ENABLE_FLAG 0x10000\0"
	.byte	0x1
	.uleb128 0xb6e
	.ascii "CERT_LDAP_STORE_SIGN_FLAG 0x10000\0"
	.byte	0x1
	.uleb128 0xb6f
	.ascii "CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG 0x20000\0"
	.byte	0x1
	.uleb128 0xb70
	.ascii "CERT_LDAP_STORE_OPENED_FLAG 0x40000\0"
	.byte	0x1
	.uleb128 0xb77
	.ascii "CERT_LDAP_STORE_UNBIND_FLAG 0x80000\0"
	.byte	0x1
	.uleb128 0xb7d
	.ascii "CRYPT_OID_OPEN_STORE_PROV_FUNC \"CertDllOpenStoreProv\"\0"
	.byte	0x1
	.uleb128 0xb8a
	.ascii "CERT_STORE_PROV_EXTERNAL_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xb8b
	.ascii "CERT_STORE_PROV_DELETED_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xb8c
	.ascii "CERT_STORE_PROV_NO_PERSIST_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xb8d
	.ascii "CERT_STORE_PROV_SYSTEM_STORE_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0xb8e
	.ascii "CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG 0x10\0"
	.byte	0x1
	.uleb128 0xb8f
	.ascii "CERT_STORE_PROV_CLOSE_FUNC 0\0"
	.byte	0x1
	.uleb128 0xb90
	.ascii "CERT_STORE_PROV_READ_CERT_FUNC 1\0"
	.byte	0x1
	.uleb128 0xb91
	.ascii "CERT_STORE_PROV_WRITE_CERT_FUNC 2\0"
	.byte	0x1
	.uleb128 0xb92
	.ascii "CERT_STORE_PROV_DELETE_CERT_FUNC 3\0"
	.byte	0x1
	.uleb128 0xb93
	.ascii "CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC 4\0"
	.byte	0x1
	.uleb128 0xb94
	.ascii "CERT_STORE_PROV_READ_CRL_FUNC 5\0"
	.byte	0x1
	.uleb128 0xb95
	.ascii "CERT_STORE_PROV_WRITE_CRL_FUNC 6\0"
	.byte	0x1
	.uleb128 0xb96
	.ascii "CERT_STORE_PROV_DELETE_CRL_FUNC 7\0"
	.byte	0x1
	.uleb128 0xb97
	.ascii "CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC 8\0"
	.byte	0x1
	.uleb128 0xb98
	.ascii "CERT_STORE_PROV_READ_CTL_FUNC 9\0"
	.byte	0x1
	.uleb128 0xb99
	.ascii "CERT_STORE_PROV_WRITE_CTL_FUNC 10\0"
	.byte	0x1
	.uleb128 0xb9a
	.ascii "CERT_STORE_PROV_DELETE_CTL_FUNC 11\0"
	.byte	0x1
	.uleb128 0xb9b
	.ascii "CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC 12\0"
	.byte	0x1
	.uleb128 0xb9c
	.ascii "CERT_STORE_PROV_CONTROL_FUNC 13\0"
	.byte	0x1
	.uleb128 0xb9d
	.ascii "CERT_STORE_PROV_FIND_CERT_FUNC 14\0"
	.byte	0x1
	.uleb128 0xb9e
	.ascii "CERT_STORE_PROV_FREE_FIND_CERT_FUNC 15\0"
	.byte	0x1
	.uleb128 0xb9f
	.ascii "CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC 16\0"
	.byte	0x1
	.uleb128 0xba0
	.ascii "CERT_STORE_PROV_FIND_CRL_FUNC 17\0"
	.byte	0x1
	.uleb128 0xba1
	.ascii "CERT_STORE_PROV_FREE_FIND_CRL_FUNC 18\0"
	.byte	0x1
	.uleb128 0xba2
	.ascii "CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC 19\0"
	.byte	0x1
	.uleb128 0xba3
	.ascii "CERT_STORE_PROV_FIND_CTL_FUNC 20\0"
	.byte	0x1
	.uleb128 0xba4
	.ascii "CERT_STORE_PROV_FREE_FIND_CTL_FUNC 21\0"
	.byte	0x1
	.uleb128 0xba5
	.ascii "CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC 22\0"
	.byte	0x1
	.uleb128 0xbaa
	.ascii "CERT_STORE_PROV_WRITE_ADD_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xbce
	.ascii "CERT_STORE_SAVE_AS_STORE 1\0"
	.byte	0x1
	.uleb128 0xbcf
	.ascii "CERT_STORE_SAVE_AS_PKCS7 2\0"
	.byte	0x1
	.uleb128 0xbd0
	.ascii "CERT_STORE_SAVE_TO_FILE 1\0"
	.byte	0x1
	.uleb128 0xbd1
	.ascii "CERT_STORE_SAVE_TO_MEMORY 2\0"
	.byte	0x1
	.uleb128 0xbd2
	.ascii "CERT_STORE_SAVE_TO_FILENAME_A 3\0"
	.byte	0x1
	.uleb128 0xbd3
	.ascii "CERT_STORE_SAVE_TO_FILENAME_W 4\0"
	.byte	0x1
	.uleb128 0xbd4
	.ascii "CERT_STORE_SAVE_TO_FILENAME CERT_STORE_SAVE_TO_FILENAME_W\0"
	.byte	0x1
	.uleb128 0xbd8
	.ascii "CERT_CLOSE_STORE_FORCE_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xbd9
	.ascii "CERT_CLOSE_STORE_CHECK_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xbe0
	.ascii "CERT_COMPARE_MASK 0xFFFF\0"
	.byte	0x1
	.uleb128 0xbe1
	.ascii "CERT_COMPARE_SHIFT 16\0"
	.byte	0x1
	.uleb128 0xbe2
	.ascii "CERT_COMPARE_ANY 0\0"
	.byte	0x1
	.uleb128 0xbe3
	.ascii "CERT_COMPARE_SHA1_HASH 1\0"
	.byte	0x1
	.uleb128 0xbe4
	.ascii "CERT_COMPARE_NAME 2\0"
	.byte	0x1
	.uleb128 0xbe5
	.ascii "CERT_COMPARE_ATTR 3\0"
	.byte	0x1
	.uleb128 0xbe6
	.ascii "CERT_COMPARE_MD5_HASH 4\0"
	.byte	0x1
	.uleb128 0xbe7
	.ascii "CERT_COMPARE_PROPERTY 5\0"
	.byte	0x1
	.uleb128 0xbe8
	.ascii "CERT_COMPARE_PUBLIC_KEY 6\0"
	.byte	0x1
	.uleb128 0xbe9
	.ascii "CERT_COMPARE_HASH CERT_COMPARE_SHA1_HASH\0"
	.byte	0x1
	.uleb128 0xbea
	.ascii "CERT_COMPARE_NAME_STR_A 7\0"
	.byte	0x1
	.uleb128 0xbeb
	.ascii "CERT_COMPARE_NAME_STR_W 8\0"
	.byte	0x1
	.uleb128 0xbec
	.ascii "CERT_COMPARE_KEY_SPEC 9\0"
	.byte	0x1
	.uleb128 0xbed
	.ascii "CERT_COMPARE_ENHKEY_USAGE 10\0"
	.byte	0x1
	.uleb128 0xbee
	.ascii "CERT_COMPARE_CTL_USAGE CERT_COMPARE_ENHKEY_USAGE\0"
	.byte	0x1
	.uleb128 0xbef
	.ascii "CERT_COMPARE_SUBJECT_CERT 11\0"
	.byte	0x1
	.uleb128 0xbf0
	.ascii "CERT_COMPARE_ISSUER_OF 12\0"
	.byte	0x1
	.uleb128 0xbf1
	.ascii "CERT_COMPARE_EXISTING 13\0"
	.byte	0x1
	.uleb128 0xbf2
	.ascii "CERT_COMPARE_SIGNATURE_HASH 14\0"
	.byte	0x1
	.uleb128 0xbf3
	.ascii "CERT_COMPARE_KEY_IDENTIFIER 15\0"
	.byte	0x1
	.uleb128 0xbf4
	.ascii "CERT_COMPARE_CERT_ID 16\0"
	.byte	0x1
	.uleb128 0xbf5
	.ascii "CERT_COMPARE_CROSS_CERT_DIST_POINTS 17\0"
	.byte	0x1
	.uleb128 0xbf6
	.ascii "CERT_COMPARE_PUBKEY_MD5_HASH 18\0"
	.byte	0x1
	.uleb128 0xbf8
	.ascii "CERT_FIND_ANY (CERT_COMPARE_ANY << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xbf9
	.ascii "CERT_FIND_SHA1_HASH (CERT_COMPARE_SHA1_HASH << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xbfa
	.ascii "CERT_FIND_MD5_HASH (CERT_COMPARE_MD5_HASH << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xbfb
	.ascii "CERT_FIND_SIGNATURE_HASH (CERT_COMPARE_SIGNATURE_HASH << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xbfc
	.ascii "CERT_FIND_KEY_IDENTIFIER (CERT_COMPARE_KEY_IDENTIFIER << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xbfd
	.ascii "CERT_FIND_HASH CERT_FIND_SHA1_HASH\0"
	.byte	0x1
	.uleb128 0xbfe
	.ascii "CERT_FIND_PROPERTY (CERT_COMPARE_PROPERTY << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xbff
	.ascii "CERT_FIND_PUBLIC_KEY (CERT_COMPARE_PUBLIC_KEY << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xc00
	.ascii "CERT_FIND_SUBJECT_NAME (CERT_COMPARE_NAME << CERT_COMPARE_SHIFT | CERT_INFO_SUBJECT_FLAG)\0"
	.byte	0x1
	.uleb128 0xc01
	.ascii "CERT_FIND_SUBJECT_ATTR (CERT_COMPARE_ATTR << CERT_COMPARE_SHIFT | CERT_INFO_SUBJECT_FLAG)\0"
	.byte	0x1
	.uleb128 0xc02
	.ascii "CERT_FIND_ISSUER_NAME (CERT_COMPARE_NAME << CERT_COMPARE_SHIFT | CERT_INFO_ISSUER_FLAG)\0"
	.byte	0x1
	.uleb128 0xc03
	.ascii "CERT_FIND_ISSUER_ATTR (CERT_COMPARE_ATTR << CERT_COMPARE_SHIFT | CERT_INFO_ISSUER_FLAG)\0"
	.byte	0x1
	.uleb128 0xc04
	.ascii "CERT_FIND_SUBJECT_STR_A (CERT_COMPARE_NAME_STR_A << CERT_COMPARE_SHIFT | CERT_INFO_SUBJECT_FLAG)\0"
	.byte	0x1
	.uleb128 0xc05
	.ascii "CERT_FIND_SUBJECT_STR_W (CERT_COMPARE_NAME_STR_W << CERT_COMPARE_SHIFT | CERT_INFO_SUBJECT_FLAG)\0"
	.byte	0x1
	.uleb128 0xc06
	.ascii "CERT_FIND_SUBJECT_STR CERT_FIND_SUBJECT_STR_W\0"
	.byte	0x1
	.uleb128 0xc07
	.ascii "CERT_FIND_ISSUER_STR_A (CERT_COMPARE_NAME_STR_A << CERT_COMPARE_SHIFT | CERT_INFO_ISSUER_FLAG)\0"
	.byte	0x1
	.uleb128 0xc08
	.ascii "CERT_FIND_ISSUER_STR_W (CERT_COMPARE_NAME_STR_W << CERT_COMPARE_SHIFT | CERT_INFO_ISSUER_FLAG)\0"
	.byte	0x1
	.uleb128 0xc09
	.ascii "CERT_FIND_ISSUER_STR CERT_FIND_ISSUER_STR_W\0"
	.byte	0x1
	.uleb128 0xc0a
	.ascii "CERT_FIND_KEY_SPEC (CERT_COMPARE_KEY_SPEC << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xc0b
	.ascii "CERT_FIND_ENHKEY_USAGE (CERT_COMPARE_ENHKEY_USAGE << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xc0c
	.ascii "CERT_FIND_CTL_USAGE CERT_FIND_ENHKEY_USAGE\0"
	.byte	0x1
	.uleb128 0xc0d
	.ascii "CERT_FIND_SUBJECT_CERT (CERT_COMPARE_SUBJECT_CERT << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xc0e
	.ascii "CERT_FIND_ISSUER_OF (CERT_COMPARE_ISSUER_OF << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xc0f
	.ascii "CERT_FIND_EXISTING (CERT_COMPARE_EXISTING << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xc10
	.ascii "CERT_FIND_CERT_ID (CERT_COMPARE_CERT_ID << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xc11
	.ascii "CERT_FIND_CROSS_CERT_DIST_POINTS (CERT_COMPARE_CROSS_CERT_DIST_POINTS << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xc12
	.ascii "CERT_FIND_PUBKEY_MD5_HASH (CERT_COMPARE_PUBKEY_MD5_HASH << CERT_COMPARE_SHIFT)\0"
	.byte	0x1
	.uleb128 0xc13
	.ascii "CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xc14
	.ascii "CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xc15
	.ascii "CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xc16
	.ascii "CERT_FIND_NO_ENHKEY_USAGE_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0xc17
	.ascii "CERT_FIND_OR_ENHKEY_USAGE_FLAG 0x10\0"
	.byte	0x1
	.uleb128 0xc18
	.ascii "CERT_FIND_VALID_ENHKEY_USAGE_FLAG 0x20\0"
	.byte	0x1
	.uleb128 0xc19
	.ascii "CERT_FIND_OPTIONAL_CTL_USAGE_FLAG CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG\0"
	.byte	0x1
	.uleb128 0xc1a
	.ascii "CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG\0"
	.byte	0x1
	.uleb128 0xc1b
	.ascii "CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG\0"
	.byte	0x1
	.uleb128 0xc1c
	.ascii "CERT_FIND_NO_CTL_USAGE_FLAG CERT_FIND_NO_ENHKEY_USAGE_FLAG\0"
	.byte	0x1
	.uleb128 0xc1d
	.ascii "CERT_FIND_OR_CTL_USAGE_FLAG CERT_FIND_OR_ENHKEY_USAGE_FLAG\0"
	.byte	0x1
	.uleb128 0xc1e
	.ascii "CERT_FIND_VALID_CTL_USAGE_FLAG CERT_FIND_VALID_ENHKEY_USAGE_FLAG\0"
	.byte	0x1
	.uleb128 0xc27
	.ascii "CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG 0x80000000\0"
	.byte	0x1
	.uleb128 0xc28
	.ascii "CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG 0x40000000\0"
	.byte	0x1
	.uleb128 0xc2e
	.ascii "CTL_ENTRY_FROM_PROP_CHAIN_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xc35
	.ascii "CRL_FIND_ANY 0\0"
	.byte	0x1
	.uleb128 0xc36
	.ascii "CRL_FIND_ISSUED_BY 1\0"
	.byte	0x1
	.uleb128 0xc37
	.ascii "CRL_FIND_EXISTING 2\0"
	.byte	0x1
	.uleb128 0xc38
	.ascii "CRL_FIND_ISSUED_FOR 3\0"
	.byte	0x1
	.uleb128 0xc39
	.ascii "CRL_FIND_ISSUED_BY_AKI_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xc3a
	.ascii "CRL_FIND_ISSUED_BY_SIGNATURE_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xc3b
	.ascii "CRL_FIND_ISSUED_BY_DELTA_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xc3c
	.ascii "CRL_FIND_ISSUED_BY_BASE_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0xc4c
	.ascii "CERT_STORE_ADD_NEW 1\0"
	.byte	0x1
	.uleb128 0xc4d
	.ascii "CERT_STORE_ADD_USE_EXISTING 2\0"
	.byte	0x1
	.uleb128 0xc4e
	.ascii "CERT_STORE_ADD_REPLACE_EXISTING 3\0"
	.byte	0x1
	.uleb128 0xc4f
	.ascii "CERT_STORE_ADD_ALWAYS 4\0"
	.byte	0x1
	.uleb128 0xc50
	.ascii "CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES 5\0"
	.byte	0x1
	.uleb128 0xc51
	.ascii "CERT_STORE_ADD_NEWER 6\0"
	.byte	0x1
	.uleb128 0xc52
	.ascii "CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES 7\0"
	.byte	0x1
	.uleb128 0xc57
	.ascii "CERT_STORE_CERTIFICATE_CONTEXT 1\0"
	.byte	0x1
	.uleb128 0xc58
	.ascii "CERT_STORE_CRL_CONTEXT 2\0"
	.byte	0x1
	.uleb128 0xc59
	.ascii "CERT_STORE_CTL_CONTEXT 3\0"
	.byte	0x1
	.uleb128 0xc5a
	.ascii "CERT_STORE_ALL_CONTEXT_FLAG (~__MSABI_LONG(0U))\0"
	.byte	0x1
	.uleb128 0xc5b
	.ascii "CERT_STORE_CERTIFICATE_CONTEXT_FLAG (1 << CERT_STORE_CERTIFICATE_CONTEXT)\0"
	.byte	0x1
	.uleb128 0xc5c
	.ascii "CERT_STORE_CRL_CONTEXT_FLAG (1 << CERT_STORE_CRL_CONTEXT)\0"
	.byte	0x1
	.uleb128 0xc5d
	.ascii "CERT_STORE_CTL_CONTEXT_FLAG (1 << CERT_STORE_CTL_CONTEXT)\0"
	.byte	0x1
	.uleb128 0xc6f
	.ascii "CTL_ANY_SUBJECT_TYPE 1\0"
	.byte	0x1
	.uleb128 0xc70
	.ascii "CTL_CERT_SUBJECT_TYPE 2\0"
	.byte	0x1
	.uleb128 0xc79
	.ascii "CTL_FIND_ANY 0\0"
	.byte	0x1
	.uleb128 0xc7a
	.ascii "CTL_FIND_SHA1_HASH 1\0"
	.byte	0x1
	.uleb128 0xc7b
	.ascii "CTL_FIND_MD5_HASH 2\0"
	.byte	0x1
	.uleb128 0xc7c
	.ascii "CTL_FIND_USAGE 3\0"
	.byte	0x1
	.uleb128 0xc7d
	.ascii "CTL_FIND_SUBJECT 4\0"
	.byte	0x1
	.uleb128 0xc7e
	.ascii "CTL_FIND_EXISTING 5\0"
	.byte	0x1
	.uleb128 0xc87
	.ascii "CTL_FIND_NO_LIST_ID_CBDATA 0xFFFFFFFF\0"
	.byte	0x1
	.uleb128 0xc88
	.ascii "CTL_FIND_NO_SIGNER_PTR ((PCERT_INFO) -1)\0"
	.byte	0x1
	.uleb128 0xc8a
	.ascii "CTL_FIND_SAME_USAGE_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xc9e
	.ascii "CERT_STORE_CTRL_RESYNC 1\0"
	.byte	0x1
	.uleb128 0xc9f
	.ascii "CERT_STORE_CTRL_NOTIFY_CHANGE 2\0"
	.byte	0x1
	.uleb128 0xca0
	.ascii "CERT_STORE_CTRL_COMMIT 3\0"
	.byte	0x1
	.uleb128 0xca1
	.ascii "CERT_STORE_CTRL_AUTO_RESYNC 4\0"
	.byte	0x1
	.uleb128 0xca2
	.ascii "CERT_STORE_CTRL_CANCEL_NOTIFY 5\0"
	.byte	0x1
	.uleb128 0xca3
	.ascii "CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xca4
	.ascii "CERT_STORE_CTRL_COMMIT_FORCE_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xca5
	.ascii "CERT_STORE_CTRL_COMMIT_CLEAR_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xca6
	.ascii "CERT_STORE_LOCALIZED_NAME_PROP_ID 0x1000\0"
	.byte	0x1
	.uleb128 0xcb3
	.ascii "CERT_CREATE_CONTEXT_NOCOPY_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xcb4
	.ascii "CERT_CREATE_CONTEXT_SORTED_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xcb5
	.ascii "CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xcb6
	.ascii "CERT_CREATE_CONTEXT_NO_ENTRY_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0xcc6
	.ascii "CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xcc7
	.ascii "CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xcc8
	.ascii "CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xcc9
	.ascii "CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0xcd4
	.ascii "CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xcd5
	.ascii "CERT_PHYSICAL_STORE_DEFAULT_NAME L\".Default\"\0"
	.byte	0x1
	.uleb128 0xcd6
	.ascii "CERT_PHYSICAL_STORE_GROUP_POLICY_NAME L\".GroupPolicy\"\0"
	.byte	0x1
	.uleb128 0xcd7
	.ascii "CERT_PHYSICAL_STORE_LOCAL_MACHINE_NAME L\".LocalMachine\"\0"
	.byte	0x1
	.uleb128 0xcd8
	.ascii "CERT_PHYSICAL_STORE_DS_USER_CERTIFICATE_NAME L\".UserCertificate\"\0"
	.byte	0x1
	.uleb128 0xcd9
	.ascii "CERT_PHYSICAL_STORE_LOCAL_MACHINE_GROUP_POLICY_NAME L\".LocalMachineGroupPolicy\"\0"
	.byte	0x1
	.uleb128 0xcda
	.ascii "CERT_PHYSICAL_STORE_ENTERPRISE_NAME L\".Enterprise\"\0"
	.byte	0x1
	.uleb128 0xcdb
	.ascii "CERT_PHYSICAL_STORE_AUTH_ROOT_NAME L\".AuthRoot\"\0"
	.byte	0x1
	.uleb128 0xce1
	.ascii "CRYPT_OID_OPEN_SYSTEM_STORE_PROV_FUNC \"CertDllOpenSystemStoreProv\"\0"
	.byte	0x1
	.uleb128 0xce2
	.ascii "CRYPT_OID_REGISTER_SYSTEM_STORE_FUNC \"CertDllRegisterSystemStore\"\0"
	.byte	0x1
	.uleb128 0xce3
	.ascii "CRYPT_OID_UNREGISTER_SYSTEM_STORE_FUNC \"CertDllUnregisterSystemStore\"\0"
	.byte	0x1
	.uleb128 0xce4
	.ascii "CRYPT_OID_ENUM_SYSTEM_STORE_FUNC \"CertDllEnumSystemStore\"\0"
	.byte	0x1
	.uleb128 0xce5
	.ascii "CRYPT_OID_REGISTER_PHYSICAL_STORE_FUNC \"CertDllRegisterPhysicalStore\"\0"
	.byte	0x1
	.uleb128 0xce6
	.ascii "CRYPT_OID_UNREGISTER_PHYSICAL_STORE_FUNC \"CertDllUnregisterPhysicalStore\"\0"
	.byte	0x1
	.uleb128 0xce7
	.ascii "CRYPT_OID_ENUM_PHYSICAL_STORE_FUNC \"CertDllEnumPhysicalStore\"\0"
	.byte	0x1
	.uleb128 0xce8
	.ascii "CRYPT_OID_SYSTEM_STORE_LOCATION_VALUE_NAME L\"SystemStoreLocation\"\0"
	.byte	0x1
	.uleb128 0xcf1
	.ascii "CMSG_TRUSTED_SIGNER_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xcf2
	.ascii "CMSG_SIGNER_ONLY_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xcf3
	.ascii "CMSG_USE_SIGNER_INDEX_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xcf7
	.ascii "CMSG_CMS_ENCAPSULATED_CTL_FLAG 0x8000\0"
	.byte	0x1
	.uleb128 0xcfb
	.ascii "CMSG_ENCODE_SORTED_CTL_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xcfd
	.ascii "CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xd15
	.ascii "CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xd16
	.ascii "CERT_VERIFY_TRUSTED_SIGNERS_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xd17
	.ascii "CERT_VERIFY_NO_TIME_CHECK_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xd18
	.ascii "CERT_VERIFY_ALLOW_MORE_USAGE_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0xd1a
	.ascii "CERT_VERIFY_UPDATED_CTL_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xd41
	.ascii "CERT_CONTEXT_REVOCATION_TYPE 1\0"
	.byte	0x1
	.uleb128 0xd42
	.ascii "CERT_VERIFY_REV_CHAIN_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xd43
	.ascii "CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION 0x2\0"
	.byte	0x1
	.uleb128 0xd44
	.ascii "CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xd4b
	.ascii "CERT_UNICODE_IS_RDN_ATTRS_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xd4c
	.ascii "CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xd53
	.ascii "CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB 1\0"
	.byte	0x1
	.uleb128 0xd54
	.ascii "CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT 2\0"
	.byte	0x1
	.uleb128 0xd55
	.ascii "CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL 3\0"
	.byte	0x1
	.uleb128 0xd56
	.ascii "CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY 1\0"
	.byte	0x1
	.uleb128 0xd57
	.ascii "CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT 2\0"
	.byte	0x1
	.uleb128 0xd58
	.ascii "CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN 3\0"
	.byte	0x1
	.uleb128 0xd59
	.ascii "CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL 4\0"
	.byte	0x1
	.uleb128 0xd6e
	.ascii "CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xd6f
	.ascii "CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xd71
	.ascii "CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID 1\0"
	.byte	0x1
	.uleb128 0xd72
	.ascii "CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID 2\0"
	.byte	0x1
	.uleb128 0xd7c
	.ascii "CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FUNC \"CryptDllExportPublicKeyInfoEx\"\0"
	.byte	0x1
	.uleb128 0xd81
	.ascii "CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_FUNC \"CryptDllImportPublicKeyInfoEx\"\0"
	.byte	0x1
	.uleb128 0xd86
	.ascii "CRYPT_ACQUIRE_CACHE_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xd87
	.ascii "CRYPT_ACQUIRE_USE_PROV_INFO_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xd88
	.ascii "CRYPT_ACQUIRE_COMPARE_KEY_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xd89
	.ascii "CRYPT_ACQUIRE_SILENT_FLAG 0x40\0"
	.byte	0x1
	.uleb128 0xd8d
	.ascii "CRYPT_FIND_USER_KEYSET_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xd8e
	.ascii "CRYPT_FIND_MACHINE_KEYSET_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xd8f
	.ascii "CRYPT_FIND_SILENT_KEYSET_FLAG 0x40\0"
	.byte	0x1
	.uleb128 0xd93
	.ascii "CRYPT_OID_IMPORT_PRIVATE_KEY_INFO_FUNC \"CryptDllImportPrivateKeyInfoEx\"\0"
	.byte	0x1
	.uleb128 0xd99
	.ascii "CRYPT_OID_EXPORT_PRIVATE_KEY_INFO_FUNC \"CryptDllExportPrivateKeyInfoEx\"\0"
	.byte	0x1
	.uleb128 0xd9a
	.ascii "CRYPT_DELETE_KEYSET 0x1\0"
	.byte	0x1
	.uleb128 0xd9c
	.ascii "CertRDNValueToStr __MINGW_NAME_AW(CertRDNValueToStr)\0"
	.byte	0x1
	.uleb128 0xd9d
	.ascii "CertNameToStr __MINGW_NAME_AW(CertNameToStr)\0"
	.byte	0x1
	.uleb128 0xda7
	.ascii "CERT_SIMPLE_NAME_STR 1\0"
	.byte	0x1
	.uleb128 0xda8
	.ascii "CERT_OID_NAME_STR 2\0"
	.byte	0x1
	.uleb128 0xda9
	.ascii "CERT_X500_NAME_STR 3\0"
	.byte	0x1
	.uleb128 0xdab
	.ascii "CERT_NAME_STR_SEMICOLON_FLAG 0x40000000\0"
	.byte	0x1
	.uleb128 0xdac
	.ascii "CERT_NAME_STR_NO_PLUS_FLAG 0x20000000\0"
	.byte	0x1
	.uleb128 0xdad
	.ascii "CERT_NAME_STR_NO_QUOTING_FLAG 0x10000000\0"
	.byte	0x1
	.uleb128 0xdae
	.ascii "CERT_NAME_STR_CRLF_FLAG 0x8000000\0"
	.byte	0x1
	.uleb128 0xdaf
	.ascii "CERT_NAME_STR_COMMA_FLAG 0x4000000\0"
	.byte	0x1
	.uleb128 0xdb0
	.ascii "CERT_NAME_STR_REVERSE_FLAG 0x2000000\0"
	.byte	0x1
	.uleb128 0xdb2
	.ascii "CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG 0x10000\0"
	.byte	0x1
	.uleb128 0xdb3
	.ascii "CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG 0x20000\0"
	.byte	0x1
	.uleb128 0xdb4
	.ascii "CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG 0x40000\0"
	.byte	0x1
	.uleb128 0xdb5
	.ascii "CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG 0x80000\0"
	.byte	0x1
	.uleb128 0xdb7
	.ascii "CertStrToName __MINGW_NAME_AW(CertStrToName)\0"
	.byte	0x1
	.uleb128 0xdb8
	.ascii "CertGetNameString __MINGW_NAME_AW(CertGetNameString)\0"
	.byte	0x1
	.uleb128 0xdbf
	.ascii "CERT_NAME_EMAIL_TYPE 1\0"
	.byte	0x1
	.uleb128 0xdc0
	.ascii "CERT_NAME_RDN_TYPE 2\0"
	.byte	0x1
	.uleb128 0xdc1
	.ascii "CERT_NAME_ATTR_TYPE 3\0"
	.byte	0x1
	.uleb128 0xdc2
	.ascii "CERT_NAME_SIMPLE_DISPLAY_TYPE 4\0"
	.byte	0x1
	.uleb128 0xdc3
	.ascii "CERT_NAME_FRIENDLY_DISPLAY_TYPE 5\0"
	.byte	0x1
	.uleb128 0xdc4
	.ascii "CERT_NAME_DNS_TYPE 6\0"
	.byte	0x1
	.uleb128 0xdc5
	.ascii "CERT_NAME_URL_TYPE 7\0"
	.byte	0x1
	.uleb128 0xdc6
	.ascii "CERT_NAME_UPN_TYPE 8\0"
	.byte	0x1
	.uleb128 0xdc8
	.ascii "CERT_NAME_ISSUER_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xdc9
	.ascii "CERT_NAME_DISABLE_IE4_UTF8_FLAG 0x10000\0"
	.byte	0x1
	.uleb128 0xde3
	.ascii "CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0xde4
	.ascii "CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0xde5
	.ascii "CRYPT_MESSAGE_KEYID_SIGNER_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xde6
	.ascii "CRYPT_MESSAGE_SILENT_KEYSET_FLAG 0x40\0"
	.byte	0x1
	.uleb128 0xdfa
	.ascii "CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0xe21
	.ascii "CertOpenSystemStore __MINGW_NAME_AW(CertOpenSystemStore)\0"
	.byte	0x1
	.uleb128 0xe22
	.ascii "CertAddEncodedCertificateToSystemStore __MINGW_NAME_AW(CertAddEncodedCertificateToSystemStore)\0"
	.byte	0x1
	.uleb128 0xe41
	.ascii "CERT_QUERY_OBJECT_FILE 0x1\0"
	.byte	0x1
	.uleb128 0xe42
	.ascii "CERT_QUERY_OBJECT_BLOB 0x2\0"
	.byte	0x1
	.uleb128 0xe43
	.ascii "CERT_QUERY_CONTENT_CERT 1\0"
	.byte	0x1
	.uleb128 0xe44
	.ascii "CERT_QUERY_CONTENT_CTL 2\0"
	.byte	0x1
	.uleb128 0xe45
	.ascii "CERT_QUERY_CONTENT_CRL 3\0"
	.byte	0x1
	.uleb128 0xe46
	.ascii "CERT_QUERY_CONTENT_SERIALIZED_STORE 4\0"
	.byte	0x1
	.uleb128 0xe47
	.ascii "CERT_QUERY_CONTENT_SERIALIZED_CERT 5\0"
	.byte	0x1
	.uleb128 0xe48
	.ascii "CERT_QUERY_CONTENT_SERIALIZED_CTL 6\0"
	.byte	0x1
	.uleb128 0xe49
	.ascii "CERT_QUERY_CONTENT_SERIALIZED_CRL 7\0"
	.byte	0x1
	.uleb128 0xe4a
	.ascii "CERT_QUERY_CONTENT_PKCS7_SIGNED 8\0"
	.byte	0x1
	.uleb128 0xe4b
	.ascii "CERT_QUERY_CONTENT_PKCS7_UNSIGNED 9\0"
	.byte	0x1
	.uleb128 0xe4c
	.ascii "CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED 10\0"
	.byte	0x1
	.uleb128 0xe4d
	.ascii "CERT_QUERY_CONTENT_PKCS10 11\0"
	.byte	0x1
	.uleb128 0xe4e
	.ascii "CERT_QUERY_CONTENT_PFX 12\0"
	.byte	0x1
	.uleb128 0xe4f
	.ascii "CERT_QUERY_CONTENT_CERT_PAIR 13\0"
	.byte	0x1
	.uleb128 0xe50
	.ascii "CERT_QUERY_CONTENT_FLAG_CERT (1 << CERT_QUERY_CONTENT_CERT)\0"
	.byte	0x1
	.uleb128 0xe51
	.ascii "CERT_QUERY_CONTENT_FLAG_CTL (1 << CERT_QUERY_CONTENT_CTL)\0"
	.byte	0x1
	.uleb128 0xe52
	.ascii "CERT_QUERY_CONTENT_FLAG_CRL (1 << CERT_QUERY_CONTENT_CRL)\0"
	.byte	0x1
	.uleb128 0xe53
	.ascii "CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE (1 << CERT_QUERY_CONTENT_SERIALIZED_STORE)\0"
	.byte	0x1
	.uleb128 0xe54
	.ascii "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT (1 << CERT_QUERY_CONTENT_SERIALIZED_CERT)\0"
	.byte	0x1
	.uleb128 0xe55
	.ascii "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL (1 << CERT_QUERY_CONTENT_SERIALIZED_CTL)\0"
	.byte	0x1
	.uleb128 0xe56
	.ascii "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL (1 << CERT_QUERY_CONTENT_SERIALIZED_CRL)\0"
	.byte	0x1
	.uleb128 0xe57
	.ascii "CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED (1 << CERT_QUERY_CONTENT_PKCS7_SIGNED)\0"
	.byte	0x1
	.uleb128 0xe58
	.ascii "CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED (1 << CERT_QUERY_CONTENT_PKCS7_UNSIGNED)\0"
	.byte	0x1
	.uleb128 0xe59
	.ascii "CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED (1 << CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED)\0"
	.byte	0x1
	.uleb128 0xe5a
	.ascii "CERT_QUERY_CONTENT_FLAG_PKCS10 (1 << CERT_QUERY_CONTENT_PKCS10)\0"
	.byte	0x1
	.uleb128 0xe5b
	.ascii "CERT_QUERY_CONTENT_FLAG_PFX (1 << CERT_QUERY_CONTENT_PFX)\0"
	.byte	0x1
	.uleb128 0xe5c
	.ascii "CERT_QUERY_CONTENT_FLAG_CERT_PAIR (1 << CERT_QUERY_CONTENT_CERT_PAIR)\0"
	.byte	0x1
	.uleb128 0xe5d
	.ascii "CERT_QUERY_CONTENT_FLAG_ALL CERT_QUERY_CONTENT_FLAG_CERT | CERT_QUERY_CONTENT_FLAG_CTL | CERT_QUERY_CONTENT_FLAG_CRL | CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE | CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT | CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL | CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL | CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED | CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED | CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED | CERT_QUERY_CONTENT_FLAG_PKCS10 | CERT_QUERY_CONTENT_FLAG_PFX | CERT_QUERY_CONTENT_FLAG_CERT_PAIR\0"
	.byte	0x1
	.uleb128 0xe5e
	.ascii "CERT_QUERY_FORMAT_BINARY 1\0"
	.byte	0x1
	.uleb128 0xe5f
	.ascii "CERT_QUERY_FORMAT_BASE64_ENCODED 2\0"
	.byte	0x1
	.uleb128 0xe60
	.ascii "CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED 3\0"
	.byte	0x1
	.uleb128 0xe61
	.ascii "CERT_QUERY_FORMAT_FLAG_BINARY (1 << CERT_QUERY_FORMAT_BINARY)\0"
	.byte	0x1
	.uleb128 0xe62
	.ascii "CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED (1 << CERT_QUERY_FORMAT_BASE64_ENCODED)\0"
	.byte	0x1
	.uleb128 0xe63
	.ascii "CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED (1 << CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED)\0"
	.byte	0x1
	.uleb128 0xe64
	.ascii "CERT_QUERY_FORMAT_FLAG_ALL CERT_QUERY_FORMAT_FLAG_BINARY | CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED | CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED\0"
	.byte	0x1
	.uleb128 0xe7e
	.ascii "CREDENTIAL_OID_PASSWORD_CREDENTIALS_A ((LPCSTR)1)\0"
	.byte	0x1
	.uleb128 0xe7f
	.ascii "CREDENTIAL_OID_PASSWORD_CREDENTIALS_W ((LPCSTR)2)\0"
	.byte	0x1
	.uleb128 0xe81
	.ascii "CREDENTIAL_OID_PASSWORD_CREDENTIALS __MINGW_NAME_UAW(CREDENTIAL_OID_PASSWORD_CREDENTIALS)\0"
	.byte	0x1
	.uleb128 0xe91
	.ascii "CryptRetrieveObjectByUrl __MINGW_NAME_AW(CryptRetrieveObjectByUrl)\0"
	.byte	0x1
	.uleb128 0xe92
	.ascii "CryptStringToBinary __MINGW_NAME_AW(CryptStringToBinary)\0"
	.byte	0x1
	.uleb128 0xe93
	.ascii "CryptBinaryToString __MINGW_NAME_AW(CryptBinaryToString)\0"
	.byte	0x1
	.uleb128 0xe95
	.ascii "SCHEME_OID_RETRIEVE_ENCODED_OBJECT_FUNC \"SchemeDllRetrieveEncodedObject\"\0"
	.byte	0x1
	.uleb128 0xe96
	.ascii "SCHEME_OID_RETRIEVE_ENCODED_OBJECTW_FUNC \"SchemeDllRetrieveEncodedObjectW\"\0"
	.byte	0x1
	.uleb128 0xe9a
	.ascii "CONTEXT_OID_CREATE_OBJECT_CONTEXT_FUNC \"ContextDllCreateObjectContext\"\0"
	.byte	0x1
	.uleb128 0xe9c
	.ascii "CONTEXT_OID_CERTIFICATE ((LPCSTR)1)\0"
	.byte	0x1
	.uleb128 0xe9d
	.ascii "CONTEXT_OID_CRL ((LPCSTR)2)\0"
	.byte	0x1
	.uleb128 0xe9e
	.ascii "CONTEXT_OID_CTL ((LPCSTR)3)\0"
	.byte	0x1
	.uleb128 0xe9f
	.ascii "CONTEXT_OID_PKCS7 ((LPCSTR)4)\0"
	.byte	0x1
	.uleb128 0xea0
	.ascii "CONTEXT_OID_CAPI2_ANY ((LPCSTR)5)\0"
	.byte	0x1
	.uleb128 0xea2
	.ascii "CRYPT_RETRIEVE_MULTIPLE_OBJECTS 0x1\0"
	.byte	0x1
	.uleb128 0xea3
	.ascii "CRYPT_CACHE_ONLY_RETRIEVAL 0x2\0"
	.byte	0x1
	.uleb128 0xea4
	.ascii "CRYPT_WIRE_ONLY_RETRIEVAL 0x4\0"
	.byte	0x1
	.uleb128 0xea5
	.ascii "CRYPT_DONT_CACHE_RESULT 0x8\0"
	.byte	0x1
	.uleb128 0xea6
	.ascii "CRYPT_ASYNC_RETRIEVAL 0x10\0"
	.byte	0x1
	.uleb128 0xea7
	.ascii "CRYPT_STICKY_CACHE_RETRIEVAL 0x1000\0"
	.byte	0x1
	.uleb128 0xea8
	.ascii "CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL 0x2000\0"
	.byte	0x1
	.uleb128 0xea9
	.ascii "CRYPT_OFFLINE_CHECK_RETRIEVAL 0x4000\0"
	.byte	0x1
	.uleb128 0xeaa
	.ascii "CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE 0x8000\0"
	.byte	0x1
	.uleb128 0xeab
	.ascii "CRYPT_LDAP_SIGN_RETRIEVAL 0x10000\0"
	.byte	0x1
	.uleb128 0xeac
	.ascii "CRYPT_NO_AUTH_RETRIEVAL 0x20000\0"
	.byte	0x1
	.uleb128 0xead
	.ascii "CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL 0x40000\0"
	.byte	0x1
	.uleb128 0xeae
	.ascii "CRYPT_AIA_RETRIEVAL 0x80000\0"
	.byte	0x1
	.uleb128 0xeaf
	.ascii "CRYPT_VERIFY_CONTEXT_SIGNATURE 0x20\0"
	.byte	0x1
	.uleb128 0xeb0
	.ascii "CRYPT_VERIFY_DATA_HASH 0x40\0"
	.byte	0x1
	.uleb128 0xeb1
	.ascii "CRYPT_KEEP_TIME_VALID 0x80\0"
	.byte	0x1
	.uleb128 0xeb2
	.ascii "CRYPT_DONT_VERIFY_SIGNATURE 0x100\0"
	.byte	0x1
	.uleb128 0xeb3
	.ascii "CRYPT_DONT_CHECK_TIME_VALIDITY 0x200\0"
	.byte	0x1
	.uleb128 0xeb4
	.ascii "CRYPT_CHECK_FRESHNESS_TIME_VALIDITY 0x400\0"
	.byte	0x1
	.uleb128 0xeb5
	.ascii "CRYPT_ACCUMULATIVE_TIMEOUT 0x800\0"
	.byte	0x1
	.uleb128 0xec6
	.ascii "CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION ((LPCSTR)1)\0"
	.byte	0x1
	.uleb128 0xecf
	.ascii "CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL ((LPCSTR)2)\0"
	.byte	0x1
	.uleb128 0xed3
	.ascii "CRYPT_GET_URL_FROM_PROPERTY 0x1\0"
	.byte	0x1
	.uleb128 0xed4
	.ascii "CRYPT_GET_URL_FROM_EXTENSION 0x2\0"
	.byte	0x1
	.uleb128 0xed5
	.ascii "CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE 0x4\0"
	.byte	0x1
	.uleb128 0xed6
	.ascii "CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE 0x8\0"
	.byte	0x1
	.uleb128 0xee6
	.ascii "URL_OID_GET_OBJECT_URL_FUNC \"UrlDllGetObjectUrl\"\0"
	.byte	0x1
	.uleb128 0xee8
	.ascii "URL_OID_CERTIFICATE_ISSUER ((LPCSTR)1)\0"
	.byte	0x1
	.uleb128 0xee9
	.ascii "URL_OID_CERTIFICATE_CRL_DIST_POINT ((LPCSTR)2)\0"
	.byte	0x1
	.uleb128 0xeea
	.ascii "URL_OID_CTL_ISSUER ((LPCSTR)3)\0"
	.byte	0x1
	.uleb128 0xeeb
	.ascii "URL_OID_CTL_NEXT_UPDATE ((LPCSTR)4)\0"
	.byte	0x1
	.uleb128 0xeec
	.ascii "URL_OID_CRL_ISSUER ((LPCSTR)5)\0"
	.byte	0x1
	.uleb128 0xeed
	.ascii "URL_OID_CERTIFICATE_FRESHEST_CRL ((LPCSTR)6)\0"
	.byte	0x1
	.uleb128 0xeee
	.ascii "URL_OID_CRL_FRESHEST_CRL ((LPCSTR)7)\0"
	.byte	0x1
	.uleb128 0xeef
	.ascii "URL_OID_CROSS_CERT_DIST_POINT ((LPCSTR)8)\0"
	.byte	0x1
	.uleb128 0xef9
	.ascii "TIME_VALID_OID_GET_OBJECT_FUNC \"TimeValidDllGetObject\"\0"
	.byte	0x1
	.uleb128 0xefb
	.ascii "TIME_VALID_OID_GET_CTL ((LPCSTR)1)\0"
	.byte	0x1
	.uleb128 0xefc
	.ascii "TIME_VALID_OID_GET_CRL ((LPCSTR)2)\0"
	.byte	0x1
	.uleb128 0xefd
	.ascii "TIME_VALID_OID_GET_CRL_FROM_CERT ((LPCSTR)3)\0"
	.byte	0x1
	.uleb128 0xeff
	.ascii "TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT ((LPCSTR)4)\0"
	.byte	0x1
	.uleb128 0xf00
	.ascii "TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL ((LPCSTR)5)\0"
	.byte	0x1
	.uleb128 0xf04
	.ascii "TIME_VALID_OID_FLUSH_OBJECT_FUNC \"TimeValidDllFlushObject\"\0"
	.byte	0x1
	.uleb128 0xf05
	.ascii "TIME_VALID_OID_FLUSH_CTL ((LPCSTR)1)\0"
	.byte	0x1
	.uleb128 0xf06
	.ascii "TIME_VALID_OID_FLUSH_CRL ((LPCSTR)2)\0"
	.byte	0x1
	.uleb128 0xf07
	.ascii "TIME_VALID_OID_FLUSH_CRL_FROM_CERT ((LPCSTR)3)\0"
	.byte	0x1
	.uleb128 0xf09
	.ascii "TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT ((LPCSTR)4)\0"
	.byte	0x1
	.uleb128 0xf0a
	.ascii "TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL ((LPCSTR)5)\0"
	.byte	0x1
	.uleb128 0xf13
	.ascii "CRYPTPROTECT_DEFAULT_PROVIDER { 0xdf9d8cd0,0x1501,0x11d1,{0x8c,0x7a,0x00,0xc0,0x4f,0xc2,0x97,0xeb} }\0"
	.byte	0x1
	.uleb128 0xf14
	.ascii "CRYPTPROTECT_PROMPT_ON_UNPROTECT 0x1\0"
	.byte	0x1
	.uleb128 0xf16
	.ascii "CRYPTPROTECT_PROMPT_ON_PROTECT 0x2\0"
	.byte	0x1
	.uleb128 0xf17
	.ascii "CRYPTPROTECT_PROMPT_RESERVED 0x4\0"
	.byte	0x1
	.uleb128 0xf19
	.ascii "CRYPTPROTECT_PROMPT_STRONG 0x8\0"
	.byte	0x1
	.uleb128 0xf1a
	.ascii "CRYPTPROTECT_PROMPT_REQUIRE_STRONG 0x10\0"
	.byte	0x1
	.uleb128 0xf1b
	.ascii "CRYPTPROTECT_UI_FORBIDDEN 0x1\0"
	.byte	0x1
	.uleb128 0xf1c
	.ascii "CRYPTPROTECT_LOCAL_MACHINE 0x4\0"
	.byte	0x1
	.uleb128 0xf1d
	.ascii "CRYPTPROTECT_CRED_SYNC 0x8\0"
	.byte	0x1
	.uleb128 0xf1e
	.ascii "CRYPTPROTECT_AUDIT 0x10\0"
	.byte	0x1
	.uleb128 0xf1f
	.ascii "CRYPTPROTECT_NO_RECOVERY 0x20\0"
	.byte	0x1
	.uleb128 0xf20
	.ascii "CRYPTPROTECT_VERIFY_PROTECTION 0x40\0"
	.byte	0x1
	.uleb128 0xf21
	.ascii "CRYPTPROTECT_CRED_REGENERATE 0x80\0"
	.byte	0x1
	.uleb128 0xf22
	.ascii "CRYPTPROTECT_FIRST_RESERVED_FLAGVAL 0x0FFFFFFF\0"
	.byte	0x1
	.uleb128 0xf23
	.ascii "CRYPTPROTECT_LAST_RESERVED_FLAGVAL 0xFFFFFFFF\0"
	.byte	0x1
	.uleb128 0xf28
	.ascii "CRYPTPROTECTMEMORY_BLOCK_SIZE 16\0"
	.byte	0x1
	.uleb128 0xf29
	.ascii "CRYPTPROTECTMEMORY_SAME_PROCESS 0x0\0"
	.byte	0x1
	.uleb128 0xf2a
	.ascii "CRYPTPROTECTMEMORY_CROSS_PROCESS 0x1\0"
	.byte	0x1
	.uleb128 0xf2b
	.ascii "CRYPTPROTECTMEMORY_SAME_LOGON 0x2\0"
	.byte	0x1
	.uleb128 0xf31
	.ascii "CERT_CREATE_SELFSIGN_NO_SIGN 1\0"
	.byte	0x1
	.uleb128 0xf32
	.ascii "CERT_CREATE_SELFSIGN_NO_KEY_INFO 2\0"
	.byte	0x1
	.uleb128 0xf36
	.ascii "CRYPT_KEYID_MACHINE_FLAG 0x20\0"
	.byte	0x1
	.uleb128 0xf38
	.ascii "CRYPT_KEYID_ALLOC_FLAG 0x8000\0"
	.byte	0x1
	.uleb128 0xf3c
	.ascii "CRYPT_KEYID_DELETE_FLAG 0x10\0"
	.byte	0x1
	.uleb128 0xf3d
	.ascii "CRYPT_KEYID_SET_NEW_FLAG 0x2000\0"
	.byte	0x1
	.uleb128 0xf44
	.ascii "CERT_CHAIN_CONFIG_REGPATH L\"Software\\\\Microsoft\\\\Cryptography\\\\OID\\\\EncodingType 0\\\\CertDllCreateCertificateChainEngine\\\\Config\"\0"
	.byte	0x1
	.uleb128 0xf45
	.ascii "CERT_CHAIN_DISABLE_AIA_URL_RETRIEVAL_VALUE_NAME L\"DisableAIAUrlRetrieval\"\0"
	.byte	0x1
	.uleb128 0xf46
	.ascii "CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_VALUE_NAME L\"MaxAIAUrlCountInCert\"\0"
	.byte	0x1
	.uleb128 0xf47
	.ascii "CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT 5\0"
	.byte	0x1
	.uleb128 0xf48
	.ascii "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_VALUE_NAME L\"MaxAIAUrlRetrievalCountPerChain\"\0"
	.byte	0x1
	.uleb128 0xf49
	.ascii "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT 10\0"
	.byte	0x1
	.uleb128 0xf4a
	.ascii "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME L\"MaxAIAUrlRetrievalByteCount\"\0"
	.byte	0x1
	.uleb128 0xf4b
	.ascii "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT 100000\0"
	.byte	0x1
	.uleb128 0xf4c
	.ascii "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_VALUE_NAME L\"MaxAIAUrlRetrievalCertCount\"\0"
	.byte	0x1
	.uleb128 0xf4d
	.ascii "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT 10\0"
	.byte	0x1
	.uleb128 0xf51
	.ascii "HCCE_CURRENT_USER ((HCERTCHAINENGINE)NULL)\0"
	.byte	0x1
	.uleb128 0xf52
	.ascii "HCCE_LOCAL_MACHINE ((HCERTCHAINENGINE)0x1)\0"
	.byte	0x1
	.uleb128 0xf54
	.ascii "CERT_CHAIN_CACHE_END_CERT 0x1\0"
	.byte	0x1
	.uleb128 0xf55
	.ascii "CERT_CHAIN_THREAD_STORE_SYNC 0x2\0"
	.byte	0x1
	.uleb128 0xf56
	.ascii "CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL 0x4\0"
	.byte	0x1
	.uleb128 0xf57
	.ascii "CERT_CHAIN_USE_LOCAL_MACHINE_STORE 0x8\0"
	.byte	0x1
	.uleb128 0xf58
	.ascii "CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE 0x10\0"
	.byte	0x1
	.uleb128 0xf59
	.ascii "CERT_CHAIN_ENABLE_SHARE_STORE 0x20\0"
	.byte	0x1
	.uleb128 0xf71
	.ascii "CERT_TRUST_NO_ERROR 0x0\0"
	.byte	0x1
	.uleb128 0xf72
	.ascii "CERT_TRUST_IS_NOT_TIME_VALID 0x1\0"
	.byte	0x1
	.uleb128 0xf73
	.ascii "CERT_TRUST_IS_NOT_TIME_NESTED 0x2\0"
	.byte	0x1
	.uleb128 0xf74
	.ascii "CERT_TRUST_IS_REVOKED 0x4\0"
	.byte	0x1
	.uleb128 0xf75
	.ascii "CERT_TRUST_IS_NOT_SIGNATURE_VALID 0x8\0"
	.byte	0x1
	.uleb128 0xf76
	.ascii "CERT_TRUST_IS_NOT_VALID_FOR_USAGE 0x10\0"
	.byte	0x1
	.uleb128 0xf77
	.ascii "CERT_TRUST_IS_UNTRUSTED_ROOT 0x20\0"
	.byte	0x1
	.uleb128 0xf78
	.ascii "CERT_TRUST_REVOCATION_STATUS_UNKNOWN 0x40\0"
	.byte	0x1
	.uleb128 0xf79
	.ascii "CERT_TRUST_IS_CYCLIC 0x80\0"
	.byte	0x1
	.uleb128 0xf7b
	.ascii "CERT_TRUST_INVALID_EXTENSION 0x100\0"
	.byte	0x1
	.uleb128 0xf7c
	.ascii "CERT_TRUST_INVALID_POLICY_CONSTRAINTS 0x200\0"
	.byte	0x1
	.uleb128 0xf7d
	.ascii "CERT_TRUST_INVALID_BASIC_CONSTRAINTS 0x400\0"
	.byte	0x1
	.uleb128 0xf7e
	.ascii "CERT_TRUST_INVALID_NAME_CONSTRAINTS 0x800\0"
	.byte	0x1
	.uleb128 0xf7f
	.ascii "CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT 0x1000\0"
	.byte	0x1
	.uleb128 0xf80
	.ascii "CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT 0x2000\0"
	.byte	0x1
	.uleb128 0xf81
	.ascii "CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT 0x4000\0"
	.byte	0x1
	.uleb128 0xf82
	.ascii "CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT 0x8000\0"
	.byte	0x1
	.uleb128 0xf84
	.ascii "CERT_TRUST_IS_OFFLINE_REVOCATION 0x1000000\0"
	.byte	0x1
	.uleb128 0xf85
	.ascii "CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY 0x2000000\0"
	.byte	0x1
	.uleb128 0xf87
	.ascii "CERT_TRUST_IS_PARTIAL_CHAIN 0x10000\0"
	.byte	0x1
	.uleb128 0xf88
	.ascii "CERT_TRUST_CTL_IS_NOT_TIME_VALID 0x20000\0"
	.byte	0x1
	.uleb128 0xf89
	.ascii "CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID 0x40000\0"
	.byte	0x1
	.uleb128 0xf8a
	.ascii "CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE 0x80000\0"
	.byte	0x1
	.uleb128 0xf8c
	.ascii "CERT_TRUST_HAS_EXACT_MATCH_ISSUER 0x1\0"
	.byte	0x1
	.uleb128 0xf8d
	.ascii "CERT_TRUST_HAS_KEY_MATCH_ISSUER 0x2\0"
	.byte	0x1
	.uleb128 0xf8e
	.ascii "CERT_TRUST_HAS_NAME_MATCH_ISSUER 0x4\0"
	.byte	0x1
	.uleb128 0xf8f
	.ascii "CERT_TRUST_IS_SELF_SIGNED 0x8\0"
	.byte	0x1
	.uleb128 0xf91
	.ascii "CERT_TRUST_HAS_PREFERRED_ISSUER 0x100\0"
	.byte	0x1
	.uleb128 0xf92
	.ascii "CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY 0x200\0"
	.byte	0x1
	.uleb128 0xf93
	.ascii "CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS 0x400\0"
	.byte	0x1
	.uleb128 0xf95
	.ascii "CERT_TRUST_IS_COMPLEX_CHAIN 0x10000\0"
	.byte	0x1
	.uleb128 0xfc9
	.ascii "USAGE_MATCH_TYPE_AND 0x0\0"
	.byte	0x1
	.uleb128 0xfca
	.ascii "USAGE_MATCH_TYPE_OR 0x1\0"
	.byte	0x1
	.uleb128 0xfe4
	.ascii "CERT_CHAIN_REVOCATION_CHECK_END_CERT 0x10000000\0"
	.byte	0x1
	.uleb128 0xfe5
	.ascii "CERT_CHAIN_REVOCATION_CHECK_CHAIN 0x20000000\0"
	.byte	0x1
	.uleb128 0xfe6
	.ascii "CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT 0x40000000\0"
	.byte	0x1
	.uleb128 0xfe7
	.ascii "CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY 0x80000000\0"
	.byte	0x1
	.uleb128 0xfe9
	.ascii "CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT 0x8000000\0"
	.byte	0x1
	.uleb128 0xfea
	.ascii "CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING 0x40\0"
	.byte	0x1
	.uleb128 0xfeb
	.ascii "CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS 0x80\0"
	.byte	0x1
	.uleb128 0xfec
	.ascii "CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE 0x100\0"
	.byte	0x1
	.uleb128 0xfed
	.ascii "CERT_CHAIN_TIMESTAMP_TIME 0x200\0"
	.byte	0x1
	.uleb128 0xff3
	.ascii "REVOCATION_OID_CRL_REVOCATION ((LPCSTR)1)\0"
	.byte	0x1
	.uleb128 0xffd
	.ascii "CERT_CHAIN_FIND_BY_ISSUER 1\0"
	.byte	0x1
	.uleb128 0x1010
	.ascii "CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0x1011
	.ascii "CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0x1012
	.ascii "CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0x1013
	.ascii "CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0x1014
	.ascii "CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG 0x4000\0"
	.byte	0x1
	.uleb128 0x1015
	.ascii "CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG 0x8000\0"
	.byte	0x1
	.uleb128 0x1025
	.ascii "CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG 0x1\0"
	.byte	0x1
	.uleb128 0x1026
	.ascii "CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG 0x2\0"
	.byte	0x1
	.uleb128 0x1027
	.ascii "CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG 0x4\0"
	.byte	0x1
	.uleb128 0x1028
	.ascii "CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG 0x8\0"
	.byte	0x1
	.uleb128 0x102a
	.ascii "CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS (CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG | CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG | CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG)\0"
	.byte	0x1
	.uleb128 0x102c
	.ascii "CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG 0x10\0"
	.byte	0x1
	.uleb128 0x102d
	.ascii "CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG 0x20\0"
	.byte	0x1
	.uleb128 0x102e
	.ascii "CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG 0x40\0"
	.byte	0x1
	.uleb128 0x102f
	.ascii "CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG 0x80\0"
	.byte	0x1
	.uleb128 0x1031
	.ascii "CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG 0x100\0"
	.byte	0x1
	.uleb128 0x1032
	.ascii "CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG 0x200\0"
	.byte	0x1
	.uleb128 0x1033
	.ascii "CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG 0x400\0"
	.byte	0x1
	.uleb128 0x1034
	.ascii "CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG 0x800\0"
	.byte	0x1
	.uleb128 0x1036
	.ascii "CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS (CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG | CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG | CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG | CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG)\0"
	.byte	0x1
	.uleb128 0x1038
	.ascii "CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG 0x8000\0"
	.byte	0x1
	.uleb128 0x1039
	.ascii "CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG 0x4000\0"
	.byte	0x1
	.uleb128 0x103d
	.ascii "CRYPT_OID_VERIFY_CERTIFICATE_CHAIN_POLICY_FUNC \"CertDllVerifyCertificateChainPolicy\"\0"
	.byte	0x1
	.uleb128 0x103f
	.ascii "CERT_CHAIN_POLICY_BASE ((LPCSTR) 1)\0"
	.byte	0x1
	.uleb128 0x1040
	.ascii "CERT_CHAIN_POLICY_AUTHENTICODE ((LPCSTR) 2)\0"
	.byte	0x1
	.uleb128 0x1041
	.ascii "CERT_CHAIN_POLICY_AUTHENTICODE_TS ((LPCSTR) 3)\0"
	.byte	0x1
	.uleb128 0x1042
	.ascii "CERT_CHAIN_POLICY_SSL ((LPCSTR) 4)\0"
	.byte	0x1
	.uleb128 0x1043
	.ascii "CERT_CHAIN_POLICY_BASIC_CONSTRAINTS ((LPCSTR) 5)\0"
	.byte	0x1
	.uleb128 0x1044
	.ascii "CERT_CHAIN_POLICY_NT_AUTH ((LPCSTR) 6)\0"
	.byte	0x1
	.uleb128 0x1045
	.ascii "CERT_CHAIN_POLICY_MICROSOFT_ROOT ((LPCSTR) 7)\0"
	.byte	0x1
	.uleb128 0x105b
	.ascii "AUTHTYPE_CLIENT 1\0"
	.byte	0x1
	.uleb128 0x105c
	.ascii "AUTHTYPE_SERVER 2\0"
	.byte	0x1
	.uleb128 0x1068
	.ascii "BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG 0x80000000\0"
	.byte	0x1
	.uleb128 0x1069
	.ascii "BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG 0x40000000\0"
	.byte	0x1
	.uleb128 0x106b
	.ascii "MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG 0x10000\0"
	.byte	0x1
	.uleb128 0x1072
	.ascii "CRYPT_STRING_BASE64HEADER 0x0\0"
	.byte	0x1
	.uleb128 0x1073
	.ascii "CRYPT_STRING_BASE64 0x1\0"
	.byte	0x1
	.uleb128 0x1074
	.ascii "CRYPT_STRING_BINARY 0x2\0"
	.byte	0x1
	.uleb128 0x1075
	.ascii "CRYPT_STRING_BASE64REQUESTHEADER 0x3\0"
	.byte	0x1
	.uleb128 0x1076
	.ascii "CRYPT_STRING_HEX 0x4\0"
	.byte	0x1
	.uleb128 0x1077
	.ascii "CRYPT_STRING_HEXASCII 0x5\0"
	.byte	0x1
	.uleb128 0x1078
	.ascii "CRYPT_STRING_BASE64_ANY 0x6\0"
	.byte	0x1
	.uleb128 0x1079
	.ascii "CRYPT_STRING_ANY 0x7\0"
	.byte	0x1
	.uleb128 0x107a
	.ascii "CRYPT_STRING_HEX_ANY 0x8\0"
	.byte	0x1
	.uleb128 0x107b
	.ascii "CRYPT_STRING_BASE64X509CRLHEADER 0x9\0"
	.byte	0x1
	.uleb128 0x107c
	.ascii "CRYPT_STRING_HEXADDR 0xa\0"
	.byte	0x1
	.uleb128 0x107d
	.ascii "CRYPT_STRING_HEXASCIIADDR 0xb\0"
	.byte	0x1
	.uleb128 0x107f
	.ascii "CRYPT_STRING_NOCR 0x80000000\0"
	.byte	0x1
	.uleb128 0x1083
	.ascii "CRYPT_USER_KEYSET 0x1000\0"
	.byte	0x1
	.uleb128 0x1084
	.ascii "PKCS12_IMPORT_RESERVED_MASK 0xffff0000\0"
	.byte	0x1
	.uleb128 0x108a
	.ascii "REPORT_NO_PRIVATE_KEY 0x1\0"
	.byte	0x1
	.uleb128 0x108b
	.ascii "REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY 0x2\0"
	.byte	0x1
	.uleb128 0x108c
	.ascii "EXPORT_PRIVATE_KEYS 0x4\0"
	.byte	0x1
	.uleb128 0x108d
	.ascii "PKCS12_EXPORT_RESERVED_MASK 0xffff0000\0"
	.byte	0x4
	.file 403 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winefs.h"
	.byte	0x3
	.uleb128 0x60
	.uleb128 0x193
	.byte	0x1
	.uleb128 0x7
	.ascii "__WINEFS_H__ \0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "MAX_SID_SIZE 256\0"
	.byte	0x4
	.file 404 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winscard.h"
	.byte	0x3
	.uleb128 0x61
	.uleb128 0x194
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINSCARD_H_ \0"
	.file 405 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/wtypes.h"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x195
	.byte	0x1
	.uleb128 0x4
	.ascii "__REQUIRED_RPCNDR_H_VERSION__ 475\0"
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.file 406 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/rpcndr.h"
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x1
	.uleb128 0x7
	.ascii "__RPCNDR_H_VERSION__ (475)\0"
	.byte	0x1
	.uleb128 0xb
	.ascii "__RPCNDR_H__ \0"
	.byte	0x3
	.uleb128 0x13
	.uleb128 0x145
	.byte	0x4
	.byte	0x3
	.uleb128 0x14
	.uleb128 0x140
	.byte	0x3
	.uleb128 0x5
	.uleb128 0x8
	.byte	0x4
	.byte	0x4
	.file 407 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/rpcnsip.h"
	.byte	0x3
	.uleb128 0x15
	.uleb128 0x197
	.byte	0x1
	.uleb128 0x7
	.ascii "__RPCNSIP_H__ \0"
	.byte	0x4
	.file 408 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/rpcsal.h"
	.byte	0x3
	.uleb128 0x16
	.uleb128 0x198
	.byte	0x1
	.uleb128 0x15
	.ascii "__RPCSAL_H_VERSION__ 100\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "__RPC__deref_in \0"
	.byte	0x1
	.uleb128 0x19
	.ascii "__RPC__deref_in_opt \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "__RPC__deref_in_string \0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "__RPC__deref_in_opt_string \0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "__RPC__deref_in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "__RPC__deref_in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "__RPC__deref_in_ecount_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "__RPC__deref_in_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x20
	.ascii "__RPC__deref_in_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x21
	.ascii "__RPC__deref_in_ecount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "__RPC__deref_in_ecount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x23
	.ascii "__RPC__deref_in_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x24
	.ascii "__RPC__deref_in_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x25
	.ascii "__RPC__deref_in_xcount(size) \0"
	.byte	0x1
	.uleb128 0x26
	.ascii "__RPC__deref_in_xcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x27
	.ascii "__RPC__deref_in_xcount_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x28
	.ascii "__RPC__deref_in_xcount_full(size) \0"
	.byte	0x1
	.uleb128 0x29
	.ascii "__RPC__deref_in_xcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "__RPC__deref_in_xcount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "__RPC__deref_in_xcount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "__RPC__deref_in_xcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "__RPC__deref_in_xcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "__RPC__deref_inout \0"
	.byte	0x1
	.uleb128 0x30
	.ascii "__RPC__deref_inout_opt \0"
	.byte	0x1
	.uleb128 0x31
	.ascii "__RPC__deref_inout_string \0"
	.byte	0x1
	.uleb128 0x32
	.ascii "__RPC__deref_inout_opt_string \0"
	.byte	0x1
	.uleb128 0x33
	.ascii "__RPC__deref_inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x34
	.ascii "__RPC__deref_inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x35
	.ascii "__RPC__deref_inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x36
	.ascii "__RPC__deref_inout_ecount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x37
	.ascii "__RPC__deref_inout_ecount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x38
	.ascii "__RPC__deref_inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x39
	.ascii "__RPC__deref_inout_xcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "__RPC__deref_inout_xcount_full(size) \0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "__RPC__deref_inout_xcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "__RPC__deref_inout_xcount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "__RPC__deref_inout_xcount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "__RPC__deref_inout_xcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x40
	.ascii "__RPC__deref_out \0"
	.byte	0x1
	.uleb128 0x41
	.ascii "__RPC__deref_out_opt \0"
	.byte	0x1
	.uleb128 0x42
	.ascii "__RPC__deref_out_string \0"
	.byte	0x1
	.uleb128 0x43
	.ascii "__RPC__deref_out_opt_string \0"
	.byte	0x1
	.uleb128 0x44
	.ascii "__RPC__deref_out_ecount(size) \0"
	.byte	0x1
	.uleb128 0x45
	.ascii "__RPC__deref_out_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x46
	.ascii "__RPC__deref_out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x47
	.ascii "__RPC__deref_out_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x48
	.ascii "__RPC__deref_out_ecount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x49
	.ascii "__RPC__deref_out_ecount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "__RPC__deref_out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "__RPC__deref_out_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "__RPC__deref_out_xcount(size) \0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "__RPC__deref_out_xcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "__RPC__deref_out_xcount_full(size) \0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "__RPC__deref_out_xcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x50
	.ascii "__RPC__deref_out_xcount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x51
	.ascii "__RPC__deref_out_xcount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x52
	.ascii "__RPC__deref_out_xcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x53
	.ascii "__RPC__deref_out_xcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x55
	.ascii "__RPC__deref_opt_in \0"
	.byte	0x1
	.uleb128 0x56
	.ascii "__RPC__deref_opt_in_opt \0"
	.byte	0x1
	.uleb128 0x57
	.ascii "__RPC__deref_opt_in_string \0"
	.byte	0x1
	.uleb128 0x58
	.ascii "__RPC__deref_opt_in_opt_string \0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "__RPC__deref_opt_inout \0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "__RPC__deref_opt_inout_opt \0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "__RPC__deref_opt_inout_string \0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "__RPC__deref_opt_inout_opt_string \0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "__RPC__deref_opt_inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "__RPC__deref_opt_inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x60
	.ascii "__RPC__deref_opt_inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x61
	.ascii "__RPC__deref_opt_inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x62
	.ascii "__RPC__deref_opt_inout_ecount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x63
	.ascii "__RPC__deref_opt_inout_ecount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x64
	.ascii "__RPC__deref_opt_inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x65
	.ascii "__RPC__deref_opt_inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x66
	.ascii "__RPC__deref_opt_inout_xcount(size) \0"
	.byte	0x1
	.uleb128 0x67
	.ascii "__RPC__deref_opt_inout_xcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x68
	.ascii "__RPC__deref_opt_inout_xcount_full(size) \0"
	.byte	0x1
	.uleb128 0x69
	.ascii "__RPC__deref_opt_inout_xcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "__RPC__deref_opt_inout_xcount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "__RPC__deref_opt_inout_xcount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "__RPC__deref_opt_inout_xcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "__RPC__deref_opt_inout_xcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "__RPC__in \0"
	.byte	0x1
	.uleb128 0x70
	.ascii "__RPC__in_opt \0"
	.byte	0x1
	.uleb128 0x71
	.ascii "__RPC__in_string \0"
	.byte	0x1
	.uleb128 0x72
	.ascii "__RPC__in_opt_string \0"
	.byte	0x1
	.uleb128 0x73
	.ascii "__RPC__in_ecount(size) \0"
	.byte	0x1
	.uleb128 0x74
	.ascii "__RPC__in_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x75
	.ascii "__RPC__in_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x76
	.ascii "__RPC__in_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x77
	.ascii "__RPC__in_ecount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x78
	.ascii "__RPC__in_ecount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x79
	.ascii "__RPC__in_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "__RPC__in_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "__RPC__in_xcount(size) \0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "__RPC__in_xcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "__RPC__in_xcount_full(size) \0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "__RPC__in_xcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "__RPC__in_xcount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x80
	.ascii "__RPC__in_xcount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x81
	.ascii "__RPC__in_xcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x82
	.ascii "__RPC__in_xcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x84
	.ascii "__RPC__inout \0"
	.byte	0x1
	.uleb128 0x85
	.ascii "__RPC__inout_opt \0"
	.byte	0x1
	.uleb128 0x86
	.ascii "__RPC__inout_string \0"
	.byte	0x1
	.uleb128 0x87
	.ascii "__RPC__inout_opt_string \0"
	.byte	0x1
	.uleb128 0x88
	.ascii "__RPC__opt_inout \0"
	.byte	0x1
	.uleb128 0x89
	.ascii "__RPC__inout_ecount(size) \0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "__RPC__inout_ecount_opt(size) \0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "__RPC__inout_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "__RPC__inout_ecount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "__RPC__inout_ecount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "__RPC__inout_ecount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "__RPC__inout_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x90
	.ascii "__RPC__inout_ecount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x91
	.ascii "__RPC__inout_xcount(size) \0"
	.byte	0x1
	.uleb128 0x92
	.ascii "__RPC__inout_xcount_opt(size) \0"
	.byte	0x1
	.uleb128 0x93
	.ascii "__RPC__inout_xcount_full(size) \0"
	.byte	0x1
	.uleb128 0x94
	.ascii "__RPC__inout_xcount_full_opt(size) \0"
	.byte	0x1
	.uleb128 0x95
	.ascii "__RPC__inout_xcount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x96
	.ascii "__RPC__inout_xcount_full_opt_string(size) \0"
	.byte	0x1
	.uleb128 0x97
	.ascii "__RPC__inout_xcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x98
	.ascii "__RPC__inout_xcount_part_opt(size,length) \0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "__RPC__out \0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "__RPC__out_ecount(size) \0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "__RPC__out_ecount_full(size) \0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "__RPC__out_ecount_full_string(size) \0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "__RPC__out_ecount_part(size,length) \0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "__RPC__out_xcount(size) \0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "__RPC__out_xcount_full(size) \0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "__RPC__out_xcount_full_string(size) \0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "__RPC__out_xcount_part(size,length) \0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "__RPC_full_pointer \0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "__RPC_ref_pointer \0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "__RPC_string \0"
	.byte	0x1
	.uleb128 0xa7
	.ascii "__RPC_unique_pointer \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x1c
	.ascii "NDR_CHAR_REP_MASK __MSABI_LONG(0X0000000FU)\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "NDR_INT_REP_MASK __MSABI_LONG(0X000000F0U)\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "NDR_FLOAT_REP_MASK __MSABI_LONG(0X0000FF00U)\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "NDR_LITTLE_ENDIAN __MSABI_LONG(0X00000010U)\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "NDR_BIG_ENDIAN __MSABI_LONG(0X00000000U)\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "NDR_IEEE_FLOAT __MSABI_LONG(0X00000000U)\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "NDR_VAX_FLOAT __MSABI_LONG(0X00000100U)\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "NDR_IBM_FLOAT __MSABI_LONG(0X00000300U)\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "NDR_ASCII_CHAR __MSABI_LONG(0X00000000U)\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "NDR_EBCDIC_CHAR __MSABI_LONG(0X00000001U)\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "NDR_LOCAL_DATA_REPRESENTATION __MSABI_LONG(0X00000010U)\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "NDR_LOCAL_ENDIAN NDR_LITTLE_ENDIAN\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "TARGET_IS_NT61_OR_LATER 0\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "TARGET_IS_NT60_OR_LATER 0\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "TARGET_IS_NT51_OR_LATER 1\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "TARGET_IS_NT50_OR_LATER 1\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "TARGET_IS_NT40_OR_LATER 1\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "TARGET_IS_NT351_OR_WIN95_OR_LATER 1\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "_HYPER_DEFINED \0"
	.byte	0x1
	.uleb128 0x45
	.ascii "hyper __int64\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "MIDL_uhyper unsigned __int64\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "__MIDL_user_allocate_free_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x72
	.ascii "RPC_VAR_ENTRY __cdecl\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "__MIDL_DECLSPEC_DLLIMPORT __declspec(dllimport)\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "__MIDL_DECLSPEC_DLLEXPORT __declspec(dllexport)\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "NDRSContextValue(hContext) (&(hContext)->userContext)\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "cbNDRContext 20\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "byte_from_ndr(source,target) { *(target) = *(*(char **)&(source)->Buffer)++; }\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "byte_array_from_ndr(Source,LowerIndex,UpperIndex,Target) { NDRcopy ((((char *)(Target))+(LowerIndex)),(Source)->Buffer,(unsigned int)((UpperIndex)-(LowerIndex))); *(unsigned __LONG32 *)&(Source)->Buffer += ((UpperIndex)-(LowerIndex)); }\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "boolean_from_ndr(source,target) { *(target) = *(*(char **)&(source)->Buffer)++; }\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "boolean_array_from_ndr(Source,LowerIndex,UpperIndex,Target) { NDRcopy ((((char *)(Target))+(LowerIndex)),(Source)->Buffer,(unsigned int)((UpperIndex)-(LowerIndex))); *(unsigned __LONG32 *)&(Source)->Buffer += ((UpperIndex)-(LowerIndex)); }\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "small_from_ndr(source,target) { *(target) = *(*(char **)&(source)->Buffer)++; }\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "small_from_ndr_temp(source,target,format) { *(target) = *(*(char **)(source))++; }\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "small_array_from_ndr(Source,LowerIndex,UpperIndex,Target) { NDRcopy ((((char *)(Target))+(LowerIndex)),(Source)->Buffer,(unsigned int)((UpperIndex)-(LowerIndex))); *(unsigned __LONG32 *)&(Source)->Buffer += ((UpperIndex)-(LowerIndex)); }\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "MIDL_ascii_strlen(string) strlen(string)\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "MIDL_ascii_strcpy(target,source) strcpy(target,source)\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "MIDL_memset(s,c,n) memset(s,c,n)\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "_ERROR_STATUS_T_DEFINED \0"
	.byte	0x1
	.uleb128 0xac
	.ascii "_midl_ma1(p,cast) *(*(cast **)&p)++\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "_midl_ma2(p,cast) *(*(cast **)&p)++\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "_midl_ma4(p,cast) *(*(cast **)&p)++\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "_midl_ma8(p,cast) *(*(cast **)&p)++\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "_midl_unma1(p,cast) *((cast *)p)++\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "_midl_unma2(p,cast) *((cast *)p)++\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "_midl_unma3(p,cast) *((cast *)p)++\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "_midl_unma4(p,cast) *((cast *)p)++\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "_midl_fa2(p) (p = (RPC_BUFPTR)((ULONG_PTR)(p+1) & ~0x1))\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "_midl_fa4(p) (p = (RPC_BUFPTR)((ULONG_PTR)(p+3) & ~0x3))\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "_midl_fa8(p) (p = (RPC_BUFPTR)((ULONG_PTR)(p+7) & ~0x7))\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "_midl_addp(p,n) (p += n)\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "_midl_marsh_lhs(p,cast) *(*(cast **)&p)++\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "_midl_marsh_up(mp,p) *(*(unsigned __LONG32 **)&mp)++ = (unsigned __LONG32)p\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "_midl_advmp(mp) *(*(unsigned __LONG32 **)&mp)++\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "_midl_unmarsh_up(p) (*(*(unsigned __LONG32 **)&p)++)\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "NdrMarshConfStringHdr(p,s,l) (_midl_ma4(p,unsigned __LONG32) = s,_midl_ma4(p,unsigned __LONG32) = 0,_midl_ma4(p,unsigned __LONG32) = l)\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "NdrUnMarshConfStringHdr(p,s,l) (s=_midl_unma4(p,unsigned __LONG32),(_midl_addp(p,4)),(l=_midl_unma4(p,unsigned __LONG32)))\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "NdrMarshCCtxtHdl(pc,p) (NDRCContextMarshall((NDR_CCONTEXT)pc,p),p+20)\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "NdrUnMarshCCtxtHdl(pc,p,h,drep) (NDRCContextUnmarshall((NDR_CCONTEXT)pc,h,p,drep),p+20)\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "NdrUnMarshSCtxtHdl(pc,p,drep) (pc = NdrSContextUnMarshall(p,drep))\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "NdrMarshSCtxtHdl(pc,p,rd) (NdrSContextMarshall((NDR_SCONTEXT)pc,p,(NDR_RUNDOWN)rd))\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "NdrFieldOffset(s,f) (LONG_PTR)(& (((s *)0)->f))\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "NdrFieldPad(s,f,p,t) ((unsigned __LONG32)(NdrFieldOffset(s,f) - NdrFieldOffset(s,p)) - sizeof(t))\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "NdrFcShort(s) (unsigned char)(s & 0xff),(unsigned char)(s >> 8)\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "NdrFcLong(s) (unsigned char)(s & 0xff),(unsigned char)((s & 0x0000ff00) >> 8),(unsigned char)((s & 0x00ff0000) >> 16),(unsigned char)(s >> 24)\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "RPC_BAD_STUB_DATA_EXCEPTION_FILTER ((RpcExceptionCode()==STATUS_ACCESS_VIOLATION) || (RpcExceptionCode()==STATUS_DATATYPE_MISALIGNMENT) || (RpcExceptionCode()==RPC_X_BAD_STUB_DATA) || (RpcExceptionCode()==RPC_S_INVALID_BOUND))\0"
	.byte	0x1
	.uleb128 0x14b
	.ascii "NDR_SHAREABLE __inline\0"
	.byte	0x1
	.uleb128 0x162
	.ascii "USER_MARSHAL_CB_SIGNATURE 'USRC'\0"
	.byte	0x1
	.uleb128 0x172
	.ascii "USER_CALL_CTXT_MASK(f) ((f) & 0x00ff)\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "USER_CALL_AUX_MASK(f) ((f) & 0xff00)\0"
	.byte	0x1
	.uleb128 0x174
	.ascii "GET_USER_DATA_REP(f) ((f) >> 16)\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "USER_CALL_IS_ASYNC 0x0100\0"
	.byte	0x1
	.uleb128 0x177
	.ascii "USER_CALL_NEW_CORRELATION_DESC 0x0200\0"
	.byte	0x2
	.uleb128 0x1cc
	.ascii "_MIDL_STUBLESS_PROXY_INFO\0"
	.byte	0x1
	.uleb128 0x279
	.ascii "USER_MARSHAL_FC_BYTE 1\0"
	.byte	0x1
	.uleb128 0x27a
	.ascii "USER_MARSHAL_FC_CHAR 2\0"
	.byte	0x1
	.uleb128 0x27b
	.ascii "USER_MARSHAL_FC_SMALL 3\0"
	.byte	0x1
	.uleb128 0x27c
	.ascii "USER_MARSHAL_FC_USMALL 4\0"
	.byte	0x1
	.uleb128 0x27d
	.ascii "USER_MARSHAL_FC_WCHAR 5\0"
	.byte	0x1
	.uleb128 0x27e
	.ascii "USER_MARSHAL_FC_SHORT 6\0"
	.byte	0x1
	.uleb128 0x27f
	.ascii "USER_MARSHAL_FC_USHORT 7\0"
	.byte	0x1
	.uleb128 0x280
	.ascii "USER_MARSHAL_FC_LONG 8\0"
	.byte	0x1
	.uleb128 0x281
	.ascii "USER_MARSHAL_FC_ULONG 9\0"
	.byte	0x1
	.uleb128 0x282
	.ascii "USER_MARSHAL_FC_FLOAT 10\0"
	.byte	0x1
	.uleb128 0x283
	.ascii "USER_MARSHAL_FC_HYPER 11\0"
	.byte	0x1
	.uleb128 0x284
	.ascii "USER_MARSHAL_FC_DOUBLE 12\0"
	.byte	0x1
	.uleb128 0x2e9
	.ascii "CONST_VTBL \0"
	.byte	0x1
	.uleb128 0x2f0
	.ascii "MIDL_INTERFACE(x) struct\0"
	.byte	0x1
	.uleb128 0x2f2
	.ascii "EXTERN_GUID(itf,l1,s1,s2,c1,c2,c3,c4,c5,c6,c7,c8) EXTERN_C const IID DECLSPEC_SELECTANY itf = {l1,s1,s2,{c1,c2,c3,c4,c5,c6,c7,c8}}\0"
	.byte	0x3
	.uleb128 0x322
	.uleb128 0x143
	.byte	0x4
	.byte	0x4
	.file 409 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/ole2.h"
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x1
	.uleb128 0x8
	.ascii "_OLE2_H_ \0"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x145
	.byte	0x4
	.file 410 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/objbase.h"
	.byte	0x3
	.uleb128 0x11
	.uleb128 0x19a
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x1
	.uleb128 0xb
	.ascii "_OBJBASE_H_ \0"
	.byte	0x3
	.uleb128 0xd
	.uleb128 0x145
	.byte	0x4
	.file 411 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/combaseapi.h"
	.byte	0x3
	.uleb128 0xe
	.uleb128 0x19b
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x196
	.byte	0x4
	.byte	0x1
	.uleb128 0x1d
	.ascii "_COMBASEAPI_H_ \0"
	.byte	0x3
	.uleb128 0x1f
	.uleb128 0x145
	.byte	0x4
	.byte	0x1
	.uleb128 0x25
	.ascii "WINOLEAPI EXTERN_C DECLSPEC_IMPORT HRESULT STDAPICALLTYPE\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "WINOLEAPI_(type) EXTERN_C DECLSPEC_IMPORT type STDAPICALLTYPE\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "COM_DECLSPEC_NOTHROW DECLSPEC_NOTHROW\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "__STRUCT__ struct\0"
	.byte	0x2
	.uleb128 0x33
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "interface __STRUCT__\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "STDMETHOD(method) virtual COM_DECLSPEC_NOTHROW HRESULT STDMETHODCALLTYPE method\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "STDMETHOD_(type,method) virtual COM_DECLSPEC_NOTHROW type STDMETHODCALLTYPE method\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "STDMETHODV(method) virtual COM_DECLSPEC_NOTHROW HRESULT STDMETHODVCALLTYPE method\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "STDMETHODV_(type,method) virtual COM_DECLSPEC_NOTHROW type STDMETHODVCALLTYPE method\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "PURE = 0\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "THIS_ \0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "THIS void\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "DECLARE_INTERFACE(iface) interface DECLSPEC_NOVTABLE iface\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "DECLARE_INTERFACE_(iface,baseiface) interface DECLSPEC_NOVTABLE iface : public baseiface\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "DECLARE_INTERFACE_IID(iface,iid) interface DECLSPEC_UUID (iid) DECLSPEC_NOVTABLE iface\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "DECLARE_INTERFACE_IID_(iface,baseiface,iid) interface DECLSPEC_UUID (iid) DECLSPEC_NOVTABLE iface : public baseiface\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "IFACEMETHOD(method) STDMETHOD (method)\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "IFACEMETHOD_(type,method) STDMETHOD_(type, method)\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "IFACEMETHODV(method) STDMETHODV (method)\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "IFACEMETHODV_(type,method) STDMETHODV_(type, method)\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "BEGIN_INTERFACE \0"
	.byte	0x1
	.uleb128 0x48
	.ascii "END_INTERFACE \0"
	.byte	0x1
	.uleb128 0x54
	.ascii "IID_PPV_ARGS(ppType) __uuidof (**(ppType)), IID_PPV_ARGS_Helper (ppType)\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "FARSTRUCT \0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "HUGEP \0"
	.byte	0x1
	.uleb128 0x83
	.ascii "LISet32(li,v) ((li).HighPart = ((LONG) (v)) < 0 ? -1 : 0,(li).LowPart = (v))\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "ULISet32(li,v) ((li).HighPart = 0,(li).LowPart = (v))\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "CLSCTX_INPROC (CLSCTX_INPROC_SERVER | CLSCTX_INPROC_HANDLER)\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "CLSCTX_ALL (CLSCTX_INPROC_SERVER | CLSCTX_INPROC_HANDLER | CLSCTX_LOCAL_SERVER | CLSCTX_REMOTE_SERVER)\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "CLSCTX_SERVER (CLSCTX_INPROC_SERVER | CLSCTX_LOCAL_SERVER | CLSCTX_REMOTE_SERVER)\0"
	.file 412 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/wtypesbase.h"
	.byte	0x3
	.uleb128 0x99
	.uleb128 0x19c
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__wtypesbase_h__ \0"
	.byte	0x3
	.uleb128 0x16
	.uleb128 0x140
	.byte	0x3
	.uleb128 0x5
	.uleb128 0x8
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x17
	.uleb128 0x141
	.byte	0x2
	.uleb128 0x33
	.ascii "DEFINE_GUID\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) EXTERN_C const GUID name\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "DEFINE_OLEGUID(name,l,w1,w2) DEFINE_GUID (name, l, w1, w2, 0xc0, 0, 0, 0, 0, 0, 0, 0x46)\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x27
	.ascii "__IWinTypesBase_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x48
	.ascii "OLESTR(str) L ##str\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "_ROTREGFLAGS_DEFINED \0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "ROTREGFLAGS_ALLOWANYCLIENT 0x1\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "_APPIDREGFLAGS_DEFINED \0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "APPIDREGFLAGS_ACTIVATE_IUSERVER_INDESKTOP 0x1\0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "APPIDREGFLAGS_SECURE_SERVER_PROCESS_SD_AND_BIND 0x2\0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "APPIDREGFLAGS_ISSUE_ACTIVATION_RPC_AT_IDENTIFY 0x4\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "APPIDREGFLAGS_IUSERVER_UNMODIFIED_LOGON_TOKEN 0x8\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "APPIDREGFLAGS_IUSERVER_SELF_SID_IN_LAUNCH_PERMISSION 0x10\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "APPIDREGFLAGS_IUSERVER_ACTIVATE_IN_CLIENT_SESSION_ONLY 0x20\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "APPIDREGFLAGS_RESERVED1 0x40\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "_DCOMSCM_REMOTECALL_FLAGS_DEFINED \0"
	.byte	0x1
	.uleb128 0x104
	.ascii "DCOMSCM_ACTIVATION_USE_ALL_AUTHNSERVICES 0x1\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "DCOMSCM_ACTIVATION_DISALLOW_UNSECURE_CALL 0x2\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "DCOMSCM_RESOLVE_USE_ALL_AUTHNSERVICES 0x4\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "DCOMSCM_RESOLVE_DISALLOW_UNSECURE_CALL 0x8\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "DCOMSCM_PING_USE_MID_AUTHNSERVICE 0x10\0"
	.byte	0x1
	.uleb128 0x109
	.ascii "DCOMSCM_PING_DISALLOW_UNSECURE_CALL 0x20\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "CLSCTX_VALID_MASK (CLSCTX_INPROC_SERVER | CLSCTX_INPROC_HANDLER | CLSCTX_LOCAL_SERVER | CLSCTX_INPROC_SERVER16 | CLSCTX_REMOTE_SERVER | CLSCTX_NO_CODE_DOWNLOAD | CLSCTX_NO_CUSTOM_MARSHAL | CLSCTX_ENABLE_CODE_DOWNLOAD | CLSCTX_NO_FAILURE_LOG | CLSCTX_DISABLE_AAA | CLSCTX_ENABLE_AAA | CLSCTX_FROM_DEFAULT_CONTEXT | CLSCTX_ACTIVATE_32_BIT_SERVER | CLSCTX_ACTIVATE_64_BIT_SERVER | CLSCTX_ENABLE_CLOAKING | CLSCTX_APPCONTAINER | CLSCTX_ACTIVATE_AAA_AS_IU | CLSCTX_PS_DLL)\0"
	.byte	0x1
	.uleb128 0x17a
	.ascii "_tagBLOB_DEFINED \0"
	.byte	0x1
	.uleb128 0x17b
	.ascii "_BLOB_DEFINED \0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "_LPBLOB_DEFINED \0"
	.byte	0x4
	.file 413 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/unknwnbase.h"
	.byte	0x3
	.uleb128 0x9a
	.uleb128 0x19d
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__unknwnbase_h__ \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "__IUnknown_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "__AsyncIUnknown_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "__IClassFactory_FWD_DEFINED__ \0"
	.byte	0x3
	.uleb128 0x25
	.uleb128 0x19c
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x38
	.ascii "__IUnknown_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "__AsyncIUnknown_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x169
	.ascii "__IClassFactory_INTERFACE_DEFINED__ \0"
	.byte	0x4
	.file 414 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/objidlbase.h"
	.byte	0x3
	.uleb128 0x9b
	.uleb128 0x19e
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__objidlbase_h__ \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "__IMarshal_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "__INoMarshal_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "__IAgileObject_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x24
	.ascii "__IMarshal2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x29
	.ascii "__IMalloc_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "__IStdMarshalInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x33
	.ascii "__IExternalConnection_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x38
	.ascii "__IMultiQI_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "__AsyncIMultiQI_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x42
	.ascii "__IInternalUnknown_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x47
	.ascii "__IEnumUnknown_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "__IEnumString_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x51
	.ascii "__ISequentialStream_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x56
	.ascii "__IStream_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "__IRpcChannelBuffer_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x60
	.ascii "__IRpcChannelBuffer2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x65
	.ascii "__IAsyncRpcChannelBuffer_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "__IRpcChannelBuffer3_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "__IRpcSyntaxNegotiate_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x74
	.ascii "__IRpcProxyBuffer_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x79
	.ascii "__IRpcStubBuffer_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "__IPSFactoryBuffer_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x83
	.ascii "__IChannelHook_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x88
	.ascii "__IClientSecurity_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "__IServerSecurity_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x92
	.ascii "__IRpcOptions_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x97
	.ascii "__IGlobalOptions_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "__ISurrogate_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "__IGlobalInterfaceTable_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "__ISynchronize_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xab
	.ascii "__ISynchronizeHandle_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "__ISynchronizeEvent_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "__ISynchronizeContainer_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xba
	.ascii "__ISynchronizeMutex_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "__ICancelMethodCalls_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "__IAsyncManager_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "__ICallFactory_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xce
	.ascii "__IRpcHelper_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "__IReleaseMarshalBuffers_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "__IWaitMultiple_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "__IAddrTrackingControl_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "__IAddrExclusionControl_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "__IPipeByte_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xec
	.ascii "__IPipeLong_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "__IPipeDouble_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "__IEnumContextProps_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "__IContext_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x100
	.ascii "__IComThreadingInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x105
	.ascii "__IProcessInitControl_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "__IFastRundown_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "__IMarshalingStream_FWD_DEFINED__ \0"
	.byte	0x3
	.uleb128 0x115
	.uleb128 0x19d
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x116
	.uleb128 0x19c
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x166
	.ascii "__IMarshal_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x24e
	.ascii "__INoMarshal_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x28d
	.ascii "__IAgileObject_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2ce
	.ascii "__IMarshal2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x352
	.ascii "__IMalloc_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x409
	.ascii "__IStdMarshalInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x466
	.ascii "__IExternalConnection_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x4e9
	.ascii "__IMultiQI_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x540
	.ascii "__AsyncIMultiQI_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x5ae
	.ascii "__IInternalUnknown_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x608
	.ascii "__IEnumUnknown_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x6a6
	.ascii "__IEnumString_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x744
	.ascii "__ISequentialStream_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x7cc
	.ascii "__IStream_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x925
	.ascii "__IRpcChannelBuffer_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x9dd
	.ascii "__IRpcChannelBuffer2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xa5f
	.ascii "__IAsyncRpcChannelBuffer_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xb21
	.ascii "__IRpcChannelBuffer3_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xc3b
	.ascii "__IRpcSyntaxNegotiate_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xc90
	.ascii "__IRpcProxyBuffer_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xcf8
	.ascii "__IRpcStubBuffer_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xdbe
	.ascii "__IPSFactoryBuffer_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xe41
	.ascii "__IChannelHook_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xf38
	.ascii "__IClientSecurity_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xf55
	.ascii "COLE_DEFAULT_PRINCIPAL ((OLECHAR *)(INT_PTR)-1)\0"
	.byte	0x1
	.uleb128 0xf57
	.ascii "COLE_DEFAULT_AUTHINFO ((void *)(INT_PTR)-1)\0"
	.byte	0x1
	.uleb128 0x100f
	.ascii "__IServerSecurity_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x10b5
	.ascii "__IRpcOptions_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1150
	.ascii "__IGlobalOptions_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x11c1
	.ascii "__ISurrogate_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1229
	.ascii "__IGlobalInterfaceTable_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x12b4
	.ascii "__ISynchronize_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x132e
	.ascii "__ISynchronizeHandle_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1383
	.ascii "__ISynchronizeEvent_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x13e3
	.ascii "__ISynchronizeContainer_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1451
	.ascii "__ISynchronizeMutex_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x14be
	.ascii "__ICancelMethodCalls_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1526
	.ascii "__IAsyncManager_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x15aa
	.ascii "__ICallFactory_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1608
	.ascii "__IRpcHelper_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1673
	.ascii "__IReleaseMarshalBuffers_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x16ce
	.ascii "__IWaitMultiple_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1739
	.ascii "__IAddrTrackingControl_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x179e
	.ascii "__IAddrExclusionControl_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x180a
	.ascii "__IPipeByte_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x187b
	.ascii "__IPipeLong_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x18ec
	.ascii "__IPipeDouble_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1ac6
	.ascii "__IComThreadingInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1b54
	.ascii "__IProcessInitControl_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1ba9
	.ascii "__IFastRundown_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1bec
	.ascii "__IMarshalingStream_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1caf
	.ascii "_OBJIDLBASE_ \0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x9c
	.uleb128 0x141
	.byte	0x2
	.uleb128 0x33
	.ascii "DEFINE_GUID\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) EXTERN_C const GUID name\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "DEFINE_OLEGUID(name,l,w1,w2) DEFINE_GUID (name, l, w1, w2, 0xc0, 0, 0, 0, 0, 0, 0, 0x46)\0"
	.byte	0x4
	.file 415 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/cguid.h"
	.byte	0x3
	.uleb128 0x9f
	.uleb128 0x19f
	.byte	0x1
	.uleb128 0x7
	.ascii "__CGUID_H__ \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0xe9
	.ascii "COM_RIGHTS_EXECUTE 1\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "COM_RIGHTS_EXECUTE_LOCAL 2\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "COM_RIGHTS_EXECUTE_REMOTE 4\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "COM_RIGHTS_ACTIVATE_LOCAL 8\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "COM_RIGHTS_ACTIVATE_REMOTE 16\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "CWMO_MAX_HANDLES 56\0"
	.byte	0x3
	.uleb128 0x16e
	.uleb128 0x143
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x17
	.ascii "MARSHALINTERFACE_MIN 500\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "CWCSTORAGENAME 32\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "STGM_DIRECT __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "STGM_TRANSACTED __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "STGM_SIMPLE __MSABI_LONG(0x08000000)\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "STGM_READ __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "STGM_WRITE __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "STGM_READWRITE __MSABI_LONG(0x00000002)\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "STGM_SHARE_DENY_NONE __MSABI_LONG(0x00000040)\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "STGM_SHARE_DENY_READ __MSABI_LONG(0x00000030)\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "STGM_SHARE_DENY_WRITE __MSABI_LONG(0x00000020)\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "STGM_SHARE_EXCLUSIVE __MSABI_LONG(0x00000010)\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "STGM_PRIORITY __MSABI_LONG(0x00040000)\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "STGM_DELETEONRELEASE __MSABI_LONG(0x04000000)\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "STGM_NOSCRATCH __MSABI_LONG(0x00100000)\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "STGM_CREATE __MSABI_LONG(0x00001000)\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "STGM_CONVERT __MSABI_LONG(0x00020000)\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "STGM_FAILIFTHERE __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "STGM_NOSNAPSHOT __MSABI_LONG(0x00200000)\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "STGM_DIRECT_SWMR __MSABI_LONG(0x00400000)\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "ASYNC_MODE_COMPATIBILITY __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "ASYNC_MODE_DEFAULT __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "STGTY_REPEAT __MSABI_LONG(0x00000100)\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "STG_TOEND __MSABI_LONG(0xffffffff)\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "STG_LAYOUT_SEQUENTIAL __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "STG_LAYOUT_INTERLEAVED __MSABI_LONG(0x00000001)\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "STGFMT_STORAGE 0\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "STGFMT_NATIVE 1\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "STGFMT_FILE 3\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "STGFMT_ANY 4\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "STGFMT_DOCFILE 5\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "STGFMT_DOCUMENT 0\0"
	.file 416 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/objidl.h"
	.byte	0x3
	.uleb128 0x42
	.uleb128 0x1a0
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__objidl_h__ \0"
	.byte	0x1
	.uleb128 0x114
	.ascii "__IMallocSpy_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x119
	.ascii "__IBindCtx_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "__IEnumMoniker_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x123
	.ascii "__IRunnableObject_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x128
	.ascii "__IRunningObjectTable_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "__IPersist_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x132
	.ascii "__IPersistStream_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x137
	.ascii "__IMoniker_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "__IROTData_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x141
	.ascii "__IEnumSTATSTG_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x146
	.ascii "__IStorage_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x14b
	.ascii "__IPersistFile_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x150
	.ascii "__IPersistStorage_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x155
	.ascii "__ILockBytes_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "__IEnumFORMATETC_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "__IEnumSTATDATA_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x164
	.ascii "__IRootStorage_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x169
	.ascii "__IAdviseSink_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AsyncIAdviseSink_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x173
	.ascii "__IAdviseSink2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x178
	.ascii "__AsyncIAdviseSink2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "__IDataObject_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x182
	.ascii "__IDataAdviseHolder_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x187
	.ascii "__IMessageFilter_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "__IClassActivator_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x191
	.ascii "__IFillLockBytes_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x196
	.ascii "__IProgressNotify_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "__ILayoutStorage_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "__IBlockingLock_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1a5
	.ascii "__ITimeAndNoticeControl_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "__IOplockStorage_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1af
	.ascii "__IDirectWriterLock_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "__IUrlMon_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "__IForegroundTransfer_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "__IThumbnailExtractor_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "__IDummyHICONIncluder_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "__IProcessLock_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1cd
	.ascii "__ISurrogateService_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "__IInitializeSpy_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1d7
	.ascii "__IApartmentShutdown_FWD_DEFINED__ \0"
	.file 417 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/unknwn.h"
	.byte	0x3
	.uleb128 0x1dd
	.uleb128 0x1a1
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__unknwn_h__ \0"
	.byte	0x3
	.uleb128 0x25
	.uleb128 0x195
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__wtypes_h__ \0"
	.byte	0x3
	.uleb128 0x16
	.uleb128 0x19c
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x26
	.ascii "__IWinTypes_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xab
	.ascii "_ROTFLAGS_DEFINED \0"
	.byte	0x1
	.uleb128 0xac
	.ascii "ROTFLAGS_REGISTRATIONKEEPSALIVE 0x1\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "ROTFLAGS_ALLOWANYCLIENT 0x2\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "_ROT_COMPARE_MAX_DEFINED \0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "ROT_COMPARE_MAX 2048\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "WDT_INPROC_CALL (0x48746457)\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "WDT_REMOTE_CALL (0x52746457)\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "WDT_INPROC64_CALL (0x50746457)\0"
	.byte	0x1
	.uleb128 0x1a7
	.ascii "_tagCY_DEFINED \0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "_CY_DEFINED \0"
	.byte	0x1
	.uleb128 0x1d7
	.ascii "DECIMAL_NEG ((BYTE)0x80)\0"
	.byte	0x1
	.uleb128 0x1d8
	.ascii "DECIMAL_SETZERO(dec) { (dec).Lo64 = 0; (dec).Hi32 = 0; (dec).signscale = 0; }\0"
	.byte	0x1
	.uleb128 0x1e6
	.ascii "_VARIANT_BOOL / ##/\0"
	.byte	0x1
	.uleb128 0x1ea
	.ascii "_tagBSTRBLOB_DEFINED \0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "VARIANT_TRUE ((VARIANT_BOOL)-1)\0"
	.byte	0x1
	.uleb128 0x1f4
	.ascii "VARIANT_FALSE ((VARIANT_BOOL)0)\0"
	.byte	0x1
	.uleb128 0x1fc
	.ascii "CBPCLIPDATA(clipdata) ((clipdata).cbSize - sizeof((clipdata).ulClipFmt))\0"
	.byte	0x1
	.uleb128 0x23b
	.ascii "PROPERTYKEY_DEFINED \0"
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x1de
	.uleb128 0x195
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x1dba
	.ascii "__IMallocSpy_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1efc
	.ascii "__IBindCtx_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2047
	.ascii "__IEnumMoniker_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x20e5
	.ascii "__IRunnableObject_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x218b
	.ascii "__IRunningObjectTable_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2266
	.ascii "__IPersist_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x22bb
	.ascii "__IPersistStream_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2355
	.ascii "__IMoniker_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2556
	.ascii "__IROTData_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x25b2
	.ascii "__IEnumSTATSTG_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x264e
	.ascii "__IStorage_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x283e
	.ascii "__IPersistFile_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x28ee
	.ascii "__IPersistStorage_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x29ae
	.ascii "__ILockBytes_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2aac
	.ascii "__IEnumFORMATETC_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2b59
	.ascii "__IEnumSTATDATA_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2c05
	.ascii "__IRootStorage_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2c5a
	.ascii "__IAdviseSink_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2d71
	.ascii "__AsyncIAdviseSink_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2ea6
	.ascii "__IAdviseSink2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2f2c
	.ascii "__AsyncIAdviseSink2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2fed
	.ascii "__IDataObject_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3115
	.ascii "__IDataAdviseHolder_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x31b5
	.ascii "__IMessageFilter_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3271
	.ascii "__IClassActivator_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x32d3
	.ascii "__IFillLockBytes_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3387
	.ascii "__IProgressNotify_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x33e6
	.ascii "__ILayoutStorage_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3490
	.ascii "__IBlockingLock_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x34f5
	.ascii "__ITimeAndNoticeControl_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x354c
	.ascii "__IOplockStorage_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x35d3
	.ascii "__IDirectWriterLock_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x364b
	.ascii "__IUrlMon_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x36ba
	.ascii "__IForegroundTransfer_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x370e
	.ascii "__IThumbnailExtractor_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3784
	.ascii "__IDummyHICONIncluder_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x37e3
	.ascii "__IProcessLock_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3846
	.ascii "__ISurrogateService_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x38ef
	.ascii "__IInitializeSpy_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3988
	.ascii "__IApartmentShutdown_INTERFACE_DEFINED__ \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x80
	.ascii "STGOPTIONS_VERSION 2\0"
	.file 418 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/urlmon.h"
	.byte	0x3
	.uleb128 0xa3
	.uleb128 0x1a2
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__urlmon_h__ \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "__IPersistMoniker_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "__IMonikerProp_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "__IBindProtocol_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x24
	.ascii "__IBinding_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x29
	.ascii "__IBindStatusCallback_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "__IBindStatusCallbackEx_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x33
	.ascii "__IAuthenticate_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x38
	.ascii "__IAuthenticateEx_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "__IHttpNegotiate_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x42
	.ascii "__IHttpNegotiate2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x47
	.ascii "__IHttpNegotiate3_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "__IWinInetFileStream_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x51
	.ascii "__IWindowForBindingUI_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x56
	.ascii "__ICodeInstall_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "__IUri_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x60
	.ascii "__IUriContainer_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x65
	.ascii "__IUriBuilder_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "__IUriBuilderFactory_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "__IWinInetInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x74
	.ascii "__IHttpSecurity_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x79
	.ascii "__IWinInetHttpInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "__IWinInetHttpTimeouts_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x83
	.ascii "__IWinInetCacheHints_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x88
	.ascii "__IWinInetCacheHints2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "__IBindHost_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x92
	.ascii "__IInternet_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x97
	.ascii "__IInternetBindInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "__IInternetBindInfoEx_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "__IInternetProtocolRoot_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "__IInternetProtocol_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xab
	.ascii "__IInternetProtocolEx_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "__IInternetProtocolSink_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "__IInternetProtocolSinkStackable_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xba
	.ascii "__IInternetSession_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "__IInternetThreadSwitch_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "__IInternetPriority_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "__IInternetProtocolInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xce
	.ascii "__IInternetSecurityMgrSite_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "__IInternetSecurityManager_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "__IInternetSecurityManagerEx_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "__IInternetSecurityManagerEx2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "__IZoneIdentifier_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "__IInternetHostSecurityManager_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xec
	.ascii "__IInternetZoneManager_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "__IInternetZoneManagerEx_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "__IInternetZoneManagerEx2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "__ISoftDistExt_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x100
	.ascii "__ICatalogFileInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x105
	.ascii "__IDataFilter_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "__IEncodingFilterFactory_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "__IWrappedProtocol_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x114
	.ascii "__IGetBindHandle_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x119
	.ascii "__IBindCallbackRedirect_FWD_DEFINED__ \0"
	.byte	0x3
	.uleb128 0x11f
	.uleb128 0x1a0
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.file 419 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/oleidl.h"
	.byte	0x3
	.uleb128 0x120
	.uleb128 0x1a3
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__oleidl_h__ \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "__IOleAdviseHolder_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "__IOleCache_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "__IOleCache2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x24
	.ascii "__IOleCacheControl_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x29
	.ascii "__IParseDisplayName_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "__IOleContainer_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x33
	.ascii "__IOleClientSite_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x38
	.ascii "__IOleObject_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "__IOleWindow_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x42
	.ascii "__IOleLink_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x47
	.ascii "__IOleItemContainer_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "__IOleInPlaceUIWindow_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x51
	.ascii "__IOleInPlaceActiveObject_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x56
	.ascii "__IOleInPlaceFrame_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "__IOleInPlaceObject_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x60
	.ascii "__IOleInPlaceSite_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x65
	.ascii "__IContinue_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "__IViewObject_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "__IViewObject2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x74
	.ascii "__IDropSource_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x79
	.ascii "__IDropTarget_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "__IDropSourceNotify_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x83
	.ascii "__IEnumOLEVERB_FWD_DEFINED__ \0"
	.byte	0x3
	.uleb128 0x89
	.uleb128 0x1a0
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0xa7
	.ascii "__IOleAdviseHolder_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "__IOleCache_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x20d
	.ascii "__IOleCache2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x211
	.ascii "UPDFCACHE_NODATACACHE (0x1)\0"
	.byte	0x1
	.uleb128 0x213
	.ascii "UPDFCACHE_ONSAVECACHE (0x2)\0"
	.byte	0x1
	.uleb128 0x215
	.ascii "UPDFCACHE_ONSTOPCACHE (0x4)\0"
	.byte	0x1
	.uleb128 0x217
	.ascii "UPDFCACHE_NORMALCACHE (0x8)\0"
	.byte	0x1
	.uleb128 0x219
	.ascii "UPDFCACHE_IFBLANK (0x10)\0"
	.byte	0x1
	.uleb128 0x21b
	.ascii "UPDFCACHE_ONLYIFBLANK (0x80000000)\0"
	.byte	0x1
	.uleb128 0x21d
	.ascii "UPDFCACHE_IFBLANKORONSAVECACHE (UPDFCACHE_IFBLANK | UPDFCACHE_ONSAVECACHE)\0"
	.byte	0x1
	.uleb128 0x21f
	.ascii "UPDFCACHE_ALL ((DWORD)~UPDFCACHE_ONLYIFBLANK)\0"
	.byte	0x1
	.uleb128 0x221
	.ascii "UPDFCACHE_ALLBUTNODATACACHE (UPDFCACHE_ALL & (DWORD)~UPDFCACHE_NODATACACHE)\0"
	.byte	0x1
	.uleb128 0x2d0
	.ascii "__IOleCacheControl_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x338
	.ascii "__IParseDisplayName_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x398
	.ascii "__IOleContainer_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x413
	.ascii "__IOleClientSite_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x4c9
	.ascii "__IOleObject_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x6fc
	.ascii "__IOLETypes_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x720
	.ascii "__IOleWindow_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x78a
	.ascii "__IOleLink_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x8ad
	.ascii "__IOleItemContainer_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x96f
	.ascii "__IOleInPlaceUIWindow_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xa18
	.ascii "__IOleInPlaceActiveObject_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xae4
	.ascii "__IOleInPlaceFrame_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xbed
	.ascii "__IOleInPlaceObject_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xc8d
	.ascii "__IOleInPlaceSite_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xda2
	.ascii "__IContinue_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xdf5
	.ascii "__IViewObject_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xf26
	.ascii "__IViewObject2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xfce
	.ascii "__IDropSource_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x103b
	.ascii "__IDropTarget_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x103f
	.ascii "MK_ALT (0x20)\0"
	.byte	0x1
	.uleb128 0x1041
	.ascii "DROPEFFECT_NONE (0)\0"
	.byte	0x1
	.uleb128 0x1043
	.ascii "DROPEFFECT_COPY (1)\0"
	.byte	0x1
	.uleb128 0x1045
	.ascii "DROPEFFECT_MOVE (2)\0"
	.byte	0x1
	.uleb128 0x1047
	.ascii "DROPEFFECT_LINK (4)\0"
	.byte	0x1
	.uleb128 0x1049
	.ascii "DROPEFFECT_SCROLL (0x80000000)\0"
	.byte	0x1
	.uleb128 0x104c
	.ascii "DD_DEFSCROLLINSET (11)\0"
	.byte	0x1
	.uleb128 0x104f
	.ascii "DD_DEFSCROLLDELAY (50)\0"
	.byte	0x1
	.uleb128 0x1052
	.ascii "DD_DEFSCROLLINTERVAL (50)\0"
	.byte	0x1
	.uleb128 0x1055
	.ascii "DD_DEFDRAGDELAY (200)\0"
	.byte	0x1
	.uleb128 0x1058
	.ascii "DD_DEFDRAGMINDIST (2)\0"
	.byte	0x1
	.uleb128 0x10fd
	.ascii "__IDropSourceNotify_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1165
	.ascii "__IEnumOLEVERB_INTERFACE_DEFINED__ \0"
	.byte	0x4
	.file 420 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/servprov.h"
	.byte	0x3
	.uleb128 0x121
	.uleb128 0x1a4
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__servprov_h__ \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "__IServiceProvider_FWD_DEFINED__ \0"
	.byte	0x3
	.uleb128 0x1b
	.uleb128 0x1a0
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x35
	.ascii "__IServiceProvider_INTERFACE_DEFINED__ \0"
	.byte	0x4
	.file 421 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/msxml.h"
	.byte	0x3
	.uleb128 0x122
	.uleb128 0x1a5
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__msxml_h__ \0"
	.byte	0x3
	.uleb128 0x16
	.uleb128 0x1a1
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x17
	.uleb128 0x1a0
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.file 422 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/oaidl.h"
	.byte	0x3
	.uleb128 0x18
	.uleb128 0x1a6
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__oaidl_h__ \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "__ICreateTypeInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "__ICreateTypeInfo2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "__ICreateTypeLib_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x24
	.ascii "__ICreateTypeLib2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x29
	.ascii "__IDispatch_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "__IEnumVARIANT_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x33
	.ascii "__ITypeComp_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x38
	.ascii "__ITypeInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "__ITypeInfo2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x42
	.ascii "__ITypeLib_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x47
	.ascii "__ITypeLib2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "__ITypeChangeEvents_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x51
	.ascii "__IErrorInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x56
	.ascii "__ICreateErrorInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "__ISupportErrorInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x60
	.ascii "__ITypeFactory_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x65
	.ascii "__ITypeMarshal_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "__IRecordInfo_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "__IErrorLog_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x74
	.ascii "__IPropertyBag_FWD_DEFINED__ \0"
	.byte	0x3
	.uleb128 0x7a
	.uleb128 0x1a0
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0xef
	.ascii "__IOleAutomationTypes_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x14e
	.ascii "FADF_AUTO (0x1)\0"
	.byte	0x1
	.uleb128 0x150
	.ascii "FADF_STATIC (0x2)\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "FADF_EMBEDDED (0x4)\0"
	.byte	0x1
	.uleb128 0x154
	.ascii "FADF_FIXEDSIZE (0x10)\0"
	.byte	0x1
	.uleb128 0x156
	.ascii "FADF_RECORD (0x20)\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "FADF_HAVEIID (0x40)\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "FADF_HAVEVARTYPE (0x80)\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "FADF_BSTR (0x100)\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "FADF_UNKNOWN (0x200)\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "FADF_DISPATCH (0x400)\0"
	.byte	0x1
	.uleb128 0x162
	.ascii "FADF_VARIANT (0x800)\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "FADF_RESERVED (0xf008)\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "_FORCENAMELESSUNION 1\0"
	.byte	0x1
	.uleb128 0x174
	.ascii "__tagVARIANT \0"
	.byte	0x1
	.uleb128 0x175
	.ascii "__VARIANT_NAME_1 \0"
	.byte	0x1
	.uleb128 0x176
	.ascii "__VARIANT_NAME_2 \0"
	.byte	0x1
	.uleb128 0x177
	.ascii "__VARIANT_NAME_3 \0"
	.byte	0x1
	.uleb128 0x178
	.ascii "__tagBRECORD \0"
	.byte	0x1
	.uleb128 0x179
	.ascii "__VARIANT_NAME_4 \0"
	.byte	0x1
	.uleb128 0x1c4
	.ascii "_REFVARIANT_DEFINED \0"
	.byte	0x1
	.uleb128 0x1c6
	.ascii "REFVARIANT const VARIANT &\0"
	.byte	0x1
	.uleb128 0x237
	.ascii "PARAMFLAG_NONE (0x0)\0"
	.byte	0x1
	.uleb128 0x239
	.ascii "PARAMFLAG_FIN (0x1)\0"
	.byte	0x1
	.uleb128 0x23b
	.ascii "PARAMFLAG_FOUT (0x2)\0"
	.byte	0x1
	.uleb128 0x23d
	.ascii "PARAMFLAG_FLCID (0x4)\0"
	.byte	0x1
	.uleb128 0x23f
	.ascii "PARAMFLAG_FRETVAL (0x8)\0"
	.byte	0x1
	.uleb128 0x241
	.ascii "PARAMFLAG_FOPT (0x10)\0"
	.byte	0x1
	.uleb128 0x243
	.ascii "PARAMFLAG_FHASDEFAULT (0x20)\0"
	.byte	0x1
	.uleb128 0x245
	.ascii "PARAMFLAG_FHASCUSTDATA (0x40)\0"
	.byte	0x1
	.uleb128 0x24e
	.ascii "IDLFLAG_NONE (PARAMFLAG_NONE)\0"
	.byte	0x1
	.uleb128 0x250
	.ascii "IDLFLAG_FIN (PARAMFLAG_FIN)\0"
	.byte	0x1
	.uleb128 0x252
	.ascii "IDLFLAG_FOUT (PARAMFLAG_FOUT)\0"
	.byte	0x1
	.uleb128 0x254
	.ascii "IDLFLAG_FLCID (PARAMFLAG_FLCID)\0"
	.byte	0x1
	.uleb128 0x256
	.ascii "IDLFLAG_FRETVAL (PARAMFLAG_FRETVAL)\0"
	.byte	0x1
	.uleb128 0x2d4
	.ascii "IMPLTYPEFLAG_FDEFAULT (0x1)\0"
	.byte	0x1
	.uleb128 0x2d6
	.ascii "IMPLTYPEFLAG_FSOURCE (0x2)\0"
	.byte	0x1
	.uleb128 0x2d8
	.ascii "IMPLTYPEFLAG_FRESTRICTED (0x4)\0"
	.byte	0x1
	.uleb128 0x2da
	.ascii "IMPLTYPEFLAG_FDEFAULTVTABLE (0x8)\0"
	.byte	0x1
	.uleb128 0x337
	.ascii "__ICreateTypeInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x55e
	.ascii "__ICreateTypeInfo2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x7ae
	.ascii "__ICreateTypeLib_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x8b7
	.ascii "__ICreateTypeLib2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x9a0
	.ascii "__IDispatch_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x9a5
	.ascii "DISPID_UNKNOWN (-1)\0"
	.byte	0x1
	.uleb128 0x9a7
	.ascii "DISPID_VALUE (0)\0"
	.byte	0x1
	.uleb128 0x9a9
	.ascii "DISPID_PROPERTYPUT (-3)\0"
	.byte	0x1
	.uleb128 0x9ab
	.ascii "DISPID_NEWENUM (-4)\0"
	.byte	0x1
	.uleb128 0x9ad
	.ascii "DISPID_EVALUATE (-5)\0"
	.byte	0x1
	.uleb128 0x9af
	.ascii "DISPID_CONSTRUCTOR (-6)\0"
	.byte	0x1
	.uleb128 0x9b1
	.ascii "DISPID_DESTRUCTOR (-7)\0"
	.byte	0x1
	.uleb128 0x9b3
	.ascii "DISPID_COLLECT (-8)\0"
	.byte	0x1
	.uleb128 0xa83
	.ascii "__IEnumVARIANT_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xb21
	.ascii "__ITypeComp_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xbd5
	.ascii "__ITypeInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xe4c
	.ascii "__ITypeInfo2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x10ba
	.ascii "__ITypeLib_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1239
	.ascii "__ITypeLib2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1352
	.ascii "__ITypeChangeEvents_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x13d6
	.ascii "__IErrorInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1479
	.ascii "__ICreateErrorInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x151c
	.ascii "__ISupportErrorInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1573
	.ascii "__ITypeFactory_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x15ce
	.ascii "__ITypeMarshal_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1680
	.ascii "__IRecordInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x181c
	.ascii "__IErrorLog_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1876
	.ascii "__IPropertyBag_INTERFACE_DEFINED__ \0"
	.byte	0x4
	.byte	0x2
	.uleb128 0x1f
	.ascii "abort\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "__IXMLDOMImplementation_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x26
	.ascii "__IXMLDOMNode_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "__IXMLDOMDocumentFragment_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x30
	.ascii "__IXMLDOMDocument_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x35
	.ascii "__IXMLDOMNodeList_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "__IXMLDOMNamedNodeMap_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "__IXMLDOMCharacterData_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x44
	.ascii "__IXMLDOMAttribute_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x49
	.ascii "__IXMLDOMElement_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "__IXMLDOMText_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x53
	.ascii "__IXMLDOMComment_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x58
	.ascii "__IXMLDOMProcessingInstruction_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "__IXMLDOMCDATASection_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x62
	.ascii "__IXMLDOMDocumentType_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x67
	.ascii "__IXMLDOMNotation_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "__IXMLDOMEntity_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x71
	.ascii "__IXMLDOMEntityReference_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x76
	.ascii "__IXMLDOMParseError_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "__IXTLRuntime_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x80
	.ascii "__XMLDOMDocumentEvents_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x85
	.ascii "__DOMDocument_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "__DOMFreeThreadedDocument_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x97
	.ascii "__IXMLHttpRequest_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "__XMLHTTPRequest_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "__IXMLDSOControl_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "__XMLDSOControl_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "__IXMLElementCollection_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "__IXMLDocument_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "__IXMLDocument2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "__IXMLElement_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "__IXMLElement2_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "__IXMLAttribute_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "__IXMLError_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "__XMLDocument_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xef
	.ascii "__MSXML_LIBRARY_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xff
	.ascii "__IXMLDOMImplementation_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x126
	.ascii "__IXMLDOMNode_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1fc
	.ascii "__IXMLDOMDocumentFragment_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x265
	.ascii "__IXMLDOMDocument_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x374
	.ascii "__IXMLDOMNodeList_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3af
	.ascii "__IXMLDOMNamedNodeMap_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x403
	.ascii "__IXMLDOMCharacterData_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x495
	.ascii "__IXMLDOMAttribute_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x50e
	.ascii "__IXMLDOMElement_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x5a5
	.ascii "__IXMLDOMText_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x624
	.ascii "__IXMLDOMComment_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x69d
	.ascii "__IXMLDOMProcessingInstruction_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x716
	.ascii "__IXMLDOMCDATASection_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x791
	.ascii "__IXMLDOMDocumentType_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x80a
	.ascii "__IXMLDOMNotation_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x87e
	.ascii "__IXMLDOMEntity_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x8f7
	.ascii "__IXMLDOMEntityReference_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x960
	.ascii "__IXMLDOMParseError_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x9a5
	.ascii "__IXTLRuntime_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xa3c
	.ascii "__XMLDOMDocumentEvents_DISPINTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xa66
	.ascii "__IXMLHttpRequest_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xad3
	.ascii "__IXMLDSOControl_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xb13
	.ascii "__IXMLElementCollection_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xb49
	.ascii "__IXMLDocument_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xbb1
	.ascii "__IXMLDocument2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xc23
	.ascii "__IXMLElement_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xc81
	.ascii "__IXMLElement2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xce4
	.ascii "__IXMLAttribute_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xd10
	.ascii "__IXMLError_INTERFACE_DEFINED__ \0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x14e
	.ascii "__IBindStatusCallbackMsg_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x18e
	.ascii "BINDF_DONTUSECACHE BINDF_GETNEWESTVERSION\0"
	.byte	0x1
	.uleb128 0x18f
	.ascii "BINDF_DONTPUTINCACHE BINDF_NOWRITECACHE\0"
	.byte	0x1
	.uleb128 0x190
	.ascii "BINDF_NOCOPYDATA BINDF_PULLDATA\0"
	.byte	0x1
	.uleb128 0x191
	.ascii "INVALID_P_ROOT_SECURITY_ID ((BYTE*)-1)\0"
	.byte	0x1
	.uleb128 0x193
	.ascii "PI_DOCFILECLSIDLOOKUP PI_CLSIDLOOKUP\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "SZ_URLCONTEXT OLESTR(\"URL Context\")\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "SZ_ASYNC_CALLEE OLESTR(\"AsyncCallee\")\0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "MKSYS_URLMONIKER 6\0"
	.byte	0x1
	.uleb128 0x1a7
	.ascii "URL_MK_LEGACY 0\0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "URL_MK_UNIFORM 1\0"
	.byte	0x1
	.uleb128 0x1a9
	.ascii "URL_MK_NO_CANONICALIZE 2\0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "FIEF_FLAG_FORCE_JITUI 0x1\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "FIEF_FLAG_PEEK 0x2\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "FIEF_FLAG_SKIP_INSTALLED_VERSION_CHECK 0x4\0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "FMFD_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "FMFD_URLASFILENAME 0x1\0"
	.byte	0x1
	.uleb128 0x1d5
	.ascii "FMFD_SERVERMIME 0x8\0"
	.byte	0x1
	.uleb128 0x1d6
	.ascii "FMFD_RESPECTTEXTPLAIN 0x10\0"
	.byte	0x1
	.uleb128 0x1d7
	.ascii "FMFD_RETURNUPDATEDIMGMIMES 0x20\0"
	.byte	0x1
	.uleb128 0x1d8
	.ascii "UAS_EXACTLEGACY 0x1000\0"
	.byte	0x1
	.uleb128 0x1de
	.ascii "URLMON_OPTION_USERAGENT 0x10000001\0"
	.byte	0x1
	.uleb128 0x1df
	.ascii "URLMON_OPTION_USERAGENT_REFRESH 0x10000002\0"
	.byte	0x1
	.uleb128 0x1e0
	.ascii "URLMON_OPTION_URL_ENCODING 0x10000004\0"
	.byte	0x1
	.uleb128 0x1ea
	.ascii "CF_NULL 0\0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "CFSTR_MIME_NULL NULL\0"
	.byte	0x1
	.uleb128 0x1ed
	.ascii "CFSTR_MIME_TEXT (TEXT(\"text/plain\"))\0"
	.byte	0x1
	.uleb128 0x1ee
	.ascii "CFSTR_MIME_RICHTEXT (TEXT(\"text/richtext\"))\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "CFSTR_MIME_MANIFEST (TEXT(\"text/cache-manifest\"))\0"
	.byte	0x1
	.uleb128 0x1f0
	.ascii "CFSTR_MIME_WEBVTT (TEXT(\"text/vtt\"))\0"
	.byte	0x1
	.uleb128 0x1f1
	.ascii "CFSTR_MIME_X_BITMAP (TEXT(\"image/x-xbitmap\"))\0"
	.byte	0x1
	.uleb128 0x1f2
	.ascii "CFSTR_MIME_POSTSCRIPT (TEXT(\"application/postscript\"))\0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "CFSTR_MIME_AIFF (TEXT(\"audio/aiff\"))\0"
	.byte	0x1
	.uleb128 0x1f4
	.ascii "CFSTR_MIME_BASICAUDIO (TEXT(\"audio/basic\"))\0"
	.byte	0x1
	.uleb128 0x1f5
	.ascii "CFSTR_MIME_WAV (TEXT(\"audio/wav\"))\0"
	.byte	0x1
	.uleb128 0x1f6
	.ascii "CFSTR_MIME_X_WAV (TEXT(\"audio/x-wav\"))\0"
	.byte	0x1
	.uleb128 0x1f7
	.ascii "CFSTR_MIME_GIF (TEXT(\"image/gif\"))\0"
	.byte	0x1
	.uleb128 0x1f8
	.ascii "CFSTR_MIME_PJPEG (TEXT(\"image/pjpeg\"))\0"
	.byte	0x1
	.uleb128 0x1f9
	.ascii "CFSTR_MIME_JPEG (TEXT(\"image/jpeg\"))\0"
	.byte	0x1
	.uleb128 0x1fa
	.ascii "CFSTR_MIME_TIFF (TEXT(\"image/tiff\"))\0"
	.byte	0x1
	.uleb128 0x1fb
	.ascii "CFSTR_MIME_JPEG_XR (TEXT(\"image/vnd.ms-photo\"))\0"
	.byte	0x1
	.uleb128 0x1fc
	.ascii "CFSTR_MIME_PNG (TEXT(\"image/png\"))\0"
	.byte	0x1
	.uleb128 0x1fd
	.ascii "CFSTR_MIME_X_PNG (TEXT(\"image/x-png\"))\0"
	.byte	0x1
	.uleb128 0x1fe
	.ascii "CFSTR_MIME_X_ICON (TEXT(\"image/x-icon\"))\0"
	.byte	0x1
	.uleb128 0x1ff
	.ascii "CFSTR_MIME_SVG_XML (TEXT(\"image/svg+xml\"))\0"
	.byte	0x1
	.uleb128 0x200
	.ascii "CFSTR_MIME_BMP (TEXT(\"image/bmp\"))\0"
	.byte	0x1
	.uleb128 0x201
	.ascii "CFSTR_MIME_X_EMF (TEXT(\"image/x-emf\"))\0"
	.byte	0x1
	.uleb128 0x202
	.ascii "CFSTR_MIME_X_WMF (TEXT(\"image/x-wmf\"))\0"
	.byte	0x1
	.uleb128 0x203
	.ascii "CFSTR_MIME_AVI (TEXT(\"video/avi\"))\0"
	.byte	0x1
	.uleb128 0x204
	.ascii "CFSTR_MIME_MPEG (TEXT(\"video/mpeg\"))\0"
	.byte	0x1
	.uleb128 0x205
	.ascii "CFSTR_MIME_FRACTALS (TEXT(\"application/fractals\"))\0"
	.byte	0x1
	.uleb128 0x206
	.ascii "CFSTR_MIME_RAWDATA (TEXT(\"application/octet-stream\"))\0"
	.byte	0x1
	.uleb128 0x207
	.ascii "CFSTR_MIME_RAWDATASTRM (TEXT(\"application/octet-stream\"))\0"
	.byte	0x1
	.uleb128 0x208
	.ascii "CFSTR_MIME_PDF (TEXT(\"application/pdf\"))\0"
	.byte	0x1
	.uleb128 0x209
	.ascii "CFSTR_MIME_HTA (TEXT(\"application/hta\"))\0"
	.byte	0x1
	.uleb128 0x20a
	.ascii "CFSTR_MIME_APP_XML (TEXT(\"application/xml\"))\0"
	.byte	0x1
	.uleb128 0x20b
	.ascii "CFSTR_MIME_XHTML (TEXT(\"application/xhtml+xml\"))\0"
	.byte	0x1
	.uleb128 0x20c
	.ascii "CFSTR_MIME_X_AIFF (TEXT(\"audio/x-aiff\"))\0"
	.byte	0x1
	.uleb128 0x20d
	.ascii "CFSTR_MIME_X_REALAUDIO (TEXT(\"audio/x-pn-realaudio\"))\0"
	.byte	0x1
	.uleb128 0x20e
	.ascii "CFSTR_MIME_XBM (TEXT(\"image/xbm\"))\0"
	.byte	0x1
	.uleb128 0x20f
	.ascii "CFSTR_MIME_QUICKTIME (TEXT(\"video/quicktime\"))\0"
	.byte	0x1
	.uleb128 0x210
	.ascii "CFSTR_MIME_X_MSVIDEO (TEXT(\"video/x-msvideo\"))\0"
	.byte	0x1
	.uleb128 0x211
	.ascii "CFSTR_MIME_X_SGI_MOVIE (TEXT(\"video/x-sgi-movie\"))\0"
	.byte	0x1
	.uleb128 0x212
	.ascii "CFSTR_MIME_HTML (TEXT(\"text/html\"))\0"
	.byte	0x1
	.uleb128 0x213
	.ascii "CFSTR_MIME_XML (TEXT(\"text/xml\"))\0"
	.byte	0x1
	.uleb128 0x214
	.ascii "CFSTR_MIME_TTML (TEXT(\"application/ttml+xml\"))\0"
	.byte	0x1
	.uleb128 0x215
	.ascii "CFSTR_MIME_TTAF (TEXT(\"application/ttaf+xml\"))\0"
	.byte	0x1
	.uleb128 0x217
	.ascii "MK_S_ASYNCHRONOUS _HRESULT_TYPEDEF_(0x401E8L)\0"
	.byte	0x1
	.uleb128 0x219
	.ascii "S_ASYNCHRONOUS MK_S_ASYNCHRONOUS\0"
	.byte	0x1
	.uleb128 0x21f
	.ascii "INET_E_INVALID_URL _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0002))\0"
	.byte	0x1
	.uleb128 0x220
	.ascii "INET_E_NO_SESSION _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0003))\0"
	.byte	0x1
	.uleb128 0x221
	.ascii "INET_E_CANNOT_CONNECT _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0004))\0"
	.byte	0x1
	.uleb128 0x222
	.ascii "INET_E_RESOURCE_NOT_FOUND _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0005))\0"
	.byte	0x1
	.uleb128 0x223
	.ascii "INET_E_OBJECT_NOT_FOUND _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0006))\0"
	.byte	0x1
	.uleb128 0x224
	.ascii "INET_E_DATA_NOT_AVAILABLE _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0007))\0"
	.byte	0x1
	.uleb128 0x225
	.ascii "INET_E_DOWNLOAD_FAILURE _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0008))\0"
	.byte	0x1
	.uleb128 0x226
	.ascii "INET_E_AUTHENTICATION_REQUIRED _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0009))\0"
	.byte	0x1
	.uleb128 0x227
	.ascii "INET_E_NO_VALID_MEDIA _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C000A))\0"
	.byte	0x1
	.uleb128 0x228
	.ascii "INET_E_CONNECTION_TIMEOUT _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C000B))\0"
	.byte	0x1
	.uleb128 0x229
	.ascii "INET_E_INVALID_REQUEST _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C000C))\0"
	.byte	0x1
	.uleb128 0x22a
	.ascii "INET_E_UNKNOWN_PROTOCOL _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C000D))\0"
	.byte	0x1
	.uleb128 0x22b
	.ascii "INET_E_SECURITY_PROBLEM _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C000E))\0"
	.byte	0x1
	.uleb128 0x22c
	.ascii "INET_E_CANNOT_LOAD_DATA _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C000F))\0"
	.byte	0x1
	.uleb128 0x22d
	.ascii "INET_E_CANNOT_INSTANTIATE_OBJECT _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0010))\0"
	.byte	0x1
	.uleb128 0x22e
	.ascii "INET_E_INVALID_CERTIFICATE _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0019))\0"
	.byte	0x1
	.uleb128 0x22f
	.ascii "INET_E_REDIRECT_FAILED _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0014))\0"
	.byte	0x1
	.uleb128 0x230
	.ascii "INET_E_REDIRECT_TO_DIR _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0015))\0"
	.byte	0x1
	.uleb128 0x231
	.ascii "INET_E_CANNOT_LOCK_REQUEST _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0016))\0"
	.byte	0x1
	.uleb128 0x232
	.ascii "INET_E_USE_EXTEND_BINDING _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0017))\0"
	.byte	0x1
	.uleb128 0x233
	.ascii "INET_E_TERMINATED_BIND _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0018))\0"
	.byte	0x1
	.uleb128 0x234
	.ascii "INET_E_RESERVED_1 _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C001A))\0"
	.byte	0x1
	.uleb128 0x235
	.ascii "INET_E_BLOCKED_REDIRECT_XSECURITYID _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C001B))\0"
	.byte	0x1
	.uleb128 0x236
	.ascii "INET_E_DOMINJECTIONVALIDATION _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C001C))\0"
	.byte	0x1
	.uleb128 0x237
	.ascii "INET_E_ERROR_FIRST _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0002))\0"
	.byte	0x1
	.uleb128 0x238
	.ascii "INET_E_CODE_DOWNLOAD_DECLINED _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0100))\0"
	.byte	0x1
	.uleb128 0x239
	.ascii "INET_E_RESULT_DISPATCHED _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0200))\0"
	.byte	0x1
	.uleb128 0x23a
	.ascii "INET_E_CANNOT_REPLACE_SFP_FILE _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0300))\0"
	.byte	0x1
	.uleb128 0x23e
	.ascii "INET_E_CODE_INSTALL_BLOCKED_BY_HASH_POLICY _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0500))\0"
	.byte	0x1
	.uleb128 0x23f
	.ascii "INET_E_DOWNLOAD_BLOCKED_BY_INPRIVATE _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0501))\0"
	.byte	0x1
	.uleb128 0x240
	.ascii "INET_E_CODE_INSTALL_BLOCKED_IMMERSIVE _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0502))\0"
	.byte	0x1
	.uleb128 0x241
	.ascii "INET_E_FORBIDFRAMING _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0503))\0"
	.byte	0x1
	.uleb128 0x242
	.ascii "INET_E_CODE_INSTALL_BLOCKED_ARM _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0504))\0"
	.byte	0x1
	.uleb128 0x243
	.ascii "INET_E_BLOCKED_PLUGGABLE_PROTOCOL _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0505))\0"
	.byte	0x1
	.uleb128 0x244
	.ascii "INET_E_ERROR_LAST INET_E_BLOCKED_PLUGGABLE_PROTOCOL\0"
	.byte	0x1
	.uleb128 0x249
	.ascii "_LPPERSISTMONIKER_DEFINED \0"
	.byte	0x1
	.uleb128 0x24e
	.ascii "__IPersistMoniker_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x312
	.ascii "_LPMONIKERPROP_DEFINED \0"
	.byte	0x1
	.uleb128 0x317
	.ascii "__IMonikerProp_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x377
	.ascii "_LPBINDPROTOCOL_DEFINED \0"
	.byte	0x1
	.uleb128 0x37d
	.ascii "__IBindProtocol_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3d8
	.ascii "_LPBINDING_DEFINED \0"
	.byte	0x1
	.uleb128 0x3de
	.ascii "__IBinding_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x4a3
	.ascii "_LPBINDSTATUSCALLBACK_DEFINED \0"
	.byte	0x1
	.uleb128 0x4a9
	.ascii "__IBindStatusCallback_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x683
	.ascii "_LPBINDSTATUSCALLBACKEX_DEFINED \0"
	.byte	0x1
	.uleb128 0x689
	.ascii "__IBindStatusCallbackEx_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x75c
	.ascii "_LPAUTHENTICATION_DEFINED \0"
	.byte	0x1
	.uleb128 0x762
	.ascii "__IAuthenticate_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x7bd
	.ascii "_LPAUTHENTICATIONEX_DEFINED \0"
	.byte	0x1
	.uleb128 0x7c3
	.ascii "__IAuthenticateEx_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x839
	.ascii "_LPHTTPNEGOTIATE_DEFINED \0"
	.byte	0x1
	.uleb128 0x83f
	.ascii "__IHttpNegotiate_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x8b9
	.ascii "_LPHTTPNEGOTIATE2_DEFINED \0"
	.byte	0x1
	.uleb128 0x8bf
	.ascii "__IHttpNegotiate2_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x933
	.ascii "_LPHTTPNEGOTIATE3_DEFINED \0"
	.byte	0x1
	.uleb128 0x939
	.ascii "__IHttpNegotiate3_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x9b7
	.ascii "_LPWININETFILESTREAM_DEFINED \0"
	.byte	0x1
	.uleb128 0x9bd
	.ascii "__IWinInetFileStream_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xa28
	.ascii "_LPWINDOWFORBINDINGUI_DEFINED \0"
	.byte	0x1
	.uleb128 0xa2e
	.ascii "__IWindowForBindingUI_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0xa86
	.ascii "_LPCODEINSTALL_DEFINED \0"
	.byte	0x1
	.uleb128 0xa8c
	.ascii "__ICodeInstall_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x109e
	.ascii "_LPWININETINFO_DEFINED \0"
	.byte	0x1
	.uleb128 0x10a4
	.ascii "__IWinInetInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1107
	.ascii "WININETINFO_OPTION_LOCK_HANDLE 65534\0"
	.byte	0x1
	.uleb128 0x110a
	.ascii "_LPHTTPSECURITY_DEFINED \0"
	.byte	0x1
	.uleb128 0x1110
	.ascii "__IHttpSecurity_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1171
	.ascii "_LPWININETHTTPINFO_DEFINED \0"
	.byte	0x1
	.uleb128 0x1177
	.ascii "__IWinInetHttpInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x11f3
	.ascii "_LPWININETHTTPTIMEOUTS_DEFINED \0"
	.byte	0x1
	.uleb128 0x11f8
	.ascii "__IWinInetHttpTimeouts_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1331
	.ascii "SID_IBindHost IID_IBindHost\0"
	.byte	0x1
	.uleb128 0x1332
	.ascii "SID_SBindHost IID_IBindHost\0"
	.byte	0x1
	.uleb128 0x1335
	.ascii "_LPBINDHOST_DEFINED \0"
	.byte	0x1
	.uleb128 0x133d
	.ascii "__IBindHost_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x13f4
	.ascii "URLOSTRM_USECACHEDCOPY_ONLY 0x1\0"
	.byte	0x1
	.uleb128 0x13f5
	.ascii "URLOSTRM_USECACHEDCOPY 0x2\0"
	.byte	0x1
	.uleb128 0x13f6
	.ascii "URLOSTRM_GETNEWESTVERSION 0x3\0"
	.byte	0x1
	.uleb128 0x1406
	.ascii "URLOpenStream __MINGW_NAME_AW(URLOpenStream)\0"
	.byte	0x1
	.uleb128 0x1407
	.ascii "URLOpenPullStream __MINGW_NAME_AW(URLOpenPullStream)\0"
	.byte	0x1
	.uleb128 0x1408
	.ascii "URLDownloadToFile __MINGW_NAME_AW(URLDownloadToFile)\0"
	.byte	0x1
	.uleb128 0x1409
	.ascii "URLDownloadToCacheFile __MINGW_NAME_AW(URLDownloadToCacheFile)\0"
	.byte	0x1
	.uleb128 0x140a
	.ascii "URLOpenBlockingStream __MINGW_NAME_AW(URLOpenBlockingStream)\0"
	.byte	0x1
	.uleb128 0x1446
	.ascii "_LPIINTERNET \0"
	.byte	0x1
	.uleb128 0x144c
	.ascii "__IInternet_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x148a
	.ascii "_LPIINTERNETBINDINFO \0"
	.byte	0x1
	.uleb128 0x1490
	.ascii "__IInternetBindInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x151e
	.ascii "_LPIINTERNETBINDINFOEX \0"
	.byte	0x1
	.uleb128 0x1524
	.ascii "__IInternetBindInfoEx_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1599
	.ascii "_LPIINTERNETPROTOCOLROOT_DEFINED \0"
	.byte	0x1
	.uleb128 0x159f
	.ascii "__IInternetProtocolRoot_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x167c
	.ascii "_LPIINTERNETPROTOCOL_DEFINED \0"
	.byte	0x1
	.uleb128 0x1682
	.ascii "__IInternetProtocol_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1813
	.ascii "_LPIINTERNETPROTOCOLSINK_DEFINED \0"
	.byte	0x1
	.uleb128 0x1818
	.ascii "__IInternetProtocolSink_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x18b5
	.ascii "_LPIINTERNETPROTOCOLSINKSTACKABLE_DEFINED \0"
	.byte	0x1
	.uleb128 0x18bb
	.ascii "__IInternetProtocolSinkStackable_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1932
	.ascii "_LPIINTERNETSESSION_DEFINED \0"
	.byte	0x1
	.uleb128 0x1938
	.ascii "__IInternetSession_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1a40
	.ascii "_LPIINTERNETTHREADSWITCH_DEFINED \0"
	.byte	0x1
	.uleb128 0x1a46
	.ascii "__IInternetThreadSwitch_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1aaa
	.ascii "_LPIINTERNETPRIORITY_DEFINED \0"
	.byte	0x1
	.uleb128 0x1ab0
	.ascii "__IInternetPriority_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1b18
	.ascii "_LPIINTERNETPROTOCOLINFO_DEFINED \0"
	.byte	0x1
	.uleb128 0x1b1e
	.ascii "__IInternetProtocolInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1c15
	.ascii "PARSE_ENCODE PARSE_ENCODE_IS_UNESCAPE\0"
	.byte	0x1
	.uleb128 0x1c16
	.ascii "PARSE_DECODE PARSE_DECODE_IS_ESCAPE\0"
	.byte	0x1
	.uleb128 0x1c1a
	.ascii "IOInet IInternet\0"
	.byte	0x1
	.uleb128 0x1c1b
	.ascii "IOInetBindInfo IInternetBindInfo\0"
	.byte	0x1
	.uleb128 0x1c1c
	.ascii "IOInetBindInfoEx IInternetBindInfoEx\0"
	.byte	0x1
	.uleb128 0x1c1d
	.ascii "IOInetProtocolRoot IInternetProtocolRoot\0"
	.byte	0x1
	.uleb128 0x1c1e
	.ascii "IOInetProtocol IInternetProtocol\0"
	.byte	0x1
	.uleb128 0x1c23
	.ascii "IOInetProtocolSink IInternetProtocolSink\0"
	.byte	0x1
	.uleb128 0x1c24
	.ascii "IOInetProtocolInfo IInternetProtocolInfo\0"
	.byte	0x1
	.uleb128 0x1c25
	.ascii "IOInetSession IInternetSession\0"
	.byte	0x1
	.uleb128 0x1c26
	.ascii "IOInetPriority IInternetPriority\0"
	.byte	0x1
	.uleb128 0x1c27
	.ascii "IOInetThreadSwitch IInternetThreadSwitch\0"
	.byte	0x1
	.uleb128 0x1c28
	.ascii "IOInetProtocolSinkStackable IInternetProtocolSinkStackable\0"
	.byte	0x1
	.uleb128 0x1c2a
	.ascii "LPOINET LPIINTERNET\0"
	.byte	0x1
	.uleb128 0x1c2b
	.ascii "LPOINETPROTOCOLINFO LPIINTERNETPROTOCOLINFO\0"
	.byte	0x1
	.uleb128 0x1c2c
	.ascii "LPOINETBINDINFO LPIINTERNETBINDINFO\0"
	.byte	0x1
	.uleb128 0x1c2d
	.ascii "LPOINETPROTOCOLROOT LPIINTERNETPROTOCOLROOT\0"
	.byte	0x1
	.uleb128 0x1c2e
	.ascii "LPOINETPROTOCOL LPIINTERNETPROTOCOL\0"
	.byte	0x1
	.uleb128 0x1c33
	.ascii "LPOINETPROTOCOLSINK LPIINTERNETPROTOCOLSINK\0"
	.byte	0x1
	.uleb128 0x1c34
	.ascii "LPOINETSESSION LPIINTERNETSESSION\0"
	.byte	0x1
	.uleb128 0x1c35
	.ascii "LPOINETTHREADSWITCH LPIINTERNETTHREADSWITCH\0"
	.byte	0x1
	.uleb128 0x1c36
	.ascii "LPOINETPRIORITY LPIINTERNETPRIORITY\0"
	.byte	0x1
	.uleb128 0x1c37
	.ascii "LPOINETPROTOCOLINFO LPIINTERNETPROTOCOLINFO\0"
	.byte	0x1
	.uleb128 0x1c38
	.ascii "LPOINETPROTOCOLSINKSTACKABLE LPIINTERNETPROTOCOLSINKSTACKABLE\0"
	.byte	0x1
	.uleb128 0x1c3a
	.ascii "IID_IOInet IID_IInternet\0"
	.byte	0x1
	.uleb128 0x1c3b
	.ascii "IID_IOInetBindInfo IID_IInternetBindInfo\0"
	.byte	0x1
	.uleb128 0x1c3c
	.ascii "IID_IOInetBindInfoEx IID_IInternetBindInfoEx\0"
	.byte	0x1
	.uleb128 0x1c3d
	.ascii "IID_IOInetProtocolRoot IID_IInternetProtocolRoot\0"
	.byte	0x1
	.uleb128 0x1c3e
	.ascii "IID_IOInetProtocol IID_IInternetProtocol\0"
	.byte	0x1
	.uleb128 0x1c43
	.ascii "IID_IOInetProtocolSink IID_IInternetProtocolSink\0"
	.byte	0x1
	.uleb128 0x1c44
	.ascii "IID_IOInetProtocolInfo IID_IInternetProtocolInfo\0"
	.byte	0x1
	.uleb128 0x1c45
	.ascii "IID_IOInetSession IID_IInternetSession\0"
	.byte	0x1
	.uleb128 0x1c46
	.ascii "IID_IOInetPriority IID_IInternetPriority\0"
	.byte	0x1
	.uleb128 0x1c47
	.ascii "IID_IOInetThreadSwitch IID_IInternetThreadSwitch\0"
	.byte	0x1
	.uleb128 0x1c48
	.ascii "IID_IOInetProtocolSinkStackable IID_IInternetProtocolSinkStackable\0"
	.byte	0x1
	.uleb128 0x1c9e
	.ascii "INET_E_USE_DEFAULT_PROTOCOLHANDLER _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0011))\0"
	.byte	0x1
	.uleb128 0x1c9f
	.ascii "INET_E_USE_DEFAULT_SETTING _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0012))\0"
	.byte	0x1
	.uleb128 0x1ca0
	.ascii "INET_E_DEFAULT_ACTION INET_E_USE_DEFAULT_PROTOCOLHANDLER\0"
	.byte	0x1
	.uleb128 0x1ca1
	.ascii "INET_E_QUERYOPTION_UNKNOWN _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0013))\0"
	.byte	0x1
	.uleb128 0x1ca2
	.ascii "INET_E_REDIRECTING _HRESULT_TYPEDEF_(__MSABI_LONG(0x800C0014))\0"
	.byte	0x1
	.uleb128 0x1ca4
	.ascii "OInetParseUrl CoInternetParseUrl\0"
	.byte	0x1
	.uleb128 0x1ca5
	.ascii "OInetCombineUrl CoInternetCombineUrl\0"
	.byte	0x1
	.uleb128 0x1caa
	.ascii "OInetCompareUrl CoInternetCompareUrl\0"
	.byte	0x1
	.uleb128 0x1cab
	.ascii "OInetQueryInfo CoInternetQueryInfo\0"
	.byte	0x1
	.uleb128 0x1cac
	.ascii "OInetGetSession CoInternetGetSession\0"
	.byte	0x1
	.uleb128 0x1caf
	.ascii "PROTOCOLFLAG_NO_PICS_CHECK 0x1\0"
	.byte	0x1
	.uleb128 0x1cbb
	.ascii "SID_SInternetSecurityManager IID_IInternetSecurityManager\0"
	.byte	0x1
	.uleb128 0x1cc2
	.ascii "SID_SInternetHostSecurityManager IID_IInternetHostSecurityManager\0"
	.byte	0x1
	.uleb128 0x1cc5
	.ascii "_LPINTERNETSECURITYMGRSITE_DEFINED \0"
	.byte	0x1
	.uleb128 0x1ccb
	.ascii "__IInternetSecurityMgrSite_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1d31
	.ascii "_LPINTERNETSECURITYMANANGER_DEFINED \0"
	.byte	0x1
	.uleb128 0x1d37
	.ascii "__IInternetSecurityManager_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1d3a
	.ascii "MUTZ_NOSAVEDFILECHECK 0x1\0"
	.byte	0x1
	.uleb128 0x1d3b
	.ascii "MUTZ_ISFILE 0x2\0"
	.byte	0x1
	.uleb128 0x1d3c
	.ascii "MUTZ_ACCEPT_WILDCARD_SCHEME 0x80\0"
	.byte	0x1
	.uleb128 0x1d3d
	.ascii "MUTZ_ENFORCERESTRICTED 0x100\0"
	.byte	0x1
	.uleb128 0x1d3e
	.ascii "MUTZ_RESERVED 0x200\0"
	.byte	0x1
	.uleb128 0x1d3f
	.ascii "MUTZ_REQUIRESAVEDFILECHECK 0x400\0"
	.byte	0x1
	.uleb128 0x1d40
	.ascii "MUTZ_DONT_UNESCAPE 0x800\0"
	.byte	0x1
	.uleb128 0x1d41
	.ascii "MUTZ_DONT_USE_CACHE 0x1000\0"
	.byte	0x1
	.uleb128 0x1d42
	.ascii "MUTZ_FORCE_INTRANET_FLAGS 0x2000\0"
	.byte	0x1
	.uleb128 0x1d43
	.ascii "MUTZ_IGNORE_ZONE_MAPPINGS 0x4000\0"
	.byte	0x1
	.uleb128 0x1d46
	.ascii "MAX_SIZE_SECURITY_ID 512\0"
	.byte	0x1
	.uleb128 0x2109
	.ascii "_LPINTERNETHOSTSECURITYMANANGER_DEFINED \0"
	.byte	0x1
	.uleb128 0x210f
	.ascii "__IInternetHostSecurityManager_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x21ae
	.ascii "URLACTION_MIN 0x1000\0"
	.byte	0x1
	.uleb128 0x21b0
	.ascii "URLACTION_DOWNLOAD_MIN 0x1000\0"
	.byte	0x1
	.uleb128 0x21b1
	.ascii "URLACTION_DOWNLOAD_SIGNED_ACTIVEX 0x1001\0"
	.byte	0x1
	.uleb128 0x21b2
	.ascii "URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX 0x1004\0"
	.byte	0x1
	.uleb128 0x21b3
	.ascii "URLACTION_DOWNLOAD_CURR_MAX 0x1004\0"
	.byte	0x1
	.uleb128 0x21b4
	.ascii "URLACTION_DOWNLOAD_MAX 0x11FF\0"
	.byte	0x1
	.uleb128 0x21b6
	.ascii "URLACTION_ACTIVEX_MIN 0x1200\0"
	.byte	0x1
	.uleb128 0x21b7
	.ascii "URLACTION_ACTIVEX_RUN 0x1200\0"
	.byte	0x1
	.uleb128 0x21b8
	.ascii "URLPOLICY_ACTIVEX_CHECK_LIST 0x10000\0"
	.byte	0x1
	.uleb128 0x21b9
	.ascii "URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY 0x1201\0"
	.byte	0x1
	.uleb128 0x21ba
	.ascii "URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY 0x1202\0"
	.byte	0x1
	.uleb128 0x21bb
	.ascii "URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY 0x1203\0"
	.byte	0x1
	.uleb128 0x21bc
	.ascii "URLACTION_SCRIPT_OVERRIDE_SAFETY 0x1401\0"
	.byte	0x1
	.uleb128 0x21bd
	.ascii "URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY 0x1204\0"
	.byte	0x1
	.uleb128 0x21be
	.ascii "URLACTION_ACTIVEX_TREATASUNTRUSTED 0x1205\0"
	.byte	0x1
	.uleb128 0x21bf
	.ascii "URLACTION_ACTIVEX_NO_WEBOC_SCRIPT 0x1206\0"
	.byte	0x1
	.uleb128 0x21c0
	.ascii "URLACTION_ACTIVEX_OVERRIDE_REPURPOSEDETECTION 0x1207\0"
	.byte	0x1
	.uleb128 0x21c1
	.ascii "URLACTION_ACTIVEX_OVERRIDE_OPTIN 0x1208\0"
	.byte	0x1
	.uleb128 0x21c2
	.ascii "URLACTION_ACTIVEX_SCRIPTLET_RUN 0x1209\0"
	.byte	0x1
	.uleb128 0x21c3
	.ascii "URLACTION_ACTIVEX_DYNSRC_VIDEO_AND_ANIMATION 0x120A\0"
	.byte	0x1
	.uleb128 0x21c4
	.ascii "URLACTION_ACTIVEX_OVERRIDE_DOMAINLIST 0x120B\0"
	.byte	0x1
	.uleb128 0x21c5
	.ascii "URLACTION_ACTIVEX_CURR_MAX 0x120B\0"
	.byte	0x1
	.uleb128 0x21c6
	.ascii "URLACTION_ACTIVEX_MAX 0x13ff\0"
	.byte	0x1
	.uleb128 0x21c8
	.ascii "URLACTION_SCRIPT_MIN 0x1400\0"
	.byte	0x1
	.uleb128 0x21c9
	.ascii "URLACTION_SCRIPT_RUN 0x1400\0"
	.byte	0x1
	.uleb128 0x21ca
	.ascii "URLACTION_SCRIPT_JAVA_USE 0x1402\0"
	.byte	0x1
	.uleb128 0x21cb
	.ascii "URLACTION_SCRIPT_SAFE_ACTIVEX 0x1405\0"
	.byte	0x1
	.uleb128 0x21cc
	.ascii "URLACTION_CROSS_DOMAIN_DATA 0x1406\0"
	.byte	0x1
	.uleb128 0x21cd
	.ascii "URLACTION_SCRIPT_PASTE 0x1407\0"
	.byte	0x1
	.uleb128 0x21ce
	.ascii "URLACTION_ALLOW_XDOMAIN_SUBFRAME_RESIZE 0x1408\0"
	.byte	0x1
	.uleb128 0x21cf
	.ascii "URLACTION_SCRIPT_XSSFILTER 0x1409\0"
	.byte	0x1
	.uleb128 0x21d0
	.ascii "URLACTION_SCRIPT_NAVIGATE 0x140A\0"
	.byte	0x1
	.uleb128 0x21d1
	.ascii "URLACTION_PLUGGABLE_PROTOCOL_XHR 0x140B\0"
	.byte	0x1
	.uleb128 0x21d2
	.ascii "URLACTION_SCRIPT_CURR_MAX 0x140B\0"
	.byte	0x1
	.uleb128 0x21d3
	.ascii "URLACTION_SCRIPT_MAX 0x15ff\0"
	.byte	0x1
	.uleb128 0x21d5
	.ascii "URLACTION_HTML_MIN 0x1600\0"
	.byte	0x1
	.uleb128 0x21d6
	.ascii "URLACTION_HTML_SUBMIT_FORMS 0x1601\0"
	.byte	0x1
	.uleb128 0x21d7
	.ascii "URLACTION_HTML_SUBMIT_FORMS_FROM 0x1602\0"
	.byte	0x1
	.uleb128 0x21d8
	.ascii "URLACTION_HTML_SUBMIT_FORMS_TO 0x1603\0"
	.byte	0x1
	.uleb128 0x21d9
	.ascii "URLACTION_HTML_FONT_DOWNLOAD 0x1604\0"
	.byte	0x1
	.uleb128 0x21da
	.ascii "URLACTION_HTML_JAVA_RUN 0x1605\0"
	.byte	0x1
	.uleb128 0x21db
	.ascii "URLACTION_HTML_USERDATA_SAVE 0x1606\0"
	.byte	0x1
	.uleb128 0x21dc
	.ascii "URLACTION_HTML_SUBFRAME_NAVIGATE 0x1607\0"
	.byte	0x1
	.uleb128 0x21dd
	.ascii "URLACTION_HTML_META_REFRESH 0x1608\0"
	.byte	0x1
	.uleb128 0x21de
	.ascii "URLACTION_HTML_MIXED_CONTENT 0x1609\0"
	.byte	0x1
	.uleb128 0x21df
	.ascii "URLACTION_HTML_INCLUDE_FILE_PATH 0x160A\0"
	.byte	0x1
	.uleb128 0x21e0
	.ascii "URLACTION_HTML_ALLOW_INJECTED_DYNAMIC_HTML 0x160B\0"
	.byte	0x1
	.uleb128 0x21e1
	.ascii "URLACTION_HTML_REQUIRE_UTF8_DOCUMENT_CODEPAGE 0x160C\0"
	.byte	0x1
	.uleb128 0x21e2
	.ascii "URLACTION_HTML_ALLOW_CROSS_DOMAIN_CANVAS 0x160D\0"
	.byte	0x1
	.uleb128 0x21e3
	.ascii "URLACTION_HTML_ALLOW_WINDOW_CLOSE 0x160E\0"
	.byte	0x1
	.uleb128 0x21e4
	.ascii "URLACTION_HTML_ALLOW_CROSS_DOMAIN_WEBWORKER 0x160F\0"
	.byte	0x1
	.uleb128 0x21e5
	.ascii "URLACTION_HTML_ALLOW_CROSS_DOMAIN_TEXTTRACK 0x1610\0"
	.byte	0x1
	.uleb128 0x21e6
	.ascii "URLACTION_HTML_ALLOW_INDEXEDDB 0x1611\0"
	.byte	0x1
	.uleb128 0x21e8
	.ascii "URLACTION_HTML_MAX 0x17ff\0"
	.byte	0x1
	.uleb128 0x21ea
	.ascii "URLACTION_SHELL_MIN 0x1800\0"
	.byte	0x1
	.uleb128 0x21eb
	.ascii "URLACTION_SHELL_INSTALL_DTITEMS 0x1800\0"
	.byte	0x1
	.uleb128 0x21ec
	.ascii "URLACTION_SHELL_MOVE_OR_COPY 0x1802\0"
	.byte	0x1
	.uleb128 0x21ed
	.ascii "URLACTION_SHELL_FILE_DOWNLOAD 0x1803\0"
	.byte	0x1
	.uleb128 0x21ee
	.ascii "URLACTION_SHELL_VERB 0x1804\0"
	.byte	0x1
	.uleb128 0x21ef
	.ascii "URLACTION_SHELL_WEBVIEW_VERB 0x1805\0"
	.byte	0x1
	.uleb128 0x21f0
	.ascii "URLACTION_SHELL_SHELLEXECUTE 0x1806\0"
	.byte	0x1
	.uleb128 0x2202
	.ascii "URLACTION_SHELL_CURR_MAX 0x1811\0"
	.byte	0x1
	.uleb128 0x2203
	.ascii "URLACTION_SHELL_MAX 0x19ff\0"
	.byte	0x1
	.uleb128 0x2205
	.ascii "URLACTION_NETWORK_MIN 0x1A00\0"
	.byte	0x1
	.uleb128 0x2207
	.ascii "URLACTION_CREDENTIALS_USE 0x1A00\0"
	.byte	0x1
	.uleb128 0x2208
	.ascii "URLPOLICY_CREDENTIALS_SILENT_LOGON_OK 0x0\0"
	.byte	0x1
	.uleb128 0x2209
	.ascii "URLPOLICY_CREDENTIALS_MUST_PROMPT_USER 0x10000\0"
	.byte	0x1
	.uleb128 0x220a
	.ascii "URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT 0x20000\0"
	.byte	0x1
	.uleb128 0x220b
	.ascii "URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY 0x30000\0"
	.byte	0x1
	.uleb128 0x220d
	.ascii "URLACTION_AUTHENTICATE_CLIENT 0x1A01\0"
	.byte	0x1
	.uleb128 0x220e
	.ascii "URLPOLICY_AUTHENTICATE_CLEARTEXT_OK 0x0\0"
	.byte	0x1
	.uleb128 0x220f
	.ascii "URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE 0x10000\0"
	.byte	0x1
	.uleb128 0x2210
	.ascii "URLPOLICY_AUTHENTICATE_MUTUAL_ONLY 0x30000\0"
	.byte	0x1
	.uleb128 0x2212
	.ascii "URLACTION_COOKIES 0x1A02\0"
	.byte	0x1
	.uleb128 0x2213
	.ascii "URLACTION_COOKIES_SESSION 0x1A03\0"
	.byte	0x1
	.uleb128 0x2215
	.ascii "URLACTION_CLIENT_CERT_PROMPT 0x1A04\0"
	.byte	0x1
	.uleb128 0x2217
	.ascii "URLACTION_COOKIES_THIRD_PARTY 0x1A05\0"
	.byte	0x1
	.uleb128 0x2218
	.ascii "URLACTION_COOKIES_SESSION_THIRD_PARTY 0x1A06\0"
	.byte	0x1
	.uleb128 0x221a
	.ascii "URLACTION_COOKIES_ENABLED 0x1A10\0"
	.byte	0x1
	.uleb128 0x221c
	.ascii "URLACTION_NETWORK_CURR_MAX 0x1A10\0"
	.byte	0x1
	.uleb128 0x221d
	.ascii "URLACTION_NETWORK_MAX 0x1Bff\0"
	.byte	0x1
	.uleb128 0x221f
	.ascii "URLACTION_JAVA_MIN 0x1C00\0"
	.byte	0x1
	.uleb128 0x2220
	.ascii "URLACTION_JAVA_PERMISSIONS 0x1C00\0"
	.byte	0x1
	.uleb128 0x2221
	.ascii "URLPOLICY_JAVA_PROHIBIT 0x0\0"
	.byte	0x1
	.uleb128 0x2222
	.ascii "URLPOLICY_JAVA_HIGH 0x10000\0"
	.byte	0x1
	.uleb128 0x2223
	.ascii "URLPOLICY_JAVA_MEDIUM 0x20000\0"
	.byte	0x1
	.uleb128 0x2224
	.ascii "URLPOLICY_JAVA_LOW 0x30000\0"
	.byte	0x1
	.uleb128 0x2225
	.ascii "URLPOLICY_JAVA_CUSTOM 0x800000\0"
	.byte	0x1
	.uleb128 0x2226
	.ascii "URLACTION_JAVA_CURR_MAX 0x1C00\0"
	.byte	0x1
	.uleb128 0x2227
	.ascii "URLACTION_JAVA_MAX 0x1Cff\0"
	.byte	0x1
	.uleb128 0x2229
	.ascii "URLACTION_INFODELIVERY_MIN 0x1D00\0"
	.byte	0x1
	.uleb128 0x222a
	.ascii "URLACTION_INFODELIVERY_NO_ADDING_CHANNELS 0x1D00\0"
	.byte	0x1
	.uleb128 0x222b
	.ascii "URLACTION_INFODELIVERY_NO_EDITING_CHANNELS 0x1D01\0"
	.byte	0x1
	.uleb128 0x222c
	.ascii "URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS 0x1D02\0"
	.byte	0x1
	.uleb128 0x222d
	.ascii "URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS 0x1D03\0"
	.byte	0x1
	.uleb128 0x222e
	.ascii "URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS 0x1D04\0"
	.byte	0x1
	.uleb128 0x222f
	.ascii "URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS 0x1D05\0"
	.byte	0x1
	.uleb128 0x2230
	.ascii "URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING 0x1D06\0"
	.byte	0x1
	.uleb128 0x2231
	.ascii "URLACTION_INFODELIVERY_CURR_MAX 0x1D06\0"
	.byte	0x1
	.uleb128 0x2232
	.ascii "URLACTION_INFODELIVERY_MAX 0x1Dff\0"
	.byte	0x1
	.uleb128 0x2233
	.ascii "URLACTION_CHANNEL_SOFTDIST_MIN 0x1E00\0"
	.byte	0x1
	.uleb128 0x2234
	.ascii "URLACTION_CHANNEL_SOFTDIST_PERMISSIONS 0x1E05\0"
	.byte	0x1
	.uleb128 0x2235
	.ascii "URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT 0x10000\0"
	.byte	0x1
	.uleb128 0x2236
	.ascii "URLPOLICY_CHANNEL_SOFTDIST_PRECACHE 0x20000\0"
	.byte	0x1
	.uleb128 0x2237
	.ascii "URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL 0x30000\0"
	.byte	0x1
	.uleb128 0x2238
	.ascii "URLACTION_CHANNEL_SOFTDIST_MAX 0x1Eff\0"
	.byte	0x1
	.uleb128 0x225c
	.ascii "URLACTION_ALLOW_AUDIO_VIDEO 0x2701\0"
	.byte	0x1
	.uleb128 0x225d
	.ascii "URLACTION_ALLOW_ACTIVEX_FILTERING 0x2702\0"
	.byte	0x1
	.uleb128 0x225e
	.ascii "URLACTION_ALLOW_STRUCTURED_STORAGE_SNIFFING 0x2703\0"
	.byte	0x1
	.uleb128 0x225f
	.ascii "URLACTION_ALLOW_AUDIO_VIDEO_PLUGINS 0x2704\0"
	.byte	0x1
	.uleb128 0x2260
	.ascii "URLACTION_ALLOW_ZONE_ELEVATION_VIA_OPT_OUT 0x2705\0"
	.byte	0x1
	.uleb128 0x2261
	.ascii "URLACTION_ALLOW_ZONE_ELEVATION_OPT_OUT_ADDITION 0x2706\0"
	.byte	0x1
	.uleb128 0x2262
	.ascii "URLACTION_ALLOW_CROSSDOMAIN_DROP_WITHIN_WINDOW 0x2708\0"
	.byte	0x1
	.uleb128 0x2263
	.ascii "URLACTION_ALLOW_CROSSDOMAIN_DROP_ACROSS_WINDOWS 0x2709\0"
	.byte	0x1
	.uleb128 0x2264
	.ascii "URLACTION_ALLOW_CROSSDOMAIN_APPCACHE_MANIFEST 0x270A\0"
	.byte	0x1
	.uleb128 0x2265
	.ascii "URLACTION_ALLOW_RENDER_LEGACY_DXTFILTERS 0x270B\0"
	.byte	0x1
	.uleb128 0x2267
	.ascii "URLPOLICY_ALLOW 0x0\0"
	.byte	0x1
	.uleb128 0x2268
	.ascii "URLPOLICY_QUERY 0x1\0"
	.byte	0x1
	.uleb128 0x2269
	.ascii "URLPOLICY_DISALLOW 0x3\0"
	.byte	0x1
	.uleb128 0x226a
	.ascii "URLPOLICY_NOTIFY_ON_ALLOW 0x10\0"
	.byte	0x1
	.uleb128 0x226b
	.ascii "URLPOLICY_NOTIFY_ON_DISALLOW 0x20\0"
	.byte	0x1
	.uleb128 0x226c
	.ascii "URLPOLICY_LOG_ON_ALLOW 0x40\0"
	.byte	0x1
	.uleb128 0x226d
	.ascii "URLPOLICY_LOG_ON_DISALLOW 0x80\0"
	.byte	0x1
	.uleb128 0x226f
	.ascii "URLPOLICY_MASK_PERMISSIONS 0x0f\0"
	.byte	0x1
	.uleb128 0x2270
	.ascii "GetUrlPolicyPermissions(dw) (dw & URLPOLICY_MASK_PERMISSIONS)\0"
	.byte	0x1
	.uleb128 0x2271
	.ascii "SetUrlPolicyPermissions(dw,dw2) ((dw) = ((dw) & ~(URLPOLICY_MASK_PERMISSIONS)) | (dw2))\0"
	.byte	0x1
	.uleb128 0x2273
	.ascii "URLPOLICY_DONTCHECKDLGBOX 0x100\0"
	.byte	0x1
	.uleb128 0x227a
	.ascii "_LPINTERNETZONEMANAGER_DEFINED \0"
	.byte	0x1
	.uleb128 0x2280
	.ascii "__IInternetZoneManager_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2291
	.ascii "URLZONE_ESC_FLAG 0x100\0"
	.byte	0x1
	.uleb128 0x26a1
	.ascii "_LPSOFTDISTEXT_DEFINED \0"
	.byte	0x1
	.uleb128 0x26a3
	.ascii "SOFTDIST_FLAG_USAGE_EMAIL 0x1\0"
	.byte	0x1
	.uleb128 0x26a4
	.ascii "SOFTDIST_FLAG_USAGE_PRECACHE 0x2\0"
	.byte	0x1
	.uleb128 0x26a5
	.ascii "SOFTDIST_FLAG_USAGE_AUTOINSTALL 0x4\0"
	.byte	0x1
	.uleb128 0x26a6
	.ascii "SOFTDIST_FLAG_DELETE_SUBSCRIPTION 0x8\0"
	.byte	0x1
	.uleb128 0x26a8
	.ascii "SOFTDIST_ADSTATE_NONE 0x0\0"
	.byte	0x1
	.uleb128 0x26a9
	.ascii "SOFTDIST_ADSTATE_AVAILABLE 0x1\0"
	.byte	0x1
	.uleb128 0x26aa
	.ascii "SOFTDIST_ADSTATE_DOWNLOADED 0x2\0"
	.byte	0x1
	.uleb128 0x26ab
	.ascii "SOFTDIST_ADSTATE_INSTALLED 0x3\0"
	.byte	0x1
	.uleb128 0x26cc
	.ascii "__ISoftDistExt_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2770
	.ascii "_LPCATALOGFILEINFO_DEFINED \0"
	.byte	0x1
	.uleb128 0x2776
	.ascii "__ICatalogFileInfo_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x27de
	.ascii "_LPDATAFILTER_DEFINED \0"
	.byte	0x1
	.uleb128 0x27e4
	.ascii "__IDataFilter_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x288f
	.ascii "_LPENCODINGFILTERFACTORY_DEFINED \0"
	.byte	0x1
	.uleb128 0x289d
	.ascii "__IEncodingFilterFactory_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x291b
	.ascii "_HITLOGGING_DEFINED \0"
	.byte	0x1
	.uleb128 0x2920
	.ascii "IsLoggingEnabled __MINGW_NAME_AW(IsLoggingEnabled)\0"
	.byte	0x1
	.uleb128 0x292c
	.ascii "CONFIRMSAFETYACTION_LOADOBJECT 0x1\0"
	.byte	0x1
	.uleb128 0x2939
	.ascii "_LPIWRAPPEDPROTOCOL_DEFINED \0"
	.byte	0x1
	.uleb128 0x293f
	.ascii "__IWrappedProtocol_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x2997
	.ascii "_LPGETBINDHANDLE_DEFINED \0"
	.byte	0x1
	.uleb128 0x299d
	.ascii "__IGetBindHandle_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x29fb
	.ascii "_XHRPLUGGABLEPROTOCOL_DEFINED \0"
	.byte	0x1
	.uleb128 0x2a05
	.ascii "_LPBINDCALLBACKREDIRECT_DEFINED \0"
	.byte	0x1
	.uleb128 0x2a0b
	.ascii "__IBindCallbackRedirect_INTERFACE_DEFINED__ \0"
	.byte	0x4
	.file 423 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/propidl.h"
	.byte	0x3
	.uleb128 0xa4
	.uleb128 0x1a7
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x1
	.uleb128 0x10
	.ascii "__propidl_h__ \0"
	.byte	0x1
	.uleb128 0x15
	.ascii "__IPropertyStorage_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "__IPropertySetStorage_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "__IEnumSTATPROPSTG_FWD_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x24
	.ascii "__IEnumSTATPROPSETSTG_FWD_DEFINED__ \0"
	.byte	0x3
	.uleb128 0x2a
	.uleb128 0x195
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x2b
	.uleb128 0x1a0
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x2c
	.uleb128 0x1a6
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x51
	.ascii "PROPSETFLAG_DEFAULT (0)\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "PROPSETFLAG_NONSIMPLE (1)\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "PROPSETFLAG_ANSI (2)\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "PROPSETFLAG_UNBUFFERED (4)\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "PROPSETFLAG_CASE_SENSITIVE (8)\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "PROPSET_BEHAVIOR_CASE_SENSITIVE (1)\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "tag_inner_PROPVARIANT \0"
	.byte	0x1
	.uleb128 0x129
	.ascii "_REFPROPVARIANT_DEFINED \0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "REFPROPVARIANT const PROPVARIANT &\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "PID_DICTIONARY (0x0)\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "PID_CODEPAGE (0x1)\0"
	.byte	0x1
	.uleb128 0x136
	.ascii "PID_FIRST_USABLE (0x2)\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "PID_FIRST_NAME_DEFAULT (0xfff)\0"
	.byte	0x1
	.uleb128 0x13a
	.ascii "PID_LOCALE (0x80000000)\0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "PID_MODIFY_TIME (0x80000001)\0"
	.byte	0x1
	.uleb128 0x13e
	.ascii "PID_SECURITY (0x80000002)\0"
	.byte	0x1
	.uleb128 0x140
	.ascii "PID_BEHAVIOR (0x80000003)\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "PID_ILLEGAL (0xffffffff)\0"
	.byte	0x1
	.uleb128 0x145
	.ascii "PID_MIN_READONLY (0x80000000)\0"
	.byte	0x1
	.uleb128 0x147
	.ascii "PID_MAX_READONLY (0xbfffffff)\0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "PIDDI_THUMBNAIL __MSABI_LONG(0x2)\0"
	.byte	0x1
	.uleb128 0x14f
	.ascii "PIDSI_TITLE __MSABI_LONG(0x2)\0"
	.byte	0x1
	.uleb128 0x150
	.ascii "PIDSI_SUBJECT __MSABI_LONG(0x3)\0"
	.byte	0x1
	.uleb128 0x151
	.ascii "PIDSI_AUTHOR __MSABI_LONG(0x4)\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "PIDSI_KEYWORDS __MSABI_LONG(0x5)\0"
	.byte	0x1
	.uleb128 0x153
	.ascii "PIDSI_COMMENTS __MSABI_LONG(0x6)\0"
	.byte	0x1
	.uleb128 0x154
	.ascii "PIDSI_TEMPLATE __MSABI_LONG(0x7)\0"
	.byte	0x1
	.uleb128 0x155
	.ascii "PIDSI_LASTAUTHOR __MSABI_LONG(0x8)\0"
	.byte	0x1
	.uleb128 0x156
	.ascii "PIDSI_REVNUMBER __MSABI_LONG(0x9)\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "PIDSI_EDITTIME __MSABI_LONG(0xa)\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "PIDSI_LASTPRINTED __MSABI_LONG(0xb)\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "PIDSI_CREATE_DTM __MSABI_LONG(0xc)\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "PIDSI_LASTSAVE_DTM __MSABI_LONG(0xd)\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "PIDSI_PAGECOUNT __MSABI_LONG(0xe)\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "PIDSI_WORDCOUNT __MSABI_LONG(0xf)\0"
	.byte	0x1
	.uleb128 0x15d
	.ascii "PIDSI_CHARCOUNT __MSABI_LONG(0x10)\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "PIDSI_THUMBNAIL __MSABI_LONG(0x11)\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "PIDSI_APPNAME __MSABI_LONG(0x12)\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "PIDSI_DOC_SECURITY __MSABI_LONG(0x13)\0"
	.byte	0x1
	.uleb128 0x162
	.ascii "PIDDSI_CATEGORY 0x00000002\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "PIDDSI_PRESFORMAT 0x00000003\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "PIDDSI_BYTECOUNT 0x00000004\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "PIDDSI_LINECOUNT 0x00000005\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "PIDDSI_PARCOUNT 0x00000006\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "PIDDSI_SLIDECOUNT 0x00000007\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "PIDDSI_NOTECOUNT 0x00000008\0"
	.byte	0x1
	.uleb128 0x169
	.ascii "PIDDSI_HIDDENCOUNT 0x00000009\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "PIDDSI_MMCLIPCOUNT 0x0000000A\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "PIDDSI_SCALE 0x0000000B\0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "PIDDSI_HEADINGPAIR 0x0000000C\0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "PIDDSI_DOCPARTS 0x0000000D\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "PIDDSI_MANAGER 0x0000000E\0"
	.byte	0x1
	.uleb128 0x16f
	.ascii "PIDDSI_COMPANY 0x0000000F\0"
	.byte	0x1
	.uleb128 0x170
	.ascii "PIDDSI_LINKSDIRTY 0x00000010\0"
	.byte	0x1
	.uleb128 0x172
	.ascii "PIDMSI_EDITOR __MSABI_LONG(0x2)\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "PIDMSI_SUPPLIER __MSABI_LONG(0x3)\0"
	.byte	0x1
	.uleb128 0x174
	.ascii "PIDMSI_SOURCE __MSABI_LONG(0x4)\0"
	.byte	0x1
	.uleb128 0x175
	.ascii "PIDMSI_SEQUENCE_NO __MSABI_LONG(0x5)\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "PIDMSI_PROJECT __MSABI_LONG(0x6)\0"
	.byte	0x1
	.uleb128 0x177
	.ascii "PIDMSI_STATUS __MSABI_LONG(0x7)\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "PIDMSI_OWNER __MSABI_LONG(0x8)\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "PIDMSI_RATING __MSABI_LONG(0x9)\0"
	.byte	0x1
	.uleb128 0x17a
	.ascii "PIDMSI_PRODUCTION __MSABI_LONG(0xa)\0"
	.byte	0x1
	.uleb128 0x17b
	.ascii "PIDMSI_COPYRIGHT __MSABI_LONG(0xb)\0"
	.byte	0x1
	.uleb128 0x18d
	.ascii "PRSPEC_INVALID (0xffffffff)\0"
	.byte	0x1
	.uleb128 0x18f
	.ascii "PRSPEC_LPWSTR (0)\0"
	.byte	0x1
	.uleb128 0x191
	.ascii "PRSPEC_PROPID (1)\0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "PROPSETHDR_OSVER_KIND(dwOSVer) HIWORD((dwOSVer))\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "PROPSETHDR_OSVER_MAJOR(dwOSVer) LOBYTE(LOWORD((dwOSVer)))\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "PROPSETHDR_OSVER_MINOR(dwOSVer) HIBYTE(LOWORD((dwOSVer)))\0"
	.byte	0x1
	.uleb128 0x1a5
	.ascii "PROPSETHDR_OSVERSION_UNKNOWN 0xffffffff\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "__IPropertyStorage_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x300
	.ascii "__IPropertySetStorage_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x3a2
	.ascii "__IEnumSTATPROPSTG_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x440
	.ascii "__IEnumSTATPROPSETSTG_INTERFACE_DEFINED__ \0"
	.byte	0x1
	.uleb128 0x4e0
	.ascii "_PROPVARIANTINIT_DEFINED_ \0"
	.byte	0x1
	.uleb128 0x4ec
	.ascii "CCH_MAX_PROPSTG_NAME 31\0"
	.byte	0x1
	.uleb128 0x4f3
	.ascii "_SERIALIZEDPROPERTYVALUE_DEFINED_ \0"
	.byte	0x4
	.byte	0x3
	.uleb128 0xab
	.uleb128 0x143
	.byte	0x4
	.byte	0x4
	.file 424 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/oleauto.h"
	.byte	0x3
	.uleb128 0x12
	.uleb128 0x1a8
	.byte	0x1
	.uleb128 0x7
	.ascii "_OLEAUTO_H_ \0"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x145
	.byte	0x4
	.byte	0x1
	.uleb128 0x11
	.ascii "WINOLEAUTAPI EXTERN_C DECLSPEC_IMPORT HRESULT WINAPI\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "WINOLEAUTAPI_(type) EXTERN_C DECLSPEC_IMPORT type WINAPI\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "STDOLE_MAJORVERNUM 0x1\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "STDOLE_MINORVERNUM 0x0\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "STDOLE_LCID 0x0000\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "STDOLE2_MAJORVERNUM 0x2\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "STDOLE2_MINORVERNUM 0x0\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "STDOLE2_LCID 0x0000\0"
	.byte	0x3
	.uleb128 0x29
	.uleb128 0x1a6
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x5b
	.ascii "VARIANT_NOVALUEPROP 0x01\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "VARIANT_ALPHABOOL 0x02\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "VARIANT_NOUSEROVERRIDE 0x04\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "VARIANT_CALENDAR_HIJRI 0x08\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "VARIANT_LOCALBOOL 0x10\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "VARIANT_CALENDAR_THAI 0x20\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "VARIANT_CALENDAR_GREGORIAN 0x40\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "VARIANT_USE_NLS 0x80\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "VAR_TIMEVALUEONLY ((DWORD)0x00000001)\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "VAR_DATEVALUEONLY ((DWORD)0x00000002)\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "VAR_VALIDDATE ((DWORD)0x00000004)\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "VAR_CALENDAR_HIJRI ((DWORD)0x00000008)\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "VAR_LOCALBOOL ((DWORD)0x00000010)\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "VAR_FORMAT_NOSUBSTITUTE ((DWORD)0x00000020)\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "VAR_FOURDIGITYEARS ((DWORD)0x00000040)\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "LOCALE_USE_NLS 0x10000000\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "VAR_CALENDAR_THAI ((DWORD)0x00000080)\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "VAR_CALENDAR_GREGORIAN ((DWORD)0x00000100)\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "VTDATEGRE_MAX 2958465\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "VTDATEGRE_MIN -657434\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "VarUI4FromUI4(in,pOut) (*(pOut) = (in))\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "VarI4FromI4(in,pOut) (*(pOut) = (in))\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "VarUI8FromUI8(in,pOut) (*(pOut) = (in))\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "VarI8FromI8(in,pOut) (*(pOut) = (in))\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "VarUI1FromInt VarUI1FromI4\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "VarUI1FromUint VarUI1FromUI4\0"
	.byte	0x1
	.uleb128 0x169
	.ascii "VarI2FromInt VarI2FromI4\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "VarI2FromUint VarI2FromUI4\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "VarI4FromInt VarI4FromI4\0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "VarI4FromUint VarI4FromUI4\0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "VarI8FromInt VarI8FromI4\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "VarI8FromUint VarI8FromUI4\0"
	.byte	0x1
	.uleb128 0x16f
	.ascii "VarR4FromInt VarR4FromI4\0"
	.byte	0x1
	.uleb128 0x170
	.ascii "VarR4FromUint VarR4FromUI4\0"
	.byte	0x1
	.uleb128 0x171
	.ascii "VarR8FromInt VarR8FromI4\0"
	.byte	0x1
	.uleb128 0x172
	.ascii "VarR8FromUint VarR8FromUI4\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "VarDateFromInt VarDateFromI4\0"
	.byte	0x1
	.uleb128 0x174
	.ascii "VarDateFromUint VarDateFromUI4\0"
	.byte	0x1
	.uleb128 0x175
	.ascii "VarCyFromInt VarCyFromI4\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "VarCyFromUint VarCyFromUI4\0"
	.byte	0x1
	.uleb128 0x177
	.ascii "VarBstrFromInt VarBstrFromI4\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "VarBstrFromUint VarBstrFromUI4\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "VarBoolFromInt VarBoolFromI4\0"
	.byte	0x1
	.uleb128 0x17a
	.ascii "VarBoolFromUint VarBoolFromUI4\0"
	.byte	0x1
	.uleb128 0x17b
	.ascii "VarI1FromInt VarI1FromI4\0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "VarI1FromUint VarI1FromUI4\0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "VarUI2FromInt VarUI2FromI4\0"
	.byte	0x1
	.uleb128 0x17e
	.ascii "VarUI2FromUint VarUI2FromUI4\0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "VarUI4FromInt VarUI4FromI4\0"
	.byte	0x1
	.uleb128 0x180
	.ascii "VarUI4FromUint VarUI4FromUI4\0"
	.byte	0x1
	.uleb128 0x181
	.ascii "VarDecFromInt VarDecFromI4\0"
	.byte	0x1
	.uleb128 0x182
	.ascii "VarDecFromUint VarDecFromUI4\0"
	.byte	0x1
	.uleb128 0x183
	.ascii "VarIntFromUI1 VarI4FromUI1\0"
	.byte	0x1
	.uleb128 0x184
	.ascii "VarIntFromI2 VarI4FromI2\0"
	.byte	0x1
	.uleb128 0x185
	.ascii "VarIntFromI4 VarI4FromI4\0"
	.byte	0x1
	.uleb128 0x186
	.ascii "VarIntFromI8 VarI4FromI8\0"
	.byte	0x1
	.uleb128 0x187
	.ascii "VarIntFromR4 VarI4FromR4\0"
	.byte	0x1
	.uleb128 0x188
	.ascii "VarIntFromR8 VarI4FromR8\0"
	.byte	0x1
	.uleb128 0x189
	.ascii "VarIntFromDate VarI4FromDate\0"
	.byte	0x1
	.uleb128 0x18a
	.ascii "VarIntFromCy VarI4FromCy\0"
	.byte	0x1
	.uleb128 0x18b
	.ascii "VarIntFromStr VarI4FromStr\0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "VarIntFromDisp VarI4FromDisp\0"
	.byte	0x1
	.uleb128 0x18d
	.ascii "VarIntFromBool VarI4FromBool\0"
	.byte	0x1
	.uleb128 0x18e
	.ascii "VarIntFromI1 VarI4FromI1\0"
	.byte	0x1
	.uleb128 0x18f
	.ascii "VarIntFromUI2 VarI4FromUI2\0"
	.byte	0x1
	.uleb128 0x190
	.ascii "VarIntFromUI4 VarI4FromUI4\0"
	.byte	0x1
	.uleb128 0x191
	.ascii "VarIntFromUI8 VarI4FromUI8\0"
	.byte	0x1
	.uleb128 0x192
	.ascii "VarIntFromDec VarI4FromDec\0"
	.byte	0x1
	.uleb128 0x193
	.ascii "VarIntFromUint VarI4FromUI4\0"
	.byte	0x1
	.uleb128 0x194
	.ascii "VarUintFromUI1 VarUI4FromUI1\0"
	.byte	0x1
	.uleb128 0x195
	.ascii "VarUintFromI2 VarUI4FromI2\0"
	.byte	0x1
	.uleb128 0x196
	.ascii "VarUintFromI4 VarUI4FromI4\0"
	.byte	0x1
	.uleb128 0x197
	.ascii "VarUintFromI8 VarUI4FromI8\0"
	.byte	0x1
	.uleb128 0x198
	.ascii "VarUintFromR4 VarUI4FromR4\0"
	.byte	0x1
	.uleb128 0x199
	.ascii "VarUintFromR8 VarUI4FromR8\0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "VarUintFromDate VarUI4FromDate\0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "VarUintFromCy VarUI4FromCy\0"
	.byte	0x1
	.uleb128 0x19c
	.ascii "VarUintFromStr VarUI4FromStr\0"
	.byte	0x1
	.uleb128 0x19d
	.ascii "VarUintFromDisp VarUI4FromDisp\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "VarUintFromBool VarUI4FromBool\0"
	.byte	0x1
	.uleb128 0x19f
	.ascii "VarUintFromI1 VarUI4FromI1\0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "VarUintFromUI2 VarUI4FromUI2\0"
	.byte	0x1
	.uleb128 0x1a1
	.ascii "VarUintFromUI4 VarUI4FromUI4\0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "VarUintFromUI8 VarUI4FromUI8\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "VarUintFromDec VarUI4FromDec\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "VarUintFromInt VarUI4FromI4\0"
	.byte	0x1
	.uleb128 0x1af
	.ascii "NUMPRS_LEADING_WHITE 0x0001\0"
	.byte	0x1
	.uleb128 0x1b0
	.ascii "NUMPRS_TRAILING_WHITE 0x0002\0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "NUMPRS_LEADING_PLUS 0x0004\0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "NUMPRS_TRAILING_PLUS 0x0008\0"
	.byte	0x1
	.uleb128 0x1b3
	.ascii "NUMPRS_LEADING_MINUS 0x0010\0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "NUMPRS_TRAILING_MINUS 0x0020\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "NUMPRS_HEX_OCT 0x0040\0"
	.byte	0x1
	.uleb128 0x1b6
	.ascii "NUMPRS_PARENS 0x0080\0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "NUMPRS_DECIMAL 0x0100\0"
	.byte	0x1
	.uleb128 0x1b8
	.ascii "NUMPRS_THOUSANDS 0x0200\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "NUMPRS_CURRENCY 0x0400\0"
	.byte	0x1
	.uleb128 0x1ba
	.ascii "NUMPRS_EXPONENT 0x0800\0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "NUMPRS_USE_ALL 0x1000\0"
	.byte	0x1
	.uleb128 0x1bc
	.ascii "NUMPRS_STD 0x1FFF\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "NUMPRS_NEG 0x10000\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "NUMPRS_INEXACT 0x20000\0"
	.byte	0x1
	.uleb128 0x1c1
	.ascii "VTBIT_I1 (1 << VT_I1)\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "VTBIT_UI1 (1 << VT_UI1)\0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "VTBIT_I2 (1 << VT_I2)\0"
	.byte	0x1
	.uleb128 0x1c4
	.ascii "VTBIT_UI2 (1 << VT_UI2)\0"
	.byte	0x1
	.uleb128 0x1c5
	.ascii "VTBIT_I4 (1 << VT_I4)\0"
	.byte	0x1
	.uleb128 0x1c6
	.ascii "VTBIT_UI4 (1 << VT_UI4)\0"
	.byte	0x1
	.uleb128 0x1c7
	.ascii "VTBIT_I8 (1 << VT_I8)\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "VTBIT_UI8 (1 << VT_UI8)\0"
	.byte	0x1
	.uleb128 0x1c9
	.ascii "VTBIT_R4 (1 << VT_R4)\0"
	.byte	0x1
	.uleb128 0x1ca
	.ascii "VTBIT_R8 (1 << VT_R8)\0"
	.byte	0x1
	.uleb128 0x1cb
	.ascii "VTBIT_CY (1 << VT_CY)\0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "VTBIT_DECIMAL (1 << VT_DECIMAL)\0"
	.byte	0x1
	.uleb128 0x208
	.ascii "VARCMP_LT 0\0"
	.byte	0x1
	.uleb128 0x209
	.ascii "VARCMP_EQ 1\0"
	.byte	0x1
	.uleb128 0x20a
	.ascii "VARCMP_GT 2\0"
	.byte	0x1
	.uleb128 0x20b
	.ascii "VARCMP_NULL 3\0"
	.byte	0x1
	.uleb128 0x20d
	.ascii "VT_HARDTYPE VT_RESERVED\0"
	.byte	0x1
	.uleb128 0x223
	.ascii "DEFINED_LPTYPELIB \0"
	.byte	0x1
	.uleb128 0x227
	.ascii "DEFINED_DISPID_MEMBERID \0"
	.byte	0x1
	.uleb128 0x22c
	.ascii "MEMBERID_NIL DISPID_UNKNOWN\0"
	.byte	0x1
	.uleb128 0x22d
	.ascii "ID_DEFAULTINST -2\0"
	.byte	0x1
	.uleb128 0x22f
	.ascii "DISPATCH_METHOD 0x1\0"
	.byte	0x1
	.uleb128 0x230
	.ascii "DISPATCH_PROPERTYGET 0x2\0"
	.byte	0x1
	.uleb128 0x231
	.ascii "DISPATCH_PROPERTYPUT 0x4\0"
	.byte	0x1
	.uleb128 0x232
	.ascii "DISPATCH_PROPERTYPUTREF 0x8\0"
	.byte	0x1
	.uleb128 0x235
	.ascii "DEFINDE_LPTYPEINFO \0"
	.byte	0x1
	.uleb128 0x239
	.ascii "DEFINED_LPTYPECOMP \0"
	.byte	0x1
	.uleb128 0x23d
	.ascii "DEFINED_LPCREATETYPELIB \0"
	.byte	0x1
	.uleb128 0x241
	.ascii "DEFINE_LPCREATETYPEINFO \0"
	.byte	0x1
	.uleb128 0x248
	.ascii "LHashValOfName(lcid,szName) LHashValOfNameSys(SYS_WIN32,lcid,szName)\0"
	.byte	0x1
	.uleb128 0x249
	.ascii "WHashValOfLHashVal(lhashval) ((USHORT) (0x0000ffff & (lhashval)))\0"
	.byte	0x1
	.uleb128 0x24a
	.ascii "IsHashValCompatible(lhashval1,lhashval2) ((WINBOOL) ((0x00ff0000 & (lhashval1))==(0x00ff0000 & (lhashval2))))\0"
	.byte	0x1
	.uleb128 0x252
	.ascii "LOAD_TLB_AS_32BIT 0x20\0"
	.byte	0x1
	.uleb128 0x253
	.ascii "LOAD_TLB_AS_64BIT 0x40\0"
	.byte	0x1
	.uleb128 0x254
	.ascii "MASK_TO_RESET_TLB_BITS ~(LOAD_TLB_AS_32BIT | LOAD_TLB_AS_64BIT)\0"
	.byte	0x1
	.uleb128 0x25f
	.ascii "DEFINED_LPDISPATCH \0"
	.byte	0x1
	.uleb128 0x27f
	.ascii "ACTIVEOBJECT_STRONG 0x0\0"
	.byte	0x1
	.uleb128 0x280
	.ascii "ACTIVEOBJECT_WEAK 0x1\0"
	.byte	0x1
	.uleb128 0x293
	.ascii "V_UNION(X,Y) ((X)->Y)\0"
	.byte	0x1
	.uleb128 0x294
	.ascii "V_VT(X) ((X)->vt)\0"
	.byte	0x1
	.uleb128 0x295
	.ascii "V_RECORDINFO(X) ((X)->pRecInfo)\0"
	.byte	0x1
	.uleb128 0x296
	.ascii "V_RECORD(X) ((X)->pvRecord)\0"
	.byte	0x1
	.uleb128 0x299
	.ascii "V_ISBYREF(X) (V_VT(X)&VT_BYREF)\0"
	.byte	0x1
	.uleb128 0x29a
	.ascii "V_ISARRAY(X) (V_VT(X)&VT_ARRAY)\0"
	.byte	0x1
	.uleb128 0x29b
	.ascii "V_ISVECTOR(X) (V_VT(X)&VT_VECTOR)\0"
	.byte	0x1
	.uleb128 0x29c
	.ascii "V_NONE(X) V_I2(X)\0"
	.byte	0x1
	.uleb128 0x29e
	.ascii "V_UI1(X) V_UNION(X,bVal)\0"
	.byte	0x1
	.uleb128 0x29f
	.ascii "V_UI1REF(X) V_UNION(X,pbVal)\0"
	.byte	0x1
	.uleb128 0x2a0
	.ascii "V_I2(X) V_UNION(X,iVal)\0"
	.byte	0x1
	.uleb128 0x2a1
	.ascii "V_I2REF(X) V_UNION(X,piVal)\0"
	.byte	0x1
	.uleb128 0x2a2
	.ascii "V_I4(X) V_UNION(X,lVal)\0"
	.byte	0x1
	.uleb128 0x2a3
	.ascii "V_I4REF(X) V_UNION(X,plVal)\0"
	.byte	0x1
	.uleb128 0x2a4
	.ascii "V_I8(X) V_UNION(X,llVal)\0"
	.byte	0x1
	.uleb128 0x2a5
	.ascii "V_I8REF(X) V_UNION(X,pllVal)\0"
	.byte	0x1
	.uleb128 0x2a6
	.ascii "V_R4(X) V_UNION(X,fltVal)\0"
	.byte	0x1
	.uleb128 0x2a7
	.ascii "V_R4REF(X) V_UNION(X,pfltVal)\0"
	.byte	0x1
	.uleb128 0x2a8
	.ascii "V_R8(X) V_UNION(X,dblVal)\0"
	.byte	0x1
	.uleb128 0x2a9
	.ascii "V_R8REF(X) V_UNION(X,pdblVal)\0"
	.byte	0x1
	.uleb128 0x2aa
	.ascii "V_I1(X) V_UNION(X,cVal)\0"
	.byte	0x1
	.uleb128 0x2ab
	.ascii "V_I1REF(X) V_UNION(X,pcVal)\0"
	.byte	0x1
	.uleb128 0x2ac
	.ascii "V_UI2(X) V_UNION(X,uiVal)\0"
	.byte	0x1
	.uleb128 0x2ad
	.ascii "V_UI2REF(X) V_UNION(X,puiVal)\0"
	.byte	0x1
	.uleb128 0x2ae
	.ascii "V_UI4(X) V_UNION(X,ulVal)\0"
	.byte	0x1
	.uleb128 0x2af
	.ascii "V_UI4REF(X) V_UNION(X,pulVal)\0"
	.byte	0x1
	.uleb128 0x2b0
	.ascii "V_UI8(X) V_UNION(X,ullVal)\0"
	.byte	0x1
	.uleb128 0x2b1
	.ascii "V_UI8REF(X) V_UNION(X,pullVal)\0"
	.byte	0x1
	.uleb128 0x2b2
	.ascii "V_INT(X) V_UNION(X,intVal)\0"
	.byte	0x1
	.uleb128 0x2b3
	.ascii "V_INTREF(X) V_UNION(X,pintVal)\0"
	.byte	0x1
	.uleb128 0x2b4
	.ascii "V_UINT(X) V_UNION(X,uintVal)\0"
	.byte	0x1
	.uleb128 0x2b5
	.ascii "V_UINTREF(X) V_UNION(X,puintVal)\0"
	.byte	0x1
	.uleb128 0x2b8
	.ascii "V_INT_PTR(X) V_UNION(X,llVal)\0"
	.byte	0x1
	.uleb128 0x2b9
	.ascii "V_UINT_PTR(X) V_UNION(X,ullVal)\0"
	.byte	0x1
	.uleb128 0x2ba
	.ascii "V_INT_PTRREF(X) V_UNION(X,pllVal)\0"
	.byte	0x1
	.uleb128 0x2bb
	.ascii "V_UINT_PTRREF(X) V_UNION(X,pullVal)\0"
	.byte	0x1
	.uleb128 0x2c3
	.ascii "V_CY(X) V_UNION(X,cyVal)\0"
	.byte	0x1
	.uleb128 0x2c4
	.ascii "V_CYREF(X) V_UNION(X,pcyVal)\0"
	.byte	0x1
	.uleb128 0x2c5
	.ascii "V_DATE(X) V_UNION(X,date)\0"
	.byte	0x1
	.uleb128 0x2c6
	.ascii "V_DATEREF(X) V_UNION(X,pdate)\0"
	.byte	0x1
	.uleb128 0x2c7
	.ascii "V_BSTR(X) V_UNION(X,bstrVal)\0"
	.byte	0x1
	.uleb128 0x2c8
	.ascii "V_BSTRREF(X) V_UNION(X,pbstrVal)\0"
	.byte	0x1
	.uleb128 0x2c9
	.ascii "V_DISPATCH(X) V_UNION(X,pdispVal)\0"
	.byte	0x1
	.uleb128 0x2ca
	.ascii "V_DISPATCHREF(X) V_UNION(X,ppdispVal)\0"
	.byte	0x1
	.uleb128 0x2cb
	.ascii "V_ERROR(X) V_UNION(X,scode)\0"
	.byte	0x1
	.uleb128 0x2cc
	.ascii "V_ERRORREF(X) V_UNION(X,pscode)\0"
	.byte	0x1
	.uleb128 0x2cd
	.ascii "V_BOOL(X) V_UNION(X,boolVal)\0"
	.byte	0x1
	.uleb128 0x2ce
	.ascii "V_BOOLREF(X) V_UNION(X,pboolVal)\0"
	.byte	0x1
	.uleb128 0x2cf
	.ascii "V_UNKNOWN(X) V_UNION(X,punkVal)\0"
	.byte	0x1
	.uleb128 0x2d0
	.ascii "V_UNKNOWNREF(X) V_UNION(X,ppunkVal)\0"
	.byte	0x1
	.uleb128 0x2d1
	.ascii "V_VARIANTREF(X) V_UNION(X,pvarVal)\0"
	.byte	0x1
	.uleb128 0x2d2
	.ascii "V_ARRAY(X) V_UNION(X,parray)\0"
	.byte	0x1
	.uleb128 0x2d3
	.ascii "V_ARRAYREF(X) V_UNION(X,pparray)\0"
	.byte	0x1
	.uleb128 0x2d4
	.ascii "V_BYREF(X) V_UNION(X,byref)\0"
	.byte	0x1
	.uleb128 0x2d6
	.ascii "V_DECIMAL(X) V_UNION(X,decVal)\0"
	.byte	0x1
	.uleb128 0x2d7
	.ascii "V_DECIMALREF(X) V_UNION(X,pdecVal)\0"
	.byte	0x3
	.uleb128 0x2da
	.uleb128 0x143
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x14
	.ascii "E_DRAW VIEW_E_DRAW\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "DATA_E_FORMATETC DV_E_FORMATETC\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "OLEIVERB_PRIMARY (__MSABI_LONG(0))\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "OLEIVERB_SHOW (-__MSABI_LONG(1))\0"
	.byte	0x1
	.uleb128 0x19
	.ascii "OLEIVERB_OPEN (-__MSABI_LONG(2))\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "OLEIVERB_HIDE (-__MSABI_LONG(3))\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "OLEIVERB_UIACTIVATE (-__MSABI_LONG(4))\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "OLEIVERB_INPLACEACTIVATE (-__MSABI_LONG(5))\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "OLEIVERB_DISCARDUNDOSTATE (-__MSABI_LONG(6))\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "EMBDHLP_INPROC_HANDLER __MSABI_LONG(0x0000)\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "EMBDHLP_INPROC_SERVER __MSABI_LONG(0x0001)\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "EMBDHLP_CREATENOW __MSABI_LONG(0x00000000)\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "EMBDHLP_DELAYCREATE __MSABI_LONG(0x00010000)\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "OLECREATE_LEAVERUNNING 0x1\0"
	.byte	0x3
	.uleb128 0x26
	.uleb128 0x1a3
	.byte	0x3
	.uleb128 0x7
	.uleb128 0x17e
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x8
	.byte	0x4
	.byte	0x2
	.uleb128 0xb
	.ascii "interface\0"
	.byte	0x1
	.uleb128 0xc
	.ascii "interface struct\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x8
	.uleb128 0x196
	.byte	0x4
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x199
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.uleb128 0x92
	.uleb128 0x143
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 425 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winioctl.h"
	.byte	0x3
	.uleb128 0xb
	.uleb128 0x1a9
	.byte	0x1
	.uleb128 0x19
	.ascii "DiskClassGuid GUID_DEVINTERFACE_DISK\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "CdRomClassGuid GUID_DEVINTERFACE_CDROM\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "PartitionClassGuid GUID_DEVINTERFACE_PARTITION\0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "TapeClassGuid GUID_DEVINTERFACE_TAPE\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "WriteOnceDiskClassGuid GUID_DEVINTERFACE_WRITEONCEDISK\0"
	.byte	0x1
	.uleb128 0x1e
	.ascii "VolumeClassGuid GUID_DEVINTERFACE_VOLUME\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "MediumChangerClassGuid GUID_DEVINTERFACE_MEDIUMCHANGER\0"
	.byte	0x1
	.uleb128 0x20
	.ascii "FloppyClassGuid GUID_DEVINTERFACE_FLOPPY\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "CdChangerClassGuid GUID_DEVINTERFACE_CDCHANGER\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "StoragePortClassGuid GUID_DEVINTERFACE_STORAGEPORT\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "GUID_CLASS_COMPORT GUID_DEVINTERFACE_COMPORT\0"
	.byte	0x1
	.uleb128 0x24
	.ascii "GUID_SERENUM_BUS_ENUMERATOR GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "_WINIOCTL_ \0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "_DEVIOCTL_ \0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "DEVICE_TYPE DWORD\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "FILE_DEVICE_BEEP 0x00000001\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "FILE_DEVICE_CD_ROM 0x00000002\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "FILE_DEVICE_CD_ROM_FILE_SYSTEM 0x00000003\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "FILE_DEVICE_CONTROLLER 0x00000004\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "FILE_DEVICE_DATALINK 0x00000005\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "FILE_DEVICE_DFS 0x00000006\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "FILE_DEVICE_DISK 0x00000007\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "FILE_DEVICE_DISK_FILE_SYSTEM 0x00000008\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "FILE_DEVICE_FILE_SYSTEM 0x00000009\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "FILE_DEVICE_INPORT_PORT 0x0000000a\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "FILE_DEVICE_KEYBOARD 0x0000000b\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "FILE_DEVICE_MAILSLOT 0x0000000c\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "FILE_DEVICE_MIDI_IN 0x0000000d\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "FILE_DEVICE_MIDI_OUT 0x0000000e\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "FILE_DEVICE_MOUSE 0x0000000f\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "FILE_DEVICE_MULTI_UNC_PROVIDER 0x00000010\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "FILE_DEVICE_NAMED_PIPE 0x00000011\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "FILE_DEVICE_NETWORK 0x00000012\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "FILE_DEVICE_NETWORK_BROWSER 0x00000013\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "FILE_DEVICE_NETWORK_FILE_SYSTEM 0x00000014\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "FILE_DEVICE_NULL 0x00000015\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "FILE_DEVICE_PARALLEL_PORT 0x00000016\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "FILE_DEVICE_PHYSICAL_NETCARD 0x00000017\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "FILE_DEVICE_PRINTER 0x00000018\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "FILE_DEVICE_SCANNER 0x00000019\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "FILE_DEVICE_SERIAL_MOUSE_PORT 0x0000001a\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "FILE_DEVICE_SERIAL_PORT 0x0000001b\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "FILE_DEVICE_SCREEN 0x0000001c\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "FILE_DEVICE_SOUND 0x0000001d\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "FILE_DEVICE_STREAMS 0x0000001e\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "FILE_DEVICE_TAPE 0x0000001f\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "FILE_DEVICE_TAPE_FILE_SYSTEM 0x00000020\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "FILE_DEVICE_TRANSPORT 0x00000021\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "FILE_DEVICE_UNKNOWN 0x00000022\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "FILE_DEVICE_VIDEO 0x00000023\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "FILE_DEVICE_VIRTUAL_DISK 0x00000024\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "FILE_DEVICE_WAVE_IN 0x00000025\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "FILE_DEVICE_WAVE_OUT 0x00000026\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "FILE_DEVICE_8042_PORT 0x00000027\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "FILE_DEVICE_NETWORK_REDIRECTOR 0x00000028\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "FILE_DEVICE_BATTERY 0x00000029\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "FILE_DEVICE_BUS_EXTENDER 0x0000002a\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "FILE_DEVICE_MODEM 0x0000002b\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "FILE_DEVICE_VDM 0x0000002c\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "FILE_DEVICE_MASS_STORAGE 0x0000002d\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "FILE_DEVICE_SMB 0x0000002e\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "FILE_DEVICE_KS 0x0000002f\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "FILE_DEVICE_CHANGER 0x00000030\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "FILE_DEVICE_SMARTCARD 0x00000031\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "FILE_DEVICE_ACPI 0x00000032\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "FILE_DEVICE_DVD 0x00000033\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "FILE_DEVICE_FULLSCREEN_VIDEO 0x00000034\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "FILE_DEVICE_DFS_FILE_SYSTEM 0x00000035\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "FILE_DEVICE_DFS_VOLUME 0x00000036\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "FILE_DEVICE_SERENUM 0x00000037\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "FILE_DEVICE_TERMSRV 0x00000038\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "FILE_DEVICE_KSEC 0x00000039\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "FILE_DEVICE_FIPS 0x0000003A\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "FILE_DEVICE_INFINIBAND 0x0000003B\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "CTL_CODE(DeviceType,Function,Method,Access) (((DeviceType) << 16) | ((Access) << 14) | ((Function) << 2) | (Method))\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "DEVICE_TYPE_FROM_CTL_CODE(ctrlCode) (((DWORD)(ctrlCode & 0xffff0000)) >> 16)\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "METHOD_BUFFERED 0\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "METHOD_IN_DIRECT 1\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "METHOD_OUT_DIRECT 2\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "METHOD_NEITHER 3\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "METHOD_DIRECT_TO_HARDWARE METHOD_IN_DIRECT\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "METHOD_DIRECT_FROM_HARDWARE METHOD_OUT_DIRECT\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "FILE_ANY_ACCESS 0\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "FILE_SPECIAL_ACCESS (FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "FILE_READ_ACCESS (0x0001)\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "FILE_WRITE_ACCESS (0x0002)\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "_NTDDSTOR_H_ \0"
	.byte	0x1
	.uleb128 0x88
	.ascii "IOCTL_STORAGE_BASE FILE_DEVICE_MASS_STORAGE\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "IOCTL_STORAGE_CHECK_VERIFY CTL_CODE(IOCTL_STORAGE_BASE,0x0200,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "IOCTL_STORAGE_CHECK_VERIFY2 CTL_CODE(IOCTL_STORAGE_BASE,0x0200,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "IOCTL_STORAGE_MEDIA_REMOVAL CTL_CODE(IOCTL_STORAGE_BASE,0x0201,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "IOCTL_STORAGE_EJECT_MEDIA CTL_CODE(IOCTL_STORAGE_BASE,0x0202,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "IOCTL_STORAGE_LOAD_MEDIA CTL_CODE(IOCTL_STORAGE_BASE,0x0203,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "IOCTL_STORAGE_LOAD_MEDIA2 CTL_CODE(IOCTL_STORAGE_BASE,0x0203,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "IOCTL_STORAGE_RESERVE CTL_CODE(IOCTL_STORAGE_BASE,0x0204,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "IOCTL_STORAGE_RELEASE CTL_CODE(IOCTL_STORAGE_BASE,0x0205,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "IOCTL_STORAGE_FIND_NEW_DEVICES CTL_CODE(IOCTL_STORAGE_BASE,0x0206,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "IOCTL_STORAGE_EJECTION_CONTROL CTL_CODE(IOCTL_STORAGE_BASE,0x0250,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "IOCTL_STORAGE_MCN_CONTROL CTL_CODE(IOCTL_STORAGE_BASE,0x0251,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "IOCTL_STORAGE_GET_MEDIA_TYPES CTL_CODE(IOCTL_STORAGE_BASE,0x0300,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "IOCTL_STORAGE_GET_MEDIA_TYPES_EX CTL_CODE(IOCTL_STORAGE_BASE,0x0301,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "IOCTL_STORAGE_GET_MEDIA_SERIAL_NUMBER CTL_CODE(IOCTL_STORAGE_BASE,0x0304,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "IOCTL_STORAGE_GET_HOTPLUG_INFO CTL_CODE(IOCTL_STORAGE_BASE,0x0305,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "IOCTL_STORAGE_SET_HOTPLUG_INFO CTL_CODE(IOCTL_STORAGE_BASE,0x0306,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "IOCTL_STORAGE_RESET_BUS CTL_CODE(IOCTL_STORAGE_BASE,0x0400,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "IOCTL_STORAGE_RESET_DEVICE CTL_CODE(IOCTL_STORAGE_BASE,0x0401,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "IOCTL_STORAGE_BREAK_RESERVATION CTL_CODE(IOCTL_STORAGE_BASE,0x0405,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "IOCTL_STORAGE_GET_DEVICE_NUMBER CTL_CODE(IOCTL_STORAGE_BASE,0x0420,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "IOCTL_STORAGE_PREDICT_FAILURE CTL_CODE(IOCTL_STORAGE_BASE,0x0440,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "IOCTL_STORAGE_READ_CAPACITY CTL_CODE(IOCTL_STORAGE_BASE,0x0450,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "OBSOLETE_IOCTL_STORAGE_RESET_BUS CTL_CODE(IOCTL_STORAGE_BASE,0x0400,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "OBSOLETE_IOCTL_STORAGE_RESET_DEVICE CTL_CODE(IOCTL_STORAGE_BASE,0x0401,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "RECOVERED_WRITES_VALID 0x00000001\0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "UNRECOVERED_WRITES_VALID 0x00000002\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "RECOVERED_READS_VALID 0x00000004\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "UNRECOVERED_READS_VALID 0x00000008\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "WRITE_COMPRESSION_INFO_VALID 0x00000010\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "READ_COMPRESSION_INFO_VALID 0x00000020\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "TAPE_RETURN_STATISTICS __MSABI_LONG(0)\0"
	.byte	0x1
	.uleb128 0xff
	.ascii "TAPE_RETURN_ENV_INFO __MSABI_LONG(1)\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "TAPE_RESET_STATISTICS __MSABI_LONG(2)\0"
	.byte	0x1
	.uleb128 0x144
	.ascii "MEDIA_ERASEABLE 0x00000001\0"
	.byte	0x1
	.uleb128 0x145
	.ascii "MEDIA_WRITE_ONCE 0x00000002\0"
	.byte	0x1
	.uleb128 0x146
	.ascii "MEDIA_READ_ONLY 0x00000004\0"
	.byte	0x1
	.uleb128 0x147
	.ascii "MEDIA_READ_WRITE 0x00000008\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "MEDIA_WRITE_PROTECTED 0x00000100\0"
	.byte	0x1
	.uleb128 0x14a
	.ascii "MEDIA_CURRENTLY_MOUNTED 0x80000000\0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "_NTDDDISK_H_ \0"
	.byte	0x1
	.uleb128 0x19c
	.ascii "IOCTL_DISK_BASE FILE_DEVICE_DISK\0"
	.byte	0x1
	.uleb128 0x19d
	.ascii "IOCTL_DISK_GET_DRIVE_GEOMETRY CTL_CODE(IOCTL_DISK_BASE,0x0000,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "IOCTL_DISK_GET_PARTITION_INFO CTL_CODE(IOCTL_DISK_BASE,0x0001,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x19f
	.ascii "IOCTL_DISK_SET_PARTITION_INFO CTL_CODE(IOCTL_DISK_BASE,0x0002,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "IOCTL_DISK_GET_DRIVE_LAYOUT CTL_CODE(IOCTL_DISK_BASE,0x0003,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1a1
	.ascii "IOCTL_DISK_SET_DRIVE_LAYOUT CTL_CODE(IOCTL_DISK_BASE,0x0004,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "IOCTL_DISK_VERIFY CTL_CODE(IOCTL_DISK_BASE,0x0005,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "IOCTL_DISK_FORMAT_TRACKS CTL_CODE(IOCTL_DISK_BASE,0x0006,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "IOCTL_DISK_REASSIGN_BLOCKS CTL_CODE(IOCTL_DISK_BASE,0x0007,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1a5
	.ascii "IOCTL_DISK_PERFORMANCE CTL_CODE(IOCTL_DISK_BASE,0x0008,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "IOCTL_DISK_IS_WRITABLE CTL_CODE(IOCTL_DISK_BASE,0x0009,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1a7
	.ascii "IOCTL_DISK_LOGGING CTL_CODE(IOCTL_DISK_BASE,0x000a,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "IOCTL_DISK_FORMAT_TRACKS_EX CTL_CODE(IOCTL_DISK_BASE,0x000b,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1a9
	.ascii "IOCTL_DISK_HISTOGRAM_STRUCTURE CTL_CODE(IOCTL_DISK_BASE,0x000c,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "IOCTL_DISK_HISTOGRAM_DATA CTL_CODE(IOCTL_DISK_BASE,0x000d,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1ab
	.ascii "IOCTL_DISK_HISTOGRAM_RESET CTL_CODE(IOCTL_DISK_BASE,0x000e,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1ac
	.ascii "IOCTL_DISK_REQUEST_STRUCTURE CTL_CODE(IOCTL_DISK_BASE,0x000f,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1ad
	.ascii "IOCTL_DISK_REQUEST_DATA CTL_CODE(IOCTL_DISK_BASE,0x0010,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1ae
	.ascii "IOCTL_DISK_PERFORMANCE_OFF CTL_CODE(IOCTL_DISK_BASE,0x0018,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1af
	.ascii "IOCTL_DISK_CONTROLLER_NUMBER CTL_CODE(IOCTL_DISK_BASE,0x0011,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "SMART_GET_VERSION CTL_CODE(IOCTL_DISK_BASE,0x0020,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "SMART_SEND_DRIVE_COMMAND CTL_CODE(IOCTL_DISK_BASE,0x0021,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1b3
	.ascii "SMART_RCV_DRIVE_DATA CTL_CODE(IOCTL_DISK_BASE,0x0022,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "IOCTL_DISK_GET_PARTITION_INFO_EX CTL_CODE(IOCTL_DISK_BASE,0x0012,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1b6
	.ascii "IOCTL_DISK_SET_PARTITION_INFO_EX CTL_CODE(IOCTL_DISK_BASE,0x0013,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "IOCTL_DISK_GET_DRIVE_LAYOUT_EX CTL_CODE(IOCTL_DISK_BASE,0x0014,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1b8
	.ascii "IOCTL_DISK_SET_DRIVE_LAYOUT_EX CTL_CODE(IOCTL_DISK_BASE,0x0015,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "IOCTL_DISK_CREATE_DISK CTL_CODE(IOCTL_DISK_BASE,0x0016,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1ba
	.ascii "IOCTL_DISK_GET_LENGTH_INFO CTL_CODE(IOCTL_DISK_BASE,0x0017,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "IOCTL_DISK_GET_DRIVE_GEOMETRY_EX CTL_CODE(IOCTL_DISK_BASE,0x0028,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "IOCTL_DISK_REASSIGN_BLOCKS_EX CTL_CODE(IOCTL_DISK_BASE,0x0029,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "IOCTL_DISK_UPDATE_DRIVE_SIZE CTL_CODE(IOCTL_DISK_BASE,0x0032,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "IOCTL_DISK_GROW_PARTITION CTL_CODE(IOCTL_DISK_BASE,0x0034,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1c0
	.ascii "IOCTL_DISK_GET_CACHE_INFORMATION CTL_CODE(IOCTL_DISK_BASE,0x0035,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1c1
	.ascii "IOCTL_DISK_SET_CACHE_INFORMATION CTL_CODE(IOCTL_DISK_BASE,0x0036,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "OBSOLETE_DISK_GET_WRITE_CACHE_STATE CTL_CODE(IOCTL_DISK_BASE,0x0037,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "IOCTL_DISK_DELETE_DRIVE_LAYOUT CTL_CODE(IOCTL_DISK_BASE,0x0040,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1c4
	.ascii "IOCTL_DISK_UPDATE_PROPERTIES CTL_CODE(IOCTL_DISK_BASE,0x0050,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1c5
	.ascii "IOCTL_DISK_RESET_SNAPSHOT_INFO CTL_CODE(IOCTL_DISK_BASE,0x0084,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1c6
	.ascii "IOCTL_DISK_FORMAT_DRIVE CTL_CODE(IOCTL_DISK_BASE,0x00f3,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1c7
	.ascii "IOCTL_DISK_SENSE_DEVICE CTL_CODE(IOCTL_DISK_BASE,0x00f8,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "IOCTL_DISK_CHECK_VERIFY CTL_CODE(IOCTL_DISK_BASE,0x0200,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1c9
	.ascii "IOCTL_DISK_MEDIA_REMOVAL CTL_CODE(IOCTL_DISK_BASE,0x0201,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1ca
	.ascii "IOCTL_DISK_EJECT_MEDIA CTL_CODE(IOCTL_DISK_BASE,0x0202,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1cb
	.ascii "IOCTL_DISK_LOAD_MEDIA CTL_CODE(IOCTL_DISK_BASE,0x0203,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "IOCTL_DISK_RESERVE CTL_CODE(IOCTL_DISK_BASE,0x0204,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1cd
	.ascii "IOCTL_DISK_RELEASE CTL_CODE(IOCTL_DISK_BASE,0x0205,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "IOCTL_DISK_FIND_NEW_DEVICES CTL_CODE(IOCTL_DISK_BASE,0x0206,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "IOCTL_DISK_GET_MEDIA_TYPES CTL_CODE(IOCTL_DISK_BASE,0x0300,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1d0
	.ascii "IOCTL_STORAGE_QUERY_PROPERTY CTL_CODE(IOCTL_STORAGE_BASE, 0x0500, METHOD_BUFFERED, FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "PARTITION_ENTRY_UNUSED 0x00\0"
	.byte	0x1
	.uleb128 0x1d3
	.ascii "PARTITION_FAT_12 0x01\0"
	.byte	0x1
	.uleb128 0x1d4
	.ascii "PARTITION_XENIX_1 0x02\0"
	.byte	0x1
	.uleb128 0x1d5
	.ascii "PARTITION_XENIX_2 0x03\0"
	.byte	0x1
	.uleb128 0x1d6
	.ascii "PARTITION_FAT_16 0x04\0"
	.byte	0x1
	.uleb128 0x1d7
	.ascii "PARTITION_EXTENDED 0x05\0"
	.byte	0x1
	.uleb128 0x1d8
	.ascii "PARTITION_HUGE 0x06\0"
	.byte	0x1
	.uleb128 0x1d9
	.ascii "PARTITION_IFS 0x07\0"
	.byte	0x1
	.uleb128 0x1da
	.ascii "PARTITION_OS2BOOTMGR 0x0A\0"
	.byte	0x1
	.uleb128 0x1db
	.ascii "PARTITION_FAT32 0x0B\0"
	.byte	0x1
	.uleb128 0x1dc
	.ascii "PARTITION_FAT32_XINT13 0x0C\0"
	.byte	0x1
	.uleb128 0x1dd
	.ascii "PARTITION_XINT13 0x0E\0"
	.byte	0x1
	.uleb128 0x1de
	.ascii "PARTITION_XINT13_EXTENDED 0x0F\0"
	.byte	0x1
	.uleb128 0x1df
	.ascii "PARTITION_PREP 0x41\0"
	.byte	0x1
	.uleb128 0x1e0
	.ascii "PARTITION_LDM 0x42\0"
	.byte	0x1
	.uleb128 0x1e1
	.ascii "PARTITION_UNIX 0x63\0"
	.byte	0x1
	.uleb128 0x1e3
	.ascii "VALID_NTFT 0xC0\0"
	.byte	0x1
	.uleb128 0x1e5
	.ascii "PARTITION_NTFT 0x80\0"
	.byte	0x1
	.uleb128 0x1e7
	.ascii "IsRecognizedPartition(PartitionType) (((PartitionType & PARTITION_NTFT) && ((PartitionType & ~0xC0)==PARTITION_FAT_12)) || ((PartitionType & PARTITION_NTFT) && ((PartitionType & ~0xC0)==PARTITION_IFS)) || ((PartitionType & PARTITION_NTFT) && ((PartitionType & ~0xC0)==PARTITION_HUGE)) || ((PartitionType & PARTITION_NTFT) && ((PartitionType & ~0xC0)==PARTITION_FAT32)) || ((PartitionType & PARTITION_NTFT) && ((PartitionType & ~0xC0)==PARTITION_FAT32_XINT13)) || ((PartitionType & PARTITION_NTFT) && ((PartitionType & ~0xC0)==PARTITION_XINT13)) || ((PartitionType)==PARTITION_FAT_12) || ((PartitionType)==PARTITION_FAT_16) || ((PartitionType)==PARTITION_IFS) || ((PartitionType)==PARTITION_HUGE) || ((PartitionType)==PARTITION_FAT32) || ((PartitionType)==PARTITION_FAT32_XINT13) || ((PartitionType)==PARTITION_XINT13))\0"
	.byte	0x1
	.uleb128 0x1e8
	.ascii "IsContainerPartition(PartitionType) ((PartitionType==PARTITION_EXTENDED) || (PartitionType==PARTITION_XINT13_EXTENDED))\0"
	.byte	0x1
	.uleb128 0x1e9
	.ascii "IsFTPartition(PartitionType) (((PartitionType)&PARTITION_NTFT) && IsRecognizedPartition(PartitionType))\0"
	.byte	0x1
	.uleb128 0x20f
	.ascii "WMI_DISK_GEOMETRY_GUID { 0x25007f51,0x57c2,0x11d1,{ 0xa5,0x28,0x0,0xa0,0xc9,0x6,0x29,0x10 } }\0"
	.byte	0x3
	.uleb128 0x231
	.uleb128 0x16a
	.byte	0x4
	.byte	0x3
	.uleb128 0x237
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x244
	.ascii "GPT_ATTRIBUTE_PLATFORM_REQUIRED (0x0000000000000001)\0"
	.byte	0x1
	.uleb128 0x246
	.ascii "GPT_BASIC_DATA_ATTRIBUTE_NO_DRIVE_LETTER (0x8000000000000000)\0"
	.byte	0x1
	.uleb128 0x247
	.ascii "GPT_BASIC_DATA_ATTRIBUTE_HIDDEN (0x4000000000000000)\0"
	.byte	0x1
	.uleb128 0x248
	.ascii "GPT_BASIC_DATA_ATTRIBUTE_SHADOW_COPY (0x2000000000000000)\0"
	.byte	0x1
	.uleb128 0x249
	.ascii "GPT_BASIC_DATA_ATTRIBUTE_READ_ONLY (0x1000000000000000)\0"
	.byte	0x1
	.uleb128 0x2c3
	.ascii "DiskGeometryGetPartition(Geometry) ((PDISK_PARTITION_INFO)((Geometry)->Data))\0"
	.byte	0x1
	.uleb128 0x2c4
	.ascii "DiskGeometryGetDetect(Geometry) ((PDISK_DETECTION_INFO)(((DWORD_PTR)DiskGeometryGetPartition(Geometry)+ DiskGeometryGetPartition(Geometry)->SizeOfPartitionInfo)))\0"
	.byte	0x1
	.uleb128 0x2ef
	.ascii "HIST_NO_OF_BUCKETS 24\0"
	.byte	0x1
	.uleb128 0x2f6
	.ascii "HISTOGRAM_BUCKET_SIZE sizeof(HISTOGRAM_BUCKET)\0"
	.byte	0x1
	.uleb128 0x306
	.ascii "DISK_HISTOGRAM_SIZE sizeof(DISK_HISTOGRAM)\0"
	.byte	0x1
	.uleb128 0x327
	.ascii "DISK_LOGGING_START 0\0"
	.byte	0x1
	.uleb128 0x328
	.ascii "DISK_LOGGING_STOP 1\0"
	.byte	0x1
	.uleb128 0x329
	.ascii "DISK_LOGGING_DUMP 2\0"
	.byte	0x1
	.uleb128 0x32a
	.ascii "DISK_BINNING 3\0"
	.byte	0x3
	.uleb128 0x345
	.uleb128 0x16a
	.byte	0x4
	.byte	0x3
	.uleb128 0x34e
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x350
	.ascii "CAP_ATA_ID_CMD 1\0"
	.byte	0x1
	.uleb128 0x351
	.ascii "CAP_ATAPI_ID_CMD 2\0"
	.byte	0x1
	.uleb128 0x352
	.ascii "CAP_SMART_CMD 4\0"
	.byte	0x3
	.uleb128 0x354
	.uleb128 0x16a
	.byte	0x4
	.byte	0x3
	.uleb128 0x35f
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x361
	.ascii "ATAPI_ID_CMD 0xA1\0"
	.byte	0x1
	.uleb128 0x362
	.ascii "ID_CMD 0xEC\0"
	.byte	0x1
	.uleb128 0x363
	.ascii "SMART_CMD 0xB0\0"
	.byte	0x1
	.uleb128 0x365
	.ascii "SMART_CYL_LOW 0x4F\0"
	.byte	0x1
	.uleb128 0x366
	.ascii "SMART_CYL_HI 0xC2\0"
	.byte	0x3
	.uleb128 0x368
	.uleb128 0x16a
	.byte	0x4
	.byte	0x3
	.uleb128 0x371
	.uleb128 0x143
	.byte	0x4
	.byte	0x3
	.uleb128 0x373
	.uleb128 0x16a
	.byte	0x4
	.byte	0x3
	.uleb128 0x37a
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x37c
	.ascii "SMART_NO_ERROR 0\0"
	.byte	0x1
	.uleb128 0x37d
	.ascii "SMART_IDE_ERROR 1\0"
	.byte	0x1
	.uleb128 0x37e
	.ascii "SMART_INVALID_FLAG 2\0"
	.byte	0x1
	.uleb128 0x37f
	.ascii "SMART_INVALID_COMMAND 3\0"
	.byte	0x1
	.uleb128 0x380
	.ascii "SMART_INVALID_BUFFER 4\0"
	.byte	0x1
	.uleb128 0x381
	.ascii "SMART_INVALID_DRIVE 5\0"
	.byte	0x1
	.uleb128 0x382
	.ascii "SMART_INVALID_IOCTL 6\0"
	.byte	0x1
	.uleb128 0x383
	.ascii "SMART_ERROR_NO_MEM 7\0"
	.byte	0x1
	.uleb128 0x384
	.ascii "SMART_INVALID_REGISTER 8\0"
	.byte	0x1
	.uleb128 0x385
	.ascii "SMART_NOT_SUPPORTED 9\0"
	.byte	0x1
	.uleb128 0x386
	.ascii "SMART_NO_IDE_DEVICE 10\0"
	.byte	0x1
	.uleb128 0x388
	.ascii "SMART_OFFLINE_ROUTINE_OFFLINE 0\0"
	.byte	0x1
	.uleb128 0x389
	.ascii "SMART_SHORT_SELFTEST_OFFLINE 1\0"
	.byte	0x1
	.uleb128 0x38a
	.ascii "SMART_EXTENDED_SELFTEST_OFFLINE 2\0"
	.byte	0x1
	.uleb128 0x38b
	.ascii "SMART_ABORT_OFFLINE_SELFTEST 127\0"
	.byte	0x1
	.uleb128 0x38c
	.ascii "SMART_SHORT_SELFTEST_CAPTIVE 129\0"
	.byte	0x1
	.uleb128 0x38d
	.ascii "SMART_EXTENDED_SELFTEST_CAPTIVE 130\0"
	.byte	0x3
	.uleb128 0x38f
	.uleb128 0x16a
	.byte	0x4
	.byte	0x3
	.uleb128 0x395
	.uleb128 0x143
	.byte	0x4
	.byte	0x1
	.uleb128 0x397
	.ascii "READ_ATTRIBUTE_BUFFER_SIZE 512\0"
	.byte	0x1
	.uleb128 0x398
	.ascii "IDENTIFY_BUFFER_SIZE 512\0"
	.byte	0x1
	.uleb128 0x399
	.ascii "READ_THRESHOLD_BUFFER_SIZE 512\0"
	.byte	0x1
	.uleb128 0x39a
	.ascii "SMART_LOG_SECTOR_SIZE 512\0"
	.byte	0x1
	.uleb128 0x39c
	.ascii "READ_ATTRIBUTES 0xD0\0"
	.byte	0x1
	.uleb128 0x39d
	.ascii "READ_THRESHOLDS 0xD1\0"
	.byte	0x1
	.uleb128 0x39e
	.ascii "ENABLE_DISABLE_AUTOSAVE 0xD2\0"
	.byte	0x1
	.uleb128 0x39f
	.ascii "SAVE_ATTRIBUTE_VALUES 0xD3\0"
	.byte	0x1
	.uleb128 0x3a0
	.ascii "EXECUTE_OFFLINE_DIAGS 0xD4\0"
	.byte	0x1
	.uleb128 0x3a1
	.ascii "SMART_READ_LOG 0xD5\0"
	.byte	0x1
	.uleb128 0x3a2
	.ascii "SMART_WRITE_LOG 0xd6\0"
	.byte	0x1
	.uleb128 0x3a3
	.ascii "ENABLE_SMART 0xD8\0"
	.byte	0x1
	.uleb128 0x3a4
	.ascii "DISABLE_SMART 0xD9\0"
	.byte	0x1
	.uleb128 0x3a5
	.ascii "RETURN_SMART_STATUS 0xDA\0"
	.byte	0x1
	.uleb128 0x3a6
	.ascii "ENABLE_DISABLE_AUTO_OFFLINE 0xDB\0"
	.byte	0x1
	.uleb128 0x3ab
	.ascii "IOCTL_CHANGER_BASE FILE_DEVICE_CHANGER\0"
	.byte	0x1
	.uleb128 0x3ac
	.ascii "IOCTL_CHANGER_GET_PARAMETERS CTL_CODE(IOCTL_CHANGER_BASE,0x0000,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x3ad
	.ascii "IOCTL_CHANGER_GET_STATUS CTL_CODE(IOCTL_CHANGER_BASE,0x0001,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x3ae
	.ascii "IOCTL_CHANGER_GET_PRODUCT_DATA CTL_CODE(IOCTL_CHANGER_BASE,0x0002,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x3af
	.ascii "IOCTL_CHANGER_SET_ACCESS CTL_CODE(IOCTL_CHANGER_BASE,0x0004,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x3b0
	.ascii "IOCTL_CHANGER_GET_ELEMENT_STATUS CTL_CODE(IOCTL_CHANGER_BASE,0x0005,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x3b1
	.ascii "IOCTL_CHANGER_INITIALIZE_ELEMENT_STATUS CTL_CODE(IOCTL_CHANGER_BASE,0x0006,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x3b2
	.ascii "IOCTL_CHANGER_SET_POSITION CTL_CODE(IOCTL_CHANGER_BASE,0x0007,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x3b3
	.ascii "IOCTL_CHANGER_EXCHANGE_MEDIUM CTL_CODE(IOCTL_CHANGER_BASE,0x0008,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x3b4
	.ascii "IOCTL_CHANGER_MOVE_MEDIUM CTL_CODE(IOCTL_CHANGER_BASE,0x0009,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x3b5
	.ascii "IOCTL_CHANGER_REINITIALIZE_TRANSPORT CTL_CODE(IOCTL_CHANGER_BASE,0x000A,METHOD_BUFFERED,FILE_READ_ACCESS)\0"
	.byte	0x1
	.uleb128 0x3b6
	.ascii "IOCTL_CHANGER_QUERY_VOLUME_TAGS CTL_CODE(IOCTL_CHANGER_BASE,0x000B,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x3b8
	.ascii "MAX_VOLUME_ID_SIZE 36\0"
	.byte	0x1
	.uleb128 0x3b9
	.ascii "MAX_VOLUME_TEMPLATE_SIZE 40\0"
	.byte	0x1
	.uleb128 0x3bb
	.ascii "VENDOR_ID_LENGTH 8\0"
	.byte	0x1
	.uleb128 0x3bc
	.ascii "PRODUCT_ID_LENGTH 16\0"
	.byte	0x1
	.uleb128 0x3bd
	.ascii "REVISION_LENGTH 4\0"
	.byte	0x1
	.uleb128 0x3be
	.ascii "SERIAL_NUMBER_LENGTH 32\0"
	.byte	0x1
	.uleb128 0x3ce
	.ascii "CHANGER_BAR_CODE_SCANNER_INSTALLED 0x00000001\0"
	.byte	0x1
	.uleb128 0x3cf
	.ascii "CHANGER_INIT_ELEM_STAT_WITH_RANGE 0x00000002\0"
	.byte	0x1
	.uleb128 0x3d0
	.ascii "CHANGER_CLOSE_IEPORT 0x00000004\0"
	.byte	0x1
	.uleb128 0x3d1
	.ascii "CHANGER_OPEN_IEPORT 0x00000008\0"
	.byte	0x1
	.uleb128 0x3d3
	.ascii "CHANGER_STATUS_NON_VOLATILE 0x00000010\0"
	.byte	0x1
	.uleb128 0x3d4
	.ascii "CHANGER_EXCHANGE_MEDIA 0x00000020\0"
	.byte	0x1
	.uleb128 0x3d5
	.ascii "CHANGER_CLEANER_SLOT 0x00000040\0"
	.byte	0x1
	.uleb128 0x3d6
	.ascii "CHANGER_LOCK_UNLOCK 0x00000080\0"
	.byte	0x1
	.uleb128 0x3d8
	.ascii "CHANGER_CARTRIDGE_MAGAZINE 0x00000100\0"
	.byte	0x1
	.uleb128 0x3d9
	.ascii "CHANGER_MEDIUM_FLIP 0x00000200\0"
	.byte	0x1
	.uleb128 0x3da
	.ascii "CHANGER_POSITION_TO_ELEMENT 0x00000400\0"
	.byte	0x1
	.uleb128 0x3db
	.ascii "CHANGER_REPORT_IEPORT_STATE 0x00000800\0"
	.byte	0x1
	.uleb128 0x3dd
	.ascii "CHANGER_STORAGE_DRIVE 0x00001000\0"
	.byte	0x1
	.uleb128 0x3de
	.ascii "CHANGER_STORAGE_IEPORT 0x00002000\0"
	.byte	0x1
	.uleb128 0x3df
	.ascii "CHANGER_STORAGE_SLOT 0x00004000\0"
	.byte	0x1
	.uleb128 0x3e0
	.ascii "CHANGER_STORAGE_TRANSPORT 0x00008000\0"
	.byte	0x1
	.uleb128 0x3e2
	.ascii "CHANGER_DRIVE_CLEANING_REQUIRED 0x00010000\0"
	.byte	0x1
	.uleb128 0x3e4
	.ascii "CHANGER_PREDISMOUNT_EJECT_REQUIRED 0x00020000\0"
	.byte	0x1
	.uleb128 0x3e6
	.ascii "CHANGER_CLEANER_ACCESS_NOT_VALID 0x00040000\0"
	.byte	0x1
	.uleb128 0x3e7
	.ascii "CHANGER_PREMOUNT_EJECT_REQUIRED 0x00080000\0"
	.byte	0x1
	.uleb128 0x3e9
	.ascii "CHANGER_VOLUME_IDENTIFICATION 0x00100000\0"
	.byte	0x1
	.uleb128 0x3ea
	.ascii "CHANGER_VOLUME_SEARCH 0x00200000\0"
	.byte	0x1
	.uleb128 0x3eb
	.ascii "CHANGER_VOLUME_ASSERT 0x00400000\0"
	.byte	0x1
	.uleb128 0x3ec
	.ascii "CHANGER_VOLUME_REPLACE 0x00800000\0"
	.byte	0x1
	.uleb128 0x3ed
	.ascii "CHANGER_VOLUME_UNDEFINE 0x01000000\0"
	.byte	0x1
	.uleb128 0x3ef
	.ascii "CHANGER_SERIAL_NUMBER_VALID 0x04000000\0"
	.byte	0x1
	.uleb128 0x3f1
	.ascii "CHANGER_DEVICE_REINITIALIZE_CAPABLE 0x08000000\0"
	.byte	0x1
	.uleb128 0x3f2
	.ascii "CHANGER_KEYPAD_ENABLE_DISABLE 0x10000000\0"
	.byte	0x1
	.uleb128 0x3f3
	.ascii "CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS 0x20000000\0"
	.byte	0x1
	.uleb128 0x3f5
	.ascii "CHANGER_RESERVED_BIT 0x80000000\0"
	.byte	0x1
	.uleb128 0x3f7
	.ascii "CHANGER_PREDISMOUNT_ALIGN_TO_SLOT 0x80000001\0"
	.byte	0x1
	.uleb128 0x3f8
	.ascii "CHANGER_PREDISMOUNT_ALIGN_TO_DRIVE 0x80000002\0"
	.byte	0x1
	.uleb128 0x3f9
	.ascii "CHANGER_CLEANER_AUTODISMOUNT 0x80000004\0"
	.byte	0x1
	.uleb128 0x3fa
	.ascii "CHANGER_TRUE_EXCHANGE_CAPABLE 0x80000008\0"
	.byte	0x1
	.uleb128 0x3fb
	.ascii "CHANGER_SLOTS_USE_TRAYS 0x80000010\0"
	.byte	0x1
	.uleb128 0x3fc
	.ascii "CHANGER_RTN_MEDIA_TO_ORIGINAL_ADDR 0x80000020\0"
	.byte	0x1
	.uleb128 0x3fd
	.ascii "CHANGER_CLEANER_OPS_NOT_SUPPORTED 0x80000040\0"
	.byte	0x1
	.uleb128 0x3fe
	.ascii "CHANGER_IEPORT_USER_CONTROL_OPEN 0x80000080\0"
	.byte	0x1
	.uleb128 0x3ff
	.ascii "CHANGER_IEPORT_USER_CONTROL_CLOSE 0x80000100\0"
	.byte	0x1
	.uleb128 0x400
	.ascii "CHANGER_MOVE_EXTENDS_IEPORT 0x80000200\0"
	.byte	0x1
	.uleb128 0x401
	.ascii "CHANGER_MOVE_RETRACTS_IEPORT 0x80000400\0"
	.byte	0x1
	.uleb128 0x403
	.ascii "CHANGER_TO_TRANSPORT 0x01\0"
	.byte	0x1
	.uleb128 0x404
	.ascii "CHANGER_TO_SLOT 0x02\0"
	.byte	0x1
	.uleb128 0x405
	.ascii "CHANGER_TO_IEPORT 0x04\0"
	.byte	0x1
	.uleb128 0x406
	.ascii "CHANGER_TO_DRIVE 0x08\0"
	.byte	0x1
	.uleb128 0x408
	.ascii "LOCK_UNLOCK_IEPORT 0x01\0"
	.byte	0x1
	.uleb128 0x409
	.ascii "LOCK_UNLOCK_DOOR 0x02\0"
	.byte	0x1
	.uleb128 0x40a
	.ascii "LOCK_UNLOCK_KEYPAD 0x04\0"
	.byte	0x1
	.uleb128 0x433
	.ascii "LOCK_ELEMENT 0\0"
	.byte	0x1
	.uleb128 0x434
	.ascii "UNLOCK_ELEMENT 1\0"
	.byte	0x1
	.uleb128 0x435
	.ascii "EXTEND_IEPORT 2\0"
	.byte	0x1
	.uleb128 0x436
	.ascii "RETRACT_IEPORT 3\0"
	.byte	0x1
	.uleb128 0x45d
	.ascii "ELEMENT_STATUS_FULL 0x00000001\0"
	.byte	0x1
	.uleb128 0x45e
	.ascii "ELEMENT_STATUS_IMPEXP 0x00000002\0"
	.byte	0x1
	.uleb128 0x45f
	.ascii "ELEMENT_STATUS_EXCEPT 0x00000004\0"
	.byte	0x1
	.uleb128 0x460
	.ascii "ELEMENT_STATUS_ACCESS 0x00000008\0"
	.byte	0x1
	.uleb128 0x461
	.ascii "ELEMENT_STATUS_EXENAB 0x00000010\0"
	.byte	0x1
	.uleb128 0x462
	.ascii "ELEMENT_STATUS_INENAB 0x00000020\0"
	.byte	0x1
	.uleb128 0x464
	.ascii "ELEMENT_STATUS_PRODUCT_DATA 0x00000040\0"
	.byte	0x1
	.uleb128 0x466
	.ascii "ELEMENT_STATUS_LUN_VALID 0x00001000\0"
	.byte	0x1
	.uleb128 0x467
	.ascii "ELEMENT_STATUS_ID_VALID 0x00002000\0"
	.byte	0x1
	.uleb128 0x468
	.ascii "ELEMENT_STATUS_NOT_BUS 0x00008000\0"
	.byte	0x1
	.uleb128 0x469
	.ascii "ELEMENT_STATUS_INVERT 0x00400000\0"
	.byte	0x1
	.uleb128 0x46a
	.ascii "ELEMENT_STATUS_SVALID 0x00800000\0"
	.byte	0x1
	.uleb128 0x46c
	.ascii "ELEMENT_STATUS_PVOLTAG 0x10000000\0"
	.byte	0x1
	.uleb128 0x46d
	.ascii "ELEMENT_STATUS_AVOLTAG 0x20000000\0"
	.byte	0x1
	.uleb128 0x46f
	.ascii "ERROR_LABEL_UNREADABLE 0x00000001\0"
	.byte	0x1
	.uleb128 0x470
	.ascii "ERROR_LABEL_QUESTIONABLE 0x00000002\0"
	.byte	0x1
	.uleb128 0x471
	.ascii "ERROR_SLOT_NOT_PRESENT 0x00000004\0"
	.byte	0x1
	.uleb128 0x472
	.ascii "ERROR_DRIVE_NOT_INSTALLED 0x00000008\0"
	.byte	0x1
	.uleb128 0x473
	.ascii "ERROR_TRAY_MALFUNCTION 0x00000010\0"
	.byte	0x1
	.uleb128 0x474
	.ascii "ERROR_INIT_STATUS_NEEDED 0x00000011\0"
	.byte	0x1
	.uleb128 0x475
	.ascii "ERROR_UNHANDLED_ERROR 0xFFFFFFFF\0"
	.byte	0x1
	.uleb128 0x49d
	.ascii "SEARCH_ALL 0x0\0"
	.byte	0x1
	.uleb128 0x49e
	.ascii "SEARCH_PRIMARY 0x1\0"
	.byte	0x1
	.uleb128 0x49f
	.ascii "SEARCH_ALTERNATE 0x2\0"
	.byte	0x1
	.uleb128 0x4a0
	.ascii "SEARCH_ALL_NO_SEQ 0x4\0"
	.byte	0x1
	.uleb128 0x4a1
	.ascii "SEARCH_PRI_NO_SEQ 0x5\0"
	.byte	0x1
	.uleb128 0x4a2
	.ascii "SEARCH_ALT_NO_SEQ 0x6\0"
	.byte	0x1
	.uleb128 0x4a4
	.ascii "ASSERT_PRIMARY 0x8\0"
	.byte	0x1
	.uleb128 0x4a5
	.ascii "ASSERT_ALTERNATE 0x9\0"
	.byte	0x1
	.uleb128 0x4a7
	.ascii "REPLACE_PRIMARY 0xA\0"
	.byte	0x1
	.uleb128 0x4a8
	.ascii "REPLACE_ALTERNATE 0xB\0"
	.byte	0x1
	.uleb128 0x4aa
	.ascii "UNDEFINE_PRIMARY 0xC\0"
	.byte	0x1
	.uleb128 0x4ab
	.ascii "UNDEFINE_ALTERNATE 0xD\0"
	.byte	0x1
	.uleb128 0x4b3
	.ascii "IOCTL_SERIAL_LSRMST_INSERT CTL_CODE(FILE_DEVICE_SERIAL_PORT,31,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4b5
	.ascii "IOCTL_SERENUM_EXPOSE_HARDWARE CTL_CODE(FILE_DEVICE_SERENUM,128,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4b6
	.ascii "IOCTL_SERENUM_REMOVE_HARDWARE CTL_CODE(FILE_DEVICE_SERENUM,129,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4b7
	.ascii "IOCTL_SERENUM_PORT_DESC CTL_CODE(FILE_DEVICE_SERENUM,130,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4b8
	.ascii "IOCTL_SERENUM_GET_PORT_NAME CTL_CODE(FILE_DEVICE_SERENUM,131,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4ba
	.ascii "SERIAL_LSRMST_ESCAPE ((BYTE)0x00)\0"
	.byte	0x1
	.uleb128 0x4bc
	.ascii "SERIAL_LSRMST_LSR_DATA ((BYTE)0x01)\0"
	.byte	0x1
	.uleb128 0x4be
	.ascii "SERIAL_LSRMST_LSR_NODATA ((BYTE)0x02)\0"
	.byte	0x1
	.uleb128 0x4c0
	.ascii "SERIAL_LSRMST_MST ((BYTE)0x03)\0"
	.byte	0x1
	.uleb128 0x4c2
	.ascii "SERIAL_IOC_FCR_FIFO_ENABLE ((DWORD)0x00000001)\0"
	.byte	0x1
	.uleb128 0x4c3
	.ascii "SERIAL_IOC_FCR_RCVR_RESET ((DWORD)0x00000002)\0"
	.byte	0x1
	.uleb128 0x4c4
	.ascii "SERIAL_IOC_FCR_XMIT_RESET ((DWORD)0x00000004)\0"
	.byte	0x1
	.uleb128 0x4c5
	.ascii "SERIAL_IOC_FCR_DMA_MODE ((DWORD)0x00000008)\0"
	.byte	0x1
	.uleb128 0x4c6
	.ascii "SERIAL_IOC_FCR_RES1 ((DWORD)0x00000010)\0"
	.byte	0x1
	.uleb128 0x4c7
	.ascii "SERIAL_IOC_FCR_RES2 ((DWORD)0x00000020)\0"
	.byte	0x1
	.uleb128 0x4c8
	.ascii "SERIAL_IOC_FCR_RCVR_TRIGGER_LSB ((DWORD)0x00000040)\0"
	.byte	0x1
	.uleb128 0x4c9
	.ascii "SERIAL_IOC_FCR_RCVR_TRIGGER_MSB ((DWORD)0x00000080)\0"
	.byte	0x1
	.uleb128 0x4cb
	.ascii "SERIAL_IOC_MCR_DTR ((DWORD)0x00000001)\0"
	.byte	0x1
	.uleb128 0x4cc
	.ascii "SERIAL_IOC_MCR_RTS ((DWORD)0x00000002)\0"
	.byte	0x1
	.uleb128 0x4cd
	.ascii "SERIAL_IOC_MCR_OUT1 ((DWORD)0x00000004)\0"
	.byte	0x1
	.uleb128 0x4ce
	.ascii "SERIAL_IOC_MCR_OUT2 ((DWORD)0x00000008)\0"
	.byte	0x1
	.uleb128 0x4cf
	.ascii "SERIAL_IOC_MCR_LOOP ((DWORD)0x00000010)\0"
	.byte	0x1
	.uleb128 0x4d2
	.ascii "_FILESYSTEMFSCTL_ \0"
	.byte	0x1
	.uleb128 0x4d4
	.ascii "FSCTL_REQUEST_OPLOCK_LEVEL_1 CTL_CODE(FILE_DEVICE_FILE_SYSTEM,0,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4d5
	.ascii "FSCTL_REQUEST_OPLOCK_LEVEL_2 CTL_CODE(FILE_DEVICE_FILE_SYSTEM,1,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4d6
	.ascii "FSCTL_REQUEST_BATCH_OPLOCK CTL_CODE(FILE_DEVICE_FILE_SYSTEM,2,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4d7
	.ascii "FSCTL_OPLOCK_BREAK_ACKNOWLEDGE CTL_CODE(FILE_DEVICE_FILE_SYSTEM,3,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4d8
	.ascii "FSCTL_OPBATCH_ACK_CLOSE_PENDING CTL_CODE(FILE_DEVICE_FILE_SYSTEM,4,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4d9
	.ascii "FSCTL_OPLOCK_BREAK_NOTIFY CTL_CODE(FILE_DEVICE_FILE_SYSTEM,5,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4da
	.ascii "FSCTL_LOCK_VOLUME CTL_CODE(FILE_DEVICE_FILE_SYSTEM,6,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4db
	.ascii "FSCTL_UNLOCK_VOLUME CTL_CODE(FILE_DEVICE_FILE_SYSTEM,7,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4dc
	.ascii "FSCTL_DISMOUNT_VOLUME CTL_CODE(FILE_DEVICE_FILE_SYSTEM,8,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4de
	.ascii "FSCTL_IS_VOLUME_MOUNTED CTL_CODE(FILE_DEVICE_FILE_SYSTEM,10,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4df
	.ascii "FSCTL_IS_PATHNAME_VALID CTL_CODE(FILE_DEVICE_FILE_SYSTEM,11,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4e0
	.ascii "FSCTL_MARK_VOLUME_DIRTY CTL_CODE(FILE_DEVICE_FILE_SYSTEM,12,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4e2
	.ascii "FSCTL_QUERY_RETRIEVAL_POINTERS CTL_CODE(FILE_DEVICE_FILE_SYSTEM,14,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4e3
	.ascii "FSCTL_GET_COMPRESSION CTL_CODE(FILE_DEVICE_FILE_SYSTEM,15,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4e4
	.ascii "FSCTL_SET_COMPRESSION CTL_CODE(FILE_DEVICE_FILE_SYSTEM,16,METHOD_BUFFERED,FILE_READ_DATA | FILE_WRITE_DATA)\0"
	.byte	0x1
	.uleb128 0x4e6
	.ascii "FSCTL_MARK_AS_SYSTEM_HIVE CTL_CODE(FILE_DEVICE_FILE_SYSTEM,19,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4e7
	.ascii "FSCTL_OPLOCK_BREAK_ACK_NO_2 CTL_CODE(FILE_DEVICE_FILE_SYSTEM,20,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4e8
	.ascii "FSCTL_INVALIDATE_VOLUMES CTL_CODE(FILE_DEVICE_FILE_SYSTEM,21,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4e9
	.ascii "FSCTL_QUERY_FAT_BPB CTL_CODE(FILE_DEVICE_FILE_SYSTEM,22,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4ea
	.ascii "FSCTL_REQUEST_FILTER_OPLOCK CTL_CODE(FILE_DEVICE_FILE_SYSTEM,23,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4eb
	.ascii "FSCTL_FILESYSTEM_GET_STATISTICS CTL_CODE(FILE_DEVICE_FILE_SYSTEM,24,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4ec
	.ascii "FSCTL_GET_NTFS_VOLUME_DATA CTL_CODE(FILE_DEVICE_FILE_SYSTEM,25,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4ed
	.ascii "FSCTL_GET_NTFS_FILE_RECORD CTL_CODE(FILE_DEVICE_FILE_SYSTEM,26,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4ee
	.ascii "FSCTL_GET_VOLUME_BITMAP CTL_CODE(FILE_DEVICE_FILE_SYSTEM,27,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4ef
	.ascii "FSCTL_GET_RETRIEVAL_POINTERS CTL_CODE(FILE_DEVICE_FILE_SYSTEM,28,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4f0
	.ascii "FSCTL_MOVE_FILE CTL_CODE(FILE_DEVICE_FILE_SYSTEM,29,METHOD_BUFFERED,FILE_SPECIAL_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4f1
	.ascii "FSCTL_IS_VOLUME_DIRTY CTL_CODE(FILE_DEVICE_FILE_SYSTEM,30,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4f2
	.ascii "FSCTL_ALLOW_EXTENDED_DASD_IO CTL_CODE(FILE_DEVICE_FILE_SYSTEM,32,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4f3
	.ascii "FSCTL_FIND_FILES_BY_SID CTL_CODE(FILE_DEVICE_FILE_SYSTEM,35,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4f4
	.ascii "FSCTL_SET_OBJECT_ID CTL_CODE(FILE_DEVICE_FILE_SYSTEM,38,METHOD_BUFFERED,FILE_SPECIAL_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4f5
	.ascii "FSCTL_GET_OBJECT_ID CTL_CODE(FILE_DEVICE_FILE_SYSTEM,39,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4f6
	.ascii "FSCTL_DELETE_OBJECT_ID CTL_CODE(FILE_DEVICE_FILE_SYSTEM,40,METHOD_BUFFERED,FILE_SPECIAL_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4f7
	.ascii "FSCTL_SET_REPARSE_POINT CTL_CODE(FILE_DEVICE_FILE_SYSTEM,41,METHOD_BUFFERED,FILE_SPECIAL_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4f8
	.ascii "FSCTL_GET_REPARSE_POINT CTL_CODE(FILE_DEVICE_FILE_SYSTEM,42,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4f9
	.ascii "FSCTL_DELETE_REPARSE_POINT CTL_CODE(FILE_DEVICE_FILE_SYSTEM,43,METHOD_BUFFERED,FILE_SPECIAL_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4fa
	.ascii "FSCTL_ENUM_USN_DATA CTL_CODE(FILE_DEVICE_FILE_SYSTEM,44,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4fb
	.ascii "FSCTL_SECURITY_ID_CHECK CTL_CODE(FILE_DEVICE_FILE_SYSTEM,45,METHOD_NEITHER,FILE_READ_DATA)\0"
	.byte	0x1
	.uleb128 0x4fc
	.ascii "FSCTL_READ_USN_JOURNAL CTL_CODE(FILE_DEVICE_FILE_SYSTEM,46,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4fd
	.ascii "FSCTL_SET_OBJECT_ID_EXTENDED CTL_CODE(FILE_DEVICE_FILE_SYSTEM,47,METHOD_BUFFERED,FILE_SPECIAL_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4fe
	.ascii "FSCTL_CREATE_OR_GET_OBJECT_ID CTL_CODE(FILE_DEVICE_FILE_SYSTEM,48,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x4ff
	.ascii "FSCTL_SET_SPARSE CTL_CODE(FILE_DEVICE_FILE_SYSTEM,49,METHOD_BUFFERED,FILE_SPECIAL_ACCESS)\0"
	.byte	0x1
	.uleb128 0x500
	.ascii "FSCTL_SET_ZERO_DATA CTL_CODE(FILE_DEVICE_FILE_SYSTEM,50,METHOD_BUFFERED,FILE_WRITE_DATA)\0"
	.byte	0x1
	.uleb128 0x501
	.ascii "FSCTL_QUERY_ALLOCATED_RANGES CTL_CODE(FILE_DEVICE_FILE_SYSTEM,51,METHOD_NEITHER,FILE_READ_DATA)\0"
	.byte	0x1
	.uleb128 0x502
	.ascii "FSCTL_SET_ENCRYPTION CTL_CODE(FILE_DEVICE_FILE_SYSTEM,53,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x503
	.ascii "FSCTL_ENCRYPTION_FSCTL_IO CTL_CODE(FILE_DEVICE_FILE_SYSTEM,54,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x504
	.ascii "FSCTL_WRITE_RAW_ENCRYPTED CTL_CODE(FILE_DEVICE_FILE_SYSTEM,55,METHOD_NEITHER,FILE_SPECIAL_ACCESS)\0"
	.byte	0x1
	.uleb128 0x505
	.ascii "FSCTL_READ_RAW_ENCRYPTED CTL_CODE(FILE_DEVICE_FILE_SYSTEM,56,METHOD_NEITHER,FILE_SPECIAL_ACCESS)\0"
	.byte	0x1
	.uleb128 0x506
	.ascii "FSCTL_CREATE_USN_JOURNAL CTL_CODE(FILE_DEVICE_FILE_SYSTEM,57,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x507
	.ascii "FSCTL_READ_FILE_USN_DATA CTL_CODE(FILE_DEVICE_FILE_SYSTEM,58,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x508
	.ascii "FSCTL_WRITE_USN_CLOSE_RECORD CTL_CODE(FILE_DEVICE_FILE_SYSTEM,59,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x509
	.ascii "FSCTL_EXTEND_VOLUME CTL_CODE(FILE_DEVICE_FILE_SYSTEM,60,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x50a
	.ascii "FSCTL_QUERY_USN_JOURNAL CTL_CODE(FILE_DEVICE_FILE_SYSTEM,61,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x50b
	.ascii "FSCTL_DELETE_USN_JOURNAL CTL_CODE(FILE_DEVICE_FILE_SYSTEM,62,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x50c
	.ascii "FSCTL_MARK_HANDLE CTL_CODE(FILE_DEVICE_FILE_SYSTEM,63,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x50d
	.ascii "FSCTL_SIS_COPYFILE CTL_CODE(FILE_DEVICE_FILE_SYSTEM,64,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x50e
	.ascii "FSCTL_SIS_LINK_FILES CTL_CODE(FILE_DEVICE_FILE_SYSTEM,65,METHOD_BUFFERED,FILE_READ_DATA | FILE_WRITE_DATA)\0"
	.byte	0x1
	.uleb128 0x50f
	.ascii "FSCTL_HSM_MSG CTL_CODE(FILE_DEVICE_FILE_SYSTEM,66,METHOD_BUFFERED,FILE_READ_DATA | FILE_WRITE_DATA)\0"
	.byte	0x1
	.uleb128 0x510
	.ascii "FSCTL_HSM_DATA CTL_CODE(FILE_DEVICE_FILE_SYSTEM,68,METHOD_NEITHER,FILE_READ_DATA | FILE_WRITE_DATA)\0"
	.byte	0x1
	.uleb128 0x511
	.ascii "FSCTL_RECALL_FILE CTL_CODE(FILE_DEVICE_FILE_SYSTEM,69,METHOD_NEITHER,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x512
	.ascii "FSCTL_READ_FROM_PLEX CTL_CODE(FILE_DEVICE_FILE_SYSTEM,71,METHOD_OUT_DIRECT,FILE_READ_DATA)\0"
	.byte	0x1
	.uleb128 0x513
	.ascii "FSCTL_FILE_PREFETCH CTL_CODE(FILE_DEVICE_FILE_SYSTEM,72,METHOD_BUFFERED,FILE_SPECIAL_ACCESS)\0"
	.byte	0x1
	.uleb128 0x597
	.ascii "USN_PAGE_SIZE (0x1000)\0"
	.byte	0x1
	.uleb128 0x599
	.ascii "USN_REASON_DATA_OVERWRITE (0x00000001)\0"
	.byte	0x1
	.uleb128 0x59a
	.ascii "USN_REASON_DATA_EXTEND (0x00000002)\0"
	.byte	0x1
	.uleb128 0x59b
	.ascii "USN_REASON_DATA_TRUNCATION (0x00000004)\0"
	.byte	0x1
	.uleb128 0x59c
	.ascii "USN_REASON_NAMED_DATA_OVERWRITE (0x00000010)\0"
	.byte	0x1
	.uleb128 0x59d
	.ascii "USN_REASON_NAMED_DATA_EXTEND (0x00000020)\0"
	.byte	0x1
	.uleb128 0x59e
	.ascii "USN_REASON_NAMED_DATA_TRUNCATION (0x00000040)\0"
	.byte	0x1
	.uleb128 0x59f
	.ascii "USN_REASON_FILE_CREATE (0x00000100)\0"
	.byte	0x1
	.uleb128 0x5a0
	.ascii "USN_REASON_FILE_DELETE (0x00000200)\0"
	.byte	0x1
	.uleb128 0x5a1
	.ascii "USN_REASON_EA_CHANGE (0x00000400)\0"
	.byte	0x1
	.uleb128 0x5a2
	.ascii "USN_REASON_SECURITY_CHANGE (0x00000800)\0"
	.byte	0x1
	.uleb128 0x5a3
	.ascii "USN_REASON_RENAME_OLD_NAME (0x00001000)\0"
	.byte	0x1
	.uleb128 0x5a4
	.ascii "USN_REASON_RENAME_NEW_NAME (0x00002000)\0"
	.byte	0x1
	.uleb128 0x5a5
	.ascii "USN_REASON_INDEXABLE_CHANGE (0x00004000)\0"
	.byte	0x1
	.uleb128 0x5a6
	.ascii "USN_REASON_BASIC_INFO_CHANGE (0x00008000)\0"
	.byte	0x1
	.uleb128 0x5a7
	.ascii "USN_REASON_HARD_LINK_CHANGE (0x00010000)\0"
	.byte	0x1
	.uleb128 0x5a8
	.ascii "USN_REASON_COMPRESSION_CHANGE (0x00020000)\0"
	.byte	0x1
	.uleb128 0x5a9
	.ascii "USN_REASON_ENCRYPTION_CHANGE (0x00040000)\0"
	.byte	0x1
	.uleb128 0x5aa
	.ascii "USN_REASON_OBJECT_ID_CHANGE (0x00080000)\0"
	.byte	0x1
	.uleb128 0x5ab
	.ascii "USN_REASON_REPARSE_POINT_CHANGE (0x00100000)\0"
	.byte	0x1
	.uleb128 0x5ac
	.ascii "USN_REASON_STREAM_CHANGE (0x00200000)\0"
	.byte	0x1
	.uleb128 0x5ae
	.ascii "USN_REASON_CLOSE (0x80000000)\0"
	.byte	0x1
	.uleb128 0x5bf
	.ascii "USN_DELETE_FLAG_DELETE (0x00000001)\0"
	.byte	0x1
	.uleb128 0x5c0
	.ascii "USN_DELETE_FLAG_NOTIFY (0x00000002)\0"
	.byte	0x1
	.uleb128 0x5c2
	.ascii "USN_DELETE_VALID_FLAGS (0x00000003)\0"
	.byte	0x1
	.uleb128 0x5d4
	.ascii "USN_SOURCE_DATA_MANAGEMENT (0x00000001)\0"
	.byte	0x1
	.uleb128 0x5d5
	.ascii "USN_SOURCE_AUXILIARY_DATA (0x00000002)\0"
	.byte	0x1
	.uleb128 0x5d6
	.ascii "USN_SOURCE_REPLICATION_MANAGEMENT (0x00000004)\0"
	.byte	0x1
	.uleb128 0x5d8
	.ascii "MARK_HANDLE_PROTECT_CLUSTERS (0x00000001)\0"
	.byte	0x1
	.uleb128 0x5d9
	.ascii "MARK_HANDLE_TXF_SYSTEM_LOG (0x00000004)\0"
	.byte	0x1
	.uleb128 0x5da
	.ascii "MARK_HANDLE_NOT_TXF_SYSTEM_LOG (0x00000008)\0"
	.byte	0x1
	.uleb128 0x5db
	.ascii "MARK_HANDLE_REALTIME (0x00000020)\0"
	.byte	0x1
	.uleb128 0x5dc
	.ascii "MARK_HANDLE_NOT_REALTIME (0x00000040)\0"
	.byte	0x1
	.uleb128 0x5e3
	.ascii "VOLUME_IS_DIRTY (0x00000001)\0"
	.byte	0x1
	.uleb128 0x5e4
	.ascii "VOLUME_UPGRADE_SCHEDULED (0x00000002)\0"
	.byte	0x1
	.uleb128 0x5ec
	.ascii "FILE_PREFETCH_TYPE_FOR_CREATE 0x1\0"
	.byte	0x1
	.uleb128 0x600
	.ascii "FILESYSTEM_STATISTICS_TYPE_NTFS 1\0"
	.byte	0x1
	.uleb128 0x601
	.ascii "FILESYSTEM_STATISTICS_TYPE_FAT 2\0"
	.byte	0x1
	.uleb128 0x688
	.ascii "FILE_SET_ENCRYPTION 0x00000001\0"
	.byte	0x1
	.uleb128 0x689
	.ascii "FILE_CLEAR_ENCRYPTION 0x00000002\0"
	.byte	0x1
	.uleb128 0x68a
	.ascii "STREAM_SET_ENCRYPTION 0x00000003\0"
	.byte	0x1
	.uleb128 0x68b
	.ascii "STREAM_CLEAR_ENCRYPTION 0x00000004\0"
	.byte	0x1
	.uleb128 0x68d
	.ascii "MAXIMUM_ENCRYPTION_VALUE 0x00000004\0"
	.byte	0x1
	.uleb128 0x693
	.ascii "ENCRYPTION_FORMAT_DEFAULT (0x01)\0"
	.byte	0x1
	.uleb128 0x694
	.ascii "COMPRESSION_FORMAT_SPARSE (0x4000)\0"
	.byte	0x1
	.uleb128 0x6b7
	.ascii "COPYFILE_SIS_LINK 0x0001\0"
	.byte	0x1
	.uleb128 0x6b8
	.ascii "COPYFILE_SIS_REPLACE 0x0002\0"
	.byte	0x1
	.uleb128 0x6b9
	.ascii "COPYFILE_SIS_FLAGS 0x0003\0"
	.byte	0x1
	.uleb128 0x8f7
	.ascii "IOCTL_VOLUME_BASE ((DWORD) 'V')\0"
	.byte	0x1
	.uleb128 0x8f9
	.ascii "IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS CTL_CODE(IOCTL_VOLUME_BASE,0,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x8fa
	.ascii "IOCTL_VOLUME_SUPPORTS_ONLINE_OFFLINE CTL_CODE(IOCTL_VOLUME_BASE,1,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x8fb
	.ascii "IOCTL_VOLUME_ONLINE CTL_CODE(IOCTL_VOLUME_BASE,2,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x8fc
	.ascii "IOCTL_VOLUME_OFFLINE CTL_CODE(IOCTL_VOLUME_BASE,3,METHOD_BUFFERED,FILE_READ_ACCESS | FILE_WRITE_ACCESS)\0"
	.byte	0x1
	.uleb128 0x8fd
	.ascii "IOCTL_VOLUME_IS_OFFLINE CTL_CODE(IOCTL_VOLUME_BASE,4,METHOD_BUFFERED, FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x8fe
	.ascii "IOCTL_VOLUME_IS_IO_CAPABLE CTL_CODE(IOCTL_VOLUME_BASE,5,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x8ff
	.ascii "IOCTL_VOLUME_QUERY_FAILOVER_SET CTL_CODE(IOCTL_VOLUME_BASE,6,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x900
	.ascii "IOCTL_VOLUME_QUERY_VOLUME_NUMBER CTL_CODE(IOCTL_VOLUME_BASE,7,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x901
	.ascii "IOCTL_VOLUME_LOGICAL_TO_PHYSICAL CTL_CODE(IOCTL_VOLUME_BASE,8,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x902
	.ascii "IOCTL_VOLUME_PHYSICAL_TO_LOGICAL CTL_CODE(IOCTL_VOLUME_BASE,9,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x903
	.ascii "IOCTL_VOLUME_IS_CLUSTERED CTL_CODE(IOCTL_VOLUME_BASE,12,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x904
	.ascii "IOCTL_VOLUME_GET_GPT_ATTRIBUTES CTL_CODE(IOCTL_VOLUME_BASE,14,METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x4
	.file 426 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winsmcrd.h"
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x1aa
	.byte	0x1
	.uleb128 0x7
	.ascii "_NTDDSCRD_H2_ \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "FILE_DEVICE_SMARTCARD 0x00000031\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "SCARD_ATR_LENGTH 33\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "SCARD_PROTOCOL_UNDEFINED 0x00000000\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "SCARD_PROTOCOL_T0 0x00000001\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "SCARD_PROTOCOL_T1 0x00000002\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "SCARD_PROTOCOL_RAW 0x00010000\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "SCARD_PROTOCOL_Tx (SCARD_PROTOCOL_T0 | SCARD_PROTOCOL_T1)\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "SCARD_PROTOCOL_DEFAULT 0x80000000\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "SCARD_PROTOCOL_OPTIMAL 0x00000000\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "SCARD_POWER_DOWN 0\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "SCARD_COLD_RESET 1\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "SCARD_WARM_RESET 2\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "SCARD_CTL_CODE(code) CTL_CODE(FILE_DEVICE_SMARTCARD,(code),METHOD_BUFFERED,FILE_ANY_ACCESS)\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "IOCTL_SMARTCARD_POWER SCARD_CTL_CODE(1)\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "IOCTL_SMARTCARD_GET_ATTRIBUTE SCARD_CTL_CODE(2)\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "IOCTL_SMARTCARD_SET_ATTRIBUTE SCARD_CTL_CODE(3)\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "IOCTL_SMARTCARD_CONFISCATE SCARD_CTL_CODE(4)\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "IOCTL_SMARTCARD_TRANSMIT SCARD_CTL_CODE(5)\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "IOCTL_SMARTCARD_EJECT SCARD_CTL_CODE(6)\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "IOCTL_SMARTCARD_SWALLOW SCARD_CTL_CODE(7)\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "IOCTL_SMARTCARD_IS_PRESENT SCARD_CTL_CODE(10)\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "IOCTL_SMARTCARD_IS_ABSENT SCARD_CTL_CODE(11)\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "IOCTL_SMARTCARD_SET_PROTOCOL SCARD_CTL_CODE(12)\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "IOCTL_SMARTCARD_GET_STATE SCARD_CTL_CODE(14)\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "IOCTL_SMARTCARD_GET_LAST_ERROR SCARD_CTL_CODE(15)\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "IOCTL_SMARTCARD_GET_PERF_CNTR SCARD_CTL_CODE(16)\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "MAXIMUM_ATTR_STRING_LENGTH 32\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "MAXIMUM_SMARTCARD_READERS 10\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "SCARD_ATTR_VALUE(Class,Tag) ((((ULONG)(Class)) << 16) | ((ULONG)(Tag)))\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "SCARD_CLASS_VENDOR_INFO 1\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "SCARD_CLASS_COMMUNICATIONS 2\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "SCARD_CLASS_PROTOCOL 3\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "SCARD_CLASS_POWER_MGMT 4\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "SCARD_CLASS_SECURITY 5\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "SCARD_CLASS_MECHANICAL 6\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "SCARD_CLASS_VENDOR_DEFINED 7\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "SCARD_CLASS_IFD_PROTOCOL 8\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "SCARD_CLASS_ICC_STATE 9\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "SCARD_CLASS_PERF 0x7ffe\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "SCARD_CLASS_SYSTEM 0x7fff\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "SCARD_ATTR_VENDOR_NAME SCARD_ATTR_VALUE(SCARD_CLASS_VENDOR_INFO,0x0100)\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "SCARD_ATTR_VENDOR_IFD_TYPE SCARD_ATTR_VALUE(SCARD_CLASS_VENDOR_INFO,0x0101)\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "SCARD_ATTR_VENDOR_IFD_VERSION SCARD_ATTR_VALUE(SCARD_CLASS_VENDOR_INFO,0x0102)\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "SCARD_ATTR_VENDOR_IFD_SERIAL_NO SCARD_ATTR_VALUE(SCARD_CLASS_VENDOR_INFO,0x0103)\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "SCARD_ATTR_CHANNEL_ID SCARD_ATTR_VALUE(SCARD_CLASS_COMMUNICATIONS,0x0110)\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "SCARD_ATTR_PROTOCOL_TYPES SCARD_ATTR_VALUE(SCARD_CLASS_PROTOCOL,0x0120)\0"
	.byte	0x1
	.uleb128 0x60
	.ascii "SCARD_ATTR_DEFAULT_CLK SCARD_ATTR_VALUE(SCARD_CLASS_PROTOCOL,0x0121)\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "SCARD_ATTR_MAX_CLK SCARD_ATTR_VALUE(SCARD_CLASS_PROTOCOL,0x0122)\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "SCARD_ATTR_DEFAULT_DATA_RATE SCARD_ATTR_VALUE(SCARD_CLASS_PROTOCOL,0x0123)\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "SCARD_ATTR_MAX_DATA_RATE SCARD_ATTR_VALUE(SCARD_CLASS_PROTOCOL,0x0124)\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "SCARD_ATTR_MAX_IFSD SCARD_ATTR_VALUE(SCARD_CLASS_PROTOCOL,0x0125)\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "SCARD_ATTR_POWER_MGMT_SUPPORT SCARD_ATTR_VALUE(SCARD_CLASS_POWER_MGMT,0x0131)\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "SCARD_ATTR_USER_TO_CARD_AUTH_DEVICE SCARD_ATTR_VALUE(SCARD_CLASS_SECURITY,0x0140)\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "SCARD_ATTR_USER_AUTH_INPUT_DEVICE SCARD_ATTR_VALUE(SCARD_CLASS_SECURITY,0x0142)\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "SCARD_ATTR_CHARACTERISTICS SCARD_ATTR_VALUE(SCARD_CLASS_MECHANICAL,0x0150)\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "SCARD_ATTR_CURRENT_PROTOCOL_TYPE SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x0201)\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "SCARD_ATTR_CURRENT_CLK SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x0202)\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "SCARD_ATTR_CURRENT_F SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x0203)\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "SCARD_ATTR_CURRENT_D SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x0204)\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "SCARD_ATTR_CURRENT_N SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x0205)\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "SCARD_ATTR_CURRENT_W SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x0206)\0"
	.byte	0x1
	.uleb128 0x71
	.ascii "SCARD_ATTR_CURRENT_IFSC SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x0207)\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "SCARD_ATTR_CURRENT_IFSD SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x0208)\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "SCARD_ATTR_CURRENT_BWT SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x0209)\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "SCARD_ATTR_CURRENT_CWT SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x020a)\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "SCARD_ATTR_CURRENT_EBC_ENCODING SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x020b)\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "SCARD_ATTR_EXTENDED_BWT SCARD_ATTR_VALUE(SCARD_CLASS_IFD_PROTOCOL,0x020c)\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "SCARD_ATTR_ICC_PRESENCE SCARD_ATTR_VALUE(SCARD_CLASS_ICC_STATE,0x0300)\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "SCARD_ATTR_ICC_INTERFACE_STATUS SCARD_ATTR_VALUE(SCARD_CLASS_ICC_STATE,0x0301)\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "SCARD_ATTR_CURRENT_IO_STATE SCARD_ATTR_VALUE(SCARD_CLASS_ICC_STATE,0x0302)\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "SCARD_ATTR_ATR_STRING SCARD_ATTR_VALUE(SCARD_CLASS_ICC_STATE,0x0303)\0"
	.byte	0x1
	.uleb128 0x7c
	.ascii "SCARD_ATTR_ICC_TYPE_PER_ATR SCARD_ATTR_VALUE(SCARD_CLASS_ICC_STATE,0x0304)\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "SCARD_ATTR_ESC_RESET SCARD_ATTR_VALUE(SCARD_CLASS_VENDOR_DEFINED,0xA000)\0"
	.byte	0x1
	.uleb128 0x7f
	.ascii "SCARD_ATTR_ESC_CANCEL SCARD_ATTR_VALUE(SCARD_CLASS_VENDOR_DEFINED,0xA003)\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "SCARD_ATTR_ESC_AUTHREQUEST SCARD_ATTR_VALUE(SCARD_CLASS_VENDOR_DEFINED,0xA005)\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "SCARD_ATTR_MAXINPUT SCARD_ATTR_VALUE(SCARD_CLASS_VENDOR_DEFINED,0xA007)\0"
	.byte	0x1
	.uleb128 0x83
	.ascii "SCARD_ATTR_DEVICE_UNIT SCARD_ATTR_VALUE(SCARD_CLASS_SYSTEM,0x0001)\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "SCARD_ATTR_DEVICE_IN_USE SCARD_ATTR_VALUE(SCARD_CLASS_SYSTEM,0x0002)\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "SCARD_ATTR_DEVICE_FRIENDLY_NAME_A SCARD_ATTR_VALUE(SCARD_CLASS_SYSTEM,0x0003)\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "SCARD_ATTR_DEVICE_SYSTEM_NAME_A SCARD_ATTR_VALUE(SCARD_CLASS_SYSTEM,0x0004)\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "SCARD_ATTR_DEVICE_FRIENDLY_NAME_W SCARD_ATTR_VALUE(SCARD_CLASS_SYSTEM,0x0005)\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "SCARD_ATTR_DEVICE_SYSTEM_NAME_W SCARD_ATTR_VALUE(SCARD_CLASS_SYSTEM,0x0006)\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "SCARD_ATTR_SUPRESS_T1_IFS_REQUEST SCARD_ATTR_VALUE(SCARD_CLASS_SYSTEM,0x0007)\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "SCARD_PERF_NUM_TRANSMISSIONS SCARD_ATTR_VALUE(SCARD_CLASS_PERF,0x0001)\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "SCARD_PERF_BYTES_TRANSMITTED SCARD_ATTR_VALUE(SCARD_CLASS_PERF,0x0002)\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "SCARD_PERF_TRANSMISSION_TIME SCARD_ATTR_VALUE(SCARD_CLASS_PERF,0x0003)\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "SCARD_ATTR_DEVICE_FRIENDLY_NAME __MINGW_NAME_UAW(SCARD_ATTR_DEVICE_FRIENDLY_NAME)\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "SCARD_ATTR_DEVICE_SYSTEM_NAME __MINGW_NAME_UAW(SCARD_ATTR_DEVICE_SYSTEM_NAME)\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "SCARD_T0_HEADER_LENGTH 7\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "SCARD_T0_CMD_LENGTH 5\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "SCARD_T1_PROLOGUE_LENGTH 3\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "SCARD_T1_EPILOGUE_LENGTH 2\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "SCARD_T1_MAX_IFS 254\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "SCARD_UNKNOWN 0\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "SCARD_ABSENT 1\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "SCARD_PRESENT 2\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "SCARD_SWALLOWED 3\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "SCARD_POWERED 4\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "SCARD_NEGOTIABLE 5\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "SCARD_SPECIFIC 6\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "SCARD_READER_SWALLOWS 0x00000001\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "SCARD_READER_EJECTS 0x00000002\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "SCARD_READER_CONFISCATES 0x00000004\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "SCARD_READER_TYPE_SERIAL 0x01\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "SCARD_READER_TYPE_PARALELL 0x02\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "SCARD_READER_TYPE_KEYBOARD 0x04\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "SCARD_READER_TYPE_SCSI 0x08\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "SCARD_READER_TYPE_IDE 0x10\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "SCARD_READER_TYPE_USB 0x20\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "SCARD_READER_TYPE_PCMCIA 0x40\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "SCARD_READER_TYPE_VENDOR 0xF0\0"
	.byte	0x4
	.byte	0x1
	.uleb128 0x16
	.ascii "_LPCBYTE_DEFINED \0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "WINSCARDAPI \0"
	.byte	0x1
	.uleb128 0x22
	.ascii "WINSCARDDATA __declspec(dllimport)\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "SCARD_PCI_T0 (&g_rgSCardT0Pci)\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "SCARD_PCI_T1 (&g_rgSCardT1Pci)\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "SCARD_PCI_RAW (&g_rgSCardRawPci)\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "SCARD_AUTOALLOCATE (DWORD)(-1)\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "SCARD_SCOPE_USER 0\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "SCARD_SCOPE_TERMINAL 1\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "SCARD_SCOPE_SYSTEM 2\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "SCARD_ALL_READERS TEXT(\"SCard$AllReaders\\000\")\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "SCARD_DEFAULT_READERS TEXT(\"SCard$DefaultReaders\\000\")\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "SCARD_LOCAL_READERS TEXT(\"SCard$LocalReaders\\000\")\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "SCARD_SYSTEM_READERS TEXT(\"SCard$SystemReaders\\000\")\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "SCARD_PROVIDER_PRIMARY 1\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "SCARD_PROVIDER_CSP 2\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "SCardListReaderGroups __MINGW_NAME_AW(SCardListReaderGroups)\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "SCardListReaders __MINGW_NAME_AW(SCardListReaders)\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "SCardListCards __MINGW_NAME_AW(SCardListCards)\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "SCardListInterfaces __MINGW_NAME_AW(SCardListInterfaces)\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "SCardGetProviderId __MINGW_NAME_AW(SCardGetProviderId)\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "SCardGetCardTypeProviderName __MINGW_NAME_AW(SCardGetCardTypeProviderName)\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "SCardIntroduceReaderGroup __MINGW_NAME_AW(SCardIntroduceReaderGroup)\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "SCardForgetReaderGroup __MINGW_NAME_AW(SCardForgetReaderGroup)\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "SCardIntroduceReader __MINGW_NAME_AW(SCardIntroduceReader)\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "SCardForgetReader __MINGW_NAME_AW(SCardForgetReader)\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "SCardAddReaderToGroup __MINGW_NAME_AW(SCardAddReaderToGroup)\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "SCardRemoveReaderFromGroup __MINGW_NAME_AW(SCardRemoveReaderFromGroup)\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "SCardIntroduceCardType __MINGW_NAME_AW(SCardIntroduceCardType)\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "SCardSetCardTypeProviderName __MINGW_NAME_AW(SCardSetCardTypeProviderName)\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "SCardForgetCardType __MINGW_NAME_AW(SCardForgetCardType)\0"
	.byte	0x1
	.uleb128 0x57
	.ascii "SCardListCardTypes SCardListCards\0"
	.byte	0x1
	.uleb128 0x6d
	.ascii "PCSCardIntroduceCardType(hContext,szCardName,pbAtr,pbAtrMask,cbAtrLen,pguidPrimaryProvider,rgguidInterfaces,dwInterfaceCount) SCardIntroduceCardType(hContext,szCardName,pguidPrimaryProvider,rgguidInterfaces,dwInterfaceCount,pbAtr,pbAtrMask,cbAtrLen)\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "SCardLocateCards __MINGW_NAME_AW(SCardLocateCards)\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "SCardLocateCardsByATR __MINGW_NAME_AW(SCardLocateCardsByATR)\0"
	.byte	0x1
	.uleb128 0x8f
	.ascii "SCardGetStatusChange __MINGW_NAME_AW(SCardGetStatusChange)\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "SCardConnect __MINGW_NAME_AW(SCardConnect)\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "SCardStatus __MINGW_NAME_AW(SCardStatus)\0"
	.byte	0x1
	.uleb128 0x93
	.ascii "SCARD_READERSTATE_A SCARD_READERSTATEA\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "SCARD_READERSTATE_W SCARD_READERSTATEW\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "PSCARD_READERSTATE_A PSCARD_READERSTATEA\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "PSCARD_READERSTATE_W PSCARD_READERSTATEW\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "LPSCARD_READERSTATE_A LPSCARD_READERSTATEA\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "LPSCARD_READERSTATE_W LPSCARD_READERSTATEW\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "SCARD_STATE_UNAWARE 0x00000000\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "SCARD_STATE_IGNORE 0x00000001\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "SCARD_STATE_CHANGED 0x00000002\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "SCARD_STATE_UNKNOWN 0x00000004\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "SCARD_STATE_UNAVAILABLE 0x00000008\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "SCARD_STATE_EMPTY 0x00000010\0"
	.byte	0x1
	.uleb128 0xa0
	.ascii "SCARD_STATE_PRESENT 0x00000020\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "SCARD_STATE_ATRMATCH 0x00000040\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "SCARD_STATE_EXCLUSIVE 0x00000080\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "SCARD_STATE_INUSE 0x00000100\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "SCARD_STATE_MUTE 0x00000200\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "SCARD_STATE_UNPOWERED 0x00000400\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "SCARD_SHARE_EXCLUSIVE 1\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "SCARD_SHARE_SHARED 2\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "SCARD_SHARE_DIRECT 3\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "SCARD_LEAVE_CARD 0\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "SCARD_RESET_CARD 1\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "SCARD_UNPOWER_CARD 2\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "SCARD_EJECT_CARD 3\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "SCardGetReaderCapabilities SCardGetAttrib\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "SCardSetReaderCapabilities SCardSetAttrib\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "SC_DLG_MINIMAL_UI 0x01\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "SC_DLG_NO_UI 0x02\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "SC_DLG_FORCE_UI 0x04\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "SCERR_NOCARDNAME 0x4000\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "SCERR_NOGUIDS 0x8000\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "LPOCNCONNPROC __MINGW_NAME_AW(LPOCNCONNPROC)\0"
	.byte	0x1
	.uleb128 0x133
	.ascii "OPENCARDNAMEA_EX OPENCARDNAME_EXA\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "OPENCARDNAMEW_EX OPENCARDNAME_EXW\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "POPENCARDNAMEA_EX POPENCARDNAME_EXA\0"
	.byte	0x1
	.uleb128 0x136
	.ascii "POPENCARDNAMEW_EX POPENCARDNAME_EXW\0"
	.byte	0x1
	.uleb128 0x137
	.ascii "LPOPENCARDNAMEA_EX LPOPENCARDNAME_EXA\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "LPOPENCARDNAMEW_EX LPOPENCARDNAME_EXW\0"
	.byte	0x1
	.uleb128 0x13a
	.ascii "SCardUIDlgSelectCard __MINGW_NAME_AW(SCardUIDlgSelectCard)\0"
	.byte	0x1
	.uleb128 0x177
	.ascii "OPENCARDNAME_A OPENCARDNAMEA\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "OPENCARDNAME_W OPENCARDNAMEW\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "POPENCARDNAME_A POPENCARDNAMEA\0"
	.byte	0x1
	.uleb128 0x17a
	.ascii "POPENCARDNAME_W POPENCARDNAMEW\0"
	.byte	0x1
	.uleb128 0x17b
	.ascii "LPOPENCARDNAME_A LPOPENCARDNAMEA\0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "LPOPENCARDNAME_W LPOPENCARDNAMEW\0"
	.byte	0x1
	.uleb128 0x17e
	.ascii "GetOpenCardName __MINGW_NAME_AW(GetOpenCardName)\0"
	.byte	0x4
	.file 427 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winspool.h"
	.byte	0x3
	.uleb128 0x66
	.uleb128 0x1ab
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINSPOOL_ \0"
	.file 428 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/prsht.h"
	.byte	0x3
	.uleb128 0xc
	.uleb128 0x1ac
	.byte	0x1
	.uleb128 0x7
	.ascii "_PRSHT_H_ \0"
	.byte	0x1
	.uleb128 0x13
	.ascii "WINCOMMCTRLAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "CCSIZEOF_STRUCT(structname,member) (((int)((LPBYTE)(&((structname*)0)->member) - ((LPBYTE)((structname*)0)))) + sizeof(((structname*)0)->member))\0"
	.byte	0x3
	.uleb128 0x1e
	.uleb128 0x145
	.byte	0x4
	.byte	0x1
	.uleb128 0x29
	.ascii "SNDMSG ::SendMessage\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "MAXPROPPAGES 100\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "LPFNPSPCALLBACK __MINGW_NAME_AW(LPFNPSPCALLBACK)\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "PSP_DEFAULT 0x00000000\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "PSP_DLGINDIRECT 0x00000001\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "PSP_USEHICON 0x00000002\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "PSP_USEICONID 0x00000004\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "PSP_USETITLE 0x00000008\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "PSP_RTLREADING 0x00000010\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "PSP_HASHELP 0x00000020\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "PSP_USEREFPARENT 0x00000040\0"
	.byte	0x1
	.uleb128 0x44
	.ascii "PSP_USECALLBACK 0x00000080\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "PSP_PREMATURE 0x00000400\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "PSP_HIDEHEADER 0x00000800\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "PSP_USEHEADERTITLE 0x00001000\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "PSP_USEHEADERSUBTITLE 0x00002000\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "PSP_USEFUSIONCONTEXT 0x00004000\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "PSPCB_ADDREF 0\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "PSPCB_RELEASE 1\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "PSPCB_CREATE 2\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "PROPSHEETPAGEA_V1_SIZE CCSIZEOF_STRUCT(PROPSHEETPAGEA,pcRefParent)\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "PROPSHEETPAGEW_V1_SIZE CCSIZEOF_STRUCT(PROPSHEETPAGEW,pcRefParent)\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "PROPSHEETPAGEA_V2_SIZE CCSIZEOF_STRUCT(PROPSHEETPAGEA,pszHeaderSubTitle)\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "PROPSHEETPAGEW_V2_SIZE CCSIZEOF_STRUCT(PROPSHEETPAGEW,pszHeaderSubTitle)\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "PROPSHEETPAGEA_V1_FIELDS DWORD dwSize,dwFlags; HINSTANCE hInstance; __C89_NAMELESS union { LPCSTR pszTemplate; PROPSHEETPAGE_RESOURCE pResource; } DUMMYUNIONNAME; __C89_NAMELESS union { HICON hIcon; LPCSTR pszIcon; } DUMMYUNIONNAME2; LPCSTR pszTitle; DLGPROC pfnDlgProc; LPARAM lParam; LPFNPSPCALLBACKA pfnCallback; UINT *pcRefParent;\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "PROPSHEETPAGEW_V1_FIELDS DWORD dwSize, dwFlags; HINSTANCE hInstance; __C89_NAMELESS union { LPCWSTR pszTemplate; PROPSHEETPAGE_RESOURCE pResource; } DUMMYUNIONNAME; __C89_NAMELESS union { HICON hIcon; LPCWSTR pszIcon; } DUMMYUNIONNAME2; LPCWSTR pszTitle; DLGPROC pfnDlgProc; LPARAM lParam; LPFNPSPCALLBACKW pfnCallback; UINT *pcRefParent;\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "_PROPSHEETPAGEA_V3 _PROPSHEETPAGEA\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "_PROPSHEETPAGEW_V3 _PROPSHEETPAGEW\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "PROPSHEETPAGE __MINGW_NAME_AW(PROPSHEETPAGE)\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "LPPROPSHEETPAGE __MINGW_NAME_AW(LPPROPSHEETPAGE)\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "LPCPROPSHEETPAGE __MINGW_NAME_AW(LPCPROPSHEETPAGE)\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "PROPSHEETPAGE_V1_SIZE __MINGW_NAME_AW_EXT(PROPSHEETPAGE,_V1_SIZE)\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "PROPSHEETPAGE_V2_SIZE __MINGW_NAME_AW_EXT(PROPSHEETPAGE,_V2_SIZE)\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "PROPSHEETPAGE_V1 __MINGW_NAME_AW_EXT(PROPSHEETPAGE,_V1)\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "LPPROPSHEETPAGE_V1 __MINGW_NAME_AW_EXT(LPPROPSHEETPAGE,_V1)\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "LPCPROPSHEETPAGE_V1 __MINGW_NAME_AW_EXT(LPCPROPSHEETPAGE,_V1)\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "PROPSHEETPAGE_V2 __MINGW_NAME_AW_EXT(PROPSHEETPAGE,_V2)\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "LPPROPSHEETPAGE_V2 __MINGW_NAME_AW_EXT(LPPROPSHEETPAGE,_V2)\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "LPCPROPSHEETPAGE_V2 __MINGW_NAME_AW_EXT(LPCPROPSHEETPAGE,_V2)\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "PROPSHEETPAGE_V3 __MINGW_NAME_AW_EXT(PROPSHEETPAGE,_V3)\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "LPPROPSHEETPAGE_V3 __MINGW_NAME_AW_EXT(LPPROPSHEETPAGE,_V3)\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "LPCPROPSHEETPAGE_V3 __MINGW_NAME_AW_EXT(LPCPROPSHEETPAGE,_V3)\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "PROPSHEETPAGE_LATEST __MINGW_NAME_AW_EXT(PROPSHEETPAGE,_LATEST)\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "LPPROPSHEETPAGE_LATEST __MINGW_NAME_AW_EXT(LPPROPSHEETPAGE,_LATEST)\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "LPCPROPSHEETPAGE_LATEST __MINGW_NAME_AW_EXT(LPCPROPSHEETPAGE,_LATEST)\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "PSH_DEFAULT 0x00000000\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "PSH_PROPTITLE 0x00000001\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "PSH_USEHICON 0x00000002\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "PSH_USEICONID 0x00000004\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "PSH_PROPSHEETPAGE 0x00000008\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "PSH_WIZARDHASFINISH 0x00000010\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "PSH_WIZARD 0x00000020\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "PSH_USEPSTARTPAGE 0x00000040\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "PSH_NOAPPLYNOW 0x00000080\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "PSH_USECALLBACK 0x00000100\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "PSH_HASHELP 0x00000200\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "PSH_MODELESS 0x00000400\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "PSH_RTLREADING 0x00000800\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "PSH_WIZARDCONTEXTHELP 0x00001000\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "PSH_WIZARD97 0x01000000\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "PSH_WATERMARK 0x00008000\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "PSH_USEHBMWATERMARK 0x00010000\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "PSH_USEHPLWATERMARK 0x00020000\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "PSH_STRETCHWATERMARK 0x00040000\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "PSH_HEADER 0x00080000\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "PSH_USEHBMHEADER 0x00100000\0"
	.byte	0x1
	.uleb128 0xde
	.ascii "PSH_USEPAGELANG 0x00200000\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "PSH_WIZARD_LITE 0x00400000\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "PSH_NOCONTEXTHELP 0x02000000\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "PROPSHEETHEADERA_V1_SIZE CCSIZEOF_STRUCT(PROPSHEETHEADERA,pfnCallback)\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "PROPSHEETHEADERW_V1_SIZE CCSIZEOF_STRUCT(PROPSHEETHEADERW,pfnCallback)\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "PROPSHEETHEADERA_V2_SIZE CCSIZEOF_STRUCT(PROPSHEETHEADERA,DUMMYUNION5_MEMBER(hbmHeader))\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "PROPSHEETHEADERW_V2_SIZE CCSIZEOF_STRUCT(PROPSHEETHEADERW,DUMMYUNION5_MEMBER(hbmHeader))\0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "PROPSHEETHEADER __MINGW_NAME_AW(PROPSHEETHEADER)\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "LPPROPSHEETHEADER __MINGW_NAME_AW(LPPROPSHEETHEADER)\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "LPCPROPSHEETHEADER __MINGW_NAME_AW(LPCPROPSHEETHEADER)\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "PROPSHEETHEADER_V1_SIZE __MINGW_NAME_AW_EXT(PROPSHEETHEADER,_V1_SIZE)\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "PROPSHEETHEADER_V2_SIZE __MINGW_NAME_AW_EXT(PROPSHEETHEADER,_V2_SIZE)\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "PSCB_INITIALIZED 1\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "PSCB_PRECREATE 2\0"
	.byte	0x1
	.uleb128 0x136
	.ascii "PSCB_BUTTONPRESSED 3\0"
	.byte	0x1
	.uleb128 0x13e
	.ascii "CreatePropertySheetPage __MINGW_NAME_AW(CreatePropertySheetPage)\0"
	.byte	0x1
	.uleb128 0x13f
	.ascii "PropertySheet __MINGW_NAME_AW(PropertySheet)\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "PSN_FIRST (0U-200U)\0"
	.byte	0x1
	.uleb128 0x14a
	.ascii "PSN_LAST (0U-299U)\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "PSN_SETACTIVE (PSN_FIRST-0)\0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "PSN_KILLACTIVE (PSN_FIRST-1)\0"
	.byte	0x1
	.uleb128 0x14e
	.ascii "PSN_APPLY (PSN_FIRST-2)\0"
	.byte	0x1
	.uleb128 0x14f
	.ascii "PSN_RESET (PSN_FIRST-3)\0"
	.byte	0x1
	.uleb128 0x150
	.ascii "PSN_HELP (PSN_FIRST-5)\0"
	.byte	0x1
	.uleb128 0x151
	.ascii "PSN_WIZBACK (PSN_FIRST-6)\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "PSN_WIZNEXT (PSN_FIRST-7)\0"
	.byte	0x1
	.uleb128 0x153
	.ascii "PSN_WIZFINISH (PSN_FIRST-8)\0"
	.byte	0x1
	.uleb128 0x154
	.ascii "PSN_QUERYCANCEL (PSN_FIRST-9)\0"
	.byte	0x1
	.uleb128 0x155
	.ascii "PSN_GETOBJECT (PSN_FIRST-10)\0"
	.byte	0x1
	.uleb128 0x156
	.ascii "PSN_TRANSLATEACCELERATOR (PSN_FIRST-12)\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "PSN_QUERYINITIALFOCUS (PSN_FIRST-13)\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "PSNRET_NOERROR 0\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "PSNRET_INVALID 1\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "PSNRET_INVALID_NOCHANGEPAGE 2\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "PSNRET_MESSAGEHANDLED 3\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "PSM_SETCURSEL (WM_USER + 101)\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "PropSheet_SetCurSel(hDlg,hpage,index) SNDMSG(hDlg,PSM_SETCURSEL,(WPARAM)index,(LPARAM)hpage)\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "PSM_REMOVEPAGE (WM_USER + 102)\0"
	.byte	0x1
	.uleb128 0x162
	.ascii "PropSheet_RemovePage(hDlg,index,hpage) SNDMSG(hDlg,PSM_REMOVEPAGE,index,(LPARAM)hpage)\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "PSM_ADDPAGE (WM_USER + 103)\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "PropSheet_AddPage(hDlg,hpage) SNDMSG(hDlg,PSM_ADDPAGE,0,(LPARAM)hpage)\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "PSM_CHANGED (WM_USER + 104)\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "PropSheet_Changed(hDlg,hwnd) SNDMSG(hDlg,PSM_CHANGED,(WPARAM)hwnd,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "PSM_RESTARTWINDOWS (WM_USER + 105)\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "PropSheet_RestartWindows(hDlg) SNDMSG(hDlg,PSM_RESTARTWINDOWS,(WPARAM)0,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "PSM_REBOOTSYSTEM (WM_USER + 106)\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "PropSheet_RebootSystem(hDlg) SNDMSG(hDlg,PSM_REBOOTSYSTEM,(WPARAM)0,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x170
	.ascii "PSM_CANCELTOCLOSE (WM_USER + 107)\0"
	.byte	0x1
	.uleb128 0x171
	.ascii "PropSheet_CancelToClose(hDlg) PostMessage(hDlg,PSM_CANCELTOCLOSE,(WPARAM)0,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "PSM_QUERYSIBLINGS (WM_USER + 108)\0"
	.byte	0x1
	.uleb128 0x174
	.ascii "PropSheet_QuerySiblings(hDlg,wParam,lParam) SNDMSG(hDlg,PSM_QUERYSIBLINGS,wParam,lParam)\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "PSM_UNCHANGED (WM_USER + 109)\0"
	.byte	0x1
	.uleb128 0x177
	.ascii "PropSheet_UnChanged(hDlg,hwnd) SNDMSG(hDlg,PSM_UNCHANGED,(WPARAM)hwnd,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "PSM_APPLY (WM_USER + 110)\0"
	.byte	0x1
	.uleb128 0x17a
	.ascii "PropSheet_Apply(hDlg) SNDMSG(hDlg,PSM_APPLY,(WPARAM)0,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "PSM_SETTITLEA (WM_USER + 111)\0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "PSM_SETTITLEW (WM_USER + 120)\0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "PSM_SETTITLE __MINGW_NAME_AW(PSM_SETTITLE)\0"
	.byte	0x1
	.uleb128 0x181
	.ascii "PropSheet_SetTitle(hDlg,wStyle,lpszText) SNDMSG(hDlg,PSM_SETTITLE,wStyle,(LPARAM)(LPCTSTR)(lpszText))\0"
	.byte	0x1
	.uleb128 0x183
	.ascii "PSM_SETWIZBUTTONS (WM_USER + 112)\0"
	.byte	0x1
	.uleb128 0x184
	.ascii "PropSheet_SetWizButtons(hDlg,dwFlags) PostMessage(hDlg,PSM_SETWIZBUTTONS,(WPARAM)0,(LPARAM)dwFlags)\0"
	.byte	0x1
	.uleb128 0x186
	.ascii "PSWIZB_BACK 0x00000001\0"
	.byte	0x1
	.uleb128 0x187
	.ascii "PSWIZB_NEXT 0x00000002\0"
	.byte	0x1
	.uleb128 0x188
	.ascii "PSWIZB_FINISH 0x00000004\0"
	.byte	0x1
	.uleb128 0x189
	.ascii "PSWIZB_DISABLEDFINISH 0x00000008\0"
	.byte	0x1
	.uleb128 0x18b
	.ascii "PSM_PRESSBUTTON (WM_USER + 113)\0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "PropSheet_PressButton(hDlg,iButton) PostMessage(hDlg,PSM_PRESSBUTTON,(WPARAM)iButton,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x18e
	.ascii "PSBTN_BACK 0\0"
	.byte	0x1
	.uleb128 0x18f
	.ascii "PSBTN_NEXT 1\0"
	.byte	0x1
	.uleb128 0x190
	.ascii "PSBTN_FINISH 2\0"
	.byte	0x1
	.uleb128 0x191
	.ascii "PSBTN_OK 3\0"
	.byte	0x1
	.uleb128 0x192
	.ascii "PSBTN_APPLYNOW 4\0"
	.byte	0x1
	.uleb128 0x193
	.ascii "PSBTN_CANCEL 5\0"
	.byte	0x1
	.uleb128 0x194
	.ascii "PSBTN_HELP 6\0"
	.byte	0x1
	.uleb128 0x195
	.ascii "PSBTN_MAX 6\0"
	.byte	0x1
	.uleb128 0x197
	.ascii "PSM_SETCURSELID (WM_USER + 114)\0"
	.byte	0x1
	.uleb128 0x198
	.ascii "PropSheet_SetCurSelByID(hDlg,id) SNDMSG(hDlg,PSM_SETCURSELID,0,(LPARAM)id)\0"
	.byte	0x1
	.uleb128 0x19a
	.ascii "PSM_SETFINISHTEXTA (WM_USER + 115)\0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "PSM_SETFINISHTEXTW (WM_USER + 121)\0"
	.byte	0x1
	.uleb128 0x19d
	.ascii "PSM_SETFINISHTEXT __MINGW_NAME_AW(PSM_SETFINISHTEXT)\0"
	.byte	0x1
	.uleb128 0x19f
	.ascii "PropSheet_SetFinishText(hDlg,lpszText) SNDMSG(hDlg,PSM_SETFINISHTEXT,0,(LPARAM)lpszText)\0"
	.byte	0x1
	.uleb128 0x1a1
	.ascii "PSM_GETTABCONTROL (WM_USER + 116)\0"
	.byte	0x1
	.uleb128 0x1a2
	.ascii "PropSheet_GetTabControl(hDlg) (HWND)SNDMSG(hDlg,PSM_GETTABCONTROL,0,0)\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "PSM_ISDIALOGMESSAGE (WM_USER + 117)\0"
	.byte	0x1
	.uleb128 0x1a5
	.ascii "PropSheet_IsDialogMessage(hDlg,pMsg) (WINBOOL)SNDMSG(hDlg,PSM_ISDIALOGMESSAGE,0,(LPARAM)pMsg)\0"
	.byte	0x1
	.uleb128 0x1a7
	.ascii "PSM_GETCURRENTPAGEHWND (WM_USER + 118)\0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "PropSheet_GetCurrentPageHwnd(hDlg) (HWND)SNDMSG(hDlg,PSM_GETCURRENTPAGEHWND,(WPARAM)0,(LPARAM)0)\0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "PSM_INSERTPAGE (WM_USER + 119)\0"
	.byte	0x1
	.uleb128 0x1ab
	.ascii "PropSheet_InsertPage(hDlg,index,hpage) SNDMSG(hDlg,PSM_INSERTPAGE,(WPARAM)(index),(LPARAM)(hpage))\0"
	.byte	0x1
	.uleb128 0x1ad
	.ascii "PSM_SETHEADERTITLEA (WM_USER + 125)\0"
	.byte	0x1
	.uleb128 0x1ae
	.ascii "PSM_SETHEADERTITLEW (WM_USER + 126)\0"
	.byte	0x1
	.uleb128 0x1b0
	.ascii "PSM_SETHEADERTITLE __MINGW_NAME_AW(PSM_SETHEADERTITLE)\0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "PropSheet_SetHeaderTitle(hDlg,index,lpszText) SNDMSG(hDlg,PSM_SETHEADERTITLE,(WPARAM)(index),(LPARAM)(lpszText))\0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "PSM_SETHEADERSUBTITLEA (WM_USER + 127)\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "PSM_SETHEADERSUBTITLEW (WM_USER + 128)\0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "PSM_SETHEADERSUBTITLE __MINGW_NAME_AW(PSM_SETHEADERSUBTITLE)\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "PropSheet_SetHeaderSubTitle(hDlg,index,lpszText) SNDMSG(hDlg,PSM_SETHEADERSUBTITLE,(WPARAM)(index),(LPARAM)(lpszText))\0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "PSM_HWNDTOINDEX (WM_USER + 129)\0"
	.byte	0x1
	.uleb128 0x1bc
	.ascii "PropSheet_HwndToIndex(hDlg,hwnd) (int)SNDMSG(hDlg,PSM_HWNDTOINDEX,(WPARAM)(hwnd),0)\0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "PSM_INDEXTOHWND (WM_USER + 130)\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "PropSheet_IndexToHwnd(hDlg,i) (HWND)SNDMSG(hDlg,PSM_INDEXTOHWND,(WPARAM)(i),0)\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "PSM_PAGETOINDEX (WM_USER + 131)\0"
	.byte	0x1
	.uleb128 0x1c0
	.ascii "PropSheet_PageToIndex(hDlg,hpage) (int)SNDMSG(hDlg,PSM_PAGETOINDEX,0,(LPARAM)(hpage))\0"
	.byte	0x1
	.uleb128 0x1c1
	.ascii "PSM_INDEXTOPAGE (WM_USER + 132)\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "PropSheet_IndexToPage(hDlg,i) (HPROPSHEETPAGE)SNDMSG(hDlg,PSM_INDEXTOPAGE,(WPARAM)(i),0)\0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "PSM_IDTOINDEX (WM_USER + 133)\0"
	.byte	0x1
	.uleb128 0x1c4
	.ascii "PropSheet_IdToIndex(hDlg,id) (int)SNDMSG(hDlg,PSM_IDTOINDEX,0,(LPARAM)(id))\0"
	.byte	0x1
	.uleb128 0x1c5
	.ascii "PSM_INDEXTOID (WM_USER + 134)\0"
	.byte	0x1
	.uleb128 0x1c6
	.ascii "PropSheet_IndexToId(hDlg,i) SNDMSG(hDlg,PSM_INDEXTOID,(WPARAM)(i),0)\0"
	.byte	0x1
	.uleb128 0x1c7
	.ascii "PSM_GETRESULT (WM_USER + 135)\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "PropSheet_GetResult(hDlg) SNDMSG(hDlg,PSM_GETRESULT,0,0)\0"
	.byte	0x1
	.uleb128 0x1c9
	.ascii "PSM_RECALCPAGESIZES (WM_USER + 136)\0"
	.byte	0x1
	.uleb128 0x1ca
	.ascii "PropSheet_RecalcPageSizes(hDlg) SNDMSG(hDlg,PSM_RECALCPAGESIZES,0,0)\0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "ID_PSRESTARTWINDOWS 0x2\0"
	.byte	0x1
	.uleb128 0x1cd
	.ascii "ID_PSREBOOTSYSTEM (ID_PSRESTARTWINDOWS | 0x1)\0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "WIZ_CXDLG 276\0"
	.byte	0x1
	.uleb128 0x1d0
	.ascii "WIZ_CYDLG 140\0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "WIZ_CXBMP 80\0"
	.byte	0x1
	.uleb128 0x1d4
	.ascii "WIZ_BODYX 92\0"
	.byte	0x1
	.uleb128 0x1d5
	.ascii "WIZ_BODYCX 184\0"
	.byte	0x1
	.uleb128 0x1d7
	.ascii "PROP_SM_CXDLG 212\0"
	.byte	0x1
	.uleb128 0x1d8
	.ascii "PROP_SM_CYDLG 188\0"
	.byte	0x1
	.uleb128 0x1da
	.ascii "PROP_MED_CXDLG 227\0"
	.byte	0x1
	.uleb128 0x1db
	.ascii "PROP_MED_CYDLG 215\0"
	.byte	0x1
	.uleb128 0x1dd
	.ascii "PROP_LG_CXDLG 252\0"
	.byte	0x1
	.uleb128 0x1de
	.ascii "PROP_LG_CYDLG 218\0"
	.byte	0x3
	.uleb128 0x1e4
	.uleb128 0x143
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.uleb128 0x93
	.ascii "DSPRINT_PUBLISH 0x00000001\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "DSPRINT_UPDATE 0x00000002\0"
	.byte	0x1
	.uleb128 0x95
	.ascii "DSPRINT_UNPUBLISH 0x00000004\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "DSPRINT_REPUBLISH 0x00000008\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "DSPRINT_PENDING 0x80000000\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "PRINTER_CONTROL_PAUSE 1\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "PRINTER_CONTROL_RESUME 2\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "PRINTER_CONTROL_PURGE 3\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "PRINTER_CONTROL_SET_STATUS 4\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "PRINTER_STATUS_PAUSED 0x00000001\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "PRINTER_STATUS_ERROR 0x00000002\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "PRINTER_STATUS_PENDING_DELETION 0x00000004\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "PRINTER_STATUS_PAPER_JAM 0x00000008\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "PRINTER_STATUS_PAPER_OUT 0x00000010\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "PRINTER_STATUS_MANUAL_FEED 0x00000020\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "PRINTER_STATUS_PAPER_PROBLEM 0x00000040\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "PRINTER_STATUS_OFFLINE 0x00000080\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "PRINTER_STATUS_IO_ACTIVE 0x00000100\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "PRINTER_STATUS_BUSY 0x00000200\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "PRINTER_STATUS_PRINTING 0x00000400\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "PRINTER_STATUS_OUTPUT_BIN_FULL 0x00000800\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "PRINTER_STATUS_NOT_AVAILABLE 0x00001000\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "PRINTER_STATUS_WAITING 0x00002000\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "PRINTER_STATUS_PROCESSING 0x00004000\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "PRINTER_STATUS_INITIALIZING 0x00008000\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "PRINTER_STATUS_WARMING_UP 0x00010000\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "PRINTER_STATUS_TONER_LOW 0x00020000\0"
	.byte	0x1
	.uleb128 0xc8
	.ascii "PRINTER_STATUS_NO_TONER 0x00040000\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "PRINTER_STATUS_PAGE_PUNT 0x00080000\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "PRINTER_STATUS_USER_INTERVENTION 0x00100000\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "PRINTER_STATUS_OUT_OF_MEMORY 0x00200000\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "PRINTER_STATUS_DOOR_OPEN 0x00400000\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "PRINTER_STATUS_SERVER_UNKNOWN 0x00800000\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "PRINTER_STATUS_POWER_SAVE 0x01000000\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "PRINTER_ATTRIBUTE_QUEUED 0x00000001\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "PRINTER_ATTRIBUTE_DIRECT 0x00000002\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "PRINTER_ATTRIBUTE_DEFAULT 0x00000004\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "PRINTER_ATTRIBUTE_SHARED 0x00000008\0"
	.byte	0x1
	.uleb128 0xd4
	.ascii "PRINTER_ATTRIBUTE_NETWORK 0x00000010\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "PRINTER_ATTRIBUTE_HIDDEN 0x00000020\0"
	.byte	0x1
	.uleb128 0xd6
	.ascii "PRINTER_ATTRIBUTE_LOCAL 0x00000040\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "PRINTER_ATTRIBUTE_ENABLE_DEVQ 0x00000080\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "PRINTER_ATTRIBUTE_KEEPPRINTEDJOBS 0x00000100\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "PRINTER_ATTRIBUTE_DO_COMPLETE_FIRST 0x00000200\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "PRINTER_ATTRIBUTE_WORK_OFFLINE 0x00000400\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "PRINTER_ATTRIBUTE_ENABLE_BIDI 0x00000800\0"
	.byte	0x1
	.uleb128 0xde
	.ascii "PRINTER_ATTRIBUTE_RAW_ONLY 0x00001000\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "PRINTER_ATTRIBUTE_PUBLISHED 0x00002000\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "PRINTER_ATTRIBUTE_FAX 0x00004000\0"
	.byte	0x1
	.uleb128 0xe1
	.ascii "PRINTER_ATTRIBUTE_TS 0x00008000\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "NO_PRIORITY 0\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "MAX_PRIORITY 99\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "MIN_PRIORITY 1\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "DEF_PRIORITY 1\0"
	.byte	0x1
	.uleb128 0x14a
	.ascii "JOB_CONTROL_PAUSE 1\0"
	.byte	0x1
	.uleb128 0x14b
	.ascii "JOB_CONTROL_RESUME 2\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "JOB_CONTROL_CANCEL 3\0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "JOB_CONTROL_RESTART 4\0"
	.byte	0x1
	.uleb128 0x14e
	.ascii "JOB_CONTROL_DELETE 5\0"
	.byte	0x1
	.uleb128 0x14f
	.ascii "JOB_CONTROL_SENT_TO_PRINTER 6\0"
	.byte	0x1
	.uleb128 0x150
	.ascii "JOB_CONTROL_LAST_PAGE_EJECTED 7\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "JOB_STATUS_PAUSED 0x00000001\0"
	.byte	0x1
	.uleb128 0x153
	.ascii "JOB_STATUS_ERROR 0x00000002\0"
	.byte	0x1
	.uleb128 0x154
	.ascii "JOB_STATUS_DELETING 0x00000004\0"
	.byte	0x1
	.uleb128 0x155
	.ascii "JOB_STATUS_SPOOLING 0x00000008\0"
	.byte	0x1
	.uleb128 0x156
	.ascii "JOB_STATUS_PRINTING 0x00000010\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "JOB_STATUS_OFFLINE 0x00000020\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "JOB_STATUS_PAPEROUT 0x00000040\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "JOB_STATUS_PRINTED 0x00000080\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "JOB_STATUS_DELETED 0x00000100\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "JOB_STATUS_BLOCKED_DEVQ 0x00000200\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "JOB_STATUS_USER_INTERVENTION 0x00000400\0"
	.byte	0x1
	.uleb128 0x15d
	.ascii "JOB_STATUS_RESTART 0x00000800\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "JOB_STATUS_COMPLETE 0x00001000\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "JOB_POSITION_UNSPECIFIED 0\0"
	.byte	0x1
	.uleb128 0x218
	.ascii "DRIVER_KERNELMODE 0x00000001\0"
	.byte	0x1
	.uleb128 0x219
	.ascii "DRIVER_USERMODE 0x00000002\0"
	.byte	0x1
	.uleb128 0x21b
	.ascii "DPD_DELETE_UNUSED_FILES 0x00000001\0"
	.byte	0x1
	.uleb128 0x21c
	.ascii "DPD_DELETE_SPECIFIC_VERSION 0x00000002\0"
	.byte	0x1
	.uleb128 0x21d
	.ascii "DPD_DELETE_ALL_FILES 0x00000004\0"
	.byte	0x1
	.uleb128 0x21f
	.ascii "APD_STRICT_UPGRADE 0x00000001\0"
	.byte	0x1
	.uleb128 0x220
	.ascii "APD_STRICT_DOWNGRADE 0x00000002\0"
	.byte	0x1
	.uleb128 0x221
	.ascii "APD_COPY_ALL_FILES 0x00000004\0"
	.byte	0x1
	.uleb128 0x222
	.ascii "APD_COPY_NEW_FILES 0x00000008\0"
	.byte	0x1
	.uleb128 0x223
	.ascii "APD_COPY_FROM_DIRECTORY 0x00000010\0"
	.byte	0x1
	.uleb128 0x25b
	.ascii "DI_CHANNEL 1\0"
	.byte	0x1
	.uleb128 0x25c
	.ascii "DI_READ_SPOOL_JOB 3\0"
	.byte	0x1
	.uleb128 0x270
	.ascii "DI_MEMORYMAP_WRITE 0x00000001\0"
	.byte	0x1
	.uleb128 0x272
	.ascii "FORM_USER 0x00000000\0"
	.byte	0x1
	.uleb128 0x273
	.ascii "FORM_BUILTIN 0x00000001\0"
	.byte	0x1
	.uleb128 0x274
	.ascii "FORM_PRINTER 0x00000002\0"
	.byte	0x1
	.uleb128 0x289
	.ascii "NORMAL_PRINT 0x00000000\0"
	.byte	0x1
	.uleb128 0x28a
	.ascii "REVERSE_PRINT 0x00000001\0"
	.byte	0x1
	.uleb128 0x2ab
	.ascii "PORT_TYPE_WRITE 0x0001\0"
	.byte	0x1
	.uleb128 0x2ac
	.ascii "PORT_TYPE_READ 0x0002\0"
	.byte	0x1
	.uleb128 0x2ad
	.ascii "PORT_TYPE_REDIRECTED 0x0004\0"
	.byte	0x1
	.uleb128 0x2ae
	.ascii "PORT_TYPE_NET_ATTACHED 0x0008\0"
	.byte	0x1
	.uleb128 0x2c0
	.ascii "PORT_STATUS_TYPE_ERROR 1\0"
	.byte	0x1
	.uleb128 0x2c1
	.ascii "PORT_STATUS_TYPE_WARNING 2\0"
	.byte	0x1
	.uleb128 0x2c2
	.ascii "PORT_STATUS_TYPE_INFO 3\0"
	.byte	0x1
	.uleb128 0x2c4
	.ascii "PORT_STATUS_OFFLINE 1\0"
	.byte	0x1
	.uleb128 0x2c5
	.ascii "PORT_STATUS_PAPER_JAM 2\0"
	.byte	0x1
	.uleb128 0x2c6
	.ascii "PORT_STATUS_PAPER_OUT 3\0"
	.byte	0x1
	.uleb128 0x2c7
	.ascii "PORT_STATUS_OUTPUT_BIN_FULL 4\0"
	.byte	0x1
	.uleb128 0x2c8
	.ascii "PORT_STATUS_PAPER_PROBLEM 5\0"
	.byte	0x1
	.uleb128 0x2c9
	.ascii "PORT_STATUS_NO_TONER 6\0"
	.byte	0x1
	.uleb128 0x2ca
	.ascii "PORT_STATUS_DOOR_OPEN 7\0"
	.byte	0x1
	.uleb128 0x2cb
	.ascii "PORT_STATUS_USER_INTERVENTION 8\0"
	.byte	0x1
	.uleb128 0x2cc
	.ascii "PORT_STATUS_OUT_OF_MEMORY 9\0"
	.byte	0x1
	.uleb128 0x2cd
	.ascii "PORT_STATUS_TONER_LOW 10\0"
	.byte	0x1
	.uleb128 0x2ce
	.ascii "PORT_STATUS_WARMING_UP 11\0"
	.byte	0x1
	.uleb128 0x2cf
	.ascii "PORT_STATUS_POWER_SAVE 12\0"
	.byte	0x1
	.uleb128 0x31d
	.ascii "EnumPrinters __MINGW_NAME_AW(EnumPrinters)\0"
	.byte	0x1
	.uleb128 0x322
	.ascii "PRINTER_ENUM_DEFAULT 0x00000001\0"
	.byte	0x1
	.uleb128 0x323
	.ascii "PRINTER_ENUM_LOCAL 0x00000002\0"
	.byte	0x1
	.uleb128 0x324
	.ascii "PRINTER_ENUM_CONNECTIONS 0x00000004\0"
	.byte	0x1
	.uleb128 0x325
	.ascii "PRINTER_ENUM_FAVORITE 0x00000004\0"
	.byte	0x1
	.uleb128 0x326
	.ascii "PRINTER_ENUM_NAME 0x00000008\0"
	.byte	0x1
	.uleb128 0x327
	.ascii "PRINTER_ENUM_REMOTE 0x00000010\0"
	.byte	0x1
	.uleb128 0x328
	.ascii "PRINTER_ENUM_SHARED 0x00000020\0"
	.byte	0x1
	.uleb128 0x329
	.ascii "PRINTER_ENUM_NETWORK 0x00000040\0"
	.byte	0x1
	.uleb128 0x32b
	.ascii "PRINTER_ENUM_EXPAND 0x00004000\0"
	.byte	0x1
	.uleb128 0x32c
	.ascii "PRINTER_ENUM_CONTAINER 0x00008000\0"
	.byte	0x1
	.uleb128 0x32e
	.ascii "PRINTER_ENUM_ICONMASK 0x00ff0000\0"
	.byte	0x1
	.uleb128 0x32f
	.ascii "PRINTER_ENUM_ICON1 0x00010000\0"
	.byte	0x1
	.uleb128 0x330
	.ascii "PRINTER_ENUM_ICON2 0x00020000\0"
	.byte	0x1
	.uleb128 0x331
	.ascii "PRINTER_ENUM_ICON3 0x00040000\0"
	.byte	0x1
	.uleb128 0x332
	.ascii "PRINTER_ENUM_ICON4 0x00080000\0"
	.byte	0x1
	.uleb128 0x333
	.ascii "PRINTER_ENUM_ICON5 0x00100000\0"
	.byte	0x1
	.uleb128 0x334
	.ascii "PRINTER_ENUM_ICON6 0x00200000\0"
	.byte	0x1
	.uleb128 0x335
	.ascii "PRINTER_ENUM_ICON7 0x00400000\0"
	.byte	0x1
	.uleb128 0x336
	.ascii "PRINTER_ENUM_ICON8 0x00800000\0"
	.byte	0x1
	.uleb128 0x337
	.ascii "PRINTER_ENUM_HIDE 0x01000000\0"
	.byte	0x1
	.uleb128 0x339
	.ascii "SPOOL_FILE_PERSISTENT 0x00000001\0"
	.byte	0x1
	.uleb128 0x33a
	.ascii "SPOOL_FILE_TEMPORARY 0x00000002\0"
	.byte	0x1
	.uleb128 0x33c
	.ascii "OpenPrinter __MINGW_NAME_AW(OpenPrinter)\0"
	.byte	0x1
	.uleb128 0x33d
	.ascii "ResetPrinter __MINGW_NAME_AW(ResetPrinter)\0"
	.byte	0x1
	.uleb128 0x33e
	.ascii "SetJob __MINGW_NAME_AW(SetJob)\0"
	.byte	0x1
	.uleb128 0x33f
	.ascii "GetJob __MINGW_NAME_AW(GetJob)\0"
	.byte	0x1
	.uleb128 0x340
	.ascii "EnumJobs __MINGW_NAME_AW(EnumJobs)\0"
	.byte	0x1
	.uleb128 0x341
	.ascii "AddPrinter __MINGW_NAME_AW(AddPrinter)\0"
	.byte	0x1
	.uleb128 0x342
	.ascii "SetPrinter __MINGW_NAME_AW(SetPrinter)\0"
	.byte	0x1
	.uleb128 0x343
	.ascii "GetPrinter __MINGW_NAME_AW(GetPrinter)\0"
	.byte	0x1
	.uleb128 0x344
	.ascii "AddPrinterDriver __MINGW_NAME_AW(AddPrinterDriver)\0"
	.byte	0x1
	.uleb128 0x345
	.ascii "AddPrinterDriverEx __MINGW_NAME_AW(AddPrinterDriverEx)\0"
	.byte	0x1
	.uleb128 0x346
	.ascii "EnumPrinterDrivers __MINGW_NAME_AW(EnumPrinterDrivers)\0"
	.byte	0x1
	.uleb128 0x347
	.ascii "GetPrinterDriver __MINGW_NAME_AW(GetPrinterDriver)\0"
	.byte	0x1
	.uleb128 0x348
	.ascii "GetPrinterDriverDirectory __MINGW_NAME_AW(GetPrinterDriverDirectory)\0"
	.byte	0x1
	.uleb128 0x349
	.ascii "DeletePrinterDriver __MINGW_NAME_AW(DeletePrinterDriver)\0"
	.byte	0x1
	.uleb128 0x34a
	.ascii "DeletePrinterDriverEx __MINGW_NAME_AW(DeletePrinterDriverEx)\0"
	.byte	0x1
	.uleb128 0x34b
	.ascii "AddPrintProcessor __MINGW_NAME_AW(AddPrintProcessor)\0"
	.byte	0x1
	.uleb128 0x34c
	.ascii "EnumPrintProcessors __MINGW_NAME_AW(EnumPrintProcessors)\0"
	.byte	0x1
	.uleb128 0x34d
	.ascii "GetPrintProcessorDirectory __MINGW_NAME_AW(GetPrintProcessorDirectory)\0"
	.byte	0x1
	.uleb128 0x34e
	.ascii "EnumPrintProcessorDatatypes __MINGW_NAME_AW(EnumPrintProcessorDatatypes)\0"
	.byte	0x1
	.uleb128 0x34f
	.ascii "DeletePrintProcessor __MINGW_NAME_AW(DeletePrintProcessor)\0"
	.byte	0x1
	.uleb128 0x350
	.ascii "StartDocPrinter __MINGW_NAME_AW(StartDocPrinter)\0"
	.byte	0x1
	.uleb128 0x351
	.ascii "AddJob __MINGW_NAME_AW(AddJob)\0"
	.byte	0x1
	.uleb128 0x352
	.ascii "DocumentProperties __MINGW_NAME_AW(DocumentProperties)\0"
	.byte	0x1
	.uleb128 0x353
	.ascii "AdvancedDocumentProperties __MINGW_NAME_AW(AdvancedDocumentProperties)\0"
	.byte	0x1
	.uleb128 0x354
	.ascii "GetPrinterData __MINGW_NAME_AW(GetPrinterData)\0"
	.byte	0x1
	.uleb128 0x355
	.ascii "GetPrinterDataEx __MINGW_NAME_AW(GetPrinterDataEx)\0"
	.byte	0x1
	.uleb128 0x356
	.ascii "EnumPrinterData __MINGW_NAME_AW(EnumPrinterData)\0"
	.byte	0x1
	.uleb128 0x357
	.ascii "EnumPrinterDataEx __MINGW_NAME_AW(EnumPrinterDataEx)\0"
	.byte	0x1
	.uleb128 0x358
	.ascii "EnumPrinterKey __MINGW_NAME_AW(EnumPrinterKey)\0"
	.byte	0x1
	.uleb128 0x359
	.ascii "SetPrinterData __MINGW_NAME_AW(SetPrinterData)\0"
	.byte	0x1
	.uleb128 0x35a
	.ascii "SetPrinterDataEx __MINGW_NAME_AW(SetPrinterDataEx)\0"
	.byte	0x1
	.uleb128 0x35b
	.ascii "DeletePrinterData __MINGW_NAME_AW(DeletePrinterData)\0"
	.byte	0x1
	.uleb128 0x35c
	.ascii "DeletePrinterDataEx __MINGW_NAME_AW(DeletePrinterDataEx)\0"
	.byte	0x1
	.uleb128 0x35d
	.ascii "DeletePrinterKey __MINGW_NAME_AW(DeletePrinterKey)\0"
	.byte	0x1
	.uleb128 0x3af
	.ascii "PRINTER_NOTIFY_TYPE 0x00\0"
	.byte	0x1
	.uleb128 0x3b0
	.ascii "JOB_NOTIFY_TYPE 0x01\0"
	.byte	0x1
	.uleb128 0x3b2
	.ascii "PRINTER_NOTIFY_FIELD_SERVER_NAME 0x00\0"
	.byte	0x1
	.uleb128 0x3b3
	.ascii "PRINTER_NOTIFY_FIELD_PRINTER_NAME 0x01\0"
	.byte	0x1
	.uleb128 0x3b4
	.ascii "PRINTER_NOTIFY_FIELD_SHARE_NAME 0x02\0"
	.byte	0x1
	.uleb128 0x3b5
	.ascii "PRINTER_NOTIFY_FIELD_PORT_NAME 0x03\0"
	.byte	0x1
	.uleb128 0x3b6
	.ascii "PRINTER_NOTIFY_FIELD_DRIVER_NAME 0x04\0"
	.byte	0x1
	.uleb128 0x3b7
	.ascii "PRINTER_NOTIFY_FIELD_COMMENT 0x05\0"
	.byte	0x1
	.uleb128 0x3b8
	.ascii "PRINTER_NOTIFY_FIELD_LOCATION 0x06\0"
	.byte	0x1
	.uleb128 0x3b9
	.ascii "PRINTER_NOTIFY_FIELD_DEVMODE 0x07\0"
	.byte	0x1
	.uleb128 0x3ba
	.ascii "PRINTER_NOTIFY_FIELD_SEPFILE 0x08\0"
	.byte	0x1
	.uleb128 0x3bb
	.ascii "PRINTER_NOTIFY_FIELD_PRINT_PROCESSOR 0x09\0"
	.byte	0x1
	.uleb128 0x3bc
	.ascii "PRINTER_NOTIFY_FIELD_PARAMETERS 0x0A\0"
	.byte	0x1
	.uleb128 0x3bd
	.ascii "PRINTER_NOTIFY_FIELD_DATATYPE 0x0B\0"
	.byte	0x1
	.uleb128 0x3be
	.ascii "PRINTER_NOTIFY_FIELD_SECURITY_DESCRIPTOR 0x0C\0"
	.byte	0x1
	.uleb128 0x3bf
	.ascii "PRINTER_NOTIFY_FIELD_ATTRIBUTES 0x0D\0"
	.byte	0x1
	.uleb128 0x3c0
	.ascii "PRINTER_NOTIFY_FIELD_PRIORITY 0x0E\0"
	.byte	0x1
	.uleb128 0x3c1
	.ascii "PRINTER_NOTIFY_FIELD_DEFAULT_PRIORITY 0x0F\0"
	.byte	0x1
	.uleb128 0x3c2
	.ascii "PRINTER_NOTIFY_FIELD_START_TIME 0x10\0"
	.byte	0x1
	.uleb128 0x3c3
	.ascii "PRINTER_NOTIFY_FIELD_UNTIL_TIME 0x11\0"
	.byte	0x1
	.uleb128 0x3c4
	.ascii "PRINTER_NOTIFY_FIELD_STATUS 0x12\0"
	.byte	0x1
	.uleb128 0x3c5
	.ascii "PRINTER_NOTIFY_FIELD_STATUS_STRING 0x13\0"
	.byte	0x1
	.uleb128 0x3c6
	.ascii "PRINTER_NOTIFY_FIELD_CJOBS 0x14\0"
	.byte	0x1
	.uleb128 0x3c7
	.ascii "PRINTER_NOTIFY_FIELD_AVERAGE_PPM 0x15\0"
	.byte	0x1
	.uleb128 0x3c8
	.ascii "PRINTER_NOTIFY_FIELD_TOTAL_PAGES 0x16\0"
	.byte	0x1
	.uleb128 0x3c9
	.ascii "PRINTER_NOTIFY_FIELD_PAGES_PRINTED 0x17\0"
	.byte	0x1
	.uleb128 0x3ca
	.ascii "PRINTER_NOTIFY_FIELD_TOTAL_BYTES 0x18\0"
	.byte	0x1
	.uleb128 0x3cb
	.ascii "PRINTER_NOTIFY_FIELD_BYTES_PRINTED 0x19\0"
	.byte	0x1
	.uleb128 0x3cc
	.ascii "PRINTER_NOTIFY_FIELD_OBJECT_GUID 0x1A\0"
	.byte	0x1
	.uleb128 0x3ce
	.ascii "JOB_NOTIFY_FIELD_PRINTER_NAME 0x00\0"
	.byte	0x1
	.uleb128 0x3cf
	.ascii "JOB_NOTIFY_FIELD_MACHINE_NAME 0x01\0"
	.byte	0x1
	.uleb128 0x3d0
	.ascii "JOB_NOTIFY_FIELD_PORT_NAME 0x02\0"
	.byte	0x1
	.uleb128 0x3d1
	.ascii "JOB_NOTIFY_FIELD_USER_NAME 0x03\0"
	.byte	0x1
	.uleb128 0x3d2
	.ascii "JOB_NOTIFY_FIELD_NOTIFY_NAME 0x04\0"
	.byte	0x1
	.uleb128 0x3d3
	.ascii "JOB_NOTIFY_FIELD_DATATYPE 0x05\0"
	.byte	0x1
	.uleb128 0x3d4
	.ascii "JOB_NOTIFY_FIELD_PRINT_PROCESSOR 0x06\0"
	.byte	0x1
	.uleb128 0x3d5
	.ascii "JOB_NOTIFY_FIELD_PARAMETERS 0x07\0"
	.byte	0x1
	.uleb128 0x3d6
	.ascii "JOB_NOTIFY_FIELD_DRIVER_NAME 0x08\0"
	.byte	0x1
	.uleb128 0x3d7
	.ascii "JOB_NOTIFY_FIELD_DEVMODE 0x09\0"
	.byte	0x1
	.uleb128 0x3d8
	.ascii "JOB_NOTIFY_FIELD_STATUS 0x0A\0"
	.byte	0x1
	.uleb128 0x3d9
	.ascii "JOB_NOTIFY_FIELD_STATUS_STRING 0x0B\0"
	.byte	0x1
	.uleb128 0x3da
	.ascii "JOB_NOTIFY_FIELD_SECURITY_DESCRIPTOR 0x0C\0"
	.byte	0x1
	.uleb128 0x3db
	.ascii "JOB_NOTIFY_FIELD_DOCUMENT 0x0D\0"
	.byte	0x1
	.uleb128 0x3dc
	.ascii "JOB_NOTIFY_FIELD_PRIORITY 0x0E\0"
	.byte	0x1
	.uleb128 0x3dd
	.ascii "JOB_NOTIFY_FIELD_POSITION 0x0F\0"
	.byte	0x1
	.uleb128 0x3de
	.ascii "JOB_NOTIFY_FIELD_SUBMITTED 0x10\0"
	.byte	0x1
	.uleb128 0x3df
	.ascii "JOB_NOTIFY_FIELD_START_TIME 0x11\0"
	.byte	0x1
	.uleb128 0x3e0
	.ascii "JOB_NOTIFY_FIELD_UNTIL_TIME 0x12\0"
	.byte	0x1
	.uleb128 0x3e1
	.ascii "JOB_NOTIFY_FIELD_TIME 0x13\0"
	.byte	0x1
	.uleb128 0x3e2
	.ascii "JOB_NOTIFY_FIELD_TOTAL_PAGES 0x14\0"
	.byte	0x1
	.uleb128 0x3e3
	.ascii "JOB_NOTIFY_FIELD_PAGES_PRINTED 0x15\0"
	.byte	0x1
	.uleb128 0x3e4
	.ascii "JOB_NOTIFY_FIELD_TOTAL_BYTES 0x16\0"
	.byte	0x1
	.uleb128 0x3e5
	.ascii "JOB_NOTIFY_FIELD_BYTES_PRINTED 0x17\0"
	.byte	0x1
	.uleb128 0x3f0
	.ascii "PRINTER_NOTIFY_OPTIONS_REFRESH 0x01\0"
	.byte	0x1
	.uleb128 0x3f9
	.ascii "PRINTER_NOTIFY_INFO_DISCARDED 0x01\0"
	.byte	0x1
	.uleb128 0x43b
	.ascii "BIDI_ACTION_ENUM_SCHEMA L\"EnumSchema\"\0"
	.byte	0x1
	.uleb128 0x43c
	.ascii "BIDI_ACTION_GET L\"Get\"\0"
	.byte	0x1
	.uleb128 0x43d
	.ascii "BIDI_ACTION_SET L\"Set\"\0"
	.byte	0x1
	.uleb128 0x43e
	.ascii "BIDI_ACTION_GET_ALL L\"GetAll\"\0"
	.byte	0x1
	.uleb128 0x444
	.ascii "BIDI_ACCESS_ADMINISTRATOR 0x1\0"
	.byte	0x1
	.uleb128 0x445
	.ascii "BIDI_ACCESS_USER 0x2\0"
	.byte	0x1
	.uleb128 0x447
	.ascii "ERROR_BIDI_STATUS_OK 0\0"
	.byte	0x1
	.uleb128 0x448
	.ascii "ERROR_BIDI_NOT_SUPPORTED ERROR_NOT_SUPPORTED\0"
	.byte	0x1
	.uleb128 0x44a
	.ascii "ERROR_BIDI_ERROR_BASE 13000\0"
	.byte	0x1
	.uleb128 0x44b
	.ascii "ERROR_BIDI_STATUS_WARNING (ERROR_BIDI_ERROR_BASE + 1)\0"
	.byte	0x1
	.uleb128 0x44c
	.ascii "ERROR_BIDI_SCHEMA_READ_ONLY (ERROR_BIDI_ERROR_BASE + 2)\0"
	.byte	0x1
	.uleb128 0x44d
	.ascii "ERROR_BIDI_SERVER_OFFLINE (ERROR_BIDI_ERROR_BASE + 3)\0"
	.byte	0x1
	.uleb128 0x44e
	.ascii "ERROR_BIDI_DEVICE_OFFLINE (ERROR_BIDI_ERROR_BASE + 4)\0"
	.byte	0x1
	.uleb128 0x44f
	.ascii "ERROR_BIDI_SCHEMA_NOT_SUPPORTED (ERROR_BIDI_ERROR_BASE + 5)\0"
	.byte	0x1
	.uleb128 0x457
	.ascii "PRINTER_CHANGE_ADD_PRINTER 0x00000001\0"
	.byte	0x1
	.uleb128 0x458
	.ascii "PRINTER_CHANGE_SET_PRINTER 0x00000002\0"
	.byte	0x1
	.uleb128 0x459
	.ascii "PRINTER_CHANGE_DELETE_PRINTER 0x00000004\0"
	.byte	0x1
	.uleb128 0x45a
	.ascii "PRINTER_CHANGE_FAILED_CONNECTION_PRINTER 0x00000008\0"
	.byte	0x1
	.uleb128 0x45b
	.ascii "PRINTER_CHANGE_PRINTER 0x000000FF\0"
	.byte	0x1
	.uleb128 0x45c
	.ascii "PRINTER_CHANGE_ADD_JOB 0x00000100\0"
	.byte	0x1
	.uleb128 0x45d
	.ascii "PRINTER_CHANGE_SET_JOB 0x00000200\0"
	.byte	0x1
	.uleb128 0x45e
	.ascii "PRINTER_CHANGE_DELETE_JOB 0x00000400\0"
	.byte	0x1
	.uleb128 0x45f
	.ascii "PRINTER_CHANGE_WRITE_JOB 0x00000800\0"
	.byte	0x1
	.uleb128 0x460
	.ascii "PRINTER_CHANGE_JOB 0x0000FF00\0"
	.byte	0x1
	.uleb128 0x461
	.ascii "PRINTER_CHANGE_ADD_FORM 0x00010000\0"
	.byte	0x1
	.uleb128 0x462
	.ascii "PRINTER_CHANGE_SET_FORM 0x00020000\0"
	.byte	0x1
	.uleb128 0x463
	.ascii "PRINTER_CHANGE_DELETE_FORM 0x00040000\0"
	.byte	0x1
	.uleb128 0x464
	.ascii "PRINTER_CHANGE_FORM 0x00070000\0"
	.byte	0x1
	.uleb128 0x465
	.ascii "PRINTER_CHANGE_ADD_PORT 0x00100000\0"
	.byte	0x1
	.uleb128 0x466
	.ascii "PRINTER_CHANGE_CONFIGURE_PORT 0x00200000\0"
	.byte	0x1
	.uleb128 0x467
	.ascii "PRINTER_CHANGE_DELETE_PORT 0x00400000\0"
	.byte	0x1
	.uleb128 0x468
	.ascii "PRINTER_CHANGE_PORT 0x00700000\0"
	.byte	0x1
	.uleb128 0x469
	.ascii "PRINTER_CHANGE_ADD_PRINT_PROCESSOR 0x01000000\0"
	.byte	0x1
	.uleb128 0x46a
	.ascii "PRINTER_CHANGE_DELETE_PRINT_PROCESSOR 0x04000000\0"
	.byte	0x1
	.uleb128 0x46b
	.ascii "PRINTER_CHANGE_PRINT_PROCESSOR 0x07000000\0"
	.byte	0x1
	.uleb128 0x46c
	.ascii "PRINTER_CHANGE_ADD_PRINTER_DRIVER 0x10000000\0"
	.byte	0x1
	.uleb128 0x46d
	.ascii "PRINTER_CHANGE_SET_PRINTER_DRIVER 0x20000000\0"
	.byte	0x1
	.uleb128 0x46e
	.ascii "PRINTER_CHANGE_DELETE_PRINTER_DRIVER 0x40000000\0"
	.byte	0x1
	.uleb128 0x46f
	.ascii "PRINTER_CHANGE_PRINTER_DRIVER 0x70000000\0"
	.byte	0x1
	.uleb128 0x470
	.ascii "PRINTER_CHANGE_TIMEOUT 0x80000000\0"
	.byte	0x1
	.uleb128 0x471
	.ascii "PRINTER_CHANGE_ALL 0x7777FFFF\0"
	.byte	0x1
	.uleb128 0x473
	.ascii "PrinterMessageBox __MINGW_NAME_AW(PrinterMessageBox)\0"
	.byte	0x1
	.uleb128 0x474
	.ascii "AddForm __MINGW_NAME_AW(AddForm)\0"
	.byte	0x1
	.uleb128 0x475
	.ascii "DeleteForm __MINGW_NAME_AW(DeleteForm)\0"
	.byte	0x1
	.uleb128 0x476
	.ascii "GetForm __MINGW_NAME_AW(GetForm)\0"
	.byte	0x1
	.uleb128 0x477
	.ascii "SetForm __MINGW_NAME_AW(SetForm)\0"
	.byte	0x1
	.uleb128 0x478
	.ascii "EnumForms __MINGW_NAME_AW(EnumForms)\0"
	.byte	0x1
	.uleb128 0x479
	.ascii "EnumMonitors __MINGW_NAME_AW(EnumMonitors)\0"
	.byte	0x1
	.uleb128 0x47a
	.ascii "AddMonitor __MINGW_NAME_AW(AddMonitor)\0"
	.byte	0x1
	.uleb128 0x47b
	.ascii "DeleteMonitor __MINGW_NAME_AW(DeleteMonitor)\0"
	.byte	0x1
	.uleb128 0x47c
	.ascii "EnumPorts __MINGW_NAME_AW(EnumPorts)\0"
	.byte	0x1
	.uleb128 0x47d
	.ascii "AddPort __MINGW_NAME_AW(AddPort)\0"
	.byte	0x1
	.uleb128 0x47e
	.ascii "ConfigurePort __MINGW_NAME_AW(ConfigurePort)\0"
	.byte	0x1
	.uleb128 0x47f
	.ascii "DeletePort __MINGW_NAME_AW(DeletePort)\0"
	.byte	0x1
	.uleb128 0x480
	.ascii "GetDefaultPrinter __MINGW_NAME_AW(GetDefaultPrinter)\0"
	.byte	0x1
	.uleb128 0x481
	.ascii "SetDefaultPrinter __MINGW_NAME_AW(SetDefaultPrinter)\0"
	.byte	0x1
	.uleb128 0x482
	.ascii "SetPort __MINGW_NAME_AW(SetPort)\0"
	.byte	0x1
	.uleb128 0x483
	.ascii "AddPrinterConnection __MINGW_NAME_AW(AddPrinterConnection)\0"
	.byte	0x1
	.uleb128 0x484
	.ascii "DeletePrinterConnection __MINGW_NAME_AW(DeletePrinterConnection)\0"
	.byte	0x1
	.uleb128 0x489
	.ascii "PRINTER_ERROR_INFORMATION 0x80000000\0"
	.byte	0x1
	.uleb128 0x48a
	.ascii "PRINTER_ERROR_WARNING 0x40000000\0"
	.byte	0x1
	.uleb128 0x48b
	.ascii "PRINTER_ERROR_SEVERE 0x20000000\0"
	.byte	0x1
	.uleb128 0x48d
	.ascii "PRINTER_ERROR_OUTOFPAPER 0x00000001\0"
	.byte	0x1
	.uleb128 0x48e
	.ascii "PRINTER_ERROR_JAM 0x00000002\0"
	.byte	0x1
	.uleb128 0x48f
	.ascii "PRINTER_ERROR_OUTOFTONER 0x00000004\0"
	.byte	0x1
	.uleb128 0x4ac
	.ascii "XcvData XcvDataW\0"
	.byte	0x1
	.uleb128 0x4d6
	.ascii "AddPrintProvidor __MINGW_NAME_AW(AddPrintProvidor)\0"
	.byte	0x1
	.uleb128 0x4d7
	.ascii "DeletePrintProvidor __MINGW_NAME_AW(DeletePrintProvidor)\0"
	.byte	0x1
	.uleb128 0x4d8
	.ascii "IsValidDevmode __MINGW_NAME_AW(IsValidDevmode)\0"
	.byte	0x1
	.uleb128 0x4e1
	.ascii "SPLREG_DEFAULT_SPOOL_DIRECTORY TEXT(\"DefaultSpoolDirectory\")\0"
	.byte	0x1
	.uleb128 0x4e2
	.ascii "SPLREG_PORT_THREAD_PRIORITY_DEFAULT TEXT(\"PortThreadPriorityDefault\")\0"
	.byte	0x1
	.uleb128 0x4e3
	.ascii "SPLREG_PORT_THREAD_PRIORITY TEXT(\"PortThreadPriority\")\0"
	.byte	0x1
	.uleb128 0x4e4
	.ascii "SPLREG_SCHEDULER_THREAD_PRIORITY_DEFAULT TEXT(\"SchedulerThreadPriorityDefault\")\0"
	.byte	0x1
	.uleb128 0x4e5
	.ascii "SPLREG_SCHEDULER_THREAD_PRIORITY TEXT(\"SchedulerThreadPriority\")\0"
	.byte	0x1
	.uleb128 0x4e6
	.ascii "SPLREG_BEEP_ENABLED TEXT(\"BeepEnabled\")\0"
	.byte	0x1
	.uleb128 0x4e7
	.ascii "SPLREG_NET_POPUP TEXT(\"NetPopup\")\0"
	.byte	0x1
	.uleb128 0x4e8
	.ascii "SPLREG_RETRY_POPUP TEXT(\"RetryPopup\")\0"
	.byte	0x1
	.uleb128 0x4e9
	.ascii "SPLREG_NET_POPUP_TO_COMPUTER TEXT(\"NetPopupToComputer\")\0"
	.byte	0x1
	.uleb128 0x4ea
	.ascii "SPLREG_EVENT_LOG TEXT(\"EventLog\")\0"
	.byte	0x1
	.uleb128 0x4eb
	.ascii "SPLREG_MAJOR_VERSION TEXT(\"MajorVersion\")\0"
	.byte	0x1
	.uleb128 0x4ec
	.ascii "SPLREG_MINOR_VERSION TEXT(\"MinorVersion\")\0"
	.byte	0x1
	.uleb128 0x4ed
	.ascii "SPLREG_ARCHITECTURE TEXT(\"Architecture\")\0"
	.byte	0x1
	.uleb128 0x4ee
	.ascii "SPLREG_OS_VERSION TEXT(\"OSVersion\")\0"
	.byte	0x1
	.uleb128 0x4ef
	.ascii "SPLREG_OS_VERSIONEX TEXT(\"OSVersionEx\")\0"
	.byte	0x1
	.uleb128 0x4f0
	.ascii "SPLREG_DS_PRESENT TEXT(\"DsPresent\")\0"
	.byte	0x1
	.uleb128 0x4f1
	.ascii "SPLREG_DS_PRESENT_FOR_USER TEXT(\"DsPresentForUser\")\0"
	.byte	0x1
	.uleb128 0x4f2
	.ascii "SPLREG_REMOTE_FAX TEXT(\"RemoteFax\")\0"
	.byte	0x1
	.uleb128 0x4f3
	.ascii "SPLREG_RESTART_JOB_ON_POOL_ERROR TEXT(\"RestartJobOnPoolError\")\0"
	.byte	0x1
	.uleb128 0x4f4
	.ascii "SPLREG_RESTART_JOB_ON_POOL_ENABLED TEXT(\"RestartJobOnPoolEnabled\")\0"
	.byte	0x1
	.uleb128 0x4f5
	.ascii "SPLREG_DNS_MACHINE_NAME TEXT(\"DNSMachineName\")\0"
	.byte	0x1
	.uleb128 0x4f6
	.ascii "SPLREG_ALLOW_USER_MANAGEFORMS TEXT(\"AllowUserManageForms\")\0"
	.byte	0x1
	.uleb128 0x4f7
	.ascii "SPLREG_WEBSHAREMGMT TEXT(\"WebShareMgmt\")\0"
	.byte	0x1
	.uleb128 0x4f9
	.ascii "SERVER_ACCESS_ADMINISTER 0x00000001\0"
	.byte	0x1
	.uleb128 0x4fa
	.ascii "SERVER_ACCESS_ENUMERATE 0x00000002\0"
	.byte	0x1
	.uleb128 0x4fc
	.ascii "PRINTER_ACCESS_ADMINISTER 0x00000004\0"
	.byte	0x1
	.uleb128 0x4fd
	.ascii "PRINTER_ACCESS_USE 0x00000008\0"
	.byte	0x1
	.uleb128 0x4ff
	.ascii "JOB_ACCESS_ADMINISTER 0x00000010\0"
	.byte	0x1
	.uleb128 0x500
	.ascii "JOB_ACCESS_READ 0x00000020\0"
	.byte	0x1
	.uleb128 0x502
	.ascii "SERVER_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | SERVER_ACCESS_ADMINISTER | SERVER_ACCESS_ENUMERATE)\0"
	.byte	0x1
	.uleb128 0x503
	.ascii "SERVER_READ (STANDARD_RIGHTS_READ | SERVER_ACCESS_ENUMERATE)\0"
	.byte	0x1
	.uleb128 0x504
	.ascii "SERVER_WRITE (STANDARD_RIGHTS_WRITE | SERVER_ACCESS_ADMINISTER | SERVER_ACCESS_ENUMERATE)\0"
	.byte	0x1
	.uleb128 0x505
	.ascii "SERVER_EXECUTE (STANDARD_RIGHTS_EXECUTE | SERVER_ACCESS_ENUMERATE)\0"
	.byte	0x1
	.uleb128 0x506
	.ascii "PRINTER_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE)\0"
	.byte	0x1
	.uleb128 0x507
	.ascii "PRINTER_READ (STANDARD_RIGHTS_READ | PRINTER_ACCESS_USE)\0"
	.byte	0x1
	.uleb128 0x508
	.ascii "PRINTER_WRITE (STANDARD_RIGHTS_WRITE | PRINTER_ACCESS_USE)\0"
	.byte	0x1
	.uleb128 0x509
	.ascii "PRINTER_EXECUTE (STANDARD_RIGHTS_EXECUTE | PRINTER_ACCESS_USE)\0"
	.byte	0x1
	.uleb128 0x50a
	.ascii "JOB_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | JOB_ACCESS_ADMINISTER | JOB_ACCESS_READ)\0"
	.byte	0x1
	.uleb128 0x50b
	.ascii "JOB_READ (STANDARD_RIGHTS_READ | JOB_ACCESS_READ)\0"
	.byte	0x1
	.uleb128 0x50c
	.ascii "JOB_WRITE (STANDARD_RIGHTS_WRITE | JOB_ACCESS_ADMINISTER)\0"
	.byte	0x1
	.uleb128 0x50d
	.ascii "JOB_EXECUTE (STANDARD_RIGHTS_EXECUTE | JOB_ACCESS_ADMINISTER)\0"
	.byte	0x1
	.uleb128 0x50f
	.ascii "SPLDS_SPOOLER_KEY TEXT(\"DsSpooler\")\0"
	.byte	0x1
	.uleb128 0x510
	.ascii "SPLDS_DRIVER_KEY TEXT(\"DsDriver\")\0"
	.byte	0x1
	.uleb128 0x511
	.ascii "SPLDS_USER_KEY TEXT(\"DsUser\")\0"
	.byte	0x1
	.uleb128 0x513
	.ascii "SPLDS_ASSET_NUMBER TEXT(\"assetNumber\")\0"
	.byte	0x1
	.uleb128 0x514
	.ascii "SPLDS_BYTES_PER_MINUTE TEXT(\"bytesPerMinute\")\0"
	.byte	0x1
	.uleb128 0x515
	.ascii "SPLDS_DESCRIPTION TEXT(\"description\")\0"
	.byte	0x1
	.uleb128 0x516
	.ascii "SPLDS_DRIVER_NAME TEXT(\"driverName\")\0"
	.byte	0x1
	.uleb128 0x517
	.ascii "SPLDS_DRIVER_VERSION TEXT(\"driverVersion\")\0"
	.byte	0x1
	.uleb128 0x518
	.ascii "SPLDS_LOCATION TEXT(\"location\")\0"
	.byte	0x1
	.uleb128 0x519
	.ascii "SPLDS_PORT_NAME TEXT(\"portName\")\0"
	.byte	0x1
	.uleb128 0x51a
	.ascii "SPLDS_PRINT_ATTRIBUTES TEXT(\"printAttributes\")\0"
	.byte	0x1
	.uleb128 0x51b
	.ascii "SPLDS_PRINT_BIN_NAMES TEXT(\"printBinNames\")\0"
	.byte	0x1
	.uleb128 0x51c
	.ascii "SPLDS_PRINT_COLLATE TEXT(\"printCollate\")\0"
	.byte	0x1
	.uleb128 0x51d
	.ascii "SPLDS_PRINT_COLOR TEXT(\"printColor\")\0"
	.byte	0x1
	.uleb128 0x51e
	.ascii "SPLDS_PRINT_DUPLEX_SUPPORTED TEXT(\"printDuplexSupported\")\0"
	.byte	0x1
	.uleb128 0x51f
	.ascii "SPLDS_PRINT_END_TIME TEXT(\"printEndTime\")\0"
	.byte	0x1
	.uleb128 0x520
	.ascii "SPLDS_PRINTER_CLASS TEXT(\"printQueue\")\0"
	.byte	0x1
	.uleb128 0x521
	.ascii "SPLDS_PRINTER_NAME TEXT(\"printerName\")\0"
	.byte	0x1
	.uleb128 0x522
	.ascii "SPLDS_PRINT_KEEP_PRINTED_JOBS TEXT(\"printKeepPrintedJobs\")\0"
	.byte	0x1
	.uleb128 0x523
	.ascii "SPLDS_PRINT_LANGUAGE TEXT(\"printLanguage\")\0"
	.byte	0x1
	.uleb128 0x524
	.ascii "SPLDS_PRINT_MAC_ADDRESS TEXT(\"printMACAddress\")\0"
	.byte	0x1
	.uleb128 0x525
	.ascii "SPLDS_PRINT_MAX_X_EXTENT TEXT(\"printMaxXExtent\")\0"
	.byte	0x1
	.uleb128 0x526
	.ascii "SPLDS_PRINT_MAX_Y_EXTENT TEXT(\"printMaxYExtent\")\0"
	.byte	0x1
	.uleb128 0x527
	.ascii "SPLDS_PRINT_MAX_RESOLUTION_SUPPORTED TEXT(\"printMaxResolutionSupported\")\0"
	.byte	0x1
	.uleb128 0x528
	.ascii "SPLDS_PRINT_MEDIA_READY TEXT(\"printMediaReady\")\0"
	.byte	0x1
	.uleb128 0x529
	.ascii "SPLDS_PRINT_MEDIA_SUPPORTED TEXT(\"printMediaSupported\")\0"
	.byte	0x1
	.uleb128 0x52a
	.ascii "SPLDS_PRINT_MEMORY TEXT(\"printMemory\")\0"
	.byte	0x1
	.uleb128 0x52b
	.ascii "SPLDS_PRINT_MIN_X_EXTENT TEXT(\"printMinXExtent\")\0"
	.byte	0x1
	.uleb128 0x52c
	.ascii "SPLDS_PRINT_MIN_Y_EXTENT TEXT(\"printMinYExtent\")\0"
	.byte	0x1
	.uleb128 0x52d
	.ascii "SPLDS_PRINT_NETWORK_ADDRESS TEXT(\"printNetworkAddress\")\0"
	.byte	0x1
	.uleb128 0x52e
	.ascii "SPLDS_PRINT_NOTIFY TEXT(\"printNotify\")\0"
	.byte	0x1
	.uleb128 0x52f
	.ascii "SPLDS_PRINT_NUMBER_UP TEXT(\"printNumberUp\")\0"
	.byte	0x1
	.uleb128 0x530
	.ascii "SPLDS_PRINT_ORIENTATIONS_SUPPORTED TEXT(\"printOrientationsSupported\")\0"
	.byte	0x1
	.uleb128 0x531
	.ascii "SPLDS_PRINT_OWNER TEXT(\"printOwner\")\0"
	.byte	0x1
	.uleb128 0x532
	.ascii "SPLDS_PRINT_PAGES_PER_MINUTE TEXT(\"printPagesPerMinute\")\0"
	.byte	0x1
	.uleb128 0x533
	.ascii "SPLDS_PRINT_RATE TEXT(\"printRate\")\0"
	.byte	0x1
	.uleb128 0x534
	.ascii "SPLDS_PRINT_RATE_UNIT TEXT(\"printRateUnit\")\0"
	.byte	0x1
	.uleb128 0x535
	.ascii "SPLDS_PRINT_SEPARATOR_FILE TEXT(\"printSeparatorFile\")\0"
	.byte	0x1
	.uleb128 0x536
	.ascii "SPLDS_PRINT_SHARE_NAME TEXT(\"printShareName\")\0"
	.byte	0x1
	.uleb128 0x537
	.ascii "SPLDS_PRINT_SPOOLING TEXT(\"printSpooling\")\0"
	.byte	0x1
	.uleb128 0x538
	.ascii "SPLDS_PRINT_STAPLING_SUPPORTED TEXT(\"printStaplingSupported\")\0"
	.byte	0x1
	.uleb128 0x539
	.ascii "SPLDS_PRINT_START_TIME TEXT(\"printStartTime\")\0"
	.byte	0x1
	.uleb128 0x53a
	.ascii "SPLDS_PRINT_STATUS TEXT(\"printStatus\")\0"
	.byte	0x1
	.uleb128 0x53b
	.ascii "SPLDS_PRIORITY TEXT(\"priority\")\0"
	.byte	0x1
	.uleb128 0x53c
	.ascii "SPLDS_SERVER_NAME TEXT(\"serverName\")\0"
	.byte	0x1
	.uleb128 0x53d
	.ascii "SPLDS_SHORT_SERVER_NAME TEXT(\"shortServerName\")\0"
	.byte	0x1
	.uleb128 0x53e
	.ascii "SPLDS_UNC_NAME TEXT(\"uNCName\")\0"
	.byte	0x1
	.uleb128 0x53f
	.ascii "SPLDS_URL TEXT(\"url\")\0"
	.byte	0x1
	.uleb128 0x540
	.ascii "SPLDS_FLAGS TEXT(\"flags\")\0"
	.byte	0x1
	.uleb128 0x541
	.ascii "SPLDS_VERSION_NUMBER TEXT(\"versionNumber\")\0"
	.byte	0x1
	.uleb128 0x543
	.ascii "SPLDS_PRINTER_NAME_ALIASES TEXT(\"printerNameAliases\")\0"
	.byte	0x1
	.uleb128 0x544
	.ascii "SPLDS_PRINTER_LOCATIONS TEXT(\"printerLocations\")\0"
	.byte	0x1
	.uleb128 0x545
	.ascii "SPLDS_PRINTER_MODEL TEXT(\"printerModel\")\0"
	.byte	0x4
	.byte	0x3
	.uleb128 0x6a
	.uleb128 0x199
	.byte	0x4
	.file 429 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/commdlg.h"
	.byte	0x3
	.uleb128 0x6c
	.uleb128 0x1ad
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_COMMDLG \0"
	.byte	0x1
	.uleb128 0x1c
	.ascii "WINCOMMDLGAPI DECLSPEC_IMPORT\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "CDSIZEOF_STRUCT(structname,member) (((int)((LPBYTE)(&((structname*)0)->member) - ((LPBYTE)((structname*)0)))) + sizeof(((structname*)0)->member))\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "OPENFILENAME_SIZE_VERSION_400A CDSIZEOF_STRUCT(OPENFILENAMEA,lpTemplateName)\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "OPENFILENAME_SIZE_VERSION_400W CDSIZEOF_STRUCT(OPENFILENAMEW,lpTemplateName)\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "OPENFILENAME_SIZE_VERSION_400 __MINGW_NAME_AW(OPENFILENAME_SIZE_VERSION_400)\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "GetOpenFileName __MINGW_NAME_AW(GetOpenFileName)\0"
	.byte	0x1
	.uleb128 0xa3
	.ascii "GetSaveFileName __MINGW_NAME_AW(GetSaveFileName)\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "GetFileTitle __MINGW_NAME_AW(GetFileTitle)\0"
	.byte	0x1
	.uleb128 0xaa
	.ascii "OFN_READONLY 0x1\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "OFN_OVERWRITEPROMPT 0x2\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "OFN_HIDEREADONLY 0x4\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "OFN_NOCHANGEDIR 0x8\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "OFN_SHOWHELP 0x10\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "OFN_ENABLEHOOK 0x20\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "OFN_ENABLETEMPLATE 0x40\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "OFN_ENABLETEMPLATEHANDLE 0x80\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "OFN_NOVALIDATE 0x100\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "OFN_ALLOWMULTISELECT 0x200\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "OFN_EXTENSIONDIFFERENT 0x400\0"
	.byte	0x1
	.uleb128 0xb5
	.ascii "OFN_PATHMUSTEXIST 0x800\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "OFN_FILEMUSTEXIST 0x1000\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "OFN_CREATEPROMPT 0x2000\0"
	.byte	0x1
	.uleb128 0xb8
	.ascii "OFN_SHAREAWARE 0x4000\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "OFN_NOREADONLYRETURN 0x8000\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "OFN_NOTESTFILECREATE 0x10000\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "OFN_NONETWORKBUTTON 0x20000\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "OFN_NOLONGNAMES 0x40000\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "OFN_EXPLORER 0x80000\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "OFN_NODEREFERENCELINKS 0x100000\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "OFN_LONGNAMES 0x200000\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "OFN_ENABLEINCLUDENOTIFY 0x400000\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "OFN_ENABLESIZING 0x800000\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "OFN_DONTADDTORECENT 0x2000000\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "OFN_FORCESHOWHIDDEN 0x10000000\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "OFN_EX_NOPLACESBAR 0x1\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "OFN_SHAREFALLTHROUGH 2\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "OFN_SHARENOWARN 1\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "OFN_SHAREWARN 0\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "CDN_FIRST (0U-601U)\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "CDN_LAST (0U-699U)\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "CDN_INITDONE (CDN_FIRST)\0"
	.byte	0x1
	.uleb128 0xef
	.ascii "CDN_SELCHANGE (CDN_FIRST - 1)\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "CDN_FOLDERCHANGE (CDN_FIRST - 2)\0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "CDN_SHAREVIOLATION (CDN_FIRST - 3)\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "CDN_HELP (CDN_FIRST - 4)\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "CDN_FILEOK (CDN_FIRST - 5)\0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "CDN_TYPECHANGE (CDN_FIRST - 6)\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "CDN_INCLUDEITEM (CDN_FIRST - 7)\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "CDM_FIRST (WM_USER + 100)\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "CDM_LAST (WM_USER + 200)\0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "CDM_GETSPEC (CDM_FIRST)\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "CommDlg_OpenSave_GetSpecA(_hdlg,_psz,_cbmax) (int)SNDMSG(_hdlg,CDM_GETSPEC,(WPARAM)_cbmax,(LPARAM)(LPSTR)_psz)\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "CommDlg_OpenSave_GetSpecW(_hdlg,_psz,_cbmax) (int)SNDMSG(_hdlg,CDM_GETSPEC,(WPARAM)_cbmax,(LPARAM)(LPWSTR)_psz)\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "CommDlg_OpenSave_GetSpec __MINGW_NAME_AW(CommDlg_OpenSave_GetSpec)\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "CDM_GETFILEPATH (CDM_FIRST + 1)\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "CommDlg_OpenSave_GetFilePathA(_hdlg,_psz,_cbmax) (int)SNDMSG(_hdlg,CDM_GETFILEPATH,(WPARAM)_cbmax,(LPARAM)(LPSTR)_psz)\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "CommDlg_OpenSave_GetFilePathW(_hdlg,_psz,_cbmax) (int)SNDMSG(_hdlg,CDM_GETFILEPATH,(WPARAM)_cbmax,(LPARAM)(LPWSTR)_psz)\0"
	.byte	0x1
	.uleb128 0x104
	.ascii "CommDlg_OpenSave_GetFilePath __MINGW_NAME_AW(CommDlg_OpenSave_GetFilePath)\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "CDM_GETFOLDERPATH (CDM_FIRST + 2)\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "CommDlg_OpenSave_GetFolderPathA(_hdlg,_psz,_cbmax) (int)SNDMSG(_hdlg,CDM_GETFOLDERPATH,(WPARAM)_cbmax,(LPARAM)(LPSTR)_psz)\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "CommDlg_OpenSave_GetFolderPathW(_hdlg,_psz,_cbmax) (int)SNDMSG(_hdlg,CDM_GETFOLDERPATH,(WPARAM)_cbmax,(LPARAM)(LPWSTR)_psz)\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "CommDlg_OpenSave_GetFolderPath __MINGW_NAME_AW(CommDlg_OpenSave_GetFolderPath)\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "CDM_GETFOLDERIDLIST (CDM_FIRST + 3)\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "CommDlg_OpenSave_GetFolderIDList(_hdlg,_pidl,_cbmax) (int)SNDMSG(_hdlg,CDM_GETFOLDERIDLIST,(WPARAM)_cbmax,(LPARAM)(LPVOID)_pidl)\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "CDM_SETCONTROLTEXT (CDM_FIRST + 4)\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "CommDlg_OpenSave_SetControlText(_hdlg,_id,_text) (void)SNDMSG(_hdlg,CDM_SETCONTROLTEXT,(WPARAM)_id,(LPARAM)(LPSTR)_text)\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "CDM_HIDECONTROL (CDM_FIRST + 5)\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "CommDlg_OpenSave_HideControl(_hdlg,_id) (void)SNDMSG(_hdlg,CDM_HIDECONTROL,(WPARAM)_id,0)\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "CDM_SETDEFEXT (CDM_FIRST + 6)\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "CommDlg_OpenSave_SetDefExt(_hdlg,_pszext) (void)SNDMSG(_hdlg,CDM_SETDEFEXT,0,(LPARAM)(LPSTR)_pszext)\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "ChooseColor __MINGW_NAME_AW(ChooseColor)\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "CC_RGBINIT 0x1\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "CC_FULLOPEN 0x2\0"
	.byte	0x1
	.uleb128 0x136
	.ascii "CC_PREVENTFULLOPEN 0x4\0"
	.byte	0x1
	.uleb128 0x137
	.ascii "CC_SHOWHELP 0x8\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "CC_ENABLEHOOK 0x10\0"
	.byte	0x1
	.uleb128 0x139
	.ascii "CC_ENABLETEMPLATE 0x20\0"
	.byte	0x1
	.uleb128 0x13a
	.ascii "CC_ENABLETEMPLATEHANDLE 0x40\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "CC_SOLIDCOLOR 0x80\0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "CC_ANYCOLOR 0x100\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "FR_DOWN 0x1\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "FR_WHOLEWORD 0x2\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "FR_MATCHCASE 0x4\0"
	.byte	0x1
	.uleb128 0x162
	.ascii "FR_FINDNEXT 0x8\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "FR_REPLACE 0x10\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "FR_REPLACEALL 0x20\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "FR_DIALOGTERM 0x40\0"
	.byte	0x1
	.uleb128 0x166
	.ascii "FR_SHOWHELP 0x80\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "FR_ENABLEHOOK 0x100\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "FR_ENABLETEMPLATE 0x200\0"
	.byte	0x1
	.uleb128 0x169
	.ascii "FR_NOUPDOWN 0x400\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "FR_NOMATCHCASE 0x800\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "FR_NOWHOLEWORD 0x1000\0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "FR_ENABLETEMPLATEHANDLE 0x2000\0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "FR_HIDEUPDOWN 0x4000\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "FR_HIDEMATCHCASE 0x8000\0"
	.byte	0x1
	.uleb128 0x16f
	.ascii "FR_HIDEWHOLEWORD 0x10000\0"
	.byte	0x1
	.uleb128 0x170
	.ascii "FR_RAW 0x20000\0"
	.byte	0x1
	.uleb128 0x171
	.ascii "FR_MATCHDIAC 0x20000000\0"
	.byte	0x1
	.uleb128 0x172
	.ascii "FR_MATCHKASHIDA 0x40000000\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "FR_MATCHALEFHAMZA 0x80000000\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "FindText __MINGW_NAME_AW(FindText)\0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "ReplaceText __MINGW_NAME_AW(ReplaceText)\0"
	.byte	0x1
	.uleb128 0x1ad
	.ascii "ChooseFont __MINGW_NAME_AW(ChooseFont)\0"
	.byte	0x1
	.uleb128 0x1af
	.ascii "CF_SCREENFONTS 0x1\0"
	.byte	0x1
	.uleb128 0x1b0
	.ascii "CF_PRINTERFONTS 0x2\0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "CF_BOTH (CF_SCREENFONTS | CF_PRINTERFONTS)\0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "CF_SHOWHELP __MSABI_LONG(0x4)\0"
	.byte	0x1
	.uleb128 0x1b3
	.ascii "CF_ENABLEHOOK __MSABI_LONG(0x8)\0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "CF_ENABLETEMPLATE __MSABI_LONG(0x10)\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "CF_ENABLETEMPLATEHANDLE __MSABI_LONG(0x20)\0"
	.byte	0x1
	.uleb128 0x1b6
	.ascii "CF_INITTOLOGFONTSTRUCT __MSABI_LONG(0x40)\0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "CF_USESTYLE __MSABI_LONG(0x80)\0"
	.byte	0x1
	.uleb128 0x1b8
	.ascii "CF_EFFECTS __MSABI_LONG(0x100)\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "CF_APPLY __MSABI_LONG(0x200)\0"
	.byte	0x1
	.uleb128 0x1ba
	.ascii "CF_ANSIONLY __MSABI_LONG(0x400)\0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "CF_SCRIPTSONLY CF_ANSIONLY\0"
	.byte	0x1
	.uleb128 0x1bc
	.ascii "CF_NOVECTORFONTS __MSABI_LONG(0x800)\0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "CF_NOOEMFONTS CF_NOVECTORFONTS\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "CF_NOSIMULATIONS __MSABI_LONG(0x1000)\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "CF_LIMITSIZE __MSABI_LONG(0x2000)\0"
	.byte	0x1
	.uleb128 0x1c0
	.ascii "CF_FIXEDPITCHONLY __MSABI_LONG(0x4000)\0"
	.byte	0x1
	.uleb128 0x1c1
	.ascii "CF_WYSIWYG __MSABI_LONG(0x8000)\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "CF_FORCEFONTEXIST __MSABI_LONG(0x10000)\0"
	.byte	0x1
	.uleb128 0x1c3
	.ascii "CF_SCALABLEONLY __MSABI_LONG(0x20000)\0"
	.byte	0x1
	.uleb128 0x1c4
	.ascii "CF_TTONLY __MSABI_LONG(0x40000)\0"
	.byte	0x1
	.uleb128 0x1c5
	.ascii "CF_NOFACESEL __MSABI_LONG(0x80000)\0"
	.byte	0x1
	.uleb128 0x1c6
	.ascii "CF_NOSTYLESEL __MSABI_LONG(0x100000)\0"
	.byte	0x1
	.uleb128 0x1c7
	.ascii "CF_NOSIZESEL __MSABI_LONG(0x200000)\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "CF_SELECTSCRIPT __MSABI_LONG(0x400000)\0"
	.byte	0x1
	.uleb128 0x1c9
	.ascii "CF_NOSCRIPTSEL __MSABI_LONG(0x800000)\0"
	.byte	0x1
	.uleb128 0x1ca
	.ascii "CF_NOVERTFONTS __MSABI_LONG(0x1000000)\0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "SIMULATED_FONTTYPE 0x8000\0"
	.byte	0x1
	.uleb128 0x1cd
	.ascii "PRINTER_FONTTYPE 0x4000\0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "SCREEN_FONTTYPE 0x2000\0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "BOLD_FONTTYPE 0x100\0"
	.byte	0x1
	.uleb128 0x1d0
	.ascii "ITALIC_FONTTYPE 0x200\0"
	.byte	0x1
	.uleb128 0x1d1
	.ascii "REGULAR_FONTTYPE 0x400\0"
	.byte	0x1
	.uleb128 0x1d9
	.ascii "WM_CHOOSEFONT_GETLOGFONT (WM_USER + 1)\0"
	.byte	0x1
	.uleb128 0x1da
	.ascii "WM_CHOOSEFONT_SETLOGFONT (WM_USER + 101)\0"
	.byte	0x1
	.uleb128 0x1db
	.ascii "WM_CHOOSEFONT_SETFLAGS (WM_USER + 102)\0"
	.byte	0x1
	.uleb128 0x1dd
	.ascii "LBSELCHSTRINGA \"commdlg_LBSelChangedNotify\"\0"
	.byte	0x1
	.uleb128 0x1de
	.ascii "SHAREVISTRINGA \"commdlg_ShareViolation\"\0"
	.byte	0x1
	.uleb128 0x1df
	.ascii "FILEOKSTRINGA \"commdlg_FileNameOK\"\0"
	.byte	0x1
	.uleb128 0x1e0
	.ascii "COLOROKSTRINGA \"commdlg_ColorOK\"\0"
	.byte	0x1
	.uleb128 0x1e1
	.ascii "SETRGBSTRINGA \"commdlg_SetRGBColor\"\0"
	.byte	0x1
	.uleb128 0x1e2
	.ascii "HELPMSGSTRINGA \"commdlg_help\"\0"
	.byte	0x1
	.uleb128 0x1e3
	.ascii "FINDMSGSTRINGA \"commdlg_FindReplace\"\0"
	.byte	0x1
	.uleb128 0x1e5
	.ascii "LBSELCHSTRINGW L\"commdlg_LBSelChangedNotify\"\0"
	.byte	0x1
	.uleb128 0x1e6
	.ascii "SHAREVISTRINGW L\"commdlg_ShareViolation\"\0"
	.byte	0x1
	.uleb128 0x1e7
	.ascii "FILEOKSTRINGW L\"commdlg_FileNameOK\"\0"
	.byte	0x1
	.uleb128 0x1e8
	.ascii "COLOROKSTRINGW L\"commdlg_ColorOK\"\0"
	.byte	0x1
	.uleb128 0x1e9
	.ascii "SETRGBSTRINGW L\"commdlg_SetRGBColor\"\0"
	.byte	0x1
	.uleb128 0x1ea
	.ascii "HELPMSGSTRINGW L\"commdlg_help\"\0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "FINDMSGSTRINGW L\"commdlg_FindReplace\"\0"
	.byte	0x1
	.uleb128 0x1ed
	.ascii "LBSELCHSTRING __MINGW_NAME_AW(LBSELCHSTRING)\0"
	.byte	0x1
	.uleb128 0x1ee
	.ascii "SHAREVISTRING __MINGW_NAME_AW(SHAREVISTRING)\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "FILEOKSTRING __MINGW_NAME_AW(FILEOKSTRING)\0"
	.byte	0x1
	.uleb128 0x1f0
	.ascii "COLOROKSTRING __MINGW_NAME_AW(COLOROKSTRING)\0"
	.byte	0x1
	.uleb128 0x1f1
	.ascii "SETRGBSTRING __MINGW_NAME_AW(SETRGBSTRING)\0"
	.byte	0x1
	.uleb128 0x1f2
	.ascii "HELPMSGSTRING __MINGW_NAME_AW(HELPMSGSTRING)\0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "FINDMSGSTRING __MINGW_NAME_AW(FINDMSGSTRING)\0"
	.byte	0x1
	.uleb128 0x1f5
	.ascii "CD_LBSELNOITEMS -1\0"
	.byte	0x1
	.uleb128 0x1f6
	.ascii "CD_LBSELCHANGE 0\0"
	.byte	0x1
	.uleb128 0x1f7
	.ascii "CD_LBSELSUB 1\0"
	.byte	0x1
	.uleb128 0x1f8
	.ascii "CD_LBSELADD 2\0"
	.byte	0x1
	.uleb128 0x22f
	.ascii "PrintDlg __MINGW_NAME_AW(PrintDlg)\0"
	.byte	0x2
	.uleb128 0x232
	.ascii "INTERFACE\0"
	.byte	0x1
	.uleb128 0x233
	.ascii "INTERFACE IPrintDialogCallback\0"
	.byte	0x2
	.uleb128 0x23e
	.ascii "INTERFACE\0"
	.byte	0x1
	.uleb128 0x23f
	.ascii "INTERFACE IPrintDialogServices\0"
	.byte	0x1
	.uleb128 0x284
	.ascii "PrintDlgEx __MINGW_NAME_AW(PrintDlgEx)\0"
	.byte	0x1
	.uleb128 0x287
	.ascii "PD_ALLPAGES 0x0\0"
	.byte	0x1
	.uleb128 0x288
	.ascii "PD_SELECTION 0x1\0"
	.byte	0x1
	.uleb128 0x289
	.ascii "PD_PAGENUMS 0x2\0"
	.byte	0x1
	.uleb128 0x28a
	.ascii "PD_NOSELECTION 0x4\0"
	.byte	0x1
	.uleb128 0x28b
	.ascii "PD_NOPAGENUMS 0x8\0"
	.byte	0x1
	.uleb128 0x28c
	.ascii "PD_COLLATE 0x10\0"
	.byte	0x1
	.uleb128 0x28d
	.ascii "PD_PRINTTOFILE 0x20\0"
	.byte	0x1
	.uleb128 0x28e
	.ascii "PD_PRINTSETUP 0x40\0"
	.byte	0x1
	.uleb128 0x28f
	.ascii "PD_NOWARNING 0x80\0"
	.byte	0x1
	.uleb128 0x290
	.ascii "PD_RETURNDC 0x100\0"
	.byte	0x1
	.uleb128 0x291
	.ascii "PD_RETURNIC 0x200\0"
	.byte	0x1
	.uleb128 0x292
	.ascii "PD_RETURNDEFAULT 0x400\0"
	.byte	0x1
	.uleb128 0x293
	.ascii "PD_SHOWHELP 0x800\0"
	.byte	0x1
	.uleb128 0x294
	.ascii "PD_ENABLEPRINTHOOK 0x1000\0"
	.byte	0x1
	.uleb128 0x295
	.ascii "PD_ENABLESETUPHOOK 0x2000\0"
	.byte	0x1
	.uleb128 0x296
	.ascii "PD_ENABLEPRINTTEMPLATE 0x4000\0"
	.byte	0x1
	.uleb128 0x297
	.ascii "PD_ENABLESETUPTEMPLATE 0x8000\0"
	.byte	0x1
	.uleb128 0x298
	.ascii "PD_ENABLEPRINTTEMPLATEHANDLE 0x10000\0"
	.byte	0x1
	.uleb128 0x299
	.ascii "PD_ENABLESETUPTEMPLATEHANDLE 0x20000\0"
	.byte	0x1
	.uleb128 0x29a
	.ascii "PD_USEDEVMODECOPIES 0x40000\0"
	.byte	0x1
	.uleb128 0x29b
	.ascii "PD_USEDEVMODECOPIESANDCOLLATE 0x40000\0"
	.byte	0x1
	.uleb128 0x29c
	.ascii "PD_DISABLEPRINTTOFILE 0x80000\0"
	.byte	0x1
	.uleb128 0x29d
	.ascii "PD_HIDEPRINTTOFILE 0x100000\0"
	.byte	0x1
	.uleb128 0x29e
	.ascii "PD_NONETWORKBUTTON 0x200000\0"
	.byte	0x1
	.uleb128 0x29f
	.ascii "PD_CURRENTPAGE 0x400000\0"
	.byte	0x1
	.uleb128 0x2a0
	.ascii "PD_NOCURRENTPAGE 0x800000\0"
	.byte	0x1
	.uleb128 0x2a1
	.ascii "PD_EXCLUSIONFLAGS 0x1000000\0"
	.byte	0x1
	.uleb128 0x2a2
	.ascii "PD_USELARGETEMPLATE 0x10000000\0"
	.byte	0x1
	.uleb128 0x2a4
	.ascii "PD_EXCL_COPIESANDCOLLATE (DM_COPIES | DM_COLLATE)\0"
	.byte	0x1
	.uleb128 0x2a5
	.ascii "START_PAGE_GENERAL 0xffffffff\0"
	.byte	0x1
	.uleb128 0x2a7
	.ascii "PD_RESULT_CANCEL 0\0"
	.byte	0x1
	.uleb128 0x2a8
	.ascii "PD_RESULT_PRINT 1\0"
	.byte	0x1
	.uleb128 0x2a9
	.ascii "PD_RESULT_APPLY 2\0"
	.byte	0x1
	.uleb128 0x2b2
	.ascii "DN_DEFAULTPRN 0x1\0"
	.byte	0x1
	.uleb128 0x2b6
	.ascii "WM_PSD_PAGESETUPDLG (WM_USER)\0"
	.byte	0x1
	.uleb128 0x2b7
	.ascii "WM_PSD_FULLPAGERECT (WM_USER+1)\0"
	.byte	0x1
	.uleb128 0x2b8
	.ascii "WM_PSD_MINMARGINRECT (WM_USER+2)\0"
	.byte	0x1
	.uleb128 0x2b9
	.ascii "WM_PSD_MARGINRECT (WM_USER+3)\0"
	.byte	0x1
	.uleb128 0x2ba
	.ascii "WM_PSD_GREEKTEXTRECT (WM_USER+4)\0"
	.byte	0x1
	.uleb128 0x2bb
	.ascii "WM_PSD_ENVSTAMPRECT (WM_USER+5)\0"
	.byte	0x1
	.uleb128 0x2bc
	.ascii "WM_PSD_YAFULLPAGERECT (WM_USER+6)\0"
	.byte	0x1
	.uleb128 0x2e9
	.ascii "PageSetupDlg __MINGW_NAME_AW(PageSetupDlg)\0"
	.byte	0x1
	.uleb128 0x2eb
	.ascii "PSD_DEFAULTMINMARGINS 0x0\0"
	.byte	0x1
	.uleb128 0x2ec
	.ascii "PSD_INWININIINTLMEASURE 0x0\0"
	.byte	0x1
	.uleb128 0x2ed
	.ascii "PSD_MINMARGINS 0x1\0"
	.byte	0x1
	.uleb128 0x2ee
	.ascii "PSD_MARGINS 0x2\0"
	.byte	0x1
	.uleb128 0x2ef
	.ascii "PSD_INTHOUSANDTHSOFINCHES 0x4\0"
	.byte	0x1
	.uleb128 0x2f0
	.ascii "PSD_INHUNDREDTHSOFMILLIMETERS 0x8\0"
	.byte	0x1
	.uleb128 0x2f1
	.ascii "PSD_DISABLEMARGINS 0x10\0"
	.byte	0x1
	.uleb128 0x2f2
	.ascii "PSD_DISABLEPRINTER 0x20\0"
	.byte	0x1
	.uleb128 0x2f3
	.ascii "PSD_NOWARNING 0x80\0"
	.byte	0x1
	.uleb128 0x2f4
	.ascii "PSD_DISABLEORIENTATION 0x100\0"
	.byte	0x1
	.uleb128 0x2f5
	.ascii "PSD_RETURNDEFAULT 0x400\0"
	.byte	0x1
	.uleb128 0x2f6
	.ascii "PSD_DISABLEPAPER 0x200\0"
	.byte	0x1
	.uleb128 0x2f7
	.ascii "PSD_SHOWHELP 0x800\0"
	.byte	0x1
	.uleb128 0x2f8
	.ascii "PSD_ENABLEPAGESETUPHOOK 0x2000\0"
	.byte	0x1
	.uleb128 0x2f9
	.ascii "PSD_ENABLEPAGESETUPTEMPLATE 0x8000\0"
	.byte	0x1
	.uleb128 0x2fa
	.ascii "PSD_ENABLEPAGESETUPTEMPLATEHANDLE 0x20000\0"
	.byte	0x1
	.uleb128 0x2fb
	.ascii "PSD_ENABLEPAGEPAINTHOOK 0x40000\0"
	.byte	0x1
	.uleb128 0x2fc
	.ascii "PSD_DISABLEPAGEPAINTING 0x80000\0"
	.byte	0x1
	.uleb128 0x2fd
	.ascii "PSD_NONETWORKBUTTON 0x200000\0"
	.byte	0x4
	.file 430 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stralign.h"
	.byte	0x3
	.uleb128 0x72
	.uleb128 0x1ae
	.byte	0x1
	.uleb128 0x7
	.ascii "__STRALIGN_H_ \0"
	.byte	0x1
	.uleb128 0xa
	.ascii "_STRALIGN_USE_SECURE_CRT 0\0"
	.byte	0x1
	.uleb128 0x13
	.ascii "WSTR_ALIGNED(s) TRUE\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "__UA_WCSLEN ua_wcslen\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "__UA_WSTRSIZE(s) ((__UA_WCSLEN(s)+1)*sizeof(WCHAR))\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "__UA_STACKCOPY(p,s) memcpy(_alloca(s),p,s)\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "WSTR_ALIGNED_STACK_COPY(d,s) (*(d) = (PCWSTR)(s))\0"
	.byte	0x1
	.uleb128 0xae
	.ascii "ASTR_ALIGNED_STACK_COPY(d,s) (*(d) = (PCSTR)(s))\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "STRUC_ALIGNED_STACK_COPY(t,s) ((CONST t *)(s))\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "TSTR_ALIGNED_STACK_COPY(d,s) ASTR_ALIGNED_STACK_COPY(d,s)\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "TSTR_ALIGNED(x) TRUE\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "ua_CharUpper CharUpperA\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "ua_lstrcmp lstrcmpA\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "ua_lstrcmpi lstrcmpiA\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "ua_lstrlen lstrlenA\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "ua_tcscpy strcpy\0"
	.file 431 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sec_api/stralign_s.h"
	.byte	0x3
	.uleb128 0xcd
	.uleb128 0x1af
	.byte	0x1
	.uleb128 0x7
	.ascii "__STRALIGN_H_S_ \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x1ae
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.file 432 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/winsvc.h"
	.byte	0x3
	.uleb128 0x7a
	.uleb128 0x1b0
	.byte	0x1
	.uleb128 0x7
	.ascii "_WINSVC_ \0"
	.byte	0x3
	.uleb128 0x9
	.uleb128 0x8
	.byte	0x4
	.byte	0x1
	.uleb128 0x11
	.ascii "SERVICES_ACTIVE_DATABASEW L\"ServicesActive\"\0"
	.byte	0x1
	.uleb128 0x12
	.ascii "SERVICES_FAILED_DATABASEW L\"ServicesFailed\"\0"
	.byte	0x1
	.uleb128 0x14
	.ascii "SERVICES_ACTIVE_DATABASEA \"ServicesActive\"\0"
	.byte	0x1
	.uleb128 0x15
	.ascii "SERVICES_FAILED_DATABASEA \"ServicesFailed\"\0"
	.byte	0x1
	.uleb128 0x17
	.ascii "SC_GROUP_IDENTIFIERW L'+'\0"
	.byte	0x1
	.uleb128 0x18
	.ascii "SC_GROUP_IDENTIFIERA '+'\0"
	.byte	0x1
	.uleb128 0x1a
	.ascii "SERVICES_ACTIVE_DATABASE __MINGW_NAME_AW(SERVICES_ACTIVE_DATABASE)\0"
	.byte	0x1
	.uleb128 0x1b
	.ascii "SERVICES_FAILED_DATABASE __MINGW_NAME_AW(SERVICES_FAILED_DATABASE)\0"
	.byte	0x1
	.uleb128 0x1d
	.ascii "SC_GROUP_IDENTIFIER __MINGW_NAME_AW(SC_GROUP_IDENTIFIER)\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "SERVICE_NO_CHANGE 0xffffffff\0"
	.byte	0x1
	.uleb128 0x21
	.ascii "SERVICE_ACTIVE 0x00000001\0"
	.byte	0x1
	.uleb128 0x22
	.ascii "SERVICE_INACTIVE 0x00000002\0"
	.byte	0x1
	.uleb128 0x23
	.ascii "SERVICE_STATE_ALL (SERVICE_ACTIVE | SERVICE_INACTIVE)\0"
	.byte	0x1
	.uleb128 0x25
	.ascii "SERVICE_CONTROL_STOP 0x00000001\0"
	.byte	0x1
	.uleb128 0x26
	.ascii "SERVICE_CONTROL_PAUSE 0x00000002\0"
	.byte	0x1
	.uleb128 0x27
	.ascii "SERVICE_CONTROL_CONTINUE 0x00000003\0"
	.byte	0x1
	.uleb128 0x28
	.ascii "SERVICE_CONTROL_INTERROGATE 0x00000004\0"
	.byte	0x1
	.uleb128 0x29
	.ascii "SERVICE_CONTROL_SHUTDOWN 0x00000005\0"
	.byte	0x1
	.uleb128 0x2a
	.ascii "SERVICE_CONTROL_PARAMCHANGE 0x00000006\0"
	.byte	0x1
	.uleb128 0x2b
	.ascii "SERVICE_CONTROL_NETBINDADD 0x00000007\0"
	.byte	0x1
	.uleb128 0x2c
	.ascii "SERVICE_CONTROL_NETBINDREMOVE 0x00000008\0"
	.byte	0x1
	.uleb128 0x2d
	.ascii "SERVICE_CONTROL_NETBINDENABLE 0x00000009\0"
	.byte	0x1
	.uleb128 0x2e
	.ascii "SERVICE_CONTROL_NETBINDDISABLE 0x0000000A\0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "SERVICE_CONTROL_DEVICEEVENT 0x0000000B\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "SERVICE_CONTROL_HARDWAREPROFILECHANGE 0x0000000C\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "SERVICE_CONTROL_POWEREVENT 0x0000000D\0"
	.byte	0x1
	.uleb128 0x32
	.ascii "SERVICE_CONTROL_SESSIONCHANGE 0x0000000E\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "SERVICE_STOPPED 0x00000001\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "SERVICE_START_PENDING 0x00000002\0"
	.byte	0x1
	.uleb128 0x36
	.ascii "SERVICE_STOP_PENDING 0x00000003\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "SERVICE_RUNNING 0x00000004\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "SERVICE_CONTINUE_PENDING 0x00000005\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "SERVICE_PAUSE_PENDING 0x00000006\0"
	.byte	0x1
	.uleb128 0x3a
	.ascii "SERVICE_PAUSED 0x00000007\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "SERVICE_ACCEPT_STOP 0x00000001\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "SERVICE_ACCEPT_PAUSE_CONTINUE 0x00000002\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "SERVICE_ACCEPT_SHUTDOWN 0x00000004\0"
	.byte	0x1
	.uleb128 0x3f
	.ascii "SERVICE_ACCEPT_PARAMCHANGE 0x00000008\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "SERVICE_ACCEPT_NETBINDCHANGE 0x00000010\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "SERVICE_ACCEPT_HARDWAREPROFILECHANGE 0x00000020\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "SERVICE_ACCEPT_POWEREVENT 0x00000040\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "SERVICE_ACCEPT_SESSIONCHANGE 0x00000080\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "SC_MANAGER_CONNECT 0x0001\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "SC_MANAGER_CREATE_SERVICE 0x0002\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "SC_MANAGER_ENUMERATE_SERVICE 0x0004\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "SC_MANAGER_LOCK 0x0008\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "SC_MANAGER_QUERY_LOCK_STATUS 0x0010\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "SC_MANAGER_MODIFY_BOOT_CONFIG 0x0020\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "SC_MANAGER_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | SC_MANAGER_CONNECT | SC_MANAGER_CREATE_SERVICE | SC_MANAGER_ENUMERATE_SERVICE | SC_MANAGER_LOCK | SC_MANAGER_QUERY_LOCK_STATUS | SC_MANAGER_MODIFY_BOOT_CONFIG)\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "SERVICE_QUERY_CONFIG 0x0001\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "SERVICE_CHANGE_CONFIG 0x0002\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "SERVICE_QUERY_STATUS 0x0004\0"
	.byte	0x1
	.uleb128 0x51
	.ascii "SERVICE_ENUMERATE_DEPENDENTS 0x0008\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "SERVICE_START 0x0010\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "SERVICE_STOP 0x0020\0"
	.byte	0x1
	.uleb128 0x54
	.ascii "SERVICE_PAUSE_CONTINUE 0x0040\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "SERVICE_INTERROGATE 0x0080\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "SERVICE_USER_DEFINED_CONTROL 0x0100\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "SERVICE_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | SERVICE_QUERY_CONFIG | SERVICE_CHANGE_CONFIG | SERVICE_QUERY_STATUS | SERVICE_ENUMERATE_DEPENDENTS | SERVICE_START | SERVICE_STOP | SERVICE_PAUSE_CONTINUE | SERVICE_INTERROGATE | SERVICE_USER_DEFINED_CONTROL)\0"
	.byte	0x1
	.uleb128 0x5a
	.ascii "SERVICE_RUNS_IN_SYSTEM_PROCESS 0x00000001\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "SERVICE_CONFIG_DESCRIPTION 1\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "SERVICE_CONFIG_FAILURE_ACTIONS 2\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "LPSERVICE_MAIN_FUNCTION __MINGW_NAME_AW(LPSERVICE_MAIN_FUNCTION)\0"
	.byte	0x1
	.uleb128 0x108
	.ascii "ChangeServiceConfig __MINGW_NAME_AW(ChangeServiceConfig)\0"
	.byte	0x1
	.uleb128 0x109
	.ascii "ChangeServiceConfig2 __MINGW_NAME_AW(ChangeServiceConfig2)\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "CreateService __MINGW_NAME_AW(CreateService)\0"
	.byte	0x1
	.uleb128 0x10b
	.ascii "EnumDependentServices __MINGW_NAME_AW(EnumDependentServices)\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "EnumServicesStatus __MINGW_NAME_AW(EnumServicesStatus)\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "EnumServicesStatusEx __MINGW_NAME_AW(EnumServicesStatusEx)\0"
	.byte	0x1
	.uleb128 0x10e
	.ascii "GetServiceKeyName __MINGW_NAME_AW(GetServiceKeyName)\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "GetServiceDisplayName __MINGW_NAME_AW(GetServiceDisplayName)\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "OpenSCManager __MINGW_NAME_AW(OpenSCManager)\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "OpenService __MINGW_NAME_AW(OpenService)\0"
	.byte	0x1
	.uleb128 0x112
	.ascii "QueryServiceConfig __MINGW_NAME_AW(QueryServiceConfig)\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "QueryServiceConfig2 __MINGW_NAME_AW(QueryServiceConfig2)\0"
	.byte	0x1
	.uleb128 0x114
	.ascii "QueryServiceLockStatus __MINGW_NAME_AW(QueryServiceLockStatus)\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "RegisterServiceCtrlHandler __MINGW_NAME_AW(RegisterServiceCtrlHandler)\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "RegisterServiceCtrlHandlerEx __MINGW_NAME_AW(RegisterServiceCtrlHandlerEx)\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "StartServiceCtrlDispatcher __MINGW_NAME_AW(StartServiceCtrlDispatcher)\0"
	.byte	0x1
	.uleb128 0x118
	.ascii "StartService __MINGW_NAME_AW(StartService)\0"
	.byte	0x4
	.file 433 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/mcx.h"
	.byte	0x3
	.uleb128 0x7e
	.uleb128 0x1b1
	.byte	0x1
	.uleb128 0x7
	.ascii "_MCX_H_ \0"
	.byte	0x1
	.uleb128 0x2f
	.ascii "DIALOPTION_BILLING 0x00000040\0"
	.byte	0x1
	.uleb128 0x30
	.ascii "DIALOPTION_QUIET 0x00000080\0"
	.byte	0x1
	.uleb128 0x31
	.ascii "DIALOPTION_DIALTONE 0x00000100\0"
	.byte	0x1
	.uleb128 0x33
	.ascii "MDMVOLFLAG_LOW 0x00000001\0"
	.byte	0x1
	.uleb128 0x34
	.ascii "MDMVOLFLAG_MEDIUM 0x00000002\0"
	.byte	0x1
	.uleb128 0x35
	.ascii "MDMVOLFLAG_HIGH 0x00000004\0"
	.byte	0x1
	.uleb128 0x37
	.ascii "MDMVOL_LOW 0x00000000\0"
	.byte	0x1
	.uleb128 0x38
	.ascii "MDMVOL_MEDIUM 0x00000001\0"
	.byte	0x1
	.uleb128 0x39
	.ascii "MDMVOL_HIGH 0x00000002\0"
	.byte	0x1
	.uleb128 0x3b
	.ascii "MDMSPKRFLAG_OFF 0x00000001\0"
	.byte	0x1
	.uleb128 0x3c
	.ascii "MDMSPKRFLAG_DIAL 0x00000002\0"
	.byte	0x1
	.uleb128 0x3d
	.ascii "MDMSPKRFLAG_ON 0x00000004\0"
	.byte	0x1
	.uleb128 0x3e
	.ascii "MDMSPKRFLAG_CALLSETUP 0x00000008\0"
	.byte	0x1
	.uleb128 0x40
	.ascii "MDMSPKR_OFF 0x00000000\0"
	.byte	0x1
	.uleb128 0x41
	.ascii "MDMSPKR_DIAL 0x00000001\0"
	.byte	0x1
	.uleb128 0x42
	.ascii "MDMSPKR_ON 0x00000002\0"
	.byte	0x1
	.uleb128 0x43
	.ascii "MDMSPKR_CALLSETUP 0x00000003\0"
	.byte	0x1
	.uleb128 0x45
	.ascii "MDM_COMPRESSION 0x00000001\0"
	.byte	0x1
	.uleb128 0x46
	.ascii "MDM_ERROR_CONTROL 0x00000002\0"
	.byte	0x1
	.uleb128 0x47
	.ascii "MDM_FORCED_EC 0x00000004\0"
	.byte	0x1
	.uleb128 0x48
	.ascii "MDM_CELLULAR 0x00000008\0"
	.byte	0x1
	.uleb128 0x49
	.ascii "MDM_FLOWCONTROL_HARD 0x00000010\0"
	.byte	0x1
	.uleb128 0x4a
	.ascii "MDM_FLOWCONTROL_SOFT 0x00000020\0"
	.byte	0x1
	.uleb128 0x4b
	.ascii "MDM_CCITT_OVERRIDE 0x00000040\0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "MDM_SPEED_ADJUST 0x00000080\0"
	.byte	0x1
	.uleb128 0x4d
	.ascii "MDM_TONE_DIAL 0x00000100\0"
	.byte	0x1
	.uleb128 0x4e
	.ascii "MDM_BLIND_DIAL 0x00000200\0"
	.byte	0x1
	.uleb128 0x4f
	.ascii "MDM_V23_OVERRIDE 0x00000400\0"
	.byte	0x1
	.uleb128 0x50
	.ascii "MDM_DIAGNOSTICS 0x00000800\0"
	.byte	0x1
	.uleb128 0x52
	.ascii "MDM_MASK_BEARERMODE 0x0000f000\0"
	.byte	0x1
	.uleb128 0x53
	.ascii "MDM_SHIFT_BEARERMODE 12\0"
	.byte	0x1
	.uleb128 0x55
	.ascii "MDM_MASK_PROTOCOLID 0x000f0000\0"
	.byte	0x1
	.uleb128 0x56
	.ascii "MDM_SHIFT_PROTOCOLID 16\0"
	.byte	0x1
	.uleb128 0x58
	.ascii "MDM_MASK_PROTOCOLDATA 0x0ff00000\0"
	.byte	0x1
	.uleb128 0x59
	.ascii "MDM_SHIFT_PROTOCOLDATA 20\0"
	.byte	0x1
	.uleb128 0x5b
	.ascii "MDM_MASK_PROTOCOLINFO (MDM_MASK_PROTOCOLID|MDM_MASK_PROTOCOLDATA)\0"
	.byte	0x1
	.uleb128 0x5c
	.ascii "MDM_SHIFT_PROTOCOLINFO MDM_SHIFT_PROTOCOLID\0"
	.byte	0x1
	.uleb128 0x5e
	.ascii "MDM_MASK_EXTENDEDINFO (MDM_MASK_BEARERMODE|MDM_MASK_PROTOCOLINFO)\0"
	.byte	0x1
	.uleb128 0x5f
	.ascii "MDM_SHIFT_EXTENDEDINFO MDM_SHIFT_BEARERMODE\0"
	.byte	0x1
	.uleb128 0x61
	.ascii "MDM_GET_BEARERMODE(_dwOptions) (((_dwOptions)&MDM_MASK_BEARERMODE) >> MDM_SHIFT_BEARERMODE)\0"
	.byte	0x1
	.uleb128 0x62
	.ascii "MDM_SET_BEARERMODE(_dwOptions,_bm) (((_dwOptions) &= ~MDM_MASK_BEARERMODE),((_dwOptions) |= (((_bm)<<MDM_SHIFT_BEARERMODE)&MDM_MASK_BEARERMODE)))\0"
	.byte	0x1
	.uleb128 0x63
	.ascii "MDM_GET_PROTOCOLID(_dwOptions) (((_dwOptions)&MDM_MASK_PROTOCOLID) >> MDM_SHIFT_PROTOCOLID)\0"
	.byte	0x1
	.uleb128 0x64
	.ascii "MDM_SET_PROTOCOLID(_dwOptions,_prot) (((_dwOptions) &= ~MDM_MASK_PROTOCOLID),((_dwOptions) |= (((_prot)<<MDM_SHIFT_PROTOCOLID)&MDM_MASK_PROTOCOLID)))\0"
	.byte	0x1
	.uleb128 0x65
	.ascii "MDM_GET_PROTOCOLDATA(_dwOptions) (((_dwOptions)&MDM_MASK_PROTOCOLDATA) >> MDM_SHIFT_PROTOCOLDATA)\0"
	.byte	0x1
	.uleb128 0x66
	.ascii "MDM_SET_PROTOCOLDATA(_dwOptions,_pd) (((_dwOptions) &= ~MDM_MASK_PROTOCOLDATA),((_dwOptions) |= (((_pd)<<MDM_SHIFT_PROTOCOLDATA)&MDM_MASK_PROTOCOLDATA)))\0"
	.byte	0x1
	.uleb128 0x67
	.ascii "MDM_GET_PROTOCOLINFO(_dwOptions) ((_dwOptions)&MDM_MASK_PROTOCOLINFO)\0"
	.byte	0x1
	.uleb128 0x68
	.ascii "MDM_SET_PROTOCOLINFO(_dwOptions,_pinfo) (((_dwOptions) &= ~MDM_MASK_PROTOCOLINFO),((_dwOptions) |= ((_pinfo)&MDM_MASK_PROTOCOLINFO)))\0"
	.byte	0x1
	.uleb128 0x69
	.ascii "MDM_GEN_PROTOCOLINFO(_pid,_pdata) ((((_pid)<<MDM_SHIFT_PROTOCOLID)&MDM_MASK_PROTOCOLID) |(((_pdata)<<MDM_SHIFT_PROTOCOLDATA)&MDM_MASK_PROTOCOLDATA))\0"
	.byte	0x1
	.uleb128 0x6a
	.ascii "MDM_GET_EXTENDEDINFO(_dwOptions) ((_dwOptions)&MDM_MASK_EXTENDEDINFO)\0"
	.byte	0x1
	.uleb128 0x6b
	.ascii "MDM_SET_EXTENDEDINFO(_dwOptions,_extinfo) (((_dwOptions) &= ~MDM_MASK_EXTENDEDINFO),((_dwOptions) |= ((_extinfo) & MDM_MASK_EXTENDEDINFO)))\0"
	.byte	0x1
	.uleb128 0x6c
	.ascii "MDM_GEN_EXTENDEDINFO(_bearermode,_pinfo) (((_pinfo)&MDM_MASK_PROTOCOLINFO) |(((_bearermode)<<MDM_SHIFT_BEARERMODE)&MDM_MASK_BEARERMODE))\0"
	.byte	0x1
	.uleb128 0x6e
	.ascii "MDM_BEARERMODE_ANALOG 0x0\0"
	.byte	0x1
	.uleb128 0x6f
	.ascii "MDM_BEARERMODE_ISDN 0x1\0"
	.byte	0x1
	.uleb128 0x70
	.ascii "MDM_BEARERMODE_GSM 0x2\0"
	.byte	0x1
	.uleb128 0x72
	.ascii "MDM_PROTOCOLID_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0x73
	.ascii "MDM_PROTOCOLID_HDLCPPP 0x1\0"
	.byte	0x1
	.uleb128 0x74
	.ascii "MDM_PROTOCOLID_V128 0x2\0"
	.byte	0x1
	.uleb128 0x75
	.ascii "MDM_PROTOCOLID_X75 0x3\0"
	.byte	0x1
	.uleb128 0x76
	.ascii "MDM_PROTOCOLID_V110 0x4\0"
	.byte	0x1
	.uleb128 0x77
	.ascii "MDM_PROTOCOLID_V120 0x5\0"
	.byte	0x1
	.uleb128 0x78
	.ascii "MDM_PROTOCOLID_AUTO 0x6\0"
	.byte	0x1
	.uleb128 0x79
	.ascii "MDM_PROTOCOLID_ANALOG 0x7\0"
	.byte	0x1
	.uleb128 0x7a
	.ascii "MDM_PROTOCOLID_GPRS 0x8\0"
	.byte	0x1
	.uleb128 0x7b
	.ascii "MDM_PROTOCOLID_PIAFS 0x9\0"
	.byte	0x1
	.uleb128 0x7d
	.ascii "MDM_SHIFT_HDLCPPP_SPEED 0x0\0"
	.byte	0x1
	.uleb128 0x7e
	.ascii "MDM_MASK_HDLCPPP_SPEED 0x7\0"
	.byte	0x1
	.uleb128 0x80
	.ascii "MDM_HDLCPPP_SPEED_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0x81
	.ascii "MDM_HDLCPPP_SPEED_64K 0x1\0"
	.byte	0x1
	.uleb128 0x82
	.ascii "MDM_HDLCPPP_SPEED_56K 0x2\0"
	.byte	0x1
	.uleb128 0x84
	.ascii "MDM_SHIFT_HDLCPPP_AUTH 0x3\0"
	.byte	0x1
	.uleb128 0x85
	.ascii "MDM_MASK_HDLCPPP_AUTH (0x7<<3)\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "MDM_HDLCPPP_AUTH_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "MDM_HDLCPPP_AUTH_NONE 0x1\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "MDM_HDLCPPP_AUTH_PAP 0x2\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "MDM_HDLCPPP_AUTH_CHAP 0x3\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "MDM_HDLCPPP_AUTH_MSCHAP 0x4\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "MDM_SHIFT_HDLCPPP_ML 0x6\0"
	.byte	0x1
	.uleb128 0x8e
	.ascii "MDM_MASK_HDLCPPP_ML (0x3<<6)\0"
	.byte	0x1
	.uleb128 0x90
	.ascii "MDM_HDLCPPP_ML_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0x91
	.ascii "MDM_HDLCPPP_ML_NONE 0x1\0"
	.byte	0x1
	.uleb128 0x92
	.ascii "MDM_HDLCPPP_ML_2 0x2\0"
	.byte	0x1
	.uleb128 0x94
	.ascii "MDM_GEN_HDLCPPP_PROTOCOL_DATA(_speed,_auth,_ml) ((((_speed)<<MDM_SHIFT_HDLCPPP_SPEED)&MDM_MASK_HDLCPPP_SPEED) |(((_auth)<<MDM_SHIFT_HDLCPPP_AUTH)&MDM_MASK_HDLCPPP_AUTH) |(((_ml)<<MDM_SHIFT_HDLCPPP_ML)&MDM_MASK_HDLCPPP_ML))\0"
	.byte	0x1
	.uleb128 0x96
	.ascii "MDM_PROTOCOL_HDLCPPP_64K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP,MDM_GEN_HDLCPPP_PROTOCOL_DATA (MDM_HDLCPPP_SPEED_64K,MDM_HDLCPPP_AUTH_DEFAULT,MDM_HDLCPPP_ML_DEFAULT))\0"
	.byte	0x1
	.uleb128 0x97
	.ascii "MDM_PROTOCOL_HDLCPPP_56K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP,MDM_GEN_HDLCPPP_PROTOCOL_DATA (MDM_HDLCPPP_SPEED_56K,MDM_HDLCPPP_AUTH_DEFAULT,MDM_HDLCPPP_ML_DEFAULT))\0"
	.byte	0x1
	.uleb128 0x98
	.ascii "MDM_PROTOCOL_HDLCPPP_112K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP,MDM_GEN_HDLCPPP_PROTOCOL_DATA (MDM_HDLCPPP_SPEED_56K,MDM_HDLCPPP_AUTH_DEFAULT,MDM_HDLCPPP_ML_2))\0"
	.byte	0x1
	.uleb128 0x99
	.ascii "MDM_PROTOCOL_HDLCPPP_112K_PAP MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP,MDM_GEN_HDLCPPP_PROTOCOL_DATA (MDM_HDLCPPP_SPEED_56K,MDM_HDLCPPP_AUTH_PAP,MDM_HDLCPPP_ML_2))\0"
	.byte	0x1
	.uleb128 0x9a
	.ascii "MDM_PROTOCOL_HDLCPPP_112K_CHAP MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP,MDM_GEN_HDLCPPP_PROTOCOL_DATA (MDM_HDLCPPP_SPEED_56K,MDM_HDLCPPP_AUTH_CHAP,MDM_HDLCPPP_ML_2))\0"
	.byte	0x1
	.uleb128 0x9b
	.ascii "MDM_PROTOCOL_HDLCPPP_112K_MSCHAP MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP,MDM_GEN_HDLCPPP_PROTOCOL_DATA (MDM_HDLCPPP_SPEED_56K,MDM_HDLCPPP_AUTH_MSCHAP,MDM_HDLCPPP_ML_2))\0"
	.byte	0x1
	.uleb128 0x9c
	.ascii "MDM_PROTOCOL_HDLCPPP_128K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP,MDM_GEN_HDLCPPP_PROTOCOL_DATA (MDM_HDLCPPP_SPEED_64K,MDM_HDLCPPP_AUTH_DEFAULT,MDM_HDLCPPP_ML_2))\0"
	.byte	0x1
	.uleb128 0x9d
	.ascii "MDM_PROTOCOL_HDLCPPP_128K_PAP MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP,MDM_GEN_HDLCPPP_PROTOCOL_DATA (MDM_HDLCPPP_SPEED_64K,MDM_HDLCPPP_AUTH_PAP,MDM_HDLCPPP_ML_2))\0"
	.byte	0x1
	.uleb128 0x9e
	.ascii "MDM_PROTOCOL_HDLCPPP_128K_CHAP MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP,MDM_GEN_HDLCPPP_PROTOCOL_DATA (MDM_HDLCPPP_SPEED_64K,MDM_HDLCPPP_AUTH_CHAP,MDM_HDLCPPP_ML_2))\0"
	.byte	0x1
	.uleb128 0x9f
	.ascii "MDM_PROTOCOL_HDLCPPP_128K_MSCHAP MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_HDLCPPP,MDM_GEN_HDLCPPP_PROTOCOL_DATA (MDM_HDLCPPP_SPEED_64K,MDM_HDLCPPP_AUTH_MSCHAP,MDM_HDLCPPP_ML_2))\0"
	.byte	0x1
	.uleb128 0xa1
	.ascii "MDM_SHIFT_V120_SPEED 0x0\0"
	.byte	0x1
	.uleb128 0xa2
	.ascii "MDM_MASK_V120_SPEED 0x7\0"
	.byte	0x1
	.uleb128 0xa4
	.ascii "MDM_V120_SPEED_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0xa5
	.ascii "MDM_V120_SPEED_64K 0x1\0"
	.byte	0x1
	.uleb128 0xa6
	.ascii "MDM_V120_SPEED_56K 0x2\0"
	.byte	0x1
	.uleb128 0xa8
	.ascii "MDM_SHIFT_V120_ML 0x6\0"
	.byte	0x1
	.uleb128 0xa9
	.ascii "MDM_MASK_V120_ML (0x3<<6)\0"
	.byte	0x1
	.uleb128 0xab
	.ascii "MDM_V120_ML_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0xac
	.ascii "MDM_V120_ML_NONE 0x1\0"
	.byte	0x1
	.uleb128 0xad
	.ascii "MDM_V120_ML_2 0x2\0"
	.byte	0x1
	.uleb128 0xaf
	.ascii "MDM_GEN_V120_PROTOCOL_DATA(_speed,_ml) ((((_speed)<<MDM_SHIFT_V120_SPEED)&MDM_MASK_V120_SPEED) |(((_ml)<<MDM_SHIFT_V120_ML)&MDM_MASK_V120_ML))\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "MDM_PROTOCOL_V120_64K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V120,MDM_GEN_V120_PROTOCOL_DATA (MDM_V120_SPEED_64K,MDM_V120_ML_NONE))\0"
	.byte	0x1
	.uleb128 0xb2
	.ascii "MDM_PROTOCOL_V120_56K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V120,MDM_GEN_V120_PROTOCOL_DATA (MDM_V120_SPEED_56K,MDM_V120_ML_NONE))\0"
	.byte	0x1
	.uleb128 0xb3
	.ascii "MDM_PROTOCOL_V120_112K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V120,MDM_GEN_V120_PROTOCOL_DATA (MDM_V120_SPEED_56K,MDM_V120_ML_2))\0"
	.byte	0x1
	.uleb128 0xb4
	.ascii "MDM_PROTOCOL_V120_128K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V120,MDM_GEN_V120_PROTOCOL_DATA (MDM_V120_SPEED_64K,MDM_V120_ML_2))\0"
	.byte	0x1
	.uleb128 0xb6
	.ascii "MDM_SHIFT_X75_DATA 0x0\0"
	.byte	0x1
	.uleb128 0xb7
	.ascii "MDM_MASK_X75_DATA 0x7\0"
	.byte	0x1
	.uleb128 0xb9
	.ascii "MDM_X75_DATA_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0xba
	.ascii "MDM_X75_DATA_64K 0x1\0"
	.byte	0x1
	.uleb128 0xbb
	.ascii "MDM_X75_DATA_128K 0x2\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "MDM_X75_DATA_T_70 0x3\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "MDM_X75_DATA_BTX 0x4\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "MDM_GEN_X75_PROTOCOL_DATA(_data) (((_data)<<MDM_SHIFT_X75_DATA)&MDM_MASK_X75_DATA)\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "MDM_PROTOCOL_X75_64K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_X75,MDM_GEN_X75_PROTOCOL_DATA (MDM_X75_DATA_64K))\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "MDM_PROTOCOL_X75_128K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_X75,MDM_GEN_X75_PROTOCOL_DATA (MDM_X75_DATA_128K))\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "MDM_PROTOCOL_X75_T_70 MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_X75,MDM_GEN_X75_PROTOCOL_DATA (MDM_X75_DATA_T_70))\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "MDM_PROTOCOL_X75_BTX MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_X75,MDM_GEN_X75_PROTOCOL_DATA (MDM_X75_DATA_BTX))\0"
	.byte	0x1
	.uleb128 0xc6
	.ascii "MDM_SHIFT_V110_SPEED 0x0\0"
	.byte	0x1
	.uleb128 0xc7
	.ascii "MDM_MASK_V110_SPEED 0xf\0"
	.byte	0x1
	.uleb128 0xc9
	.ascii "MDM_V110_SPEED_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0xca
	.ascii "MDM_V110_SPEED_1DOT2K 0x1\0"
	.byte	0x1
	.uleb128 0xcb
	.ascii "MDM_V110_SPEED_2DOT4K 0x2\0"
	.byte	0x1
	.uleb128 0xcc
	.ascii "MDM_V110_SPEED_4DOT8K 0x3\0"
	.byte	0x1
	.uleb128 0xcd
	.ascii "MDM_V110_SPEED_9DOT6K 0x4\0"
	.byte	0x1
	.uleb128 0xce
	.ascii "MDM_V110_SPEED_12DOT0K 0x5\0"
	.byte	0x1
	.uleb128 0xcf
	.ascii "MDM_V110_SPEED_14DOT4K 0x6\0"
	.byte	0x1
	.uleb128 0xd0
	.ascii "MDM_V110_SPEED_19DOT2K 0x7\0"
	.byte	0x1
	.uleb128 0xd1
	.ascii "MDM_V110_SPEED_28DOT8K 0x8\0"
	.byte	0x1
	.uleb128 0xd2
	.ascii "MDM_V110_SPEED_38DOT4K 0x9\0"
	.byte	0x1
	.uleb128 0xd3
	.ascii "MDM_V110_SPEED_57DOT6K 0xA\0"
	.byte	0x1
	.uleb128 0xd5
	.ascii "MDM_GEN_V110_PROTOCOL_DATA(_data) (((_data)<<MDM_SHIFT_V110_SPEED)&MDM_MASK_V110_SPEED)\0"
	.byte	0x1
	.uleb128 0xd7
	.ascii "MDM_PROTOCOL_V110_1DOT2K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110,MDM_GEN_V110_PROTOCOL_DATA (MDM_V110_SPEED_1DOT2K))\0"
	.byte	0x1
	.uleb128 0xd8
	.ascii "MDM_PROTOCOL_V110_2DOT4K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110,MDM_GEN_V110_PROTOCOL_DATA (MDM_V110_SPEED_2DOT4K))\0"
	.byte	0x1
	.uleb128 0xd9
	.ascii "MDM_PROTOCOL_V110_4DOT8K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110,MDM_GEN_V110_PROTOCOL_DATA (MDM_V110_SPEED_4DOT8K))\0"
	.byte	0x1
	.uleb128 0xda
	.ascii "MDM_PROTOCOL_V110_9DOT6K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110,MDM_GEN_V110_PROTOCOL_DATA (MDM_V110_SPEED_9DOT6K))\0"
	.byte	0x1
	.uleb128 0xdb
	.ascii "MDM_PROTOCOL_V110_12DOT0K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110,MDM_GEN_V110_PROTOCOL_DATA (MDM_V110_SPEED_12DOT0K))\0"
	.byte	0x1
	.uleb128 0xdc
	.ascii "MDM_PROTOCOL_V110_14DOT4K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110,MDM_GEN_V110_PROTOCOL_DATA (MDM_V110_SPEED_14DOT4K))\0"
	.byte	0x1
	.uleb128 0xdd
	.ascii "MDM_PROTOCOL_V110_19DOT2K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110,MDM_GEN_V110_PROTOCOL_DATA (MDM_V110_SPEED_19DOT2K))\0"
	.byte	0x1
	.uleb128 0xde
	.ascii "MDM_PROTOCOL_V110_28DOT8K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110,MDM_GEN_V110_PROTOCOL_DATA (MDM_V110_SPEED_28DOT8K))\0"
	.byte	0x1
	.uleb128 0xdf
	.ascii "MDM_PROTOCOL_V110_38DOT4K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110,MDM_GEN_V110_PROTOCOL_DATA (MDM_V110_SPEED_38DOT4K))\0"
	.byte	0x1
	.uleb128 0xe0
	.ascii "MDM_PROTOCOL_V110_57DOT6K MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_V110,MDM_GEN_V110_PROTOCOL_DATA (MDM_V110_SPEED_57DOT6K))\0"
	.byte	0x1
	.uleb128 0xe2
	.ascii "MDM_SHIFT_AUTO_SPEED 0x0\0"
	.byte	0x1
	.uleb128 0xe3
	.ascii "MDM_MASK_AUTO_SPEED 0x7\0"
	.byte	0x1
	.uleb128 0xe4
	.ascii "MDM_AUTO_SPEED_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "MDM_SHIFT_AUTO_ML 0x6\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "MDM_MASK_AUTO_ML (0x3<<6)\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "MDM_AUTO_ML_DEFAULT 0x0\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "MDM_AUTO_ML_NONE 0x1\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "MDM_AUTO_ML_2 0x2\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "MDM_GEN_AUTO_PROTOCOL_DATA(_speed,_ml) ((((_speed)<<MDM_SHIFT_AUTO_SPEED)&MDM_MASK_AUTO_SPEED) |(((_ml)<<MDM_SHIFT_AUTO_ML)&MDM_MASK_AUTO_ML))\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "MDM_PROTOCOL_AUTO_1CH MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_AUTO,MDM_GEN_AUTO_PROTOCOL_DATA (MDM_AUTO_SPEED_DEFAULT,MDM_AUTO_ML_NONE))\0"
	.byte	0x1
	.uleb128 0xef
	.ascii "MDM_PROTOCOL_AUTO_2CH MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_AUTO,MDM_GEN_AUTO_PROTOCOL_DATA (MDM_AUTO_SPEED_DEFAULT,MDM_AUTO_ML_2))\0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "MDM_ANALOG_RLP_ON 0x0\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "MDM_ANALOG_RLP_OFF 0x1\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "MDM_ANALOG_V34 0x2\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "MDM_GEN_ANALOG_PROTOCOL_DATA(_rlp) (_rlp)\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "MDM_PROTOCOL_ANALOG_RLP MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_ANALOG,MDM_GEN_ANALOG_PROTOCOL_DATA (MDM_ANALOG_RLP_ON))\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "MDM_PROTOCOL_ANALOG_NRLP MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_ANALOG,MDM_GEN_ANALOG_PROTOCOL_DATA (MDM_ANALOG_RLP_OFF))\0"
	.byte	0x1
	.uleb128 0xf9
	.ascii "MDM_PROTOCOL_ANALOG_V34 MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_ANALOG,MDM_GEN_ANALOG_PROTOCOL_DATA (MDM_ANALOG_V34))\0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "MDM_PROTOCOL_GPRS MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_GPRS,0)\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "MDM_PIAFS_INCOMING 0\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "MDM_PIAFS_OUTGOING 1\0"
	.byte	0x1
	.uleb128 0xff
	.ascii "MDM_PROTOCOL_PIAFS_INCOMING MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_PIAFS,MDM_PIAFS_INCOMING)\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "MDM_PROTOCOL_PIAFS_OUTGOING MDM_GEN_PROTOCOLINFO(MDM_PROTOCOLID_PIAFS,MDM_PIAFS_OUTGOING)\0"
	.byte	0x4
	.file 434 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/imm.h"
	.byte	0x3
	.uleb128 0x82
	.uleb128 0x1b2
	.byte	0x1
	.uleb128 0x7
	.ascii "_IMM_ \0"
	.byte	0x1
	.uleb128 0x10
	.ascii "_IMM_SDK_DEFINED_ \0"
	.byte	0x1
	.uleb128 0x4c
	.ascii "STYLE_DESCRIPTION_SIZE 32\0"
	.byte	0x1
	.uleb128 0x5d
	.ascii "IMEMENUITEM_STRING_SIZE 80\0"
	.byte	0x1
	.uleb128 0x86
	.ascii "ImmInstallIME __MINGW_NAME_AW(ImmInstallIME)\0"
	.byte	0x1
	.uleb128 0x87
	.ascii "ImmGetDescription __MINGW_NAME_AW(ImmGetDescription)\0"
	.byte	0x1
	.uleb128 0x88
	.ascii "ImmGetIMEFileName __MINGW_NAME_AW(ImmGetIMEFileName)\0"
	.byte	0x1
	.uleb128 0x89
	.ascii "ImmGetCompositionString __MINGW_NAME_AW(ImmGetCompositionString)\0"
	.byte	0x1
	.uleb128 0x8a
	.ascii "ImmSetCompositionString __MINGW_NAME_AW(ImmSetCompositionString)\0"
	.byte	0x1
	.uleb128 0x8b
	.ascii "ImmGetCandidateListCount __MINGW_NAME_AW(ImmGetCandidateListCount)\0"
	.byte	0x1
	.uleb128 0x8c
	.ascii "ImmGetCandidateList __MINGW_NAME_AW(ImmGetCandidateList)\0"
	.byte	0x1
	.uleb128 0x8d
	.ascii "ImmGetGuideLine __MINGW_NAME_AW(ImmGetGuideLine)\0"
	.byte	0x1
	.uleb128 0xb0
	.ascii "ImmGetCompositionFont __MINGW_NAME_AW(ImmGetCompositionFont)\0"
	.byte	0x1
	.uleb128 0xb1
	.ascii "ImmSetCompositionFont __MINGW_NAME_AW(ImmSetCompositionFont)\0"
	.byte	0x1
	.uleb128 0xbc
	.ascii "REGISTERWORDENUMPROC __MINGW_NAME_AW(REGISTERWORDENUMPROC)\0"
	.byte	0x1
	.uleb128 0xbd
	.ascii "ImmConfigureIME __MINGW_NAME_AW(ImmConfigureIME)\0"
	.byte	0x1
	.uleb128 0xbe
	.ascii "ImmEscape __MINGW_NAME_AW(ImmEscape)\0"
	.byte	0x1
	.uleb128 0xbf
	.ascii "ImmGetConversionList __MINGW_NAME_AW(ImmGetConversionList)\0"
	.byte	0x1
	.uleb128 0xc0
	.ascii "ImmIsUIMessage __MINGW_NAME_AW(ImmIsUIMessage)\0"
	.byte	0x1
	.uleb128 0xc1
	.ascii "ImmRegisterWord __MINGW_NAME_AW(ImmRegisterWord)\0"
	.byte	0x1
	.uleb128 0xc2
	.ascii "ImmUnregisterWord __MINGW_NAME_AW(ImmUnregisterWord)\0"
	.byte	0x1
	.uleb128 0xc3
	.ascii "ImmGetRegisterWordStyle __MINGW_NAME_AW(ImmGetRegisterWordStyle)\0"
	.byte	0x1
	.uleb128 0xc4
	.ascii "ImmEnumRegisterWord __MINGW_NAME_AW(ImmEnumRegisterWord)\0"
	.byte	0x1
	.uleb128 0xc5
	.ascii "ImmGetImeMenuItems __MINGW_NAME_AW(ImmGetImeMenuItems)\0"
	.byte	0x1
	.uleb128 0xe5
	.ascii "IMC_GETCANDIDATEPOS 0x0007\0"
	.byte	0x1
	.uleb128 0xe6
	.ascii "IMC_SETCANDIDATEPOS 0x0008\0"
	.byte	0x1
	.uleb128 0xe7
	.ascii "IMC_GETCOMPOSITIONFONT 0x0009\0"
	.byte	0x1
	.uleb128 0xe8
	.ascii "IMC_SETCOMPOSITIONFONT 0x000A\0"
	.byte	0x1
	.uleb128 0xe9
	.ascii "IMC_GETCOMPOSITIONWINDOW 0x000B\0"
	.byte	0x1
	.uleb128 0xea
	.ascii "IMC_SETCOMPOSITIONWINDOW 0x000C\0"
	.byte	0x1
	.uleb128 0xeb
	.ascii "IMC_GETSTATUSWINDOWPOS 0x000F\0"
	.byte	0x1
	.uleb128 0xec
	.ascii "IMC_SETSTATUSWINDOWPOS 0x0010\0"
	.byte	0x1
	.uleb128 0xed
	.ascii "IMC_CLOSESTATUSWINDOW 0x0021\0"
	.byte	0x1
	.uleb128 0xee
	.ascii "IMC_OPENSTATUSWINDOW 0x0022\0"
	.byte	0x1
	.uleb128 0xf0
	.ascii "NI_OPENCANDIDATE 0x0010\0"
	.byte	0x1
	.uleb128 0xf1
	.ascii "NI_CLOSECANDIDATE 0x0011\0"
	.byte	0x1
	.uleb128 0xf2
	.ascii "NI_SELECTCANDIDATESTR 0x0012\0"
	.byte	0x1
	.uleb128 0xf3
	.ascii "NI_CHANGECANDIDATELIST 0x0013\0"
	.byte	0x1
	.uleb128 0xf4
	.ascii "NI_FINALIZECONVERSIONRESULT 0x0014\0"
	.byte	0x1
	.uleb128 0xf5
	.ascii "NI_COMPOSITIONSTR 0x0015\0"
	.byte	0x1
	.uleb128 0xf6
	.ascii "NI_SETCANDIDATE_PAGESTART 0x0016\0"
	.byte	0x1
	.uleb128 0xf7
	.ascii "NI_SETCANDIDATE_PAGESIZE 0x0017\0"
	.byte	0x1
	.uleb128 0xf8
	.ascii "NI_IMEMENUSELECTED 0x0018\0"
	.byte	0x1
	.uleb128 0xfa
	.ascii "ISC_SHOWUICANDIDATEWINDOW 0x00000001\0"
	.byte	0x1
	.uleb128 0xfb
	.ascii "ISC_SHOWUICOMPOSITIONWINDOW 0x80000000\0"
	.byte	0x1
	.uleb128 0xfc
	.ascii "ISC_SHOWUIGUIDELINE 0x40000000\0"
	.byte	0x1
	.uleb128 0xfd
	.ascii "ISC_SHOWUIALLCANDIDATEWINDOW 0x0000000F\0"
	.byte	0x1
	.uleb128 0xfe
	.ascii "ISC_SHOWUIALL 0xC000000F\0"
	.byte	0x1
	.uleb128 0x100
	.ascii "CPS_COMPLETE 0x0001\0"
	.byte	0x1
	.uleb128 0x101
	.ascii "CPS_CONVERT 0x0002\0"
	.byte	0x1
	.uleb128 0x102
	.ascii "CPS_REVERT 0x0003\0"
	.byte	0x1
	.uleb128 0x103
	.ascii "CPS_CANCEL 0x0004\0"
	.byte	0x1
	.uleb128 0x105
	.ascii "MOD_ALT 0x0001\0"
	.byte	0x1
	.uleb128 0x106
	.ascii "MOD_CONTROL 0x0002\0"
	.byte	0x1
	.uleb128 0x107
	.ascii "MOD_SHIFT 0x0004\0"
	.byte	0x1
	.uleb128 0x109
	.ascii "MOD_LEFT 0x8000\0"
	.byte	0x1
	.uleb128 0x10a
	.ascii "MOD_RIGHT 0x4000\0"
	.byte	0x1
	.uleb128 0x10c
	.ascii "MOD_ON_KEYUP 0x0800\0"
	.byte	0x1
	.uleb128 0x10d
	.ascii "MOD_IGNORE_ALL_MODIFIER 0x0400\0"
	.byte	0x1
	.uleb128 0x10f
	.ascii "IME_CHOTKEY_IME_NONIME_TOGGLE 0x10\0"
	.byte	0x1
	.uleb128 0x110
	.ascii "IME_CHOTKEY_SHAPE_TOGGLE 0x11\0"
	.byte	0x1
	.uleb128 0x111
	.ascii "IME_CHOTKEY_SYMBOL_TOGGLE 0x12\0"
	.byte	0x1
	.uleb128 0x113
	.ascii "IME_JHOTKEY_CLOSE_OPEN 0x30\0"
	.byte	0x1
	.uleb128 0x115
	.ascii "IME_KHOTKEY_SHAPE_TOGGLE 0x50\0"
	.byte	0x1
	.uleb128 0x116
	.ascii "IME_KHOTKEY_HANJACONVERT 0x51\0"
	.byte	0x1
	.uleb128 0x117
	.ascii "IME_KHOTKEY_ENGLISH 0x52\0"
	.byte	0x1
	.uleb128 0x119
	.ascii "IME_THOTKEY_IME_NONIME_TOGGLE 0x70\0"
	.byte	0x1
	.uleb128 0x11a
	.ascii "IME_THOTKEY_SHAPE_TOGGLE 0x71\0"
	.byte	0x1
	.uleb128 0x11b
	.ascii "IME_THOTKEY_SYMBOL_TOGGLE 0x72\0"
	.byte	0x1
	.uleb128 0x11d
	.ascii "IME_HOTKEY_DSWITCH_FIRST 0x100\0"
	.byte	0x1
	.uleb128 0x11e
	.ascii "IME_HOTKEY_DSWITCH_LAST 0x11F\0"
	.byte	0x1
	.uleb128 0x120
	.ascii "IME_HOTKEY_PRIVATE_FIRST 0x200\0"
	.byte	0x1
	.uleb128 0x121
	.ascii "IME_ITHOTKEY_RESEND_RESULTSTR 0x200\0"
	.byte	0x1
	.uleb128 0x122
	.ascii "IME_ITHOTKEY_PREVIOUS_COMPOSITION 0x201\0"
	.byte	0x1
	.uleb128 0x123
	.ascii "IME_ITHOTKEY_UISTYLE_TOGGLE 0x202\0"
	.byte	0x1
	.uleb128 0x124
	.ascii "IME_ITHOTKEY_RECONVERTSTRING 0x203\0"
	.byte	0x1
	.uleb128 0x125
	.ascii "IME_HOTKEY_PRIVATE_LAST 0x21F\0"
	.byte	0x1
	.uleb128 0x127
	.ascii "GCS_COMPREADSTR 0x0001\0"
	.byte	0x1
	.uleb128 0x128
	.ascii "GCS_COMPREADATTR 0x0002\0"
	.byte	0x1
	.uleb128 0x129
	.ascii "GCS_COMPREADCLAUSE 0x0004\0"
	.byte	0x1
	.uleb128 0x12a
	.ascii "GCS_COMPSTR 0x0008\0"
	.byte	0x1
	.uleb128 0x12b
	.ascii "GCS_COMPATTR 0x0010\0"
	.byte	0x1
	.uleb128 0x12c
	.ascii "GCS_COMPCLAUSE 0x0020\0"
	.byte	0x1
	.uleb128 0x12d
	.ascii "GCS_CURSORPOS 0x0080\0"
	.byte	0x1
	.uleb128 0x12e
	.ascii "GCS_DELTASTART 0x0100\0"
	.byte	0x1
	.uleb128 0x12f
	.ascii "GCS_RESULTREADSTR 0x0200\0"
	.byte	0x1
	.uleb128 0x130
	.ascii "GCS_RESULTREADCLAUSE 0x0400\0"
	.byte	0x1
	.uleb128 0x131
	.ascii "GCS_RESULTSTR 0x0800\0"
	.byte	0x1
	.uleb128 0x132
	.ascii "GCS_RESULTCLAUSE 0x1000\0"
	.byte	0x1
	.uleb128 0x134
	.ascii "CS_INSERTCHAR 0x2000\0"
	.byte	0x1
	.uleb128 0x135
	.ascii "CS_NOMOVECARET 0x4000\0"
	.byte	0x1
	.uleb128 0x137
	.ascii "IMEVER_0310 0x0003000A\0"
	.byte	0x1
	.uleb128 0x138
	.ascii "IMEVER_0400 0x00040000\0"
	.byte	0x1
	.uleb128 0x13a
	.ascii "IME_PROP_AT_CARET 0x00010000\0"
	.byte	0x1
	.uleb128 0x13b
	.ascii "IME_PROP_SPECIAL_UI 0x00020000\0"
	.byte	0x1
	.uleb128 0x13c
	.ascii "IME_PROP_CANDLIST_START_FROM_1 0x00040000\0"
	.byte	0x1
	.uleb128 0x13d
	.ascii "IME_PROP_UNICODE 0x00080000\0"
	.byte	0x1
	.uleb128 0x13e
	.ascii "IME_PROP_COMPLETE_ON_UNSELECT 0x00100000\0"
	.byte	0x1
	.uleb128 0x140
	.ascii "UI_CAP_2700 0x00000001\0"
	.byte	0x1
	.uleb128 0x141
	.ascii "UI_CAP_ROT90 0x00000002\0"
	.byte	0x1
	.uleb128 0x142
	.ascii "UI_CAP_ROTANY 0x00000004\0"
	.byte	0x1
	.uleb128 0x144
	.ascii "SCS_CAP_COMPSTR 0x00000001\0"
	.byte	0x1
	.uleb128 0x145
	.ascii "SCS_CAP_MAKEREAD 0x00000002\0"
	.byte	0x1
	.uleb128 0x146
	.ascii "SCS_CAP_SETRECONVERTSTRING 0x00000004\0"
	.byte	0x1
	.uleb128 0x148
	.ascii "SELECT_CAP_CONVERSION 0x00000001\0"
	.byte	0x1
	.uleb128 0x149
	.ascii "SELECT_CAP_SENTENCE 0x00000002\0"
	.byte	0x1
	.uleb128 0x14b
	.ascii "GGL_LEVEL 0x00000001\0"
	.byte	0x1
	.uleb128 0x14c
	.ascii "GGL_INDEX 0x00000002\0"
	.byte	0x1
	.uleb128 0x14d
	.ascii "GGL_STRING 0x00000003\0"
	.byte	0x1
	.uleb128 0x14e
	.ascii "GGL_PRIVATE 0x00000004\0"
	.byte	0x1
	.uleb128 0x150
	.ascii "GL_LEVEL_NOGUIDELINE 0x00000000\0"
	.byte	0x1
	.uleb128 0x151
	.ascii "GL_LEVEL_FATAL 0x00000001\0"
	.byte	0x1
	.uleb128 0x152
	.ascii "GL_LEVEL_ERROR 0x00000002\0"
	.byte	0x1
	.uleb128 0x153
	.ascii "GL_LEVEL_WARNING 0x00000003\0"
	.byte	0x1
	.uleb128 0x154
	.ascii "GL_LEVEL_INFORMATION 0x00000004\0"
	.byte	0x1
	.uleb128 0x156
	.ascii "GL_ID_UNKNOWN 0x00000000\0"
	.byte	0x1
	.uleb128 0x157
	.ascii "GL_ID_NOMODULE 0x00000001\0"
	.byte	0x1
	.uleb128 0x158
	.ascii "GL_ID_NODICTIONARY 0x00000010\0"
	.byte	0x1
	.uleb128 0x159
	.ascii "GL_ID_CANNOTSAVE 0x00000011\0"
	.byte	0x1
	.uleb128 0x15a
	.ascii "GL_ID_NOCONVERT 0x00000020\0"
	.byte	0x1
	.uleb128 0x15b
	.ascii "GL_ID_TYPINGERROR 0x00000021\0"
	.byte	0x1
	.uleb128 0x15c
	.ascii "GL_ID_TOOMANYSTROKE 0x00000022\0"
	.byte	0x1
	.uleb128 0x15d
	.ascii "GL_ID_READINGCONFLICT 0x00000023\0"
	.byte	0x1
	.uleb128 0x15e
	.ascii "GL_ID_INPUTREADING 0x00000024\0"
	.byte	0x1
	.uleb128 0x15f
	.ascii "GL_ID_INPUTRADICAL 0x00000025\0"
	.byte	0x1
	.uleb128 0x160
	.ascii "GL_ID_INPUTCODE 0x00000026\0"
	.byte	0x1
	.uleb128 0x161
	.ascii "GL_ID_INPUTSYMBOL 0x00000027\0"
	.byte	0x1
	.uleb128 0x162
	.ascii "GL_ID_CHOOSECANDIDATE 0x00000028\0"
	.byte	0x1
	.uleb128 0x163
	.ascii "GL_ID_REVERSECONVERSION 0x00000029\0"
	.byte	0x1
	.uleb128 0x164
	.ascii "GL_ID_PRIVATE_FIRST 0x00008000\0"
	.byte	0x1
	.uleb128 0x165
	.ascii "GL_ID_PRIVATE_LAST 0x0000FFFF\0"
	.byte	0x1
	.uleb128 0x167
	.ascii "IGP_GETIMEVERSION (DWORD)(-4)\0"
	.byte	0x1
	.uleb128 0x168
	.ascii "IGP_PROPERTY 0x00000004\0"
	.byte	0x1
	.uleb128 0x169
	.ascii "IGP_CONVERSION 0x00000008\0"
	.byte	0x1
	.uleb128 0x16a
	.ascii "IGP_SENTENCE 0x0000000c\0"
	.byte	0x1
	.uleb128 0x16b
	.ascii "IGP_UI 0x00000010\0"
	.byte	0x1
	.uleb128 0x16c
	.ascii "IGP_SETCOMPSTR 0x00000014\0"
	.byte	0x1
	.uleb128 0x16d
	.ascii "IGP_SELECT 0x00000018\0"
	.byte	0x1
	.uleb128 0x16f
	.ascii "SCS_SETSTR (GCS_COMPREADSTR|GCS_COMPSTR)\0"
	.byte	0x1
	.uleb128 0x170
	.ascii "SCS_CHANGEATTR (GCS_COMPREADATTR|GCS_COMPATTR)\0"
	.byte	0x1
	.uleb128 0x171
	.ascii "SCS_CHANGECLAUSE (GCS_COMPREADCLAUSE|GCS_COMPCLAUSE)\0"
	.byte	0x1
	.uleb128 0x172
	.ascii "SCS_SETRECONVERTSTRING 0x00010000\0"
	.byte	0x1
	.uleb128 0x173
	.ascii "SCS_QUERYRECONVERTSTRING 0x00020000\0"
	.byte	0x1
	.uleb128 0x175
	.ascii "ATTR_INPUT 0x00\0"
	.byte	0x1
	.uleb128 0x176
	.ascii "ATTR_TARGET_CONVERTED 0x01\0"
	.byte	0x1
	.uleb128 0x177
	.ascii "ATTR_CONVERTED 0x02\0"
	.byte	0x1
	.uleb128 0x178
	.ascii "ATTR_TARGET_NOTCONVERTED 0x03\0"
	.byte	0x1
	.uleb128 0x179
	.ascii "ATTR_INPUT_ERROR 0x04\0"
	.byte	0x1
	.uleb128 0x17a
	.ascii "ATTR_FIXEDCONVERTED 0x05\0"
	.byte	0x1
	.uleb128 0x17c
	.ascii "CFS_DEFAULT 0x0000\0"
	.byte	0x1
	.uleb128 0x17d
	.ascii "CFS_RECT 0x0001\0"
	.byte	0x1
	.uleb128 0x17e
	.ascii "CFS_POINT 0x0002\0"
	.byte	0x1
	.uleb128 0x17f
	.ascii "CFS_FORCE_POSITION 0x0020\0"
	.byte	0x1
	.uleb128 0x180
	.ascii "CFS_CANDIDATEPOS 0x0040\0"
	.byte	0x1
	.uleb128 0x181
	.ascii "CFS_EXCLUDE 0x0080\0"
	.byte	0x1
	.uleb128 0x183
	.ascii "GCL_CONVERSION 0x0001\0"
	.byte	0x1
	.uleb128 0x184
	.ascii "GCL_REVERSECONVERSION 0x0002\0"
	.byte	0x1
	.uleb128 0x185
	.ascii "GCL_REVERSE_LENGTH 0x0003\0"
	.byte	0x1
	.uleb128 0x187
	.ascii "IME_CMODE_ALPHANUMERIC 0x0000\0"
	.byte	0x1
	.uleb128 0x188
	.ascii "IME_CMODE_NATIVE 0x0001\0"
	.byte	0x1
	.uleb128 0x189
	.ascii "IME_CMODE_CHINESE IME_CMODE_NATIVE\0"
	.byte	0x1
	.uleb128 0x18b
	.ascii "IME_CMODE_HANGEUL IME_CMODE_NATIVE\0"
	.byte	0x1
	.uleb128 0x18c
	.ascii "IME_CMODE_HANGUL IME_CMODE_NATIVE\0"
	.byte	0x1
	.uleb128 0x18d
	.ascii "IME_CMODE_JAPANESE IME_CMODE_NATIVE\0"
	.byte	0x1
	.uleb128 0x18e
	.ascii "IME_CMODE_KATAKANA 0x0002\0"
	.byte	0x1
	.uleb128 0x18f
	.ascii "IME_CMODE_LANGUAGE 0x0003\0"
	.byte	0x1
	.uleb128 0x190
	.ascii "IME_CMODE_FULLSHAPE 0x0008\0"
	.byte	0x1
	.uleb128 0x191
	.ascii "IME_CMODE_ROMAN 0x0010\0"
	.byte	0x1
	.uleb128 0x192
	.ascii "IME_CMODE_CHARCODE 0x0020\0"
	.byte	0x1
	.uleb128 0x193
	.ascii "IME_CMODE_HANJACONVERT 0x0040\0"
	.byte	0x1
	.uleb128 0x194
	.ascii "IME_CMODE_SOFTKBD 0x0080\0"
	.byte	0x1
	.uleb128 0x195
	.ascii "IME_CMODE_NOCONVERSION 0x0100\0"
	.byte	0x1
	.uleb128 0x196
	.ascii "IME_CMODE_EUDC 0x0200\0"
	.byte	0x1
	.uleb128 0x197
	.ascii "IME_CMODE_SYMBOL 0x0400\0"
	.byte	0x1
	.uleb128 0x198
	.ascii "IME_CMODE_FIXED 0x0800\0"
	.byte	0x1
	.uleb128 0x199
	.ascii "IME_CMODE_RESERVED 0xF0000000\0"
	.byte	0x1
	.uleb128 0x19b
	.ascii "IME_SMODE_NONE 0x0000\0"
	.byte	0x1
	.uleb128 0x19c
	.ascii "IME_SMODE_PLAURALCLAUSE 0x0001\0"
	.byte	0x1
	.uleb128 0x19d
	.ascii "IME_SMODE_SINGLECONVERT 0x0002\0"
	.byte	0x1
	.uleb128 0x19e
	.ascii "IME_SMODE_AUTOMATIC 0x0004\0"
	.byte	0x1
	.uleb128 0x19f
	.ascii "IME_SMODE_PHRASEPREDICT 0x0008\0"
	.byte	0x1
	.uleb128 0x1a0
	.ascii "IME_SMODE_CONVERSATION 0x0010\0"
	.byte	0x1
	.uleb128 0x1a1
	.ascii "IME_SMODE_RESERVED 0x0000F000\0"
	.byte	0x1
	.uleb128 0x1a3
	.ascii "IME_CAND_UNKNOWN 0x0000\0"
	.byte	0x1
	.uleb128 0x1a4
	.ascii "IME_CAND_READ 0x0001\0"
	.byte	0x1
	.uleb128 0x1a5
	.ascii "IME_CAND_CODE 0x0002\0"
	.byte	0x1
	.uleb128 0x1a6
	.ascii "IME_CAND_MEANING 0x0003\0"
	.byte	0x1
	.uleb128 0x1a7
	.ascii "IME_CAND_RADICAL 0x0004\0"
	.byte	0x1
	.uleb128 0x1a8
	.ascii "IME_CAND_STROKE 0x0005\0"
	.byte	0x1
	.uleb128 0x1aa
	.ascii "IMN_CLOSESTATUSWINDOW 0x0001\0"
	.byte	0x1
	.uleb128 0x1ab
	.ascii "IMN_OPENSTATUSWINDOW 0x0002\0"
	.byte	0x1
	.uleb128 0x1ac
	.ascii "IMN_CHANGECANDIDATE 0x0003\0"
	.byte	0x1
	.uleb128 0x1ad
	.ascii "IMN_CLOSECANDIDATE 0x0004\0"
	.byte	0x1
	.uleb128 0x1ae
	.ascii "IMN_OPENCANDIDATE 0x0005\0"
	.byte	0x1
	.uleb128 0x1af
	.ascii "IMN_SETCONVERSIONMODE 0x0006\0"
	.byte	0x1
	.uleb128 0x1b0
	.ascii "IMN_SETSENTENCEMODE 0x0007\0"
	.byte	0x1
	.uleb128 0x1b1
	.ascii "IMN_SETOPENSTATUS 0x0008\0"
	.byte	0x1
	.uleb128 0x1b2
	.ascii "IMN_SETCANDIDATEPOS 0x0009\0"
	.byte	0x1
	.uleb128 0x1b3
	.ascii "IMN_SETCOMPOSITIONFONT 0x000A\0"
	.byte	0x1
	.uleb128 0x1b4
	.ascii "IMN_SETCOMPOSITIONWINDOW 0x000B\0"
	.byte	0x1
	.uleb128 0x1b5
	.ascii "IMN_SETSTATUSWINDOWPOS 0x000C\0"
	.byte	0x1
	.uleb128 0x1b6
	.ascii "IMN_GUIDELINE 0x000D\0"
	.byte	0x1
	.uleb128 0x1b7
	.ascii "IMN_PRIVATE 0x000E\0"
	.byte	0x1
	.uleb128 0x1b9
	.ascii "IMR_COMPOSITIONWINDOW 0x0001\0"
	.byte	0x1
	.uleb128 0x1ba
	.ascii "IMR_CANDIDATEWINDOW 0x0002\0"
	.byte	0x1
	.uleb128 0x1bb
	.ascii "IMR_COMPOSITIONFONT 0x0003\0"
	.byte	0x1
	.uleb128 0x1bc
	.ascii "IMR_RECONVERTSTRING 0x0004\0"
	.byte	0x1
	.uleb128 0x1bd
	.ascii "IMR_CONFIRMRECONVERTSTRING 0x0005\0"
	.byte	0x1
	.uleb128 0x1be
	.ascii "IMR_QUERYCHARPOSITION 0x0006\0"
	.byte	0x1
	.uleb128 0x1bf
	.ascii "IMR_DOCUMENTFEED 0x0007\0"
	.byte	0x1
	.uleb128 0x1c1
	.ascii "IMM_ERROR_NODATA (-1)\0"
	.byte	0x1
	.uleb128 0x1c2
	.ascii "IMM_ERROR_GENERAL (-2)\0"
	.byte	0x1
	.uleb128 0x1c4
	.ascii "IME_CONFIG_GENERAL 1\0"
	.byte	0x1
	.uleb128 0x1c5
	.ascii "IME_CONFIG_REGISTERWORD 2\0"
	.byte	0x1
	.uleb128 0x1c6
	.ascii "IME_CONFIG_SELECTDICTIONARY 3\0"
	.byte	0x1
	.uleb128 0x1c8
	.ascii "IME_ESC_QUERY_SUPPORT 0x0003\0"
	.byte	0x1
	.uleb128 0x1c9
	.ascii "IME_ESC_RESERVED_FIRST 0x0004\0"
	.byte	0x1
	.uleb128 0x1ca
	.ascii "IME_ESC_RESERVED_LAST 0x07FF\0"
	.byte	0x1
	.uleb128 0x1cb
	.ascii "IME_ESC_PRIVATE_FIRST 0x0800\0"
	.byte	0x1
	.uleb128 0x1cc
	.ascii "IME_ESC_PRIVATE_LAST 0x0FFF\0"
	.byte	0x1
	.uleb128 0x1ce
	.ascii "IME_ESC_SEQUENCE_TO_INTERNAL 0x1001\0"
	.byte	0x1
	.uleb128 0x1cf
	.ascii "IME_ESC_GET_EUDC_DICTIONARY 0x1003\0"
	.byte	0x1
	.uleb128 0x1d0
	.ascii "IME_ESC_SET_EUDC_DICTIONARY 0x1004\0"
	.byte	0x1
	.uleb128 0x1d1
	.ascii "IME_ESC_MAX_KEY 0x1005\0"
	.byte	0x1
	.uleb128 0x1d2
	.ascii "IME_ESC_IME_NAME 0x1006\0"
	.byte	0x1
	.uleb128 0x1d3
	.ascii "IME_ESC_SYNC_HOTKEY 0x1007\0"
	.byte	0x1
	.uleb128 0x1d4
	.ascii "IME_ESC_HANJA_MODE 0x1008\0"
	.byte	0x1
	.uleb128 0x1d5
	.ascii "IME_ESC_AUTOMATA 0x1009\0"
	.byte	0x1
	.uleb128 0x1d6
	.ascii "IME_ESC_PRIVATE_HOTKEY 0x100a\0"
	.byte	0x1
	.uleb128 0x1d7
	.ascii "IME_ESC_GETHELPFILENAME 0x100b\0"
	.byte	0x1
	.uleb128 0x1d9
	.ascii "IME_REGWORD_STYLE_EUDC 0x00000001\0"
	.byte	0x1
	.uleb128 0x1da
	.ascii "IME_REGWORD_STYLE_USER_FIRST 0x80000000\0"
	.byte	0x1
	.uleb128 0x1db
	.ascii "IME_REGWORD_STYLE_USER_LAST 0xFFFFFFFF\0"
	.byte	0x1
	.uleb128 0x1dd
	.ascii "IACE_CHILDREN 0x0001\0"
	.byte	0x1
	.uleb128 0x1de
	.ascii "IACE_DEFAULT 0x0010\0"
	.byte	0x1
	.uleb128 0x1df
	.ascii "IACE_IGNORENOCONTEXT 0x0020\0"
	.byte	0x1
	.uleb128 0x1e1
	.ascii "IGIMIF_RIGHTMENU 0x0001\0"
	.byte	0x1
	.uleb128 0x1e3
	.ascii "IGIMII_CMODE 0x0001\0"
	.byte	0x1
	.uleb128 0x1e4
	.ascii "IGIMII_SMODE 0x0002\0"
	.byte	0x1
	.uleb128 0x1e5
	.ascii "IGIMII_CONFIGURE 0x0004\0"
	.byte	0x1
	.uleb128 0x1e6
	.ascii "IGIMII_TOOLS 0x0008\0"
	.byte	0x1
	.uleb128 0x1e7
	.ascii "IGIMII_HELP 0x0010\0"
	.byte	0x1
	.uleb128 0x1e8
	.ascii "IGIMII_OTHER 0x0020\0"
	.byte	0x1
	.uleb128 0x1e9
	.ascii "IGIMII_INPUTTOOLS 0x0040\0"
	.byte	0x1
	.uleb128 0x1eb
	.ascii "IMFT_RADIOCHECK 0x00001\0"
	.byte	0x1
	.uleb128 0x1ec
	.ascii "IMFT_SEPARATOR 0x00002\0"
	.byte	0x1
	.uleb128 0x1ed
	.ascii "IMFT_SUBMENU 0x00004\0"
	.byte	0x1
	.uleb128 0x1ef
	.ascii "IMFS_GRAYED MFS_GRAYED\0"
	.byte	0x1
	.uleb128 0x1f0
	.ascii "IMFS_DISABLED MFS_DISABLED\0"
	.byte	0x1
	.uleb128 0x1f1
	.ascii "IMFS_CHECKED MFS_CHECKED\0"
	.byte	0x1
	.uleb128 0x1f2
	.ascii "IMFS_HILITE MFS_HILITE\0"
	.byte	0x1
	.uleb128 0x1f3
	.ascii "IMFS_ENABLED MFS_ENABLED\0"
	.byte	0x1
	.uleb128 0x1f4
	.ascii "IMFS_UNCHECKED MFS_UNCHECKED\0"
	.byte	0x1
	.uleb128 0x1f5
	.ascii "IMFS_UNHILITE MFS_UNHILITE\0"
	.byte	0x1
	.uleb128 0x1f6
	.ascii "IMFS_DEFAULT MFS_DEFAULT\0"
	.byte	0x1
	.uleb128 0x1f8
	.ascii "SOFTKEYBOARD_TYPE_T1 0x0001\0"
	.byte	0x1
	.uleb128 0x1f9
	.ascii "SOFTKEYBOARD_TYPE_C1 0x0002\0"
	.byte	0x4
	.byte	0x4
	.file 435 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/conio.h"
	.byte	0x3
	.uleb128 0x3
	.uleb128 0x1b3
	.byte	0x1
	.uleb128 0x7
	.ascii "_INC_CONIO \0"
	.file 436 "C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/sec_api/conio_s.h"
	.byte	0x3
	.uleb128 0x7d
	.uleb128 0x1b4
	.byte	0x1
	.uleb128 0x8
	.ascii "_INC_CONIO_S \0"
	.byte	0x3
	.uleb128 0xa
	.uleb128 0x1b3
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4A__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4A__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AES__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AES__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__PCLMUL__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__PCLMUL__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX512F__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX512F__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX512F__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX512ER__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX512F__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX512ER__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX512F__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX512PF__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX512F__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX512PF__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX512F__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX512CD__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX512F__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX512CD__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SHA__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SHA__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__LZCNT__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__LZCNT__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__BMI__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__BMI__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__BMI2__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__BMI2__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__FMA__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__FMA__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__F16C__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__F16C__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__RTM__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__RTM__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__RTM__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__RTM__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__RDRND__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__RDRND__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__FSGSBASE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__FSGSBASE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__RDRND__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__RDRND__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__3dNOW__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__PRFCHW__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__3dNOW__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__PRFCHW__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4A__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__FMA4__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4A__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__FMA4__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSSE3__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_1__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4_2__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__AVX__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__SSE4A__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__FMA4__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XOP__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__POPCNT__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSSE3__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_1__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4_2__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__AVX__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__SSE4A__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__FMA4__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XOP__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__POPCNT__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__LWP__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__LWP__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__TBM__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__TBM__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__RDSEED__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__RDSEED__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVE__ 1\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__XSAVEOPT__ 1\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__code_model_medium__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVE__\0"
	.byte	0x2
	.uleb128 0x16e
	.ascii "__XSAVEOPT__\0"
	.byte	0x1
	.uleb128 0x16e
	.ascii "__code_model_medium__ 1\0"
	.byte	0x4
	.byte	0
	.section	.debug_line,"dr"
.Ldebug_line0:
	.section	.debug_str,"dr"
.LASF6:
	.ascii "size_type\0"
.LASF11:
	.ascii "iterator\0"
.LASF21:
	.ascii "replace\0"
.LASF12:
	.ascii "const_iterator\0"
.LASF9:
	.ascii "allocator\0"
.LASF40:
	.ascii "_Value\0"
.LASF33:
	.ascii "_Iterator\0"
.LASF46:
	.ascii "operator--\0"
.LASF3:
	.ascii "value\0"
.LASF48:
	.ascii "operator-=\0"
.LASF44:
	.ascii "operator->\0"
.LASF15:
	.ascii "basic_string\0"
.LASF19:
	.ascii "append\0"
.LASF38:
	.ascii "__is_signed\0"
.LASF28:
	.ascii "_Traits\0"
.LASF41:
	.ascii "_M_current\0"
.LASF51:
	.ascii "__max_digits10\0"
.LASF43:
	.ascii "operator*\0"
.LASF47:
	.ascii "operator+\0"
.LASF1:
	.ascii "operator=\0"
.LASF5:
	.ascii "assign\0"
.LASF35:
	.ascii "new_allocator\0"
.LASF23:
	.ascii "find_first_of\0"
.LASF22:
	.ascii "rfind\0"
.LASF42:
	.ascii "__normal_iterator\0"
.LASF45:
	.ascii "operator++\0"
.LASF17:
	.ascii "operator[]\0"
.LASF27:
	.ascii "_CharT\0"
.LASF20:
	.ascii "insert\0"
.LASF7:
	.ascii "reference\0"
.LASF2:
	.ascii "value_type\0"
.LASF18:
	.ascii "operator+=\0"
.LASF14:
	.ascii "_S_copy_chars\0"
.LASF37:
	.ascii "__max\0"
.LASF50:
	.ascii "_Container\0"
.LASF10:
	.ascii "_Alloc_hider\0"
.LASF4:
	.ascii "compare\0"
.LASF34:
	.ascii "operator|\0"
.LASF52:
	.ascii "__digits10\0"
.LASF8:
	.ascii "const_reference\0"
.LASF26:
	.ascii "find_last_not_of\0"
.LASF49:
	.ascii "operator-\0"
.LASF36:
	.ascii "__min\0"
.LASF32:
	.ascii "pointer\0"
.LASF0:
	.ascii "exception_ptr\0"
.LASF31:
	.ascii "difference_type\0"
.LASF25:
	.ascii "find_first_not_of\0"
.LASF16:
	.ascii "max_size\0"
.LASF30:
	.ascii "initializer_list\0"
.LASF24:
	.ascii "find_last_of\0"
.LASF53:
	.ascii "__max_exponent10\0"
.LASF39:
	.ascii "__digits\0"
.LASF13:
	.ascii "_S_empty_rep\0"
.LASF29:
	.ascii "_Alloc\0"
	.data
	.align 8
.LDFCM0:
	.quad	__gxx_personality_seh0
	.ident	"GCC: (tdm64-1) 4.9.2"
	.def	system;	.scl	2;	.type	32;	.endef
	.def	_ZNSaIcEC1Ev;	.scl	2;	.type	32;	.endef
	.def	_ZNSsC1EPKcRKSaIcE;	.scl	2;	.type	32;	.endef
	.def	_ZNSaIcED1Ev;	.scl	2;	.type	32;	.endef
	.def	_ZNSsaSEPKc;	.scl	2;	.type	32;	.endef
	.def	_ZNSsD1Ev;	.scl	2;	.type	32;	.endef
	.def	_ZdaPv;	.scl	2;	.type	32;	.endef
	.def	_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode;	.scl	2;	.type	32;	.endef
	.def	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc;	.scl	2;	.type	32;	.endef
	.def	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv;	.scl	2;	.type	32;	.endef
	.def	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev;	.scl	2;	.type	32;	.endef
	.def	_ZNSt18basic_stringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode;	.scl	2;	.type	32;	.endef
	.def	_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev;	.scl	2;	.type	32;	.endef
	.def	time;	.scl	2;	.type	32;	.endef
	.def	srand;	.scl	2;	.type	32;	.endef
	.def	rand;	.scl	2;	.type	32;	.endef
	.def	_ZNSsC1Ev;	.scl	2;	.type	32;	.endef
	.def	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode;	.scl	2;	.type	32;	.endef
	.def	_ZNSirsERi;	.scl	2;	.type	32;	.endef
	.def	_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_E;	.scl	2;	.type	32;	.endef
	.def	_ZNKSt9basic_iosIcSt11char_traitsIcEEcvPvEv;	.scl	2;	.type	32;	.endef
	.def	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv;	.scl	2;	.type	32;	.endef
	.def	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate;	.scl	2;	.type	32;	.endef
	.def	_ZNSolsEi;	.scl	2;	.type	32;	.endef
	.def	_ZNSi7getlineEPcx;	.scl	2;	.type	32;	.endef
	.def	_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv;	.scl	2;	.type	32;	.endef
	.def	_ZNSi4readEPcx;	.scl	2;	.type	32;	.endef
	.def	_ZNSolsEPFRSoS_E;	.scl	2;	.type	32;	.endef
	.def	_ZNSolsEd;	.scl	2;	.type	32;	.endef
	.def	_ZNSolsEPFRSt8ios_baseS0_E;	.scl	2;	.type	32;	.endef
	.def	_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St13_Setprecision;	.scl	2;	.type	32;	.endef
	.def	getch;	.scl	2;	.type	32;	.endef
	.def	_Znay;	.scl	2;	.type	32;	.endef
	.def	_ZNSo5writeEPKcx;	.scl	2;	.type	32;	.endef
	.def	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode;	.scl	2;	.type	32;	.endef
	.def	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E;	.scl	2;	.type	32;	.endef
	.def	_ZNSsaSERKSs;	.scl	2;	.type	32;	.endef
	.def	_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev;	.scl	2;	.type	32;	.endef
	.def	_ZNSt18basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev;	.scl	2;	.type	32;	.endef
	.def	_Unwind_Resume;	.scl	2;	.type	32;	.endef
	.def	_ZNKSs7compareEPKc;	.scl	2;	.type	32;	.endef
	.def	_ZNSs4swapERSs;	.scl	2;	.type	32;	.endef
	.def	_ZNSt8ios_base4InitD1Ev;	.scl	2;	.type	32;	.endef
	.def	_ZNSt8ios_base4InitC1Ev;	.scl	2;	.type	32;	.endef
	.def	atexit;	.scl	2;	.type	32;	.endef
	.section	.rdata$.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, "dr"
	.globl	.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
	.linkonce	discard
.refptr._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_:
	.quad	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
	.section	.rdata$.refptr._ZSt3cin, "dr"
	.globl	.refptr._ZSt3cin
	.linkonce	discard
.refptr._ZSt3cin:
	.quad	_ZSt3cin
	.section	.rdata$.refptr._ZSt4cout, "dr"
	.globl	.refptr._ZSt4cout
	.linkonce	discard
.refptr._ZSt4cout:
	.quad	_ZSt4cout
